"","Project","Commit id","Annotations added","Commit date","Commit message","Lines of code","File count","Comment count","authorName","authorEmail","committerName","committerEmail"
"1","spring-projects/spring-framework","a86a698e5b3394c9b6721a784c8fe251611ff16b",2,"2009-09-07 23:58:42+00:00","initial JSR-303 Bean Validation support; revised
ConversionService and FormatterRegistry
",244720,4070,196652,"Juergen Hoeller","jhoeller@vmware.com","Juergen Hoeller","jhoeller@vmware.com"
"2","spring-projects/spring-framework","d6f4f4c7b4d06dc3653d74c492645242f8eb76dc",2,"2009-12-15 18:04:44+00:00","BeanValidationPostProcessor runs in before-
initialization phase by default (SPR-6565)
",253907,4091,200147,"Juergen Hoeller","jhoeller@vmware.com","Juergen Hoeller","jhoeller@vmware.com"
"3","spring-projects/spring-framework","3a87d8e7cb37a22c71658dce08e5261c8e0736bf",1,"2011-06-28 19:22:33+00:00","SPR-8483 Add support for @RequestPart annotated
method parameters
",294889,4660,224654,"Rossen Stoyanchev","rstoyanchev@vmware.com","Rossen Stoyanchev","rstoyanchev@vmware.com"
"4","spring-projects/spring-framework","f4adf227bec552d15dbb493233b53d69bc17cd76",1,"2011-07-27 21:46:36+00:00","SPR-6464 Add @FlashAttributes annotation and
FlashStatus method argument
",299253,4704,226722,"Rossen Stoyanchev","rstoyanchev@vmware.com","Rossen Stoyanchev","rstoyanchev@vmware.com"
"5","spring-projects/spring-framework","49a2aaf023e2da5efb0ef49785499053ebd42c61",1,"2011-12-03 15:44:33+00:00","added SmartValidator interface with general
support for validation hints; added custom @Valid
annotation with support for JSR-303 validation
groups; JSR-303 SpringValidatorAdapter and MVC
data binding provide support for validation groups
(SPR-6373)
",305583,4767,230522,"Juergen Hoeller","jhoeller@vmware.com","Juergen Hoeller","jhoeller@vmware.com"
"6","spring-projects/spring-framework","e648245eb3e7a5baca8d2b281bd2d3a746ee9242",2,"2011-12-09 18:09:14+00:00","added MethodValidationInterceptor/PostProcessor
for Hibernate Validator 4.2 based method
validation; renamed Spring's variant of @Valid to
@Validated
",306474,4775,230974,"Juergen Hoeller","jhoeller@vmware.com","Juergen Hoeller","jhoeller@vmware.com"
"7","spring-projects/spring-framework","22bcb54ab66c952d1c122526729b64d77a77280b",1,"2012-09-28 17:15:01-05:00","Add Spring MVC Test framework  This commit adds
the spring-test-mvc project [1] to the Spring
Framework as part of the spring-test module.  The
sources are added as a root-level project called
""spring-test-mvc"" instead of under ""spring-test""
because the new sources need to be compiled with
Servlet 3 while the current ""spring-test"" sources
require Servlet 2.5 and the Eclipse IDE does not
support having different classpaths for the same
project.  The Gradle build produces a single
spring-test jar that contains sources from both
""spring-test"" and ""spring-test-mvc"". This merge is
made possible through merge-dist.gradle as
follows:  - jar tasks of the ""from"" project
execute tasks of the ""to"" project - ""to"" project
is added to the classpath of the ""from"" project -
""to"" project pom is updated with entries from the
""from"" project  For further details see
documentation in merge-dist.gradle.  Special
thanks to everyone who contributed to the initial
development of the Spring MVC Test framework:
Arjen Poutsma <poutsma@mac.com>  Craig Walls
<cwalls@vmware.com>  Frans Flippo
<fransflippo@utopia.orange11.nl>  Harry Lascelles
<harry@firstbanco.com>  Irfan
<mail.urfi@gmail.com>  J√∂rg Rathlev
<joerg.rathlev@s24.com>  Keesun Baik
<whiteship2000@gmail.com>  Keesun Baik
<whiteship@epril.com>  Matthew Reid
<matthew.reid@nakedwines.com>  Nils-Helge Garli
Hegvik <Nils-Helge.Hegvik@telenor.com>  Rob Winch
<rwinch@vmware.com>  Scott Frederick
<sfrederick@vmware.com>  Sven Filatov
<sven.filatov@gmail.com>  Thomas Bruyelle
<thomas.bruyelle@gmail.com>  youngm
<youngm@gmail.com>  [1]:
https://github.com/SpringSource/spring-test-mvc
Issue: SPR-9859, SPR-7951
",326370,5099,244632,"Rob Winch","rwinch@vmware.com","Rossen Stoyanchev","rstoyanchev@vmware.com"
"8","spring-projects/spring-framework","5e3edc667e4b71b8a1468957e578e9ec11a7ab9f",1,"2014-11-24 23:42:48+01:00","Support @Validated at method level for overriding
validation groups  Issue: SPR-9174
",400317,5893,276674,"Juergen Hoeller","jhoeller@vmware.com","Juergen Hoeller","jhoeller@vmware.com"
"9","spring-projects/spring-framework","7118fcff0de2993d8654a2c72597aaa629e67e9b",1,"2015-08-27 19:13:29+02:00","MethodValidationInterceptor falls back to
invocation attempt with resolved bridge method
(for Hibernate Validator 5.2 compatibility)
Issue: SPR-12237
",433154,6197,293882,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"10","spring-projects/spring-framework","12aa14ddbc9fe1699bbd0f559b15074946a1c2ed",2,"2016-12-18 21:04:08+01:00","Support @Nullable annotations as indicators for
optional injection points  Issue: SPR-15028
",448428,6560,298902,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"11","spring-projects/spring-framework","87598f48e41d483745aba56cbf4e998c6f6d680c",1927,"2017-05-27 08:14:59+02:00","Introduce null-safety of Spring Framework API
This commit introduces 2 new @Nullable and
@NonNullApi annotations that leverage JSR 305
(dormant but available via Findbugs jsr305
dependency and already used by libraries like
OkHttp) meta-annotations to specify explicitly
null-safety of Spring Framework parameters and
return values.  In order to avoid adding too much
annotations, the default is set at package level
with @NonNullApi and @Nullable annotations are
added when needed at parameter or return value
level. These annotations are intended to be used
on Spring Framework itself but also by other
Spring projects.  @Nullable annotations have been
introduced based on Javadoc and search of patterns
like ""return null;"". It is expected that
nullability of Spring Framework API will be
polished with complementary commits.  In practice,
this will make the whole Spring Framework API
null-safe for Kotlin projects (when KT-10942 will
be fixed) since Kotlin will be able to leverage
these annotations to know if a parameter or a
return value is nullable or not. But this is also
useful for Java developers as well since IntelliJ
IDEA, for example, also understands these
annotations to generate warnings when unsafe
nullable usages are detected.  Issue: SPR-15540
",465768,6684,304477,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"12","spring-projects/spring-framework","4b0dedc45e2f82d59c8414996f34520be1760698",1,"2017-05-29 14:16:09+02:00","Add ExtractingResponseErrorHandler  This commit
introduces ExtractingResponseErrorHandler: an
alternative ResponseErrorHandler that uses
`HttpMessageConverter`s to convert HTTP error
responses to `RestClientException`.  Issue:
SPR-15544
",466150,6687,304577,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"13","spring-projects/spring-framework","b47d713e147d6994fbe435c267a1e8941e50ea08",544,"2017-05-31 12:37:54+02:00","Add missing @Nullable annotations on parameters
Issue: SPR-15540
",466708,6689,304654,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"14","spring-projects/spring-framework","c3e6afb8797e2893ab41c44514253c06b056c43c",41,"2017-05-31 16:55:57+02:00","Improve null-safety to fix some Spring Boot
warnings  Issue: SPR-15540
",466720,6689,304655,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"15","spring-projects/spring-framework","1f28825f9da63a13aaf8940aadedcf81358dc506",287,"2017-05-31 21:35:52+02:00","Add more @Nullable parameters based on null usage
Issue: SPR-15540
",466801,6689,304655,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"16","spring-projects/spring-framework","f813712f5b413b354560cd7cc006352e9defa9a3",2674,"2017-06-07 14:17:48+02:00","Consistent use of @Nullable across the codebase
(even for internals)  Beyond just formally
declaring the current behavior, this revision
actually enforces non-null behavior in selected
signatures now, not tolerating null values anymore
when not explicitly documented. It also changes
some utility methods with historic null-in/null-
out tolerance towards enforced non-null return
values, making them a proper citizen in non-null
assignments.  Some issues are left as to-do: in
particular a thorough revision of spring-test, and
a few tests with unclear failures (ignored as
""TODO: NULLABLE"") to be sorted out in a follow-up
commit.  Issue: SPR-15540
",468666,6694,304903,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"17","spring-projects/spring-framework","e6f195095283beaf1637b8230e64cb324e96fe33",11,"2017-06-08 10:35:54+02:00","Missing @Nullable annotations for
findAnnotation/getValue/getDefaultValue  Note that
synthesizeAnnotation has an assertion now, keeping
its non-null policy.  Issue: SPR-15642
",468704,6694,304906,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"18","spring-projects/spring-framework","fd53d2a51a4de263ac18d2f698abeab7afabce75",204,"2017-06-08 22:52:57+02:00","Consistent use of @Nullable in spring-test  This
commit also removes nullability from two common
spots: ResolvableType.getType() and
TargetSource.getTarget(), both of which are never
effectively null with any regular implementation.
For such scenarios, a non-null empty type/target
is the cleaner contract.  Issue: SPR-15540
",468859,6694,304877,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"19","spring-projects/spring-framework","c0550f7eb6c2a669a8bd945c49a16ef2fe8d96a4",1,"2017-06-09 20:46:15+02:00","Documented AbstractBeanFactory nullability warning
Issue: SPR-15540
",468890,6694,304908,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"20","spring-projects/spring-framework","e2e04105706954429747f04e05c8f7c066c87108",1,"2017-06-11 12:03:05+02:00","Method-level javadoc on XmlReaderContext etc
",468423,6684,304627,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"21","spring-projects/spring-framework","14161d1dbf922f6fbaa9ca7a5ac54bbce3387281",1,"2017-06-12 15:48:59+02:00","Protected applyLifecycleMethods in
UrlBasedViewResolver  Issue: SPR-15219
",468672,6689,304803,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"22","spring-projects/spring-framework","233c15b80e3b0d3ff221685838d2a7229b6f059b",4,"2017-06-12 16:07:35+02:00","Add PathPatternRegistry for handler mapping
matching  Previously `HandlerMapping`
implementation were heavily relying on `String`
path patterns, `PathMatcher` implementations and
dedicated maps for matching incoming request URL
to an actual request handler.  This commit adds
the `PathPatternRegistry` that holds `PathPattern`
instances and the associated request handler ‚Äî
matching results are then shared as
`PathMatchResult` instances.
`AbstractUrlHandlerMapping` will use this registry
directly, but other components dealing with
request matching (like `PatternsRequestCondition`)
will directly use ordered `PathPattern`
collections since ordering is important there.
This opens the door for faster request matching
and simplifies the design of this part.  Issue:
SPR-15608
",468688,6692,304912,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"23","spring-projects/spring-framework","47ec9667571e3af8bb29fbdd5ce447461b5b0571",4,"2017-06-12 22:54:18+02:00","TargetSource.getTarget() is nullable again (for
compatibility with MethodInvocation.getThis)
Issue: SPR-15651
",468701,6692,304914,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"24","spring-projects/spring-framework","7dd8dc62a5fa08e3cc99d2388ff62f5825151fb9",3,"2017-06-13 11:37:58+02:00","Fixes for ignored tests after last week's
nullability commit  Issue: SPR-15540
",468381,6692,304912,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"25","spring-projects/spring-framework","e0e6736bc58101af13a352d4aa2a6c2dc0994d72",7,"2017-06-06 09:31:58+02:00","Introduce LocaleContextResolver in WebFlux  This
commit introduces LocaleContextResolver interface,
which is used at ServerWebExchange level to
resolve Locale, TimeZone and other i18n related
informations.  It follows Spring MVC locale
resolution patterns with a few differences:  -
Only LocaleContextResolver is supported since
LocaleResolver is less    flexible  - Support is
implemented in the
org.springframework.web.server.i18n    package of
spring-web module rather than in spring-webflux in
order    to be able to leverage it at
ServerWebExchange level  2 implementations are
provided:  - FixedLocaleContextResolver  -
AcceptHeaderLocaleContextResolver  It can be
configured with both functional or annotation-
based APIs.  Issue: SPR-15036
",468769,6700,305143,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"26","spring-projects/spring-framework","97909f225819b2297c1036a8a9108c0582edcf90",11,"2017-05-29 22:23:33+02:00","Support date properties in Content-Disposition
HTTP header  Issue: SPR-15555
",468857,6700,305165,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"27","spring-projects/spring-framework","7e251274ee574589d53e98a2042e731de4b8ac9c",15,"2017-06-15 22:45:06+02:00","Consistent nullability of headers Map and
MessagePostProcessor  Issue: SPR-15670
",468966,6702,305282,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"28","spring-projects/spring-framework","03133630cb442fd2ee5b775002a1d995fded06df",3,"2017-06-20 18:08:42+02:00","Missing @Nullable annotations in WebFlux, in
particular around locale resolution  Issue:
SPR-15036 Issue: SPR-15540
",469188,6702,305372,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"29","spring-projects/spring-framework","59e90943e410940fa4c3e24086c06afa1872ca7f",2,"2017-06-19 15:55:33+02:00","Rename CorsProcessor#processRequest to process
",469188,6702,305372,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"30","spring-projects/spring-framework","5c1d8c7c591f5447038bea4e18b9df259a0f0743",2,"2017-06-21 23:23:09+02:00","Leverage ZonedDateTime in HttpHeaders  This commit
introduces 2 new public methods in HttpHeaders in
order to leverage Java 8 ZonedDateTime in addition
to the existing long (with GMT time zone implied)
variants:  - ZonedDateTime
getFirstZonedDateTime(String headerName)  - void
setZonedDateTime(String headerName, ZonedDateTime
date)  This commit also leverages Java 8 thread-
safe DateTimeFormatter for HttpHeader
implementation instead of SimpleDateFormat. As a
consequence of the usage of
DateTimeFormatter.RFC_1123_DATE_TIME, HTTP date
header serialization could change slightly for
single digit days from for example ""Thu, 01 Jan
1970 00:00:00 GMT"" to ""Thu, 1 Jan 1970 00:00:00
GMT"".  Issue: SPR-15661
",469359,6704,305438,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"31","spring-projects/spring-framework","8fc3b3bc37c3748e90b089abb24e4360857ab335",4,"2017-06-23 14:45:46-04:00","Add WebTestClientConfigurer  Issue: SPR-15674
",469465,6706,305482,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"32","spring-projects/spring-framework","87430f3cd30b401fbb10cf212cb437ff41b058f6",3,"2017-06-27 00:43:37+02:00","ListenableFuture provides CompletableFuture
adaptation via completable()  Issue: SPR-15696
",470055,6713,305716,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"33","spring-projects/spring-framework","cd643704adf1cb3787736452b3c7a96897ecde1c",1,"2017-06-29 10:46:25-07:00","Update to reactor core 3.1.0.B-S with context
update for monoSendOperator Explicit typing for
older jvm compilation in BodyExtractor
",470051,6713,305689,"Stephane Maldini","smaldini@pivotal.io","Stephane Maldini","smaldini@pivotal.io"
"34","spring-projects/spring-framework","9253facf029e1592b5d9f2e0fd72fe47d3cb4515",2,"2017-06-29 14:54:50-04:00","Refactor ServerWebExchange#getAttribute options
Issue: SPR-15718
",470039,6713,305703,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"35","spring-projects/spring-framework","7de6cfa1df3cc04c08543b05010244c020efcd40",1,"2017-06-29 15:23:36-04:00","Refactor WebSession#getAttribute options  Issue:
SPR-15718
",470044,6713,305717,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"36","spring-projects/spring-framework","8f4eb235401374a6c3de3649fa8e58beb5b308de",3,"2017-06-29 17:01:28-04:00","Remove use of Optional in
SyncHandlerMethodArgumentResolver  ... and a
couple more protected methods in WebFlux  Issue:
SPR-15718
",470035,6713,305717,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"37","spring-projects/spring-framework","cc74a2891a4d2a4c7bcec059f20c35aa80bcf668",2391,"2017-06-30 01:53:45+02:00","@Nullable all the way: null-safety at field level
This commits extends nullability declarations to
the field level, formalizing the interaction
between methods and their underlying fields and
therefore avoiding any nullability mismatch.
Issue: SPR-15720
",473299,6713,305652,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"38","spring-projects/spring-framework","5f4d1a4628513ab34098fa3f92ba03aa20fc4204",3,"2017-06-30 01:54:32+02:00","CronSequenceGenerator.isValidExpression actually
validates cron fields  Issue: SPR-15604
",473320,6713,305652,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"39","spring-projects/spring-framework","9afce23845e043c57cf6fef425963fb26bc4f586",1,"2017-06-30 20:56:21+02:00","WebSocketSession.getUri() may return null  Issue:
SPR-15721
",473425,6713,305660,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"40","spring-projects/spring-framework","fc3fcf05fd4a84aa06634aebe92b503c7cd4c01e",3,"2017-06-27 17:16:29-04:00","Refactor PathSegmentContainer -> PathContainer
The new PathContainer represent the path as a
series of elements including separators. This
naturally represents leading/trailing slashes and
empty path segments which in turn makes it easier
to match in PathPattern as well as to reconstruct
the path.
",473385,6712,305625,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"41","spring-projects/spring-framework","26448a0ebccb0559bd04b93191ef876ad1535ed5",1,"2017-06-28 13:20:28-07:00","Rework matching to use PathContainer
",473481,6712,305616,"Andy Clement","aclement@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"42","spring-projects/spring-framework","8581afa621f8c87964e7ab28e0304127af0d5bcd",2,"2017-06-30 11:03:36-04:00","WebFlux compiles after PathPattern/Container
changes
",473443,6712,305611,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"43","spring-projects/spring-framework","850083ca6c5b9216efff34870fc0d79714605675",1,"2017-06-30 16:11:55-04:00","Polish
",473444,6712,305611,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"44","spring-projects/spring-framework","15cf9c1d78039b8b94793a4585032fbfd307c841",3,"2017-07-01 20:05:17-04:00","Switch to ContainerPath variants in
HandlerMapping's
",473406,6711,305564,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"45","spring-projects/spring-framework","839b6c18d4afb89823d0c2bc7f45f5e41f1ea5ed",1,"2017-07-04 10:11:56+02:00","Optimize Flux pipeline in ClientHttpRequest
",473497,6711,305567,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"46","spring-projects/spring-framework","75a71acceadd4f0d64610dc9ca6c52376656a78d",1,"2017-07-04 14:47:10+02:00","Upgrade to JUnit Jupiter 5.0 M5  Issue: SPR-15728
",473500,6711,305568,"Sam Brannen","sam@sambrannen.com","Sam Brannen","sam@sambrannen.com"
"47","spring-projects/spring-framework","3232cb626094123ff69ad4053b0a92f8cc768dad",4,"2017-07-03 15:55:58+02:00","Avoid required uri when using WebClient w/ base
url  This commit makes the `uri` step of the
WebClient optional, so that users who have
specified a base URL during WebClient config do
not need to provide an empty one (i.e. `url("""")`).
The basic idea of this fix is that the HTTP method
methods in WebClient (`get`, `post`, etc.) should
be able to ""bypass"" the uri stage, and skip
straight to defining headers, or even doing an
exchange or retrieve (i.e. call methods on
`RequestHeaderSpec` or `RequestBodySpec`).  I have
accomplished this by adding two new composed
interfaces: `RequestHeadersUriSpec` and
`RequestBodyUriSpec`. `RequestHeadersUriSpec`
extends from the existing `UriSpec` and
`RequestHeaderSpec`, while `RequestBodyUriSpec`
extends from `UriSpec` and `RequestBodySpec`.
These types are returned from the HTTP methods
(`get`, `post` etc). The `uri` methods on these
types return a plain `RequestHeaderSpec` and
`RequestBodySpec` (i.e. types without the `uri`
methods), so that you can call `uri` once only.
Issue: SPR-15695
",473709,6712,305705,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"48","spring-projects/spring-framework","5f2d2b21d91f57e3f53508a9933cc8fd156d0a36",1,"2017-07-07 13:38:25+02:00","Avoid required uri when using WebTestClient w/
base url  This commit makes the `uri` step of the
WebTestClient optional, so that users who have
specified a base URL during WebClient config do
not need to provide an empty one (i.e. `url("""")`).
Issue: SPR-15695
",473720,6712,305709,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"49","spring-projects/spring-framework","00f4c36d7a08710f489d1bd901ce0cd9e9ab274d",26,"2017-07-07 18:46:19+02:00","Nullability fine-tuning (RequestContext,
LocaleResolver)  Includes page-level JSTL time
zone support for JSP tags.  Issue: SPR-15720
Issue: SPR-15746
",473724,6712,305686,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"50","spring-projects/spring-framework","9b5132ce5386ecf1fade727bd52cc9b4fb99814e",1,"2017-07-10 14:24:28+02:00","LinkedCaseInsensitiveMap exposes its locale for
key conversion  Issue: SPR-15752
",473622,6709,305599,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"51","spring-projects/spring-framework","9f7d57f933e84ea9f002ab5376fb12bcdb1120db",1,"2017-07-10 14:55:01+02:00","Encapsulate choice of URI encoding within
RequestPath  Currently the URI path is always
treated as UTF-8 so we can eliminate the encoding
parameter from RequestPath#parse.
",473621,6709,305600,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"52","spring-projects/spring-framework","eb8454789429f30bbbe0a32d36406603f7d5ee25",1,"2017-07-11 11:43:48+02:00","Fix MockMvc + HttpPutFormContentFilter issue
Issue: SPR-15753
",473656,6710,305642,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"53","spring-projects/spring-framework","134ceac58e80c8f345e2a2946be8ce5291b60672",3,"2017-07-11 21:00:57+02:00","Set all strategies in CNM factory bean
ContentNegotiationManagerFactoryBean now provides
an option to explicitly set the strategies to use
vs customizing a fixed list of default strategies.
Issue: SPR-11114
",473773,6710,305702,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"54","spring-projects/spring-framework","8359201a0d4d625e05a5e7d44a72fa13914024f1",4,"2017-07-12 18:44:55+02:00","Improve write completion handling in
ChannelSendOperator  Avoid re-using the
WriteBarrier as the Subscription to both the
completionSubscriber and the writeSubscriber.
Instead DownstreamBridge is now called
WriteCompletionBarrier and is both a Subscriber
and Subscription, i.e. handles all signals to and
from the completion Subscriber.  This frees the
request method implementation in WriteBarrier to
assume it can only be called by the
writeSubscriber and hence it's safe to pass on
request signals to the write source outside the
synchronized block.
",473740,6710,305733,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"55","spring-projects/spring-framework","6d7612e052bfb2ac5d6f7c6721d82d9187c8b8c5",1,"2017-07-13 13:01:35+02:00","AbstractTraceInterceptor provides
logExceptionStackTrace flag and writeToLog
delegates  Issue: SPR-15763 (cherry picked from
commit aa0d7a6)
",473754,6710,305761,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"56","spring-projects/spring-framework","f46520e6e8e70e59ad46bc31debdfd155cf943bc",14,"2017-07-12 17:44:07+02:00","Add Jackson Smile support to WebFlux  This binary
format more efficient than JSON should be useful
for server to server communication, for example in
micro-services use cases.  Issue: SPR-15424
",473989,6716,305897,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"57","spring-projects/spring-framework","301e2ea493e218b4d40125ccc0b9ff32797e50ff",8,"2017-07-13 21:20:42+02:00","Nullability fine-tuning and related polishing
Issue: SPR-15720
",474003,6716,305897,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"58","spring-projects/spring-framework","12114a9d4c55e86cb0669d9c66d423b8d07c20b0",1,"2017-07-18 00:54:41+02:00","Consistent use of NIO.2 for file read/write
interactions  Issue: SPR-15748
",474458,6715,306018,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"59","spring-projects/spring-framework","b0422d02dc4ec727bdb43ace2627bf004828100d",2,"2017-07-18 03:56:54+02:00","Resource transformers use AsynchronousFileChannel
Issue: SPR-15773
",474457,6716,306031,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"60","spring-projects/spring-framework","efb5ba5a95043ebe0b3b254233909a409f0d3212",1,"2017-07-18 04:35:56+02:00","Refactor VersionStrategy in WebFlux  Collapse the
base interface VersionPathStrategy into its
extension VersionStrategy and then turn the prefix
nad fliename based implementations into abstract
base classes (vs delegate strategies).  It is
simpler to have one VersionStrategy hierarchy vs
that plus a separate VersionPathStrategy as a
delegate. In practice each VersionStrategy is
suited to be prefix or filename based. Also none
of our code cares about the distinction between
those two interfaces.
",474462,6716,306006,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"61","spring-projects/spring-framework","56903581d9e88894b2103208b4028df48e414b47",1,"2017-07-18 17:09:24+02:00","ResponseEntity declared as Object in WebFlux
controller  Issue: SPR-15785
",474488,6716,306010,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"62","spring-projects/spring-framework","c292a89b24fbf955fd0eecf00b837212909f0e7e",10,"2017-07-19 00:15:37+02:00","Http(Async)Client not actually nullable, plus
MethodInterceptor nullability  Issue: SPR-15720
",474519,6716,306010,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"63","spring-projects/spring-framework","fb4ddb0746a3f194091043de328875596736427a",442,"2017-07-19 08:55:05+02:00","Make getters and setters null-safety consistent
This commit ensure that null-safety is consistent
between getters and setters in order to be able to
provide beans with properties with a common type
when type safety is taken in account like with
Kotlin.  It also add a few missing property level
@Nullable annotations.  Issue: SPR-15792
",474594,6716,306010,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"64","spring-projects/spring-framework","9fc4fb10b0da0d625dd7dff0bf2bd3e6b42b5684",24,"2017-07-19 11:43:58+02:00","Nullability fine-tuning around bean properties
Issue: SPR-15720 Issue: SPR-15792
",474626,6716,306008,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"65","spring-projects/spring-framework","46eba3dbfad310bbafbf0a1002a386246288df1c",291,"2017-07-19 22:22:14+02:00","Nullability fine-tuning around declaration
inconsistencies  Issue: SPR-15720 Issue: SPR-15792
",475114,6719,306091,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"66","spring-projects/spring-framework","fa4d13968451bfe96eab122634c0a1eab6083aaa",2,"2017-07-20 10:28:29+02:00","Support instantiating Kotlin classes with optional
parameters  This commit updates BeanUtils class in
order to add Kotlin optional parameters with
default values support to the immutable data
classes support introduced by SPR-15199.  Issue:
SPR-15673
",475185,6719,306103,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"67","spring-projects/spring-framework","ed6fe2b72304aff14a2e419a3c8af12736542264",2,"2017-07-24 17:29:02+02:00","Upgrade to Kotlin 1.1.4-eap-33  Issue: SPR-15814
",475189,6720,306133,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"68","spring-projects/spring-framework","af93503a090a4c592c9dba98f64ef67dc99903b8",1,"2017-07-25 14:12:41+02:00","TemplateAwareExpressionParser treats null as non-
template ParserContext  Issue: SPR-15810
",475212,6720,306140,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"69","spring-projects/spring-framework","c5fc4005344ddb355c4a9b66640d46373ad3f353",8,"2017-07-27 11:39:05+02:00","(AnnotationAware)OrderComparator supports null
values again  Issue: SPR-15823
",475232,6720,306141,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"70","spring-projects/spring-framework","c060f4f61586814772880696f123a718ec3c9f4b",5,"2017-08-02 13:42:43+02:00","Polish PathPattern and parser  Updates to Javadoc
Consistent and separator type neutral naming for
trailing slash PathPattern extracts options from
the parser instance
",475305,6719,306171,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"71","spring-projects/spring-framework","dccedd5ad59422ce2b1369784a748e831f2e39a9",1,"2017-08-02 15:05:28+02:00","Minor refactoring in PathPattern  Rename
getPathRemaining to matchStartOfPath since the
method does match and to be more clear about what
the method and the return value intuitively
follows.  Remove matchStart which matches the
start of the pattern (rather than the start of the
path). It is a use case that does not come up in
request mapping.
",475203,6719,306163,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"72","spring-projects/spring-framework","62fa20fd6f4b3ebbc2eaf47ebeb5d9f2d91f21c2",1,"2017-08-02 16:31:06+02:00","PathPattern#matchAndExtract minor refactoring
Consistent behavior with matches(PathContainer),
the two had slightly different logic for handling
of empty paths.  Make matchAndExtract
independantly usable without the need to call
matches(PathContainer) first. Essentially no
longer raising ISE if the pattern doesn't match
but simply returning null.
",475197,6719,306162,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"73","spring-projects/spring-framework","09f5c71374a45c2e8d2f72c0503c72161eccdf98",5,"2017-08-08 17:26:45+02:00","Consistent nullability for BeanDefinitionBuilder
setters  Issue: SPR-15841
",475912,6723,306218,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"74","spring-projects/spring-framework","adeb521ce4770360e6fad3977d149f378532f0a3",1,"2017-08-08 17:27:28+02:00","Polishing
",475908,6723,306217,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"75","spring-projects/spring-framework","61cdc842e08f468c8aec9d10a900f3ba087f348e",2,"2017-08-17 11:02:40+02:00","BindingResult support for constructor argument
mismatch on immutable data object  Issue:
SPR-15542
",476013,6723,306273,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"76","spring-projects/spring-framework","73cf07e9a4f1000087118c24ef5d56f621f41160",758,"2017-08-17 14:30:14+02:00","Fix overridden methods nullability  Issue:
SPR-15869
",477040,6723,306272,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"77","spring-projects/spring-framework","b94302b5bde7475b9926dacb9fb69f3c8c894444",7,"2017-08-18 00:11:35+02:00","Enforce non-null value from getBean and at
injection points  Bean-derived null values may
still get passed into bean properties and
injection points but only if those are declared as
non-required. Note that getBean will never return
null; a manual bean.equals(null) /
""null"".equals(bean.toString()) check identifies
expected null values now.  This will only ever
happen with custom FactoryBeans or factory methods
returning null - and since all common cases are
handled by autowiring or bean property values in
bean definitions, there should be no need to ever
manually check for such a null value received from
getBean.  Issue: SPR-15829
",477108,6724,306294,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"78","spring-projects/spring-framework","47a7475898fc918e2f945206e3364bdaab2bb39f",2,"2017-08-18 00:15:46+02:00","Resolve remaining nullability warnings  Issue:
SPR-15869
",477107,6724,306295,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"79","spring-projects/spring-framework","9aa369f40222527f7f0f864b53659d8b585dcd7b",1,"2017-08-18 17:59:06+02:00","Data class construction supports field
default/marker parameters  Issue: SPR-15871
",477157,6724,306303,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"80","spring-projects/spring-framework","fac1f236c312ebffe9662d209ac67f0dc6238332",2,"2017-08-21 01:34:11+02:00","Upgrade to Servlet API 4.0 for MVC and merge
EhCache 3 tests into spring-context-support
Includes general streamlining of dependency
declarations with reduced version variables,
direct use of EclipseLink 2.7 and its implicit JPA
2.2 dependency in spring-orm, mixed use of
Hibernate 5.2.10 and 5.1.10 for integration tests,
as well as an upgrade to Jetty 9.4.7 RC0 and a
downgrade to Groovy 2.4.12 (since Groovy 2.5 won't
be final in time for Spring Framework 5.0).
Issue: SPR-15879 Issue: SPR-15880
",477168,6724,306303,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"81","spring-projects/spring-framework","582014e944002609b562f6e4998935c06bbe6922",1,"2017-08-24 19:35:16+02:00","Support HTTP range requests in MVC Controllers
Prior to this commit, HTTP Range requests were
only supported by the ResourceHttpRequestHandler
when serving static resources.  This commit
improves the `HttpEntityMethodProcessor` and the
`RequestResponseBodyMethodProcessor`. They now
extract `ResourceRegion`s from the `Resource`
instance returned by the Controller and let the
Resource-related message converters handle the
writing of the resource (including partial
writes).  Controller methods can now handle Range
requests for return types that extend Resource or
HttpEntity:
@RequestMapping(""/example/video.mp4"")     public
Resource handler() { }
@RequestMapping(""/example/video.mp4"")     public
HttpEntity<Resource> handler() { }  Issue:
SPR-15789, SPR-13834
",477325,6724,306342,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"82","spring-projects/spring-framework","30bd5827b0d7f5ed57a4270c22b3dc6f7ba8b792",1,"2017-09-01 14:05:14+02:00","ConfigurationClassEnhancer leniently allows for
null bean references  Issue: SPR-15829
",477359,6724,306346,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"83","spring-projects/spring-framework","5ae35f606c6779ab42f02967ee26c92d9f87620d",3,"2017-09-06 14:39:56+02:00","Leverage kotlin-reflect to determine parameter
names  This is especially useful to determine
interface parameter names without requiring Java 8
-parameters compiler flag.  Issue: SPR-15541
",477673,6730,306496,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"84","spring-projects/spring-framework","fd0132c7e63c0ea497c357d352865df6ac72ae5d",1,"2017-09-08 16:56:22+02:00","Polishing
",477796,6732,306552,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"85","spring-projects/spring-framework","bc470fca3047a5aba0145479069eaba67dfa7601",1,"2017-09-08 07:53:23-04:00","Polish
",477801,6732,306555,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"86","spring-projects/spring-framework","f76ac5bb32c5e5529ca036f44cae4bd25f4f6b9a",3,"2017-09-09 17:35:49-04:00","WebFlux support for @SessionAttributes  Issue:
SPR-15887
",478071,6735,306681,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"87","spring-projects/spring-framework","e70210a1da994ea52e1ade30b052bea9e12e9d1d",1,"2017-09-14 16:26:35+02:00","Introduce ForwardedHeaderFilter for WebFlux  This
commit introduces a ForwardedHeaderFilter for
WebFlux, similar to the existing Servlet version.
As part of this the
DefaultServerHttpRequestBuilder had to be changed
to no longer use delegation, but instead use a
deep copy at the point of mutate(). Otherwise,
headers could not be removed.  Issue: SPR-15954
",478323,6739,306770,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"88","spring-projects/spring-framework","2fb3eeba6f1dc9c76c548adb2b12132057c4b282",1,"2017-09-15 14:11:20+02:00","Introduce ServerRequest.methodName()  This commit
introduces a methodName() method to the
ServerRequest, returning the String name of the
method. This method is useful for non-standard
HTTP methods.
",479120,6741,306863,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"89","spring-projects/spring-framework","ac9cfefaffb78cb26c3a755f4594b1a113a97144",5,"2017-09-19 13:47:43+02:00","TaskExecutorRegistration does not apply its
default settings to a user-provided executor
Also, ChannelRegistration.setInterceptors is
deprecated now: in favor of a fluently named
interceptors(...) method which is documented to
add the given interceptors to the channel's
current list.  Issue: SPR-15962 Issue: SPR-15976
",479300,6746,306971,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"90","spring-projects/spring-framework","4cbef27f90ded887af9ae9639550999aa81f3847",1,"2017-09-20 10:54:58+02:00","Consistent tolerance of unknown HTTP status codes
behind RestTemplate  Issue: SPR-15978
",479576,6748,307299,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"91","spring-projects/spring-framework","ea01c4113af22099755de763e9fb1dddb7691c0b",2,"2017-09-20 10:55:06+02:00","Revisit MockPart constructors  Issue: SPR-15854
",479567,6748,307300,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"92","spring-projects/spring-framework","7ae59d0c2a5313ad96ba10f9d8ee4e7f77c45c85",50,"2017-09-22 18:22:12+02:00","Nullability refinements on private and static
methods  Based on IntelliJ IDEA 2017.3
introspection results.  Issue: SPR-15756
",479956,6749,307370,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"93","spring-projects/spring-framework","816a58fcf91b7cdb27b430ae6b96c9143a67d124",1,"2017-09-22 15:15:41-04:00","RouterFunctionMapping provides getter for
RouterFunction  Issue: SPR-15991
",480018,6750,307398,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"94","spring-projects/spring-framework","c28a6357c52cba0e2edab923fc22741dcd94a95f",3,"2017-09-22 15:44:12-04:00","DispatcherHandler alignment with DispatcherServlet
Issue: SPR-15934
",480027,6750,307400,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"95","spring-projects/spring-framework","9ff4c0bff8d7d9b223986daaf74bfb98f9939386",1,"2017-09-25 22:45:04+02:00","DispatcherServlet.getHandlerMappings() accessor
declared as final  Issue: SPR-15934
",480012,6747,307199,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"96","spring-projects/spring-framework","41b53de6440687fad47504bc35857667e6b7e6c1",1,"2017-09-25 19:30:22-04:00","DispatcherHandler.getHandlerMappings() is also
final  Issue: SPR-15934
",480090,6747,307033,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"97","spring-projects/spring-framework","efce7902c40e55d907baaa10b2dc071322e7be11",1,"2017-09-27 01:34:11+02:00","Polishing
",480089,6747,307042,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"98","spring-projects/spring-framework","a1a7c6212731d7eff716021e7543272f2b9c72dc",4,"2017-09-27 19:00:51+02:00","Consistent configurer access in
WebMvcConfigurationSupport  Issue: SPR-16017
(cherry picked from commit 40ba95f)
",480097,6747,307088,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"99","spring-projects/spring-framework","ec345bf162285e397df774bdc2ad756e3aba155a",1,"2017-09-28 00:31:12+02:00","Revised handling of missing data class arguments
Includes unified detection of Kotlin's optional
parameters in MethodParameter.isOptional(),
reduces BeanUtils.findPrimaryConstructor to Kotlin
semantics (for reuse in
AutowiredAnnotationBeanPostProcessor), and finally
introduces a common KotlinDetector delegate with
an isKotlinType(Class) check.  Issue: SPR-15877
Issue: SPR-16020
",480069,6749,307113,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"100","spring-projects/spring-framework","0f1bd49f6dd449b902211a5946107c11ee5d1cac",3,"2017-09-27 21:28:49-04:00","HandlerMappingIntrospector is a bean
",480125,6748,307089,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"101","spring-projects/spring-framework","24ca8ccf5ac9582dbc6d2f15848c4f8398a3a96f",1,"2017-10-13 16:54:30+02:00","WebTestClient.mutate() should not impact future
.mutate() invocations  Issue: SPR-16059
",480587,6753,310166,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"102","spring-projects/spring-framework","3890d4c9eb12341e4a3051b1dac110f96dd9cae7",2,"2017-10-16 15:34:09+02:00","AbstractServerHttpResponse stores HTTP status code
as integer value  Issue: SPR-16073
",480583,6753,310167,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"103","spring-projects/spring-framework","d8a7b96b46bffa8ef376f056f57bdafb1881603c",1,"2017-10-18 19:08:22-04:00","WebFlux support for ""request handled"" in
controller  Issue: SPR-16087
",480880,6755,310237,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"104","spring-projects/spring-framework","ab92754a2efebda6baa063e8ecd381c322582cf8",2,"2017-10-19 21:01:38-04:00","@MatrixVariable resolvers for WebFlux  The
information was already parsed and available in a
request attribute but until now there were no
argument resolvers to expose it.  Issue: SPR-16005
",481563,6760,310418,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"105","spring-projects/spring-framework","1cc5afe24b592a50ab68c090e438138ab180374a",9,"2017-10-20 16:41:40-04:00","Fix lines over 120 characters
https://github.com/spring-projects/spring-
framework/wiki/Spring-Framework-Code-Style#line-
wrapping
",482044,6760,310503,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"106","spring-projects/spring-framework","182da1590821a0b621c8721e325b5bfc17755fec",1,"2017-10-24 01:01:49+02:00","BridgeMethodResolver properly resolves interface
hierarchies  Issue: SPR-16103
",482159,6760,310549,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"107","spring-projects/spring-framework","efe943df721fd0f39d82ef32db41c4da964a1a3c",2,"2017-10-24 13:14:22+02:00","WebSphereUowTransactionManager logs overridden
application exceptions  Issue: SPR-16102
",482169,6760,310550,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"108","spring-projects/spring-framework","a982123ed5067c2e00101db9a8e317cd6b1434b9",1,"2017-10-25 17:26:36-04:00","Decouple ExchangeResult from
WiretapRequest/Response  This commit decouples
ExchangeResult from knowledge about
WiretapClientHttpRequest/Response both of which
are now private to WiretapConnector.
ExchangeResult takes ClientHttpRequest/Response
instead along with promises for the serialized
request and response content in the form of
MonoProcessor<byte[]>.  This sets up the
possibility for an ExchangeResult to be created
outside and independent of WebTestClient, should
we decide to make its constructor public.  Issue:
SPR-16101
",482193,6758,310524,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"109","spring-projects/spring-framework","e5c8dc0d6594494cc8f2a3e638295ceef3e4db8b",2,"2017-10-31 11:06:42+01:00","MessageSource.getMessage returns null default
message as-is (again)  Issue: SPR-16127
",482344,6758,310541,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"110","spring-projects/spring-framework","8083eaae54233b84edeeaf253234503c2d7f7256",4,"2017-10-31 08:54:19-04:00","syncBody better differentiates plain vs multipart
forms  FromHttpMessageWriter and
MultipartHttpMessageWriter both support
MultiValueMap except the former supports String
values only. This presents an issue since either
full generic type information must be provided,
which is cumbersome on the client side, or if left
out there is no good way to order the writers to
make a proper decision.  This commit:  - refines
the canWrite behavior of   to not a accept
MultiValueMap without proper generic information
unless the MediaType is explicitly set providing a
strong hint.  - modifies
MultipartHttpMessageWriter to be configured with a
FormHttpMessageWriter so it can write both plan
and multipart data with the ability to properly
differentiate based on actual map values.  Issue:
SPR-16131
",482375,6758,310579,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"111","spring-projects/spring-framework","d06129debdfd7dad3a446355773dbbf9276875bb",1,"2017-10-31 16:33:38+01:00","InterceptingHttpAccessor uses internal ArrayList
for sorting  Also caches
InterceptingClientHttpRequestFactory (if
applicable)  Issue: SPR-16137
",482383,6758,310616,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"112","spring-projects/spring-framework","abe4420006d244140d9d4efd0c31756b13951e76",1,"2017-11-01 16:22:49-04:00","Improve ReactorNettyTcpClient shutdown logic  This
commit takes care of the TODOs in
ReactorNettyTcpClient by taking advantage of
improvements in Reactor Netty.  Issue: SPR-16145
",482507,6758,310682,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"113","spring-projects/spring-framework","4dee333a75121f4f6ceb4f62e2da4744a6fda2c6",2,"2017-10-25 21:28:07+02:00","Allow empty usernames for BasicAuth  The RFCs
around basic authentication don't explicitly
disallow empty usernames. On the other hand
usernames containing colons are, as colons are
used to separate the username from the password.
",482507,6758,310682,"Norman Soetbeer","norman.soetbeer@gmail.com","Rob Winch","rwinch@users.noreply.github.com"
"114","spring-projects/spring-framework","8c33ed02b33c0b708958cf05919740bef9a94e16",2,"2017-11-02 20:53:26-04:00","ServletHttpHandlerAdapter supports Serlvet path
mapping  Issue: SPR-16155
",482643,6760,310776,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"115","spring-projects/spring-framework","2d1f87501c043fc58200ce4d1b0f544f8ad04619",1,"2017-11-02 16:16:40+01:00","Add MultipartBodyBuilder  This commit introduces
the MultipartBodyBuilder, a builder for multipart
form bodies.  Issue: SPR-16134
",482801,6764,310903,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"116","spring-projects/spring-framework","ffd6eff369014f49102bacaa84c0826235c01ee5",2,"2017-11-06 18:36:39+01:00","Scheduled task introspection through
ScheduledTaskHolder interface  Issue: SPR-15982
",482912,6768,311072,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"117","spring-projects/spring-framework","263da1535baab5d605daf888a2f00ec5c4994319",4,"2017-11-07 13:01:12-05:00","WebTestClient can be configured with connector
Issue: SPR-16168
",483009,6768,311147,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"118","spring-projects/spring-framework","369d33c3d00569a8a439910bcff6fca0f4aaec37",12,"2017-11-01 03:52:32-04:00","Support charset config by (static) resource
location  This commit adds support for configuring
static resource locations with a charset to be
applied to relative paths.
",483303,6766,311239,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"119","spring-projects/spring-framework","a80fd9994af6fabeb36b75ca7d0bcfe5700e6106",2,"2017-11-10 20:21:03+01:00","HibernateJpaVendorAdapter preserves connection
release mode for JTA  Issue: SPR-16162
",482935,6759,311015,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"120","spring-projects/spring-framework","87375fe6f81cb70f9ee3e44c4800ef8edce655a0",14,"2017-11-10 16:43:12-05:00","ServerHttpRequest exposes SSL certificates  Issue:
SPR-15964
",483110,6761,311068,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"121","spring-projects/spring-framework","72f20e8d4f6ce1000bc59662ba235ab56094b0e4",4,"2017-11-11 00:37:50+01:00","Polishing
",483112,6761,311074,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"122","spring-projects/spring-framework","3091feee231bf4f5b129e88ba371dd40f8d9a474",1,"2017-11-13 21:50:55+01:00","SpringValidatorAdapter skips value retrieval for
Set field without index  Issue: SPR-16177
",483327,6761,311083,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"123","spring-projects/spring-framework","b5cedd43eb2b70510729696554bbc1f99003ac10",5,"2017-11-13 21:51:11+01:00","Consistent and efficient access to BeanDefinition
argument values  Issue: SPR-16192
",483406,6762,311119,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"124","spring-projects/spring-framework","5e86049438a2b82779fb0add2b6f987e2f1141e2",11,"2017-11-13 23:06:26-05:00","Expose WebSocket options for Tomcat/Jetty
",483480,6762,311140,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"125","spring-projects/spring-framework","7af99102446480dd774406776e75e39409218534",3,"2017-11-16 09:36:23+01:00","Restored support for placeholders in mvc namespace
resource locations  With the recent charset
mechanism in place, we cannot rely on implicit
placeholder parsing during String-to-Resource
conversion anymore.
",483498,6762,311182,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"126","spring-projects/spring-framework","cc7c90cca567e41958da1e031520b7662a9ec579",1,"2017-11-16 10:52:56+01:00","Polishing
",483497,6762,311181,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"127","spring-projects/spring-framework","20fcefc6477f2f3d9aa88cc8b8c3686e5b5cf28b",1,"2017-11-19 21:16:29+01:00","ResourceHttpRequestHandler uses
EmbeddedValueResolverAware
",483528,6762,311219,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"128","spring-projects/spring-framework","bc8e525e604c5d56a7ef522a06c82821b4393916",1,"2017-11-20 17:02:22-05:00","Add shared instance of ReactiveAdapterRegistry
Issue: SPR-16218
",483558,6762,311289,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"129","spring-projects/spring-framework","3c2d1862f107c791ba94fa585420ed97fab6a024",2,"2017-11-21 21:46:30-05:00","Light refactoring/polish in reactive read/write
bridge  Issue: SPR-16207
",483689,6763,311311,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"130","spring-projects/spring-framework","06b2ab39088f128d3aa5ca355d0bc0f2c7b36ab3",2,"2017-11-21 22:57:15-05:00","Use volatile for subscriber in base publishers
Issue: SPR-16207
",483689,6763,311311,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"131","spring-projects/spring-framework","01a82b529107f75ded838bebeb0045aac8903be6",1,"2017-11-23 10:55:03-05:00","Improve semantics writing currentData  Before this
commit, the return value from write was
interpreted as the data being fully written and
ready to be released via releaseData().  This is
not true for WebSocketSession implementations
where a true return value simply means the message
was sent with the full payload but releas is not
appropriate until a send confirmation.
Technically not an issue since WebSocketSession's
extending this do not use pooled buffers.
Nevertheless this commit refines the semantics of
write, removes the releaseData() method, and makes
sub-classes responsible for releasing the buffer
when fully written (and they know best when that
is). As a bonus currentData is now private.
Issue: SPR-16207
",483756,6763,311368,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"132","spring-projects/spring-framework","b1c657fa4b81bc0d6ca9289beddc7b2c35d41457",2,"2017-11-26 17:16:39+01:00","Consistent nullability in DataAccessUtils through
nullableSingleResult  Issue: SPR-16225
",483758,6763,311399,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"133","spring-projects/spring-framework","b9a11685801511a866b415ae66ce4249a7d503a4",4,"2017-12-01 21:38:40-05:00","Consistently return null if certificates not
available  Issue: SPR-16244
",483785,6763,311408,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"134","spring-projects/spring-framework","583201b02c4e0f188e765f749be2232354eb5ffb",1,"2017-12-12 22:32:33-05:00","MappingJackson2MessageConverter uses generic type
Issue: SPR-16252
",483927,6763,311412,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"135","spring-projects/spring-framework","f23612c3a3e5624051b8653389ca1a192c5b4875",1,"2017-12-20 15:09:37+01:00","Add ResolvableType to HttpEntity for multipart
Publishers  This commit adds a ResolvableType
field to HttpEntity, in order to support
Publishers as multipart data. Without the type,
the MultipartHttpMessageWriter does not know which
delegate writer to use to write the part.  Issue:
SPR-16307
",484255,6764,311565,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"136","spring-projects/spring-framework","7035ee7ebb63f14e8947fe8c014bded3adfc028f",1,"2017-12-21 17:33:55+01:00","Support Publishers for multipart data in
BodyInserters  This commit uses the changes in the
previous commit to support Publishers as parts for
multipart data.  Issue: SPR-16307
",484313,6764,311593,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"137","spring-projects/spring-framework","37f0e8c6e541f58364691e1c49a179ed6e629570",5,"2018-01-05 15:46:45-05:00","Access to ApplicationContext via ServerWebExchange
Issue: SPR-16298
",484474,6764,311685,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"138","spring-projects/spring-framework","1a154c3e4c2296940e2c3920c664b4999d8dc368",1,"2018-01-07 23:18:28+01:00","Consistently throw FileNotFoundException even for
NIO access  Issue: SPR-16334
",484510,6764,311688,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"139","spring-projects/spring-framework","6a1fe0b1d06efe894a035451b733a3da3b0b1b45",1,"2018-01-07 23:23:45+01:00","FunctionReference's method field is volatile
Issue: SPR-16255
",484559,6764,311689,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"140","spring-projects/spring-framework","4a57e26d76bf6263098785bcc050e4bf7c29212c",1,"2018-01-07 23:33:35+01:00","Polishing
",484617,6764,311687,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"141","spring-projects/spring-framework","e43439c6c336888917fd99c937e8abe7f4ae41ce",3,"2018-01-09 22:19:46+01:00","SqlParameterSource interface exposes parameter
names  Includes default implementations of
getSqlType and getTypeName.  Issue: SPR-16361
",484788,6764,311728,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"142","spring-projects/spring-framework","018469286db92135d82aab8c5a5b6f64ec0a2be7",1,"2018-01-09 16:37:52-05:00","Polish
",484794,6764,311734,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"143","spring-projects/spring-framework","06e6386dc9d99498930314927cbaecd2a0766093",4,"2018-01-12 18:23:52+01:00","CollectionUtils.lastElement for common Set/List
extraction  Issue: SPR-16374
",485007,6764,311811,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"144","spring-projects/spring-framework","9623cdec4883e134c2691cec56c39e59e1b4b80a",1,"2018-01-14 17:45:58+01:00","Functional response builders allow for non-
standard HTTP status codes  Issue: SPR-16366
",485029,6764,311837,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"145","spring-projects/spring-framework","0c289283ff4fab171b527b7f195639e7a950f470",1,"2018-01-17 12:55:52-05:00","Separate from expectations from response creation
This commit separates the creation of a response
so that it is executed after the synchronized
block inside which requests need to be matched and
validated (for order and count).  This allows a
ResponseCreator to be slow or block if it has to.
Issue: SPR-16319
",485174,6765,311942,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"146","spring-projects/spring-framework","4c7414833beacab66957c12df52bffe58df60709",4,"2018-01-19 12:30:03+01:00","ResolvableType returns clone for cached state with
original local source  Issue: SPR-16210
",485314,6765,311938,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"147","spring-projects/spring-framework","40127bd9adde6f44963c47edd3ed57c623980c26",2,"2018-01-19 12:30:10+01:00","Polishing
",485311,6765,311937,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"148","spring-projects/spring-framework","61579ffe7b8dc60c69224b71073da4255012311b",1,"2018-01-22 21:34:44+01:00","Polishing
",485508,6765,311998,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"149","spring-projects/spring-framework","0e6f8df0a8ad0aed9046884cb06313ba7165feae",2,"2018-01-24 22:13:40+01:00","ServletServerHttpRequest.getURI() ignores
malformed query string  The resolved URI instance
is also being cached now. This should not make a
difference in a real Servlet environment but does
affect tests which assumed they could modify an
HttpServletRequest path behind a pre-created
ServletServerHttpRequest instance. Our WebSocket
test base class has been revised accordingly, re-
creating the ServletServerHttpRequest in such a
case.  Issue: SPR-16414
",485547,6765,312006,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"150","spring-projects/spring-framework","ef3f93e84aa75ae5c70aff0c4a42dc6e3bd55498",2,"2018-01-25 19:10:31+01:00","Language tag parsing support in StringUtils and
StringToLocaleConverter  Issue: SPR-16188
",485608,6765,312039,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"151","spring-projects/spring-framework","857a5b03b76cb44e1873abc449a14fb8f5055ac5",1,"2018-01-30 16:55:09+01:00","SchedulerFactoryBean accepts external Quartz
SchedulerFactory instance  Issue: SPR-16439
",485787,6767,312183,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"152","spring-projects/spring-framework","4a1cc9ced789a73e34b153f5eff76267bfdf1f87",2,"2018-02-02 11:33:56+01:00","Constructor-provided field values get recorded for
failed binding result  Also,
TypeMismatchExceptions get registered via
BindingErrorProcessor.  Issue: SPR-16449
",485953,6767,312341,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"153","spring-projects/spring-framework","7f96827ade8f2bb0f86dd8abf339a85ca30f4e05",1,"2018-02-02 11:34:03+01:00","Polishing
",485955,6767,312344,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"154","spring-projects/spring-framework","609f173ebc7c14afa2cb2fb27a6446e06ec510d5",1,"2018-02-01 11:57:44+01:00","StringDecoder shouldn't chop off strings randomly
Issue: SPR-16337
",486112,6767,312382,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"155","spring-projects/spring-framework","55ee25065976780b58cbce8078a976851f1dbbaf",1,"2018-02-10 17:41:30+01:00","Object/FieldError stores source object as
transient (not serialized)  Issue: SPR-16372
",486365,6767,312485,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"156","spring-projects/spring-framework","711b0f50f2c29dfac7337a8ed3d269e0c2747bd6",2,"2018-02-11 13:26:20+03:00","Polish: replace the synchronized class ""Stack"" by
an unsynchronized one such as ""Deque"".
",486376,6767,312483,"igor-suhorukov","igor.suhorukov@gmail.com","Juergen Hoeller","jhoeller@pivotal.io"
"157","spring-projects/spring-framework","8c623c8a429afe83d3d6fed008eec0a9a45d29e2",4,"2018-02-12 01:20:10+09:00","Supports ConversionService on
SingleColumnRowMapper Issue: SPR-16483
",486449,6768,312519,"Kazuki Shimizu","kazuki43zoo@gmail.com","Juergen Hoeller","jhoeller@pivotal.io"
"158","spring-projects/spring-framework","766e6028d7fa648ce83113d9ee6325b1ac90b50e",2,"2018-02-14 14:40:52+01:00","Defensively handle
DatabaseMetaData.getConnection() returning null
Issue: SPR-16495
",486505,6768,312540,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"159","spring-projects/spring-framework","cd8a1bdb8bcf3fb903c7c88bdfd5c49c194f0c65",2,"2018-02-15 13:14:49+01:00","AcceptHeaderLocaleContextResolver leniently
handles invalid header value  Also falls back to
language-only match among its supported locales
now.  Issue: SPR-16500 Issue: SPR-16457
",486527,6768,312568,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"160","spring-projects/spring-framework","a6d527e57aedd94a2e23cc8d35572076dbf0e417",1,"2018-02-21 09:44:24-05:00","Call onAllDataRead when read() returns -1  When
read returns -1, we know we've reached the end of
input. Instead of waiting for the onAllDataRead
container callback, this commit proactively calls
onAllDataRead.  Issue: SPR-16521
",486449,6768,312576,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"161","spring-projects/spring-framework","c782075a13596a20eb3877cced2421b40246392e",6,"2018-02-25 11:11:42+03:00","Polish: Array designators ""[]"" should be on the
type, not the variable
",486431,6768,312587,"igor-suhorukov","igor.suhorukov@gmail.com","Juergen Hoeller","jhoeller@pivotal.io"
"162","spring-projects/spring-framework","3732032ee44009ed14dd5eca8140f57f4a56632f",1,"2018-02-25 18:23:00+01:00","Customizable PreparedStatementCreator in
NamedParameterJdbcTemplate  Issue: SPR-16050
",486414,6768,312599,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"163","spring-projects/spring-framework","c2d5ca9811683409ed44dfc6371189bc5f8c9cd3",4,"2018-02-26 13:05:12+01:00","Proper nullable return declaration for
AbstractValueAdaptingCache.lookup  Issue:
SPR-15540
",486443,6768,312607,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"164","spring-projects/spring-framework","356ef5199e218861dd935a25c20ebfdf60c6c78a",3,"2018-02-27 15:37:42-05:00","Polish  Issue: SPR-16519
",486469,6768,312612,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"165","spring-projects/spring-framework","95aad9cdc2eb3a9811d117a97bb1e96cf9787017",1,"2018-02-28 00:06:46+01:00","Interrupt listener invoker threads on shutdown
(after initial wait step)  Issue: SPR-16536
",486487,6768,312614,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"166","spring-projects/spring-framework","9962df65272e6208676b1e5cdd944dcfa974fe31",2,"2018-02-28 00:09:15+01:00","Polishing
",486471,6767,312593,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"167","spring-projects/spring-framework","27815847b109a9074bbbb49ac1faf74468d42d6a",1,"2018-02-27 16:53:29-05:00","content-length support in EncoderHttpMessageWriter
EncoderHttpMessageWriter checks explicitly for
Mono publishers and sets the content length, if it
is known for the given data item.  Issue:
SPR-16542
",486705,6772,312804,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"168","spring-projects/spring-framework","0f7485b01d1d52492dc5b6f4501d8b8c9ca21bdd",1,"2018-03-08 19:36:00+03:00","Polish: reorder the modifiers to comply with the
Java Language Specification.
",486725,6772,312837,"igor-suhorukov","igor.suhorukov@gmail.com","Juergen Hoeller","jhoeller@pivotal.io"
"169","spring-projects/spring-framework","50253f670ef9cf894fe8c077d4d58c562951cd41",1,"2018-03-08 18:13:00+01:00","Quick access to volatile field (full
synchronization only for lazy init)  Issue:
SPR-16570
",486690,6772,312843,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"170","spring-projects/spring-framework","36a222acd5ef02dc4452addcedc6708edf46ed4e",1,"2018-03-12 21:32:30+01:00","Take into account the MimeType's charset in
Jackson encoder  Notice that per specification,
only Unicode is supported (UTF8, UTF16_BE,
UTF16_LE, UTF32_BE, UTF32_LE).  Issue: SPR-16539
",486697,6772,312876,"sdeleuze","sdeleuze@pivotal.io","sdeleuze","sdeleuze@pivotal.io"
"171","spring-projects/spring-framework","cc12afdea2c4b2c3073c1c2bbc88091a4e7db74e",3,"2018-03-08 23:01:44-08:00","Add support for deferred import selector group
This commit allows several DeferredImportSelector
instances to be grouped and managed in a
centralized fashion. This typically allows
different instances to provide a consistent
ordered set of imports to apply.  Issue: SPR-16589
",487140,6774,313018,"Stephane Nicoll","snicoll@pivotal.io","Stephane Nicoll","snicoll@pivotal.io"
"172","spring-projects/spring-framework","356ef45e99c9d1e409f3d04330c44e43d2b45811",27,"2018-03-14 17:17:04+01:00","ConcurrentReferenceHashMap properly handles
getOrDefault for null values  Issue: SPR-16584
",487151,6774,313019,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"173","spring-projects/spring-framework","3988dd9ebb976dce8d79ba31bcc515c5e62154de",2,"2018-03-14 17:24:58+01:00","Polishing
",487150,6774,313027,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"174","spring-projects/spring-framework","cb8c6e32519c21b6ec4eb097244c1e6464c29a89",3,"2018-03-13 15:09:24-04:00","Add SimpleEvaluationContext  Issue: SPR-16588
",487220,6775,313105,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"175","spring-projects/spring-framework","f8588e364a4846723ac4be6a914b13404ef412ea",1,"2018-03-16 14:17:50+01:00","AcceptHeaderLocaleResolver keeps language match
among supported locales  Issue: SPR-16599
",487285,6775,313122,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"176","spring-projects/spring-framework","2c7efbb9d09f46691c905467e5a192f79acfa55b",1,"2018-03-19 12:04:51+01:00","Deprecate TableMetaDataContext.getSimulationQueryF
orGetGeneratedKey
",487955,6783,313427,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"177","spring-projects/spring-framework","88a17a4b10a110eee9c30585999a275ccffa3c17",1,"2018-03-20 12:21:45-04:00","Reactor2TcpClient constructor with address
supplier  Issue: SPR-12452
",488084,6783,313429,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"178","spring-projects/spring-framework","1fd5935afab55a25776e8d5561e197e864086ef1",2,"2018-03-21 12:06:40+01:00","SimplePropertyAccessor with configurable write
support  Issue: SPR-16588
",488150,6784,313490,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"179","spring-projects/spring-framework","ba5ef6456faa1ce6f39c8f5474ebf56cb5d07052",1,"2018-03-21 16:12:32+01:00","WebFluxResponseStatusExceptionHandler for
@ResponseStatus introspection  The web.server
package is quite low-level and should not depend
on web.bind in order to avoid a dependency cycle.
Extracting the introspection of the ResponseStatus
annotation into a WebFlux-level subclass resolves
the cycle.  Issue: SPR-16567
",488184,6786,313543,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"180","spring-projects/spring-framework","19293b9847783cde9e202dde139fb29696ede703",1,"2018-03-16 10:40:22-04:00","SimpleEvaluationContext builder  Issue: SPR-16588
",488194,6786,313598,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"181","spring-projects/spring-framework","9128226da45eb40f8d65ab495965a1a734f0a2e5",1,"2018-03-24 16:30:37+01:00","SimpleEvaluationContext.Builder
withMethodResolvers/withInstanceMethods  Includes
DataBindingMethodResolver as
ReflectiveMethodResolver subclass.  Issue:
SPR-16588
",488326,6787,313714,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"182","spring-projects/spring-framework","c60cefa3311bbb087591f16ebec822f6ba5018c5",3,"2018-03-27 00:22:54+02:00","SimpleEvaluationContext.Builder
withRootObject/withTypedRootObject  Issue:
SPR-16588
",488366,6787,313720,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"183","spring-projects/spring-framework","f9e6ea548241194b46e7eed1e47960e2c30119b7",1,"2018-03-28 22:13:34-04:00","MvcResult returns asyncResult after asyncDispatch
Issue: SPR-16648
",488411,6788,313799,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"184","spring-projects/spring-framework","1cc513d7db1ae20a1cd25a798b875bb7fabb231f",2,"2018-03-29 23:44:04+02:00","Consistent to/cc/bcc array handling and revised
hashCode without text  Issue: SPR-16671
",488459,6788,313874,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"185","spring-projects/spring-framework","d553ddc5b3a657adebad04d9f3c7d466fbdd7b05",1,"2018-03-29 23:50:17+02:00","Nullability refinements (based on IntelliJ IDEA
2018.1 introspection)  Issue: SPR-15756
",488454,6788,313871,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"186","spring-projects/spring-framework","78681c6369425a878934780fb6efa4e5ea24bded",3,"2018-03-30 15:19:38+02:00","JndiRmiServiceExporter still calls
PortableRemoteObject when available  Issue:
SPR-16670
",488523,6789,313943,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"187","spring-projects/spring-framework","4da27c2a734e89bd44f5fcadacdce9f1a830d396",1,"2018-03-31 00:18:14+02:00","Avoid unnecessary introspection on methods and
meta-annotations  Issue: SPR-16667
",488553,6789,313952,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"188","spring-projects/spring-framework","d9e17a62ce0a35af35a92061dbdbff070c655a50",1,"2018-03-31 12:03:03-04:00","Refine SyncInvocableHandlerMethod error handling
Ensure the error is wrapped as
ServerErrorException
",488611,6789,313978,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"189","spring-projects/spring-framework","66a3a82fb31b610e63bb27e7ddef02c2b63d8c50",4,"2018-04-01 00:21:15+02:00","Avoid reference to HandlerMethod class in
ServerErrorException  This breaks the package
dependency cycle between web.server/web.method and
makes ServerErrorException more generally
applicable. Includes deprecation of the plain
reason constructor variant, in favor of providing
a Method or MethodParameter context (which
MatrixVariableMethodArgumentResolver does now).
",488615,6789,313982,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"190","spring-projects/spring-framework","7e2726f40018ad83be9ae1d9d5b59f59e981d66a",2,"2018-04-10 11:13:45+02:00","Add remoteAddress() to ServerRequest  Issue:
SPR-16681
",488851,6791,314063,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"191","spring-projects/spring-framework","61c3db0869416bf61e7e4cbc5bd7dd2ece24b0a2",1,"2018-04-11 12:47:55+02:00","MethodHandles.Lookup.defineClass for CGLIB class
definition purposes  Spring's CGLIB fork is
patched with local copies of affected files here,
introducing the notion of a ""contextClass"" (e.g.
the proxy superclass) which gets passed through to
ReflectUtils.defineClass for delegating to
MethodHandles.Lookup.defineClass eventually,
against a privateLookupIn(contextClass) lookup
context on JDK 9/10/11.  Issue: SPR-15859
",490414,6804,314689,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"192","spring-projects/spring-framework","ff2228fdaf131d57b5c8c5918ee8d07c6dd9bbac",8,"2018-04-16 23:56:30-04:00","Selector header name is exposed for configuration
Issue: SPR-16732
",490510,6806,314798,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"193","spring-projects/spring-framework","06041ea4e2b25662fb26af84ee7e9c1d2b387e62",1,"2018-04-17 17:57:02-04:00","Polish (minor) in
AbstractMessageReaderArgumentResolver
",490600,6806,314802,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"194","spring-projects/spring-framework","eaff2c28a7848e9445076d30b0b3a0ffe75e8b5d",3,"2018-04-27 18:23:42+02:00","Consistent target method resolution for event and
caching expressions  Issue: SPR-16779
",490653,6807,314819,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"195","spring-projects/spring-framework","44cf002c00228e0a7abd7aa2152702deeb561cf3",4,"2018-04-27 18:24:59+02:00","Null-safe handling of response type in
AcceptHeaderRequestCallback  Issue: SPR-16690
",490661,6807,314820,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"196","spring-projects/spring-framework","ad0d79a97bdd3abf7e9e712efd7742d131e47871",1,"2018-05-01 23:50:34+02:00","Lenient fallback to plain getBundle call without
Control handle  Includes defaultEncoding variant
for platform default encoding.  Issue: SPR-16776
",490682,6807,314851,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"197","spring-projects/spring-framework","f8c2d7ab51a6a98cef97b59e2562260230f97bb9",1,"2018-05-01 23:52:12+02:00","Nullable HttpMethod parameter only on internal
doExecute delegate  Issue: SPR-15540
",490683,6807,314852,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"198","spring-projects/spring-framework","22edab852da456bea728daf84df09f0047e1d13f",4,"2018-04-23 11:12:40+02:00","Provide simple way to create ServerRequest  This
commit introduces support for creating a new
`ServerRequest` from an existing instance. This is
especially useful when filtering requests in a
HandlerFilterFunction.  Issue: SPR-16707
",491117,6809,314988,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"199","spring-projects/spring-framework","3917737df2e6244b27973dc6e06c9b111696f255",1,"2018-05-07 14:17:15+02:00","Polishing
",491217,6813,315078,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"200","spring-projects/spring-framework","eef592d901df1a3f477253c864b7ade9673d8da8",1,"2018-05-10 09:59:02-04:00","Add builder to MockServerWebExchange  Issue:
SPR-16772
",491347,6813,315136,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"201","spring-projects/spring-framework","79e809be24157b621ba8f8d569269c3c9fb3783f",2,"2018-05-10 15:39:47-04:00","Public RequestCallback/ResponseExtractor factory
methods  Issue: SPR-8604
",491349,6813,315181,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"202","spring-projects/spring-framework","3af5f00ee71a22be2a8e246c214749f3d6a6318f",14,"2018-05-14 15:50:16-04:00","UnsupportedMediaType[Status]Exception reports body
type  Issue: SPR-16805
",491867,6818,315342,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"203","spring-projects/spring-framework","29158aa79acb43d5c3d95689914e54c28426f8d7",2,"2018-05-16 10:03:29-04:00","Expose timeToFirstMessage in Java/XML config
Issue: SPR-16531
",491961,6818,315400,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"204","spring-projects/spring-framework","fbd12e9d16c84c372a1e851bd73e6915670427fc",4,"2018-05-17 17:27:52-04:00","Support for SslInfo in ServerHttpRequest#mutate
Issue: SPR-16830
",492016,6818,315501,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"205","spring-projects/spring-framework","d9c63182d90eafaa98d950bf2ae748a050eb7bd8",4,"2018-05-18 22:20:29+02:00","MapSqlParameterSource.addValue declares nullable
value parameter  Issue: SPR-16843
",492016,6818,315503,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"206","spring-projects/spring-framework","e043481a268b79bb59347cde7d14cc40933d62db",1,"2018-05-18 15:12:02-04:00","STOMP client supports setting accept-version
Issue: SPR-16844
",492031,6818,315516,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"207","spring-projects/spring-framework","192c7a56277a651839cf9275a59eb5001b56ff99",11,"2018-05-18 21:30:13-04:00","WebSession to WebSocketSession attribute passing
This commit makes it possible to pass attributes
from the WebSession of a handshake request to the
WebSocketSession, by configuring a
Predicate<String> on HandshakeWebSocketService.
Issue: SPR-16212
",492120,6819,315585,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"208","spring-projects/spring-framework","6e5273f08e65061ed03f1224211a6b4787bf6f57",6,"2018-05-21 15:14:28-04:00","Polish CodecConfigurer support classes
Functionally equivalent updates to package private
classes to improve the code and make it easier to
understand.
",492121,6822,315676,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"209","spring-projects/spring-framework","9b496b1264e1f9322af666399dd451987cfdd29c",1,"2018-05-21 18:50:00-04:00","CodecConfigurer internal refactoring  Improve how
HTTP message writers are obtained for general use
vs for multipart requests.
",492108,6822,315730,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"210","spring-projects/spring-framework","5207672b3f3cfd4f341dcbd21fa76727fd61888d",5,"2018-05-19 09:01:02-04:00","Configurable support for static resource encodings
The new EncodedResourceResolver is a generalized
version of GzipResourceResolver that can be
configured to support different content codings,
by ""br"" and ""gzip"".  GzipResourceResolver is now
deprecated.  Issue: SPR-16381
",492327,6824,315860,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"211","spring-projects/spring-framework","f121aa5e31b1885aff931a5f0caea0712ea69b73",12,"2018-05-22 15:33:17-04:00","Immutable Resource[Resolver|Transformer]Chains
Issue: SPR-16862
",492353,6824,315855,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"212","spring-projects/spring-framework","1e4a3a2370b9ded44a62155aea59c0d81c36149f",3,"2018-05-23 14:56:55-04:00","Return SslInfo only if X509Certificate[] present
Issue: SPR-16842
",492347,6824,315857,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"213","spring-projects/spring-framework","fbf25c536d6b5e5ae283387c011dfab9040336ad",5,"2018-05-23 21:48:19-04:00","ChannelInterceptor default methods + deprecate
adapter
",492323,6824,315858,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"214","spring-projects/spring-framework","d77797f42c2da26286d5bb9681d6f2a0018792ce",3,"2018-05-25 13:30:57-04:00","Improve readability of Body[Inserters|Extractors]
",492339,6825,315870,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"215","spring-projects/spring-framework","8593fec22cd6c196939e0b8f9f347593f91fe697",1,"2018-05-29 21:47:10+02:00","Avoid ConstantConditions warnings suppression
(plus related polishing)  Issue: SPR-15756
",492389,6825,315910,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"216","spring-projects/spring-framework","46a89d9534cbb5596a2754a7655f678b27d504da",3,"2018-05-29 21:51:06+02:00","Restore lenient null return value for
ConditionContext.getBeanFactory()  Includes
nullable return value for getClassLoader() with
corresponding notes in applicable javadoc.  Issue:
SPR-16866
",492463,6826,315949,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"217","spring-projects/spring-framework","124d4c833c107edcf7287d0833211768e1067120",3,"2018-06-01 15:22:24-04:00","Support for Servlet request params with HTTP
DELETE  This commit adds FormContentFilter, which
is the same as the HttpPutFormContentFilter but
also supports DELETE.  The
HttpPutFormContentFilter is now deprecated.
Issue: SPR-16874
",492574,6827,315977,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"218","spring-projects/spring-framework","3acb96efd0e172ed0d7e6dc72077046d2232cbbd",2,"2018-06-04 23:30:35-04:00","CachingResourceResolver varies by known codings
only  Issue: SPR-16381
",492610,6827,316027,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"219","spring-projects/spring-framework","fd946b815736408c0e9d517c82671b40d3951d0f",1,"2018-06-05 16:23:21-04:00","Protected getContentType in
DecoderHttpMessageReader  Issue: SPR-16856
",492612,6827,316040,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"220","spring-projects/spring-framework","25559b9e44ae97184c5a669d7e6a94f8762fd4cd",1,"2018-06-06 21:31:24+02:00","Polishing
",492556,6827,316037,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"221","spring-projects/spring-framework","86c861516d55c69bae0150271c1a10d40afa726e",2,"2018-06-08 15:32:07-04:00","Accept Predicate instead of HandlerTypePredicate
Issue: SPR-16336
",492412,6826,316066,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"222","spring-projects/spring-framework","b790bd1fd6843129c706139861914a0405dc86a3",5,"2018-06-11 14:10:12+02:00","LinkedCaseInsensitiveMap explicitly implements
put/computeIfAbsent  Issue: SPR-16926
",492471,6826,316068,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"223","spring-projects/spring-framework","f4bffea739a0162585ad5cf71065f179efcd46a6",6,"2018-06-09 04:15:11-04:00","Support for @SendTo and @SendToUser for same
method  Issue: SPR-16891
",492497,6826,316079,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"224","spring-projects/spring-framework","3fc8ec498c7c7ae3074a4980971b5eb31635cc2c",2,"2018-06-13 22:03:16+02:00","MockHttpServletRequest returns a single
InputStream or Reader  Issue: SPR-16505 Issue:
SPR-16499
",492578,6826,316106,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"225","spring-projects/spring-framework","09d9450154be796349dabdc606ade57beae08724",6,"2018-06-14 11:22:43+02:00","Add SameSite support in WebFlux SESSION cookies
This commit adds support for the ""SameSite""
attribute in response cookies. As explained in
rfc6265bis, this attribute can be used to limit
the scope of a cookie so that it can't be attached
to a request unless it is sent from the ""same-
site"".  This feature is currently supported by
Google Chrome and Firefox, other browsers will
ignore this attribute.  This feature can help
prevent CSRF attacks; this is why this commit adds
this attribute by default for SESSION Cookies in
WebFlux.  See: https://tools.ietf.org/html/draft-
ietf-httpbis-rfc6265bis  Issue: SPR-16418
",492616,6826,316178,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"226","spring-projects/spring-framework","dad9ed83b7d305e4ca55cc052a20e01591b475bc",1,"2018-06-14 17:02:00-04:00","Polish MvcUriComponentsBuilder
",492644,6827,316207,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"227","spring-projects/spring-framework","58cce615f54418fabd9f3b5d3fb19dcd8456c6a1",2,"2018-06-14 22:05:53-04:00","MvcUriComponentsBuilder is aware of path prefixes
Issue: SPR-16336
",492688,6827,316209,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"228","spring-projects/spring-framework","38f9a7b07201677411b8da686e722d85e44f126b",1,"2018-06-15 22:12:14+02:00","FileSystemResource supports java.nio.file.Path
based setup  Issue: SPR-16833
",493035,6830,316342,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"229","spring-projects/spring-framework","28a5c3009ea0c31f879c0bb8b9e6cfd33faa81e5",2,"2018-06-18 17:48:55-04:00","Improve DEBUG/TRACE logging for Spring MVC  Issue:
SPR-16898
",493026,6830,316366,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"230","spring-projects/spring-framework","900bc8a2e341277296a463c7b5db4abb944e14d7",6,"2018-06-22 22:41:30-04:00","Logging improvements for WebFlux  Issue: SPR-16898
",493227,6831,316513,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"231","spring-projects/spring-framework","2a15962d7fef281134a71a67de7020a7e64aba8b",2,"2018-06-25 18:12:12+02:00","WebHttpHandlerBuilder retains ApplicationContext
in copy constructor  Issue: SPR-16972
",493230,6831,316510,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"232","spring-projects/spring-framework","847202c8f8e595218c0432715f6e5466ab9ab881",1,"2018-06-25 18:12:43+02:00","MimeTypeUtils lazily initializes SecureRandom for
multipart boundary  Issue: SPR-16974
",493242,6831,316513,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"233","spring-projects/spring-framework","eeebd51f57f452c57bc159fa8a2ad9746c4c2f8c",24,"2018-06-20 19:44:39-07:00","Use consistent class design  Update all classes so
that inner classes are always last. Also ensure
that utility classes are always final and have a
private constructor and make exceptions final
whenever possible.  Issue: SPR-16968
",493354,6831,317574,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"234","spring-projects/spring-framework","81cb740e0ae23b6bd167f5c42ceae8294a27a14a",3,"2018-06-28 13:29:08+02:00","New postProcessProperties variant on
InstantiationAwareBeanPostProcessor  Allows for
skipping the now-deprecated
postProcessPropertyValues callback with its
expensive PropertyDescriptor retrieval
requirement. RequiredAnnotationBeanPostProcessor
(which is dependent on postProcessPropertyValues)
and the @Required annotation itself are also
deprecated now: in favor of constructor injection
(or afterPropertiesSet).  Issue: SPR-16918
",493672,6833,317942,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"235","spring-projects/spring-framework","b6d95567e84bbf5f3f25f5c403ac0ed57b376076",1,"2018-06-28 13:43:43+02:00","Explicit support for Hibernate Integrators on
LocalSessionFactoryBean  Issue: SPR-16828
",493635,6833,317942,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"236","spring-projects/spring-framework","40efcc933ca2cb5733655d114f36be035dc9fd54",7,"2018-06-28 14:51:31+02:00","Polishing
",493602,6833,317918,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"237","spring-projects/spring-framework","5ec8db1adc00bb51f4950811987cb3596c376dd3",1,"2018-06-29 15:33:08-03:00","Polish CookieWebSessionIdResolver
",493466,6830,317798,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"238","spring-projects/spring-framework","51ec7c6b4ac295dd4f647288fe4bc3e4fb4bfe9c",1,"2018-06-29 16:38:39-03:00","Add hook for customizing response cookie  Issue:
SPR-16980
",493487,6830,317806,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"239","spring-projects/spring-framework","06f9fb9aeb24c751d75721ff776e579d2c0b084e",1,"2018-07-02 22:32:29+02:00","Refine Class serializability check for actual
Graal compatibility  Issue: SPR-16992
",493576,6830,317855,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"240","spring-projects/spring-framework","779cf8d240941118e0097aa47984c9b414e45050",6,"2018-07-02 22:32:57+02:00","ConcurrentReferenceHashMap caches EntrySet in
volatile field  Includes an efficient
implementation of isEmpty(), not relying on a full
entry count but rather backing out once a non-
empty hash segment has been found.  Issue:
SPR-16994
",493585,6830,317853,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"241","spring-projects/spring-framework","8bffb6a798424b83fa1b20f344650732d2f2c985",6,"2018-07-03 12:43:00-04:00","Add defaultRequest option to WebClient.Builder
Issue: SPR-16873
",493649,6830,317842,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"242","spring-projects/spring-framework","094c9b8bd2a4d172109d7cf1470ed26b074cabd6",2,"2018-07-04 15:07:09+02:00","LocalSessionFactoryBean and
HibernateTransactionManager for JPA setup
SessionHolder extends EntityManagerHolder now,
allowing for @PersistenceContext and co to
interact with HibernateTransactionManager's
thread-bound transactions, and
SpringSessionContext is capable of interacting
with JpaTransactionManager by detecting a plain
EntityManagerHolder as well.  Issue: SPR-17002
",493721,6833,317925,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"243","spring-projects/spring-framework","c0d4cb55c78b402c8d9c9a710eaa637ae6d3c56a",2,"2018-07-04 19:23:19+02:00","LocalSessionFactoryBuilder provides Hibernate 5.3
BeanContainer support  LocalSessionFactoryBean
automatically registers its containing BeanFactory
as a BeanContainer when Hibernate 5.3 or higher is
on the classpath.  Issue: SPR-16305
",493843,6835,317979,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"244","spring-projects/spring-framework","182243d20d8c4793d65ab6ea8d4a50d59e2e6545",2,"2018-07-04 21:32:51+02:00","BeanDefinitionOverrideException in case of
overriding not allowed  Issue: SPR-16982
",493873,6836,318017,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"245","spring-projects/spring-framework","83faee67d5b9e4c247d8cec3f151f030a7d00d3d",2,"2018-07-04 22:46:09+02:00","HttpMessageNotReadableException provides access to
HttpInputMessage  Issue: SPR-15588
",493916,6836,318043,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"246","spring-projects/spring-framework","fd90b73748112122c57b0346d48d08e3574accd7",1,"2018-07-03 15:54:19-04:00","Correlated WebFlux server log messages  Issue:
SPR-16966
",494013,6837,318093,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"247","spring-projects/spring-framework","82310660fdf1381db25970c751b0c32792590e43",4,"2018-07-03 20:54:19-04:00","Correlated encoding/decoding log messages via
hints  Issue: SPR-16966
",494064,6838,318153,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"248","spring-projects/spring-framework","b4fc7943e127cc4b0e1409f9b7ebaab4f42334cf",3,"2018-07-06 13:20:03+02:00","Make javax.inject.Provider impl invisible for
nested class introspection  Issue: SPR-17014
",494315,6838,318360,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"249","spring-projects/spring-framework","5dc49b16ea21ebac20d124d929f872d5aa060254",3,"2018-07-06 12:55:32-04:00","Correlated messages at HTTP adapter + WebSocket
level  Issue: SPR-16966
",494409,6837,318378,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"250","spring-projects/spring-framework","bc3cf0eeb8b96a75a7a8a6351665975ed8b5081d",3,"2018-07-06 14:29:19-04:00","Expose request id at the ServerHttpRequest level
Hiding it (at AbstractServerHttpRequest)
complicates matters since requests are often
mutated and decorated, plus it's also possible to
implement the interface directly (we've one,
albeit corner case).  Issue: SPR-16966
",494408,6837,318380,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"251","spring-projects/spring-framework","d9e8d3bbe13715ee122757deb896a75c9b8cde1d",2,"2018-07-09 15:52:36+02:00","Custom ""jdbcExceptionTranslator"" on
HibernateJpaDialect  Also available on
LocalSessionFactoryBean through
HibernateExceptionTranslator, as with our former
Hibernate 3 support.  Issue: SPR-17015
",494571,6838,318495,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"252","spring-projects/spring-framework","a663454fad556dd8bf17e4b4fe0482a39a3620c6",1,"2018-07-09 16:34:56+02:00","Changed Basic Authentication consumer to
setBasicAuth method  This commit changes the Basic
Authentication Consumer<HttpHeaders> to a basic
setBasicAuth(String, String) method.  Issue:
SPR-16913
",494561,6838,318490,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"253","spring-projects/spring-framework","3d6e38bb43fe86cc58bc816eff13b968c1e0884f",1,"2018-07-10 08:12:23-04:00","Conditional registration of task scheduler for
SockJS  Issue: SPR-16189
",496265,6841,317987,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"254","spring-projects/spring-framework","a40d25a760249e59e9c077648f844591c3acac8b",4,"2018-07-10 17:22:12-04:00","Remove no-op classes in web-related Java config
",496230,6841,317989,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"255","spring-projects/spring-framework","1b1bc7f5b53be7af5b5413fd6a3dfaf1fa07a032",2,"2018-07-10 16:18:31-04:00","Switch defaults and model for logging sensitive
data  Issue: SPR-17029
",496248,6841,317971,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"256","spring-projects/spring-framework","f6fdffd6634369d30f59ade1adc39d778d1d7e42",90,"2018-07-14 19:29:32+02:00","Lazily retrieve delegate beans in AsyncConfigurer
and CachingConfigurer  Introduces a configure
method pattern for Supplier-style configuration
and a common SingletonSupplier decorator for
method reference suppliers. Also declares
jcache.config and jcache.interceptor for non-null
conventions.  Issue: SPR-17021
",496651,6845,318215,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"257","spring-projects/spring-framework","93d91219fd47e2bab9a64e75ffc4ecc1290595f3",1,"2018-07-16 13:03:46+02:00","Support for ""cacheRegionFactory"" injection with
Hibernate 5  Issue: SPR-17043
",496662,6845,318231,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"258","spring-projects/spring-framework","faef363e8537a7a85e5b1fe46130be6f06a5c2fe",1,"2018-07-16 13:04:14+02:00","Evaluate @Cacheable(condition) once per method
invocation only  Issue: SPR-17024
",496693,6845,318231,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"259","spring-projects/spring-framework","5fb4982026437e59e61318e7d9078f36e7bb8bee",6,"2018-07-13 17:48:39-04:00","Support for encode() in UriComponentsBuilder  The
ability to request to encode before `build()`, and
more importantly before expanding, allows stricter
encoding to be applied to URI vars and
consequently to neutralize the effect of
characters with reserved meaning in a URI.  Issue:
SPR-17039
",496806,6845,318257,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"260","spring-projects/spring-framework","b915e42c387195ed956fd908602094139148aac3",1,"2018-07-16 19:45:35+02:00","Resolve target type for
GenericHttpMessageConverter.canWrite/write  Issue:
SPR-16877
",496811,6845,318258,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"261","spring-projects/spring-framework","75e45103b50c7d1c2323afe3ca279b60c6855917",1,"2018-07-16 15:36:53-04:00","Polish DefaultUriBuilderFactory
",496816,6845,318244,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"262","spring-projects/spring-framework","955665b419ec237029abfa0824ca8a47d410a423",11,"2018-07-17 17:01:34+02:00","Consistent processing of binding/validation
failures for data classes  Includes an extension
of SmartValidator for candidate value validation,
as well as nullability refinements in Validator
and BindingResult.  Issue: SPR-16840 Issue:
SPR-16841 Issue: SPR-16854
",496959,6845,318327,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"263","spring-projects/spring-framework","88e4006790dccbabc0ee4448a0b70c6912584818",3,"2018-07-17 17:57:59+02:00","CookieLocaleResolver is RFC6265 and language tag
compliant by default  Like CookieLocaleResolver,
LocaleChangeInterceptor parses both locale formats
by default now. Since it does not need to render
the locale, its languageTagCompliant property is
not relevant anymore at all.  The parseLocale
method in StringUtils validates the locale value
now and turns an empty locale into null,
compatible with parseLocaleString behavior and in
particular aligned with web locale parsing needs.
Issue: SPR-16700 Issue: SPR-16651
",496966,6845,318336,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"264","spring-projects/spring-framework","a87764f1fd218356690e05cf2aa964e92202eed6",1,"2018-04-11 10:42:36+02:00","Add support for Jetty Reactive Streams HTTP client
Leverage https://github.com/jetty-project/jetty-
reactive-httpclient to add support for Jetty in
WebClient via JettyClientHttpConnector.
Implemented with buffer copy instead of optimized
buffer wrapping because the latter hangs since
Callback#succeeded doesn't allow releasing the
buffer and requesting more data at different times
(required for Mono<DataBuffer> for example). See h
ttps://github.com/eclipse/jetty.project/issues/242
9.  Issue: SPR-15092
",497251,6848,318421,"sdeleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"265","spring-projects/spring-framework","790d515f8c49d9f80f41a2f0ca00535fa930ccc2",1,"2018-07-18 17:13:55+02:00","HandlerMethod exposes interface parameter
annotations as well  The HandlerMethodParameter
arrangement uses an approach similar to
ModelAttributeMethodProcessor's
FieldAwareConstructorParameter, merging the local
parameter annotations with interface-declared
annotations.  Issue: SPR-11055
",497419,6848,318421,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"266","spring-projects/spring-framework","833aee9b2d6727f80cfd22a8758de9dd2c0043ed",3,"2018-07-18 15:31:52-04:00","Add SimpLogging and use o.s.messaging.simp classes
Issue: SPR-17012
",497568,6855,318701,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"267","spring-projects/spring-framework","9c08a482d1e321791e84b3ffe5cc71b3b75f74ef",1,"2018-07-18 22:17:42+02:00","Prefer ArrayList/ArrayDeque over LinkedList for
multi-element holders  LinkedList remains in place
where a List is likely to remain empty or single-
element (in order to avoid unused capacity).
Issue: SPR-17037
",497563,6855,318701,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"268","spring-projects/spring-framework","1f5d0faf1f3a1ee1b8e26b76cd72a5fab3c2839b",1,"2018-07-19 11:38:10+02:00","HandlerMethod caches interface parameter
annotations  Issue: SPR-11055
",497614,6855,318720,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"269","spring-projects/spring-framework","c4df335a1db090a59de040cc81fdacfb594ebfb9",1,"2018-07-19 16:35:59+02:00","ReflectiveMethodExecutor invokes interface method
if possible  Issue: SPR-16845
",497688,6855,318741,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"270","spring-projects/spring-framework","252f52ab07d524d0a35cfa884d5bbf53a6abce61",3,"2018-07-20 00:17:31+02:00","Tighten (IntroductionAware)MethodMatcher contract
Provides a non-null guarantee for MethodMatcher's
targetClass argument and strict separation between
IntroductionAwareMethodMatcher and regular
MethodMatcher, enabling DefaultAdvisorChainFactory
to defer its IntroductionAdvisor determination
until encountering an actual
IntroductionAwareMethodMatcher (even behind
union/intersection).  Issue: SPR-17068
",497722,6855,318754,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"271","spring-projects/spring-framework","28cd6978b5afa7424389092eb330e0a27ccb63b6",13,"2018-07-19 09:11:57-04:00","Minor fixes: UriComponentsBuilder, UriComponents,
docs  After the latest changes, two small fixes in
the clone method to copy the encode flag, and in
the encodeUriTemplate method to account for
possible null query params.  Improvements in the
URI encoding section.  Issue: SPR-17039, SPR-17027
",497729,6855,318759,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"272","spring-projects/spring-framework","2734f01067fb231ee3fd3d6dd100e0ae6ed6ed0b",1,"2018-04-18 13:53:33-04:00","Provide XML assertions in WebTestClient  Adds XML-
based assertions in org.springframework.test.web.r
eactive.server.WebTestClient.BodyContentSpec for
asserting against the XML body as well as xPath,
similar to those assertions offered when using
MockMvcResultMatchers.xpath().  Issue: SPR-16741
",497944,6857,318873,"Eric Deandrea","Eric.Deandrea@gmail.com","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"273","spring-projects/spring-framework","0c62d6b5dabc33c3baa969980ada3dc578ab08c8",3,"2018-07-20 10:36:57-04:00","Polish  Leaving out hamcrest for now, to address
more broadly.  Issue: SPR-16741
",497889,6857,318868,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"274","spring-projects/spring-framework","91122ec0f507bf8b60bd4d6fa3e4aadf584b115d",4,"2018-07-20 22:28:40-04:00","Add Consumer methods to WebTestClient assertion
classes  Issue: SPR-16574
",498022,6857,318965,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"275","spring-projects/spring-framework","cfbacfd89bfb4ef93d1603f4ceca7a4906fc5c3f",1,"2018-07-22 17:49:53+02:00","Revise ResolvableType.as for introspection
performance  This revision limits serializability
of derived interfaces, superclasses and type
parameters, optimizing for introspection
performance instead.  Issue: SPR-17070
",497996,6857,318968,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"276","spring-projects/spring-framework","1603c4ab2fc49d1bd65f55e35ca899044835ca94",9,"2018-07-24 00:42:03+02:00","Programmatic ObjectProvider retrieval through
BeanFactory API  Introduces getBeanProvider(Class)
and getBeanProvider(ResolvableType), also
narrowing getBean(String, Class) and
isTypeMatch(String, Class) to a non-null Class
argument and enriching
NoUniqueBeanDefinitionException with a full
ResolvableType. In addition, ObjectProvider
supports iterable/stream access for collection-
style resolution of multiple matching beans now,
and collection injection falls back to an empty
collection in a single-constructor case with non-
null arguments.  Issue: SPR-17075 Issue: SPR-11419
Issue: SPR-15338
",498633,6858,319077,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"277","spring-projects/spring-framework","7500b144ae3bd56bff9f60683a98089b78a7cb41",5,"2018-07-23 23:22:16-04:00","Option to preserve publish order  Issue: SPR-13989
",498818,6860,319164,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"278","spring-projects/spring-framework","7f1a8d78b58be0d259795256eb18f5ddbc5caa9f",1,"2018-07-24 16:16:44+02:00","BeanFactoryAdvisorRetrievalHelper avoids
synchronization for name cache  Issue: SPR-16570
",498211,6860,319172,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"279","spring-projects/spring-framework","36bbbab02da4d5c4500523f23a5ce28fa6a87dfb",5,"2018-07-24 17:18:53+02:00","Deprecate ExtensionRegistryInitializer in protobuf
support  In order to be consistent with SPR-15776,
and since it does not provide clear added value,
this commit deprecates
ExtensionRegistryInitializer and uses
ExtensionRegistry parameter instead in
ProtobufHttpMessageConverter and
ProtobufJsonFormatHttpMessageConverter
constructors.  Issue: SPR-17081
",498236,6860,319197,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"280","spring-projects/spring-framework","02403f6a34835d6067b506205aaeae4c3260c3d5",1,"2018-07-24 21:44:43+02:00","Polishing
",498233,6860,319200,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"281","spring-projects/spring-framework","36a07aa89747bb5942bd4a1bf7f5192a2c48c5ef",3,"2018-03-19 18:16:46+01:00","Support Protobuf serialization in WebFlux  This
commit introduces Protobuf support in WebFlux via
dedicated codecs.  Flux<Message> are
serialized/deserialized using delimited Protobuf
messages with the size of each message specified
before the message itself. In that case, a
""delimited=true"" parameter is added to the content
type.  Mono<Message> are expected to use regular
Protobuf message format (without the size
prepended before the message).  Related
HttpMessageReader/Writer are automatically
registered when the ""com.google.protobuf:protobuf-
java"" library is detected in the classpath, and
can be customized easily if needed via
CodecConfigurer, for example to specify protocol
extensions via the ExtensionRegistry based
constructors.  Both ""application/x-protobuf"" and
""application/octet-stream"" mime types are
supported.  Issue: SPR-15776
",499253,6868,319510,"sdeleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"282","spring-projects/spring-framework","3899b7a909b15f521f99b2d267cb74264ac9682e",10,"2018-07-25 14:15:50+02:00","Refactor DefaultCodecs.protobufWriter into
protobufEncoder  Includes nullability declarations
for the protobuf package.  Issue: SPR-15776
",499280,6869,319533,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"283","spring-projects/spring-framework","c022f7c19d1dd47d47c36a9ec4dcc448f1fddad9",3,"2018-07-26 15:42:30-04:00","Polish
",499271,6869,319527,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"284","spring-projects/spring-framework","f74a631ea1714e1448c2c374bf83a2f48da1c992",183,"2018-07-30 22:08:11+02:00","Nullability refinements in spring-webmvc  Includes
revision of web.servlet.tags.form for non-null
conventions.  Issue: SPR-15540
",499513,6870,319529,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"285","spring-projects/spring-framework","9b671f84083f7e6ea01d7922f9b7476e974eba04",1,"2018-07-31 23:57:19+02:00","Polishing
",499527,6870,319531,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"286","spring-projects/spring-framework","c46dacc209bf36d175896ebd6d5e7aa82866653d",2,"2018-08-02 14:30:55+02:00","Support for deferred access to
StoredProcedureQuery output parameters  Issue:
SPR-17115
",499784,6870,319548,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"287","spring-projects/spring-framework","2474c487499c3a6b77dedbcbedf7fa8c2c5e3ba4",13,"2018-08-02 16:55:53+02:00","Polishing
",499758,6870,319538,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"288","spring-projects/spring-framework","a8a1fc6de5be2307eb56844ac1df1a09168f2ad9",4,"2018-08-03 14:41:33+03:00","Earlier processing of forwarded headers  Forwarded
headers are now processed before ServerWebExchange
is created through ForwardedHeaderTransformer
which has the same logic as the
ForwardedHeaderFilter but works on the request
only.  ForwardedHeaderFilter is deprecated as of
5.1 but if registered it is removed from the list
of filters and ForwardedHeaderTransformer is used
instead.  Issue: SPR-17072
",499854,6871,319614,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"289","spring-projects/spring-framework","bb2db87c2f3e038de4da504db479b097dbd081d7",3,"2018-08-01 14:38:06+02:00","Add support for adding cookies as headers in
MockHttpServletResponse  Issue: SPR-17110
",500022,6874,319738,"Vedran Pavic","vedran.pavic@gmail.com","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"290","spring-projects/spring-framework","2216964b54dee4a64d634ecb6dc9922f4f07b4bf",10,"2018-08-06 14:27:08+03:00","Polish RestTemplate exception hierarchy  Issue:
SPR-15404
",500179,6875,319774,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"291","spring-projects/spring-framework","69c6a40c501789165732c7fe6d1f7cfddf72881b",1,"2018-08-06 14:11:59+02:00","Consistent nullability for array/collection input
parameters  Includes pre-sizing of LinkedHashSet
for conversion from array.  Issue: SPR-17123
Issue: SPR-17074
",500178,6875,319774,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"292","spring-projects/spring-framework","2938a95435ba1827bcf603076812f8efa8805510",2,"2018-08-07 01:35:57+02:00","Pre-size LinkedHashSet for annotation parsers
Issue: SPR-17074
",500202,6875,319789,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"293","spring-projects/spring-framework","6b82a6c38c62aac17010bb9dd9446fc3397d8f2f",5,"2018-08-07 02:47:00+02:00","Polishing
",500192,6875,319786,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"294","spring-projects/spring-framework","c90ab5fb0aa9e295aa4d805929055b881bb6ad39",2,"2018-08-08 13:34:27+03:00","Polish Http[Client|Server]ErrorException hierarchy
",500290,6876,319813,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"295","spring-projects/spring-framework","a0dfdfcac3bec6ffdf72ef2b02938a82c04f2a98",4,"2018-08-08 14:07:01+03:00","Hierarchy under WebClientResponseException  Issue:
SPR-17145
",500392,6876,319881,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"296","spring-projects/spring-framework","3f7d4b107e5ffaa3ab773e611ff24f8e22071b8f",2,"2018-08-08 23:53:45+02:00","Avoid unnecessary annotation introspection on
framework classes  Issue: SPR-16933
",500487,6876,319857,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"297","spring-projects/spring-framework","8a1588ae295614858089c3382364825aa9f8b7e7",2,"2018-08-10 14:28:36+02:00","Add support for DataSize  This commit provides a
data type to represents a size in bytes and other
standard unit.  Issue: SPR-17154
",500720,6880,320064,"Stephane Nicoll","snicoll@pivotal.io","Stephane Nicoll","snicoll@pivotal.io"
"298","spring-projects/spring-framework","c437a0d1c3067e781ae3ae73ba197640402e6555",2,"2018-08-10 15:42:30+02:00","Declare default methods for supportsSourceType and
getOrder  Issue: SPR-17163
",500794,6881,320106,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"299","spring-projects/spring-framework","aebb2d52e0a33dbf9779ebf3054a110c280d23ff",1,"2018-08-10 15:45:46+02:00","Logging refinements for transaction and cache
processing (debug/trace)  Issue: SPR-16946
",500796,6881,320106,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"300","spring-projects/spring-framework","20d0221d4f315842ced55ffcf9d26f0bdb139e90",3,"2018-08-13 10:15:08+02:00","Use an import instead of FQCN  No that JCacheCache
extends AbstractValueAdaptingCache instead of
directly implementing Cache an import statement
can be used in favor of using the FQCN for the
field and constructor arguments.
",500805,6880,320124,"Marten Deinum","mdeinum@gmail.com","Juergen Hoeller","jhoeller@pivotal.io"
"301","spring-projects/spring-framework","430065c31d2c8f6cd332f87bb045e124390fc3aa",6,"2018-08-13 10:48:17+03:00","Order property for SimpUserRegistry
Issue:SPR-17142
",500854,6880,320137,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"302","spring-projects/spring-framework","99f012971185bedd86d59cf7e19c8e8b581e36e7",3,"2018-08-13 11:51:18+03:00","Fix URI var encoding issue with '$'  When
expanding and strictly encoding URI variables,
there is no need to quote `/` and `$` which will
be encoded anyway.  Issue: SPR-17168
",500857,6880,320137,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"303","spring-projects/spring-framework","347852e86ab72b16949abeb70f1d470276f7edb2",7,"2018-08-13 12:43:41+02:00","Avoid argument resolution overhead for no-arg
factory methods  Includes revised
InstantiationStrategy nullability for args array.
Issue: SPR-17171
",500877,6880,320144,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"304","spring-projects/spring-framework","04a7f0884be7f586d423533460e533a644e73151",1,"2018-08-13 12:43:59+02:00","SpringCacheAnnotationParser.parseCacheAnnotations
cannot be protected  Its parameter
DefaultCacheConfig is just package-visible...
",500877,6880,320144,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"305","spring-projects/spring-framework","1bc08c61e1edd3f3afc655ef03f3d5bcf2017b8f",2,"2018-08-14 12:29:31+03:00","Add ReactorResourceFactory  Issue: SPR-16963
",500933,6881,320227,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"306","spring-projects/spring-framework","109a2b49e5bf843721a2db8ca4e79899ac2d4ca6",4,"2018-08-15 17:30:14+02:00","Consistently skip unnecessary search on
superclasses and empty elements  Includes caching
of declared annotation arrays and combined
searching for several annotation types (used in
SpringCacheAnnotationParser).  Issue: SPR-16933
",500937,6881,320268,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"307","spring-projects/spring-framework","1eb06fcd9093c3aee754bd0084daa2c2229c14c1",10,"2018-08-16 16:34:36+02:00","Introduce JettyResourceFactory
JettyResourceFactory, similar to
ReactorResourceFactory, allows to share resources
(Executor, ByteBufferPool, Scheduler) between
Jetty clients and servers.  Issue: SPR-17179
",500977,6882,320363,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"308","spring-projects/spring-framework","95a56cd28dd2feb78d1f5d670a8e5f9a118a41e4",3,"2018-08-31 12:41:40+02:00","Polishing
",501018,6883,320418,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"309","spring-projects/spring-framework","d537a1cfb48b628af19d45641be87e6dec2460e8",1,"2018-09-05 21:17:04-04:00","Refine ReactorResourceFactory  1. Rename
globalResources to useGlobalResources. 2. Use of
global resources is mutually exlusive with
explicit config. 3. Allow Consumer<HttpResources>
to configure global resources. 4. Allow
ConnectionProvider + LoopResources Supplier to
customize    creation and initialization. 5. Do
not manage externally provided ConnectionProvider
+ LoopResources    instances.  Issue: SPR-17243
",501361,6883,320477,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"310","spring-projects/spring-framework","84ec382201b1f786660219d5e5e3c51a2d0bcfae",2,"2018-09-07 12:56:15+02:00","XMLEventReader.getElementText() properly checks
for start element  Issue: SPR-17233
",501459,6884,320519,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"311","spring-projects/spring-framework","65c8fa400f7b6b42c97468eba9c5f12beaccac41",1,"2018-09-13 18:23:19+02:00","Consistent ordered list access and lazy streaming
for ObjectProvider  Includes fallback match for
collection/map dependency if qualified.  Issue:
SPR-17272 Issue: SPR-17197
",501734,6886,320607,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"312","spring-projects/spring-framework","97cea7f36e264c2b193ae71609a44b6bd34e31b7",5,"2018-09-13 20:24:36+02:00","BeanDefinition interface exposes initMethodName
and destroyMethodName  Also includes setters for
role and description.  Issue: SPR-17275
",501763,6886,320636,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"313","spring-projects/spring-framework","db8e9eafb208860f53911c5f352074142b7f74ea",1,"2018-09-14 14:38:11-04:00","Add LogFormatUtils  1. Helper method to eliminate
duplication in formatting (de-)serialized
values for logging introduced with prior commit
#e62298.  2. Helper method for TRACE vs DEBUG
logging with different details.  Issue: SPR-17254
",501799,6887,320690,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"314","spring-projects/spring-framework","50c95427960c620d86068ac2deae8a6220eac636",1,"2018-09-19 22:19:28+02:00","Prefer explicit
""org.quartz.scheduler.instanceName"" over bean name
Issue: SPR-16884
",501970,6887,320745,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"315","spring-projects/spring-framework","d3c08552e9f9c5e0061cd1b518e4167d4a02ef9b",2,"2018-09-19 22:19:43+02:00","Revisit GenericApplicationContext.registerBean
constructor handling  Support for Kotlin primary
constructor and non-default public constructors in
addition to default instantiation, aligned with
AnnotationConfigApplicationContext and model
attribute processing.  Issue: SPR-17292
",502093,6887,320760,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"316","spring-projects/spring-framework","7481d73456b0e5a845912efe323ce8fddd8eb712",5,"2018-09-19 16:53:57-04:00","WebFlux HandshakeInfo exposes the remoteAddress
Issue: SPR-17192
",502116,6887,320790,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"317","spring-projects/spring-framework","c01f350abee4dee43873d79acf0ec85980d98755",2,"2018-10-09 16:26:24-04:00","Move MonoToListenableFutureAdapter to spring-core
This was a package private class in spring-
messaging since 5.0, and was recently made public
in 5.1. This commit promotes it to spring-core
where it belongs next to all other
ListenableFuture support classes.  Follow-up
refactoring for SPR-17336
",502512,6889,320847,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"318","spring-projects/spring-framework","19f33479322c17543b48d2a2ee9d68e95a3925f0",1,"2018-10-09 23:13:25+02:00","SpringBeanJobFactory supports autowiring through
ApplicationContext  Issue: SPR-17323
",502601,6889,320833,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"319","spring-projects/spring-framework","2b986af310f4bbbfbd3b19816fe243e60152a9ac",1,"2018-10-09 23:13:46+02:00","BasicAuthenticationInterceptor with
HttpHeaders.setBasicAuth alignment  Issue:
SPR-17326
",502629,6890,320876,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"320","spring-projects/spring-framework","062805fcb3012d5bdad6c93c6b9e33b62ffc4312",6,"2018-10-09 10:55:18+02:00","Recursively process DeferredImportSelector
properly  Previously, if a DeferredImportSelector
was identified at a later stage as part of
processing the collected set of deferred imports,
such selector was processed as a regular import
selector.  Semantically, it makes sense as we
already are in the deferred phase at this point
and it doesn't make much sense to bother about the
extra contract.  However, Spring Framework 5
introduced the notion of Group that a deferred
import selector can define. When it does, the
container has to honour the contract of the Group
rather than calling the simpler ImportSelector
parent contract.  This commit restructures the
processing of such case. When a deferred import
selector is detected while processing deferred
import selectors, a group is created with only
that selector and the group API is invoked.
Issue: SPR-17351
",502792,6890,320897,"Stephane Nicoll","snicoll@pivotal.io","Stephane Nicoll","snicoll@pivotal.io"
"321","spring-projects/spring-framework","d05924165b4709e85efaa9465068358657f15a3b",1,"2018-10-10 14:33:51-04:00","Refactor FilterWebHandler and
DefaultWebFilterChain  The chain is initialized
once and re-used vs creating the ""next"" chains on
every request.
",502803,6890,320921,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"322","spring-projects/spring-framework","ce7278aaf4f20348862267c2081c20dc5bd77128",25,"2018-10-03 21:18:24+02:00","Optimize HTTP headers management  Several
benchmarks underlined a few hotspots for CPU and
GC pressure in the Spring Framework codebase:  1.
`org.springframework.util.MimeType.<init>(String,
String, Map)` 2. `org.springframework.util.LinkedC
aseInsensitiveMap.convertKey(String)`  Both are
linked with HTTP request headers parsing and
response headers writin during the exchange
processing phase.  1) is linked to repeated calls
to `HttpHeaders.getContentType` within a single
request handling. The media type parsing operation
is expensive and the result doesn't change between
calls, since the request headers are immutable at
that point.  This commit improves this by caching
the parsed `MediaType` for the `""Content-Type""`
request header in the `ReadOnlyHttpHeaders` class.
This change is available for both Spring MVC and
Spring WebFlux.  2) is linked to
insertions/lookups in the
`LinkedCaseInsensitiveMap`, which is the data
structure behind `HttpHeaders`. Those operations
are creating a lot of garbage (including a lot of
`String` created by `toLowerCase`). We could
choose a more efficient data structure for storing
HTTP headers data.  As a first step, this commit
is focusing on Spring WebFlux and introduces
`MultiValueMap` implementations mapped by native
HTTP headers for the following servers: Tomcat,
Jetty, Netty and Undertow. Such implementations
avoid unnecessary copying of the headers and
leverages as much as possible optimized operations
provided by the native implementations.  This
change has a few consequences:  * `HttpHeaders`
can now wrap a `MultiValueMap` directly * The
default constructor of `HttpHeaders` is still
backed by a `LinkedCaseInsensitiveMap` * The HTTP
request headers for the websocket HTTP handshake
now need to be cloned, because native headers are
likely to be pooled/recycled by the server
implementation, hence gone when the initial HTTP
exchange is done  Issue: SPR-17250
",503461,6895,321032,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"323","spring-projects/spring-framework","c567e65eea1f2bee2776c4b4df020bb4d036cf90",1,"2018-10-11 13:51:38-04:00","WritetapConnector internal refactoring  Extract a
common delegate class to share between the request
and the to wiretap a Publisher and record and
buffer its data.  Preparation for SPR-17363.
",503525,6895,321024,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"324","spring-projects/spring-framework","8df0bc88d2f9f662919881ed3081f133656e37c8",8,"2018-10-11 19:10:11-04:00","Improve access to raw content in WebTestClient  If
the content has not been consumed, cause it to be
produced, and wait for a certain amount of time
before giving up, so the raw content can be made
available. This can occur when:  1) In a mock
server scenario the Flux representing the client
request content is passed directly to the mock
server request, but is never consumed because of
an error before the body is read.  2) Test obtains
FluxExchangeResult (e.g. for streaming) but
instead of consuming the Flux, it calls
getResponseBodyContent() instead.  Issue:
SPR-17363
",503566,6895,321027,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"325","spring-projects/spring-framework","309e70a48e6c8ce5e3199d31a753f08d82f60020",1,"2018-10-12 22:53:50+02:00","Separate factory method cache for introspection
purposes  Issue: SPR-17358 Issue: SPR-8891
",503601,6897,321070,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"326","spring-projects/spring-framework","58b3af94758ea8e6f5521dfecfcf3ab9d3610456",2,"2018-10-14 23:29:46+02:00","Nullability fine-tuning and related polishing
Issue: SPR-17250
",503691,6898,321090,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"327","spring-projects/spring-framework","d303c8a20f70f623ebdf6861868041f8664de403",2,"2018-10-18 14:48:45+02:00","Store PathPattern instead of String in attributes
This commit changes the attributes stored under
RouterFunctions.MATCHING_PATTERN_ATTRIBUTE and
HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE
from a String to a PathPattern, similar to what
annotated controllers set.  Issue: SPR-17395
",503814,6899,321121,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"328","spring-projects/spring-framework","5b5f7190bf9a2a90e5faa13fedcae2895b6e67e4",1,"2018-10-18 18:05:07+02:00","Declare
InvocableHandlerMethod.getMethodArgumentValues as
protected  Issue: SPR-17404
",503829,6899,321148,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"329","spring-projects/spring-framework","feeec344e530aeb32c0d9d36588b7fb821ac0e9e",4,"2018-10-23 11:52:09-04:00","ForwardedHeaderFilter works with Servlet FORWARD
Issue: SPR-16983
",504088,6900,321213,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"330","spring-projects/spring-framework","488a1d45618b9d9f0ad204dfc97edca463184e8c",1,"2018-10-24 16:27:12+02:00","Review DataBufferUtils for cancellation memory
leaks  Issue: SPR-17408
",504233,6900,321213,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"331","spring-projects/spring-framework","f0f1979fc534ff6d742c0ab62fce84fd6aa3e7f1",1,"2018-10-24 20:44:58+02:00","Support for @RequestParam Map declared with
MultipartFile/Part values  Issue: SPR-17405
",504349,6900,321220,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"332","spring-projects/spring-framework","50a4769162061f2e16dca7176f8b431093f08a27",3,"2018-10-24 21:18:57+02:00","Fix ResourceUrlEncodingFilter lifecycle  Prior to
this commit, the `ResourceUrlEncodingFilter` would
wrap the response and keep a reference to the
request. When `HttpServletResponse.encodeURL` is
later called during view rendering, the filter
looks at the request and extracts context mapping
information in order to resolve resource paths in
views.  This approach is flawed, when the filter
is used with JSPs - if the request is forwarded to
the container by the `InternalResourceView`, the
request information is overwritten by the
container. When the view is being rendered, the
information available in the request is outdated
and does not allow to correctly compute that
context mapping information.  This commit ensures
that that information is being extracted from the
request as soon as the `ResourceUrlProvider` is
set as a request attribute.  Issue: SPR-17421
",504371,6900,321216,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"333","spring-projects/spring-framework","fc957e95bb8c65e042b5eeb5d11ead60c277c53d",2,"2018-10-26 13:48:45+02:00","Configure ResourceUrlProvider in WebFlux  Prior to
this commit, no `ResourceUrlProvider` was
configured in WebFlux (no bean was contributed by
the WebFlux infrastructure). Also, several
`ResourceTransformer` instances that extend the
`ResourceTransformerSupport` base class need a
`ResourceUrlProvider` to resolve absolute URLs
when rewriting resource URLs. At this point, no
`ResourceUrlProvider` was configured and they
could only resolve relative URLs.  This commit
contributes a new `ResourceUrlProvider` to the
WebFlux configuration; this bean can be reused by
the WebFlux infrastructure and application code.
This also automatically configure this shared
`ResourceUrlProvider` instance on the resource
chain where needed.  Issue: SPR-17433
",504482,6900,321224,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"334","spring-projects/spring-framework","7c36549e3a6b93970bbcaa16d828beb505d76c15",1,"2018-10-30 16:36:01-04:00","Consistent InvocableHandlerMethod implementations
This commit makes the 3 existing
InvocableHandlerMethod types more consistent and
comparable with each other.  1. Use of consistent
method names and method order.  2. Consistent
error formatting.  3. Explicit for loops for
resolving argument values in webflux variant
because that makes it more readable, creates less
garabage, and it's the only way to bring
consistency since the other two variants cannot
throw exceptions inside Optional lambdas (vs
webflux variant which can wrap it in a Mono).  4.
Use package private HandlerMethodArgumentComposite
in webflux variant in order to pick up the
resolver argument caching that the other two
variants have.  5. Polish tests.  6. Add missing
tests for messaging variant.
",504691,6903,321337,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"335","spring-projects/spring-framework","3f42e161721537b1d97ff995ca67e3d522dcf561",2,"2018-10-30 17:15:09-04:00","Increase sharing among InvocableHandlerMethod
variants  In particular between reactive and non-
reactive web variants, but also preparing for a
messaing reactive variant.
",504662,6903,321332,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"336","spring-projects/spring-framework","48654c6483c15235191cdcb7e88d95346af10e87",3,"2018-11-01 14:20:43-04:00","Polish
",504667,6903,321330,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"337","spring-projects/spring-framework","0a7dcf14f97913aa9de540d003cb3d9d6403b1e4",3,"2018-11-05 12:26:20+01:00","Deprecate ReflectionUtils.invokeJdbcMethod (for
removal in 5.2)  Issue: SPR-17464
",504677,6903,321333,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"338","spring-projects/spring-framework","5e7a8b275d94586237a6725a80cedb761194b3d3",2,"2018-11-05 19:33:24+01:00","Polishing
",504696,6903,321343,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"339","spring-projects/spring-framework","ed1d63dcc3ea21c0f5460da776c32baa22df8c5a",1,"2018-11-06 14:14:12-05:00","ResolvableMethod copy in spring-messaging src/test
",505008,6904,321562,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"340","spring-projects/spring-framework","46a5fb7a9133a0c4a392ce23597623c64a16aa3c",2,"2018-11-13 16:56:56-05:00","Configurable Marshaller/Unmarshaller in JAXB2
codecs  Issue: SPR-17388
",505425,6909,321813,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"341","spring-projects/spring-framework","539cfc24c6a738a22fd00c0b4096fc1511877ddd",2,"2018-11-16 14:33:03+01:00","Refactor AbstractEncoderTestCase  Refactor
AbstractEncoderTestCase to resemble
AbstractDecoderTestCase  Issue: SPR-17449
",505575,6911,322143,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"342","spring-projects/spring-framework","88cb126511779608d377b33793a8b00cfded7602",3,"2018-10-04 09:38:53+02:00","Add RequestPredicate Visitor to WebFlux.fn  This
commit introduces RequestPredicates.Visitor, an
implementation of the visitor pattern for
RequestPredicates.  Issue: SPR-17322
",505865,6913,322273,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"343","spring-projects/spring-framework","2a5d7690b6259c4f8a00be387d4b38f554ac9b88",1,"2018-11-20 22:04:28+01:00","CglibAopProxy skips method proxy for
equals/hashCode/toString override  Issue:
SPR-17500
",505901,6913,322274,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"344","spring-projects/spring-framework","bf272b0b21f2fa1b5b90a9b7aeba96c106f5e090",8,"2018-11-22 16:12:38+01:00","Nullability fine-tuning based on IntelliJ IDEA
2018.3 inspection  Issue: SPR-15540
",505995,6913,322310,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"345","spring-projects/spring-framework","738097def2407166ff9d58c25836180f95eda77d",1,"2018-11-23 13:55:50+01:00","DefaultResponseErrorHandler detects non-standard
error code as well  Issue: SPR-17439
",506042,6913,322337,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"346","spring-projects/spring-framework","db63f7dd4a20f03019e9f63864342643cc6d8b46",2,"2018-12-05 14:13:24+01:00","StandardEvaluationContext.setVariable leniently
ignores null name  Issue: SPR-17565
",506247,6914,322421,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"347","spring-projects/spring-framework","3258ac1ec4159b3fe69cc9daad4ab054b90d0e6c",44,"2018-12-07 11:04:18+01:00","Expose request in WebClientResponseException  This
commit exposes the request that lead to it in
WebClientResponseException, as a HttpRequest
object.  Issue: SPR-17087
",506344,6914,322498,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"348","spring-projects/spring-framework","5bbbc82e19e4c2ed443ce955949137ec8c0a2e02",1,"2018-12-12 11:16:45+01:00","Consistent handling of null header values in
HttpHeaders  Issue: SPR-17588
",506355,6914,322507,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"349","spring-projects/spring-framework","2c98c1b81a2bfb6d0d13415a2fd222b642106146",2,"2018-12-12 12:16:14+01:00","Relaxed assertion in
NotificationPublisherAwareLazyTargetSource  Issue:
SPR-17592
",506356,6914,322536,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"350","spring-projects/spring-framework","270099383be3020948967d9615143ad6d30675a7",1,"2018-12-12 09:40:23-05:00","Add protected method in StandaloneMockMvcBuilder
To allow sub-classes to register additional MVC
infrastructure.  Issue: SPR-17520
",506365,6914,322555,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"351","spring-projects/spring-framework","09da10cc6c585995f4623793aa2b2f6a38b5284d",1,"2018-12-13 23:02:30+02:00","Propagate the cancel signal to the downstream
Issue: SPR-17609
",506415,6914,322606,"Violeta Georgieva","vgeorgieva@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"352","spring-projects/spring-framework","7a7958f2758df2fd6630d840d1ce11ada880d1de",1,"2018-12-25 13:20:09+01:00","MockMvcResultMatchers.forwardedUrl argument
declared as nullable  Issue: SPR-17623
",506555,6914,322623,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"353","spring-projects/spring-framework","4b24bcb79983dce73c0d957ab9f9ccb37c1ca955",1,"2019-01-02 14:32:50-05:00","More accurate checks for presence of MediaType.ALL
Typically a straight up equals as well as
Collections#contains checks for MediaType.ALL is
susceptible to the presence of media type
parameters.  This commits adds
equalsTypeAndSubtype as well as an
isPresentIn(Collection<MimeType>) methods to
MimeType to faciliate with checks for
MediaType.ALL.  Issue: SPR-17550
",506602,6914,322639,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"354","spring-projects/spring-framework","b94e8c4bef90c78231063ad2c6f5bec8fc11b899",1,"2019-01-08 13:57:56+08:00","Fix ClassCastException in FormHttpMessageConverter
We should not cast MultiValueMap<String, ?> to
MultiValueMap<String, String>
",506623,6914,322647,"王诗峣","wangshiyao@wangshiyao.com","Juergen Hoeller","jhoeller@pivotal.io"
"355","spring-projects/spring-framework","9cb5369cb9ead57245a945a4a3c21cfe321891b0",15,"2019-01-08 17:11:27+01:00","DependencyDescriptor supports TypeDescriptor
resolution for fields  This allows for proper
nested type conversion in @Value Optional fields
analogous to method parameters, through a new
TypeDescriptor-based method in the TypeConverter
SPI. As an additional and less involved measure
that is worth backporting,
DefaultListableBeanFactory defensively checks for
pre-converted Optional wrappers.  Issue: SPR-17607
",506680,6914,322658,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"356","spring-projects/spring-framework","d0033f12d02f7517f8b756fed8914f335c88e8b5",1,"2019-01-25 15:44:43+01:00","ApplicationListenerMethodAdapter uses target
method for order lookup  Fixes #22307
",506775,6914,322654,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"357","spring-projects/spring-framework","5aed117b68bd937f1b9d9fad78d70669b7ab3f73",3,"2019-01-28 22:50:29+01:00","Model interface exposes getAttribute method (next
to add/contains)  Fixes gh-22145
",506093,6907,322265,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"358","spring-projects/spring-framework","7a77e83e1099d29fd68f1f0a94216bb1e3d5cec7",1,"2019-01-28 22:50:56+01:00","SpelNodeImpl manages start/end position in
separate integer values  Fixes gh-22157
",506085,6907,322264,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"359","spring-projects/spring-framework","4c9ae6494f181967f5f28f06574f6d5f3ff7f9d8",1,"2019-02-05 15:38:41+01:00","Concurrency/nullability fine-tuning in
MimeType(Utils)  See gh-22340
",506165,6907,322275,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"360","spring-projects/spring-framework","0f73a69033e8ecc62af0a7a63167c09a2af495d7",1,"2019-02-07 15:56:46+01:00","AbstractApplicationContext resets local listeners
to pre-refresh state  Closes gh-22325
",507091,6920,322796,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"361","spring-projects/spring-framework","82dbde13b67ffbd6bbcbef9ecf01ef18c236271f",3,"2019-02-08 20:20:51+05:00","Fix for ScriptUtils failure when '--' occurs
inside a multi-line comment on the same line as
'*/' (#22392)  * Test for multi-line comment block
where the comment end delimiter occurs on a line
starting with the single-line comment prefix  *
ScriptUtils successfully parses a SQL script
containing a multi-line comment block where the
comment-end delimiter occurs on a line starting
with the single-line comment prefix.
",507101,6920,322800,"Mansur Mustaquim","mmustaquim@gmail.com","Juergen Hoeller","jhoeller@pivotal.io"
"362","spring-projects/spring-framework","e7dc439f90def307e781ee51c57d84c36e94db5a",5,"2019-02-05 13:52:00+02:00","Simplify ConcurrentReferenceHashMap
",506612,6913,322391,"stsypanov","sergei.tsypanov@yandex.ru","Juergen Hoeller","jhoeller@pivotal.io"
"363","spring-projects/spring-framework","f19d7c03751e8bec17c4eaff75127f7594734d01",2,"2019-02-21 15:58:49+01:00","Fix AbstractTraceInterceptor null-safety
annotations  Closes gh-22435
",507147,6921,322823,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"364","spring-projects/spring-framework","f07014ad37258e5d7eadbd64d28820e7fac61204",1,"2019-02-25 17:21:08+01:00","MappingJackson2MessageConverter delegates default
encoding to Jackson  Closes gh-22444
",507185,6922,322844,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"365","spring-projects/spring-framework","00ed8da5c5b5d82cf60c90de1fe41c687c822b2f",12,"2019-02-26 17:42:36+01:00","JmsTransactionManager supports lazy resource
retrieval  Closes gh-22468
",507242,6922,322909,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"366","spring-projects/spring-framework","bcf4f3911b6d2ee672611c53f5235510447daa0a",3,"2018-11-06 14:14:48-05:00","Reactive InvocableHandlerMethod in spring-
messaging  See gh-21987
",507658,6942,323464,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"367","spring-projects/spring-framework","e3e1ffc98649dbab2fab34521b4cc9fad38e12d9",10,"2019-01-25 17:47:57-05:00","Encoder/Decoder based payload serialization  See
gh-21987
",508106,6947,323644,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"368","spring-projects/spring-framework","421090ca35941fef053eeedde5f84cc00cc22298",5,"2019-01-25 11:49:06-05:00","Reactive AbstractMessageMethodHandler  See
gh-21987
",508562,6954,323934,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"369","spring-projects/spring-framework","dda40c1516eb328f67d507c85bfa1f3137bad978",4,"2019-01-25 17:47:43-05:00","Reactive @MessageMapping  See gh-21987
",508877,6957,324046,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"370","spring-projects/spring-framework","567c559da8434a43b2291d835717b23161adadca",14,"2019-01-28 16:39:58-05:00","Resolvers for destination vars and headers  See
gh-21987
",509411,6966,324322,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"371","spring-projects/spring-framework","5b3b0b1a7b01b0ee752ee5e100d1238e9c6fdddf",8,"2019-01-28 16:39:49-05:00","Polish  The package
o.s.messaging.handler.annotation.support was
missing @NonnullApi and @NonNullFields. This
commit corrects that and also adds @Nullable to
methods and arguments as needed to address
warnings.
",509431,6966,324322,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"372","spring-projects/spring-framework","f2bb95ba7bda8acae191c9673cca376fbc458901",8,"2019-02-14 17:04:20-05:00","Payload encoding/decoding and handling refinements
See gh-21987
",509497,6970,324430,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"373","spring-projects/spring-framework","8bdd709683e8de24e15787786348c14c7a557dd4",10,"2019-02-18 16:41:29-05:00","RSocketRequester, RSocketStrategies, PayloadUtils
See gh-21987
",510591,6985,324989,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"374","spring-projects/spring-framework","4e1c0c682600a093fc76b14d26bcf3707a937229",1,"2019-02-21 18:08:30-05:00","@MessageExceptionHandler supports error signal
Before this change if a controller method returned
a Publisher whose first signal was an error, the
error signal would not be delegated to a
@MessageExceptionHandler method as expected.  To
make this work for now we use a package private
local copy of the ChannelSendOperator from spring-
web.  See gh-21987
",510805,6986,325079,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"375","spring-projects/spring-framework","555dca9aff020d59a5af9f158829901432bc2eae",3,"2019-02-27 09:42:53-05:00","Refactoring in AbstractMethodMessageHandler  Split
out the mechanics of invoking a HandlerMethod and
handling the result into a separate helper class.
See gh-21987
",510840,6987,325127,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"376","spring-projects/spring-framework","fa95b010cbcdb9b53672f0e226cafe2e30e1615e",1,"2019-02-26 19:10:02-05:00","Direct delegation to RSocketMessageHandler
Simplify handling by eliminating the use of a
message channel. Instead MessageHandlerAcceptor
now extends from RSocketMessageHandler and
delegates directly to it.  See gh-21987
",510742,6984,325058,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"377","spring-projects/spring-framework","23b39ad27be8fa1c8bb058d4e99903dd9ae4a39a",1,"2019-02-27 12:08:51-05:00","Explicit handling of void return values  Do give
HandlerMethodReturnValueHandler's a chance to
handle return values so the RSocket reply header
is always set.  See gh-21987
",510770,6984,325069,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"378","spring-projects/spring-framework","7cbb3b06a0538818948d336c303db3fd1b216462",12,"2019-03-06 13:50:40+01:00","Consistent local vs external resolution of https
schema references  Closes gh-22504
",507287,6923,322914,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"379","spring-projects/spring-framework","f087fd5a93dbd43700e96f81088d1372263087c2",2,"2019-03-06 16:40:20+01:00","Report offending class in SpringFactoriesLoader in
exception message  Prior to this commit, the
exception message generated by
instantiateFactory() in SpringFactoriesLoader did
not report the offending class in the top-level
exception message. The offending class was in fact
included in the message of the nested exception,
but the top-level exception message on its own was
a bit misleading.  This commit improves the
diagnostics for such failures by including the
offending class and the target factory type in the
top-level exception message.  Closes gh-22453
",511202,6985,325231,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"380","spring-projects/spring-framework","6c87ef09c17d9f0c1a8ab32c212e8c5a914b120d",1,"2019-03-07 17:55:32+01:00","Polishing
",507292,6923,322920,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"381","spring-projects/spring-framework","a98e3f048183528a0e99c3894e24e03873916166",4,"2019-03-08 01:30:55+01:00","Migrate CacheControl to use java.time.Duration for
durations
",511213,6985,325273,"Lars Grefer","github@larsgrefer.de","Juergen Hoeller","jhoeller@pivotal.io"
"382","spring-projects/spring-framework","fe0c2d6b6e46d087fb483170c59888a5a7be152b",1,"2019-03-08 22:40:18+01:00","StringUtils.toStringArray/CollectionUtils.toIterat
or handle null input  Closes gh-22547
",507292,6923,322922,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"383","spring-projects/spring-framework","aabfc5f0a18921dc727d82d43cded32c78e232e2",4,"2019-03-11 15:25:46+01:00","Support primitive types in
BeanUtils.instantiateClass args  This commit adds
support for primitive default values for
BeanUtils.instantiateClass arguments in Java in
order to provide a consistent behavior in both
Java and Kotlin languages.  Closes gh-22531
",511302,6985,325597,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"384","spring-projects/spring-framework","40c62139ae6f8faa09fc0047ebc8ec65c5a2e809",3,"2019-03-12 17:17:24+01:00","Early resolution of unique factory methods in
configuration classes  Includes consistent bean
class resolution in the enhancement step as well
as general reflection optimizations for user-
declared methods.  Closes gh-22420
",511520,6985,325710,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"385","spring-projects/spring-framework","57a67a3c06828d36f725660bcd84b5b4c2bb760b",2,"2019-03-12 17:05:40-04:00","Header predicate option in
AbstractRequestLoggingFilter  Closes gh-22244
",511593,6985,325737,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"386","spring-projects/spring-framework","c0ddaae5c0272af8b4eeb330bb8660da7411e99d",3,"2019-03-12 22:45:24+01:00","Shared empty InjectionMetadata/LifecycleMetadata
instance  Closes gh-22570
",511613,6985,325767,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"387","spring-projects/spring-framework","fe56aa6fa47933509c3c5c8300d3e9a06c802dcc",1,"2019-03-13 15:32:24+01:00","Polishing
",507296,6923,322931,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"388","spring-projects/spring-framework","e6d206b45a460c2ac2e1ccde8098815163cb6124",8,"2019-03-15 16:12:58-04:00","Extra information in WebFlux stacktraces  Use the
checkpoint operator at various places in WebFlux
to insert information that Reactor then uses to
enrich exceptions, via suppressed exceptions, when
error signals flow through the operator.  Closes
gh-22105
",511717,6986,325818,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"389","spring-projects/spring-framework","5d2fd75cf98324fc583453e2bde0c5a06987ab0f",5,"2019-03-06 15:56:33+01:00","Introduce Servlet.fn  This commit introduces
Servlet.fn, a servlet-based version of WebFlux.fn,
i.e. HandlerFunctions and RouterFunctions.  This
commit contains the web framework only, further
commits provide tests and DispatcherServlet
integration.  See gh-21490
",514350,7007,327870,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"390","spring-projects/spring-framework","e638fef508cda935bfbac64d966d564592e4d6de",2,"2019-03-06 16:00:29+01:00","Add Servlet.fn integration with DispatcherServlet
This commit adds support for HandlerFunctions and
RouterFunctions to DispatcherServlet, in the form
of a HandlerAdapter and HandlerMapping.  See
gh-21490
",515855,7023,328229,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"391","spring-projects/spring-framework","0e9ea2c94d9e2ca136d93e1abbd40d58901eb5e8",2,"2019-03-13 15:30:50+01:00","Fix review remarks on Servlet.fn  This commit
incoporates the remarks made during the Servlet.fn
review.  See gh-21490
",515887,7023,328232,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"392","spring-projects/spring-framework","c6a655275df9baca4c9d35a01e0fa93308b8f308",1,"2019-03-20 09:32:48-04:00","Allow overriding of
FormHttpMessageWriter#getMediaType  Closes
gh-22588
",515886,7023,328232,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"393","spring-projects/spring-framework","c9a86e1ff438368f630107baea637a0b1e4f262e",1,"2019-03-22 14:39:21-04:00","Polish  See gh-22598
",507387,6923,322927,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"394","spring-projects/spring-framework","4972d85ae01014e98b94c4714c49ca7540d7c3ff",108,"2019-01-31 11:03:57-08:00","Create a new API for handling merged annotations
Add new `MergedAnnotations` and `MergedAnnotation`
interfaces that attempt to provide a uniform way
for dealing with merged annotations.
Specifically, the new API provides alternatives
for the static methods in `AnnotationUtils` and
`AnnotatedElementUtils` and supports Spring's
comprehensive annotation attribute `@AliasFor`
features. The interfaces also open the possibility
of the same API being exposed from the
`AnnotationMetadata` interface.  Additional
utility classes for collecting, filtering and
selecting annotations have also been added.
Typical usage for the new API would be something
like:
MergedAnnotations.from(Example.class)
.stream(MyAnnotation.class)                 .map(a
-> a.getString(""value""))
.forEach(System.out::println);  Closes gh-21697
",523369,7058,330337,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"395","spring-projects/spring-framework","a14bfe9a216e1911ee51cc13c588eb7e5cb3c550",5,"2019-01-23 15:21:09-08:00","Migrate and verify annotation utility methods
Migrate all possible `AnnotationUtils` and
`AnnotatedElementUtils` method to the
`MergedAnnotation` API, verify results against the
old implementations.  All migrated methods now
call both the new API and the old version and
ensure that the same results or exceptions are
raised. A full build of both Spring Framework and
Spring Boot has been executed to ensure, as much
as possible, that the migration does not cause
unexpected regressions.  See gh-22562
",524206,7061,331503,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"396","spring-projects/spring-framework","37255afca49b0787ecfd074a7ba4c91788694e5a",6,"2019-03-09 22:43:12-08:00","Complete migration of annotation utility methods
Delete `InternalAnnotationUtils` and
`InternalAnnotatedElementUtils` and migrate
exclusively to the new `MergedAnnotations` API.
Closes gh-22562
",521814,7052,329422,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"397","spring-projects/spring-framework","857371ba679e850bb2ffa75e92b4daf8bbaa2170",1,"2019-03-08 17:06:52-08:00","Migrate AutowiredAnnotationBeanPostProcessor to
MergedAnnotations  Closes gh-22582
",521824,7052,329433,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"398","spring-projects/spring-framework","5e15338a09b76c5ff2cc453edd34bfa38a865178",19,"2019-03-23 12:13:38+01:00","Nullability refinements (no IntelliJ warnings,
fewer null checks)  Includes consistent ignoring
of all java.lang (meta-)annotations.  Closes
gh-22586
",521603,7052,329406,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"399","spring-projects/spring-framework","62e5585c2e00d6dcf820ebe92e082abe0e765174",2,"2019-03-23 12:14:03+01:00","Avoid package cycle between
beans.factory.annotation and b.f.support  See
gh-2060
",521610,7054,329451,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"400","spring-projects/spring-framework","0ace0be29b43ca5a567d69f6804ba41880c63c29",2,"2019-03-25 16:32:42-07:00","Fix annotation value mapping regression  Refine
`TypeMappedAnnotation.getValueFromMetaAnnotation`
to correctly account for aliases when finding
values from meta-annotations. Prior to this
commit, only convention based mappings were
considered when searching for values on meta-
annotations. This meant that declared meta-
annotations that used aliases could return the
""default value"" rather than the merged value.
Closes gh-22654
",521710,7054,329460,"Phillip Webb","pwebb@pivotal.io","Phillip Webb","pwebb@pivotal.io"
"401","spring-projects/spring-framework","6870b9c69193fb163ad19c00248c2670d5de2dc2",1,"2019-03-26 12:27:57+01:00","Test fix in gh-22638
",507418,6923,322937,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"402","spring-projects/spring-framework","f7a4850675ae3408fb4dbc2c3c01d83ce6ca073a",1,"2019-03-26 16:13:23+01:00","AnnotationJmxAttributeSource uses MergedAnnotation
API directly  Includes deprecation of
AnnotationBeanUtils class (now unused).  Closes
gh-22657
",521785,7054,329469,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"403","spring-projects/spring-framework","210b178922bcc1580e2c54eb9a95f707749fdf45",6,"2019-03-26 16:13:41+01:00","Restore retrieval of plain annotations through
direct presence checks  Includes deprecation of
several AnnotationUtils methods and nullability
refinements for passed-in function arguments at
the MergedAnnotation API level... also,
MergedAnnotation.getType() returns a Class now.
Closes gh-22663 Closes gh-22685
",521695,7054,329473,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"404","spring-projects/spring-framework","f0ae8bc30052d37f091da716d546a93a2be89841",2,"2019-03-07 09:51:33+01:00","Support custom XmlFactory in
Jackson2ObjectMapperBuilder  Closes gh-22428
",507713,6924,322991,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"405","spring-projects/spring-framework","49fccfb158135d72b586bdf16e79f01c40ba63a3",1,"2019-03-28 14:38:55+01:00","Consistent retrieval of javax annotation types
(e.g. JSR-305)  Closes gh-22696
",521996,7055,329523,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"406","spring-projects/spring-framework","d27b5d0ab6e8b91a77e272ad57ae83c7d81d810b",2,"2019-04-01 14:36:38+02:00","Improve CORS handling  This commit improves CORS
support by:  - Using CORS processing only for
CORS-enabled endpoints  - Skipping CORS processing
for same-origin requests  - Adding Vary headers
for non-CORS requests  It introduces an
AbstractHandlerMapping#hasCorsConfigurationSource
method in order to be able to check CORS endpoints
efficiently.  Closes gh-22273 Closes gh-22496
",522219,7055,329564,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"407","spring-projects/spring-framework","c1a74de48dfc40e1171939b0ba27d1c6495a7ec1",4,"2019-04-02 14:55:27+02:00","Boolean getLazyInit accessor indicating no
explicit flag set  Closes gh-22694
",522206,7055,329508,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"408","spring-projects/spring-framework","a11a592734b4518332239425973cf11cb4f80fcf",3,"2019-04-02 14:56:38+02:00","AbstractSqlParameterSource enumerates parameter
values in toString()  Closes gh-2080
",522311,7055,329564,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"409","spring-projects/spring-framework","d2fa5536dbfa1095d74d17a12441f79495d9de30",1,"2019-04-02 15:11:00+02:00","Use more efficient Reactor operators  Use
handle/flatMapIterable instead of
flatMap/flatMapMany when possible.  Closes
gh-22727
",522371,7055,329569,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"410","spring-projects/spring-framework","3ac88bed234acf27d539397bafb659a20c1c4339",1,"2019-04-02 19:13:05+02:00","Introduce LogAccessor and LogMessage as convenient
logging utilities  Closes gh-22726
",522484,7058,329801,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"411","spring-projects/spring-framework","bb9fcad58ace1882666c1a703d12bab5a9581b43",5,"2019-04-03 14:23:33-04:00","RequestCondition implementations minor refactoring
Reduce object creation by pre-computing instances
that can be re-used, and eliminating collection
copying and sorting where not needed.  See
gh-22644
",522631,7058,329848,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"412","spring-projects/spring-framework","254f06e1a1615fb7692005c392389c69a14a7e94",1,"2019-04-03 12:03:33-04:00","Request attribute cache for resolved lookupPath
See gh-22644
",522649,7058,329873,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"413","spring-projects/spring-framework","9de83674cd89930b26ded7c18d1b7c92c5180ec7",1,"2019-04-05 13:56:33+02:00","Complete set of registerBean methods on
AnnotatedBeanDefinitionReader  Includes bringing
registerBean constructor-vararg variants up to
GenericApplicationContext, making
AnnotationConfigApplicationContext a
straightforward subclass with a single template
method to override.  See gh-22457
",522833,7058,329975,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"414","spring-projects/spring-framework","d1f888a7a963a143628d899e4b2911b7c5ef7726",1,"2019-04-09 15:03:24-04:00","Empty path mapping behaves consistently  An empty
path mapping in an @RequestMapping now
consistently matches to empty paths regardless of
whether there are both type and method level,
annotations, or method-level only.  Closes
gh-22543
",523408,7059,330051,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"415","spring-projects/spring-framework","b11e7feff68cd32ce0e0ecf3cb946319faad3f31",14,"2019-04-09 22:18:44-04:00","Polish during review of DataBuffer handling
",508109,6925,323089,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"416","spring-projects/spring-framework","2aae81ef0cf415a2ae4501ac5bf16b24591e1bd6",5,"2019-04-10 17:33:08-04:00","Join buffers in decodeToMono for Jackson and Jaxb2
Closes gh-22783
",523536,7059,330050,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"417","spring-projects/spring-framework","a912d8de1ea26cd071342f919eb0c6bad4945062",20,"2019-04-11 13:30:55-04:00","Add option to decode from a DataBuffer  See
gh-22782
",523565,7059,330063,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"418","spring-projects/spring-framework","f89d2ac14891d21714462e6ea4f8dc32d325f1cf",1,"2019-04-10 22:08:00-04:00","Use decode from a DataBuffer where feasible  See
gh-22782
",523566,7059,330063,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"419","spring-projects/spring-framework","181482fa15b02a1ae27f54aea39ea0a8acdc35ec",19,"2019-04-11 13:50:56-04:00","Add option to encode with an Object value  See
gh-22782
",523601,7059,330080,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"420","spring-projects/spring-framework","5fc18064f26a2541cce0432a4cb0fc01104972e8",3,"2019-04-11 18:56:54-04:00","Use encode with an Object value where feasible
Closes gh-22782
",523566,7059,330082,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"421","spring-projects/spring-framework","e5e2d2d6614763a814e4f3cc16f1a39d3bdcfa6f",2,"2019-04-26 16:51:18+02:00","Polishing (includes minor performance refinements
from master)
",508113,6925,323096,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"422","spring-projects/spring-framework","3d502d90e271514d111433505008281c704a0b4d",2,"2019-04-26 23:10:18+02:00","Add missing nullable declarations  See gh-22821
",524045,7063,330252,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"423","spring-projects/spring-framework","a1ad0285ca43f5f6fcdb7d3f14b37c538698f68c",3,"2019-04-29 15:22:01-04:00","Default MimeType selection for RSocketRequester
Remove the dataMimeType argument on connect
methods. Applications can still configure it
through the ClientRSocketFactory but it shouldn't
be necessary as we now choose a default MimeType
from the supported encoders and decoders.  Add an
option to provide the RSocketStrategies instance
(vs customizing it) which is expected in Spring
config where an RSocketStrategies instance may be
shared between client and server setups.
",524218,7067,330348,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"424","spring-projects/spring-framework","89454e69c30e41db84dfa0dc4664b8481e29770e",1,"2019-04-30 16:05:09+02:00","Deprecate MediaType.APPLICATION_JSON_UTF8  This
commit deprecates MediaType.APPLICATION_JSON_UTF8
and MediaType.APPLICATION_PROBLEM_JSON_UTF8 in
favor of MediaType.APPLICATION_JSON and
MediaType.APPLICATION_PROBLEM_JSON since UTF-8
encoding is now handled correctly by most browsers
(related bug has been fixed in Chrome since
September 2017).  MediaType.APPLICATION_JSON is
now used as the default JSON content type.  Closes
gh-22788
",524259,7068,330391,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"425","spring-projects/spring-framework","beea83b9d2cdc1b7bc092e86c3e5f4ef3d23f626",9,"2019-03-22 16:09:30+02:00","Add reactive transaction support SPI  This commit
adds SPI interfaces to support reactive
transactions through spring-tx with optional
dependencies to Project Reactor and supportive
implementations for TransactionalOperator and
AbstractReactiveTransactionManager.
",525763,7087,332170,"Mark Paluch","mpaluch@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"426","spring-projects/spring-framework","b5e5e3307838359b42c7f4b1ed592b03b249eb4f",1,"2019-05-02 12:04:25+02:00","Remove legacy config options from
AbstractReactiveTransactionManager  Includes
general revision of reactive transaction sources.
See gh-22646
",525622,7087,331867,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"427","spring-projects/spring-framework","8dabb3e6269ab18bb2256266a70d4c285bbb4ff5",25,"2019-05-02 16:23:37+02:00","Shorter class names for common reactive
transaction API types  Introduces
TransactionExecution base interface for
TransactionStatus as well as ReactiveTransaction.
Renames getTransaction method to
getReactiveTransaction, allowing for combined
implementations of PlatformTransactionManager and
ReactiveTransactionManager.  See gh-22646
",525614,7087,331828,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"428","spring-projects/spring-framework","0be610b0ee43ee23a54a5d9c2d9b89edab35f686",20,"2019-05-02 16:23:48+02:00","Support for reactive transactions in
TransactionInterceptor  Introduces
TransactionManager marker interface for
PlatformTransactionManager as well as
ReactiveTransactionManager, allowing for a common
configuration type in TransactionAspectSupport and
TransactionManagementConfigurer.  Closes gh-22590
",526076,7090,331986,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"429","spring-projects/spring-framework","a2a6bc3d47539801ea7c1073c5a013961da530d9",3,"2019-05-03 12:28:41+02:00","Introduce TransactionDefinition.withDefaults()
shortcut  Such a static unmodifiable
TransactionDefinition with defaults can be used
for getTransaction(null) calls, now also possible
for getReactiveTransaction. Furthermore, it can be
used for a simple TransactionalOperator.create(Rea
ctiveTransactionManager) method without an
internal dependency on the transaction.support
package.  See gh-22646
",526077,7091,332033,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"430","spring-projects/spring-framework","9674ce490670b3d80018c8717eced2babb284e0d",1,"2019-05-04 12:00:22+02:00","Avoid HashSet/StringBuilder allocation for non-
placeholder values  Closes gh-22870
",508340,6925,323141,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"431","spring-projects/spring-framework","30bbf91dbada76e156a70c4928e5eef81812646a",4,"2019-05-04 17:35:34+02:00","Rename PayloadArgumentResolver to
PayloadMethodArgumentResolver  Closes gh-22888
",526111,7092,332093,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"432","spring-projects/spring-framework","28039057fd48c4380e2270b1ad5d1847d89a02a9",2,"2019-05-04 18:30:56+02:00","Consistent naming of HandlerMethodArgumentResolver
implementations  Includes combined imports of
assertion methods and related polishing.  Closes
#22889
",526041,7092,332102,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"433","spring-projects/spring-framework","3b145a5a73ae4418d7d5ad2b0f10b0dd48ab3fcf",1,"2019-04-29 10:44:52-07:00","Add MergedAnnotation.getTypeHierarchy method  Add
a `getTypeHierarchy()` method to
`MergedAnnotation` that can be used to return the
full type hierarchy information. This method is
specifically designed to be used in combination
with `MergedAnnotationPredicates.unique`.  This
update also allows us to delete the
`parentAndType` method from
`AnnotatedElementUtils`.  Closes gh-22908
",526849,7097,332331,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"434","spring-projects/spring-framework","d4a761abeac3e75d59d481e4ccd5f38ee2e86e19",3,"2019-05-06 09:51:26-07:00","Rename some MergedAnnotation `from` methods to
`of`  Rename `from` to `of` for the
`MergedAnnotation` factory methods that work with
Maps. The previous name was a little confusing,
especially when an annotation source parameter was
specified. The new method name helps to make it
clearer when the user is explicitly defining the
attributes of the annotation, as opposed to
picking them up from the source.
",526849,7097,332331,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"435","spring-projects/spring-framework","daec3531b3a386074484c3a1ccf82c79b769e96f",9,"2019-05-06 13:09:23-07:00","Support String->Class adaptation in
MergedAnnotation  Update TypeMappedAnnotation so
that Strings can be used to represent Class
attribute values. This will allow ASM annotation
readers to present a `MergedAnnotation` instance
without necessarily having the actual class values
on the classpath.  When the underlying value is a
String, any calls to `getValue(name,
String.class)` or `asMap(Adapt.CLASS_TO_STRING)`
will simply return the original String. Calls that
need the actual Class result (such as `getClass`)
will use `Class.forName` and may throw a
`ClassNotFoundException` at that point.  This
commit also allows an empty Object[] to be used to
represent any empty primitive array.  See gh-22884
",526999,7097,332344,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"436","spring-projects/spring-framework","9d6cf57cb740660661c1804a41fe699f5d3b9faa",13,"2019-05-06 10:10:55-07:00","Add MergedAnnotations.of method  Add a factory
method to `MergedAnnotation` that allows an
instance to be created for an explicit collection
of root annotations. This method will allow ASM
based readers to expose a `MergedAnnotation`
instance that has root annotations loaded from
bytecode, and meta-annotations loaded using
reflection.  See gh-22884
",527389,7099,332406,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"437","spring-projects/spring-framework","30ba80a3c3fe3a551d751436ce606e224c09732a",2,"2018-07-09 07:00:37+01:00","Reduce meta-data code duplicate with default
methods  Extract and pull-up some common method
implementations and make them default methods of
the interface.  See gh-22884
",527785,7105,332526,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"438","spring-projects/spring-framework","8c2ccfe6a35381d09ab52060adf3057f08ae808e",2,"2019-05-06 11:00:51-07:00","Add MergedAnnotations support to meta-data classes
Add `AnnotatedTypeMetaData.getAnnotations()` that
can be used to access annotation details using the
`MergedAnnotations` interface.  Where possible,
the existing annotation methods have been migrated
to call `getAnnotation()`, rather than needing
their own implementation.  The existing ASM based
meta-data implementations have not been updated
since they will be deprecated and replaced in a
subsequent commit.  See gh-22884
",527878,7105,332531,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"439","spring-projects/spring-framework","7fbf3f97cdeffd7e60a7dc9b19ca59ce73cd1cea",7,"2019-05-06 10:37:59-07:00","Add SimpleAnnotationMeta classes and readers
Replace the existing ASM based readers with new
implementations that also support
MergedAnnotations. The meta-data classes
themselves are now immutable, and constructed via
separate reader classes.  The
`SimpleMetadataReader` class has been updated to
return the new classes, however the old ones
remain since some of them are public and might be
being used directly.  Closes gh-22884
",528513,7113,332710,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"440","spring-projects/spring-framework","c5b3848357320d67685744e6ebc32416b0119f66",33,"2019-05-08 00:27:47+02:00","Nullability refinements and related polishing
Includes fix for typo in visitor class names.  See
gh-22909
",528522,7113,332725,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"441","spring-projects/spring-framework","fb2908867073a273334f67c93923b30b6aea4a2d",3,"2019-05-08 17:52:28+02:00","Revise LinkedCaseInsensitiveMap's lazy
key/value/entry collections  Closes gh-22926
",528063,7117,333302,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"442","spring-projects/spring-framework","190b751147c34bcda822f8a63f97fd45f9d9aa3b",2,"2019-05-09 02:09:31+02:00","Support any HttpEntity implementing
ResolvableTypeProvider  Closes gh-22931
",508397,6925,323154,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"443","spring-projects/spring-framework","c8d49ed284a2b2ec0557445d36e13e7bf881ffc3",1,"2019-05-09 14:54:43+02:00","Fix
EncoderHttpMessageWriter.isStreamingMediaType()
Closes gh-22936
",508416,6925,323155,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"444","spring-projects/spring-framework","5910d2d4dcdebe248eea8bccb61f150c8f9e9c37",1,"2019-05-13 18:03:01+02:00","Add missing Nullable annotation to assertNotNull
See gh-22932
",508421,6925,323167,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"445","spring-projects/spring-framework","97c2de915afb34aad64e6a63a448e6e66a6040de",8,"2019-05-14 21:44:26-04:00","Add RouteMatcher  Closes gh-22642
",532369,7119,333415,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"446","spring-projects/spring-framework","a30a134c2397a7482bfd8c895f7ec1dc633e2067",1,"2019-05-15 16:07:05+02:00","Make StringDecoder use DataBufferUtils.split  *
Added DataBufferUtils.split variant that takes
multiple delimiters   as argument (instead of 1).
* Use this new split() variant from within
StringDecoder, replacing   its inefficient
algorithm with the Knuth-Morris-Pratt algorithm.
",532439,7119,333433,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"447","spring-projects/spring-framework","da4430e27ef13a42a47c954386a3a1f66e4f6cd2",2,"2019-05-16 20:41:37-04:00","BindingResult for resolved async attributes
ViewResolutionResultHandler no longer adds
BindingResult objects for async model attributes.
Instead AbstractView adds them later when those
attributes are resolved to concrete values.
Closes gh-22933
",508460,6925,323196,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"448","spring-projects/spring-framework","75d751d96816f43305ff72ba326ff7acd98e7fd3",2,"2019-05-20 22:19:11+02:00","Polishing
",508462,6925,323210,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"449","spring-projects/spring-framework","8cd3daad0dab763cca14100e556ab2b875cf7e95",1,"2019-05-21 00:15:40+02:00","Polishing
",508462,6925,323210,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"450","spring-projects/spring-framework","701b7b8a18e39c6ef6cb81d11458cacee8f989a4",1,"2019-05-21 20:46:27+02:00","Align ReactiveTypeDescriptor accessor methods
",508462,6925,323210,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"451","spring-projects/spring-framework","0b2fcbfe8aa0a24edb3d09a1c0584210cba340ef",1,"2019-05-23 14:01:05-04:00","Use TaskScheduler instead of
ThreadPoolTaskScheduler  Closes gh-22943
",531304,7119,332974,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"452","spring-projects/spring-framework","e09c5fd9e567d6e9058205789e7bb3ecf54a87fb",2,"2019-05-23 14:26:51-04:00","Use TaskExecutor instead of ThreadPoolTaskExecutor
Closes gh-22943
",531309,7119,332974,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"453","spring-projects/spring-framework","e386e53f925ced34f07c39bd26093e308c4eb9ee",10,"2019-05-26 13:15:59-07:00","Use less confusing MergedAnnotation method names
Rename some `MergedAnnotation` methods to prevent
using parent/child terminology, specifically:
`getDepth()` has been renamed `getDistance()`
`getParent()` has been renamed `getMetaSource()`
`getTypeHierarchy()` has been renamed
`getMetaTypes()`  The parent child naming was
particularly confusing given that the parent/child
relationships were inverted from the way that a
lot of users think about meta-annotations. For
example, a `@RequestMapping` having a parent of
`@GetMapping` feels odd given that `@GetMapping`
is the thing declaring the meta-annotation
relationship.  The new method names are designed
to align more closely with existing terms. For
example, `getMetaSource` hints at the relationship
with `isMetaAnnotated` and `getSource`.  Closes
gh-22946
",528125,7121,333091,"Phillip Webb","pwebb@pivotal.io","Phillip Webb","pwebb@pivotal.io"
"454","spring-projects/spring-framework","1cfedb20b89310a4b7cc9d0e4e5e24e79d7921f9",1,"2019-05-28 16:57:11+02:00","Add new constructor to JettyClientHttpConnector
This commit adds a new constructor to
`JettyClientHttpConnector` and deprecates another
one. Jetty is not creating `HttpClient` instances
using a builder API, but rather setting immutable
configuration at constructor time and using
setters for the rest.  This commit addresses that
by deprecating the constructor variant accepting a
`Consumer` and just delegating to Spring's
implementation for setting the client resources as
needed.  Closes gh-22977
",528221,7123,333218,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"455","spring-projects/spring-framework","eacc531cf76594747e3541decdd89f16bc46cf73",1,"2019-05-29 17:05:25-04:00","Add dataMimeType to RSocketRequestBuilder  Closes
gh-23012
",528261,7123,333236,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"456","spring-projects/spring-framework","49e5c4dcf6ea4959cefda7b531d99fc880654911",1,"2019-06-04 16:40:59-04:00","Polish MultipartBodyBuilder  Improve Javadoc
Consistently reject Publisher unless using
asyncPart Consistently set Content-Type when
specified
",508387,6925,323257,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"457","spring-projects/spring-framework","69eba32284ae073e7dc0b014c13a3fec8093b266",4,"2019-06-04 17:21:39-04:00","Improved Part support in MultipartBodyBuilder  1.
Add contentType and filename options to
PartBuilder.  2. Revert recently committed #44659f
since asyncPart can't properly support Publisher
of Part (only Mono, can't support filename), and
replace that with support for Part in the regular
part method.  Closes gh-23083
",528158,7123,333289,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"458","spring-projects/spring-framework","098ac0bbb88cd178e85b7dc31642bed091560316",168,"2019-06-06 14:18:12+02:00","Annotate Object#equals parameter with @Nullable
Closes gh-23093
",528221,7123,333299,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"459","spring-projects/spring-framework","2ed81be83103d27e4a38a12711fc1e96f6519522",1,"2019-06-03 15:02:44+03:00","Fix MockHttpServletRequest.setCookies to produce
single cookie header  Prior to this commit,
MockHttpServletRequest.setCookies() produced one
Cookie header per supplied cookie, resulting in
multiple Cookie headers which violates the
specification.  This commit fixes this by ensuring
that all cookie name-value pairs are stored under
a single Cookie header, separated by a semicolon.
Closes gh-23074
",508399,6925,323257,"Ilya Lukyanovich","ilya.lukyanovich@dataart.com","Sam Brannen","sbrannen@pivotal.io"
"460","spring-projects/spring-framework","859923b7320d5b222f936f604b89a0b50f02be57",4,"2019-06-11 18:27:46+02:00","Support for fine-grained by-type references and
autowired properties  Closes gh-23032
",528868,7130,333562,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"461","spring-projects/spring-framework","b21b27c5acffff1051ffb5b7114823f4121f78ae",1,"2019-06-11 11:45:29-07:00","Add MultiValueMap.addIfAbsent method  Closes
gh-23111
",528898,7130,333581,"Phillip Webb","pwebb@pivotal.io","Phillip Webb","pwebb@pivotal.io"
"462","spring-projects/spring-framework","918ffacdf81d27f1027a1ad6dc25f2f823e37928",4,"2019-06-12 13:29:35+02:00","Polishing
",528933,7130,333593,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"463","spring-projects/spring-framework","14e2c6803e1cb2c5ee77c6e0b4aa9305e96d0686",2,"2019-06-12 15:30:07-04:00","Support for RSocket composite metadata  Closes
gh-22798
",529096,7130,333644,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"464","spring-projects/spring-framework","eef9bc899f859445bbcf93980c7df2df02ed97b3",1,"2019-06-13 01:40:15+03:00","Avoid NPE in FreeMarkerView.getModelAttributes()
in spring-webflux  This commit declares the model
method parameter as @Nullable and adds defensive
guards against a null model argument.  Closes
gh-23105
",529096,7130,333644,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"465","spring-projects/spring-framework","4000b244ff7b1db1f4eba9c4dbf2fc97162da254",2,"2019-06-18 15:56:50+03:00","Forbid null converters in RestTemplate &
HttpMessageConverterExtractor  Prior to this
commit, RestTemplate and
HttpMessageConverterExtractor did not validate
that the supplied HttpMessageConverter list
contained no null elements, which can lead to a
NullPointerException when the converters are
accessed.  This commit improves the user
experience by failing immediately if the supplied
HttpMessageConverter list contains a null element.
This applies to constructors for RestTemplate and
HttpMessageConverterExtractor as well as to
RestTemplate#setMessageConverters().  Note,
however, that RestTemplate#getMessageConverters()
returns a mutable list. Thus, if a user modifies
that list so that it contains null values, that
will still lead to a NullPointerException when the
converters are accessed.  This commit also
introduces noNullElements() variants for
collections in org.springframework.util.Assert.
Closes gh-23151
",529193,7130,333720,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"466","spring-projects/spring-framework","ef6471fcbfbfe495c5d31f829b041ac6abc3e9fa",1,"2019-06-18 18:53:15+03:00","Polish contribution  See gh-23141
",529215,7130,333737,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"467","spring-projects/spring-framework","22fd521e0aa9b18938b3e8be6070e2adf464ed84",2,"2019-06-19 18:19:54+01:00","Remove MessageHandlerAcceptor sub-class  This
commit removes the MessageHandlerAcceptor sub-
class of RSocketMessageHandler, and rather than
implementing directly the contracts for RSocket
client and server acceptors, RSocketMessageHandler
now exposes clientAcceptor() and serverAcceptor()
methods that return the required adapter
instances.  This provides better separation
between the RSocketMessageHandler and the RSocket
adapter code, and also avoids implementing generic
interfaces like the BiFunction required for the
client acceptor.
",529204,7129,333728,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"468","spring-projects/spring-framework","772087fe1878976505fbc7378be9c7dfdd4248f1",1,"2019-06-20 12:09:51+01:00","Refactor RSocket handler selection  1. Consolidate
config options for handler detection in the base
class AbstractMethodMessageHandler with sub-
classes like RSocketMessageHandler now only
setting the handler predicate by default (e.g.
@Controller).  2. Remove autoDetection flag in
favor of just having the mutually exclusive
handler Predicate<Object> vs manually registered
List<Object>. Or if both are desired for some
reason, then manually register first, and set the
predicate second.
",529200,7129,333714,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"469","spring-projects/spring-framework","0e5a38591fb7dd7abf42e43df2293b3283b9c5bc",1,"2019-06-21 14:09:05+03:00","Cache beanType in ControllerAdviceBean
",529354,7132,333767,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"470","spring-projects/spring-framework","7576d0d40cebd3f28e897132bb7bc84bf025b0c1",1,"2019-06-22 19:06:58+03:00","Polishing  See gh-23163
",529479,7132,333787,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"471","spring-projects/spring-framework","978adbdae749566fbf458f4f72847dfc0b5aabf7",1,"2019-06-23 18:31:04+03:00","Avoid duplicate lookups of @ControllerAdvice
annotations  See gh-23163
",529485,7132,333801,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"472","spring-projects/spring-framework","9239ab1891385a389a1dea68e703b153eb5d9a66",1,"2019-06-23 19:11:26+03:00","Support Ordered interface for @ControllerAdvice
beans  Closes gh-23163
",529484,7132,333806,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"473","spring-projects/spring-framework","3e41f5e6b644e2dd54cfbb3031b75195b1a8df72",1,"2019-06-28 18:46:49+03:00","Cache the encoded credentials in
BasicAuthenticationInterceptor  Prior to this
commit, the Basic Authentication credentials were
encoded for each request.  This commit addresses
this minor performance issue by caching the
encoded credentials in
BasicAuthenticationInterceptor.  In addition, this
commit introduces new encodeBasicAuth() and
setBasicAuth(String encodedCredentials) methods in
HttpHeaders to support this feature.  Closes
gh-23204
",529657,7132,333994,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"474","spring-projects/spring-framework","5bf070a857e80333f59c7f071b5fcf7b9e4fedad",3,"2019-06-28 21:53:30+01:00","More flexible RSocket metadata support  The
responding side now relies on a new
MetadataExtractor which decodes metadata entries
of interest, and adds them to an output map whose
values are then added as Message headers, and are
hence accessible to controller methods.  Decoded
metadata entry values can be added to the output
map one for one, or translated to any number of
values (e.g. JSON properties), as long as one of
the resulting pairs has a key called ""route"".  On
the requesting side, now any metadata can be sent,
and a String route for example is not required to
be provided explicitly. Instead an application
could create any metadata (e.g. JSON properties)
as long as the server can work out the route from
it.  The commit contains further refinements on
the requesting side so that any mime type can be
used, not only composite or routing metadata, e.g.
a route in an ""text/plain"" entry.  Closes gh-23157
",529900,7136,334146,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"475","spring-projects/spring-framework","4e6e47b726cacf983a6d630eeacf45d18be7e622",1,"2019-07-03 15:22:56+01:00","Earlier detection of token authentication  Use a
callback to detect token authentication (via
inteceptor) thus avoiding a potential race between
that detection after the message is sent on the
inbound channel (via Executor) and the processing
of the CONNECTED frame returned from the broker on
the outbound channel.  Closes gh-23160
",508638,6926,323290,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"476","spring-projects/spring-framework","fbb72eff2efaffeb50ba612bf487a80c823a53a5",6,"2019-07-05 09:01:13+01:00","Polish
",530138,7137,334256,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"477","spring-projects/spring-framework","2abff1a5b0f98e7c081197f5e5d121814ac9a173",1,"2019-07-05 16:24:37+02:00","Introduce withoutTransaction factory method on
TransactionOperations  Closes gh-23198
",530249,7138,334293,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"478","spring-projects/spring-framework","aeef95938e11ce0025a0721f0e3d277946d65cc3",6,"2019-07-05 17:07:01+02:00","SpringValidatorAdapter's ObjectError subclasses
are serializable  Closes gh-23181
",508684,6926,323296,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"479","spring-projects/spring-framework","a1eae42fd08243e727790734e93c3fe4cc5e4ff7",1,"2019-07-05 17:07:44+02:00","Expose implementation method for annotation
introspection purposes  Closes gh-23210
",508709,6926,323296,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"480","spring-projects/spring-framework","2b4d6ce3548ddf97d1bce1a3832f480de9043fa7",1,"2019-07-07 21:03:41+02:00","Add body methods with Object parameter to WebFlux
The commit deprecates syncBody(Object) in favor of
body(Object) which has the same behavior in
ServerResponse, WebClient and WebTestClient. It
also adds body(Object, Class) and body(Object,
ParameterizedTypeReference) methods in order to
support any reactive type that can be adapted to a
Publisher via ReactiveAdapterRegistry. Related
BodyInserters#fromProducer methods are provided as
well.  Shadowed Kotlin body<T>() extensions are
deprecated in favor of bodyWithType<T>() ones,
including dedicated Publisher<T> and Flow<T>
variants. Coroutines extensions are adapted as
well, and body(Object) can now be used with
suspending functions.  Closes gh-23212
",530456,7138,334501,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"481","spring-projects/spring-framework","08a5196c3ab34d8f8f7cc0f20383d6ba0a114832",1,"2019-07-08 11:40:18+02:00","Use elementClass and elementTypeRef consistently
",530457,7138,334501,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"482","spring-projects/spring-framework","c199cb9054313dad0c46467281f8de187c380884",5,"2019-07-08 17:04:00+01:00","@ConnectMapping for RSocket handling  The new
annotation helps to differentiate the handling of
connection level frames (SETUP and METADATA_PUSH)
from the 4 stream requests.  Closes gh-23177
",530681,7142,334640,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"483","spring-projects/spring-framework","7b1a6eb50a3ed32dd7158a8553c60ebc115cc296",1,"2019-07-08 19:39:54+01:00","Add getters to RSocketMessageHandler
",530690,7142,334654,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"484","spring-projects/spring-framework","c8f8dfa39eefbf6ff2e35d0198ace6bf64dd0f42",5,"2019-07-11 15:48:18+02:00","Add engineSupplier property to
ScriptTemplateConfigurer  This commit adds an
engineSupplier property to
ScriptTemplateConfigurer and ScriptTemplateView in
order to be able to customize the ScriptEngine
when sharedEngine is set to false.  This can be
useful with Graal.js for example.  Closes gh-23258
",530452,7140,334574,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"485","spring-projects/spring-framework","699d3f15e84142fe048edf87b27eb0738ea4785a",1,"2019-07-12 12:02:49+02:00","Simplify LocalVariableTableParameterNameDiscoverer
implementation  This commit refactors the
internals of
LocalVariableTableParameterNameDiscoverer to use
java.lang.reflect.Executable in order to simplify
the implementation.
",530487,7140,334607,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"486","spring-projects/spring-framework","17914fc44b1388ab755db28d7c6e47eb2f047d3c",8,"2019-07-14 10:33:42+01:00","Add multi-prefix comment support for SQL scripts
Update `ResourceDatabasePopulator` and
`ScriptUtils` so that more than one comment prefix
can be used when processing SQL scripts. This
feature is particularly useful when dealing with
scripts provided by Quartz since they often use a
mix `--` and `#`.  Closes gh-23289
",530732,7141,334741,"Phillip Webb","pwebb@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"487","spring-projects/spring-framework","a9b3d95a14c316387f2b77328d6864b8e0a36721",1,"2019-07-12 14:46:33+02:00","Interpret empty mono from status handler as normal
response  Prior to this commit, returning an empty
mono from an exception handler registered through
ResponseSpec::onStatus would result in memory
leaks (since the response was not read) and in an
empty response from bodyTo* methods of the
webclient.  As of this commit, that same empty
mono is now interpreted to return the body (and
not an exception), offering a way to override the
default status handlers and return a normal
response for 4xx and 5xx status codes.
",530774,7141,334791,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"488","spring-projects/spring-framework","94e3210ae78ce80c2ab6f28a6a82e630e67331e4",7,"2019-07-17 22:34:07+02:00","Fix nullability warnings and javadoc-triggered
package cycles
",530903,7143,334879,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"489","spring-projects/spring-framework","ffc1f242ca15ed22f769314ecc5bcfce1822d8bc",2,"2019-07-17 22:37:55+02:00","Introduce evictIfPresent/invalidate operations on
Cache abstraction  @CacheEvict.beforeInvocation
suggests immediate execution even in case of
transactional caches. The cache interceptor
delegates to the new evictIfPresent/invalidate
operations now which imply immediate execution
semantics (and also provide an indication for
whether any corresponding entries where present
when programmatically called).  Closes gh-23192
",531011,7143,334941,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"490","spring-projects/spring-framework","daf29118a617b52466ae3b7a30be147f46f05a39",1,"2019-07-20 15:05:38+02:00","Resolve ApplicationListener against
BeanDefinition.getResolvableType()  This covers
ApplicationListener generics in factory method
return types in particular but also allows for
programmatic setTargetType hints.  Closes gh-23178
",531069,7145,335115,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"491","spring-projects/spring-framework","89571ea2368d2f0804b2edb4f16e7b50777cfc8a",1,"2019-07-19 22:35:07+02:00","Introduce @SqlMergeMode for configuring @Sql
annotation merging  Closes gh-1835
",531153,7149,335266,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"492","spring-projects/spring-framework","c3c152f80636d91090be899f66cc033796fa777f",3,"2019-07-23 15:23:44+02:00","Add multi-prefix comment support for @SqlConfig
gh-23289 introduced support for multiple single-
line comment prefixes for ScriptUtils,
ResourceDatabasePopulator, and
EmbeddedDatabaseBuilder.  This commit adds the
same support for @SqlConfig in the TestContext
Framework. Specifically, @SqlConfig has a new
`commentPrefixes` attribute for setting multiple
single-line comment prefixes.  Closes gh-23331
",531422,7150,335371,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"493","spring-projects/spring-framework","91b040d0bf05c857c022a263b3c076a3020c3875",4,"2019-07-24 10:25:59+01:00","Add responder strategies to RSocketStrategies
RouteMatcher and MetadataExtractor can now be
configured on and accessed through
RSocketStrategies. This simplifies configuration
for client and server responders.  See gh-23314
",531580,7150,335393,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"494","spring-projects/spring-framework","88016d47d01c74157f638dc1217ee6aa2428c65f",8,"2019-07-24 17:39:31+01:00","Fix issues in RSocketMessageHandler initialization
This commit ensures getRSocketStrategies() now
reflects the state of corresponding
RSocketMessageHandler properties even if those
change after a call to setRSocketStrategies.
RSocketMessageHandler has default Encoder/Decoder
initializations consistent with the recent changes
to RSocketStrategies.
",531729,7150,335387,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"495","spring-projects/spring-framework","dc0c730ee84065c564ae23e8bdddb66deea38dff",1,"2019-07-29 10:15:46+01:00","DefaultMetadataExtractor refactoring
",531975,7168,335971,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"496","spring-projects/spring-framework","c76370d7d8f3f5421b302c8eafe1c0007f85d312",1,"2019-07-29 13:29:11+01:00","Polish
",532003,7168,335960,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"497","spring-projects/spring-framework","55946bf319d1cbb4bc899689f1ef3d6649aca479",5,"2019-07-29 21:13:39+01:00","Factor out MetadataEncoder from RSocketRequester
To be re-used also for creating metadata for the
setup payload.  See: gh-23368
",532115,7170,336021,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"498","spring-projects/spring-framework","2c878e9331289ac8e5768e60881e9ac873ba7865",6,"2019-07-29 22:04:08+01:00","Support for setupPayload in RSocketRequester
Closes gh-23368
",532186,7170,336046,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"499","spring-projects/spring-framework","1d92755cc74127c7371c2438f272d431ee43bc4f",1,"2019-07-30 10:52:13+01:00","Remove custom handling of byte[] in
DefaultStompSession  Closes gh-23358
",508925,6927,323375,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"500","spring-projects/spring-framework","2ee1ce61c038c27fb163316961d3180de42f8297",2,"2019-07-20 17:03:31+01:00","Add missing variants of getBeanNamesForType
Update `ListableBeanFactory` and
`BeanFactoryUtils` to add the missing
`getBeanNamesForType` methods that accept a
`ResolvableType` rather than a `Class`.  This
completes the work started in 778a01943b.  Closes
gh-23335
",532400,7171,336173,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"501","spring-projects/spring-framework","527876d9a08e136c2fe07de162578de36cc344fb",1,"2019-07-18 11:48:32+01:00","Cache AbstractBeanFactory.isFactoryBean results
Add an additional cache to the
`RootBeanDefinition` to save recalculating the
result of `isFactoryBean`.  Closes gh-23337
",532428,7171,336177,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"502","spring-projects/spring-framework","a0e462581fe1d27d5926809fbb21441a6685ef45",1,"2019-07-18 18:43:48+01:00","Consider generics for predicting FactoryBean types
Update the `FactoryBean` type prediction logic
(primarily in the `DefaultListableBeanFactory`) so
that generic type information is considered when
calling `getBeanNamesForType` on a non-frozen
configuration.  Calling `getBeanNamesForType` with
`allowEagerInit` disabled will now detect
`FactoryBean` variants as long as generic type
information is available in either the class or
the factory method return type.  Closes gh-23338
",532551,7172,336257,"Phillip Webb","pwebb@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"503","spring-projects/spring-framework","e6f86c5c755c79737d2f33d592def296ab162437",4,"2019-07-31 13:45:48+02:00","Nullability refinements and related polishing
",532601,7172,336279,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"504","spring-projects/spring-framework","17518ecbbe222c357a24bf43f38fee1de3170d54",4,"2019-07-31 14:40:40+01:00","Add TYPE_HIERARCHY_AND_ENCLOSING_CLASSES strategy
Add a `TYPE_HIERARCHY_AND_ENCLOSING_CLASSES`
annotation search strategy that can be used to
search the full type hierarchy as well as any
enclosing classes.  Closes gh-23378
",532661,7173,336315,"Phillip Webb","pwebb@pivotal.io","Phillip Webb","pwebb@pivotal.io"
"505","spring-projects/spring-framework","de3c115614d58782f96953c548f56e650fc97ab2",2,"2019-07-31 22:05:46+02:00","Fix bug in TYPE_HIERARCHY_AND_ENCLOSING_CLASSES
strategy  Prior to this commit, the new
`TYPE_HIERARCHY_AND_ENCLOSING_CLASSES` annotation
search strategy failed to find annotations on
enclosing classes if the source class was a nested
class that itself had no annotations present.
This commit fixes this by adding special logic to
AnnotationsScanner's isWithoutHierarchy() method
to properly support nested classes.  Closes
gh-23378
",532678,7173,336316,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"506","spring-projects/spring-framework","62a3e414734b24d1801b34223df5faaae9e32b5f",4,"2019-07-30 15:22:05+01:00","Deprecate mutable methods of MethodParameter
Deprecate all mutation methods in
`MethodParameter` in favor of factory methods that
return a new instance. Existing code that
previously relied on mutation has been updated to
use the replacement methods.  Closes gh-23385
",532772,7173,336345,"Phillip Webb","pwebb@pivotal.io","Phillip Webb","pwebb@pivotal.io"
"507","spring-projects/spring-framework","b67dbe66ef43e6faca7886a36ebc6f9e9a1fd8f4",1,"2019-08-01 14:25:26+02:00","Revise use of ResolvableType in MethodParameter
Includes consistent use of getContainingClass()
",532797,7173,336391,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"508","spring-projects/spring-framework","762ea3ea9011a30aba63091ccd68bae46aa0854b",1,"2019-08-01 15:26:11+02:00","Document all remaining public methods on
BeanDefinitionParserDelegate  Closes gh-23349
",509013,6927,323468,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"509","spring-projects/spring-framework","8b023b17c948bb180794a23207903718404e2cca",1,"2019-08-09 14:53:54+02:00","Polish contribution  See gh-23435
",532837,7174,336510,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"510","spring-projects/spring-framework","9bd3a535cd524cf771423e67feeea523ac985f87",1,"2019-08-14 00:14:14+02:00","Avoid UndeclaredThrowableStrategy with 1.8
bytecode level (CGLIB 3.3)
ClassLoaderAwareUndeclaredThrowableStrategy fails
with a VerifyError on recent JDKs after the CGLIB
3.3 upgrade. The alternative is to replace it with
a plain ClassLoaderAwareGeneratorStrategy
(extracted from
CglibSubclassingInstantiationStrategy) and custom
UndeclaredThrowableException handling in
CglibMethodInvocation.  See gh-23453
",532904,7177,336626,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"511","spring-projects/spring-framework","8e4f2c89ffecb658c7985fe3012de73e51eade75",1,"2019-08-22 15:05:14+02:00","Add headers(Consumer<HttpHeaders>) to
RequestEntity and ResponseEntity  Closes gh-23404
",533433,7186,336836,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"512","spring-projects/spring-framework","5ce75f3d08be08536278e231b3ecacafd672dde8",5,"2019-08-23 16:27:27+02:00","Support static methods with
ReflectionTestUtils.invokeMethod()  Prior to this
commit, the invokeMethod() utility method in
ReflectionTestUtils only supported instance
methods.  This commit brings the invokeMethod()
support on par with the getField() support by
supporting the invocation of static methods via
two new invokeMethod() variants.  Closes gh-23504
",533811,7185,336850,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"513","spring-projects/spring-framework","5105b74f6e7cdb80cd1dc1f1d426ad931e038184",1,"2019-08-25 15:15:48+02:00","Add missing @Nullable declaration  See gh-23514
",533847,7186,336889,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"514","spring-projects/spring-framework","29a58ab045b1fdb622b9e3a54df21b69ac930c01",1,"2019-08-27 12:27:20+03:00","Remove RSocket metadata MimeType constants  For
public use, these constants aren't ideally exposed
through an SPI like MetadataExtractor, and there
isn't any other obvious place either. In practice
the only public API where these can be passed in
is RSocketRequester and RSocketMessageHandler both
of which already default to composite metadata
anyway, leaving only the routing MimeType to be
used potentially but much less likely. Due to
existence of similar constants in the RSocket
itself, i.e. WellKnownMimeType, we can get by
internally too without declaring MimeType
constants from a central place.
",533832,7186,336874,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"515","spring-projects/spring-framework","72e92da2ad6cee51403698c68eeeb57f5ef95918",86,"2019-08-29 11:02:31+02:00","Make SpEL rootObject parameter nullable  Closes
gh-23442
",533863,7186,336896,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"516","spring-projects/spring-framework","f26866e4d444288a748df3358839f00ee90d5216",4,"2019-09-04 00:06:23+02:00","Introduce getType variant with
allowFactoryBeanInit flag  Closes gh-23374
",534282,7188,337051,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"517","spring-projects/spring-framework","30cff46e7f1ad4bd15f1e530fcb757d12736774a",30,"2019-09-12 11:15:30+02:00","Prevent improper use of testing framework APIs
Prior to this commit, a lot of work had been done
to prevent improper use of testing Framework APIs
throughout the codebase; however, there were still
some loopholes.  This commit addresses these
loopholes by introducing additional Checkstyle
rules (and modifying existing rules) to prevent
improper use of testing framework APIs in
production code as well as in test code.  -
Checkstyle rules for banned imports have been
refactored into   multiple rules specific to JUnit
3, JUnit 4, JUnit Jupiter, and   TestNG. -
Accidental usage of org.junit.Assume has been
switched to   org.junit.jupiter.api.Assumptions. -
All test classes now reside under
org.springframework packages. - All test classes
(including abstract test classes) now conform to
the   `*Tests` naming convention.   - As an added
bonus, tests in the renamed
ScenariosForSpringSecurityExpressionTests are now
included in the     build. - Dead JUnit 4
parameterized code has been removed from
DefaultServerWebExchangeCheckNotModifiedTests.
Closes gh-22962
",534361,7189,337112,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"518","spring-projects/spring-framework","077754b8e0a1806d6d6efb4237a1f50ad82170d0",3,"2019-09-13 12:33:17-07:00","Support constructor injection for @Import classes
Allow `ImportBeanDefinitionRegistrar`,
`ImportSelector`, `DeferredImportSelector.Group`
and `TypeFilter` to use constructor parameters as
an alternative to `*Aware` callbacks.  In order to
remain backwards compatible, injection only occurs
when there is a single constructor with one or
more parameters.  The following parameter types
are supported:  * `Environment` * `BeanFactory` *
`ClassLoader` * `ResourceLoader`  In order to keep
the algorithm simple, subclass parameter types are
not supported. For example, you cannot use
`ConfigurableEnvironment` instead of
`Environment`.  Closes gh-23637
",534653,7191,337243,"Phillip Webb","pwebb@pivotal.io","Phillip Webb","pwebb@pivotal.io"
"519","spring-projects/spring-framework","848804a22713e36b6198c3bed2f3d94827e4ee70",2,"2019-09-16 19:01:14+02:00","Allow registration of RSocket metadata extractors
Prior to this commit, customizing the extraction
of RSocket metadata from frames would require
developers to override the default
`MetadataExtractor` while configuring
`RSocketStrategies`. This touches on many
infrastructure parts, whereas the goal is just to
configure an extra metadata entry extractor using
already configured codecs.  This commit adds a way
to register metadata entry extractors on the
`RSocketStrategies` builder with a
`Consumer`-based API.  Closes gh-23645
",534789,7192,337298,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"520","spring-projects/spring-framework","5adc3d66660c3123a5806f168ccdf2298d398aec",2,"2019-09-18 11:39:59+02:00","Fix RSocketRequester API for requests without
payload  This commit makes it possible to send
requests without requiring to call
data(Mono.empty()). It introduces a dedicated
MetadataSpec interface and merge ResponseSpec into
RequestSpec for more flexibility.  Closes gh-23649
",534898,7194,337363,"Sebastien Deleuze","sdeleuze@pivotal.io","Sebastien Deleuze","sdeleuze@pivotal.io"
"521","spring-projects/spring-framework","8f6846827d41f22c2b6dfac6fc12b56cc63f69a9",1,"2019-09-18 17:13:33+02:00","Ensure ClassFilter and MethodMatcher
implementations are cacheable  While resolving the
regression raised in gh-23571, it came to our
attention that not all of our ClassFilter and
MethodMatcher implementations were properly
cacheable with CGLIB generated proxies due to
missing (or improper) equals() and hashCode()
implementations.  Although such deficiencies may
not manifest themselves as bugs in Core Spring's
default arrangements, these might cause issues in
custom arrangements in user applications.  This
commit addresses this by ensuring that ClassFilter
and MethodMatcher implementations properly
implement equals() and hashCode(). In addition,
missing toString() implementations have been added
to improve diagnostics for logging and debugging.
Closes gh-23659
",509845,6932,323676,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"522","spring-projects/spring-framework","e2baf7277bdfa8b4a4da34fb0f0853413bec1a8f",2,"2019-09-23 13:32:28+01:00","Use metadata slice  Take a slice of the metadata
if not using composite metadata to allow reading
it multiple times. For composite metadata this is
not an isuse as it is ensured by the underlying
RSocket Java API.
",535108,7195,337456,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"523","spring-projects/spring-framework","1aa0ea02818e68a52d52050f4bd44ff30530229c",2,"2019-09-25 13:51:20+02:00","Fix nullability declarations on internal
ParserStrategyUtils methods
",535169,7195,337464,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"524","spring-projects/spring-framework","17c423f5afa2d8e6a0b1adfc2f7380489c5db33b",3,"2019-09-25 17:16:21+01:00","Support for sameSite attribute in WebFlux  Bypass
server cookie and write Set-Cookie header directly
for Reactor Netty, and Servlet API which do not
provide options.  For Undertow use the sameSite
attribute.  Closes gh-23693
",509927,6932,323694,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"525","spring-projects/spring-framework","ad543dbee3d0c7a163fb378e8049b22adf0ac516",1,"2019-10-21 17:46:43-07:00","Use mapped annotation values when resolving
mirrors  Update `TypeMappedAnnotation` mirror
resolution logic so that mapped annotation values
are also considered. Prior to this commit, mirrors
in more complex meta-annotation scenarios would
not resolve correctly.  Specifically, given the
following:   @interface TestAliased {
@AliasFor(attribute = ""qualifier"")         String
value() default """";          @AliasFor(attribute =
""value"")         String qualifier() default """";  }
@TestAliased  @interface TestMetaAliased {
@AliasFor(annotation = Aliased.class, attribute =
""value"")         String value() default """";  }
@TestMetaAliased(""test"")  @interface TestComposed
{  }  A merged `@TestAliased` annotation obtained
from a `@TestComposed` root annotation would
return a `value` and `qualifier` of """".  This was
because the ""value"" and ""qualifier"" mirrors needed
to be resolved against the `@TestMetaAliased`
meta-annotation. They cannot be resolved against
the declared `@TestComposed` annotation because it
does not have any attributes. Our previous tests
only covered a single depth scenario where
`@TestMetaAliased` was used directly on the
annotated element.  Closes gh-23767 Co-authored-
by: Sam Brannen <sbrannen@pivotal.io>
",535317,7195,337589,"Phillip Webb","pwebb@pivotal.io","Phillip Webb","pwebb@pivotal.io"
"526","spring-projects/spring-framework","eabf357640b415a24d55d241a1905927c8156844",1,"2019-10-23 14:03:44+02:00","Polish MockMvc result matchers and tests
",535358,7195,337617,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"527","spring-projects/spring-framework","9b2087618bba6cd546066e2f27deb166f6870a64",3,"2019-10-09 00:01:14+02:00","Preserve expires attribute in MockCookie  At
present, MockCookie doesn't preserve expires
attribute. This has a consequence that a cookie
value set using MockHttpServletResponse#addHeader
containing an expires attribute will not match the
cookie value obtained from
MockHttpServletResponse#getHeader, since the
expires attribute will get calculated based on
current time.  This commit enhances MockCookie to
preserve the expires attribute.  Closes gh-23769
",535440,7195,337651,"Vedran Pavic","vedran.pavic@gmail.com","Sam Brannen","sbrannen@pivotal.io"
"528","spring-projects/spring-framework","5abf24e7d75e9f81746a92e7b3e1ae51204abbd2",2,"2019-10-28 21:32:15+00:00","Expose maxInMemorySize via CodecConfigurer
Centralized maxInMemorySize exposed via
CodecConfigurer along with ability to plug in an
instance of MultipartHttpMessageWrite.  Closes
gh-23884
",535860,7198,337912,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"529","spring-projects/spring-framework","773b2f06a10679979ee747ad2ee2182eaafcc8cd",4,"2019-10-30 00:25:17+01:00","Avoid Connection.isReadOnly() call in
resetConnectionAfterTransaction  Closes gh-23747
",535906,7198,337959,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"530","spring-projects/spring-framework","046380988b9f98bed43fad1943c8f10f6a1429de",2,"2019-10-30 00:26:11+01:00","Nullability refinements
",535916,7198,337959,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"531","spring-projects/spring-framework","43a86565cac09de05e50678721cbc83a61a43a6e",5,"2019-10-30 16:23:37+01:00","Consider target transaction manager for reactive
transaction decision  Closes gh-23832
",536186,7200,338020,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"532","spring-projects/spring-framework","b2b02ad7a17752479ff9febe7b4ab15da3b81708",1,"2019-11-08 15:03:12+00:00","Polishing
",536517,7201,338041,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"533","spring-projects/spring-framework","08f1cb454a2d23a0c63cd846196b8d43205e7945",1,"2019-04-01 10:14:53+02:00","Allow sending headers with the disconnect frame
",536538,7201,338045,"Ilja","ilja.kempf@gmail.com","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"534","spring-projects/spring-framework","6d47e1e0a11a7dacffaaddc841b4f34f37b1e751",1,"2019-11-11 15:55:06+01:00","Fix getHeaderPredicate visibility to be declared
as protected  Closes gh-23976
",536657,7203,338106,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"535","spring-projects/spring-framework","789f6fc188482f0c68180c30422fd00052175ab8",1,"2019-11-11 16:40:56+01:00","Add @Nullable annotation to decode method taking
DataBuffer  Javadoc indicates the returned value
can be null.
",536675,7203,338116,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"536","spring-projects/spring-framework","a26d37b4076715e60833109afb3026eebba9a317",2,"2019-11-12 14:01:13+01:00","Polishing
",536700,7203,338119,"Sam Brannen","sam@sambrannen.com","Sam Brannen","sam@sambrannen.com"
"537","spring-projects/spring-framework","f61d728db9437cf689f942e624a47b4c4c256db0",3,"2019-11-13 13:48:08+01:00","Fallback Locale other than the system Locale
through setDefaultLocale  Closes gh-23977
",536763,7203,338177,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"538","spring-projects/spring-framework","04aa3d05dace092a675609425e9ee9274d5882be",50,"2019-11-13 14:18:30+00:00","Refactor solution for respones error details  See
gh-1956
",536905,7203,338227,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"539","spring-projects/spring-framework","f2b926467491098b09b38296b95d9543c97e22ad",1,"2019-11-13 14:42:32+00:00","Remove Jetbrains annotations
",536898,7203,338227,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"540","spring-projects/spring-framework","22211a01ce5e07331a20fd9c256073a9d5392ce1",1,"2019-11-13 17:23:23+01:00","Polishing
",536905,7203,338227,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"541","spring-projects/spring-framework","3dc5e7b1d5fb166e66b0eb718aa57d246e967de9",2,"2019-11-13 23:41:26+01:00","Avoid String concatenation for lookup in
StaticMessageSource  Closes gh-22451
",536927,7203,338225,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"542","spring-projects/spring-framework","842b424acd8a4cbffd7f0dffae33fcce61fbce25",1,"2019-11-18 17:27:09+00:00","Use method signature to refine RSocket
@MessageMapping  Before this change an
@MessageMapping could be matched to any RSocket
interaction type, which is arguably too flexible,
makes it difficult to reason what would happen in
case of a significant mismatch of cardinality,
e.g. request for Fire-And-Forget (1-to-0) mapped
to a method that returns Flux, and could result in
payloads being ignored, or not seen
unintentionally.  This commit checks
@ConnectMapping method on startup and rejects them
if they return any values (sync or async). It also
refines each @MessageMapping to match only the
RSocket interaction type it fits based on the
input and output cardinality of the handler
method. Subsequently if a request is not matched,
we'll do a second search to identify partial
matches (by route only) and raise a helpful error
that explains which interaction type is actually
supported.  The reference docs has been updated to
explain the options.  Closes gh-23999
",537169,7205,338375,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"543","spring-projects/spring-framework","fd6efb9a65082a1b16997f2a4f5ce7f2d6d7009c",11,"2019-11-19 15:53:20+01:00","Polishing
",537250,7207,338431,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"544","spring-projects/spring-framework","a5f2d8c2221725eb0125e00dda48488dc3ac9489",48,"2019-11-20 17:37:40+01:00","Mark SqlRowSet accessor methods as nullable (for
alignment with JDBC)  Closes gh-24042
",537335,7207,338448,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"545","spring-projects/spring-framework","ddb38eefeea1506bbf5bdefda4fd0c354381d79f",1,"2019-11-26 10:50:08+01:00","Expose method to determine form content type  This
commit exposes the method that returns the media
type used to write forms. By default, it includes
the charset in the content type, which can cause
issues with certain consumers. This commit changes
the method from a private to a protected method,
so that users can override the default behavior.
Closes: gh-22971
",537511,7207,338501,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"546","spring-projects/spring-framework","e858b21c60396c1597e3f1327be944ec31dbfa7d",7,"2019-11-26 09:54:49+07:00","#24022 - added protobuf MessageConverter
",538229,7210,338734,"Parviz ROzikov","rozikovp@gmail.com","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"547","spring-projects/spring-framework","25f3465f1f1dc852da379b95a4303d3b7891da23",8,"2019-11-29 15:53:37+00:00","Polishing contribution  See gh-24087
",538200,7211,338741,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"548","spring-projects/spring-framework","acfeb77d4173e90a4db08b3201cd2c6798173f6d",2,"2019-12-02 14:12:33+00:00","Polishing  See gh-23961
",538451,7211,338811,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"549","spring-projects/spring-framework","decbb9ccf9dd4da87f2f3aeca9b05ce24824beb9",2,"2019-12-02 22:52:55+01:00","Provide default codecs config callback to custom
codecs  As a follow-up of gh-23961, this change
provides a way for custom codecs to align with the
default codecs' behavior on common features like
buffer size limits and logging request details.
Closes gh-24118 Co-authored-by: Rossen Stoyanchev
<rstoyanchev@pivotal.io>
",538463,7211,338832,"Brian Clozel","bclozel@pivotal.io","Brian Clozel","bclozel@pivotal.io"
"550","spring-projects/spring-framework","d503bc2804b7bdbb9e9c46081a7fa454ac81c8d7",4,"2019-12-04 18:18:46+02:00","Add firstElement to CollectionUtils
",538520,7211,338872,"Vitalii Rastvorov","vitaliy.rastvorov@bhnetwork.com","Juergen Hoeller","jhoeller@pivotal.io"
"551","spring-projects/spring-framework","1b172c1d20ecf96839abc02a67ae2a763af2815e",13,"2019-12-10 15:10:13+00:00","Expose localAddress in WebFlux server  Closes
gh-24174
",538699,7212,338924,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"552","spring-projects/spring-framework","dafe57fc6e1b019fe011fcdf99f32f9b11c01bb0",1,"2019-12-12 12:17:02+01:00","Add BeanPropertyRowMapper.newInstance(mappedClass,
conversionService)  Similar to
SingleColumnRowMapper.newInstance(requiredType,
conversionService) which was added in #1678.
",538754,7212,338938,"perceptron8","perceptron8@users.noreply.github.com","Juergen Hoeller","jhoeller@pivotal.io"
"553","spring-projects/spring-framework","9d65830133c96da18676555818f88c24a0b12753",5,"2019-12-12 17:01:01+00:00","CodecConfigurer implementation refactoring  See
gh-24124
",538800,7212,338973,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"554","spring-projects/spring-framework","4692f20aaca89b763aee703ce714e7109dca4e9c",1,"2020-01-07 18:35:38+08:00","Remove code duplication in
AnnotationDrivenBeanDefinitionParser  This commit
merges the implementations of
getCallableInterceptors()  and
getDeferredResultInterceptors() in order to remove
code duplication.    Closes gh-24305
",539502,7205,338894,"GungnirLaevatain","547992357@qq.com","Sam Brannen","sbrannen@pivotal.io"
"555","spring-projects/spring-framework","9d963abb7dfb6b0d0a3f6d89a2e60ebd42268146",1,"2020-01-07 14:00:27+00:00","Concrete MediaType check in
StringHttpMessageConverter  Closes gh-23287
",539513,7205,338894,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"556","spring-projects/spring-framework","259ffe9b3b49f175ea78ebd36179a5e7551d1b45",1,"2020-01-08 18:37:07+01:00","Thread-safe compiled expression evaluation in
SpelExpression  Closes gh-24265
",539572,7206,338937,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"557","spring-projects/spring-framework","8e5cad2af3d0465c98f7269ec1a6262a3f30c1bb",1,"2019-12-30 17:20:07+02:00","Add fast path for ClassUtils.hasMethod()
",539582,7206,338944,"stsypanov","sergei.tsypanov@yandex.ru","Juergen Hoeller","jhoeller@pivotal.io"
"558","spring-projects/spring-framework","5e9d29d8134b4be4733ae0a303d1c95b8c3d92c5",2,"2020-01-20 17:29:59+00:00","Ability to customize default Smile codecs  Closes
gh-24382
",539908,7209,339074,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"559","spring-projects/spring-framework","54669c51c927cda27a80fb4a3e56a3207942bb66",6,"2020-01-17 13:43:29+01:00","Use Jackson SequenceWriter for streaming  Before
this commit, the AbstractJackson2Encoder
instantiated a ObjectWriter per value. This is not
an issue for single values or non-streaming
scenarios (which effectively are the same, because
in the latter values are collected into a list
until offered to Jackson). However, this does
create a problem for SMILE, because it allows for
shared references that do not match up when
writing each value with a new ObjectWriter,
resulting in errors parsing the result.  This
commit uses Jackson's SequenceWriter for streaming
scenarios, allowing Jackson to reuse the same
context for writing multiple values, fixing the
issue described above.  Closes gh-24198
",539940,7209,339075,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"560","spring-projects/spring-framework","7453c0d0cb4646ddea56182ec3511ceeaf179b1f",2,"2020-01-21 11:06:49+00:00","Deprecate config options to match by path
extension  See gh-24179
",539966,7209,339146,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"561","spring-projects/spring-framework","c69703ffdb032f70e640755de1b3fc270bea9920",2,"2020-01-22 13:34:27+00:00","Deprecate path extension strategies  This commit
deprecates PathExtensionContentNegotiationStrategy
and ServletPathExtensionContentNegotiationStrategy
and also updates code that depends on them
internally to remove that dependence.  See
gh-24179
",540066,7209,339206,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"562","spring-projects/spring-framework","992e75303d598a4f3ef7ab912de588f9748961ac",2,"2020-01-23 12:31:00+00:00","Improve support for generics in Jackson codecs
Closes gh-23791
",540080,7209,339213,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"563","spring-projects/spring-framework","547342b27d39efdb7ef6de068897b972e85c7b23",4,"2020-01-30 10:06:58+00:00","Status code as Integer methods in
ServerHttpResponse  Closes gh-24400
",540545,7211,339521,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"564","spring-projects/spring-framework","d93303c0089d311f2b014f45f1b345ca7ab9cb1f",3,"2020-02-05 12:35:16+01:00","ImportSelector.getCandidateFilter() for transitive
filtering of classes  Closes gh-24175
",540543,7211,339559,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"565","spring-projects/spring-framework","82adb094907c07a4a456908dc00f36ea9d2ab1b7",2,"2020-02-05 18:20:27+01:00","ImportSelector.getExclusionFilter() naming and
javadoc clarification  See gh-24175
",540543,7211,339560,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"566","spring-projects/spring-framework","974cacac31a2e2d7fa784e962b6a66e6e72dfff4",2,"2020-01-19 16:55:46+01:00","Support nested annotations in ASM-based processing
again  Spring Framework 5.0 introduced a
regression in ASM-based annotation processing.
Specifically, nested annotations were no longer
supported, and component scanning resulted in an
exception if a candidate component was annotated
with an annotation that contained nested
annotations.  This commit fixes this regression by
introducing special handling in
AnnotationTypeMapping that supports extracting
values from objects of type TypeMappedAnnotation
when necessary.  Closes gh-24375
",540642,7214,339623,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"567","spring-projects/spring-framework","5d4f1d9e094504bb7d705aa7f56a164d98fe13cc",23,"2020-02-12 10:47:15+01:00","Extract ValueExtractor functional interface  See
gh-24375
",540643,7215,339651,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"568","spring-projects/spring-framework","4882eb278d3ed71a75f0183c790228847b5bc08b",4,"2020-02-17 15:08:34+01:00","Convert non-UTF-8 JSON  Jackson's asynchronous
parser does not support any encoding except UTF-8
(or ASCII). This commit converts non-UTF-8/ASCII
encoded JSON to UTF-8.  Closes gh-24489
",540758,7216,339700,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"569","spring-projects/spring-framework","adc13f203030d56dc5e0ed870879f0814cd68a53",1,"2020-02-20 17:58:47+00:00","Polishing contribution  See gh-24493
",540768,7216,339703,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"570","spring-projects/spring-framework","f78c21e40b99707827e815efd06de7f92cfc5f70",2,"2020-02-23 01:32:02+08:00","Fix typos in tests  Closes gh-24566
",540768,7216,339703,"Qimiao Chen","chenqimiao1994@126.com","GitHub","noreply@github.com"
"571","spring-projects/spring-framework","2afae430eba0f2e3c0cae50d727b3d79bf0cf02a",1,"2020-03-03 15:37:31+00:00","Update list of support multipart media types  See
gh-24582
",540897,7217,339763,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"572","spring-projects/spring-framework","fc128910063e69fc1c6cecfd3c3ff6c7f6d2b69f",1,"2020-03-10 12:06:11+01:00","Add ServerRequest::firstHeader  This commit
introduces the method firstHeaderiin both
WebMvc.fn and WebFlux.fn, which return the first
header value of a given header name, if any.
",541054,7217,339779,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"573","spring-projects/spring-framework","c03cdbac2124a6b6fe397d99b6ebfb7901859f70",1,"2020-03-10 15:32:00+01:00","CORS support in HTTP method predicate  This commit
introduces CORS support for the
HttpMethodPredicate in WebMvc.fn and WebFlux.fn.
Closes gh-24564
",541143,7217,339779,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"574","spring-projects/spring-framework","1fd447f395781db9a53ba14207dc07af33de6412",1,"2020-03-10 18:16:08+02:00","Reduce String garbage in
CglibAopProxy.doValidateClass()  Closes gh-24672
",540781,7216,339754,"Сергей Цыпанов","sergei.tsypanov@yandex.ru","GitHub","noreply@github.com"
"575","spring-projects/spring-framework","0dc1c7eb8b4ca17996567406f3e16267ff544a6d",4,"2020-03-11 12:05:07+01:00","Add ServerRequest::checkNotModified  This commit
adds the checkNotModified method to ServerRequest
in both WebFlux.fn and WebMvc.fn. Unlike other
checkNotModified methods found in the framework,
this method does not return a boolean, but rather
a response wrapped in a Mono/Optional. If the
resource has not been changed, the not-modified
response can be returned directly; if the resource
has changed, the user can create a corresponding
response using switchIfEmpty/orElse(Get).  Closes
gh-24173
",541297,7216,339946,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"576","spring-projects/spring-framework","a599859595eccb20529dc7553d4be3bd87845450",3,"2020-03-12 12:21:19+00:00","ServerCookie ignores empty domain with double
quotes  Closes gh-24663
",541314,7216,339956,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"577","spring-projects/spring-framework","0e5f27c94e5fa33a294d342dbc9ed61e6c032468",5,"2020-03-20 22:59:47+08:00","Introduce NonNull to package-info
",541449,7216,339984,"陈其苗","chenqimiao1994@126.com","Juergen Hoeller","jhoeller@pivotal.io"
"578","spring-projects/spring-framework","cf7daa36c8466d2e1f188a866be4fcb7d6b2d886",1,"2020-03-17 14:10:30-07:00","Add @DynamicPropertySource support in TestContext
framework  This commit introduces a
@DynamicPropertySource annotation that can be used
on methods in test classes that want to add
properties to the Environment with a dynamically
supplied value.  This new feature can be used in
conjunction with Testcontainers and other
frameworks that manage resources outside the
lifecycle of a test's ApplicationContext.  Closes
gh-24540  Co-authored-by: Phillip Webb
<pwebb@pivotal.io>
",541766,7225,340229,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"579","spring-projects/spring-framework","fd1ca46ca16d7bbd07e45cdea34b7834f9d67b14",4,"2020-03-23 17:56:14+01:00","Thread-safe access to WebSocketServerFactory and
WebSocketExtensions  See gh-24745
",541780,7225,340229,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"580","spring-projects/spring-framework","910d2788e9aee8ce1c2cbb23817b56c6a74521e5",1,"2020-03-23 18:02:55+01:00","Polishing
",541760,7225,340242,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"581","spring-projects/spring-framework","5c977ce1197dd84ccecc0de5d0325585d1b86144",2,"2020-03-25 18:53:02+01:00","Make remaining static fields final in
CommonAnnotationBPP
",541740,7225,340244,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"582","spring-projects/spring-framework","8595f01e4444aaa44a2e299b692f25aafed1e14f",1,"2020-04-03 21:08:45+02:00","Polishing
",541621,7225,340275,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"583","spring-projects/spring-framework","251501587bcfcd8f352b20e0ebe220f67f2c781b",12,"2020-04-03 21:15:00+02:00","Consistent nullability of arguments array in
JdbcOperations/Template  Closes gh-24839
",541642,7225,340288,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"584","spring-projects/spring-framework","0520ee0fb62464687b74e7ad3bc234c30baa3732",2,"2020-04-23 08:58:01+01:00","Use the Reactor Netty WebsocketServerSpec  Closes
gh-24959
",541934,7226,340436,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"585","spring-projects/spring-framework","59ecd4997ce1a63da4554f3dcfd7dd176b38d51b",1,"2020-04-26 14:14:07+02:00","Optimize toString() for synthesized annotations
This commit moves the toString() implementation
for synthesized annotations from
TypeMappedAnnotation to
SynthesizedMergedAnnotationInvocationHandler in
order to take advantage of the synthesized
annotation attribute value cache introduced in
72b1abd226.  Closes gh-24970
",542017,7226,340512,"Sam Brannen","sbrannen@pivotal.io","Sam Brannen","sbrannen@pivotal.io"
"586","spring-projects/spring-framework","54e6103defb99c067f3f4d5a6054aa24a29a379e",1,"2020-04-20 16:54:56+02:00","Add ServerRequest::multipartData in WebMvc.fn
This commit adds the multipartData method to
ServerRequest in WebMvc.fn, returning a
MultiValueMap<String, Part>.  Closes gh-24909
",542157,7226,340524,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"587","spring-projects/spring-framework","3bc1d42dcd43523d7585acdd5e954c693c515af2",1,"2020-03-14 23:27:01+01:00","Integrate Apache http client with WebClient  This
commit introduces a ClientHttpConnector
implementation backed by Apache HttpComponents
HttpClient 5.0.  Fixes gh-24700
",542463,7229,340618,"martin-tarjanyi","tmartin193@gmail.com","Arjen Poutsma","apoutsma@pivotal.io"
"588","spring-projects/spring-framework","7bd524e9d705f0189730b3a3b4c41ebde0a2936b",1,"2020-04-17 14:19:06+02:00","Add ClientHttpConnector test suite  This commit
introduces a test suite for ClientHttpConnector
implementations, as well as fixes that resolve
issues identified by these tests.  Closes gh-24941
",542624,7230,340636,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"589","spring-projects/spring-framework","c2cce0c5478a5302cfdf1e9cea3a4cd4009129d5",1,"2020-05-01 15:39:52+01:00","Add isDeferred to ReactiveTypeDescriptor  Closes
gh-24995
",542094,7226,340522,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"590","spring-projects/spring-framework","aa97563853535d5fea773e18980a8ac964d3e618",1,"2020-05-01 17:32:19+01:00","Add UnknownContentTypeException  Closes gh-24964
",542150,7227,340577,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"591","spring-projects/spring-framework","1b4b4c33027605db8f7621f7319b0b256c202350",5,"2020-04-30 20:10:16+02:00","Support @TestConstructor config via JUnit Platform
config param  This commit introduces support for
setting the spring.test.constructor.autowire.mode
property via a JUnit Platform configuration
parameter -- for example, via the junit-
platform.properties file.  Closes gh-24285
",542719,7232,340734,"Sam Brannen","sam@sambrannen.com","Sam Brannen","sam@sambrannen.com"
"592","spring-projects/spring-framework","a7c736915a4c23b3e3a5eb17d0c6aea904b53bd1",8,"2020-05-05 18:15:21+01:00","Polishing and completing contribution  See
gh-24866
",542982,7237,340852,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"593","spring-projects/spring-framework","816466e4920fd44b3f5d63beba10120a1998e9bb",1,"2020-01-21 01:03:43+07:00","#24406 - Add String based URI template variants
",543068,7237,340939,"Parviz ROzikov","rozikovp@gmail.com","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"594","spring-projects/spring-framework","e9cded560d6ecb73aa5bfca57e06b09fa0013294",2,"2020-05-06 16:41:35+02:00","Introduce JdbcTransactionManager with
SQLExceptionTranslator support  Closes gh-24064
",544463,7239,341100,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"595","spring-projects/spring-framework","1da903dd59739ead9d49575fbafcad3c6db9ce78",3,"2020-05-07 16:28:33+01:00","Add PartHttpMessageWriter  Closes gh-24535
",544588,7242,341179,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"596","spring-projects/spring-framework","3276f818519f9bde187c4ccb83653c21c2e0e7fb",1,"2020-05-08 10:34:26+01:00","Avoid one layer of HttpHeaders wrapping  See
gh-24680
",544546,7242,341189,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"597","spring-projects/spring-framework","df99889aa6f45988a5879356d89e644f926c85af",3,"2020-05-08 14:07:30+01:00","Avoided repeated creation of ReadOnlyHttpHeaders
wrapper  See gh-24680
",544569,7242,341191,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"598","spring-projects/spring-framework","c908ec19378f3c6e8aac30d877fbf230fe2bc3c4",5,"2020-05-08 14:11:37+01:00","Wrappers for native headers on the client side
Native server request headers have been wrapped
rather than copied since 5.1. This commit applies
the same change to the client side where, to make
matters worse, headers were copied repeatedly on
every access, see also previous commit ca897b95.
For Netty and Jetty the wrappers are the same as
on the server side but duplicated in order to
remain package private.  See gh-24680
",544956,7245,341264,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"599","spring-projects/spring-framework","94824e30a4a8f23e4882b556d16904421958d8cc",6,"2020-05-09 09:49:44+01:00","Avoid parse cookies when mutating request or
response  When mutating a ServerHttpRequest or
ClientResponse, the respective builders no longer
access cookies automatically which causes them to
be parsed and does so only if necessary. Likewise
re-applying the read-only HttpHeaders wrapper is
avoided.  See gh-24680
",544990,7245,341278,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"600","spring-projects/spring-framework","dd0d0d51f667adb35a2df09a667b765090358f92",7,"2020-05-12 21:55:22+02:00","Introduce resolvable timeout attribute on
@Transactional and <tx:method>  Placeholders get
resolved in timeoutString, qualifier and labels
now.  Closes gh-25052
",545191,7246,341356,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"601","spring-projects/spring-framework","e881d4b1441b4ade35806b6f06d5b7ebe1828e92",1,"2020-05-13 11:14:28+01:00","Allow use of JsonInclude.Value  Closes gh-24824
",545203,7246,341361,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"602","spring-projects/spring-framework","e88eb0ecf77b4973d4923367d5a939457cf578ac",1,"2020-05-13 11:15:43+01:00","Option for advanced ObjectMapper customization
Closes gh-23017
",545221,7246,341369,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"603","spring-projects/spring-framework","a3c5625d4e1e2b5ca720b8e74797ee8bd30f54e4",4,"2020-05-13 15:53:48+02:00","Internal cache of pre-filtered BeanPostProcessors
(for faster iteration)  Also includes bulk
addition in PostProcessorRegistrationDelegate.
Closes gh-24681 Closes gh-24756
",545336,7246,341410,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"604","spring-projects/spring-framework","3c1ee64b7f05cd359d8ce8e398a75dce4c033ce9",42,"2020-05-13 23:33:47+02:00","Explicit nullability declarations for all AOP
Alliance methods  Includes consistent declarations
in AOP Alliance related Spring AOP code.  Closes
gh-24117
",545553,7250,341525,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"605","spring-projects/spring-framework","de378599d348ff33acd91f98c976a89b686bb14f",3,"2020-05-14 11:20:12+01:00","Provide access to CloseStatus in WebSocketSession
Closes gh-22079
",545621,7250,341541,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"606","spring-projects/spring-framework","567265123b738045db4808960331812adc3a7aab",1,"2020-05-15 17:07:58+02:00","Avoid using regex matching for static patterns
Prior to this commit (and the previous one), the
`AntPathStringMatcher` (inner class of
`AntPathmatcher`) would compile `Pattern`
instances and use regex matching even for static
patterns such as `""/home""`.  This change
introduces a shortcut in the string matcher
algorithm to skip the `Pattern` creation and uses
`String` equality instead. Static patterns are
quite common in applications and this change can
bring performance improvements, depending on the
mix of patterns configured in the web application.
In benchmarks (added with this commit), we're
seeing +20% throughput and -40% allocation. This
of course can vary depending on the number of
static patterns configured in the application.
Closes gh-24887
",545812,7250,341554,"Brian Clozel","bclozel@vmware.com","Brian Clozel","bclozel@vmware.com"
"607","spring-projects/spring-framework","06cfd80c1cbb2fe0c906295cc336f492bf92b10b",1,"2020-05-18 14:22:24+02:00","Avoid full synchronization in refreshable
getBeanFactory() implementation  Closes gh-25081
",542140,7227,340600,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"608","spring-projects/spring-framework","9631db71c4da502a536c787fe13b978aa9950c08",1,"2020-05-18 20:09:24+02:00","Direct exposure of StringBuilder instead of
intermediate String  Closes gh-25024
",542141,7227,340600,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"609","spring-projects/spring-framework","d56ca04162cbcfff3cec071e3d3513a0e4ba8d18",8,"2020-05-19 14:08:52+02:00","Introduce queryForStream on JdbcTemplate and
NamedParameterJdbcTemplate  Closes gh-18474
",546013,7251,341686,"Juergen Hoeller","jhoeller@pivotal.io","Juergen Hoeller","jhoeller@pivotal.io"
"610","spring-projects/spring-framework","4f65ba4e74096e2391a576d865aaa1ec7c2a70ff",1,"2020-05-24 20:58:28+01:00","Simplify creation of HttpContext for Apache
HttpClient  Closes gh-25066
",542204,7227,340730,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"611","spring-projects/spring-framework","9bf7ff23c02f68e492f377a0781eb607e7515440",5,"2020-05-26 14:19:47+02:00","Introduce EntityManager initialization callbacks
JpaVendorAdapter.postProcessEntityManager and
EntityManagerFactoryInfo.createNativeEntityManager
SPI, plus convenient setEntityManagerInitializer
configuration options.  Closes gh-25125
",546128,7251,341868,"Juergen Hoeller","hoellerj@vmware.com","Juergen Hoeller","hoellerj@vmware.com"
"612","spring-projects/spring-framework","e9a9883aa91fccfc02d2a308d828d643c64a5e58",3,"2020-05-27 18:41:56+01:00","Optimal initialization of empty request mapping
conditions  Closes gh-25143
",542365,7227,340748,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"613","spring-projects/spring-framework","bec89dba4c6051eb7e1df4ac46ff0e2d23b07583",4,"2020-05-29 15:48:19+02:00","Consistent MultiValueMap behavior for empty list
values  This commit extracts MultiValueMapAdapter
from CollectionUtils and reuses its implementation
as base class of LinkedMultiValueMap.  Closes
gh-25140
",542374,7228,340792,"Juergen Hoeller","hoellerj@vmware.com","Juergen Hoeller","hoellerj@vmware.com"
"614","spring-projects/spring-framework","6d6269f1eee53b1ebccbccc97d84e8617bf257d1",3,"2020-05-29 15:07:07+01:00","Switch to Reactor 2020.0.0 snapshots  A switch to
RSocket 1.0.1 snapshots is also required to pick
up a for froward compatibility with Reactor Netty
1.0.  See gh-25085
",546309,7252,341969,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"615","spring-projects/spring-framework","b31b8ce6c1b2e4a047c35fdba36e3d0048578bf7",1,"2020-05-28 13:40:40+02:00","Polishing in MockServerHttpRequest  Closes
gh-25109
",546311,7252,341984,"Mihai Dumitrescu","mdumitrescu@testo.de","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"616","spring-projects/spring-framework","e955e52f2f108517535d4c0541cc5b8bd5e6c22b",2,"2020-05-29 23:07:25+02:00","Refactor method name dispatching to switch
statements  Closes gh-25163
",546269,7252,341973,"Juergen Hoeller","hoellerj@vmware.com","Juergen Hoeller","hoellerj@vmware.com"
"617","spring-projects/spring-framework","f3d4df2fd4e9d2c015ced1f5c749ce43391db017",8,"2020-06-06 15:15:16+02:00","Consistently check available local/remote
addresses for non-null
",542676,7230,340912,"Juergen Hoeller","hoellerj@vmware.com","Juergen Hoeller","hoellerj@vmware.com"
"618","spring-projects/spring-framework","b9e52a808921b76846f4b3ba8505c6c6d41542d2",4,"2020-06-09 17:38:34+02:00","Delete dead code in MockServerHttpRequest
",546554,7254,342098,"Sam Brannen","sbrannen@vmware.com","Sam Brannen","sbrannen@vmware.com"
"619","spring-projects/spring-framework","9138a04a0a9b4de81164f4868cc88907df54d9b0",8,"2020-06-11 23:45:23+02:00","Polishing
",542684,7230,341009,"Juergen Hoeller","hoellerj@vmware.com","Juergen Hoeller","hoellerj@vmware.com"
"620","spring-projects/spring-framework","a0f4d81db76cb100b8f0da3a3cc8a945a012a2c0",16,"2020-06-10 21:45:26+01:00","Remove http -> web package dependency  See
gh-24406
",546659,7254,342162,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"621","spring-projects/spring-framework","5225a5741197a7e2123437709c2468e4537b0469",64,"2020-06-15 11:20:32+01:00","Support for parsed PathPatterns in Spring MVC  See
gh-24945
",547625,7260,342872,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"622","spring-projects/spring-framework","9c3417f7037b407a17ae9832a81f8d0c55677bfc",1,"2020-06-15 17:06:36+02:00","Convert non-unicode input when reading w/ Jackson
This commit makes sure that Jackson-based message
converters and decoders can deal with non-unicode
input. It does so by reading non-unicode input
messages with a InputStreamReader.  This commit
also adds additional tests forthe canRead/canWrite
methods on both codecs and message converters.
Closes: gh-25247
",542693,7230,341013,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"623","spring-projects/spring-framework","cc301011b2edd6c6a02bfe5236482038c4b6473a",2,"2020-06-16 14:17:43+02:00","Polish JDBC KeyHolder support  See gh-24655
",547638,7260,342903,"Sam Brannen","sbrannen@vmware.com","Sam Brannen","sbrannen@vmware.com"
"624","spring-projects/spring-framework","e2944c37e4097eafddd61a20038bff1a6e9c4097",1,"2020-06-16 15:55:41+02:00","Make DispatcherServlet.properties loading lazy
With #25209, DispatcherServlet.properties loading
and parsing will be useless for most of use cases,
and it requires configuration on GraalVM native
images.  The purpose of this issue to make such
loading and parsing lazy, only invoked in
getDefaultStrategies() if needed.  Closes gh-25257
",547646,7260,342905,"Sébastien Deleuze","sdeleuze@vmware.com","Sébastien Deleuze","sdeleuze@vmware.com"
"625","spring-projects/spring-framework","217b6e37a64b2df7f7265cfff1adf52361872469",1,"2020-06-16 11:00:58+02:00","Rollback reactive transaction on cancel  This
commit introduces a change in reactive transaction
semantics for cancel signals. Canceling a
subscription now rolls back a reactive transaction
to achieve a deterministic transaction outcome.
Previously, cancel signals committed a transaction
which could cause partially committed transactions
depending on when the cancel happened.
",547586,7261,342920,"Mark Paluch","mpaluch@pivotal.io","Juergen Hoeller","hoellerj@vmware.com"
"626","spring-projects/spring-framework","aff601edf10ff2eee8c8ce862d9905751b9449ac",52,"2020-05-13 15:54:25+02:00","Add support for R2DBC  This commit introduces
support for R2DBC (""Reactive Relational Database
Connectivity"") with custom ConnectionFactory
implementations, a functional DatabaseClient for
SQL execution, transaction management, a bind
marker abstraction database initialization
utilities, and exception translation.  Closes
gh-25065
",552474,7348,346898,"Mark Paluch","mpaluch@pivotal.io","Sam Brannen","sbrannen@vmware.com"
"627","spring-projects/spring-framework","bad81cef8a3a64bfc39ec23f336fa7fb9ebc814d",4,"2020-06-17 08:56:38+02:00","Align DispatcherServlet defaults for Java and XML
Prior to this commit some of the default
strategies defined for the DispatcherServlet
weren't included in the default configuration for
both Java and XML configuration.  The following
default beans have been added to the configuration
with the name as expected by the
DispatcherServlet:  - org.springframework.web.serv
let.i18n.AcceptHeaderLocaleResolver - org.springfr
amework.web.servlet.theme.FixedThemeResolver - org
.springframework.web.servlet.support.SessionFlashM
apManager - org.springframework.web.servlet.view.D
efaultRequestToViewNameTranslator  Closes gh-25209
",552766,7349,346965,"Marten Deinum","mdeinum@gmail.com","Sébastien Deleuze","sdeleuze@vmware.com"
"628","spring-projects/spring-framework","1c75f95be092cf0b65e19ab71173f9473c1edc82",2,"2020-06-18 15:57:58+02:00","Provide a flag to disable SpEL support  This
commit introduces a spring.spel.ignore system
property which when set to true avoid initializing
SpEL infrastructure.  A typical use case is
optimizing GraalVM native image footprint for
applications not using SpEL. In order to be
effective, those classes should be initialized at
build time:  - org.springframework.context.support
.AbstractApplicationContext -
org.springframework.core.SpringProperties - org.sp
ringframework.context.event.EventListenerMethodPro
cessor  Closes gh-25153
",552816,7349,346977,"Sébastien Deleuze","sdeleuze@vmware.com","Sébastien Deleuze","sdeleuze@vmware.com"
"629","spring-projects/spring-framework","3a653bd35fa70c96aa9cf4cc52bfe928bbed7ff2",2,"2020-06-19 19:19:14+02:00","Deprecate JCA CCI support  Closes gh-25287
",552899,7349,347098,"Juergen Hoeller","hoellerj@vmware.com","Juergen Hoeller","hoellerj@vmware.com"
"630","spring-projects/spring-framework","b1da89344f3870829ad5317ce9dfbe1e1bef2d3d",1,"2020-06-19 22:01:51+01:00","MatchableHandlerMapping is backwards compatible
",552901,7349,347098,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"631","spring-projects/spring-framework","ff9daa93775961ea3c6561c760d40f43103fdbba",1,"2020-06-20 08:33:26+01:00","Adjust WebFlux behavior for @RequestPart List<T>
List<T> support was added relatively late,
incorrectly decoding each part to T which means no
way to decode a single part to List<T> and thatis
the most common case (vs multipart parts with the
same name). This behavior was further misaligned
with Spring MVC as well as with the behavior for
T[].  Closes gh-22973
",552942,7348,347115,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"632","spring-projects/spring-framework","883ad098f927760e6bd52af531d0938e0c6ab5dc",7,"2019-09-06 15:13:34+03:00","Add support for X-Forwarded-For and Forwarded for
See gh-23260, gh-23582
",553166,7348,347128,"Kirill Serebrennikov","kirill.serebrennikov@bayer.com","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"633","spring-projects/spring-framework","d627f6049e9d1c48b9b3d7979f58357b2611b983",3,"2020-06-20 10:47:02+01:00","Update ""Forwarded: for"" contribution  Closes
gh-23582
",553109,7348,347130,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"634","spring-projects/spring-framework","d0209e5f1f4d25da1dcf089d7feec242b1d451ad",10,"2020-06-23 16:55:09+02:00","Nullability refinements and related polishing
",553253,7351,347171,"Juergen Hoeller","hoellerj@vmware.com","Juergen Hoeller","hoellerj@vmware.com"
"635","spring-projects/spring-framework","973ee9b8522790cc6c6da7190daca85f750f520f",5,"2020-05-28 16:22:09+02:00","(Re)introduce DefaultMultipartMessageReader  This
commit introduces the
DefaultMultipartMessageReader, a fully reactive
multipart parser without third party dependencies.
An earlier version of this code was introduced in
fb642ce, but removed again in 77c24aa because of
buffering issues.  Closes gh-21659
",554501,7357,347583,"Arjen Poutsma","apoutsma@pivotal.io","Arjen Poutsma","apoutsma@pivotal.io"
"636","spring-projects/spring-framework","b33d2fe683967081527c8114351f2b1493e90d3c",18,"2020-06-24 14:31:57+02:00","Clean up warnings in Gradle build, polishing, etc.
",554464,7357,347582,"Sam Brannen","sbrannen@vmware.com","Sam Brannen","sbrannen@vmware.com"
"637","spring-projects/spring-framework","b16f6fa4564658615363f9206edf726a492b6083",3,"2020-06-24 16:12:34+01:00","Shared static instance of DefaultDataBufferFactory
",554401,7357,347586,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"638","spring-projects/spring-framework","34607d96f1f40efae1dc83274c8b4d8eb632b790",3,"2020-07-06 15:31:12+03:00","PathPattern caching with
HandlerMappingIntrospector  This commit evolves
the solution from M1 by parsing and caching
patterns with the target HandlerMapping's
PathPatternParser. This makes it unnecessary for
callers to be aware of pattern parsing.  Closes
gh-25312
",554802,7361,347707,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"639","spring-projects/spring-framework","1181bb1852634a69e1cf34d1ed46f4bd44a2aca7",2,"2020-07-07 17:43:06+03:00","Rename originsPattern to originPatterns  See
gh-25016
",555076,7361,347739,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"640","spring-projects/spring-framework","0e4e25d227dedd1a3ecddc4e40c263f190ca1c2b",3,"2020-07-08 13:18:11+03:00","Updates to CORS patterns contribution  Closes
gh-25016
",555186,7361,347745,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"641","spring-projects/spring-framework","0584c289abaf850993bb69501772823296ea2f54",5,"2020-07-09 11:26:04+03:00","Support for direct path lookups in WebFlux  Closes
gh-22961
",555248,7361,347757,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"642","spring-projects/spring-framework","37366e0c911b6b8e7f8b47c3e291404df2e53ff6",2,"2020-07-09 15:06:33+03:00","Support for custom status in
ResponseStatusException  Closes gh-20336
",555252,7361,347782,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"643","spring-projects/spring-framework","313a7836b091d20dbb9763b3677d559fea32d13d",3,"2020-07-09 15:42:28+03:00","Provide access to Netty's WebSocketFrame  Closes
gh-25099
",555261,7361,347799,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"644","spring-projects/spring-framework","7c982511426eebea3d34730ab128bb39a55a9de6",2,"2020-07-14 12:07:59+03:00","Support for making requests via RSocketClient
Closes gh-25332
",555337,7361,347868,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"645","spring-projects/spring-framework","524ca1a6767a8912e1a4c58c797e5099794b442b",1,"2020-07-09 00:04:09+02:00","DefaultSubscriptionRegistry: Reduced thread
contention * DestinationCache is now synchronized
on multiple 'destination' locks  (previously a
single shared lock) * DestinationCache keeps
destinations without any subscriptions
(previously such destinations were recomputed over
and over) * SessionSubscriptionRegistry is now a
'sessionId -> subscriptionId ->
(destination,selector)' map  for faster lookups
(previously 'sessionId -> destination -> set of
(subscriptionId,selector)')  closes gh-24395
",555471,7362,347880,"Tomas Drabek","drabek.tomas@ifortuna.cz","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"646","spring-projects/spring-framework","44f1f94f9785f86dbd40fd49012aab42261739aa",7,"2020-07-15 22:44:12+03:00","Polishing contribution  Renaming, trimming of
method parameters, minor refactoring of helper
methods, comments, etc. Completely functionally
neutral.  See gh-25298
",555463,7362,347883,"Rossen Stoyanchev","rstoyanchev@pivotal.io","Rossen Stoyanchev","rstoyanchev@pivotal.io"
"647","spring-projects/spring-framework","111899aa63e3c90c4023b5f98969281282536ac9",1,"2020-07-16 17:32:16+02:00","Add @Nullable declaration to
getDefaultConstructor()  See gh-25367
",555465,7362,347885,"Sam Brannen","sbrannen@vmware.com","Sam Brannen","sbrannen@vmware.com"
"648","spring-projects/spring-framework","165a6f186d64ef1d51a3c0f4954a6d5fe6700e4d",1,"2020-07-19 19:53:01+02:00","Expose setExceptionListener on
AbstractJmsListenerContainerFactory  Closes
gh-22102
",542993,7230,341075,"Juergen Hoeller","hoellerj@vmware.com","Juergen Hoeller","hoellerj@vmware.com"
"649","spring-projects/spring-framework","913eca9e141b9c58c2c175dc822ceab624a96f0b",1,"2020-07-20 17:52:29+03:00","ReactorNettyRequestUpgradeStrategy uses unique
builder per request  See gh-25315
",543018,7231,341097,"Rossen Stoyanchev","rstoyanchev@vmware.com","Rossen Stoyanchev","rstoyanchev@vmware.com"
"650","spring-projects/spring-framework","e71f702bb906abeebd0213a047e9f9ecf6088c5f",1,"2020-07-22 00:26:28+08:00","Use `static private` instead of `private static`
for method declarations  Closes gh-25452
",555516,7363,347934,"XenoAmess","xenoamess@gmail.com","GitHub","noreply@github.com"
"651","spring-projects/spring-framework","9fe1feea9a91c5826c07be8fa2f00edb6b5c5107",3,"2020-07-22 14:57:33+03:00","Provide access to underlying RSocketClient  The
recently introduced support for RSocketClient in
commit 7c982511426eebea3d34730ab128bb39a55a9de6
did not expose the underlying client in order to
avoid a hard dependency on RSocket 1.1 for the
time being. However such access appears to be
necessary, e.g. for Spring Integration, where the
connection needs to be established (warmed up)
ahead of actual requests.  See gh-25332
",555438,7363,347930,"Rossen Stoyanchev","rstoyanchev@vmware.com","Rossen Stoyanchev","rstoyanchev@vmware.com"
"652","spring-projects/spring-framework","9301d7a29451c9458a070bdfa7b0f466859282ac",5,"2020-07-27 15:08:01+02:00","Add application startup metrics support  This
commit adds a new `StartupStep` interface and its
factory `ApplicationStartup`. Such steps are
created, tagged with metadata and thir execution
time can be recorded - in order to collect metrics
about the application startup.  The default
implementation is a ""no-op"" variant and has no
side-effect. Other implementations can record and
collect events in a dedicated metrics system or
profiling tools. We provide here an implementation
for recording and storing steps with Java Flight
Recorder.  This commit also instruments the Spring
application context to gather metrics about
various phases of the application context, such
as:  * context refresh phase * bean definition
registry post-processing * bean factory post-
processing * beans instantiation and post-
processing  Third part libraries involved in the
Spring application context can reuse the same
infrastructure to record similar metrics.  Closes
gh-24878
",555842,7372,348223,"Brian Clozel","bclozel@vmware.com","Brian Clozel","bclozel@vmware.com"
"653","eclipse/deeplearning4j","b5f0ec072f3fd0da566e32f82c0e43ca36553f39",1689,"2019-06-06 15:21:15+03:00","Eclipse Migration Initial Commit
",441974,5152,207612,"skymindops","34909009+skymindops@users.noreply.github.com","skymindops","34909009+skymindops@users.noreply.github.com"
"654","eclipse/deeplearning4j","68ea5f3688be9045cac3c06b1828b21262b22903",12,"2019-06-15 21:34:34+10:00","Dev branch merge: dev_20190606 (#7904)  * correct
logsoftmax looss (#2)    * Small SameDiff listener
fix (#4)    * Various fixes (#6)    * #7839 Fix
for asXMatrix and tests    * #7866
EmbeddingSequenceLayer dtype fix + test    * #7856
SameDiff save/load stream methods    * #7859
RegressionEvaluation rank 4 fix + tests + axis
configuration    * EvaluationBinary 3d/4d    *
More evaluation 3d/4d tests    * #7847 Evaluation
empty checks    * Small test ifx    * #7848 Fix
median edge case    * Improve DL4J samediff layer
tests    * [WIP] FastText wrapper implemented (#8)
* FastText implemented    * Some fixes    * Fix
shapes for wordsNearest    * Validation of input
vectors    * Fixes    * Fixed test    * Thread
tagged    * Some tweaks    * setContextClassLoader
for DeallocatorServiceThread    * Numpy format
tests (#1)    * Various fixes (#11)    * #7852
SameDiff gather fix    * #7892 SameDiff
placeholder to constant conversion    * #7890
validate input rank for MLN/CG init methods    *
Fix broken permute shape calculation    * Permute
and gather fixes    * Tests    * #7850 LogSumExp
fix + test    * Handful of test fixes    * Empty
arrays with non-scalar shapes (#10)    * minor
rearrangements for lambdas    * empty tensors with
non-scalar shapes    * numpy empty tensors with
non-scalar shapes    * few more empty tweaks    *
Small fixes    * conv3d signature update    *
micro fix in batchnorm mkldnn    * Import fixes
* Fix    * MKL-DNN update    * Small fill fix    *
fill with empty input + test    * Fixes    * Small
error improvement    * Fix    * one special test
* couple of fixes for lstm    * Rewrite
TFGraphMapper.getNDArrayFromTensor to be
maintainable and less error prone    * Fixes    *
FP16    * Unsigned    * BFloat16    * Fill op -
empty tweaks    * - couple of fixes for empty
arrays construction  - stack updated    * strided
slice fix    * one transform test    * provide
method for reducing shapeInfo in case of input
array is empty    * Fixed reduceAlongDimensions to
use empty input properly.    * couple of broadcast
tests    * couple of tests broadcast tests + tweak
to make them pass    * add check of non-empty to
methods producing sub-arrays    * Fixed reshapeC
with zeros in shape.    * complete empty check in
reduce_... legacy ops    * Concat and cumsum/prod
* Tweak to empty shape inference on import    *
add empty check to the rest of reduce legacy ops
* one more test    * correct typo in
evalReduceShapeInfoEmpty    * Added tests for
reduce_* ops to tests with zero shapes.    * few
more tests for empty reductions    * Fixed
strided_slice op with empty case and tests.    *
one more empty reduction test    * Fixed
strided_slice test.    * add empty check to
NDArray::reshapei    * infOrMax    * empty min/max
with infinity tests    * made unstack working
correctly with empty arrays    * few IndexReduce
tests + tweaks for empty shapes    * add test for
empty concat    * few tests fixed    * Validation
fix for reductions on empty shapes    * Reverse
fix    * Reduction shape calc fixes    *
SameDiff.generateOutputVariable: don't use shape
function to determine number of outputs    * Range
fix    * - NDArray constructor updated for
scalars/empty arrays  - few tests fixed    * More
fixes    * Empty creator fixes    * concat fix
* concat fix    * TF import tests: allow 'both all
NaN' and 'both all inf' to pass    * Slice, zero
fraction, and reshape fixes    * transpose, gather
* Zero fraction    * scalar cast fix    * Empty
reduction axis support    * few more tests fixed
* Fixed input checks conforming with TF for concat
op and tests.    * few tests fixed    * matmul
scalar shape fix    * Fixed checkout for data type
and scalarity with concat to allow non-empty
scalars with vector concats.    * broadcast bool
fix    * few more tests    * few more tests    *
correct evalReduceShapeInfoEmpty    *
argmax/argmin + tests    * one more empty edge
case + one more test    * argmax/argmin/realdiv_bp
tweaks    * empty reshape test + fix    * Helper
fixes    * Small fixes    * Gather test fix    *
Gather test fix    * Small fixes    * reduce
scalar zero values    * scalar mean workaround
* Remove debug code    * along dim mean workaround
* one more test    * - equalsTo() tweak for empty
arrays  - one more test    * broadcast tweaks
",444349,5163,207906,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"655","eclipse/deeplearning4j","1170827c18005aa9dc7e6f0550964a4e4a6afcf2",8,"2019-06-28 01:37:04+10:00","Merge master to upstream (#7945)  * Shugeo strided
slice zeros (#14)    * Modified strided_slice op
to properly work with empty-like shapes.    *
Fixed test for reduce_mean with empty-like input.
* [WIP] Last merge (#15)    * correct logsoftmax
looss (#2)    * Small SameDiff listener fix (#4)
* Various fixes (#6)    * #7839 Fix for asXMatrix
and tests    * #7866 EmbeddingSequenceLayer dtype
fix + test    * #7856 SameDiff save/load stream
methods    * #7859 RegressionEvaluation rank 4 fix
+ tests + axis configuration    * EvaluationBinary
3d/4d    * More evaluation 3d/4d tests    * #7847
Evaluation empty checks    * Small test ifx    *
#7848 Fix median edge case    * Improve DL4J
samediff layer tests    * [WIP] FastText wrapper
implemented (#8)    * FastText implemented    *
Some fixes    * Fix shapes for wordsNearest    *
Validation of input vectors    * Fixes    * Fixed
test    * Thread tagged    * Some tweaks    *
setContextClassLoader for DeallocatorServiceThread
* Numpy format tests (#1)    * Various fixes (#11)
* #7852 SameDiff gather fix    * #7892 SameDiff
placeholder to constant conversion    * #7890
validate input rank for MLN/CG init methods    *
Fix broken permute shape calculation    * Permute
and gather fixes    * Tests    * #7850 LogSumExp
fix + test    * Handful of test fixes    * Empty
arrays with non-scalar shapes (#10)    * minor
rearrangements for lambdas    * empty tensors with
non-scalar shapes    * numpy empty tensors with
non-scalar shapes    * few more empty tweaks    *
Small fixes    * conv3d signature update    *
micro fix in batchnorm mkldnn    * Import fixes
* Fix    * MKL-DNN update    * Small fill fix    *
fill with empty input + test    * Fixes    * Small
error improvement    * Fix    * one special test
* couple of fixes for lstm    * Rewrite
TFGraphMapper.getNDArrayFromTensor to be
maintainable and less error prone    * Fixes    *
FP16    * Unsigned    * BFloat16    * Fill op -
empty tweaks    * - couple of fixes for empty
arrays construction  - stack updated    * strided
slice fix    * one transform test    * provide
method for reducing shapeInfo in case of input
array is empty    * Fixed reduceAlongDimensions to
use empty input properly.    * couple of broadcast
tests    * couple of tests broadcast tests + tweak
to make them pass    * add check of non-empty to
methods producing sub-arrays    * Fixed reshapeC
with zeros in shape.    * complete empty check in
reduce_... legacy ops    * Concat and cumsum/prod
* Tweak to empty shape inference on import    *
add empty check to the rest of reduce legacy ops
* one more test    * correct typo in
evalReduceShapeInfoEmpty    * Added tests for
reduce_* ops to tests with zero shapes.    * few
more tests for empty reductions    * Fixed
strided_slice op with empty case and tests.    *
one more empty reduction test    * Fixed
strided_slice test.    * add empty check to
NDArray::reshapei    * infOrMax    * empty min/max
with infinity tests    * made unstack working
correctly with empty arrays    * few IndexReduce
tests + tweaks for empty shapes    * add test for
empty concat    * few tests fixed    * Validation
fix for reductions on empty shapes    * Reverse
fix    * Reduction shape calc fixes    *
SameDiff.generateOutputVariable: don't use shape
function to determine number of outputs    * Range
fix    * - NDArray constructor updated for
scalars/empty arrays  - few tests fixed    * More
fixes    * Empty creator fixes    * concat fix
* concat fix    * TF import tests: allow 'both all
NaN' and 'both all inf' to pass    * Slice, zero
fraction, and reshape fixes    * transpose, gather
* Zero fraction    * scalar cast fix    * Empty
reduction axis support    * few more tests fixed
* Fixed input checks conforming with TF for concat
op and tests.    * few tests fixed    * matmul
scalar shape fix    * Fixed checkout for data type
and scalarity with concat to allow non-empty
scalars with vector concats.    * broadcast bool
fix    * few more tests    * few more tests    *
correct evalReduceShapeInfoEmpty    *
argmax/argmin + tests    * one more empty edge
case + one more test    * argmax/argmin/realdiv_bp
tweaks    * empty reshape test + fix    * Helper
fixes    * Small fixes    * Gather test fix    *
Gather test fix    * Small fixes    * reduce
scalar zero values    * scalar mean workaround
* Remove debug code    * along dim mean workaround
* one more test    * - equalsTo() tweak for empty
arrays  - one more test    * broadcast tweaks    *
[WIP] Fixing outstanding issues for NLP (#9)    *
Avoid using not-inited objects    * Test fixed.
* Redundant method avoided for models like
FastText    * KMeans++ implementation    *
KMeans++ implementation    * Disable parallel
execution    * KMeans++    * Tests    * Dev branch
merge (#16)    * SameDiff: convertDataType and
gradient check util improvements (#12)    *
GradCheck util improvements    * StopGradient
constructor + test    * SameDiff: Add datatype
conversion    * Javadoc and add
DataType.isNumerical()    * Small fix    * Fix
SameDiff TF import test cases intermediate naming
(workaround for bad default)    *
TFGraphTestAllHelper: check intermediates in
execution order    * Add missing debug listener
* [WIP] lstmBlock fix + other changes (#13)    -
fixes lstmBlock issue  - changes NDArray method
reshape(), permute(), transpose() by making them
return instance instead of pointer  -
CheckNumerics op  - fixes for ReduceBool
IsInfOrNan & IsFinite    * Small test fix    *
CheckNumerics op wrapper    * Fix some issues on
master (#17)    * Fix DataVec test issue    * Fix
issue with dl4j SameDiff output layer    * Dtype
fix for lambda layers    * #7912 BertIterator
dtype fix (use float32 not global default)    *
[WIP] Next set of CUDA stuff (#7)    New CUDA
implementations and improvements    * bad file
* Dev branch master merge (#23)    * SameDiff:
convertDataType and gradient check util
improvements (#12)    * GradCheck util
improvements    * StopGradient constructor + test
* SameDiff: Add datatype conversion    * Javadoc
and add DataType.isNumerical()    * Small fix    *
Fix SameDiff TF import test cases intermediate
naming (workaround for bad default)    *
TFGraphTestAllHelper: check intermediates in
execution order    * Add missing debug listener
* [WIP] lstmBlock fix + other changes (#13)    -
fixes lstmBlock issue  - changes NDArray method
reshape(), permute(), transpose() by making them
return instance instead of pointer  -
CheckNumerics op  - fixes for ReduceBool
IsInfOrNan & IsFinite    * Small test fix    *
CheckNumerics op wrapper    * Compatibility of
deserialization (#18)    Signed-off-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>    *
SameDiff: add activation gradient checking support
for debugging (#19)    * SameDiff gradient
checker: first pass on activation gradient checks
* Fixes + tests for activation gradient checking
* Javadoc    * [WIP] Some nd4j data type
corrections (#20)    * Adjust data type    * Set
correct Data type.    * Size of proper data type.
* fix averaged cpu load (#22)    * SameDiff ops,
TF import and fixes (#24)    * CheckNumerics tests
+ fixes + misc fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fake quant    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * FakeQuantWithMinMaxArgs
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* CheckNumerics fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix libnd4j ALL_INTS
and ALL_FLOATS declaration (uint and bfloat types)
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Small fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Javadoc    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    *
Exception tweak    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * fix    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Fix for out
of scope stack allocated var use    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Ignores
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Ignore for known failing test (already logged
issue)    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Merge upstream to fork
(#25)    * Add thousand-separator commas to
TotalParams (#7915)    * Add thousand-separator
commas to TotalParams    The number of parameters
can be quite large, and it would help the reading
of the summary printout to have the TotalParams
column & values at the bottom have thousand-
separator-commas in them.    * Add thousand-
separator commas to MultiLayerNetwork
Corresponding change to MultiLayerNetwork
Signed-off-by: Jxtps Jxtps <jxtps435@gmail.com>
* Update contributing and issue/PR templates
(#7934)    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix link to AdaDelta
paper (#7942)    Fix link to AdaDelta paper hosted
on matthewzeiler.com    Signed-off-by: Jxtps    *
Fixes, and ignores for known/logged failing issues
(#7943)    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * SameDiff +
DL4J/SameDiff: Multiple fixes (#28)    * #7919
HDF5 attribute buffer length fix    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #7909
Arbiter constructor exception ux improvements
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #7925 RNN output layer length checks    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
#7939 Add listener for validating inputs are not
incorrectly modified    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #7939 Integrate
NonInplaceValidationListener into tests    * #7844
DL4J SameDiff fixes for variable minibatch size
* DL4J SameDiff fixes - ensure gradient for input
placeholder is available    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Tweaks to
ExternalErrorsFunction - use placeholders, make
more robust    * Another fix    * More fixes    *
More SameDiff/DL4J fixes    * Scope out scalar
array creation in BaseScalarOp    * Remove debug
code    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * [WIP] Final dev branch
merge (#29)    * SameDiff: convertDataType and
gradient check util improvements (#12)    *
GradCheck util improvements    * StopGradient
constructor + test    * SameDiff: Add datatype
conversion    * Javadoc and add
DataType.isNumerical()    * Small fix    * Fix
SameDiff TF import test cases intermediate naming
(workaround for bad default)    *
TFGraphTestAllHelper: check intermediates in
execution order    * Add missing debug listener
* [WIP] lstmBlock fix + other changes (#13)    -
fixes lstmBlock issue  - changes NDArray method
reshape(), permute(), transpose() by making them
return instance instead of pointer  -
CheckNumerics op  - fixes for ReduceBool
IsInfOrNan & IsFinite    * Small test fix    *
CheckNumerics op wrapper    * Compatibility of
deserialization (#18)    Signed-off-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>    *
SameDiff: add activation gradient checking support
for debugging (#19)    * SameDiff gradient
checker: first pass on activation gradient checks
* Fixes + tests for activation gradient checking
* Javadoc    * [WIP] Some nd4j data type
corrections (#20)    * Adjust data type    * Set
correct Data type.    * Size of proper data type.
* fix averaged cpu load (#22)    * [WIP] Multiple
dataset iterators (#27)    * Splitting dataset
into arbitrary number    * Fixes    * Multiple
split of iterator    * Test    * Test    * Some
fixes    * signature change    * one more tweak
Signed-off-by: raver119 <raver119@gmail.com>    *
one more test for sequential use of
DataSetIteratorSplitter    Signed-off-by: raver119
<raver119@gmail.com>    * Fixes    * Fixes    *
one more test for Alexander    Signed-off-by:
raver119 <raver119@gmail.com>    * Some fixes    *
Some fixes    * one more test for Alexander
Signed-off-by: raver119 <raver119@gmail.com>    *
minor test fix    Signed-off-by: raver119
<raver119@gmail.com>    * Some fixes    * Some
fixes    * couple of assertions tweaked    Signed-
off-by: raver119 <raver119@gmail.com>    * MDS
splitter test :/    Signed-off-by: raver119
<raver119@gmail.com>    * Minor refactoring    *
Multi dataset    * Some fixes    * More tests    *
Small number of test fixes/improvements (failures
on CI) (#31)    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * [WIP] More CUDA stuff
(#26)    * initial commit    Signed-off-by:
raver119 <raver119@gmail.com>    * LRN BP CUDA
Signed-off-by: raver119 <raver119@gmail.com>    *
less memory    Signed-off-by: raver119
<raver119@gmail.com>    * Fixed bug with
crop_and_resize op helper.    * get rid of
unnecessary index-calculation dunction    Signed-
off-by: Yurii <yurii@skymind.io>    * Fixed sort
with nth_element cuda-based helper.    *
Refactored nth_element.    * Refactored
nth_element op and tests.    * Modified usage of
dim array with sortTad routine.    * Refactored
main routine of helper for
non_max_image_suppression op.    *
non_max_image_suppression op helper with cuda
kernel implementation. Initial revision.    * fix
vol2col cuda kernel    * meh    Signed-off-by:
raver119 <raver119@gmail.com>    * topK concept
Signed-off-by: raver119 <raver119@gmail.com>    *
unsorted topK with scanWitdh of 1    Signed-off-
by: raver119 <raver119@gmail.com>    * correct
vol2col tests    * sorted/unsorted topK    Signed-
off-by: raver119 <raver119@gmail.com>    *
implementation and fixing col2im/col2vol    *
Corrected usage flags with input/output with
reverse op.    * dup is const now    Signed-off-
by: raver119 <raver119@gmail.com>    * percentile
op    Signed-off-by: raver119 <raver119@gmail.com>
* group tests for mapool2d    Signed-off-by: Yurii
<yurii@skymind.io>    * special test for george
Signed-off-by: raver119 <raver119@gmail.com>    *
less threads for sortTad    Signed-off-by:
raver119 <raver119@gmail.com>    * provide conv2d
for cuda    Signed-off-by: Yurii
<yurii@skymind.io>    * remove auther in sort tad
kernel code    Signed-off-by: Yurii
<yurii@skymind.io>    * provide depthwise_conv2d
for cuda    Signed-off-by: Yurii
<yurii@skymind.io>    * - max_pooling_with_argmax
- null check for special use    Signed-off-by:
raver119 <raver119@gmail.com>    * dts cuda
Signed-off-by: raver119 <raver119@gmail.com>    *
provide sconv2d for cuda    Signed-off-by: Yurii
<yurii@skymind.io>    * std cuda    Signed-off-by:
raver119 <raver119@gmail.com>    * Refactored
non_max_suppression op to conform TF
implementation.    * Improved suppression helper.
* provide pooling3d for cuda    Signed-off-by:
Yurii <yurii@skymind.io>    * minor lstm
rearrangements    Signed-off-by: raver119
<raver119@gmail.com>    * more of minor lstm
rearrangements    Signed-off-by: raver119
<raver119@gmail.com>    * (bi)dynamic_rnn
Signed-off-by: raver119 <raver119@gmail.com>    *
templates init order    Signed-off-by: raver119
<raver119@gmail.com>    * Refactored
non_max_suppression op.    * Added cuda kernel for
non_max_suppression.    * CPU sort by key/value
Signed-off-by: raver119 <raver119@gmail.com>    *
CPU sort TAD by key/value    Signed-off-by:
raver119 <raver119@gmail.com>    * CPU sort TAD by
key/value tests    Signed-off-by: raver119
<raver119@gmail.com>    * Eliminate compiler error
with cuda implementation.    * - repaired
gradCheck in cuda  - provide conv2d_bp for cuda
Signed-off-by: Yurii <yurii@skymind.io>    *
missed signature    Signed-off-by: raver119
<raver119@gmail.com>    * provide
depthwise_conv2d_bp for cuda    Signed-off-by:
Yurii <yurii@skymind.io>    * Implementation of
lup helper with cuda kernel. Initial commit.    *
further work on backprops for convolutions
Signed-off-by: Yurii <yurii@skymind.io>    * CUDA
linear sort by key/val    Signed-off-by: raver119
<raver119@gmail.com>    * CUDA tad sort by key/val
Signed-off-by: raver119 <raver119@gmail.com>    *
start providing of backprop for pooling2d/3d
Signed-off-by: Yurii <yurii@skymind.io>    * Added
atomicAdd for bool datatype.    * dynamic
partition concept    Signed-off-by: raver119
<raver119@gmail.com>    * dynamic partition
concept    Signed-off-by: raver119
<raver119@gmail.com>    * dynamic partition scalar
CUDA    Signed-off-by: raver119
<raver119@gmail.com>    * important comment
Signed-off-by: raver119 <raver119@gmail.com>    *
fix pooling2d/3d backprop helpers    Signed-off-
by: Yurii <yurii@skymind.io>    * Added non-linear
test with dynamic_partition.    * Improved test
for dynamic_partition.    * dynamic_partition TAD
concept    Signed-off-by: raver119
<raver119@gmail.com>    * - dynamic_partition TAD
CUDA impl  - dynamic_partition TAD CPU fix
Signed-off-by: raver119 <raver119@gmail.com>    *
- rewrite cpu code for usampling2d/3d  - write
cuda code for usampling2d/3d    Signed-off-by:
Yurii <yurii@skymind.io>    * dynamic_stitch CUDA
vector case    Signed-off-by: raver119
<raver119@gmail.com>    * dynamic_stitch CUDA TAD
case concept    Signed-off-by: raver119
<raver119@gmail.com>    * dynamic_stitch CUDA TAD
case impl    Signed-off-by: raver119
<raver119@gmail.com>    * Added tests for
dynamic_stitch 3D-4D cases.    * minor tests
tweaks    Signed-off-by: raver119
<raver119@gmail.com>    * Fixed type check for
dynamic stitch.    * min/max bp    Signed-off-by:
raver119 <raver119@gmail.com>    * rewrite code
for upsampling2d/3d cpu    Signed-off-by: Yurii
<yurii@skymind.io>    * reduce min/max/norm_max bp
Signed-off-by: raver119 <raver119@gmail.com>    *
lup implementation. Additional enhancements.    *
provide code for upsamling2d/3d backprop
Signed-off-by: Yurii <yurii@skymind.io>    *
weightedCrossEntropyWithLogits    Signed-off-by:
raver119 <raver119@gmail.com>    * Fixed template
math atomicMul for 64bit ints.    * Refactored
dynamic_partition_bp op.    * inverseBroadcast fix
Signed-off-by: raver119 <raver119@gmail.com>    *
DynamicPartitionBP test datatype fixed.    * -
nd4j_atomicMul Windows fix  -
cpu/NDArrayLambda.hpp excluded from CUDA
Signed-off-by: raver119 <raver119@gmail.com>
",446564,5176,208176,"Alex Black","blacka101@gmail.com","raver119","raver119@gmail.com"
"656","eclipse/deeplearning4j","cc6063402ebac85ae9ca70d9b5b141df7de2376f",2,"2019-06-27 17:39:07-07:00","added keepDims to INDArray methods (#33)  Signed-
off-by: Ryan Nett <rnett@skymind.io>
",447367,5194,209251,"Ryan Nett","rnett@calpoly.edu","AlexDBlack","blacka101@gmail.com"
"657","eclipse/deeplearning4j","c28372cb490a80a613e7258a977b63a5488f494c",2,"2019-06-28 21:53:05+10:00","BERT tokenization fixes (#35)  * Add composite
token preprocessor    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix case issue with
bert tokenization   Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",447422,5195,209261,"Alex Black","blacka101@gmail.com","AlexDBlack","blacka101@gmail.com"
"658","eclipse/deeplearning4j","ef8cb55b7b2db7c2e5ec2c4c37cc622e7838fe40",71,"2019-07-01 19:50:33-07:00","Nd4j: Change array args to vararg and add toString
options (#36)  * changed [] to ...  Signed-off-by:
Ryan Nett <rnett@skymind.io>  * added randn(long
seed, int... shape)  Signed-off-by: Ryan Nett
<rnett@skymind.io>  * Fixed a couple of methods
Signed-off-by: Ryan Nett <rnett@skymind.io>  *
ToString methods w/ options  Signed-off-by: Ryan
Nett <rnett@skymind.io>  * fixes, less toString
methods, and a few ops I missed  Signed-off-by:
Ryan Nett <rnett@skymind.io>  * some javadocs,
change int... to long... where possible  Signed-
off-by: Ryan Nett <rnett@skymind.io>  * another
javadoc  Signed-off-by: Ryan Nett
<rnett@skymind.io>  * javadoc fix  Signed-off-by:
Ryan Nett <rnett@skymind.io>  * just javadoc in
INDArray  Signed-off-by: Ryan Nett
<rnett@skymind.io>  * local/static fix  Signed-
off-by: Ryan Nett <rnett@skymind.io>  * Add
@NonNull to options  Signed-off-by: Ryan Nett
<rnett@skymind.io>  * javadoc updates/fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>  *
more @NonNulls  Signed-off-by: Ryan Nett
<rnett@skymind.io>  * even more @NonNulls, this
time on varargs  Signed-off-by: Ryan Nett
<rnett@skymind.io>
",447569,5196,209320,"Ryan Nett","rnett@skymind.io","AlexDBlack","blacka101@gmail.com"
"659","eclipse/deeplearning4j","5708fc087a5db85b5d36aac70833710f0413daf5",3,"2019-07-10 14:32:12+03:00","[WIP] INDArray hashCode() impl (#50)  * initial
commit    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * one more initial commit
Signed-off-by: raver119 <raver119@gmail.com>    *
parallel hashCode prototype    Signed-off-by:
raver119 <raver119@gmail.com>    * longBytes for
hashCode    Signed-off-by: raver119
<raver119@gmail.com>    * INDArray hashCode java
side    Signed-off-by: raver119
<raver119@gmail.com>    * few tests fixed for MSVC
Signed-off-by: raver119 <raver119@gmail.com>    *
Small gradcheck validation util fix - hash names
not SDVariables    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Small fix + ignore for
logged issue    Signed-off-by: Alex Black
<blacka101@gmail.com>    * - scrollable iterator
fix  - sptree hashset replaced with collection
Signed-off-by: raver119 <raver119@gmail.com>    *
hashcode exception removed    * int hashCode for
java
",448135,5202,209470,"raver119","raver119@gmail.com","AlexDBlack","blacka101@gmail.com"
"660","eclipse/deeplearning4j","daf3950d8d02d2c13de59aafdc377ac32e4e01f7",6,"2019-07-11 21:08:15-07:00","SameDiff If, While, and Misc changes (#52)  *
softmax and logSoftmax w/ dimension    Signed-off-
by: Ryan Nett <rnett@skymind.io>    * start of
while    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * if, start of javadocs
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
while foreward pass working, backprop WIP
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
no backprop    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * Tensorflow style if/while
(& tests), name scope fixes (and test), argument
interceptor (for if/while), use '_' in op names
instead of ':'    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * javadoc    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * many fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
many fixes    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * Some fixes    Signed-off-
by: Ryan Nett <rnett@skymind.io>    * cleanup if
condition doesn't return boolean    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * serialization
fix    Signed-off-by: Ryan Nett <rnett@skymind.io>
* use constants instead of magic numbers
Signed-off-by: Ryan Nett <rnett@skymind.io>
",448934,5206,209720,"Ryan Nett","rnett@skymind.io","AlexDBlack","blacka101@gmail.com"
"661","eclipse/deeplearning4j","6ce458e949798561debcc94805bf03d0013f5c24",1,"2019-07-12 20:39:54+03:00","[WIP] CUDA Java side (#58)  * one crashing test
Signed-off-by: raver119 <raver119@gmail.com>    *
stupid issue fixed    Signed-off-by: raver119
<raver119@gmail.com>    * one fix    Signed-off-
by: raver119 <raver119@gmail.com>    * dont ensure
location for empty arrays    Signed-off-by:
raver119 <raver119@gmail.com>    * few more
signatures fixed    Signed-off-by: raver119
<raver119@gmail.com>    * few tweaks for
DataBuffer creation from java primitives
Signed-off-by: raver119 <raver119@gmail.com>    *
get rid of legacy im2col/col2im intercept
Signed-off-by: raver119 <raver119@gmail.com>    *
rsubi scalar array fix    Signed-off-by: raver119
<raver119@gmail.com>
",449237,5206,209546,"raver119","raver119@gmail.com","AlexDBlack","blacka101@gmail.com"
"662","eclipse/deeplearning4j","5cf6859fc4ca6485830dd9e5869664dd67a33668",1,"2019-07-16 12:36:12+10:00","Add SequenceTrimToLengthTransform (#61)  Signed-
off-by: AlexDBlack <blacka101@gmail.com>
",449263,5205,209511,"Alex Black","blacka101@gmail.com","AlexDBlack","blacka101@gmail.com"
"663","eclipse/deeplearning4j","c499dc962f95f6426c89204c882640c53a3fc6b8",1,"2019-07-17 15:19:38+03:00","- numpy import fix for CUDA (#64)  - skip
tagLocation for empty arrays    Signed-off-by:
raver119 <raver119@gmail.com>
",449007,5204,209440,"raver119","raver119@gmail.com","AlexDBlack","blacka101@gmail.com"
"664","eclipse/deeplearning4j","fad8da878f0a8349050420d5fa280bb5cc4399d4",2,"2019-07-26 00:05:24+10:00","Various DL4J/ND4J fixes (#81)  * #7954 Force
refresh of UI when switching tabs on overview page
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8017 Concurrent modification exception
(synchronize) fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8033 Don't initialize
updater in middle of writing memory crash dump
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8208 Fix shape checks for ND4J int[] creator
methods    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #6385 #7992 Keras
import naming fixes + cleanup    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8016
Upsampling3D - add NDHWC format support    Signed-
off-by: AlexDBlack <blacka101@gmail.com>
",449996,5225,209543,"Alex Black","blacka101@gmail.com","AlexDBlack","blacka101@gmail.com"
"665","eclipse/deeplearning4j","923ab155837bdbd70973db5fc70362b4cbae3e60",1,"2019-08-05 10:57:01+10:00","Small number of fixes (#98)  * Remove no longer
functioning LegacyPooling2D class    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    * Fix
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8066 First steps for reflection scanning -
INDArray constructors    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Small build fix for
ND4S    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * More nd4s fixes
Signed-off-by: AlexDBlack <blacka101@gmail.com>
",450101,5235,210026,"Alex Black","blacka101@gmail.com","AlexDBlack","blacka101@gmail.com"
"666","eclipse/deeplearning4j","b8846113bdc522c836bb7fedf3138ebbc270d1bc",18,"2019-08-05 22:31:46+10:00","Small number of fixes + cleanup + some missing op
methods + constructors (#100)  * Remove unused op
class - DefaultOpConverter    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Add SDImage
class; INDArray constructor additions    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Floordiv    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Small polish to image
methods    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Small DataVec test fix
Signed-off-by: AlexDBlack <blacka101@gmail.com>
",450171,5235,210047,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"667","eclipse/deeplearning4j","f8615e0ef0c71c2a9493c20cc1dea925ef39951c",2,"2019-08-07 19:31:48+09:00","nd4j refactoring. (#103)  Restored writeTxt per
slack DM.
",450113,5235,209925,"Robert Altena","Rob@ra-ai.com","GitHub","noreply@github.com"
"668","eclipse/deeplearning4j","11bddb3825ce84f30c27154599635b14bf1d3116",142,"2019-08-09 22:30:31-07:00","SameDiff: Listener changes and training api update
(#99)  * example api    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * Lambda based evaluation
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
lambda test    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * fixes    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * partial fixes,
use get-variable listener framework, example
EvaluationListener    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * javadoc fix and
newInstance implementations    Signed-off-by: Ryan
Nett <rnett@skymind.io>    * fit and evaluate
methods with validation data (for fit) and
listeners    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * output method overloads +
listener args    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * history and evaluation
helpers    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * fixes    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * more fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
FitConfig and added getters and setters    Signed-
off-by: Ryan Nett <rnett@skymind.io>    * javadocs
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
fixes, javadoc, added activations to history,
added latest activation listener    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * fixes, start of
tests    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * fixes and updates
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
newInstance fixes, tests    Signed-off-by: Ryan
Nett <rnett@skymind.io>    * test fixes    Signed-
off-by: Ryan Nett <rnett@skymind.io>    *
javadocs, getters with SDVariable overrides,
CustomEvaluation fix    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * more operation config
classes (evaluation, output, exec/single batch
output), fix custom eval tests    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * merge fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
fix    Signed-off-by: Ryan Nett <rnett@skymind.io>
* fixes, most old fit/evaluate/output methods use
the builders    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * fixes    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * numerous
fixes/cleanup    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * fixes    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * javadoc
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
Polish round 1    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Round 2    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    *
Formatting + round 3    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Round 4    Signed-off-
by: AlexDBlack <blacka101@gmail.com>
",451935,5256,211427,"Ryan Nett","rnett@skymind.io","Alex Black","blacka101@gmail.com"
"669","eclipse/deeplearning4j","c29c011d1a74f9c0c6f67759a991b5734eb08790",2,"2019-08-13 10:30:45+09:00","Nd4j refactoring (#109)  * refactoring.    Signed-
off-by: Robert Altena <Rob@Ra-ai.com>    * wip
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
wip    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * wip    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * review feedback    Signed-
off-by: Robert Altena <Rob@Ra-ai.com>
",451922,5256,211402,"Robert Altena","Rob@ra-ai.com","Alex Black","blacka101@gmail.com"
"670","eclipse/deeplearning4j","ec847e034b337640d0dab76ab4ef71c46eb36009",37,"2019-08-14 12:11:09+03:00","[WIP] Remote inference (#96)  * fix pad javadoc
and @see links. (#72)    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * [WIP] More fixes (#73)
* special tests for
ConstantTadHelper/ConstantShapeHelper    Signed-
off-by: raver119 <raver119@gmail.com>    * release
methods for data buffers    Signed-off-by:
raver119 <raver119@gmail.com>    * delete
temporary buffer Java side    Signed-off-by:
raver119 <raver119@gmail.com>    * delete
temporary buffer Java side    Signed-off-by:
raver119 <raver119@gmail.com>    * delete
temporary TadPack C++/Java side (#74)    Signed-
off-by: raver119 <raver119@gmail.com>    * Zoo
model TF import test updates (#75)    * argLine
fix, update compression_gru comment    * updated
comment for xception    * undid but commented
argLine change    * updated xlnet comment    *
copyright headers    * - new NDArray methods
like()/ulike() (#77)    - fix for
depthwise_conv2d_bp + special test    Signed-off-
by: raver119 <raver119@gmail.com>    *
upsampling2d fix CUDA    Signed-off-by: raver119
<raver119@gmail.com>    * DL4J trace logging (#79)
* MLN/CG trace logging for debugging    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    * Tiny
tweak    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * strided_slice_bp shape
fn leak fix    Signed-off-by: raver119
<raver119@gmail.com>    * SameDiff fixes and
naming (#78)    * remove SDVariable inplace
methods    * import methods    * npe fix in OpVal
* removed SameDiff inplace ops from tests    *
Naming updates, moved to centralized methods in
SameDiff, should use op_#:# for everything    *
quick fixes    * javadoc    * SDVariable eval with
placeholders    * use regex match    * better
matching    * fix javadoc. (#76)    * fix javadoc.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
replace most @see with @link s.    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * 4 additional
tests    Signed-off-by: raver119
<raver119@gmail.com>    * Various DL4J/ND4J fixes
(#81)    * #7954 Force refresh of UI when
switching tabs on overview page    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8017
Concurrent modification exception (synchronize)
fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8033 Don't initialize
updater in middle of writing memory crash dump
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8208 Fix shape checks for ND4J int[] creator
methods    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #6385 #7992 Keras
import naming fixes + cleanup    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8016
Upsampling3D - add NDHWC format support    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Refactor NativeOps.h to export C functions    *
Actually export functions from NativeOps.h    *
Adapt the Java wrappers in ND4J generated with
JavaCPP    * Create C wrappers for some of the C++
classes currently used by ND4J    * remove
duplicate code in createBufferDetached. (#83)
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
Keras model import - updater lr fix (#84)    *
Keras model import - updater lr fix    Signed-off-
by: eraly <susan.eraly@gmail.com>    * Keras model
import - updater lr fix, cleanup    Signed-off-by:
eraly <susan.eraly@gmail.com>    * Fix functions
of OpaqueVariablesSet    * SameDiff Convolution
Config validation, better output methods (#82)
* Conv Config validation & tests    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * stackOutputs
utility method    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * use constructor for
validation, support negative kernel sizes (infered
from weights)    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * better output methods
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
move output to be with fit and evaluate    Signed-
off-by: Ryan Nett <rnett@skymind.io>    * fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
more fixes    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * refactor duplicate code
from pad methods. (#86)    * refactor duplicate
code from pad methods.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * replace switch with
if.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * Various ND4J/DL4J fixes and
improvements (#87)    * Reshape and reallocate -
small fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Reshape and reallocate
- small fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #6488 ElementWiseVertex
broadcast support    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Constructors and
broadcast supported it Transforms.max/min
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8054 ElementWiseVertex now supports broadcast
inputs    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8057 Nd4j.create
overload dtype fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #7551 ND4J Shape
validation fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * [WIP] Numpy boolean
import (#91)    * numpy bool type    Signed-off-
by: raver119 <raver119@gmail.com>    * numpy bool
java side    Signed-off-by: raver119
<raver119@gmail.com>    * remove create method
with unused parameter. (#89)    * remove create
method with unused parameter.    * removed more
unused methods.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * removing more unused code.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
last removal of unused code.    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * remove
createSparse methods. (#92)    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * Various
ND4J/DL4J fixes (#90)    * Deprecate Old*Op
instances    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8063 #8054 Broadcast
exceptions + cleanup inplace ops    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Small fix
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Remove bad test condition    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #7993 Fix
shape function issue in crop_and_resize op
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* DL4J SameDiff lambda layer fix    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8029 Fix
for pnorm backprop math    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8038 Fix Op
profiler NaN/Inf triggering + add tests (#93)
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* createUninitializedDetached refactoring. (#94)
* wip    * update interface, add null
implementations.    * Breaking one test in a weird
way.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * createUninitializedDetached
refactored.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * cuda build fix for issues
introduced by recent refactoring    Signed-off-by:
raver119 <raver119@gmail.com>    * initial commit
Signed-off-by: raver119 <raver119@gmail.com>    *
deps tweaks    Signed-off-by: raver119
<raver119@gmail.com>    * initial prototype
Signed-off-by: raver119 <raver119@gmail.com>    *
modules reorganized    Signed-off-by: raver119
<raver119@gmail.com>    * gprc module moved to
nd4j-remote as well    Signed-off-by: raver119
<raver119@gmail.com>    * gprc module moved to
nd4j-remote as well    Signed-off-by: raver119
<raver119@gmail.com>    * serving prototype
Signed-off-by: raver119 <raver119@gmail.com>    *
serving prototype    Signed-off-by: raver119
<raver119@gmail.com>    * serving prototype
Signed-off-by: raver119 <raver119@gmail.com>    *
serving prototype    Signed-off-by: raver119
<raver119@gmail.com>    * [WIP] More of CUDA (#95)
* initial commit    Signed-off-by: raver119
<raver119@gmail.com>    * Implementation of
hashcode cuda helper. Working edition.    * Fixed
parallel test input arangements.    * Fixed tests
for hashcode op.    * Fixed shape calculation for
image:crop_and_resize op and test.    * NativeOps
tests. Initial test suite.    * Added tests for
indexReduce methods.    * Added test on
execBroadcast with NDArray as dimensions.    *
Added test on execBroadcastBool with NDArray as
dimensions.    * Added tests on
execPairwiseTransform and
execPairwiseTransofrmBool.    * Added tests for
execReduce with scalar results.    * Added reduce
tests for non-empty dims array.    * Added tests
for reduce3.    * Added tests for execScalar.    *
Added tests for execSummaryStats.    * - provide
cpu/cuda code for batch_to_space  - testing it
Signed-off-by: Yurii <yurii@skymind.io>    * -
remove old test for batch_to_space (had wrong
format and numbers were not checked)    Signed-
off-by: Yurii <yurii@skymind.io>    * Fixed
complilation errors with test.    * Added test for
execTransformFloat.    * Added test for
execTransformSame.    * Added test for
execTransformBool.    * Added test for
execTransformStrict.    * Added tests for
execScalar/execScalarBool with TADs.    * Added
test for flatten.    * - provide cpu/cuda code for
space_to_Batch operaion    Signed-off-by: Yurii
<yurii@skymind.io>    * Added test for concat.
* comment unnecessary stuff in s_t_b    Signed-
off-by: Yurii <yurii@skymind.io>    * Added test
for specialConcat.    * Added tests for memcpy/set
routines.    * Fixed pullRow cuda test.    * Added
pullRow test.    * Added average test.    * -
correct typo in NDArray::applyPairwiseTransform(nd
4j::pairwise::BoolOps op...)    Signed-off-by:
Yurii <yurii@skymind.io>    * - debugging and
fixing cuda tests in JavaInteropTests file
Signed-off-by: Yurii <yurii@skymind.io>    * -
correct some tests    Signed-off-by: Yurii
<yurii@skymind.io>    * Added test for shuffle.
* Fixed ops declarations.    * Restored omp and
added shuffle test.    * Added convertTypes test.
* Added tests for execRandom. Eliminated usage of
RandomBuffer with NativeOps.    * Added sort
tests.    * Added tests for execCustomOp.    * -
further debuging and fixing tests terminated with
crash    Signed-off-by: Yurii <yurii@skymind.io>
* Added tests for calculateOutputShapes.    *
Addded Benchmarks test.    * Commented benchmark
tests.    * change assertion    Signed-off-by:
raver119 <raver119@gmail.com>    * Added tests for
apply_sgd op. Added cpu helper for that op.    *
Implement cuda helper for aplly_sgd op. Fixed
tests for NativeOps.    * Added test for assign
broadcastable.    * Added tests for assign_bp op.
* Added tests for axpy op.    * -
assign/execScalar/execTransformAny signature
change  - minor test fix    Signed-off-by:
raver119 <raver119@gmail.com>    * Fixed axpy op.
* meh    Signed-off-by: raver119
<raver119@gmail.com>    * - fix tests for
nativeOps::concat    Signed-off-by: Yurii
<yurii@skymind.io>    * sequential
transform/scalar    Signed-off-by: raver119
<raver119@gmail.com>    * allow nested parallelism
Signed-off-by: raver119 <raver119@gmail.com>    *
assign_bp leak fix    Signed-off-by: raver119
<raver119@gmail.com>    * block setRNG fix
Signed-off-by: raver119 <raver119@gmail.com>    *
enable parallelism by default    Signed-off-by:
raver119 <raver119@gmail.com>    * enable nested
parallelism by default    Signed-off-by: raver119
<raver119@gmail.com>    * Added cuda
implementation for row_count helper.    * Added
implementation for tnse gains op helper.    * -
take into account possible situations when input
arrays are empty in reduce_ cuda stuff    Signed-
off-by: Yurii <yurii@skymind.io>    * Implemented
tsne/edge_forces op cuda-based helper.
Parallelized cpu-based helper for edge_forces.
* Added kernel for tsne/symmetrized op heleper.
* Implementation of tsne/symmetrized op cuda
helper. Working edition.    * Eliminated waste
printfs.    * Added test for broadcastgradientargs
op.    * host-only fallback for empty reduce float
Signed-off-by: raver119 <raver119@gmail.com>    *
- some tests fixes    Signed-off-by: Yurii
<yurii@skymind.io>    * - correct the rest of
reduce_ stuff    Signed-off-by: Yurii
<yurii@skymind.io>    * - further correction of
reduce_ stuff    Signed-off-by: Yurii
<yurii@skymind.io>    * Added test for Cbow op.
Also added cuda implementation for cbow helpers.
* - improve code of stack operation for scalar
case    Signed-off-by: Yurii <yurii@skymind.io>
* - provide cuda kernel for gatherND operation
Signed-off-by: Yurii <yurii@skymind.io>    *
Implementation of cbow helpers with cuda kernels.
* minor tests tweaks    Signed-off-by: raver119
<raver119@gmail.com>    * minor tests tweaks
Signed-off-by: raver119 <raver119@gmail.com>    *
- further correction of cuda stuff    Signed-off-
by: Yurii <yurii@skymind.io>    * Implementatation
of cbow op helper with cuda kernels. Working
edition.    * Skip random testing for cudablas
case.    * lstmBlockCell context fix    Signed-
off-by: raver119 <raver119@gmail.com>    * Added
tests for ELU and ELU_BP ops.    * Added tests for
eq_scalar, gt_scalar, gte_scalar and lte_scalar
ops.    * Added tests for neq_scalar.    * Added
test for noop.    * - further work on
clipbynorm_bp    Signed-off-by: Yurii
<yurii@skymind.io>    * - get rid of concat op
call, use instead direct concat helper call
Signed-off-by: Yurii <yurii@skymind.io>    *
lstmBlockCell context fix    Signed-off-by:
raver119 <raver119@gmail.com>    * Added tests for
lrelu and lrelu_bp.    * Added tests for selu and
selu_bp.    * Fixed lrelu derivative helpers.    *
- some corrections in lstm    Signed-off-by: Yurii
<yurii@skymind.io>    * operator * result shape
fix    Signed-off-by: raver119
<raver119@gmail.com>    * - correct typo in
lstmCell    Signed-off-by: Yurii
<yurii@skymind.io>    * few tests fixed    Signed-
off-by: raver119 <raver119@gmail.com>    * CUDA
inverse broadcast bool fix    Signed-off-by:
raver119 <raver119@gmail.com>    * disable MMAP
test for CUDA    Signed-off-by: raver119
<raver119@gmail.com>    * BooleanOp syncToDevice
Signed-off-by: raver119 <raver119@gmail.com>    *
meh    Signed-off-by: raver119
<raver119@gmail.com>    * additional data types
for im2col/col2im    Signed-off-by: raver119
<raver119@gmail.com>    * Added test for
firas_sparse op.    * one more RandomBuffer test
excluded    Signed-off-by: raver119
<raver119@gmail.com>    * Added tests for flatten
op.    * Added test for Floor op.    * bunch of
tests fixed    Signed-off-by: raver119
<raver119@gmail.com>    * mmulDot tests fixed
Signed-off-by: raver119 <raver119@gmail.com>    *
more tests fixed    Signed-off-by: raver119
<raver119@gmail.com>    * Implemented floordiv_bp
op and tests.    * Fixed scalar case with cuda
implementation for bds.    * - work on cuda kernel
for clip_by_norm backprop op is completed
Signed-off-by: Yurii <yurii@skymind.io>    *
Eliminate cbow crach.    * more tests fixed
Signed-off-by: raver119 <raver119@gmail.com>    *
more tests fixed    Signed-off-by: raver119
<raver119@gmail.com>    * Eliminated abortion with
batched nlp test.    * more tests fixed    Signed-
off-by: raver119 <raver119@gmail.com>    * Fixed
shared flag initializing.    * disabled bunch of
cpu workspaces tests    Signed-off-by: raver119
<raver119@gmail.com>    * scalar operators fix:
missing registerSpecialUse call    Signed-off-by:
raver119 <raver119@gmail.com>    * Fixed logdet
for cuda and tests.    * - correct clipBynorm_bp
Signed-off-by: Yurii <yurii@skymind.io>    * Fixed
crop_and_resize shape datatype.    * - correct
some mmul tests    Signed-off-by: Yurii
<yurii@skymind.io>    * build fix    Signed-off-
by: raver119 <raver119@gmail.com>    * exclude two
methods for JNI    Signed-off-by: raver119
<raver119@gmail.com>    * exclude two methods for
JNI    Signed-off-by: raver119
<raver119@gmail.com>    * exclude two methods for
JNI (#97)    Signed-off-by: raver119
<raver119@gmail.com>    * temporary stack fix
Signed-off-by: raver119 <raver119@gmail.com>    *
downgrade jetty to latest stable version
Signed-off-by: raver119 <raver119@gmail.com>    *
test and profiles    Signed-off-by: raver119
<raver119@gmail.com>    * Servlet skeleton    *
one test case    Signed-off-by: raver119
<raver119@gmail.com>    * one test case    Signed-
off-by: raver119 <raver119@gmail.com>    *
compilation fix    Signed-off-by: raver119
<raver119@gmail.com>    * draft improvements
Signed-off-by: raver119 <raver119@gmail.com>    *
draft improvements    Signed-off-by: raver119
<raver119@gmail.com>    * proof of concept works
Signed-off-by: raver119 <raver119@gmail.com>    *
proof of concept works    Signed-off-by: raver119
<raver119@gmail.com>    * Servlet    Signed-off-
by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * logging +
simple timing    Signed-off-by: raver119
<raver119@gmail.com>    * Content type fixed
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Profile
required    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Servlet tests
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Post test
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Tests added:
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Minor tweaks
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Constants used
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Check content
type    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Some tests
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Errors
checking    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Constraints
and tests    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Minor tweaks
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Dl4j servlet
skeleton    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Moving class
to dl4j    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Builder
extended    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * initial dl4j
commit    Signed-off-by: raver119
<raver119@gmail.com>    * unirest version change
Signed-off-by: raver119 <raver119@gmail.com>    *
temp fallback    Signed-off-by: raver119
<raver119@gmail.com>    * Reverted unirest version
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Reverted
unirest version    Signed-off-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>    *
revert back unirest version change    Signed-off-
by: raver119 <raver119@gmail.com>    * revert
unirest change    Signed-off-by: raver119
<raver119@gmail.com>    * some additional checks
in builder    Signed-off-by: raver119
<raver119@gmail.com>    * few more fields
Signed-off-by: raver119 <raver119@gmail.com>    *
Test added    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * lombok
Signed-off-by: raver119 <raver119@gmail.com>    *
Tests added    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * deps
Signed-off-by: raver119 <raver119@gmail.com>    *
profiles re-introduced    Signed-off-by: raver119
<raver119@gmail.com>    * Added tests    Signed-
off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Model servlet
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * builders
Signed-off-by: raver119 <raver119@gmail.com>    *
builders    Signed-off-by: raver119
<raver119@gmail.com>    * Servlet skeleton
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Servlet tests
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * builders
Signed-off-by: raver119 <raver119@gmail.com>    *
get rid of old class    Signed-off-by: raver119
<raver119@gmail.com>    * use PI for inference
Signed-off-by: raver119 <raver119@gmail.com>    *
superbuilder    Signed-off-by: raver119
<raver119@gmail.com>    * get back builder
Signed-off-by: raver119 <raver119@gmail.com>    *
Servlet builder    Signed-off-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>    * PI
setup    Signed-off-by: raver119
<raver119@gmail.com>    * get rid of superbuilder
Signed-off-by: raver119 <raver119@gmail.com>    *
SameDiffServlet inheritance constructor    Signed-
off-by: raver119 <raver119@gmail.com>    *
dl4jservlet attached to samediffservlet    Signed-
off-by: raver119 <raver119@gmail.com>    * builder
types fix    Signed-off-by: raver119
<raver119@gmail.com>    * dummy model    Signed-
off-by: raver119 <raver119@gmail.com>    * single
out    Signed-off-by: raver119
<raver119@gmail.com>    * loss    Signed-off-by:
raver119 <raver119@gmail.com>    * Tests added
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * missed builder
type    Signed-off-by: raver119
<raver119@gmail.com>    * working serving example
Signed-off-by: raver119 <raver119@gmail.com>    *
sd model fix    Signed-off-by: raver119
<raver119@gmail.com>    * fix unirest version
Signed-off-by: raver119 <raver119@gmail.com>    *
More tests    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Tests added:    Signed-
off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Minor tests
fixes    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Tests fixed
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Build fixed
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Test added
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Tests fixed
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Ser/deser
added    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * one more
unirest fix    Signed-off-by: raver119
<raver119@gmail.com>    * Custom serializers
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Tests disabled
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * revert back
unirest version change    Signed-off-by: raver119
<raver119@gmail.com>    * update    Signed-off-by:
raver119 <raver119@gmail.com>    * some default
fields values    Signed-off-by: raver119
<raver119@gmail.com>    * some comments/javadoc
Signed-off-by: raver119 <raver119@gmail.com>    *
- move serde impls to client module  - get rid of
INDArray serde for now    Signed-off-by: raver119
<raver119@gmail.com>    * jackson-based serde for
float[], double[] and String    Signed-off-by:
raver119 <raver119@gmail.com>    * more of basic
ser/de + tests    Signed-off-by: raver119
<raver119@gmail.com>    * minor api changes
Signed-off-by: raver119 <raver119@gmail.com>    *
change imports/signatures    Signed-off-by:
raver119 <raver119@gmail.com>    * Optional
parralel inference    Signed-off-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>    *
Insert pause between tests as workaround for
unavailable port issue    Signed-off-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>    * few
unused imports removed    Signed-off-by: raver119
<raver119@gmail.com>    * Models usage    Signed-
off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Models usage
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * - InputAdapter
+ OutputAdapter = InferenceAdapter  -
JsonModelServer now allows separate configuration
of InputAdapter and OutputAdapter    Signed-off-
by: raver119 <raver119@gmail.com>    * unused
import    Signed-off-by: raver119
<raver119@gmail.com>    * input adapter..
Signed-off-by: raver119 <raver119@gmail.com>    *
minor signature change    Signed-off-by: raver119
<raver119@gmail.com>    * few more signatures
updated    Signed-off-by: raver119
<raver119@gmail.com>    * input/output adapter
Signed-off-by: raver119 <raver119@gmail.com>    *
Tests added    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * javadocs added
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Test fixed
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * minor
polishing    Signed-off-by: raver119
<raver119@gmail.com>    * more of javadoc
Signed-off-by: raver119 <raver119@gmail.com>    *
signature change    Signed-off-by: raver119
<raver119@gmail.com>
",453711,5286,212173,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"671","eclipse/deeplearning4j","53ca9a76e83a1a80cff0363f7b30017ccfdf2ad3",7,"2019-08-14 16:52:34+03:00","[WIP] multi-device support (#80)  * fix pad
javadoc and @see links. (#72)    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * [WIP] More
fixes (#73)    * special tests for
ConstantTadHelper/ConstantShapeHelper    Signed-
off-by: raver119 <raver119@gmail.com>    * release
methods for data buffers    Signed-off-by:
raver119 <raver119@gmail.com>    * delete
temporary buffer Java side    Signed-off-by:
raver119 <raver119@gmail.com>    * delete
temporary buffer Java side    Signed-off-by:
raver119 <raver119@gmail.com>    * delete
temporary TadPack C++/Java side (#74)    Signed-
off-by: raver119 <raver119@gmail.com>    * Zoo
model TF import test updates (#75)    * argLine
fix, update compression_gru comment    * updated
comment for xception    * undid but commented
argLine change    * updated xlnet comment    *
copyright headers    * - new NDArray methods
like()/ulike() (#77)    - fix for
depthwise_conv2d_bp + special test    Signed-off-
by: raver119 <raver119@gmail.com>    *
upsampling2d fix CUDA    Signed-off-by: raver119
<raver119@gmail.com>    * DL4J trace logging (#79)
* MLN/CG trace logging for debugging    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    * Tiny
tweak    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * strided_slice_bp shape
fn leak fix    Signed-off-by: raver119
<raver119@gmail.com>    * SameDiff fixes and
naming (#78)    * remove SDVariable inplace
methods    * import methods    * npe fix in OpVal
* removed SameDiff inplace ops from tests    *
Naming updates, moved to centralized methods in
SameDiff, should use op_#:# for everything    *
quick fixes    * javadoc    * SDVariable eval with
placeholders    * use regex match    * better
matching    * initial commit    Signed-off-by:
raver119 <raver119@gmail.com>    * initial commit
Signed-off-by: raver119 <raver119@gmail.com>    *
fix javadoc. (#76)    * fix javadoc.    Signed-
off-by: Robert Altena <Rob@Ra-ai.com>    * replace
most @see with @link s.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * 4 additional tests
Signed-off-by: raver119 <raver119@gmail.com>    *
launch context reorganization    Signed-off-by:
raver119 <raver119@gmail.com>    * LaunchContext
reorganization    Signed-off-by: raver119
<raver119@gmail.com>    * per-device LaunchContext
Signed-off-by: raver119 <raver119@gmail.com>    *
Various DL4J/ND4J fixes (#81)    * #7954 Force
refresh of UI when switching tabs on overview page
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8017 Concurrent modification exception
(synchronize) fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8033 Don't initialize
updater in middle of writing memory crash dump
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8208 Fix shape checks for ND4J int[] creator
methods    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #6385 #7992 Keras
import naming fixes + cleanup    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8016
Upsampling3D - add NDHWC format support    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
ContextBuffers as separate entity    Signed-off-
by: raver119 <raver119@gmail.com>    * Refactor
NativeOps.h to export C functions    * Actually
export functions from NativeOps.h    * Adapt the
Java wrappers in ND4J generated with JavaCPP    *
Create C wrappers for some of the C++ classes
currently used by ND4J    * ContextBuffers as
separate entity    Signed-off-by: raver119
<raver119@gmail.com>    * remove duplicate code in
createBufferDetached. (#83)    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * Keras model
import - updater lr fix (#84)    * Keras model
import - updater lr fix    Signed-off-by: eraly
<susan.eraly@gmail.com>    * Keras model import -
updater lr fix, cleanup    Signed-off-by: eraly
<susan.eraly@gmail.com>    * ContextBuffers as
separate entity    Signed-off-by: raver119
<raver119@gmail.com>    * ContextBuffers as
separate entity    Signed-off-by: raver119
<raver119@gmail.com>    * Fix functions of
OpaqueVariablesSet    * thread-local
buffers/affinity    Signed-off-by: raver119
<raver119@gmail.com>    * thread safety for
LaunchContext    Signed-off-by: raver119
<raver119@gmail.com>    * more of thread safety
Signed-off-by: raver119 <raver119@gmail.com>    *
one more multi threaded test    Signed-off-by:
raver119 <raver119@gmail.com>    * SameDiff
Convolution Config validation, better output
methods (#82)    * Conv Config validation & tests
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
stackOutputs utility method    Signed-off-by: Ryan
Nett <rnett@skymind.io>    * use constructor for
validation, support negative kernel sizes (infered
from weights)    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * better output methods
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
move output to be with fit and evaluate    Signed-
off-by: Ryan Nett <rnett@skymind.io>    * fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
more fixes    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * refactor duplicate code
from pad methods. (#86)    * refactor duplicate
code from pad methods.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * replace switch with
if.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * Various ND4J/DL4J fixes and
improvements (#87)    * Reshape and reallocate -
small fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Reshape and reallocate
- small fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #6488 ElementWiseVertex
broadcast support    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Constructors and
broadcast supported it Transforms.max/min
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8054 ElementWiseVertex now supports broadcast
inputs    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8057 Nd4j.create
overload dtype fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #7551 ND4J Shape
validation fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * [WIP] Numpy boolean
import (#91)    * numpy bool type    Signed-off-
by: raver119 <raver119@gmail.com>    * numpy bool
java side    Signed-off-by: raver119
<raver119@gmail.com>    * remove create method
with unused parameter. (#89)    * remove create
method with unused parameter.    * removed more
unused methods.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * removing more unused code.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
last removal of unused code.    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * remove
createSparse methods. (#92)    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * Various
ND4J/DL4J fixes (#90)    * Deprecate Old*Op
instances    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8063 #8054 Broadcast
exceptions + cleanup inplace ops    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Small fix
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Remove bad test condition    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #7993 Fix
shape function issue in crop_and_resize op
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* DL4J SameDiff lambda layer fix    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8029 Fix
for pnorm backprop math    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8038 Fix Op
profiler NaN/Inf triggering + add tests (#93)
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* createUninitializedDetached refactoring. (#94)
* wip    * update interface, add null
implementations.    * Breaking one test in a weird
way.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * createUninitializedDetached
refactored.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * cuda build fix for issues
introduced by recent refactoring    Signed-off-by:
raver119 <raver119@gmail.com>    * [WIP] More of
CUDA (#95)    * initial commit    Signed-off-by:
raver119 <raver119@gmail.com>    * Implementation
of hashcode cuda helper. Working edition.    *
Fixed parallel test input arangements.    * Fixed
tests for hashcode op.    * Fixed shape
calculation for image:crop_and_resize op and test.
* NativeOps tests. Initial test suite.    * Added
tests for indexReduce methods.    * Added test on
execBroadcast with NDArray as dimensions.    *
Added test on execBroadcastBool with NDArray as
dimensions.    * Added tests on
execPairwiseTransform and
execPairwiseTransofrmBool.    * Added tests for
execReduce with scalar results.    * Added reduce
tests for non-empty dims array.    * Added tests
for reduce3.    * Added tests for execScalar.    *
Added tests for execSummaryStats.    * - provide
cpu/cuda code for batch_to_space  - testing it
Signed-off-by: Yurii <yurii@skymind.io>    * -
remove old test for batch_to_space (had wrong
format and numbers were not checked)    Signed-
off-by: Yurii <yurii@skymind.io>    * Fixed
complilation errors with test.    * Added test for
execTransformFloat.    * Added test for
execTransformSame.    * Added test for
execTransformBool.    * Added test for
execTransformStrict.    * Added tests for
execScalar/execScalarBool with TADs.    * Added
test for flatten.    * - provide cpu/cuda code for
space_to_Batch operaion    Signed-off-by: Yurii
<yurii@skymind.io>    * Added test for concat.
* comment unnecessary stuff in s_t_b    Signed-
off-by: Yurii <yurii@skymind.io>    * Added test
for specialConcat.    * Added tests for memcpy/set
routines.    * Fixed pullRow cuda test.    * Added
pullRow test.    * Added average test.    * -
correct typo in NDArray::applyPairwiseTransform(nd
4j::pairwise::BoolOps op...)    Signed-off-by:
Yurii <yurii@skymind.io>    * - debugging and
fixing cuda tests in JavaInteropTests file
Signed-off-by: Yurii <yurii@skymind.io>    * -
correct some tests    Signed-off-by: Yurii
<yurii@skymind.io>    * Added test for shuffle.
* Fixed ops declarations.    * Restored omp and
added shuffle test.    * Added convertTypes test.
* Added tests for execRandom. Eliminated usage of
RandomBuffer with NativeOps.    * Added sort
tests.    * Added tests for execCustomOp.    * -
further debuging and fixing tests terminated with
crash    Signed-off-by: Yurii <yurii@skymind.io>
* Added tests for calculateOutputShapes.    *
Addded Benchmarks test.    * Commented benchmark
tests.    * change assertion    Signed-off-by:
raver119 <raver119@gmail.com>    * Added tests for
apply_sgd op. Added cpu helper for that op.    *
Implement cuda helper for aplly_sgd op. Fixed
tests for NativeOps.    * Added test for assign
broadcastable.    * Added tests for assign_bp op.
* Added tests for axpy op.    * -
assign/execScalar/execTransformAny signature
change  - minor test fix    Signed-off-by:
raver119 <raver119@gmail.com>    * Fixed axpy op.
* meh    Signed-off-by: raver119
<raver119@gmail.com>    * - fix tests for
nativeOps::concat    Signed-off-by: Yurii
<yurii@skymind.io>    * sequential
transform/scalar    Signed-off-by: raver119
<raver119@gmail.com>    * allow nested parallelism
Signed-off-by: raver119 <raver119@gmail.com>    *
assign_bp leak fix    Signed-off-by: raver119
<raver119@gmail.com>    * block setRNG fix
Signed-off-by: raver119 <raver119@gmail.com>    *
enable parallelism by default    Signed-off-by:
raver119 <raver119@gmail.com>    * enable nested
parallelism by default    Signed-off-by: raver119
<raver119@gmail.com>    * Added cuda
implementation for row_count helper.    * Added
implementation for tnse gains op helper.    * -
take into account possible situations when input
arrays are empty in reduce_ cuda stuff    Signed-
off-by: Yurii <yurii@skymind.io>    * Implemented
tsne/edge_forces op cuda-based helper.
Parallelized cpu-based helper for edge_forces.
* Added kernel for tsne/symmetrized op heleper.
* Implementation of tsne/symmetrized op cuda
helper. Working edition.    * Eliminated waste
printfs.    * Added test for broadcastgradientargs
op.    * host-only fallback for empty reduce float
Signed-off-by: raver119 <raver119@gmail.com>    *
- some tests fixes    Signed-off-by: Yurii
<yurii@skymind.io>    * - correct the rest of
reduce_ stuff    Signed-off-by: Yurii
<yurii@skymind.io>    * - further correction of
reduce_ stuff    Signed-off-by: Yurii
<yurii@skymind.io>    * Added test for Cbow op.
Also added cuda implementation for cbow helpers.
* - improve code of stack operation for scalar
case    Signed-off-by: Yurii <yurii@skymind.io>
* - provide cuda kernel for gatherND operation
Signed-off-by: Yurii <yurii@skymind.io>    *
Implementation of cbow helpers with cuda kernels.
* minor tests tweaks    Signed-off-by: raver119
<raver119@gmail.com>    * minor tests tweaks
Signed-off-by: raver119 <raver119@gmail.com>    *
- further correction of cuda stuff    Signed-off-
by: Yurii <yurii@skymind.io>    * Implementatation
of cbow op helper with cuda kernels. Working
edition.    * Skip random testing for cudablas
case.    * lstmBlockCell context fix    Signed-
off-by: raver119 <raver119@gmail.com>    * Added
tests for ELU and ELU_BP ops.    * Added tests for
eq_scalar, gt_scalar, gte_scalar and lte_scalar
ops.    * Added tests for neq_scalar.    * Added
test for noop.    * - further work on
clipbynorm_bp    Signed-off-by: Yurii
<yurii@skymind.io>    * - get rid of concat op
call, use instead direct concat helper call
Signed-off-by: Yurii <yurii@skymind.io>    *
lstmBlockCell context fix    Signed-off-by:
raver119 <raver119@gmail.com>    * Added tests for
lrelu and lrelu_bp.    * Added tests for selu and
selu_bp.    * Fixed lrelu derivative helpers.    *
- some corrections in lstm    Signed-off-by: Yurii
<yurii@skymind.io>    * operator * result shape
fix    Signed-off-by: raver119
<raver119@gmail.com>    * - correct typo in
lstmCell    Signed-off-by: Yurii
<yurii@skymind.io>    * few tests fixed    Signed-
off-by: raver119 <raver119@gmail.com>    * CUDA
inverse broadcast bool fix    Signed-off-by:
raver119 <raver119@gmail.com>    * disable MMAP
test for CUDA    Signed-off-by: raver119
<raver119@gmail.com>    * BooleanOp syncToDevice
Signed-off-by: raver119 <raver119@gmail.com>    *
meh    Signed-off-by: raver119
<raver119@gmail.com>    * additional data types
for im2col/col2im    Signed-off-by: raver119
<raver119@gmail.com>    * Added test for
firas_sparse op.    * one more RandomBuffer test
excluded    Signed-off-by: raver119
<raver119@gmail.com>    * Added tests for flatten
op.    * Added test for Floor op.    * bunch of
tests fixed    Signed-off-by: raver119
<raver119@gmail.com>    * mmulDot tests fixed
Signed-off-by: raver119 <raver119@gmail.com>    *
more tests fixed    Signed-off-by: raver119
<raver119@gmail.com>    * Implemented floordiv_bp
op and tests.    * Fixed scalar case with cuda
implementation for bds.    * - work on cuda kernel
for clip_by_norm backprop op is completed
Signed-off-by: Yurii <yurii@skymind.io>    *
Eliminate cbow crach.    * more tests fixed
Signed-off-by: raver119 <raver119@gmail.com>    *
more tests fixed    Signed-off-by: raver119
<raver119@gmail.com>    * Eliminated abortion with
batched nlp test.    * more tests fixed    Signed-
off-by: raver119 <raver119@gmail.com>    * Fixed
shared flag initializing.    * disabled bunch of
cpu workspaces tests    Signed-off-by: raver119
<raver119@gmail.com>    * scalar operators fix:
missing registerSpecialUse call    Signed-off-by:
raver119 <raver119@gmail.com>    * Fixed logdet
for cuda and tests.    * - correct clipBynorm_bp
Signed-off-by: Yurii <yurii@skymind.io>    * Fixed
crop_and_resize shape datatype.    * - correct
some mmul tests    Signed-off-by: Yurii
<yurii@skymind.io>    * build fix    Signed-off-
by: raver119 <raver119@gmail.com>    * exclude two
methods for JNI    Signed-off-by: raver119
<raver119@gmail.com>    * exclude two methods for
JNI    Signed-off-by: raver119
<raver119@gmail.com>    * exclude two methods for
JNI (#97)    Signed-off-by: raver119
<raver119@gmail.com>    * temporary stack fix
Signed-off-by: raver119 <raver119@gmail.com>    *
round robin affinity test    Signed-off-by:
raver119 <raver119@gmail.com>    * get rid of
legacy CudaContext methods    Signed-off-by:
raver119 <raver119@gmail.com>    * get rid of
legacy ContextPool classes/methods    Signed-off-
by: raver119 <raver119@gmail.com>    * one legacy
test removed    Signed-off-by: raver119
<raver119@gmail.com>    * few more fields
rearranged    Signed-off-by: raver119
<raver119@gmail.com>    * OpaqueLaunchContext
Signed-off-by: raver119 <raver119@gmail.com>    *
OpaqueLaunchContext++    Signed-off-by: raver119
<raver119@gmail.com>    * more of
OpaqueLaunchContext methods    Signed-off-by:
raver119 <raver119@gmail.com>    * LaunchContext
-> CudaContext    Signed-off-by: raver119
<raver119@gmail.com>    * AffinityManger changes
Signed-off-by: raver119 <raver119@gmail.com>    *
AffinityManger changes    Signed-off-by: raver119
<raver119@gmail.com>    * cusolver handles
Signed-off-by: raver119 <raver119@gmail.com>    *
typo    Signed-off-by: raver119
<raver119@gmail.com>    * cusolver method
Signed-off-by: raver119 <raver119@gmail.com>    *
cusolver handle propagated    Signed-off-by:
raver119 <raver119@gmail.com>    * blas/solver
handles    Signed-off-by: raver119
<raver119@gmail.com>    * one more test    Signed-
off-by: raver119 <raver119@gmail.com>    * legacy
concat implementations replaced with new CustomOp
Signed-off-by: raver119 <raver119@gmail.com>    *
one more test    Signed-off-by: raver119
<raver119@gmail.com>    * concat now uses way more
blocks    Signed-off-by: raver119
<raver119@gmail.com>    * print    Signed-off-by:
raver119 <raver119@gmail.com>    * no more triple
template mmul    Signed-off-by: raver119
<raver119@gmail.com>    * bunch of kernels have
dtypes reconsidered    Signed-off-by: raver119
<raver119@gmail.com>    * bunch of kernels have
dtypes reconsidered    Signed-off-by: raver119
<raver119@gmail.com>    * bitonic sort reorganized
Signed-off-by: raver119 <raver119@gmail.com>    *
bunch of cpu stuff removed from cuda scope
Signed-off-by: raver119 <raver119@gmail.com>    *
bunch of cpu stuff removed from cuda scope
Signed-off-by: raver119 <raver119@gmail.com>    *
type conversions moved to generic impl    Signed-
off-by: raver119 <raver119@gmail.com>    * cpu
data types pass    Signed-off-by: raver119
<raver119@gmail.com>    * non_max_suppression
Signed-off-by: raver119 <raver119@gmail.com>    *
sortByValue fix    Signed-off-by: raver119
<raver119@gmail.com>    * ignore all mixed
datatype tests for mmul    Signed-off-by: raver119
<raver119@gmail.com>    * special handling of
OpProfiler exceptions    Signed-off-by: raver119
<raver119@gmail.com>    * - one failing concat
test in cpp  - Nd4j.tile now uses op internally
Signed-off-by: raver119 <raver119@gmail.com>    *
get back dtype exception for legacy arrays
deserialization    Signed-off-by: raver119
<raver119@gmail.com>
",453106,5279,211927,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"672","eclipse/deeplearning4j","2f3d7330ceee5b562bcef024ed4b1b2aa785120e",5,"2019-08-16 08:14:18+03:00","[WIP] build fix (#124)  * AffinityManager changes
Signed-off-by: raver119 <raver119@gmail.com>    *
build fixes    Signed-off-by: raver119
<raver119@gmail.com>
",453060,5279,211867,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"673","eclipse/deeplearning4j","e9b72e78ae045b1bbfddca75e66226f4474523cc",1,"2019-08-16 15:02:47+03:00","one more build fix  Signed-off-by: raver119
<raver119@gmail.com>
",453234,5285,212025,"raver119","raver119@gmail.com","raver119","raver119@gmail.com"
"674","eclipse/deeplearning4j","348d9c59f7ead214202ace7c813dfef99f2d73b4",1,"2019-08-21 23:47:24+10:00","Various fixes (#141)  * #8121
CnnSentenceDataSetIterator fixes    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8120
CnnSentenceDataSetIterator.loadSingleSentence no
words UX/exception improvement    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8122
AggregatingSentenceIterator builder -
addSentencePreProcessor -> sentencePreProcessor
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8082 Arbiter - fix GridSearchCandidateGenerator
search size issue    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",453365,5287,212074,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"675","eclipse/deeplearning4j","2b0d7b3b52df1443ad286f2981fc248a62d05db7",17,"2019-08-21 16:40:32-07:00","[WIP] Various fixes, mostly SameDiff/Nd4j (#110)
* Nd4j pad update    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * switched from guava
Immutables to Collections.unmodifiableList/Map
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
javadoc    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * use new pad    Signed-off-
by: Ryan Nett <rnett@skymind.io>    * conv tests
use OpValidation    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * deconv3d overrides
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
test fix for the new pad method    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * more test fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
more test fixes    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * rename SameDiff function
methods to op (except for the actual SameDiff
function ones)    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * more pad overloads, test
fix    Signed-off-by: Ryan Nett <rnett@skymind.io>
* test updates    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * conv1d test    Signed-off-
by: Ryan Nett <rnett@skymind.io>    * remove
Conv1D tf import (there isn't a TF conv1d op)
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
remove numThreads from Nd4j    Signed-off-by: Ryan
Nett <rnett@skymind.io>    * replace Old ops with
their newer versions, deprecate ones that haven't
already been deprecated    Signed-off-by: Ryan
Nett <rnett@skymind.io>    * remove use of
setNumThreads    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * fix for Reverse and ATan2
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
fix test for wrong equals type    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * well it works
now    Signed-off-by: Ryan Nett <rnett@skymind.io>
* better javadocs    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * NonNulls    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * better array
literal    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * re-add tf import stuff
(will remove later)    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * conv1d config load fix
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
partial config usage changes    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * remove Old op
classes    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * config property fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
removed one too many ops    Signed-off-by: Ryan
Nett <rnett@skymind.io>
",452575,5268,211840,"Ryan Nett","rnett@skymind.io","GitHub","noreply@github.com"
"676","eclipse/deeplearning4j","930b49e87fee82b6f0ef46f846c6e2536a62db4f",2,"2019-08-22 20:01:29+03:00","[WIP] DeviceLocalNDArray updates (#149)  *
ContextBuffers are released upon device change
Signed-off-by: raver119 <raver119@gmail.com>    *
DeviceLocalNDArray updates + tests    Signed-off-
by: raver119 <raver119@gmail.com>    * special
array for delayed mode    Signed-off-by: raver119
<raver119@gmail.com>    * additional detach()
Signed-off-by: raver119 <raver119@gmail.com>
",452665,5268,211826,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"677","eclipse/deeplearning4j","80d35377d41b1e942b0b6084ae06ba325c5af848",3,"2019-08-23 15:09:53+10:00","SameDiff cleanup and fixes (#150)  * Cleanup
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* SDVariable no longer extends
DifferentialFunction    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8123 Remove cloning
library to avoid 'illegal reflective access'
warnings    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8095 Make Pooling3D
abstract, fix flatbuffers serialization issue
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8117 WordVectorSerializer deprecated method
javadoc    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Small fixes    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Final fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * One more    Signed-off-
by: AlexDBlack <blacka101@gmail.com>
",452631,5266,211789,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"678","eclipse/deeplearning4j","70ee8ba91d5002f1868b85001f465a511ca6944f",2,"2019-08-23 20:54:24+10:00","Optimization / fix for DL4J SameDiff layers (#156)
Signed-off-by: AlexDBlack <blacka101@gmail.com>
",452781,5266,211818,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"679","eclipse/deeplearning4j","2e99bc2dee232b730c9bd2663dabfa03163f62b1",25,"2019-08-23 17:00:55+03:00","[WIP] Handling binary data in DL4J servlet (#135)
* Binary deser    Signed-off-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>    *
Binary mode for servlet    Signed-off-by:
Alexander Stoyakin <alexander.stoyakin@gmail.com>
* Added test    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * -sRandom image
generation copied from datavec    * -sRandom image
generation copied from datavec    * Remove
serialization constraints    * Fix:    Signed-off-
by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Removed unused
code    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Resources
usage    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Async
inference    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Cleanup
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * -sTest
corrected    * Cleanup    Signed-off-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>    *
Mutually eclusive serializers/deserializers
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Binary output
supported    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Binary out
test    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * - types
hardcoded  - increased payload size limit
Signed-off-by: raver119 <raver119@gmail.com>    *
change types constant    Signed-off-by: raver119
<raver119@gmail.com>
",453212,5270,211908,"Alexander Stoyakin","alexander.stoyakin@gmail.com","raver119","raver119@gmail.com"
"680","eclipse/deeplearning4j","dce4751fc12065a285af294dda299e54a6468add",12,"2019-08-27 18:34:53+10:00","Layer norm 4d case fixes (#174)  Signed-off-by:
AlexDBlack <blacka101@gmail.com>
",453709,5270,211344,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"681","eclipse/deeplearning4j","a7dca9fc8792819305735d41d447331fba696e96",2,"2019-08-30 23:36:00+10:00","Add java op class for relu derivative, and use in
Activation ReLU (#207)  * Add java op class for
relu derivative, and use in ACtivation ReLU
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",452900,5239,210231,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"682","eclipse/deeplearning4j","b3a134b608337a7eae11cf3ded5737e8e6508813",29,"2019-09-01 23:15:23-07:00","New Nd4j backprop ops for activations (#211)  *
new (for java at least) backprop ops    Signed-
off-by: Ryan Nett <rnett@skymind.io>    * update
activation functions    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * add differential functions
for SameDiff    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * deprecate old ops
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
update correct old ops    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * update ops backprop to use
new ops    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * misc updates for
deprecated functions (mostly Nd4j.rand w/ vararg
shape)    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * remove old imports
Signed-off-by: Ryan Nett <rnett@skymind.io>
",453354,5251,210378,"Ryan Nett","rnett@skymind.io","Alex Black","blacka101@gmail.com"
"683","eclipse/deeplearning4j","82c9dc57431aafed5362e74cd9989e794476664a",2,"2019-09-02 18:37:05+10:00","ELU fix (#219)  Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",453277,5250,210331,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"684","eclipse/deeplearning4j","e9454b888298646378c6ac552921371553f26ec5",31,"2019-09-04 00:44:01-07:00","SDCNN cleanup pass (#230)  * SDCNN cleanup
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
NonNull annotations    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * better javadoc, NonNull
fix for sconv    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * update builders to fix
names    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * fixes    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * even more fixes
Signed-off-by: Ryan Nett <rnett@skymind.io>    *
fix for null bias    Signed-off-by: Ryan Nett
<rnett@skymind.io>
",453284,5251,210166,"Ryan Nett","rnett@skymind.io","GitHub","noreply@github.com"
"685","eclipse/deeplearning4j","03c52ef9ddc3ef57dd75262fccc835fca3089b84",5,"2019-09-04 22:34:31+10:00","Add SameDiff.bitwise namespace (#232)  * #8196 add
SameDiff.bitwise namespace    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Add
BitsHammingDistance, add remaining bitwise ops to
bitwise namespace    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * fix    Signed-off-by:
AlexDBlack <blacka101@gmail.com>
",453487,5256,210348,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"686","eclipse/deeplearning4j","79867f5c5a0c7e44ea4a31e0b7f8fc0835cbd262",4,"2019-09-04 19:25:03-07:00","cleanup SDRNN and rnn ops (#238)  Signed-off-by:
Ryan Nett <rnett@skymind.io>
",453816,5262,210554,"Ryan Nett","rnett@skymind.io","Alex Black","blacka101@gmail.com"
"687","eclipse/deeplearning4j","b582e69e3b0cc50b0599dc1a1e67fb488287c65c",1,"2019-09-09 22:54:07+10:00","Small ND4J/SameDiff fixes (#248)  * #8218 Fix
Nd4j.hstack rank 1 case    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8209
SameDiff: don't allow empty arrays (with 0s in
shape) for variables    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",453893,5262,210272,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"688","eclipse/deeplearning4j","8a05ec2a979652ee6eede6f09b7c201879f25881",2,"2019-09-10 20:38:23-07:00","Fix a couple SameDiff training issues (#253)  *
fix execBackwards training issue    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * fix validation
not specifying outputs    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * another fix for validation
listeners and history    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * tests    Signed-off-by:
Ryan Nett <rnett@skymind.io>    * add single batch
dataset output methods    Signed-off-by: Ryan Nett
<rnett@skymind.io>
",454045,5262,210278,"Ryan Nett","rnett@skymind.io","GitHub","noreply@github.com"
"689","eclipse/deeplearning4j","bc2a7dd7ae56519080407153b60efe54794b8a31",5,"2019-09-12 19:23:44+03:00","[WIP] Fixed signatures. SameDiff tests (#258)  *
Fixed signatures. SameDiff tests    Signed-off-by:
Alexander Stoyakin <alexander.stoyakin@gmail.com>
* Tests fixed    Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Test fixed
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Small fix
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>    * Fixed test
Signed-off-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>
",454134,5262,210300,"Alexander Stoyakin","alexander.stoyakin@gmail.com","raver119","raver119@gmail.com"
"690","eclipse/deeplearning4j","979ef13c0b28565800fc651693102d7bd2bf52c9",1,"2019-09-13 11:55:13+03:00","fix build issues  Signed-off-by: raver119
<raver119@gmail.com>
",454131,5262,210259,"raver119","raver119@gmail.com","raver119","raver119@gmail.com"
"691","eclipse/deeplearning4j","f98f8be7b6ef1d95f29ad87835373c087a45ce50",13,"2019-09-19 11:52:20+10:00","SameDiff ops (#8247)  * update javadocs and a few
method signatures    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * add PRelu op    Signed-
off-by: Ryan Nett <rnett@skymind.io>    * test and
fixes    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * add PRelu op    Signed-
off-by: Ryan Nett <rnett@skymind.io>    * test and
fixes    Signed-off-by: Ryan Nett
<rnett@skymind.io>    * slightly better test
Signed-off-by: Ryan Nett <rnett@skymind.io>
",450242,5230,208614,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"692","eclipse/deeplearning4j","3f0b4a2d4c31e056be9227ab436161861572d0d2",36,"2019-10-23 21:19:50+11:00","SameDiff execution, TF and memory management
overhaul (#10)  * SameDiff execution memory
management improvements, round 1    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Round 2
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Round 3    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Clear node outputs
closed array references; Slight change to
OpValidation internals to not rely on cached op
outputs    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Next steps    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    * Next
step    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Cleanup    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    * More
polish    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Add
WeakIdentityHashmap    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Session fixes for
control ops and next steps    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * More fixes
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * First steps for
training session + in-line updating    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    * Next
steps    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix losses and history
during training    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * More fixes    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
BiasAdd and other fixes    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Don't use
SDVariable.getArr() in TFGraphTestAllHelper
(import tests)    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Small fix    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Cleanup    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * First steps for new
dependency tracking approach    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Start
integrating dependency tracking for memory
management    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Non-control op
dependency tracking works/passes    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Switch/merge
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Next steps    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Cleanup and next steps
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Small fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix issue dependency
tracking for initial variables/constants
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Add check for aliases when determining if safe
to close array    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * First pass on new TF
graph import class    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Import fixes, op fixes
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Cleanup and fixes for new TF import mapper
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* More cleanup    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Partial implementation
of new dependency tracker    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Next steps
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* AbstractDependencyTracker for shared code
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Overhaul SameDiff graph execution (dependency
tracking)    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * More fixes, cleanup,
next steps    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Ad no-op memory
manager, cleanup, fixes    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Fix switch
dependency tracking    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * INDArray.toString: no
exception on closed arrays, just note closed
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Fix enter and exit dependency tracking
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* TensorArray memory management fixes    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    * Add
unique ID for INDArray instances    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Fix memory
management for NextIteration outputs in multi-
iteration loops    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Remove (now
unnecessary) special case handling for nested
enters    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Cleanup    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    * Handle
control dependencies during execution; javadoc for
memory managers    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Cleanup, polish, code
comments, javadoc    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Cleanup and more
javadoc    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Add memory validation
for all TF import tests - ensure all arrays
(except outputs) are released    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Clean up
arrays waiting on unexecuted ops at the end of
execution    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fixes for enter op
memory managent in the context of multiple non-
nested loops/frames    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix order of operation
issues for dependency tracker    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Always clear
op fields after execution to avoid leaks or
unintended array reuse    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Small fixes
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Re-implement dtype conversion    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Fix for
control dependencies execution (dependency
tracking)    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix TF import overrides
and filtering    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix for constant enter
array dependency tracking    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * DL4J Fixes
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* More DL4J fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Cleanup and polish
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* More polish and javadoc    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * More logging
level tweaks, small DL4J fix    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Small fix to
DL4J SameDiffLayer    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix empty array
deserialization, add extra deserialization checks
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* FlatBuffers control dep serialization fixes;
test serialization as part of all TF import tests
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Variable control dependencies serialization fix
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Fix issue with removing inputs for ops
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* FlatBuffers NDArray deserialization fix
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* FlatBuffers NDArray deserialization fix
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Small fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Small fix    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Final cleanup/polish    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",449855,5253,208706,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"693","eclipse/deeplearning4j","d333d29099247876d86a3473ab7e0be42eebbb6b",9,"2019-10-26 12:38:08+11:00","SameDiff cleanup and fixes (#12)  * #8160 Remove
resolvePrepertiesFromSameDiffBeforeExecution
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* SameDiff API cleanup    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * More
SameDiff cleanup    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Small fixes    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
#8248 Switch SameDiff variable init from lazy to
creation time for more predictable behaviour
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8252 TanhDerivative javadoc    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8225
Deconvolution2D input validation    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8265 Switch
SameDiff.outputs() to user settable, instead of
unreliable 'best guess'    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8224
SameDiff.zero and .one create constants, not
variables    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * More cleanup and fixes
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Small test fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Small fix    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    * DL4J
SameDiff fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Re-add hack for
Deconvolution2DLayer until #8315 is resolved
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* #8270 Move CUDA device/version logging to Java;
can be disabled via existing
org.nd4j.log.initialization system property
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* All ND4J init logging checks system property
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Small tweak    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Remove redundant device
logging    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * One more fix    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    * UX
improvements    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Deconv fix    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    * Add
deconv tests    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Cleanup    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    * Remove
debug code    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",449691,5254,208461,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"694","eclipse/deeplearning4j","45a40c8a89da4820ee8afdef44a05b81f9da5456",3,"2019-10-31 11:23:09+02:00","DL4J/ND4J: Do pass on integer casts (#15)  * Int
cast fixes.    * Revert ""Int cast fixes.""    This
reverts commit aa36e8ca    * Int casts    * Int
cast    * Int casts    * Get rid of int casts.
Dropping deprecated aggregate ops.    * java
scatterUpdate changes    Signed-off-by: raver119
<raver119@gmail.com>    * c++ scatterUpdate
changes    Signed-off-by: raver119
<raver119@gmail.com>    * Remove aggregated ops.
* Restored test    * Tests restored.    * Minor
fixes
",449278,5248,207924,"Alexander Stoyakin","alexander.stoyakin@gmail.com","GitHub","noreply@github.com"
"695","eclipse/deeplearning4j","4763547c9eb2386317f56ee84334a444c64f37a3",5,"2019-11-04 12:42:11+11:00","Add Deconv3DTF (#25)  Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",450449,5257,208104,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"696","eclipse/deeplearning4j","948ebef41c79dacde9c9388d2eda8c0d72758fe3",4,"2019-11-05 00:05:04+11:00","Op Fixes (#28)  * #8280 biasadd_bp nchw arg fixes
(java side) + test    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8285 Concat op Java
side fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Concat op cpp fix -
allow dynamic axis to be negative, same as static
axis    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * ignores for deconv3d
import tests until deconv3d_tf op is implemented
Signed-off-by: AlexDBlack <blacka101@gmail.com>
",450441,5257,208103,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"697","eclipse/deeplearning4j","df8b4e607ac026e2a2a2698db690115a26b97afd",14,"2019-11-06 18:52:41+11:00","SameDiff: make use of DeviceLocal configurable
(#32)  * #8340 make DeviceLocal configurable
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Small fix    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Javadoc    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    * DL4J
SameDiff layers: use SingleThreadArrayHolder to
avoid assigns + DeviceLocalNDArray overhead
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Javadoc    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",450521,5260,208161,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"698","eclipse/deeplearning4j","18c01f5bdc4b2349869b861aaebfbc4c7c9e9c21",2,"2019-11-12 21:15:44+11:00","Add SameDiff memory reuse memory manager (array
cache) (#39)  * Attention op comments    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
ArrayCacheMemoryMgr - first pass    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Tweak array
cache for use with SameDiff identity arrays
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* ArrayCacheMemoryMgr javadoc and properly get max
memory    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * LRU cache policy + add
tests    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fixes    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Resize
arrays internally if required for
ArrayCacheMemoryMgr    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Test improvement
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Small polish    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",450839,5262,208227,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"699","eclipse/deeplearning4j","1d96bb9e6e3f8c005e5e86af2ad7d1ace44ccdd2",2,"2019-11-12 22:51:09+11:00","SameDiff op runtime benchmarking listener (#42)
Signed-off-by: AlexDBlack <blacka101@gmail.com>
",450962,5263,208240,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"700","eclipse/deeplearning4j","09a827fb6dcea3f810bd857483e84b4e28501784",6,"2019-11-16 17:04:29+11:00","Fixes and pre-release QA (#51)  * #8395 Keras
import - support scaled identity weight init
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* More Keras scaled weight init fixes    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
#8352 Deprecate duplicate SamplingDataSetIterator
class    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Remove /O2 optimization
for faster CUDA build    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Tweak regression test
precision for CUDA    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix edge cases for
buffer creation    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Update MKLDNN
validation tests to new helper enable/disable
settings    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Delete debugging class
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* MKLDNN test - add proper skip for CUDA backend
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Align WeightInitUtil with weight init classes
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Fix for SameDiff test layers weight init when
using IWeightInit classes    Signed-off-by:
AlexDBlack <blacka101@gmail.com>
",450875,5262,208209,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"701","eclipse/deeplearning4j","da1944e8e1c9eae4a372dd013470da8f9517cace",5,"2019-11-19 22:44:29+11:00","SameDiff TF import (#49)  * Added implementation
files for image_resize and resize_bicubic ops.
* Image resize and image.resize_bicubic ops
implementation. Initial revision.    * Minor fix
* Some TF imports disabled.    * Finished with
infrastructure development for
image.resize_bilinear op and image_resizo op
implementation.    * Refactored resize methods.
* Added processing for Mitchelcubic algorithm.
* adjust_contrast    * Small fix for TF import
expected value loading when variable name starts
with the test name    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Tests    * Tests added.
* Removed tf names absent in mapping.    * Some
fixes.    * Small fixes    * Minor change    *
Some failing tests.    * Disable failed test    *
Ignore some tests    * Fix import class mapping
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Fix float property mapping (flatbuffers)
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Override equality function for model 'dropout'
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Fail tests    * Failed tests ignored
temporarily.    * Minor fixes    * Small fix    *
Conflict resolved    * Default implementations of
tensorflowName and onnxName
",450938,5265,208301,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"702","eclipse/deeplearning4j","83cb0d9329b099856b335d67aea678ceb0477030",1,"2019-11-21 13:31:20+03:00","[WIP] Create and small fix (#67)  * - create op  -
skip exec for empty inputs for non_max_suppression
- EmptyHandling idea    Signed-off-by: raver119
<raver119@gmail.com>    * Create op and mapping
for it    Signed-off-by: raver119
<raver119@gmail.com>
",451024,5266,208325,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"703","eclipse/deeplearning4j","064a56ccf121a4cd6bdfa15ccca5f83f470eedcf",4,"2019-11-21 15:43:03+03:00","Few fixes (#66)  * skip legacy transforms
execution in case of empty input arrays    Signed-
off-by: raver119 <raver119@gmail.com>    * -
BroadcastBool ops now accept extraParams to make
MatchCondition possible  - TrueBroadcastHelper now
uses samediff::threads    Signed-off-by: raver119
<raver119@gmail.com>    * java side    Signed-off-
by: raver119 <raver119@gmail.com>    * trigger
jenkins    Signed-off-by: raver119
<raver119@gmail.com>    * update LessThanOrEqual
opNum mapping    Signed-off-by: raver119
<raver119@gmail.com>    * update LessThanOrEqual
opNum mapping    Signed-off-by: raver119
<raver119@gmail.com>
",451070,5266,208491,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"704","eclipse/deeplearning4j","009007120becd6644ad302fc096624681958b9c2",5,"2019-11-28 20:08:51+02:00","Shugeo_release_fixes3 (#81)  * Implementation for
non_max_suppression_v3 was added. Initial version
* Added check for overcome threshold.    * Added
definition for V3 method.    * java remapping for
NonMaxSuppressionV3    Signed-off-by: raver119
<raver119@gmail.com>    * Fixed proporly
processing of an empty output and test.    *
Refactored op to less threshold data to float.
* Implemented cuda-based helper for
non_max_suppression_v3 op.    * Fixed
fake_quant_with_min_max_vars op.    * Fixed tests
with float numbers.    * - assert now stops
execution  - sortByKey/sortByValue now have input
validation    Signed-off-by: raver119
<raver119@gmail.com>    * missing var    Signed-
off-by: raver119 <raver119@gmail.com>    * Fixed
proper processing for zero max_size inputs.    *
Refactored kernel callers.    * Fixed return
statement for logdet op helper.    * Refactored
unsorted segment SqrtN op.    * get back 8 tail
bytes on CUDA    Signed-off-by: raver119
<raver119@gmail.com>    * Refactored segment prod
ops and helpers for cuda and tests.    *
Additional test.    * CudaWorkspace tests updated
for 8 tail bytes    Signed-off-by: raver119
<raver119@gmail.com>    * special atomic test
Signed-off-by: raver119 <raver119@gmail.com>    *
atomicMul/atomicDiv fix for 16bit values
Signed-off-by: raver119 <raver119@gmail.com>    *
Eliminated waste prints.
",451583,5263,208456,"shugeo","sgazeos@gmail.com","raver119","raver119@gmail.com"
"705","eclipse/deeplearning4j","d19eeaec5204e78bc53acf2362e1970128cf7239",12,"2019-11-29 13:14:30+02:00","Shyrma casual conv1d (#90)  * - add causal mode of
padding to convolutions    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - add additional tests
for causal conv1d    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - add causal mode for
cuda conv kernels    Signed-off-by: Yurii
<iuriish@yahoo.com>    * Java side of Conv1D
changes    Signed-off-by: raver119
<raver119@gmail.com>    * Add Conv1DDerivative op
Signed-off-by: Alex Black <blacka101@gmail.com>
* Causal Conv1D gradient checks    Signed-off-by:
Alex Black <blacka101@gmail.com>    * Tweaks
Signed-off-by: Alex Black <blacka101@gmail.com>
* - add causal padding mode to conv2d_bp
Signed-off-by: Yurii <iuriish@yahoo.com>    * More
thorough causal conv1d tests    Signed-off-by:
Alex Black <blacka101@gmail.com>
",451752,5265,208492,"Yurii Shyrma","iuriish@yahoo.com","raver119","raver119@gmail.com"
"706","eclipse/deeplearning4j","4fb9fa7748b60673edfd2c76beff4fb961d914e4",73,"2019-11-30 18:39:32+11:00","Add ND4J namespaces (#83)  * Add NDValidation
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Add bitwise namespace    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Math
namespace op constructor fixes    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Constructor
fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Add Math namespace
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Update NDBitwise    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Add random namespaces
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Update    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * NN namespace    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Small cleanup    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",452656,5271,209943,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"707","eclipse/deeplearning4j","5e152c0d9a9b3029c3539a6d23efebdae605475c",59,"2019-12-02 12:23:06+02:00","TF import tests - adding missing operations (#65)
* Add and fix mappings.    * Intermediate    *
Added and fixed some mappings    * Added op    *
Missing constructors added.    * Added new
mappings    * SDImage wrappers and minor tweaks.
* Added missing constructor    * Some corrections
* Cleanup    * Small fixes    * Ops wrappers    *
Minor fixes.    * Max Pooling    *
MaxPoolWithArgmax    * Some fixes    * Ignores for
failures    * Some ops fixed.    * Some fixes    *
Missing package added    * Some fixes    * Ignored
tests fixed.    * Some fixes    * Merge master
* bitcast fix    Signed-off-by: raver119
<raver119@gmail.com>    * Bitcast fixed
",454208,5285,210866,"Alexander Stoyakin","alexander.stoyakin@gmail.com","Alex Black","blacka101@gmail.com"
"708","eclipse/deeplearning4j","91de96588cabf617341fa439beab88abc3c0c288",5,"2019-12-04 23:35:38+11:00","BertIterator sentence pair support for supervised
training (#108)  * bert iterator sentence pair
handling    Signed-off-by: eraly
<susan.eraly@gmail.com>    * bert iterator
sentence pair handling -seg    Signed-off-by:
eraly <susan.eraly@gmail.com>    * bert iterator
sentence pair handling tests    Signed-off-by:
eraly <susan.eraly@gmail.com>    * test with pairs
long done    Signed-off-by: eraly
<susan.eraly@gmail.com>    * more tests with bert
iter sent pairs done    Signed-off-by: eraly
<susan.eraly@gmail.com>    * fixed copyright,
formatting    Signed-off-by: eraly
<susan.eraly@gmail.com>    * bert iterator - added
featurizer for sentence pair inference    Signed-
off-by: eraly <susan.eraly@gmail.com>    * bert
iterator - finished tests    Signed-off-by: eraly
<susan.eraly@gmail.com>    * bert iterator -
finished tests, polish    Signed-off-by: eraly
<susan.eraly@gmail.com>    * collection labeled
sentence provider    Signed-off-by: eraly
<susan.eraly@gmail.com>    * lombok fix for pojo
class    Signed-off-by: eraly
<susan.eraly@gmail.com>    * java doc misc clean
up    Signed-off-by: eraly <susan.eraly@gmail.com>
* Private access modifiers    Signed-off-by:
AlexDBlack <blacka101@gmail.com>
",455149,5287,210958,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"709","eclipse/deeplearning4j","e09a78523277e8c37c052415091ad9266c2ffee8",3,"2019-12-05 21:05:33+02:00","Shugeo resize fix5 (#102)  * Refactored resize
images ops to use TF-like bool args as input.    *
Refactored helpers for cpu implementation of
resize_bilinear and resize_nearest_neighbor ops.
* Refactored cuda implementation for
image.resize_bilinear and
image.resize_nearest_neighbor ops helpers.    *
Refactored nearest_neighbor resize op.    * Added
a pair of tests for special case of
resize_bilinear algorithm.    * Fixed issue with
resize_bilinear op.    * Refactored cpu
implementation for helpers with
resize_nearest_neighbor op.    * Final fixed for
resize ops to conform TF v.1.5    * Refactored
cuda helpers for resize_neares_neighbor op.    *
Fixed resize_bilinear to accept proper data.    *
Fixed issue with non-float input for
resize_bilinear op.    * Refactored cuda helper
for resize_bilinear to proper process non-float
inputs.    * Added tests for resize_bilinear to
int inputs.    * Fixed ResizeBilinear wrapper    *
Tests fixed    * Fixed float and bool constant to
avoid overflow for some kind of compilers.    *
Corrected float constants with float data type.
* Added f suffix for float constants.    *
Corrected float constant to avoid overflow with
initializing lists.    * Corrected float
initializing list with float input.    * Corrected
bool constant with initalizing list.    *
Corrected float and bool values with initializing
lists.    * Fixed wrong constant.    * Fixed issue
with 1x1 input picture for resize.    *
ResizeBilinear default values on import fix
Signed-off-by: raver119 <raver119@gmail.com>
",455509,5291,210992,"shugeo","sgazeos@gmail.com","raver119","raver119@gmail.com"
"710","eclipse/deeplearning4j","b66154a9d486466d2b4faa51f0007d684663ce84",1,"2019-12-09 14:16:11+11:00","Add ArraySavingListener for debugging (#114)
Signed-off-by: AlexDBlack <blacka101@gmail.com>
",455584,5292,210992,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"711","eclipse/deeplearning4j","927d591421ac7917672af3bd7198de89f2982d4b",3,"2019-12-09 09:25:39+02:00","ResizeBicubic added (#117)  * ResizeBicubic added
Some fixes.    * Test fixed    * Narrowed argument
type changed to boolean    * Clean up
",455666,5293,211001,"Alexander Stoyakin","alexander.stoyakin@gmail.com","Alex Black","blacka101@gmail.com"
"712","eclipse/deeplearning4j","f5068f39809697c63e5a7978c213366105e009d1",35,"2019-12-19 11:15:48+02:00","Added missing Java ops wrappers (#122)  * Timeouts
added    * Added some ops    * Ops added    *
Fixed tests    * Minor fix    * Some fixes    *
Digamma added    * Small fixes    * Timeouts added
* Added some ops    * Ops added    * Fixed tests
* Minor fix    * Some fixes    * Digamma added
* Small fixes    * Fused batch norm fixes-
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Tests switched off.    * Added test for
resize_bicubic.    * Eliminated wasted in test of
bicubic resize.    * Switched off multithreading
explicit.    * HsvToRgb and RgbToHsv added    *
Eliminated waste comments and conform proper float
constants.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Fixed multithreading with
resize_bicubic helper for cpu platform.    Signed-
off-by: shugeo <sgazeos@gmail.com>    *
ResizeBicubic was fixed.    * Some fixes    * Fix
op name    * Validation fixed.    * Clarifications
for tests    * Wrappers and small fixes for new
ops.
",456079,5295,211024,"Alexander Stoyakin","alexander.stoyakin@gmail.com","Alex Black","blacka101@gmail.com"
"713","eclipse/deeplearning4j","3d8f6d50a11c189a456b19197c8263440f1d640f",10,"2019-12-19 23:43:58+11:00","SameDiff profiler / tracing and profile
analysis/comparison (#133)  * Profiler    Signed-
off-by: Alex Black <blacka101@gmail.com>    * Next
steps, polishing, and loading SD/TF format JSON
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Next steps    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Profile comparison
method    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Make profiling result
writing async to reduce main thread overhead
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Profiling polishing    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Profile
analyzer fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Polish    Signed-off-
by: Alex Black <blacka101@gmail.com>    * Cleanup
Signed-off-by: Alex Black <blacka101@gmail.com>
* Small formatting improvement    Signed-off-by:
Alex Black <blacka101@gmail.com>    * Formatting
tweak    Signed-off-by: Alex Black
<blacka101@gmail.com>    * License headers
Signed-off-by: Alex Black <blacka101@gmail.com>
",456622,5302,211318,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"714","eclipse/deeplearning4j","29104083cc5893fbc5c05822d7808c4e6c64bcf6",2,"2020-01-04 13:45:07+11:00","Various fixes (#143)  * #8568 ArrayUtil
optimization    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #6171 Keras ReLU and
ELU support    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Keras softmax layer
import    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8549 Webjars
dependency management    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix for TF import names
':0' suffix issue / NPE    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * BiasAdd: fix
default data format for TF import    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    * Update
zoo test ignores    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8509 SameDiff Listener
API - provide frame + iteration    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8520 ND4J
Environment    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Deconv3d    Signed-off-
by: AlexDBlack <blacka101@gmail.com>    * Deconv3d
fixes + gradient check    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Conv3d fixes
+ deconv3d DType test    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fix issue with deconv3d
gradinet check weight init    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * #8579 Fix
BaseCudaDataBuffer constructor fix for UINT16
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* DataType.isNumerical() returns false for BOOL
type    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * #8504 Reduce Spark log
spam for tests    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Clean up DL4J gradient
check test spam    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * More Gradient check
spam reduction    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * SameDiff test spam
reduction    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Fixes for FlatBuffers
mapping    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * SameDiff log spam
cleanup    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Tests should extend
BaseNd4jTest    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Remove debug line in
c++ op    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * ND4J test spam cleanup
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* DL4J test spam reduction    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * More Dl4J
and datavec test spam cleanup    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Fix for bad
conv3d test    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Additional test
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Embedding layers: don't inherit global default
activation function    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Trigger CI    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Consolidate all BaseDL4JTest classes to single
class used everywhere; make timeout configurable
per class    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Test fixes and timeout
increases    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Timeouts and PReLU
fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * Restore libnd4j build
threads arg for CUDA build    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Increase
timeouts on a few tests to avoid spurious failures
on some CI machines    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * More timeout fixes
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* More test timeout fixes    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Tweak
timeout for one more test    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Final tweaks
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* One more ignore    Signed-off-by: AlexDBlack
<blacka101@gmail.com>
",456102,5305,212238,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"715","eclipse/deeplearning4j","29e8e09db60a7cbe2c65dd546449ccb7dffb3b37",4,"2020-01-04 13:27:50+03:00","String changes (#3)  * initial commit    *
additional data types & tensor type    Signed-off-
by: raver119 <raver119@gmail.com>    * next step
Signed-off-by: raver119 <raver119@gmail.com>    *
missing include    * sparse_to_dense    Signed-
off-by: raver119 <raver119@gmail.com>    * few
more tests files    Signed-off-by: raver119
<raver119@gmail.com>    * draft    Signed-off-by:
raver119 <raver119@gmail.com>    * numeric
sparse_to_dense    Signed-off-by: raver119
<raver119@gmail.com>    * comment    Signed-off-
by: raver119 <raver119@gmail.com>    * string
sparse_to_dense version    Signed-off-by: raver119
<raver119@gmail.com>    * CUDA DataBuffer expand
Signed-off-by: raver119 <raver119@gmail.com>    *
few tweaks for CUDA build    Signed-off-by:
raver119 <raver119@gmail.com>    * shape fn for
string_split    Signed-off-by: raver119
<raver119@gmail.com>    * one more comment
Signed-off-by: raver119 <raver119@gmail.com>    *
string_split indices    Signed-off-by: raver119
<raver119@gmail.com>    * next step    Signed-off-
by: raver119 <raver119@gmail.com>    * test passes
Signed-off-by: raver119 <raver119@gmail.com>    *
few rearrangements for databuffer implementations
Signed-off-by: raver119 <raver119@gmail.com>    *
DataBuffer: move inline methods to common
implementations    Signed-off-by: raver119
<raver119@gmail.com>    * add native DataBuffer to
Nd4j presets    Signed-off-by: raver119
<raver119@gmail.com>    * DataBuffer creation
Signed-off-by: raver119 <raver119@gmail.com>    *
use DataBuffer for allocation    Signed-off-by:
raver119 <raver119@gmail.com>    * cpu databuffer
as deallocatable    Signed-off-by: raver119
<raver119@gmail.com>    * DataBuffer setters for
bufers    Signed-off-by: raver119
<raver119@gmail.com>    * couple of wrappers
Signed-off-by: raver119 <raver119@gmail.com>    *
DataBuffers being passed around    Signed-off-by:
raver119 <raver119@gmail.com>    * Bunch of
ByteBuffer-related signatures gone    Signed-off-
by: raver119 <raver119@gmail.com>    * - few more
Nd4j signatures removed  - minor fix for bfloat16
Signed-off-by: raver119 <raver119@gmail.com>    *
nullptr pointer is still a pointer, but 0 as
address :)    Signed-off-by: raver119
<raver119@gmail.com>    * one special test
Signed-off-by: raver119 <raver119@gmail.com>    *
empty string array init    Signed-off-by: raver119
<raver119@gmail.com>    * one more test in cpp
Signed-off-by: raver119 <raver119@gmail.com>    *
memcpy instead of databuffer swap    Signed-off-
by: raver119 <raver119@gmail.com>    * special
InteropDataBuffer for front-end languages
Signed-off-by: raver119 <raver119@gmail.com>    *
few tweaks for java    Signed-off-by: raver119
<raver119@gmail.com>    * pointer/indexer
actualization    Signed-off-by: raver119
<raver119@gmail.com>    * CustomOp returns list
for inputArumgents and outputArguments instead of
array    Signed-off-by: raver119
<raver119@gmail.com>    * redundant call
Signed-off-by: raver119 <raver119@gmail.com>    *
print_variable op    Signed-off-by: raver119
<raver119@gmail.com>    * - view handling (but
wrong one)  - print_variable java wrapper
Signed-off-by: raver119 <raver119@gmail.com>    *
one more test    Signed-off-by: raver119
<raver119@gmail.com>    * - empty arrays handling
Signed-off-by: raver119 <raver119@gmail.com>    *
- deserialization works now    Signed-off-by:
raver119 <raver119@gmail.com>    * minor fix
Signed-off-by: raver119 <raver119@gmail.com>    *
meh    Signed-off-by: raver119
<raver119@gmail.com>    * one more fix    Signed-
off-by: raver119 <raver119@gmail.com>    * initial
cuda commit    Signed-off-by: raver119
<raver119@gmail.com>    * print_variable message
validation    Signed-off-by: raver119
<raver119@gmail.com>    * CUDA views    Signed-
off-by: raver119 <raver119@gmail.com>    * CUDA
special buffer size    Signed-off-by: raver119
<raver119@gmail.com>    * minor update to match
master changes    Signed-off-by: raver119
<raver119@gmail.com>    * - consider arrays always
actual on device for CUDA  - additional
PrintVariable constructor  - CudaUtf8Buffer now
allocates host buffer by default    Signed-off-by:
raver119 <raver119@gmail.com>    * meh    Signed-
off-by: raver119 <raver119@gmail.com>    * -
print_variable now allows print from device
Signed-off-by: raver119 <raver119@gmail.com>    *
InteropDataBuffer data type fix    Signed-off-by:
raver119 <raver119@gmail.com>    * ...    Signed-
off-by: raver119 <raver119@gmail.com>    * disable
some debug messages    Signed-off-by: raver119
<raver119@gmail.com>    * master pulled in
Signed-off-by: raver119 <raver119@gmail.com>    *
couple of new methods for DataBuffer interop
Signed-off-by: raver119 <raver119@gmail.com>    *
java side    Signed-off-by: raver119
<raver119@gmail.com>    * offsetted constructor
Signed-off-by: raver119 <raver119@gmail.com>    *
new CUDA deallocator    Signed-off-by: raver119
<raver119@gmail.com>    * CUDA backend torn apart
Signed-off-by: raver119 <raver119@gmail.com>    *
CUDA backend torn apart 2    Signed-off-by:
raver119 <raver119@gmail.com>    * CUDA backend
torn apart 3    Signed-off-by: raver119
<raver119@gmail.com>    * - few new tests  - few
new methods for DataBuffer management    Signed-
off-by: raver119 <raver119@gmail.com>    * few
more tests + few more tweaks    Signed-off-by:
raver119 <raver119@gmail.com>    * two failing
tests    Signed-off-by: raver119
<raver119@gmail.com>    * one more test    Signed-
off-by: raver119 <raver119@gmail.com>    * two
failing tests pass    Signed-off-by: raver119
<raver119@gmail.com>    * now we pass DataBuffer
to legacy ops too    Signed-off-by: raver119
<raver119@gmail.com>    * Native DataBuffer for
legacy ops, Java side    Signed-off-by: raver119
<raver119@gmail.com>    * CPU java side update
Signed-off-by: raver119 <raver119@gmail.com>    *
CUDA java side update    Signed-off-by: raver119
<raver119@gmail.com>    * no more prepare/register
action on java side    Signed-off-by: raver119
<raver119@gmail.com>    *
NDArray::prepare/register use now accepts vectors
Signed-off-by: raver119 <raver119@gmail.com>    *
InteropDataBuffer now has few more convenience
methods    Signed-off-by: raver119
<raver119@gmail.com>    * java bindings update
Signed-off-by: raver119 <raver119@gmail.com>    *
tick device in NativeOps    Signed-off-by:
raver119 <raver119@gmail.com>    * Corrected usage
of OpaqueBuffer for tests.    * Corrected usage of
OpaqueBuffer for java tests.    * NativeOpsTests
fixes.    * print_variable now returns scalar
Signed-off-by: raver119 <raver119@gmail.com>    *
one more test    Signed-off-by: raver119
<raver119@gmail.com>    * compat_string_split fix
for CUDA    Signed-off-by: raver119
<raver119@gmail.com>    * - CUDA execScalar fix  -
CUDA lazyAllocateHostPointer now checks java
indexer/pointer instead of native pointer
Signed-off-by: raver119 <raver119@gmail.com>    *
legacy ops DataBuffer migration prototype
Signed-off-by: raver119 <raver119@gmail.com>    *
ignore device shapeinfo coming from java
Signed-off-by: raver119 <raver119@gmail.com>    *
minor fix    Signed-off-by: raver119
<raver119@gmail.com>    * minor transformAny fix
Signed-off-by: raver119 <raver119@gmail.com>    *
minor tweak for lazy host allocation    Signed-
off-by: raver119 <raver119@gmail.com>    * -
DataBuffer::memcpy method  - bitcast now uses
memcpy    Signed-off-by: raver119
<raver119@gmail.com>    * - IndexReduce CUDA
dimension buffer fix    Signed-off-by: raver119
<raver119@gmail.com>    * views for CPU and CUDA
Signed-off-by: raver119 <raver119@gmail.com>    *
less spam    Signed-off-by: raver119
<raver119@gmail.com>    * optional memory init
Signed-off-by: raver119 <raver119@gmail.com>    *
async memset    Signed-off-by: raver119
<raver119@gmail.com>    * - SummaryStats CUDA fix
- DataBuffer.sameUnderlyingData() impl  -
execBroadcast fix    Signed-off-by: raver119
<raver119@gmail.com>    * - reduce3All fix  switch
to CUDA 10 temporarily    Signed-off-by: raver119
<raver119@gmail.com>    * CUDA version    Signed-
off-by: raver119 <raver119@gmail.com>    * proper
memory deallocator registration    Signed-off-by:
raver119 <raver119@gmail.com>    * HOST_ONLY
workspace allocation    Signed-off-by: raver119
<raver119@gmail.com>    * temp commit    Signed-
off-by: raver119 <raver119@gmail.com>    * few
conflicts resolved    Signed-off-by: raver119
<raver119@gmail.com>    * few minor fixes
Signed-off-by: raver119 <raver119@gmail.com>    *
one more minor fix    Signed-off-by: raver119
<raver119@gmail.com>    * NDArray permute should
operate on JVM primitives    Signed-off-by:
raver119 <raver119@gmail.com>    * - create
InteropDataBuffer for shapes as well  - update
pointers after view creation in Java    Signed-
off-by: raver119 <raver119@gmail.com>    * -
addressPointer temporary moved to C++    Signed-
off-by: raver119 <raver119@gmail.com>    * CUDA:
don't account offset twice    Signed-off-by:
raver119 <raver119@gmail.com>    * CUDA:
DataBuffer pointer constructor updated    Signed-
off-by: raver119 <raver119@gmail.com>    * CUDA
NDArray.unsafeDuplication() simplified    Signed-
off-by: raver119 <raver119@gmail.com>    * CUDA
minor workspace-related fixes    Signed-off-by:
raver119 <raver119@gmail.com>    * CPU
DataBuffer.reallocate()    Signed-off-by: raver119
<raver119@gmail.com>    * print_affinity op
Signed-off-by: raver119 <raver119@gmail.com>    *
print_affinity java side    Signed-off-by:
raver119 <raver119@gmail.com>    * CUDA more
tweaks for data locality    Signed-off-by:
raver119 <raver119@gmail.com>    * -
compat_string_split tweak  - CudaUtf8Buffer update
Signed-off-by: raver119 <raver119@gmail.com>    *
INDArray.close() mechanic restored    Signed-off-
by: raver119 <raver119@gmail.com>    * one more
test fixed    Signed-off-by: raver119
<raver119@gmail.com>    * - CUDA
DataBuffer.reallocate() updated  - cudaMemcpy
(synchronous) restored    Signed-off-by: raver119
<raver119@gmail.com>    * one last fix    Signed-
off-by: raver119 <raver119@gmail.com>    * bad
import removed    Signed-off-by: raver119
<raver119@gmail.com>    * another small fix
Signed-off-by: raver119 <raver119@gmail.com>    *
one special test    Signed-off-by: raver119
<raver119@gmail.com>    * fix bad databuffer size
Signed-off-by: raver119 <raver119@gmail.com>    *
release primaryBuffer on replace    Signed-off-by:
raver119 <raver119@gmail.com>    * higher timeout
Signed-off-by: raver119 <raver119@gmail.com>    *
disable timeouts    Signed-off-by: raver119
<raver119@gmail.com>    * dbCreateView now
validates offset and length of a view    Signed-
off-by: raver119 <raver119@gmail.com>    *
additional validation for dbExpand    Signed-off-
by: raver119 <raver119@gmail.com>    * restore
timeout back again    Signed-off-by: raver119
<raver119@gmail.com>    * smaller distribution for
rng test to prevent timeouts    Signed-off-by:
raver119 <raver119@gmail.com>    * CUDA
DataBuffer::memcpy now copies to device all the
time    Signed-off-by: raver119
<raver119@gmail.com>    * OpaqueDataBuffer now
contains all required methods for interop
Signed-off-by: raver119 <raver119@gmail.com>    *
some javadoc    Signed-off-by: raver119
<raver119@gmail.com>    * GC on failed allocations
Signed-off-by: raver119 <raver119@gmail.com>    *
minoe memcpu tweak    Signed-off-by: raver119
<raver119@gmail.com>    * one more bitcast test
Signed-off-by: raver119 <raver119@gmail.com>    *
- NDArray::deviceId() propagation  - special
multi-threaded test for data locality checks
Signed-off-by: raver119 <raver119@gmail.com>    *
DataBuffer additional syncStream    Signed-off-by:
raver119 <raver119@gmail.com>    * DataBuffer
additional syncStream    Signed-off-by: raver119
<raver119@gmail.com>    * one ignored test
Signed-off-by: raver119 <raver119@gmail.com>    *
skip host alloc for empty arrays    Signed-off-by:
raver119 <raver119@gmail.com>    * ByteBuffer
support is back    Signed-off-by: raver119
<raver119@gmail.com>    * DataBuffer::memcpy minor
fix    Signed-off-by: raver119
<raver119@gmail.com>    * few minor prelu/bp
tweaks    Signed-off-by: raver119
<raver119@gmail.com>    * nullify-related fixes
Signed-off-by: raver119 <raver119@gmail.com>    *
PReLU fixes (#157)    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Build fixed    * Fix
tests    * one more ByteBuffer signature restored
Signed-off-by: raver119 <raver119@gmail.com>    *
nd4j-jdbc-hsql profiles fix    Signed-off-by:
raver119 <raver119@gmail.com>    * nd4j-jdbc-hsql
profiles fix    Signed-off-by: raver119
<raver119@gmail.com>    * PReLU weight init fix
Signed-off-by: Alex Black <blacka101@gmail.com>
* Small PReLU fix    Signed-off-by: Alex Black
<blacka101@gmail.com>    * - INDArray.migrate()
reactivated  - DataBuffer::setDeviceId(...) added
- InteropDataBuffer Z syncToDevice added for views
Signed-off-by: raver119 <raver119@gmail.com>    *
missed file    Signed-off-by: raver119
<raver119@gmail.com>    * Small tweak    Signed-
off-by: Alex Black <blacka101@gmail.com>    * cuda
10.2    Signed-off-by: raver119
<raver119@gmail.com>    * minor fix    Signed-off-
by: raver119 <raver119@gmail.com>    Co-authored-
by: shugeo <sgazeos@gmail.com>  Co-authored-by:
Alex Black <blacka101@gmail.com>  Co-authored-by:
Alexander Stoyakin <alexander.stoyakin@gmail.com>
",455459,5311,212123,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"716","eclipse/deeplearning4j","6943a5f57aa6d4229ba9445a85e9dd296e848fff",4,"2020-01-20 11:29:36+02:00","Shugeo lgamma (#170)  * lgamma op. Initial
version.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Refactored lgamma op and
test.    Signed-off-by: shugeo <sgazeos@gmail.com>
* Lgamma wrapper    * Added TF mapping    Co-
authored-by: Alexander Stoyakin
<alexander.stoyakin@gmail.com>
",455505,5312,212137,"shugeo","sgazeos@gmail.com","raver119","raver119@gmail.com"
"717","eclipse/deeplearning4j","e50b285c2c572a2e361da15ce9a45ccaa75dede5",3,"2020-01-22 09:46:33+02:00","Shugeo resize area (#162)  * Added implementation
for resize_area op. Initial commit.    * Added
implementation of resize_area op. Initial
revision.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Corrected resizeArea
functor call.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Implementation of
resize_area. Cpu platform helpers.    Signed-off-
by: shugeo <sgazeos@gmail.com>    * Implementation
for resize_area helpers. The first part revision.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Added a set of tests for resize_area op.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Cuda implementation for resize_area. Initial
approach.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Adding multithreading for
resize_area algorithm.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Cuda implementation of
resize_area helpers. Shared memory approach.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Refactored resizeAreaKernel with cuda
implementation.    * Eliminated compilation
errors.    * ResizeArea helpers for cuda platform.
The first working revision.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Added test for
batched resize_area op testing.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Implementation of
resize_are for cuda platform and tests.    Signed-
off-by: shugeo <sgazeos@gmail.com>    * Fixed
multithreading with resize_area op helper.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Corrected copyright marks with sources.    Signed-
off-by: shugeo <sgazeos@gmail.com>    * Corrected
copyright mark for resize_area op implementation.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Corrected copyright mark for parity ops header.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Corrected typo in strings and so on with image
resize ops.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Refactored resize_area
helpers and multithreading.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Added ResizeArea
wrapper    * Added test with align_corners and
fixed shape processing with only int args given
for output size.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Added test    * TF
mapping for ResizeArea    * Fixed implementation
issues with resize_area op for both platforms.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Refactored image resizer struct to use flexible
types for ints and floats.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Improved
multithreading with resizeAreaKernel launch.
Signed-off-by: shugeo <sgazeos@gmail.com>    * Use
asynchronical memory copying with cuda platform
image resize allocations.    Signed-off-by: shugeo
<sgazeos@gmail.com>    Co-authored-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>
",455662,5314,212160,"shugeo","sgazeos@gmail.com","raver119","raver119@gmail.com"
"718","eclipse/deeplearning4j","531a72fabdd59dab111887209f8e4527c30affd1",2,"2020-01-27 10:00:07+03:00","execution mode (#183)  * initial commit    Signed-
off-by: raver119 <raver119@gmail.com>    *
execution mode java side    Signed-off-by:
raver119 <raver119@gmail.com>    * meh    Signed-
off-by: raver119 <raver119@gmail.com>    * move
exec mode to ContextPrototype    Signed-off-by:
raver119 <raver119@gmail.com>    * copyrights
Signed-off-by: raver119 <raver119@gmail.com>
",454026,5272,210956,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"719","eclipse/deeplearning4j","5d98cfcf4765fe5554a06c173934c16f6ab7defd",2,"2020-01-30 18:46:12+03:00","Configurable DataType for ops (#201)  * initial
commit    Signed-off-by: raver119
<raver119@gmail.com>    * - one more test for
OneHot with dtype  - one more signature in Nd4j
Signed-off-by: raver119 <raver119@gmail.com>    *
ones_as/zeros_as now accept dtype    Signed-off-
by: raver119 <raver119@gmail.com>    * one more
test    Signed-off-by: raver119
<raver119@gmail.com>    * - more updates for
configurable data types  - ones_as/zeros_as java
side + tests    Signed-off-by: raver119
<raver119@gmail.com>    * few c++ tests fixed
Signed-off-by: raver119 <raver119@gmail.com>    *
few more changes around DArgs    Signed-off-by:
raver119 <raver119@gmail.com>
",453359,5272,210970,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"720","eclipse/deeplearning4j","f6b3032def5f5c37eab30f04a345c0e31aeaf8f3",2,"2020-02-04 13:23:59+04:00","Python executioner 2.0 (#134)  * wrapper    *
builtins    * context mgr    * direct place    *
ret all var    * call fix    * fix ndarray serde
* jobs    * try-with gil management    * cleanup
* exec tests passing    * list tests    *
transforms test passing    * all pass    * headers
* dict fixes+test    * python path    * bool
isinstance    * job tests    * nits    * transform
fix+test    * transform tests    * leak fixes    *
more mem leak fixes    * more fixes    * nits for
adam    * PythonJob lombok builder    * checked
exceptions    * more nits    * small leak fix    *
more nits    * pythonexceptions    * fix jvm crash
when bad python code    *
Exception->PythonException    * Add support for
boolean types in arrow records and ability to cast
from float, double to int for TypeConversion
(#178)    * nits for alex    * update tests    *
fix test    * all pass    * refacc    * rem old
code    * dtypes    * bytes working+exception pass
through+cleanup (#209)    * more bytes tests    *
header    * rem dummy test    * rem bad import
* alex nits + refacc    * Small error fixes (wrong
type in msg) + minor formatting    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * use actual
python type names (dictionary->dict,
boolean->bool)    Co-authored-by: Shams Ul Azeem
<shamsazeem20@gmail.com>  Co-authored-by: Alex
Black <blacka101@gmail.com>
",454350,5282,211004,"Fariz Rahman","farizrahman4u@gmail.com","GitHub","noreply@github.com"
"721","eclipse/deeplearning4j","8c0e378ec3e9bcc8f7cdffba6935882198e6e375",22,"2020-02-13 01:29:08+02:00","Improving SameDiff tests coverage (#227)  *
Gradients tests added    * Fix for Standard
deviation serialization + test    Signed-off-by:
Alex Black <blacka101@gmail.com>    * More fixes
Signed-off-by: Alex Black <blacka101@gmail.com>
* Test fixed    * Spark config driver host config
for CI    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Op validation timeout
increase    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Gradient check - fix
for low probability test failure due to randomly
all 0s mask    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    Co-authored-by: Alex
Black <blacka101@gmail.com>
",455154,5283,211084,"Alexander Stoyakin","alexander.stoyakin@gmail.com","GitHub","noreply@github.com"
"722","eclipse/deeplearning4j","330a69d4e2eb1224fdf2440ca84a6b242f50314f",4,"2020-02-28 10:37:26+02:00","Shugeo solve ls (#203)  * lstsq op. Initial
commit.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Least squares linear
problem solve op (lstsq). Cpu draft
implementation.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Fixed shape routine and
tests.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Added test for lstsq op.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Rectification for lstsq op implementation.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Corrected test to avoid numerical inconsistensy.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Added prints for check computing.    Signed-off-
by: shugeo <sgazeos@gmail.com>    * Corrected
tests to use evalueate facility instead.
Signed-off-by: shugeo <sgazeos@gmail.com>    * CPU
implementation of MatrixSolveLs op and tests.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Added cuda implementation for helpers with lstsq
op.    Signed-off-by: shugeo <sgazeos@gmail.com>
* Refactored tests for lstsq op.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Added processing
for empty inputs.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Merged tests.    Signed-
off-by: shugeo <sgazeos@gmail.com>    * Refactored
lstsq op for fast case.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Fixed test.    Signed-
off-by: shugeo <sgazeos@gmail.com>    * Refactored
lstsq op.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Fixed some issues with
solve.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Fixed lstsq op to avoid
erros.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Added kernel for giagonal
factor    Signed-off-by: shugeo
<sgazeos@gmail.com>    * lstsq wrapper and
triangular_solve fixed    * Added proper
processing empty inputs and test.    Signed-off-
by: shugeo <sgazeos@gmail.com>    * SequenceMask
test    * Build fixed    * Added proper processing
of empty inputs with solve op.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Mapping added    *
Added check of input shapes with solve op.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Added a couple of tests for lstsq op and minor
changes with cuda helper for one.'    Signed-off-
by: shugeo <sgazeos@gmail.com>    * Tests on    *
Refactored test for lstsq op.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Fixed test    *
Added another approach for lstsq op aka solve_ls.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Finished cpu part for solve_ls op helpers.    *
Added helper for low triangular matrix inversion.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Refactored alternate solve_ls cpu implementation.
Signed-off-by: shugeo <sgazeos@gmail.com>    *
Removed alternate approach for solve_ls op. Added
multithreading with matrix inversion.    Signed-
off-by: shugeo <sgazeos@gmail.com>    * Assert
fixed    * Refactored multithreading for inverse
matricies.    Signed-off-by: shugeo
<sgazeos@gmail.com>    Co-authored-by: Alexander
Stoyakin <alexander.stoyakin@gmail.com>
",455391,5284,211197,"shugeo","sgazeos@gmail.com","GitHub","noreply@github.com"
"723","eclipse/deeplearning4j","e6a7b94fe43efa8212ccdee680ba5113e1d10fdc",11,"2020-03-06 16:07:22+11:00","Loss namespace (#294)  * codegen for SDLoss. WIP.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
first pass of SDLoss.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * wip. Firsat cut of new
op constructors. UNTESTED , NOT COMPILED YET.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
updated op signatures.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * add NDLoss tests.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
fix test.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * adds loss default params. factory.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
Regenerate NDLoss    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * adds tests for null
weights.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * Last few tweaks    Signed-off-by:
Alex Black <blacka101@gmail.com>    Co-authored-
by: Robert Altena <Rob@Ra-ai.com>
",456421,5289,211602,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"724","eclipse/deeplearning4j","a2ec3dbc97a1f2aa9dc8b8c683c2301f58e87aed",13,"2020-03-09 04:35:17+02:00","Image namespace (#176)  * created NDImage.java and
fixed constructor in AdjustContrast.java    *
created NDImage.java and fixed constructor in
AdjustContrast.java    * created NDImage.java and
fixed constructor in AdjustContrast.java v2    *
regenerated NDImage from cleaned Image,kt also
cleaned AdjustContrast.java    * draft of NDCNN
* draft of NDCNN    * started NDRNN    * started
NDRNN    * looking like finished with namespace
* Regenerate namespaces    Signed-off-by:
AlexDBlack <blacka101@gmail.com>    * Add ND4J
namespace methods for new namespaces    Signed-
off-by: AlexDBlack <blacka101@gmail.com>    *
Fixes, cleanup    Signed-off-by: Alex Black
<blacka101@gmail.com>    * More fixes    Signed-
off-by: Alex Black <blacka101@gmail.com>    *
Fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Fix    Signed-off-by:
Alex Black <blacka101@gmail.com>    Co-authored-
by: Andrii Tuzhykov <andrew@unrealists.com>  Co-
authored-by: Andrii Tuzhykov <andrew@konduit.ai>
Co-authored-by: AlexDBlack <blacka101@gmail.com>
",457180,5293,212137,"Andrii T","39699084+atuzhykov@users.noreply.github.com","GitHub","noreply@github.com"
"725","eclipse/deeplearning4j","f79207033b06322ab35bd6000e43a00d472fb9e8",2,"2020-03-20 21:24:39+11:00","SameDiff multi-threaded inference (#263)  * #8682
Don't log openmp BLAS threads for CUDA    Signed-
off-by: Alex Black <blacka101@gmail.com>    *
#8654 Add SameDiff multi-threaded tests    Signed-
off-by: Alex Black <blacka101@gmail.com>    *
Switching to op context for SameDiff exec
Signed-off-by: Alex Black <blacka101@gmail.com>
* Next steps    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Most back to passing
Signed-off-by: Alex Black <blacka101@gmail.com>
* Fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Better tests, test
refactoring    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Small tweak    Signed-
off-by: Alex Black <blacka101@gmail.com>    * Code
duplication reduction    Signed-off-by: Alex Black
<blacka101@gmail.com>    * More code deduplication
Signed-off-by: Alex Black <blacka101@gmail.com>
* CUDA fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * More CUDA fixes
Signed-off-by: Alex Black <blacka101@gmail.com>
* More fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Small fix    Signed-
off-by: Alex Black <blacka101@gmail.com>    * ND4S
small fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>
",458534,5307,212583,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"726","eclipse/deeplearning4j","69c92ca5ae517bcab4f0aad0eec92b128b01644d",69,"2020-03-23 06:28:31+02:00","Learning updaters for gradient (#335)  * libnd4j
raw implementation of sgd upader    Signed-off-by:
Oleg <oleg.semeniv@gmail.com>    * libnd4j some
corrections and simple test added    Signed-off-
by: Oleg <oleg.semeniv@gmail.com>    * libnd4j
some corrections after discussion    Signed-off-
by: Oleg <oleg.semeniv@gmail.com>    * libnd4j
integrate applyScalar    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j raw
implementation of rmsPropUpdater on cpu    Signed-
off-by: Oleg <oleg.semeniv@gmail.com>    * libnd4j
fix operations declaration    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j
rmsPropUpdater added, test cases for sgd, etc
Signed-off-by: Oleg <oleg.semeniv@gmail.com>    *
libnd4j fixed several typos    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j some fixes
and improvements for rmsPropUpdater based on Java
tests    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j fixed cuda
implementation, update tests and corrected
behavior according java tests    Signed-off-by:
Oleg <oleg.semeniv@gmail.com>    * libnd4j adaGrad
updater added    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j one minor
fix for ada grad    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j several more
fixes for ada_grad    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j nesterovs
updater added    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j fixed
nesterovs updater behavior, several typos and
rename file    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j one minor
typo    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j ada max
updater added    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j fixed
several typos in adaMax updater    Signed-off-by:
Oleg <oleg.semeniv@gmail.com>    * libnd4j fixed
several typos in adaMaxUpdater    Signed-off-by:
Oleg <oleg.semeniv@gmail.com>    * libnd4j several
fixes for adaMax, added Adam Updater    Signed-
off-by: Oleg <oleg.semeniv@gmail.com>    * libnd4j
adaDeltaUpdater added, minor fixes for adamUpdater
Signed-off-by: Oleg <oleg.semeniv@gmail.com>    *
libnd4j several fixes for adaDeltaUpdater
Signed-off-by: Oleg <oleg.semeniv@gmail.com>    *
libnd4j nadamUpdater added    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j one more
correction for nadam updater    Signed-off-by:
Oleg <oleg.semeniv@gmail.com>    * libnd4j several
fixes for nadam updater and added amsGradUpdater
Signed-off-by: Oleg <oleg.semeniv@gmail.com>    *
libnd4j several typos fixed in amsGradUpdater
Signed-off-by: Oleg <oleg.semeniv@gmail.com>    *
libnd4j some corrections and added f order support
rmsProp updater    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j added
support of f order for all updaters and modify
tests for testing in place    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j fixed issues
for updates when not in place mode used, added
tests for f order    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j added input
shape checks    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j some
corrections for different cases handling
Signed-off-by: Oleg <oleg.semeniv@gmail.com>    *
libnd4j some code clean up and optimize per
request    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j updaters
refactoring after review    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * SgdUpdater wrapper
Signed-off-by: raver119 <raver119@gmail.com>    *
first test    Signed-off-by: raver119
<raver119@gmail.com>    * RmsPropUpdater added
Signed-off-by: raver119 <raver119@gmail.com>    *
NadamUpdater + NesterovsUpdater    Signed-off-by:
raver119 <raver119@gmail.com>    * AmsGradUpdater
Signed-off-by: raver119 <raver119@gmail.com>    *
AdamUpdater added    Signed-off-by: raver119
<raver119@gmail.com>    * AdaGradUpdater +
AdaDeltaUpdater + AdaMaxUpdater    Signed-off-by:
raver119 <raver119@gmail.com>    * AdaGradUpdater
test added    Signed-off-by: raver119
<raver119@gmail.com>    * libnd4j remove input
parameters parsing through NDArray, split
implementation of helpers to separate files, added
some rename, etc    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j next step to
split operations implementation into separate
files    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j merge master
and minor corrections    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j revert some
changes of split implementation    Signed-off-by:
Oleg <oleg.semeniv@gmail.com>    * libnd4j forgot
to add header file    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * public default
constructors    Signed-off-by: raver119
<raver119@gmail.com>    * ImportClassMapping
updated    Signed-off-by: raver119
<raver119@gmail.com>    Co-authored-by: raver119
<raver119@gmail.com>
",458739,5316,212763,"Oleh","oleg.semeniv@gmail.com","GitHub","noreply@github.com"
"727","eclipse/deeplearning4j","63c9223bc2d95e3311e7f551aac829abf3693875",2,"2020-03-27 00:33:13+11:00","Assorted fixes (#318)  * #8777
MultiLayerNetwork.evaluate(MultiDataSetIterator)
overload    Signed-off-by: Alex Black
<blacka101@gmail.com>    * #8768 SameDiff.equals
Signed-off-by: Alex Black <blacka101@gmail.com>
* #8750 shade freemarker library and switch to it
in DL4J UI    Signed-off-by: Alex Black
<blacka101@gmail.com>    * #8704 DL4J UI redirect
Signed-off-by: Alex Black <blacka101@gmail.com>
* #8776 RecordReaderDataSetIterator builder
collectMetaData fix    Signed-off-by: Alex Black
<blacka101@gmail.com>    * #8718 Fix DL4J
doEvaluation metadata    Signed-off-by: Alex Black
<blacka101@gmail.com>    * #8715 ArchiveUtils -
Add option to not log every extracted file
Signed-off-by: Alex Black <blacka101@gmail.com>
* No exception for evaluations that don't support
metadata    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Fixes    Signed-off-by:
Alex Black <blacka101@gmail.com>    * #8765
CompGraph+MDS fix for SharedTrainingMaster
Signed-off-by: Alex Black <blacka101@gmail.com>
* small fix    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Timeout    Signed-off-
by: Alex Black <blacka101@gmail.com>    * Ignore
Signed-off-by: Alex Black <blacka101@gmail.com>
* Revert freemarker shading    Signed-off-by: Alex
Black <blacka101@gmail.com>    * Ignore    Signed-
off-by: Alex Black <blacka101@gmail.com>
",459146,5323,212899,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"728","eclipse/deeplearning4j","55a3d9bb2cbc6e71f4cc61058e744b065c6cd948",2,"2020-03-31 11:56:56+11:00","Fix loading both model and serializer at once from
stream + re-add checks  Signed-off-by: Alex Black
<blacka101@gmail.com>
",459145,5323,212883,"Alex Black","blacka101@gmail.com","Alex Black","blacka101@gmail.com"
"729","eclipse/deeplearning4j","0a27e9f41d7ceb66f515cb42c9d26a62e0217c03",41,"2020-04-01 04:00:38+03:00","Fix incompatibilities with generated code (#303)
* Cholesky fixed    * Constructors added    *
MatMul wrapper    * Constructor added    * Missing
wrappers added    * Generate Linalg namespace
added    * Output data types    * Unit tests    *
Added mmul    * Code generation    * Code
generated    * Build fixed    * Fixing signatures
* Tests fixed    * Tests fixed    * Added enum
* Fix tests    * Some fixes    * Eye test fixed
* SameDiff: small fix for renameVariable - also
replace variable name in lossVariable list if
necessary    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Some fixes    * Tests
fixed    * Revert wrong fix    * Some fixes    *
Some fixes    * Extending base test class    *
Added pad    * Fixed for generated signatures    *
Fixes due to nd4j codegen    * Backwards
compatibility fixes    * Fixed errors in tests,
reverted wrong changes    * Test fixed    * Added
missing operations used for nd4s operators    *
Compilation fixed    * Added meshgrid    * Fixed
constructors    * fixes    Signed-off-by: Alex
Black <blacka101@gmail.com>    * Fix bad commit
(incorrectly reverted change from master)
Signed-off-by: Alex Black <blacka101@gmail.com>
* Fixed test    Co-authored-by: Alex Black
<blacka101@gmail.com>
",461456,5329,215792,"Alexander Stoyakin","alexander.stoyakin@gmail.com","GitHub","noreply@github.com"
"730","eclipse/deeplearning4j","48102c61d00bd604caa81414b4296275a1abcc2d",2,"2020-04-01 07:13:34+03:00","- correct reshape op for empty shapes (#354)  * -
correct reshape op for empty shape in case of -1
at the end    Signed-off-by: Yurii
<iuriish@yahoo.com>    * Fix test + new reshape op
constructor    Signed-off-by: Alex Black
<blacka101@gmail.com>    Co-authored-by: Alex
Black <blacka101@gmail.com>
",461502,5329,215793,"Yurii Shyrma","iuriish@yahoo.com","GitHub","noreply@github.com"
"731","eclipse/deeplearning4j","d86dd5b131404282d14cb089e0134299b0be2179",51,"2020-04-08 17:20:48+03:00","DL4J and SameDiff integration tests + LSTMLayer
java op class (#353)  * init in this branch
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * Lenetet Mnist
workflow    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * small fix for
calculations    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * for Alex to check
placeholder null pointer issue    Signed-off-by:
Andrii Tuzhykov <andrewtuzhykov@gmail.com>    *
CNN3D workflow    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * state for
launching on dxg to regenterate dl4j examples
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * SD RNN test case
workflow    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * small fixes
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * checkpoint at
lstmBlock: Input array 1 (x) rank must be got
input with rank 2 issue    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * Fix
LSTMLayer inputs order    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * lstm
mismatch with c++ op issue    Signed-off-by:
Andrii Tuzhykov <andrewtuzhykov@gmail.com>    *
LSTMLayer config draft    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * LSTMLayer
config draft v2    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * have doubt I had
to do this    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * NDRNN generated by
codegen    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * LSTMLayerTestCases
draft    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * minor fixes again
* added LSTMLayer testcases to nd4j-tests + setted
Preconditions in LSTMLayer constructors    Signed-
off-by: Andrii Tuzhykov <andrewtuzhykov@gmail.com>
* added lost SDCNNtestcases    Signed-off-by:
Andrii Tuzhykov <andrewtuzhykov@gmail.com>    *
overrided getNumOutputs from DynamicCustomOp in
LSTMLayer and reorganized LSTMLayerOutputs
according to cpp op    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * finished
with LSTMLayerOutputs    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * Fix
MKLDNN platform checks (i.e., when MKLDNN can be
used vs. not)    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Fix LSTMLayerWeights
input order    Signed-off-by: Alex Black
<blacka101@gmail.com>    * More fixes    Signed-
off-by: Alex Black <blacka101@gmail.com>    *
minor fixes    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * fixed LSTMLayer
testcases    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * finished
SameDiffRNNTestCase    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * finished
all testcases + minor fixes    Signed-off-by:
Andrii Tuzhykov <andrewtuzhykov@gmail.com>    *
Multiple generation-related fixes    Signed-off-
by: Alex Black <blacka101@gmail.com>    * Fix
multiple issues    Signed-off-by: Alex Black
<blacka101@gmail.com>    * More fixes    Signed-
off-by: Alex Black <blacka101@gmail.com>    * LSTM
fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Regenerate ND4J
namespaces and fix multiple issues    Signed-off-
by: Alex Black <blacka101@gmail.com>    * changed
SameDiffRNNTestCase    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * Small fix
Signed-off-by: Alex Black <blacka101@gmail.com>
* added  Nd4j.getRandom().setSeed(12345) where
needed    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * #8828 Fix ND4J
profiler NaN/Inf checks when using OpContext
Signed-off-by: Alex Black <blacka101@gmail.com>
* #8828 Fix ND4J profiler NaN/Inf checks when
using OpContext    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Tweak to weight init
for SameDiff CNN test case    Signed-off-by: Alex
Black <blacka101@gmail.com>    * Tweaks for test
cases    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Ignore failing tests
until fixed    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Fix    Signed-off-by:
Alex Black <blacka101@gmail.com>    Co-authored-
by: Alex Black <blacka101@gmail.com>
",463458,5352,218049,"Andrii T","39699084+atuzhykov@users.noreply.github.com","GitHub","noreply@github.com"
"732","eclipse/deeplearning4j","3d15706ffabcea9a36f63076d4ac037cfbc0aba2",1,"2020-04-16 14:53:56+03:00","Lin_space operation improve (#373)  * libnd4j
update linspace op    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * libnd4j #8513 update
lin_space op, tests added    Signed-off-by: Oleg
<oleg.semeniv@gmail.com>    * - minor linspace
tweaks (num_elements now iArg)  - java linspace
updates  - couple of additional tests for linspace
Signed-off-by: raver119 <raver119@gmail.com>    *
roll back timeout change    Signed-off-by:
raver119 <raver119@gmail.com>    Co-authored-by:
raver119 <raver119@gmail.com>
",463765,5361,218247,"Oleh","oleg.semeniv@gmail.com","GitHub","noreply@github.com"
"733","eclipse/deeplearning4j","5fbb04531d0a049180ec05c778f07e4a95cca1ca",39,"2020-04-17 08:16:14+03:00","At cpp ops (#378)  * crelu op added    * crelu op
added    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * minor fixes
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    *
crelu(bp)+transformOpValidation op    Signed-off-
by: Andrii Tuzhykov <andrewtuzhykov@gmail.com>
* added ClipByAvgNorm and DepthwiseConv2DBp
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * ClipByAvgNorm
passes forward check    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    *
EmbeddingLookup draft    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    *
DepthwiseConv2DB gradient check    Signed-off-by:
Andrii Tuzhykov <andrewtuzhykov@gmail.com>    *
EmbeddingLookup and DepthwiseConv2dBp finished +
tests added    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * ImageResize draft
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * DepthwiseConv2DB
gradient check    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * ImageResize passed
tests except helper::resizeFunctor:Non implemented
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * replaced
ImageResizeMethods enum by codegen    Signed-off-
by: Andrii Tuzhykov <andrewtuzhykov@gmail.com>
* minor fixes    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * polished
checkpoint (OPValidationSuite passed and mvn
install build succesfull after codegen)    Signed-
off-by: Andrii Tuzhykov <andrewtuzhykov@gmail.com>
* manually merged LSTMLayerTestCases from master
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    Signed-off-by:
Andrii Tuzhykov <andrewtuzhykov@gmail.com>    *
MaximumBp added and tested    Signed-off-by:
Andrii Tuzhykov <andrewtuzhykov@gmail.com>    *
MergeAddBp draft    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * MergeMaxBp and
MergeAvgBP added and tests passed    Signed-off-
by: Andrii Tuzhykov <andrewtuzhykov@gmail.com>
* minor fix    * draft LSTMLayerBp (big relative
layer in gradient check)    * LSTMLayerBp check
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * LSTMLayerBp check
v2    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * requested changes
(test passes)    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * LSTMLayer
testcases passed gradientcheck    Signed-off-by:
Andrii Tuzhykov <andrewtuzhykov@gmail.com>    *
small LSTMLayer testcase1 improvement (cLast,
yLast)    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * Warnings issue
solved    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * Fixes for MKLDNN
LSTM layer helper    Signed-off-by: Alex Black
<blacka101@gmail.com>    * stable version
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    Co-authored-by:
raver119 <raver119@gmail.com>  Co-authored-by:
Alex Black <blacka101@gmail.com>
",464473,5374,218630,"Andrii T","39699084+atuzhykov@users.noreply.github.com","GitHub","noreply@github.com"
"734","eclipse/deeplearning4j","455a5d112d2189f08f038752cf15b47ab8001f84",37,"2020-04-20 03:27:13+03:00","Fixes for codegen generated classes and build
improvements (#367)  * Input format extended    *
Deleted redundant code    * Added weights format
to conv2d config    * Refactoring    * dl4j base
test functionality    * Different tests base class
per module    * Check base class for dl4j-graph
subproject tests    * Check if test classes extend
BaseDL4JTest    * Use nd4j-common-tests as
transient dependency    * Enums and tests added
* Added codegenerated methods    * Use namespace
methods    * Replace DifferentialFunctionFactory
with codegenerated classes    * Fixed linspace
* Namespaces regenerated    * Namespaces used
instead of factory    * Regenerated base classes
* Input format extended    * Added weights format
to conv2d config    * Refactoring    * dl4j base
test functionality    * Different tests base class
per module    * Check base class for dl4j-graph
subproject tests    * Check if test classes extend
BaseDL4JTest    * Use nd4j-common-tests as
transient dependency    * Enums and tests added
* Added codegenerated methods    * Use namespace
methods    * Replace DifferentialFunctionFactory
with codegenerated classes    * Fixed linspace
* Namespaces regenerated    * Regenerated base
classes    * Regenerated namespaces    * Generate
nd4j namespaces    * INDArrays accepting
constructors    * Generated some ops    * Some
fixes    * SameDiff ops regenerated    *
Regenerated nd4j ops    * externalErrors moved
* Compilation fixes    * SquaredDifference -
strict number of args    * Deprecated code
cleanup. Proper base class for tests.    * Extend
test classes with BaseND4JTest    * Extend test
classes with BaseDL4JTest    * Legacy code    *
DL4J cleanup    * Exclude test utils from base
class check    * Tests fixed    * Arbiter tests
fix    * Test dependency scope fix + pom.xml
formatting    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Significant number of
fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Another round of fixes
Signed-off-by: Alex Black <blacka101@gmail.com>
* Another round of fixes    Signed-off-by: Alex
Black <blacka101@gmail.com>    * Few additional
fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * DataVec missing test
scope dependencies    Signed-off-by: Alex Black
<blacka101@gmail.com>    Co-authored-by: Alex
Black <blacka101@gmail.com>
",464402,5406,220015,"Alexander Stoyakin","alexander.stoyakin@gmail.com","GitHub","noreply@github.com"
"735","eclipse/deeplearning4j","191bda3228cba86c8b74143e6708ff28fdb120b5",19,"2020-04-20 16:57:00+10:00","Base namespace (#287)  * wip    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * up to assign
operation.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * fix Imax, IMin.    Signed-
off-by: Robert Altena <Rob@Ra-ai.com>    * concat.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
dynamicPartition    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * new ops up to gte.    Signed-
off-by: Robert Altena <Rob@Ra-ai.com>    * wip
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
updated review items.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * up to matchCondition.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
wip    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * up to OneHot.    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * wip. up to
permute.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * wip. up to rank.    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * wip. up to
scatterMul.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * resolving code review issues.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
wip. inclides UnsortedSegment ops.    Signed-off-
by: Robert Altena <Rob@Ra-ai.com>    * wip. up to
stridedSlice.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * fix stridedSlice.    Signed-
off-by: Robert Altena <Rob@Ra-ai.com>    * first
pass of SDBaseops.kt complete.    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * fix review
items.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * wip    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * put branch in compilable
state.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * add NDBaseTest. fix dynamicPartition
signature. failed fix of assign.    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * make tests
public.    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * adds tests up to invertedPermutation.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
fix ScalarEquals, Assign.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * wip    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * updates
NDBaseTest.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * updates 'check' comments
based on test pass/fail.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * fix scalar ops. Update
tests,    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * dev-tools review items. wip.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
dev-tools code review items.    Signed-off-by:
Robert Altena <Rob@Ra-ai.com>    * Test fixes
Signed-off-by: Alex Black <blacka101@gmail.com>
* complete review items.    Signed-off-by: Robert
Altena <Rob@Ra-ai.com>    * Comment for logged
issue; fix test case    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Fixes    Signed-off-by:
Alex Black <blacka101@gmail.com>    * More fixes
* wip    Signed-off-by: Robert Altena <Rob@Ra-
ai.com>    * undo changes to Nd4jCpu.java
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
update tests.    Signed-off-by: Robert Altena
<Rob@Ra-ai.com>    * Fixes and regenerate
Signed-off-by: AlexDBlack <blacka101@gmail.com>
* Small test fixes    Signed-off-by: AlexDBlack
<blacka101@gmail.com>    * small fixes to tests.
Signed-off-by: Robert Altena <Rob@Ra-ai.com>    *
Cleanup    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Fixes    Signed-off-by:
Alex Black <blacka101@gmail.com>    * Small
CUDAExecutioner fix    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Fixes    Signed-off-by:
Alex Black <blacka101@gmail.com>    * Small
CudaExecutioner fix    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Another small
CudaExecutioner fix    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Another small
CudaExecutioner fix    Signed-off-by: Alex Black
<blacka101@gmail.com>    Co-authored-by: Robert
Altena <Rob@Ra-ai.com>
",464903,5400,220161,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"736","eclipse/deeplearning4j","2a488efb1b723386eda004d8b35371a1f9e4d46b",1,"2020-04-22 22:54:29+10:00","DL4J CNN2D layers NHWC support (#376)  * First
steps for DL4J NHWC support    Signed-off-by: Alex
Black <blacka101@gmail.com>    * Conv2d NHWC
forward pass works    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Conv2d NHWC backprop
Signed-off-by: Alex Black <blacka101@gmail.com>
* Conv2d backprop + fixes; subsampling fwd/bwd;
improve tests    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Zero padding layer NHWC
support    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Cropping2D NHWC support
Signed-off-by: Alex Black <blacka101@gmail.com>
* Deconv2d NHWC + clean up NHWC test framework
code duplication    Signed-off-by: Alex Black
<blacka101@gmail.com>    * CnnLossLayer NHWC
support    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Upsampling and
batchnorm NHWC support    Signed-off-by: Alex
Black <blacka101@gmail.com>    * Space to depth
Signed-off-by: Alex Black <blacka101@gmail.com>
* Depthwise pt1    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Depthwise pt2 and LRN
Signed-off-by: Alex Black <blacka101@gmail.com>
* SpaceToBatch    Signed-off-by: Alex Black
<blacka101@gmail.com>    * LocallyConnected2D
Signed-off-by: Alex Black <blacka101@gmail.com>
* Fix depthwise nhwc support    Signed-off-by:
Alex Black <blacka101@gmail.com>    * Upsampling
NHWC - workaround for #8857    Signed-off-by: Alex
Black <blacka101@gmail.com>    * Workaround for
#8859 - SpaceToDepth    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Batch normalization
workaround - #8860    Signed-off-by: Alex Black
<blacka101@gmail.com>    * cuDNN fixes    Signed-
off-by: Alex Black <blacka101@gmail.com>    *
Switch cudnn conv2d to permute based impl due to
'true' NHWC not working    Signed-off-by: Alex
Black <blacka101@gmail.com>    * cuDNN subsampling
helper NHWC fix    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Upsampling/batchnorm
fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Small fixes    Signed-
off-by: Alex Black <blacka101@gmail.com>    *
CNN2D NHWC gradient checks (make
CNNGradientCheckTest parameterized)    Signed-off-
by: Alex Black <blacka101@gmail.com>    * Gradient
checks, SConv2d, bunch of fixes    Signed-off-by:
Alex Black <blacka101@gmail.com>    * Small fixes
Signed-off-by: Alex Black <blacka101@gmail.com>
* Global pooling NHWC support    Signed-off-by:
Alex Black <blacka101@gmail.com>    * Also test
both float and double for cuDNN NHWC tests
Signed-off-by: Alex Black <blacka101@gmail.com>
* Javadoc    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Ignore failing keras
import test until next PR    Signed-off-by: Alex
Black <blacka101@gmail.com>
",467471,5409,220333,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"737","eclipse/deeplearning4j","2ecabde500dc64cf87e362f5b8edb1fdb139b246",1,"2020-04-23 06:16:44+04:00","DL4J NWC support for RNNs (#379)  * merge conf
* merge conf    * conf fix    * NWC initial    *
revert pom.xml    * revert pom.xml    * default
NCW    * bidirectional+some tests    *
RNNOutputLayer, RNNLossLayer, Graves + tests    *
rnn tests    * LastTimeStep + tests    * masking +
tests    * graves, rnnoutput, rnnloss    * nwc
timeseries reverse    * more tests    * bi-
gravelstm test    * fixes    * rnn df tests basic
* bug fix: cudnn fallback    * bug fix    * misc
* gravelstm tests    * preprocessor fixes    *
TimeDistributed    * more tests    * RnnLossLayer
builder def val    * copyright headers    * Remove
debug println    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Small fix + test naming
Signed-off-by: Alex Black <blacka101@gmail.com>
* Parameterized test name    Signed-off-by: Alex
Black <blacka101@gmail.com>    * fix LastTimeStep
masked    * Fix MaskZero mask datatype issue
Signed-off-by: Alex Black <blacka101@gmail.com>
* rem println    * javadoc    * Fixes    Signed-
off-by: Alex Black <blacka101@gmail.com>    Co-
authored-by: Alex Black <blacka101@gmail.com>
",468414,5412,220403,"Fariz Rahman","farizrahman4u@gmail.com","GitHub","noreply@github.com"
"738","eclipse/deeplearning4j","bd376ca9939eb5bdc60e57d8608b06a40f48cdc1",18,"2020-04-24 18:12:46+03:00","GRU and GRUBp (#410)  * GRU and GRUBp ops added
and tested    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * minor polishing
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * few requested
changes    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * regenerated
namespace + small fix in RnnOpValidation
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * Fix bad character
in RnnOpValidation    Signed-off-by: Alex Black
<blacka101@gmail.com>    Co-authored-by: Alex
Black <blacka101@gmail.com>
",468611,5414,220470,"Andrii T","39699084+atuzhykov@users.noreply.github.com","GitHub","noreply@github.com"
"739","eclipse/deeplearning4j","58b11bfeccd346ee0bdaf27cfb541ab95172beff",15,"2020-04-25 16:56:02+03:00","Map C++ ops to Java (#392)  * MergeMaxIndex,
ReverseBp, Tri, Triu and TriuBp added    Signed-
off-by: Andrii Tuzhykov <andrewtuzhykov@gmail.com>
* Upsamling3d draft    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * minor fix
(upsampling3dBp inputDatatype.size=2)    Signed-
off-by: Andrii Tuzhykov <andrewtuzhykov@gmail.com>
* polished testcases    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * matching
of Upsampling3d input format according to cpp iArg
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * ops generated from
codegen    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * requested changes
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * added super() for
Triu    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * everything passes
except TriuOp    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * Tri op dtype arg
(output datatype config support) + default float32
Signed-off-by: Alex Black <blacka101@gmail.com>
* Small fixes    Signed-off-by: Alex Black
<blacka101@gmail.com>    * temporary commit with
manually edited sd/nd ops    Signed-off-by: Andrii
Tuzhykov <andrewtuzhykov@gmail.com>    * Cannot
use 'val' here because initializer expression does
not have a representable type: Type cannot be
resolved    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * all tests passed
Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * few requested
changes    Signed-off-by: Andrii Tuzhykov
<andrewtuzhykov@gmail.com>    * Small fixes
Signed-off-by: Alex Black <blacka101@gmail.com>
* Ignore reverse_bp test due to logged issue
Signed-off-by: Alex Black <blacka101@gmail.com>
* Fix reverse op    Signed-off-by: Alex Black
<blacka101@gmail.com>    * Fix MergeMaxIndex dtype
-> iarg    Signed-off-by: Alex Black
<blacka101@gmail.com>    Co-authored-by: Alex
Black <blacka101@gmail.com>
",468992,5421,220742,"Andrii T","39699084+atuzhykov@users.noreply.github.com","GitHub","noreply@github.com"
"740","eclipse/deeplearning4j","3c28caa52aae9f9903770a21c7f352caca7ca465",1,"2020-04-26 18:32:49+10:00","Add ResourceUtils.listClassPathFiles (#416)
Signed-off-by: Alex Black <blacka101@gmail.com>
",469219,5422,220819,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"741","eclipse/deeplearning4j","bc8a9d1996a1c5805d324ea4fc94e712d46b13ab",1,"2020-04-28 20:38:16+03:00","allocation of buffers backed by workspaces with 1
method call instead of 3 now (#420)  Signed-off-
by: raver119@gmail.com <raver119@gmail.com>
",469858,5428,220903,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"742","eclipse/deeplearning4j","c1e4613dba3190dfc9057d14375b93efc1514f40",2,"2020-05-01 22:11:56+03:00","rootDir null validation in
ExistingMiniBatchDataSetIterator  Signed-off-by:
raver119@gmail.com <raver119@gmail.com>
",469399,5427,220902,"raver119@gmail.com","raver119@gmail.com","raver119@gmail.com","raver119@gmail.com"
"743","eclipse/deeplearning4j","dab75fa50b1ad356fd3c328fe8522e4023a697d5",6,"2020-01-31 16:05:45+01:00","FEATURE: change API of WordVectorSerializer. Add
posibility to read models from InputStreams and
not only from files  Signed-off-by: hosuaby
<alexei.klenin@gmail.com>
",469483,5427,220914,"hosuaby","alexei.klenin@gmail.com","hosuaby","alexei.klenin@gmail.com"
"744","eclipse/deeplearning4j","cf24728f353ddd47b6fc56fb7f16ea9b359abe2a",1,"2020-05-06 14:56:22+02:00","tests for auto-attach and manual attach; improve
JavaDoc  Signed-off-by: Tam√°s Fenyvesi
<tamas.fenyvesi@doknet.hu>
",469568,5427,220942,"Tamás Fenyvesi","tamas.fenyvesi@doknet.hu","Tamás Fenyvesi","tamas.fenyvesi@doknet.hu"
"745","eclipse/deeplearning4j","061348565406154cdb584c50170633047aa11d57",12,"2020-05-08 20:59:39+03:00","compression ops (#436)  * Added declarations for
decode/encode_bitmap ops.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Added implementation for
bitmap encoding/decoding ops.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Added helpers for
encode/decode bitmap ops.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Refactored encodingBitmap
helper.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * threshold encode/decode
skeleton    * helper skeleton    * minor import
fix    * encoder shape fn & op impl    *
thresholdEncode cpu impl    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    *
thresholdDecode cpu impl    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * Only
cosmetical changes.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * placeholder    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* Added cuda implementation for bitmap decode
helper.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * cuda thresholdEstimate
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * cuda thresholdDecode
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * next step    Signed-off-
by: raver119@gmail.com <raver119@gmail.com>    * -
nano cmakelist update (get rid of Clion section)
- fixed forgotten throw in AtomicTests    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* thesholdEncode cuda impl    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * Added
tests for bitmap encoding/decoding ops.    Signed-
off-by: shugeo <sgazeos@gmail.com>    * Fixed
tests for encode/decode bitmaps.    Signed-off-by:
shugeo <sgazeos@gmail.com>    * Refactored
decode/encode helpers.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * Fixed crashes with bitmap
decode/encode helpers.    Signed-off-by: shugeo
<sgazeos@gmail.com>    * bitmap encode/decode CPU
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * bitmap encode/decode
CUDA    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * C API removed for
threshold/bitmap encode    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    *
EncodeBitmap/DecodeBitmap Java side    Signed-off-
by: raver119@gmail.com <raver119@gmail.com>    *
EncodeThreshold/DecodeThreshold Java side
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    *
EncodeThreshold/DecodeThreshold Java side
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * few more tests for
threshold encoding    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * minor
test tweak    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * two special tests
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * encodeBitmap CPU fix
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    *
parallel_long/parallel_double proper spans fix
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * encodeThreshold CUDA fix
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * nano fix    Signed-off-
by: raver119@gmail.com <raver119@gmail.com>    *
grid tweaks    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * RTX adaptation for
thresholdEncode    Signed-off-by: raver119
<raver119@gmail.com>    * don't allow threshold
encoding for length < 2    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * get
rid of NDArrayCompressor in EncodingHandler
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * one more minor update of
EncodingHandler    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * one
more minor tweak of EncodingHandler    Signed-off-
by: raver119@gmail.com <raver119@gmail.com>    * -
matmul allows integer data types use  -
EncodingHandler boundary default value  - few
tests for integer matmul    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * minor
fix of CUDA bitmap encode    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    *
boundary changed to integer everywhere    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* boundary changed to integer everywhere
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * re-enable CUDA
deallocator    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * threshold encoder fix
for systems without omp    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * -
encode_threshold now requires non-negative
boundary  - minor tweak in EncodingHandler
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * restore parallelism in
decode_bitmap    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * fall back to omp for
encode_bitmap cpu    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    *
single time casts    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * -
additional test for encode_threshold  - sync
buffers to device before calling for shape
function    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    Co-authored-by: shugeo
<sgazeos@gmail.com>
",469470,5430,220907,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"746","eclipse/deeplearning4j","c396fcb9605999e6586b95d460bd2524e0f8589e",4,"2020-05-13 08:12:07+03:00","More pre-release fixes (#456)  * - numPrefixBlocks
fix for threshold_encoding  - temparrays pointers
fixed    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * auto configuration of
memory workspace for gradients sharing    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* limit sparse encoding message size    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* one more workspace test    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * one
more CUDA-specific test    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * one
more CUDA-specific workspace test    Signed-off-
by: raver119@gmail.com <raver119@gmail.com>    *
one more CUDA-specific workspace test    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* one more CUDA-specific workspace test    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* add separate host/device reset for circular
workspace mode    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * new
PW builder method for encoder memory amount
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * ""inplace"" execution for
threshold encoding    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>
",467866,5406,219977,"raver119","raver119@gmail.com","GitHub","noreply@github.com"
"747","eclipse/deeplearning4j","ee3e059b12ac4994289f17319792f557982391c9",2,"2020-06-05 11:49:02+10:00","DL4J/DataVec: Fix Yolo2OutputLayer and
ObjectDetectionRecordReader support for NHWC data
format (#483)  * Fix Yolo2OutputLayer for NHWC
data format    Signed-off-by: Alex Black
<blacka101@gmail.com>    *
ObjectDetectionRecordReader NHWC support
Signed-off-by: Alex Black <blacka101@gmail.com>
",470322,5434,221112,"Alex Black","blacka101@gmail.com","GitHub","noreply@github.com"
"748","eclipse/deeplearning4j","029b84e2b7c4856473e2ace796f915d00695ca91",32,"2020-07-26 21:59:27+09:00","Development updates (#9053)  * RL4J: Add generic
update rule (#502)    Signed-off-by: Alexandre
Boulanger <aboulang2002@yahoo.com>    * Shyrma
reduce (#481)    * - start working on improving of
cpu legacy code for reduce ops    Signed-off-by:
Yurii <iuriish@yahoo.com>    * - further work on
improving legacy loops    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - still working on
improving reduce ops    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - further work on
improving reduce ops    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - testing speed run of
new reduce op    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - working on improvement
of default loop for reduce op    Signed-off-by:
Yurii <iuriish@yahoo.com>    * - update signatures
of stuff which calls reduce ops    Signed-off-by:
Yurii <iuriish@yahoo.com>    * - make corrections
in cuda reduce kernels    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - change loop for default
case in broadcast legacy ops    Signed-off-by:
Yurii <iuriish@yahoo.com>    * - comment some
shape stuff    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - comment unnecessary
prints in RNGtests    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - finish to resolve
conflicts after master has been merged    Signed-
off-by: Yurii <iuriish@yahoo.com>    * - get rid
of some compilation mistakes of cuda stuff
Signed-off-by: Yurii <iuriish@yahoo.com>    * -
minor changes    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - further search for bug
causing crash on java test    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - add scalar case in
reduce_ ... exec stuff    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - minor corrections in
NAtiveOps.cu    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - add switch to scalar
case execReduceXD functions    Signed-off-by:
Yurii <iuriish@yahoo.com>    * - add support for
vectors old shape in ConstantShapeHelper::createSh
apeInfoWithNoUnitiesForReduce    Signed-off-by:
Yurii <iuriish@yahoo.com>    * - correct cuda
mirrorPad    Signed-off-by: Yurii
<iuriish@yahoo.com>    * - add support for vectors
old shape in cuda
createShapeInfoWithNoUnitiesForReduce    Signed-
off-by: Yurii <iuriish@yahoo.com>    Co-authored-
by: raver119 <raver119@gmail.com>    * Add support
for CUDA 11.0 (#492)    * Add support for CUDA
11.0    * libnd4j tweaks for CUDA 11    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* bindings update, again?    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * *
Update versions of JavaCPP Presets for FFmpeg,
OpenBLAS, and NumPy    * update API to match CUDA
8    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * * Update version of
JavaCPP Presets for CPython    * C++ updated for
cuDNN 8.0    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * one more test    Signed-
off-by: raver119@gmail.com <raver119@gmail.com>
* one more test    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * one
more test    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * 128-bit alignment for
workspaces    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * change seed in 1 test
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * Fix dependecy
duplication in python4j-parent pom    * Fix group
id for in python4j-numpy    * few tests tweaked
Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    * Remove macosx-x86_64-gpu
from nd4j-tests-tensorflow    * few minor tweaks
for IndexReduce    Signed-off-by:
raver119@gmail.com <raver119@gmail.com>    * one
test removed    Signed-off-by: raver119@gmail.com
<raver119@gmail.com>    Co-authored-by:
raver119@gmail.com <raver119@gmail.com>  Co-
authored-by: Serhii Shepel
<9946053+sshepel@users.noreply.github.com>    *
RL4J: Add SyncTrainer and AgentLearnerBuilder for
a few algorithms (#504)    Signed-off-by:
Alexandre Boulanger <aboulang2002@yahoo.com>
Co-authored-by: Alexandre Boulanger
<44292157+aboulang2002@users.noreply.github.com>
Co-authored-by: Yurii Shyrma <iuriish@yahoo.com>
Co-authored-by: raver119 <raver119@gmail.com>  Co-
authored-by: Serhii Shepel
<9946053+sshepel@users.noreply.github.com>
",472382,5468,221907,"Samuel Audet","samuel.audet@gmail.com","GitHub","noreply@github.com"
"749","airbnb/lottie-android","5b9bd239567df9d7935b949ef27f9c40ffee9745",2,"2016-10-10 00:35:12-07:00","Renamed all classes from Lotte to Lottie
",3570,59,35,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"750","airbnb/lottie-android","5be751beddd0a22da6e506f82845e351e56feb4d",1,"2016-11-14 16:40:10-08:00","Refactored Composition parsing to be handled by
LottieComposition  This should pave the way for
LottieViewAnimator
",3741,61,58,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"751","airbnb/lottie-android","4446243a892440119e706b4516c513b69e351550",1,"2016-12-06 14:51:20-08:00","Renamed RootLayer to LottieDrawable
",3967,60,83,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"752","airbnb/lottie-android","07430f15907a101bb9f498e4b90763ef711c8608",2,"2017-02-15 23:02:32-08:00","Major refactor to store all animatable data in
keyframes (#110)  Prior to this, all animatable
data was stored in lists of values, key times, and
interpolators. This cleans that up significantly
and stores it all in a new Keyframe class. The new
code is much more readable and maintainable.
",3956,69,220,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"753","airbnb/lottie-android","1c9921e5b2057f3df73ad3bd1e3b2d1b3562a192",5,"2017-02-20 14:48:27-08:00","Add support for images (#136)  #71
",4216,76,237,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"754","airbnb/lottie-android","127ee1456e1b8289c0d23443d17baf92029b321e",5,"2017-02-20 20:09:01-08:00","Extract more factory classes (#139)  Another
change for #3    Pretty mechanical and
straightforward change. Extracted a bunch of
constructors into more static inner factory
classes with a newInstance method by convention.
Later on we can pull out all these factories into
a separate module that provides the default json
parsing implementation.
",4387,81,237,"Felipe Lima","felipe.lima@gmail.com","Gabriel Peal","gpeal@users.noreply.github.com"
"755","airbnb/lottie-android","8439bdc370a9ca9a8d6f9e9272fd24774aacacfd",1,"2017-03-05 23:28:16-08:00","Add an image asset delegate  This allows the user
to provide their own bitmaps from wherever they
need to retrieve them from. Fixes #177
",4774,86,284,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"756","airbnb/lottie-android","38da4bb8d1aa7a5819a761669f454a9eea7c974d",6,"2017-03-06 22:09:31-08:00","Moved away from drawables and began splitting
layers into content
",4706,87,286,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"757","airbnb/lottie-android","70efea2e0ac59d22e5ebb4192757741453d8ea8e",12,"2017-03-09 23:22:42-08:00","Ground up rendering engine refactor (#184)  This
is a ground up refactor of the rendering engine.
At a high level:    Layers now map much more
closely to the way they are structured in After
Effects.  ShapeLayer, PrecompLayer, NullLayer,
SolidLayer, and ImageLayer are now individual
subclasses of BaseLayer.  Everything is now a
drawing and or path content and has the same layer
structure as appears in After Effects.  Drawing
contents are fill and stroke not shape like they
used to be. This allows features like fill type
and merge paths.  Cumulative parent matrices are
now sent all the way down to the shape instead of
scaling the canvas. This allows a single transform
to be done on the shape itself. It may also
improve the ability to use hardware acceleration
because shapes will be properly scaled up rather
than being on a canvas that's scaled.
",4578,97,281,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"758","airbnb/lottie-android","78c65202e53b1e15e93273cce7bc5004db8601c6",4,"2017-03-15 23:52:27-07:00","Initial support for linear gradients (#199)  #47
",4779,101,304,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"759","airbnb/lottie-android","f027871b112a63502ffabb446331bcae411ec6aa",1,"2017-03-19 14:21:13-07:00","Improve the performance of mattes and masks
200-1000+%  (#201)  The largest performance
bottleneck for mattes and masks was the saveLayer
call that redirected rendering to an offscreen
buffer.    Perviously, it would call saveLayer
with the entire bounds of the layer. However, it
now actually measures layer bounds and only saves
that small region. All compositions with a mask or
matte should see a very significant performance
improvement. For animations with small masks or
mattes on a large composition or many masks and
mattes, the improvements could be even greater.
Some of my test animations went from 5 to 30+ fps.
Fixes #167
",4993,101,330,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"760","airbnb/lottie-android","245d06888d48aa1b9e3e9169404bf0f53114aa50",2,"2017-03-19 17:57:22-07:00","Added initial support for trim paths individually
(#204)
",5151,101,336,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"761","airbnb/lottie-android","6e1afcb30e06d0c43c01f31dd7e644f69c785305",2,"2017-03-19 22:30:58-07:00","Added support for gradient stroke (#205)  Fixes
#195
",5361,105,340,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"762","airbnb/lottie-android","2a4903bf50c2d0714cfb20967bdb98474a08b813",2,"2017-03-24 11:48:54-07:00","Ability to set color filter (#207)  This change
allows you to set arbitrary color filters or an
entire composition, an entire layer, or even a
specific content.    Fixes #138
",5599,105,398,"Sean F Chan","seaniec88@gmail.com","Gabriel Peal","gpeal@users.noreply.github.com"
"763","airbnb/lottie-android","091bcdaba064604bfcba751530ec1e826170af60",3,"2017-04-04 22:12:48-07:00","Add `@Nullable` to ColorFilterData constructor
",5634,106,420,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"764","airbnb/lottie-android","fb40cab87e9b3072eb79db1c267ba777bc2ba2d4",1,"2017-04-04 23:47:24-07:00","Return null instead of NullLayer for unsupported
layers  This should also prevent strange crashes
from unsupported layers.
",5667,106,472,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"765","airbnb/lottie-android","452de51c5eabedbf70ef0a01affb44b9b72e08a7",1,"2017-04-25 15:22:26-04:00","Add tests for XML color filter
",5817,108,481,"Ramona Harrison","ramona.harrison@nytimes.com","Gabriel Peal","gpeal@users.noreply.github.com"
"766","airbnb/lottie-android","938b3f6af17830146097c96aab56f662c0068240",1,"2017-05-07 16:50:28-04:00","Save imageAssetsFolder in SavedState  Fixes #285
",5824,108,481,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"767","airbnb/lottie-android","75a30a0000b0069c13b82d842c24df5e29f6b6e5",3,"2017-05-09 22:22:35-04:00","Prevent animations with mattes from scaling larger
than the canvas  Doing so causes the content to
get clipped since the offscreen buffer the matte
renders on is too small.
",5862,108,492,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"768","airbnb/lottie-android","604bd25288743f6b6c9a45a1c78172717d61c104",4,"2017-05-29 12:18:51-07:00","Allow you to update the Bitmap asset dynamically
Fixes #294
",5904,109,504,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"769","airbnb/lottie-android","3da9067eda846aa2ca0a359328bd683b8795ef73",2,"2017-05-29 13:14:51-07:00","Fail in logcat instead of throwing an exception
",5930,109,510,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"770","airbnb/lottie-android","7afc1185b2844f91edb70efe1ee61fd26ce5f54c",2,"2017-06-15 16:05:03-07:00","Basic text works
",6279,115,543,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gpeal@users.noreply.github.com"
"771","airbnb/lottie-android","b9f3d85d2e382540428ab8265d893532987978b8",2,"2017-06-15 17:07:34-07:00","Color works
",6301,116,543,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gpeal@users.noreply.github.com"
"772","airbnb/lottie-android","8d0fd88ff945008747c7d9d7f5eb968f687a6692",1,"2017-06-26 16:50:25-07:00","Rename ImageAssetBitmapManager to
ImageAssetManager
",6429,117,519,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"773","airbnb/lottie-android","85cd652521feaf848f4725069c480ab09cff413c",9,"2017-06-27 18:34:44-07:00","Add support for rendering fonts and dynamic text
(#353)  This support builds on text glyph support
by supporting rendering custom fonts as well as
custom text through a text delegate. This enables
Lottie to be used with translations as well as
interactive animations.    All text operations
such as fills, strokes, tracking, etc are
supported by this.    Fixes #173   Fixes #349
Fixes #350   #352
",6724,122,600,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"774","airbnb/lottie-android","5cf67028e882659af366b4504096d77427a879a8",2,"2017-06-28 18:30:16-07:00","Adds a performance tracker to track render times
per layer
",7025,126,606,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"775","airbnb/lottie-android","331cb02a3ce2a7eb3d5949b8804fe107c97990d8",2,"2017-06-29 15:58:09-07:00","Add support for time remapping (#360)  Fixes #330
",7064,126,600,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"776","airbnb/lottie-android","811993f56df83b3b845958e3c70e65e3308cec5b",3,"2017-06-29 16:50:46-07:00","Added a ContentModel interface (#361)  This
removes the needs for Object type generics and
instanceof checks
",7067,127,598,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"777","airbnb/lottie-android","810ac8e72da5498c9024f67ae44d6a115295fad9",8,"2017-07-01 11:52:00-07:00","Added support for repeaters (#364)  Fixes #194
",7251,130,634,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"778","airbnb/lottie-android","2df1c2bac1cb886dce38d64e0b3a80d603e8dc51",19,"2017-08-27 15:54:26-07:00","Organized classes into packages with @RestrictTo
",6811,125,619,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"779","airbnb/lottie-android","cf92c21e8bb3b8e74c6863f17d6de8fbffdf3977",3,"2017-08-29 18:51:52-07:00","Added a second generic type to AnimatableValue
This is helpful for dynamically updated position
",6810,125,619,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"780","airbnb/lottie-android","7efb9f16bc24dd588d50dfe323184c837e89ef6a",1,"2017-12-12 21:06:37-05:00","Create a KeyPath API in preparation for dynamic
values (#562)  See KeyPath docs for more info.
This isn't functional yet but puts the foundation
in place for dynamic properties.
",7479,130,948,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"781","airbnb/lottie-android","d8fcf0ab1fca5aff58c797d6e85917d21a2f5cc1",18,"2017-12-14 11:52:34-05:00","Dynamic properties (#564)  This PR adds the
ability to dynamically change properties at
runtime.  The key parts are targeting content(s)
with a KeyPath and then updating their value
either with a LottieStaticValueCallback for a
single fire and forget value or a
LottieValueCallback which will be called with the
current animation value information every time the
animation is rendered. See the docs for relevant
classes for more info.
",7942,139,1090,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"782","airbnb/lottie-android","ceaab4a21374f02cfcbdeb79ddd7aa988f2ae97a",9,"2017-12-14 16:23:47-05:00","[Breaking] Added support for ColorFilter value
callbacks (#566)  This is a breaking change. All
previous ColorFilter APIs have been removed and
should now migrate to use the new API.    To
migrate:  layer + content -> `new
KeyPath(layerName, ""**"", contentName);`  layer ->
`new KeyPath(layerName, ""**"");`  everything ->
`new KeyPath(""**"");`    It will be slightly more
efficient to use a fully qualified name rather
than a globbed version.
",7938,139,1035,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"783","airbnb/lottie-android","9bae2d8a705833c06ba43980ceaad320fd5f3918",5,"2017-12-15 13:49:47-05:00","Removed InitialValue code (#568)  Internal
optimization.  Cleans up code and should make
switching to JSONReader easier.
",7883,139,1036,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"784","airbnb/lottie-android","8e9c76eba57f6b01530865f36144e1433b0d10a6",2,"2018-01-12 13:23:04-08:00","Cleaned up and updated LottieComposition factory
methods (#593)  ### Added  *
`LottieAnimationView#setComposition(JsonReader)`
* `LottieAnimationView#setComposition(String
jsonString)`  ### Removed  *
`LottieComposition#fromJson(Resources,
JSONObject)`. Replaced with one that takes a
String and one that takes a JsonReader.  ###
Deprecated  *
`LottieAnimationView#setComposition(JSONObject)`
This also removes context/resources as a parameter
from several methods because it is not needed
anymore.
",8612,144,1088,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"785","airbnb/lottie-android","41e3b84d14bbbe2bb5fd89c37c99a988609922e9",1,"2018-01-15 13:49:04-08:00","Moved all Keyframe parsing to Parser classes
",8754,162,1090,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"786","airbnb/lottie-android","0a9307b239bcdfb9529c99d8d8597b96a42358dd",2,"2018-01-15 15:12:53-08:00","Moved AnimatableValue parsing to Parser classes
(#596)
",8712,169,1090,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"787","airbnb/lottie-android","4eda1daf29a9e099b1e30555bad08501d6e2b83e",4,"2018-01-15 15:24:34-08:00","Moved more AnimableValue parsing to Parser classes
",8724,173,1090,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"788","airbnb/lottie-android","9679d0e22d96103ffb76fa3e0f1366f4f849ac7c",1,"2018-01-15 15:47:48-08:00","final and scope cleanup from IntelliJ inspect code
",8713,174,1094,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"789","airbnb/lottie-android","9a79436abeb6df2ea6e61d596700feaee0534cd5",2,"2018-01-30 18:54:38-08:00","Simplified dynamic properties API  * Migrated 7
params to a single data class. * Added an overload
that takes an interface and enables SAMs in
Kotlin.
",8751,176,1115,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"790","airbnb/lottie-android","aa1aef49c2dbad4004c7b39d6d5da7fb77fe9043",3,"2018-01-31 08:27:06-08:00","Cleaned up LottieValueAnimator classes (#608)
Reduced the number of LottieValueCallback classes
and added optional constructor initialization.
",8735,172,1115,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"791","airbnb/lottie-android","a212bc8d8c5737a46deafb098e273937d77477b9",2,"2018-02-13 22:17:34-08:00","Reimplemented LottieValueAnimator (#624)  This
version of LottieValueAnimator replaces all of the
animator looping logic with a self-managed
Choreographer callback architecture.     There are
two primary reasons for the change:  1) The
conversion from setting frames to setting the
currentPlayTime of the value animator often led to
tricky floating point and rounding issues (#491,
#610)  2) The ValueAnimator APIs and
implementation have changed in different platform
versions. For example, in some versions, the
animator will report as running in the update
callbacks and for some, it won't. (#555, #615)
There are other benefits as well:  1) Animations
can now run independently of the animator duration
scale setting.  2) Frame rates are now respected.
Animations will now render at the fps specified in
After Effects rather than 60fps.    I had to bump
the minSdk to 16 to support Choreographer.
",8974,173,1124,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"792","airbnb/lottie-android","6ab007fd9a3982d9347c16330846d3f7d2671884",1,"2018-03-05 14:51:43-08:00","Added an api to create a composition without
closing the InputStream
",8952,172,1128,"Gabriel Peal","gabriel.peal@airbnb.com","Gabriel Peal","gabriel.peal@airbnb.com"
"793","airbnb/lottie-android","db1fec20584d16444c6f8f743c165b82453775c8",1,"2018-03-11 00:45:15-08:00","Remove null restriction on value callbacks (#675)
This prevented you from clearing a ColorFilter
Fixes #638
",8949,171,1140,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"794","airbnb/lottie-android","80f6c89a2c66ba0fefbd112cc53d3bbabd5bc89f",1,"2018-05-07 18:03:35+01:00","Properly register ColorFilter animations (#753)
ColorFilter animations were not properly
registered as animations so they wouldn't update
the animation when changed.  Fixes #690
",9157,170,1171,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"795","airbnb/lottie-android","6b291eb66b699aa40807a1e5af39e490778b3b1e",1,"2018-05-09 19:45:25+02:00","Fixed min/max progress (#754)  The order of
parameters was flipped for lerp.  Added tests and
did an audit of all other lerp calls to make sure
they were all fine.  Fixes #739
",9213,171,1171,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"796","airbnb/lottie-android","c32f18ede7873f4c5e16493456340ef9878830d9",8,"2018-07-15 22:08:03-07:00","Refactored LottieCompositionFactory APIs (#830)
Replaced existing `LottieComposition.Factory`
methods with a new `LottieCompositionFactory`  The
main purpose of this is to provide a clean way to
handle exceptions. Today, parsing exceptions are
thrown on a background thread and impossible to
handle. This replaces that with a new
`LottieResult` which mimics a typical `Result`
class in functional programming. It either has a
result or an exception.    The composition methods
now return a
`LottieTask<LottieResult<LottieComposition>>>`.
You can add/remove listeners on the LottieTask.
The listener will be called with the result that
contains either the exception or error.    This
also deprecates all `LottieComposition.Factory`
methods because they all have an analogous
`LottieCompositionFactory` API.    This PR also
extracts LottieAnimationView's cache into a
separate class and added tests which found an off
by one error.    #710
",9664,178,1259,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"797","airbnb/lottie-android","ee8b95409c3615785ca86aa47a52a2ab8e977943",4,"2018-07-26 09:38:36-07:00","Added support for zip files (#846)  See code docs
for more info.
",9761,178,1298,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"798","airbnb/lottie-android","3f9ee24b530d21414fbc5eddc7c52f2d23fc89cb",11,"2018-07-26 11:22:59-07:00","Replaced Strong/WeakRef cache with a LruCache
(#861)
",9773,178,1285,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"799","airbnb/lottie-android","9d233a0f9ce099c2bc0f44116a48e330befa01b2",3,"2018-08-08 11:52:20-07:00","Added the ability to fetch an animation from a url
(#868)  Fixes #869
",10003,182,1354,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"800","airbnb/lottie-android","e0c22eeb8db663067f9dd1b688d811c5e4302724",1,"2018-09-06 12:32:35-04:00","Synchronize task threading (#933)
",10045,182,1382,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"801","airbnb/lottie-android","074176b4574ce41fadf3fba09213e902ede914ac",2,"2018-09-09 17:21:08+02:00","Add on composition loaded listener (#928)
",10058,183,1382,"dlamande","contact@dorianlamande.com","Gabriel Peal","gpeal@users.noreply.github.com"
"802","airbnb/lottie-android","e76e4454f8031c13c8773759b13d68fdc83d45bd",5,"2018-09-23 22:30:12-07:00","LottieCompositionFactory and Caching Cleanup
(#959)  This cleans up a number of things related
to the LottieCompositionFactory.  It:    * Handled
task caching at the LottieCompositionFactory level
so it is guaranteed to work everywhere. The
existing architecture left several instances where
compositions would not be cached.  * Simplified
the way tasks are handled in LottieAnimationView
* Fixes #958 in which different cache keys are
used for rawRes animations  * Removed deprecated
factory APIs
",10000,183,1363,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"803","airbnb/lottie-android","7d95fdf61a0aae87abb7319eeeb504fb0c5b03a0",3,"2018-09-23 23:17:49-07:00","Allow returning null from value animator callbacks
(#960)  Fixes #879
",10014,183,1367,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"804","airbnb/lottie-android","c30a2acdc7e1499e0c1e2e94e40bc0ea9338bba8",9,"2018-12-09 13:22:05-08:00","Added support for hidden layers (""hd"" property)
(#1024)
",9616,181,1355,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"805","airbnb/lottie-android","393afd5acc4c608b1c082412fccd2f710589de1b",1,"2018-12-12 14:43:41-08:00","Only update listeners when animation changed
(#1035)
",9681,181,1402,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"806","airbnb/lottie-android","826503b3071f39f4f3dff8ac2d523dcbb382c12b",1,"2018-12-14 02:31:58+08:00","Annotate fetchBitmap as @Nullable (#1037)
According to the example in https://airbnb.io/lott
ie/android/images.html#providing-your-own-images,
fetchBitmap() can return null and Lottie will keep
asking until a non-null Bitmap is returned.
",9682,181,1402,"Jonathan Lau","me@jon.sg","Gabriel Peal","gpeal@users.noreply.github.com"
"807","airbnb/lottie-android","fc64b267046a7559f12bfc1fd311e9e91beada2b",1,"2018-12-15 15:06:12-08:00","Created LPaint (#1045)
",9701,182,1406,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"808","airbnb/lottie-android","a6d4f34c10c14c7c87c91cd851a997f915984b7f",1,"2019-02-02 16:37:36-08:00","Pause Lottie when visibility changes (#1098)
onAttachedToWindow and onDetachedFromWindow aren't
sufficient for LottieAnimationView to properly
pause and resume. We must do the same from
onVisibilityChanged as well or we risk Lottie
animating when the app is in the background.
Fixes #987  Thanks @florianPOLARSTEPS
",9870,183,1436,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"809","airbnb/lottie-android","2a73d550e6845d34a70a8db6998e41d40aab822e",1,"2019-02-10 21:27:02-08:00","Added support for markers (#1105)  This adds new
APIs for setting the min/max/min and max frame
based on a marker comment name.  Fixes #487
",10033,184,1470,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"810","airbnb/lottie-android","f87b1fdd8fb1cb4fd0e0931e53330caaa386da3c",4,"2019-02-16 12:34:36-08:00","Added support for Skew and Skew Angle (#1118)
Fixes #409
",10125,184,1473,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"811","airbnb/lottie-android","2ca335a47fc97835b7c3ceaf44301b13e2bc0283",1,"2019-02-16 16:23:28-08:00","Support animations without end values in each
keyframe (#1104)
",10127,185,1467,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"812","airbnb/lottie-android","7a7a954e6eb5171dabc708f4917020f38d5318f3",31,"2019-03-03 18:55:40-08:00","Allow transform properties to be nullable (#1136)
Fixes #1121
",10240,185,1460,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"813","airbnb/lottie-android","3ef34b8ef6b4ee5df98092c4bb007276d1f586f9",3,"2019-03-10 16:33:44-07:00","Added support for dynamic gradient colors (#1153)
Other dynamic properties can be added later but
adding support for colors is the most valuable
right now.  #905
",10381,185,1481,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"814","airbnb/lottie-android","a143d345a22c49288febb7c999a32962696a3e37",1,"2019-05-19 16:34:16-07:00","Close url connection at the right time (#1221)
@dloic, #1162 broke all url loading because you
closed the connection before it was actually done
being used. This fixes it though.    Fixes #1219
",10482,189,1500,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"815","airbnb/lottie-android","2354bad616c417aa246ec72a95aa372274d31250",5,"2019-05-30 13:57:21-07:00","Use moshi implementation for json parsing (#1234)
There's a dependency on OKIO & 8 classes copied
from Moshi. Need to figure out best path forward.
Ideally we don't depend on all of Moshi but still
get the gains of the new JsonReader & Options api.
This should fix the random Android 8 crashes.
Performance  I ran the snapshot tests with ~1800
animations and summed up just the parsing time.
The old parsing code took 13,145ms and 13,645ms on
each test run (avg 13,395ms). The new code took
12,858ms each time. There aren't enough trials to
deduce statistical differences but if these
numbers hold, the new code parses ~5% faster.  It
does reduce memory allocations during parsing
which may contribute to the performance
improvement.    I'm leaning on merging this to
hopefully fix #667
",12038,196,2158,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"816","airbnb/lottie-android","7e64a9d68a7e58b6ea490fa9f8c8526612b02ad1",1,"2019-06-22 21:12:32-07:00","Replace LottieAnimiationView JsonReader API with
just InputStream and hide visibility of the Lottie
Moshi JSON parsing classes. (#1279)  This PR also
hides the visibility of the Lottie Moshi JSON
parsing classes.  Fixes #1270
",12062,197,2167,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"817","airbnb/lottie-android","8215f5de8620b409e9e8c9a474094da4c9898cde",2,"2019-09-23 23:39:37+01:00","Add a fallback resource when compositions fail to
load (#1350)  This may happen either with invalid
inputs or when network loading fails.
",12192,197,2234,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"818","airbnb/lottie-android","9abda9fd97800d02897513a7a19bb3f050e02bad",1,"2019-11-10 21:25:55-08:00","Support ScaleType.FIT_XY. (#1418)  Fixes #801
Fixes #1384
",12292,198,2261,"Bo Duan","boduan402@gmail.com","Gabriel Peal","gpeal@users.noreply.github.com"
"819","airbnb/lottie-android","1e3f4130977f6e5d1ede8588a79430e84b2bf57b",3,"2019-11-24 10:05:48+09:00","Add KeyframesWrapper to improve setProgress()
performance (#1426)  To improve performance of
BaseKeyframeAnimation.getCurrentKeyframe() called
by setProgress() of BaseKeyframeAnimation who has
only one Keyframe, SingleKeyframeWrapper was
implemented with KeyframeWrapper interface.  At
LottieLogo1.json, processing time of setProgress()
was reduced about 70%.
",12388,198,2260,"Matsuda, Akihit","matsuda104@gmail.com","Gabriel Peal","gpeal@users.noreply.github.com"
"820","airbnb/lottie-android","639bebab349b07bc241d0361b8038e4f50a38c2e",1,"2019-11-30 12:56:59-08:00","Add a safeMode API (#1449)  This allows you to
wrap draw with a try/catch for specific
problematic devices. Please read its doc before
using.    #1422
",12422,198,2283,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"821","airbnb/lottie-android","8d676e1f08a99d18e1d09fa347435e3ff476c27c",1,"2019-11-30 13:59:39-08:00","Added a dynamic property for text size (#1447)
Also made DocumentData float values to be more
consistent with the rest of the codebase.    Fixes
#1421
",12454,198,2300,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"822","airbnb/lottie-android","ee942249214dd6bb1540b746ca0b678a6382b5ee",5,"2019-11-30 14:47:35-08:00","Add the ability to set custom cache keys or set
non cache key (#1450)  Fixes #1289
",12477,198,2359,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"823","airbnb/lottie-android","8a115534e559b2baf9343ac7f0ef019b0b2e94e6",5,"2020-01-05 19:33:58-08:00","Remove value callback animations when they get
overwritten (#1470)  Fixes #1464
",12492,197,2364,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"824","airbnb/lottie-android","081da44146a1e892effc6be8899fed496a4973ad",1,"2020-02-15 18:38:16-08:00","Fix time stretch and time remapping when there is
a start offset (#1472)  Fixes #1454  Fixes #1456
",12495,197,2365,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"825","airbnb/lottie-android","58b6b758b27c0a8388659112eb10e0be22d2a71c",7,"2020-02-15 19:49:02-08:00","Two cache fixes (#1502)  Add the ability to skip
the network cache  Add the ability to clear all
Lottie caches  Fixes #1289
",12536,197,2378,"Gabriel Peal","gpeal@users.noreply.github.com","GitHub","noreply@github.com"
"826","airbnb/lottie-android","708b54b2e3c605cc429906e47015f5a075f54b72",1,"2020-03-02 00:26:28+00:00","Add lottieAnimationViewStyle attribute to set a
default style in themes (#1524)  Fixes #1523, with
an enhancement.
",12547,197,2381,"Ataul Munim","hello@ataulm.com","GitHub","noreply@github.com"
"827","bazelbuild/bazel","d08b27fa9701fecfdb69e1b0d1ac2459efc2129b",161,"2015-02-25 16:45:20+01:00","Update from Google.  --
MOE_MIGRATED_REVID=85702957
",123353,1444,71029,"Han-Wen Nienhuys","hanwen@google.com","Han-Wen Nienhuys","hanwen@google.com"
"828","bazelbuild/bazel","b408f9e718f0f27af081e2cf878f9654f1e43e00",3,"2015-02-10 02:13:05+00:00","Refactor NodeEntry to be an interface.  --
MOS_MIGRATED_REVID=85946859
",123690,1449,71218,"Nathan Harmata","nharmata@google.com","Han-Wen Nienhuys","hanwen@google.com"
"829","bazelbuild/bazel","4e0f8560d754f021f784b3e48acb18a4ec99fd97",1,"2015-02-11 08:49:36+00:00","Replace some calls to
ArtifactFactory.resolveSourceArtifact(PathFragment
execPath), with a skyframe native implementation A
rtifactFactory.resolveSourceArtifact(Iterable<Path
Fragment> execPaths, PackageRootResolver
resolver).  -- MOS_MIGRATED_REVID=86062289
",123860,1449,71284,"Marian Lobur","loburm@google.com","Han-Wen Nienhuys","hanwen@google.com"
"830","bazelbuild/bazel","5dcdbf9a9bfd547275944f8ebb57b44af29f3a42",1,"2015-02-19 18:36:17+00:00","Introduce first class function signatures; make
the parser use them. This is the first meaty cl in
a series to refactor the Skylark function call
protocol.  1- We introduce a first-class notion of
FunctionSignature, that supports positional and
named-only arguments, mandatory and optional,
default values, type-checking, *stararg and
**kwarg;  2- To keep things clean, we distinguish
two different kinds of Argument's: Argument.Passed
that appears in function calls, and Parameter,
that appears in function definitions.  3- We
refactor the Parser so it uses this
infrastructure, and make minimal changes to
MixedModeFunction so that it works with it (but
don't actually implement *starparam and **kwparam
yet).  4- As we modify FuncallExpression, we
ensure that the args and kwargs arguments it
passes to the underlying function are immutable,
as a prerequisite to upcoming implementation of
*starparam and **kwparam as being provided
directly from a skylark list or dict.  Further
changes under review will take advantage of this
FunctionSignature to redo all our function call
protocol, to be used uniformly for both
UserDefinedFunction's and builtin function. The
result will be a simpler inheritance model, with
better type-checking, builtin functions that are
both simpler and better documented, and many
redundant competing functionality-limited
codepaths being merged and replaced by something
better.  NB: The changes to MixedModeFunction,
SkylarkFunction and MethodLibrary are temporary
hacks to be done away with in an upcoming CL. The
rest is the actual changes.  --
MOS_MIGRATED_REVID=86704072
",125654,1461,71876,"Francois-Rene Rideau","tunes@google.com","Han-Wen Nienhuys","hanwen@google.com"
"831","bazelbuild/bazel","d5baac0122a72209553a338ea28648d9184ca37e",1,"2015-02-25 14:18:14+00:00","Open-source BuildViewTestCase and the
infrastructure required by it, as well as the
tests under analysis/actions. They don't run yet,
because the mock client setup is still missing.
-- MOS_MIGRATED_REVID=87149625
",127636,1474,72527,"Ulf Adams","ulfjack@google.com","Han-Wen Nienhuys","hanwen@google.com"
"832","bazelbuild/bazel","e72d5222d47ad7b7857f4a3f4eaa6225f6cc8433",5,"2015-02-26 17:09:18+00:00","Add a SkyQueryEnvironment which runs queries by
examining the Skyframe graph.  This environment
eagerly preloads the transitive closure of a
specified query ""universe"", and so may not be as
efficient as the standard query for limited-scope
queries. It is activated when the universe is
specified and ordered results are not requested
(since it is currently unable to order results).
Tests were modified/added to exercise this
environment where deemed interesting. Some ugly
hacks were done to add coverage in
AbstractQueryTest and friends, because currently
even if the full depot is loaded (using //...),
individual target patterns most likely won't be
present in the graph. A better way to deal with
this situation, suggested by felly, is probably to
extract target pattern resolution logic to an
auxiliary function so that query is able to
resolve target patterns without mutating the
graph, and then call into the read-only graph with
the resolved patterns. That may be done in a
follow-up, in which case the ""scope"" of every
query could be //... .  --
MOS_MIGRATED_REVID=87257028
",131920,1501,73318,"Janak Ramakrishnan","janakr@google.com","Han-Wen Nienhuys","hanwen@google.com"
"833","bazelbuild/bazel","b6ab6f2b176db1b7c90fe8dbf51cfc26c09f04b8",1,"2015-03-10 16:05:12+00:00","Misc Skylark cleanups and small features  --
MOS_MIGRATED_REVID=88224368
",134545,1537,74634,"Francois-Rene Rideau","tunes@google.com","Damien Martin-Guillerez","dmarting@google.com"
"834","bazelbuild/bazel","9715daee1b1fbee82946989b1547f4647d82d40b",5,"2015-03-16 11:30:45+00:00","Move some test helper classes into /util packages
and open source them.  Specifically, move
AnalysisTestCase and SkyframeExecutorTestUtil.  --
MOS_MIGRATED_REVID=88715957
",135161,1539,76055,"Ulf Adams","ulfjack@google.com","Han-Wen Nienhuys","hanwen@google.com"
"835","bazelbuild/bazel","4aa1364794b7eef692f694aba7988169cfc3a946",3,"2015-03-20 17:32:19+00:00","Description redacted. --
MOS_MIGRATED_REVID=89134834
",138170,1570,77815,"Greg Estren","gregce@google.com","Damien Martin-Guillerez","dmarting@google.com"
"836","bazelbuild/bazel","28075900caf7e62a873436cf00eb886a35372750",1,"2015-03-24 22:25:44+00:00","More precisely document AttributeMap.get
(particularly the possibility of null values).  --
MOS_MIGRATED_REVID=89443545
",138289,1569,77954,"Greg Estren","gregce@google.com","Lukacs Berki","lberki@google.com"
"837","bazelbuild/bazel","90f3d34417043bd1bfe6098ad6b8d229bb76d78b",2,"2015-03-27 19:45:18+00:00","Resolve inputs that were stored in action cache
ahead of time so metadata for them can be
retrieved with other inputs, avoiding a restart.
This also allows us to delete the
UndeclaredInputsHandler, since we eagerly cache
metadata before entering any ActionCacheChecker
methods.  This should also allow us to split
FileAndMetadataCache into two separate classes, as
well as asserting that SingleBuildFileCache only
sees non-artifact ActionInputs. To be done in
follow-ups.  -- MOS_MIGRATED_REVID=89718712
",138685,1575,78285,"Janak Ramakrishnan","janakr@google.com","Ulf Adams","ulfjack@google.com"
"838","bazelbuild/bazel","f7cb668fd78fc1f70647db928cec4d9a67039ac8",2,"2015-03-30 14:37:36+00:00","Add PrepareDepsOfPatternsFunction, use before
query  This introduces a single SkyFunction that
has the desired side effect of loading matching
targets and their transitive dependencies in the
graph.  It replaces the two calls to
buildDriver.evaluate that made sure the graph
loaded the necessary values before query
evaluation with just one call.  --
MOS_MIGRATED_REVID=89864338
",138822,1577,78328,"Mark Schaller","mschaller@google.com","Laurent Le Brun","laurentlb@google.com"
"839","bazelbuild/bazel","61a8f1d87b4439599c89e5dcdd83b4efcc6a8b97",8,"2015-04-02 15:06:46+00:00","Description redacted. --
MOS_MIGRATED_REVID=90162183
",139883,1588,78701,"Googler","noreply@google.com","Kristina Chodorow","kchodorow@google.com"
"840","bazelbuild/bazel","e1861aefd163ccb03e0f34f5706563c5d32e66a5",2,"2015-04-10 19:08:18+00:00","Move NativeDepsHelper into the public tree.  --
MOS_MIGRATED_REVID=90828000
",139930,1592,78980,"Michael Staib","mstaib@google.com","Lukacs Berki","lberki@google.com"
"841","bazelbuild/bazel","24f5e6904532932423ad281151538664f8ebdf45",4,"2015-04-10 19:39:55+00:00","Extract boilerplate logic from ParallelEvaluator's
SkyFunction.Environment implementation.  This
slightly shortens the massive ParallelEvaluator
file, and also allows alternate Environment
implementations to avoid repeating the
boilerplate.  -- MOS_MIGRATED_REVID=90830529
",139366,1592,78970,"Janak Ramakrishnan","janakr@google.com","Lukacs Berki","lberki@google.com"
"842","bazelbuild/bazel","5821646f64394747e8fa68733f362147931e9037",1,"2015-05-08 14:26:14+00:00","Rewrite of ZipCombiner to improve performance and
maintainability  Poorly performing features of the
API have been deprecated in favor of better
alternatives:  - use addZip(File) over
addZip(InputStream) or addZip(String, InputStream)
- use addFile(ZipFileEntry) over addFile(String,
Date, InputStream, DirectoryEntryInfo)  New zip
package for high performance ZIP file
manipulation. Can directly work with compressed
ZIP entry data and has support for Zip64 (forces
Zip32 by default).  -- MOS_MIGRATED_REVID=93128639
",145127,1643,80880,"Googler","noreply@google.com","Han-Wen Nienhuys","hanwen@google.com"
"843","bazelbuild/bazel","29c5ab46fd9eae927b0734ac142ee9ae1c9c00a1",1,"2015-05-14 19:38:12+00:00","Allow globs to be used outside of the skyframe
package.  -- MOS_MIGRATED_REVID=93647914
",145866,1651,81214,"Janak Ramakrishnan","janakr@google.com","Damien Martin-Guillerez","dmarting@google.com"
"844","bazelbuild/bazel","89c2799dd890e6b93e2c3ddc63c54fddd988ea78",5,"2015-05-19 09:28:06+00:00","Move the source code of the Android rules to the
Bazel tree.  This is mostly a ""[] mv"", except for
the extra constant that specifies the location of
the Android SDK and moving the $zip attribute.
They are minor enough to be included in this CL.
Tested by creating a Bazel tree, compiling it and
verifying that the Android classes are in
libblaze.jar. I also eyeballed the source as a
final check that nothing sensitive gets leaked.
-- MOS_MIGRATED_REVID=93971892
",150050,1683,82648,"Lukacs Berki","lberki@google.com","Lukacs Berki","lberki@google.com"
"845","bazelbuild/bazel","ed688486f42833d2ac0779c52a132b8f0c0cea2e",2,"2015-06-03 12:21:27+00:00","Add vfs.SearchPath for searching binaries.  --
MOS_MIGRATED_REVID=95097699
",151534,1699,83371,"Han-Wen Nienhuys","hanwen@google.com","Kristina Chodorow","kchodorow@google.com"
"846","bazelbuild/bazel","ad3582369b805372a34ab0fa56f73d33660af30a",3,"2015-06-18 13:24:49+00:00","Move split/no-split command-line decision to
CppLinkAction.  -- MOS_MIGRATED_REVID=96301836
",156676,1768,86565,"Han-Wen Nienhuys","hanwen@google.com","Damien Martin-Guillerez","dmarting@google.com"
"847","bazelbuild/bazel","91c69f025d4cf4380c37c878f1aa1120ef31abcc",1,"2015-06-25 02:36:02+00:00","Setup FDO command-line options via feature
configurations.  -- MOS_MIGRATED_REVID=96835732
",157316,1773,86689,"Googler","noreply@google.com","Damien Martin-Guillerez","dmarting@google.com"
"848","bazelbuild/bazel","7b0bc0a8e5f45d2293d3fabf7a20159daa55ff02",3,"2015-06-30 23:57:45+00:00","Introduce interleaved package and transitive
target loading  Adds SkyFunctions and assorted
values that implement interleaved loading of
packages and their targets' transitive
dependencies.  They are not hooked up to any graph
loading components, yet.  --
MOS_MIGRATED_REVID=97278368
",159613,1802,87585,"Mark Schaller","mschaller@google.com","Florian Weikert","fwe@google.com"
"849","bazelbuild/bazel","b25759cab708722fb6c97a0816085c8f4ec24b98",4,"2015-07-29 17:09:18+00:00","Extract base class from TransitiveTargetFunction
-- MOS_MIGRATED_REVID=99386094
",165245,1857,89553,"Mark Schaller","mschaller@google.com","Damien Martin-Guillerez","dmarting@google.com"
"850","bazelbuild/bazel","082c05499d4d9c654d288416ed6afefcf81cc090",1,"2015-08-06 10:24:29+00:00","Skylark: In addition to using
ctx.configuration.fragment(CONF), the build
configuration can now be accessed via
ctx.fragments.CONF where CONF is in {cpp, jvm,
java}.  -- MOS_MIGRATED_REVID=100016978
",165869,1863,89743,"Florian Weikert","fwe@google.com","David Chen","dzc@google.com"
"851","bazelbuild/bazel","2ff0a6d34095c80999b08ca651dd9430ddc412ac",10,"2015-08-12 21:10:56+00:00","When we have enough information to determine that
a file didn't change type, don't unnecessarily
invalidate DirectoryListingStateValues.  --
MOS_MIGRATED_REVID=100511935
",166832,1872,90288,"Nathan Harmata","nharmata@google.com","Florian Weikert","fwe@google.com"
"852","bazelbuild/bazel","e2033b1d28d3f17c7e307f62b2b13c3eed72a7f6",1,"2015-08-19 16:57:49+00:00","A prototype implementation of top-level aspects.
-- MOS_MIGRATED_REVID=101033236
",168701,1894,91255,"Dmitry Lomov","dslomov@google.com","Lukacs Berki","lberki@google.com"
"853","bazelbuild/bazel","62ae0ccbf4102b48431ead59bb973f25dbc3a825",5,"2015-08-20 19:55:28+00:00","Fix some nits and allow alternate evaluators to
use MemoizingEvaluatorTest.  --
MOS_MIGRATED_REVID=101150250
",168845,1894,91272,"Janak Ramakrishnan","janakr@google.com","Dmitry Lomov","dslomov@google.com"
"854","bazelbuild/bazel","706bc72fa9dfe8b1a02558f6f177e547b98155b5",3,"2015-08-25 22:02:38+00:00","Replace query option --order_results with
--order_output, which can take three values for a
given output formatter: 'no', 'deps', or 'full'. A
fourth value, 'auto', means either 'deps' or
'full' depending on the formatter.  The option
'no' is equivalent to --noorder_results. 'full'
means that output will be deterministically
ordered, using alphabetization if necessary.
'deps' means that graph order will be preserved
(where applicable), but further efforts to order
the output may not be undertaken. 'auto' is
equivalent to 'full' for all output formatters
except for proto, minrank, maxrank, and graph, for
which it is equivalent to 'deps'.  The purpose of
this cl is to enable genquery to force completely
deterministic output, which requires that it be
able to specify a total ordering on the graph that
is consistent across runs. Which ordering doesn't
matter very much, so depending on the output
formatter, or even within the same one, there may
be some groups of nodes that are ordered
alphabetically, and some reverse alphabetically.
-- MOS_MIGRATED_REVID=101512292
",170063,1899,91873,"Janak Ramakrishnan","janakr@google.com","Lukacs Berki","lberki@google.com"
"855","bazelbuild/bazel","9b38b2cdebc2bde00e85fc4ed8ed7bef400f6c8c",1,"2015-08-27 16:11:07+00:00","Be resilient to a non-decreasing clock in
BlazeRuntime#recordLastExecutionTime. Also add
@Nullable annotations as appropriate.  Fixes #394.
-- MOS_MIGRATED_REVID=101685096
",171061,1901,92039,"Nathan Harmata","nharmata@google.com","Lukacs Berki","lberki@google.com"
"856","bazelbuild/bazel","702cad7ffc9bc67737fe1a281dbebbeef41b6551",1,"2015-09-02 09:53:58+00:00","Aspects can get information from their base rule.
-- MOS_MIGRATED_REVID=102126786
",172310,1917,92512,"Marian Lobur","loburm@google.com","Florian Weikert","fwe@google.com"
"857","bazelbuild/bazel","83f8271fd9fae7c9fde473c28c1b7e3f7504442a",1,"2015-09-08 08:54:25+00:00","Extract the test filtering into a new class.  This
is intended to make it easier to reimplement this
in Skyframe, in order to merge loading and
analysis phases.  -- MOS_MIGRATED_REVID=102536532
",173417,1924,92789,"Ulf Adams","ulfjack@google.com","Damien Martin-Guillerez","dmarting@google.com"
"858","bazelbuild/bazel","c62fabaa21770ff0381d4055f868b455fe5627b2",1,"2015-09-09 10:08:06+00:00","Save information about transitive packages in
ConfiguredTargetValue and AspectValue.  --
MOS_MIGRATED_REVID=102643564
",173601,1927,92865,"Marian Lobur","loburm@google.com","Lukacs Berki","lberki@google.com"
"859","bazelbuild/bazel","6e5eecb1d7a25f8f38a2aed681621be91db7fd0f",2,"2015-09-10 11:37:32+00:00","Preserve the original location in
EvalExceptionWithStackTrace  --
MOS_MIGRATED_REVID=102744198
",173726,1927,92883,"Laurent Le Brun","laurentlb@google.com","Damien Martin-Guillerez","dmarting@google.com"
"860","bazelbuild/bazel","0a4c6e4608121eb1ef3f62dda5bddc8a9fed308d",2,"2015-09-17 00:37:58+00:00","Stop throwing an exception if a Package was
successfully created but contains errors. Instead,
require callers to process the package and throw
if they need to.  This allows us to avoid
embedding a Package in an exception, which is
icky. This also allows us to remove
Package#containsTemporaryErrors.  Most callers'
changes are fairly straightforward. The exception
is EnvironmentBackedRecursivePackageProvider,
which cannot throw an exception of its own in case
of a package with errors (because it doesn't do
that in keep_going mode), but whose request for a
package with errors *should* shut down the build
in case of nokeep_going mode. To do this in
Skyframe, we have a new PackageErrorFunction which
is to be called only in this situation, and will
unconditionally throw.
EnvironmentBackedRecursivePackageProvider can then
catch this exception and continue on as usual,
except that the exception will shut down the
thread pool in a nokeep_going build.  --
MOS_MIGRATED_REVID=103247761
",175306,1934,93489,"Janak Ramakrishnan","janakr@google.com","David Chen","dzc@google.com"
"861","bazelbuild/bazel","a302a64b534fc5a6038ca0d658cb3c68056ff290",4,"2015-09-17 07:13:47+00:00","Refactor Type.getLabels() so that instead of
collecting labels, it flattens composite types and
remove the mention of the type ""Label"" from the
context argument of Type.convert().  This is in
preparation of separating build-specific types and
types inherent to Skylark.  --
MOS_MIGRATED_REVID=103266869
",175309,1934,93487,"Lukacs Berki","lberki@google.com","David Chen","dzc@google.com"
"862","bazelbuild/bazel","590767e9118a3709e49c44fb77130aa4203d0841",3,"2015-09-22 11:58:30+00:00","Implement support for android_library and
android_binary in AndroidStudioInfoAspect.  --
MOS_MIGRATED_REVID=103635637
",176803,1957,94278,"Dmitry Lomov","dslomov@google.com","Laszlo Csomor","laszlocsomor@google.com"
"863","bazelbuild/bazel","5877b8b39a7d88f4501ab1736f8ac2fe65431579",1,"2015-09-22 17:37:10+00:00","Don't remove reverse deps until node is known to
be changed. This helps avoid mutating the deps of
nodes that are still going to be deps after
evaluation is finished.  --
MOS_MIGRATED_REVID=103659429
",178262,1964,94545,"Janak Ramakrishnan","janakr@google.com","Lukacs Berki","lberki@google.com"
"864","bazelbuild/bazel","7fb76a1e378b988858c1274e8b6009e8489a4873",4,"2015-09-23 14:44:32+00:00","Make gen jars output group transitive.  Also add
gen jar provider, which we'll need for ide
support.  -- MOS_MIGRATED_REVID=103744649
",178343,1965,94564,"Googler","noreply@google.com","Philipp Wollermann","philwo@google.com"
"865","bazelbuild/bazel","22616ae8ea53df3909fd16b74e0d9210138dc2c2",10,"2015-09-26 20:35:57+00:00","Add Android IDL jar outputs.  These outputs are a
jar and source jar for the results of aidl
processing.   This is used to add aidl output to
IDEs separate from the source code, similar to
annotation output (gen jars).  --
MOS_MIGRATED_REVID=104024453
",179209,1970,94741,"Googler","noreply@google.com","Han-Wen Nienhuys","hanwen@google.com"
"866","bazelbuild/bazel","2f3f4cf925a760019fd089dd5ee771a3552fb278",2,"2015-09-29 01:42:00+00:00","Adds a mechanism for invocation policy. The policy
is taken through the --invocation_policy startup
flag and allows an application invoking Bazel to
set or override flag values (whether from the
command line or a bazelrc).  --
MOS_MIGRATED_REVID=104160290
",179193,1967,94785,"Alex Humesky","ahumesky@google.com","Florian Weikert","fwe@google.com"
"867","bazelbuild/bazel","3a509bdb1fd842f66b2efe75d6c619605904f8aa",1,"2015-10-06 01:00:47+00:00","In FilesystemValueChecker, use 200 threads and
don't waste threads on skipped keys. This yields
some noticeable improvements for the wall times of
null builds with even a small set of files to be
checked for changes.  --
MOS_MIGRATED_REVID=104717653
",180431,1973,95241,"Nathan Harmata","nharmata@google.com","Laszlo Csomor","laszlocsomor@google.com"
"868","bazelbuild/bazel","d77b5a4de6ce128ac08723511442a8840164147d",2,"2015-10-07 10:49:23+00:00","Fixed the computation of relative paths in
RuleFactory.java:  - Removed the exception -
Improved the comment  --
MOS_MIGRATED_REVID=104847927
",180455,1970,95229,"Florian Weikert","fwe@google.com","Han-Wen Nienhuys","hanwen@google.com"
"869","bazelbuild/bazel","3caa2b2425172c1515c6df0a34c188987be7aa11",1,"2015-10-08 14:59:04+00:00","Allow use of signing certificate name for iOS app
signing.  The value of new flag
--ios_signing_cert_name takes precedence over any
specified provisioning profilefor purposes of
signing.  RELNOTES: --ios_signing_cert_name allows
specifying a cert for iOS app signing  --
MOS_MIGRATED_REVID=104961817
",180673,1970,95266,"Peter Schmitt","schmitt@google.com","Kristina Chodorow","kchodorow@google.com"
"870","bazelbuild/bazel","d6fce4428db80f8e5d369581baea415e202cfe62",1,"2015-10-14 10:08:25+00:00","Reimplement target pattern parsing in Skyframe.
This is currently not hooked up, and we're passing
(potentially) massive numbers of targets around.
-- MOS_MIGRATED_REVID=105395404
",183020,1980,95878,"Ulf Adams","ulfjack@google.com","David Chen","dzc@google.com"
"871","bazelbuild/bazel","11ef8fc44821fb593a512eb5a3423013abbe39aa",1,"2015-10-20 21:41:57+00:00","Keep track of any RuntimeExceptions thrown during
evaluation. Previously, RuntimeExceptions that
were thrown after an InterruptedException was
thrown would be swallowed.  --
MOS_MIGRATED_REVID=105902192
",183788,1985,96023,"Janak Ramakrishnan","janakr@google.com","Han-Wen Nienhuys","hanwen@google.com"
"872","bazelbuild/bazel","d8b6ff2dad1de2d98a407ecf67a34fe12e67d494",2,"2015-10-20 21:54:34+00:00","Introduce Path#isSpecialFile,
FileSystem#isSpecialFile, and
FileStatus#isSpecialFile to help disambiguate
between a regular file and a special file, since
the file size of a special file cannot be trusted.
-- MOS_MIGRATED_REVID=105903622
",183890,1985,96060,"Nathan Harmata","nharmata@google.com","Han-Wen Nienhuys","hanwen@google.com"
"873","bazelbuild/bazel","ca2ee182bbf8b581fe1eea44dc737e98881dc3b1",5,"2015-10-26 15:05:42+00:00","Support proto_library in AndroidStudioInfoAspect.
-- MOS_MIGRATED_REVID=106300290
",185856,2007,96627,"Googler","noreply@google.com","Florian Weikert","fwe@google.com"
"874","bazelbuild/bazel","81b9083ef06972b2fa20f6cfb124d1cf41214e2f",4,"2015-10-26 16:57:27+00:00","Open source some skyframe/bazel tests.  --
MOS_MIGRATED_REVID=106308990
",190150,2027,97401,"Han-Wen Nienhuys","hanwen@google.com","Florian Weikert","fwe@google.com"
"875","bazelbuild/bazel","9880b6969d7041b0d726c0eed8d52670cf7bf671",1,"2015-10-27 23:05:49+00:00","Visibility adjustments  --
MOS_MIGRATED_REVID=106444993
",189946,2026,97353,"Michajlo Matijkiw","michajlo@google.com","Dmitry Lomov","dslomov@google.com"
"876","bazelbuild/bazel","eb71eccefb02ca17a87ff25435f2a8e170e03c6b",1,"2015-10-28 15:48:36+00:00","Open source FileFunctionTest.  --
MOS_MIGRATED_REVID=106499960
",190993,2027,97482,"Han-Wen Nienhuys","hanwen@google.com","Dmitry Lomov","dslomov@google.com"
"877","bazelbuild/bazel","b487ac69185fd0080461a3c8795589fe4532f4bb",1,"2015-11-09 13:09:12+00:00","Aspect terminology update.  Aspect =>
ConfiguredAspect AspectWithParameters => Aspect
-- MOS_MIGRATED_REVID=107375211
",193846,2054,98645,"Dmitry Lomov","dslomov@google.com","Damien Martin-Guillerez","dmarting@google.com"
"878","bazelbuild/bazel","15099239d94f5fb94504e33f670adf71dacff48a",2,"2015-11-09 18:17:26+00:00","Create AppleConfiguration and
AppleCommandLineOptions, and move a few items of
configuration over to the apple package. This
moves a small number of configuration items over.
Future changes will mostly likely follow to move
yet more items. The split here is necessary as it
is not only objc-related rules which require
information about apple platforms and
configuration -- cc rules will need this
information as well to pass appropriate args to
clang.  -- MOS_MIGRATED_REVID=107396114
",194832,2056,98933,"Chris Parsons","cparsons@google.com","Damien Martin-Guillerez","dmarting@google.com"
"879","bazelbuild/bazel","34f95d79a606348596c1dec0bd6b283a7514ece3",14,"2015-11-09 22:10:56+00:00","Update @Nullable annotations for
FilesystemValueChecker related stuff.  --
MOS_MIGRATED_REVID=107420673
",194925,2056,98973,"Nathan Harmata","nharmata@google.com","Damien Martin-Guillerez","dmarting@google.com"
"880","bazelbuild/bazel","8cd2978e429bdc178e06c0cb42f7ba73cabaeeb5",3,"2015-11-10 03:24:01+00:00","Allow FilesystemValueChecker to operate on a
WalkableGraph and add TODOs for replacing
MemoizingEvaluator#getValues et al with
WalkableGraph usage. I initially attempted to do
this but punted once I realized how much work it
would be.  Also make DirectoryListingStateValue
and FileStateValue public for use in outside
callers of FilesystemValueChecker.  --
MOS_MIGRATED_REVID=107447425
",194977,2056,98981,"Nathan Harmata","nharmata@google.com","Damien Martin-Guillerez","dmarting@google.com"
"881","bazelbuild/bazel","659f80ee8193f606a1591ef31b730f7a60934b70",1,"2015-11-12 23:16:17+00:00","When getting package roots for exec paths, don't
start with the file, which is guaranteed not to be
a package. Instead, start with its parent. This
will be faster and take less memory.  --
MOS_MIGRATED_REVID=107725767
",195128,2062,99098,"Janak Ramakrishnan","janakr@google.com","Lukacs Berki","lberki@google.com"
"882","bazelbuild/bazel","335f0672e981d66a32ffac70d5b6aa58254a80c7",3,"2015-11-16 23:19:13+00:00","Open source skyframe tests  --
MOS_MIGRATED_REVID=107983315
",197547,2071,99692,"Kristina Chodorow","kchodorow@google.com","Damien Martin-Guillerez","dmarting@google.com"
"883","bazelbuild/bazel","8e7da8704dba78dba47fbaa0eafce3a91c2deb13",1,"2015-11-18 15:38:33+00:00","Allow output formatters to work in stream mode.
-- MOS_MIGRATED_REVID=108142169
",198467,2081,100114,"Miguel Alcon Pinto","malcon@google.com","Damien Martin-Guillerez","dmarting@google.com"
"884","bazelbuild/bazel","0371208ede2b0ddea61dc0bcb3dceb2c19f232ff",1,"2015-11-18 18:03:22+00:00","Simplify inputs to NoSuchTargetException  --
MOS_MIGRATED_REVID=108154189
",199534,2086,100297,"Michajlo Matijkiw","michajlo@google.com","Damien Martin-Guillerez","dmarting@google.com"
"885","bazelbuild/bazel","28bc5f1538fa5d89b411560ca394732920e06227",2,"2015-11-19 21:13:34+00:00",NA,200465,2099,100682,"Carmi Grushko","carmi@google.com","Damien Martin-Guillerez","dmarting@google.com"
"886","bazelbuild/bazel","7c0b995fefaed48edb7284ffd29c9c1728df3949",2,"2015-12-07 09:48:55+00:00","Refactor ResolvedFile implementors: remove
unnecessary Optional<> wrappers.  Also remove
unnecessary `type` members; they are constant.  --
MOS_MIGRATED_REVID=109560348
",206126,2134,102090,"Laszlo Csomor","laszlocsomor@google.com","David Chen","dzc@google.com"
"887","bazelbuild/bazel","e05337e5abab7e7effe6d51d782a1d838c90e11d",2,"2015-12-07 16:00:05+00:00","Open source the TargetPatternEvaluator tests.  --
MOS_MIGRATED_REVID=109581214
",206271,2135,101727,"Ulf Adams","ulfjack@google.com","David Chen","dzc@google.com"
"888","bazelbuild/bazel","f9fdc8dfced8b2b14561720623126a91e04b22cb",3,"2015-12-08 12:49:31+00:00","Don't treat external files as immutable  Fixes
#352.  RELNOTES: Files in external repositories
are now treated as mutable, which will make the
correctness guarantees of using external
repositories stronger (existent), but may cause
performance penalties.  --
MOS_MIGRATED_REVID=109676408
",206479,2137,101762,"Kristina Chodorow","kchodorow@google.com","Lukacs Berki","lberki@google.com"
"889","bazelbuild/bazel","76d81db677e07ec21d21789c624bd85834cc9b21",1,"2015-12-10 12:32:20+00:00","Open source IOExceptionsTest.  --
MOS_MIGRATED_REVID=109885964
",207011,2139,101928,"Ulf Adams","ulfjack@google.com","Lukacs Berki","lberki@google.com"
"890","bazelbuild/bazel","74defa8fab04996831b12a2ee8a10f4cc6bb0957",1,"2015-12-14 09:55:36+00:00","Simplify the contract of RepositoryFunction to ""I
am given a Rule and a directory that I should
populate"". The directory itself is not created
because local_repository actually puts a symlink
in its place.  As a side effect, make HTTP
downloading, git cloning and archive decompressing
not be SkyFunctions. This is necessary because it
needs to be the RepositoryFunction and not a
dependent SkyFunction that populates the output
directory, because it that's the case what happens
is:  1. RepositoryDelegatorFunction cleans up the
directory and prepares it for RepositoryFunction
2. RepositoryFunction calls env.getValue(<function
that populates the directory>) 3. That value
hasn't been computed yet, thus
RepositoryDelegatorFunction returns early 4. The
function that populates the directory is called 5.
RepositoryDelegatorFunction is restarted  6.
RepositoryDelegatorFunction cleans up the
directory 7. RepositoryFunction calls
env.getValue(), and nothing is done because the
value has already been computed 8.
RepositoryDelegatorFunction proudly returns, even
though the directory is actually empty  Another
way to solve this problem would be to make
RepositoryFunction not clean the directory up on
Skyframe restarts, but that means that we'd need
to keep state somewhere, which doesn't strike me
as a particularly great idea because let's keep
state outside of Skyframe only when absolutely
necessary (e.g. the marker files for cross-server
instance persistence of downloaded repositories).
That ""somewhere"" could either be a member variable
of RepositoryDelegatorFunction or the file system.
Note that this change causes external
communication to be re-done in a few more cases
than before (see that changes to the test cases),
but I'd rather we be correct and simple than fast.
We can optimize things later if needed and there
is enough complexity going around, thank you very
much.  -- MOS_MIGRATED_REVID=110134397
",208510,2148,102393,"Lukacs Berki","lberki@google.com","Dmitry Lomov","dslomov@google.com"
"891","bazelbuild/bazel","0d32f35a05388d09e07305aac519014b92e8931a",1,"2015-12-17 21:32:15+00:00",NA,210768,2161,102998,"Googler","noreply@google.com","Kristina Chodorow","kchodorow@google.com"
"892","bazelbuild/bazel","118aac76db9af7230ba32c2f56108382c819b7e3",3,"2015-12-30 21:42:51+00:00","Permit proto serialization of configured attribute
values  This commit adds proto messages that
represent configurable values, and modifies
attribute value serialization code to handle those
values, which are called SelectorLists.  --
MOS_MIGRATED_REVID=111149272
",213072,2177,103530,"Mark Schaller","mschaller@google.com","Philipp Wollermann","philwo@google.com"
"893","bazelbuild/bazel","900acfbc0d84cac1933ebb28ac1ec8cb47f1f84d",3,"2016-01-04 04:47:44+00:00","Add catastrophe field to EvaluationResult so that
callers can identify the cause of a catastrophic
failure (this is distinct from a crash).  Also
clean up catastrophe logic in ParallelEvaluator --
the catastrophic nature of an exception is
important only if the build is keep_going, and
only if the exception is catastrophic can we have
an exception in the first place.  --
MOS_MIGRATED_REVID=111293164
",213106,2177,103533,"Janak Ramakrishnan","janakr@google.com","Philipp Wollermann","philwo@google.com"
"894","bazelbuild/bazel","958ef82df21e4778df00891f96531c75ff24c5ac",1,"2016-01-07 16:21:39+00:00","In SkyQueryEnvironment, don't silently give up
when there's a cycle in the graph. We can compute
the universe target patterns outside of skyframe,
which is the only reason we need the value we were
requesting. Giving up was preventing us from
evaluating ""..."" patterns even if the ""...""
pattern didn't contain any cycles itself.  --
MOS_MIGRATED_REVID=111605976
",213002,2172,103443,"Janak Ramakrishnan","janakr@google.com","Damien Martin-Guillerez","dmarting@google.com"
"895","bazelbuild/bazel","f1e257da1467760e7d2f4b3b1f651484f4fe7b67",1,"2016-01-07 17:14:59+00:00","Split PrepareDepsOfTargetsUnderDirectory into two
parts, one which does the directory traversal and
package loading, and the other which requests deps
on all the transitive targets. We need values from
the first half, but the second half can fail to
evaluate because of a target cycle. By splitting
them, we ensure that there will be values in the
graph, so we can get the targets below a directory
even if there are cycles present.  --
MOS_MIGRATED_REVID=111609889
",213214,2174,103524,"Janak Ramakrishnan","janakr@google.com","Damien Martin-Guillerez","dmarting@google.com"
"896","bazelbuild/bazel","eea8efaf39da92e4811ed7b551b2a978e34ff92e",7,"2016-01-13 09:08:48+00:00","Open-source the JUnit test runner.  --
MOS_MIGRATED_REVID=112027454
",217490,2235,106317,"Damien Martin-Guillerez","dmarting@google.com","Damien Martin-Guillerez","dmarting@google.com"
"897","bazelbuild/bazel","e12d75d617e096c226aed5dfc1bc83b925ae798f",2,"2016-01-14 19:29:26+00:00","Skyfunctions can now catch up to five exceptions.
This is a prerequisite to making some changes to
PackageFunction that require handling another
exception.  -- MOS_MIGRATED_REVID=112172100
",218056,2237,106518,"John Field","jfield@google.com","Damien Martin-Guillerez","dmarting@google.com"
"898","bazelbuild/bazel","cd48cd56ab576f3ff1c5acaa749582c6bd7043b9",1,"2016-01-15 20:11:11+00:00","Enable Aspects to specify their configuration
fragment dependencies.  Note: This specification
currently does not have any effect, but soon...
In the default mode, when an aspect does not call
any of the configuration fragment methods on its
AspectDefinition.Builder, the old behavior will
persist; aspects can only access fragments their
associated rule has access to, and have no
guarantee as to what those fragments are. This
mode will become deprecated with a future CL.  If
an aspect does call a configuration fragment
method, it will have a configuration fragment
policy. In a future CL, this will mean it will be
restricted to accessing only those fragments, but
will be understood as requiring access to them for
the purposes of dynamic configuration, even if the
rule it is attached to or created by does not
otherwise require them. Eventually, all aspects
will be required to declare their configuration
fragments this way.  Skylark aspects may also
declare configuration fragments as of this CL. Two
new parameters are added to the aspect() function,
fragments and host_fragments, mirroring the
similar parameters for rules. If both of these
parameters are empty or unspecified, the default
mode is used, as with normal aspects.  Also in
this CL: * Minor javadoc fixes for
AspectDefinition. * Additional tests for
AspectDefinition.  -- MOS_MIGRATED_REVID=112271713
",218664,2237,106697,"Michael Staib","mstaib@google.com","Damien Martin-Guillerez","dmarting@google.com"
"899","bazelbuild/bazel","e3ce21fab041c6c8e6da2811f5dce75615ccb1f4",1,"2016-01-15 23:40:14+00:00","support hidden --java_optimization_mode flag in
java_test rule.  -- MOS_MIGRATED_REVID=112290581
",218708,2237,106772,"Googler","noreply@google.com","Han-Wen Nienhuys","hanwen@google.com"
"900","bazelbuild/bazel","b136315c05a87314e2b74b0a999512032c65d425",5,"2016-01-19 14:03:29+00:00","Fileset (Google internal): code cleanup.  --
MOS_MIGRATED_REVID=112466264
",218420,2233,106562,"Laszlo Csomor","laszlocsomor@google.com","Han-Wen Nienhuys","hanwen@google.com"
"901","bazelbuild/bazel","528957e26a957da7abcb8a3b3bcfe7e7f6428687",1,"2016-01-19 21:17:45+00:00","Support unreadable files  --
MOS_MIGRATED_REVID=112507181
",218590,2233,106577,"Michajlo Matijkiw","michajlo@google.com","Han-Wen Nienhuys","hanwen@google.com"
"902","bazelbuild/bazel","1a34a248b05c9e64e2db0d76f3ad8e93cf755f99",1,"2016-01-21 19:17:19+00:00","Improve space efficiency of Blaze action cache:
For actions that don't perform input discovery,
there is no need to store the full set of edges in
the action cache. This data is only used to
formulate the set of input files for an action
prior to checking the validity of a cache entry.
For non-input-discovering actions, the set of
input files is known statically and the action
cache data is not used.  --
MOS_MIGRATED_REVID=112704382
",218986,2233,106656,"Eric Fellheimer","felly@google.com","Damien Martin-Guillerez","dmarting@google.com"
"903","bazelbuild/bazel","fbdfa61450a4f30f1793c3e90edb9414a3ee759e",1,"2016-01-22 10:03:19+00:00","Skylark, JS: nicer error message when a source
file has an unknown type.  --
MOS_MIGRATED_REVID=112766003
",219100,2234,106683,"Laszlo Csomor","laszlocsomor@google.com","Damien Martin-Guillerez","dmarting@google.com"
"904","bazelbuild/bazel","5e573fd22f83124320e9053c2b9108bf7b6190f8",1,"2016-01-27 00:33:29+00:00","Store data about aspect configurations on
Dependencies.  Dependencies are the data structure
which needs to propagate the configuration for
each aspect as created by trimConfigurations down
to the point where it's actually used. We need
this to store different configurations for
different aspects in a world where aspects have
their own configurations, which may have more
fragments than the target they're attached to.
That world is on its way.  Also in this CL: *
Refactor Dependency to be an abstract parent class
with separate implementations for
Attribute.Transitions and BuildConfigurations, as
well as null configurations, to avoid   having to
check nullness in various places. Users of the API
will not see this, but get   factory methods
instead of constructors. As a consequence of this,
refactor Dependency   to be its own top-level
class instead of a nested class in
DependencyResolver.  --
MOS_MIGRATED_REVID=113109615
",220053,2242,106748,"Michael Staib","mstaib@google.com","Kristina Chodorow","kchodorow@google.com"
"905","bazelbuild/bazel","8d239cdba4e74e358ccc8866742d67e68cc66145",2,"2016-01-27 21:06:01+00:00","Fix SkyframeBuilder's error handling, and change
the contract of EvaluationResult to return true
for hasError() iff errorMap is non-empty or there
is a catastrophe.  There was no good reason for
the previous behavior of saying hasError even if
there was a transitive recovered-from error, since
callers shouldn't care. This was a latent bug that
was only benign since none of the consumers of
hasError were invoking Skyframe with recoverable
SkyFunctions.  Also add an EvaluationResultSubject
so that tests can more fluently assert things
about EvaluationResult objects going forward.  --
MOS_MIGRATED_REVID=113192415
",220044,2244,106788,"Janak Ramakrishnan","janakr@google.com","Kristina Chodorow","kchodorow@google.com"
"906","bazelbuild/bazel","734e7f7b63c9c00a6aaa60769481a11bc4f76346",2,"2016-01-29 15:04:31+00:00","Parse the workspace name when a repository is
loaded  Moved RepositoryValue to
RepositoryDirectoryValue so that it could be
cached (and not re-downloaded) even if the
WorkspaceAST caused a Skyframe restart (as
mentioned in https://github.com/bazelbuild/bazel/b
lob/master/src/main/java/com/google/devtools/build
/lib/rules/repository/RepositoryDelegatorFunction.
java#L130-L133).  -- MOS_MIGRATED_REVID=113358489
",220713,2247,106729,"Kristina Chodorow","kchodorow@google.com","Kristina Chodorow","kchodorow@google.com"
"907","bazelbuild/bazel","2ac20962867aec785fb6f4616e6b51cbf5a3fb01",1,"2016-02-01 13:04:54+00:00","Implement proper error handling for interleaved
loading and analysis.  Add test coverage by re-
running BuildViewTest with the new Skyframe
loading phase runner.  --
MOS_MIGRATED_REVID=113517509
",220889,2246,106779,"Ulf Adams","ulfjack@google.com","Damien Martin-Guillerez","dmarting@google.com"
"908","bazelbuild/bazel","ea16e10b71da3797c22ec8fbe30970dae90e597c",2,"2016-02-04 18:00:33+00:00","Add jdeps support to AndroidStudioInfoAspect.
This can be used for classpath reduction on the
IDE side.  -- MOS_MIGRATED_REVID=113861117
",221324,2256,106988,"Googler","noreply@google.com","David Chen","dzc@google.com"
"909","bazelbuild/bazel","bc8b5e09ff667c7d0bf7186a7a207629e6d7bad5",1,"2016-02-05 22:09:09+00:00","Add an intermediate SkyFunction for resolving the
external package  The WORKSPACE file parsing needs
to be separated into several parts to enable load
of labels in the WORKSPACE file.  This change adds
an intermediate SkyFunction,
ExternalPackageFunction, that requires all the
WORKSPACE file part to be parsed to resolve
//external: labels.  Issue #824 Step 1.  --
MOS_MIGRATED_REVID=113984026
",221682,2261,107087,"Damien Martin-Guillerez","dmarting@google.com","David Chen","dzc@google.com"
"910","bazelbuild/bazel","7896c3aaa911d429d4200951469132727b73b7e8",5,"2016-02-09 20:27:13+00:00","Turbine, a tool for improving Java build
performance  Turbine compiles ijars from source,
ignoring method bodies and relaxing error checks
for performance. We can then do normal compilation
against those ijars and move javac off the build's
critical path.  -- MOS_MIGRATED_REVID=114247125
",224032,2276,107861,"Liam Miller-Cushon","cushon@google.com","Dmitry Lomov","dslomov@google.com"
"911","bazelbuild/bazel","076f4ab33a9c2b4aee288e048b2fe9e4871bec07",2,"2016-02-10 19:48:13+00:00","Adds an AaptCommandLineBuilder to simplify the
aapt line building process. Part of this change
makes the --no-version-vectors only be propagated
if the sdk tools are >= 23.  --
MOS_MIGRATED_REVID=114351246
",224997,2290,108173,"Googler","noreply@google.com","Dmitry Lomov","dslomov@google.com"
"912","bazelbuild/bazel","1acd4666ec48240e0044e692fadb0c3101b0d3ae",2,"2016-02-10 20:30:41+00:00","Allow ParallelEvaluator to not store errors
alongside values if nodes recover from errors. In
the case of a single keep_going build, with no
subsequent nokeep_going builds, storing the errors
is unnecessary.  -- MOS_MIGRATED_REVID=114355846
",225059,2290,108183,"Janak Ramakrishnan","janakr@google.com","Dmitry Lomov","dslomov@google.com"
"913","bazelbuild/bazel","e175f3eae6986b18918144d166a2b8028c43857c",4,"2016-02-18 01:45:49+00:00","Initial support for Java header compilation
'Turbine' compiles ijars from source, ignoring
method bodies and relaxing error checks for
performance. We can then do normal compilation
against those ijars and move javac off the build's
critical path.  -- MOS_MIGRATED_REVID=114919013
",227478,2307,108752,"Liam Miller-Cushon","cushon@google.com","Damien Martin-Guillerez","dmarting@google.com"
"914","bazelbuild/bazel","19264edeb7b32f6dfe25f0138a2dfa061a1de3f7",1,"2016-02-23 09:34:14+00:00","Make some JavaCommon static to reduce reliance on
mutable state.  Also change the JavaSemantics
interface to provide a top-level method to
determine the main class for a java_binary rule.
Also refactor the JavaSemantics implementations to
reduce passing of JavaCommon.  --
MOS_MIGRATED_REVID=115316536
",228142,2309,108886,"Ulf Adams","ulfjack@google.com","Damien Martin-Guillerez","dmarting@google.com"
"915","bazelbuild/bazel","3b631f7773287d616f675d6a95c9c6f6410d79b5",2,"2016-03-01 05:57:35+00:00","Add more tools to java_toolchain  Migrates
--java_langtools, --javabuilder_top,
--singlejar_top, --genclass_top, and --ijar_top to
java_toolchain.{javac,javabuilder,singlejar,gencla
ss,ijar}  -- MOS_MIGRATED_REVID=115949619
",230045,2324,109583,"Liam Miller-Cushon","cushon@google.com","Kristina Chodorow","kchodorow@google.com"
"916","bazelbuild/bazel","3a55f01cc98068d0133349ddb5c0043b74555565",1,"2016-03-07 14:14:29+00:00","Part 2 of 5: Optimize the resource merge process,
XmlProcessing.  Introduces the XmlDataResource and
all the associated cruft that comes with parsing
Android Resource value xmls: XmlValues, XmlValue.
-- MOS_MIGRATED_REVID=116540181
",231302,2336,110007,"Googler","noreply@google.com","Damien Martin-Guillerez","dmarting@google.com"
"917","bazelbuild/bazel","3ed13c847ec4953442f8ff36461196c1b978d1ef",2,"2016-03-07 21:53:29+00:00","Detect and warn about runfiles conflicts.  A
runfile conflict is when two different artifacts
have been added to a Runfiles object under the
same relative path.  Conflict resolution is
unchanged (last artifact wins).  --
MOS_MIGRATED_REVID=116584195
",231759,2337,110101,"Googler","noreply@google.com","Damien Martin-Guillerez","dmarting@google.com"
"918","bazelbuild/bazel","ce372c36a3c1c90197a69bb2f3870babfc1eef5e",1,"2016-03-14 16:19:18+00:00","Roll-forward of commit
4bf0018ed1cf8616297b951dc03dbde3f0db2503 with code
to preserve order of glob matches: Parallelize
fetches of symlink file values, subdirectory
globs, and subdirectory package lookup values.
This should improve change pruning speed when we
have to check a glob. It also keeps GlobFunction
closer to the contract of Skyframe, because in
order to avoid quadratic restarts, it wasn't
checking for missing deps between getValue calls.
-- MOS_MIGRATED_REVID=117139471
",232103,2340,110192,"Janak Ramakrishnan","janakr@google.com","Dmitry Lomov","dslomov@google.com"
"919","bazelbuild/bazel","ab43b97040a04d21cb951e1c59b760fc67dfaa3d",2,"2016-03-30 12:23:50+00:00","Move most of the workspace-handling code from
BlazeRuntime to a new class.  --
MOS_MIGRATED_REVID=118563271
",235599,2365,111410,"Ulf Adams","ulfjack@google.com","Klaus Aehlig","aehlig@google.com"
"920","bazelbuild/bazel","15f499d24a9f82f204f86213152e23168493258a",1,"2016-04-01 22:20:22+00:00","Simplify some of the code around invoking
proguard.  -- MOS_MIGRATED_REVID=118819625
",235802,2365,111447,"Alex Humesky","ahumesky@google.com","Kristina Chodorow","kchodorow@google.com"
"921","bazelbuild/bazel","61e3fc9ac7aa7a0a907af291e97ef12f43ca9a3e",2,"2016-04-04 09:35:16+00:00","Dig out the builtin include file from the
filegroup of libc_top instead of special-casing it
in CppConfiguration.  This seems to be the most
reasonable solution. I was toying with the idea of
adding a field to CROSSTOOL but that would fail if
you set libc_top to something other than what was
specified in that file. If I had a infinite amount
of time, I'd create a custom rule called cc_libc
where libc_top would point so that this file can
be referenced by an attribute, but since I don't,
this seems to be workable compromise.  Also note
that contrary to what you'd glean from the code,
we don't actually have ""compile"" and ""link""
filegroups for libc.  --
MOS_MIGRATED_REVID=118921101
",235790,2365,111444,"Lukacs Berki","lberki@google.com","Kristina Chodorow","kchodorow@google.com"
"922","bazelbuild/bazel","a77f32c255cb210ab254a3d689e3ad7dc0fcf25c",1,"2016-04-13 21:59:21+00:00","Introduce TreeFileArtifact, which represents files
under TreeArtifacts. Remove ArtifactFile, which is
rendered obsolete by TreeFileArtifact.  --
MOS_MIGRATED_REVID=119789154
",238680,2387,112515,"Rumou Duan","rduan@google.com","Damien Martin-Guillerez","dmarting@google.com"
"923","bazelbuild/bazel","10993fe27a62d5a4e683a206291c1bd44a492daf",1,"2016-04-19 12:55:12+00:00","Review a number of action subclasses and update
them according to the spec.  Consists of adding
@Immutable annotations, adding final modifiers,
and changing the types of fields to immutable
types.  -- MOS_MIGRATED_REVID=120221067
",239386,2394,112805,"Ulf Adams","ulfjack@google.com","Damien Martin-Guillerez","dmarting@google.com"
"924","bazelbuild/bazel","8feea7eb117d4c0ca3b8bfd3fa6b8e3b40a2977f",2,"2016-04-20 12:04:21+00:00","Add nullable variants to Fingerprint.  --
MOS_MIGRATED_REVID=120325869
",240240,2396,113042,"Ulf Adams","ulfjack@google.com","Damien Martin-Guillerez","dmarting@google.com"
"925","bazelbuild/bazel","760e70958a47218b4c8edde90da0c7a23fa0e725",6,"2016-04-21 08:09:51+00:00","Refactor the Event class; always construct through
static methods.  -- MOS_MIGRATED_REVID=120418505
",240428,2396,113074,"Ulf Adams","ulfjack@google.com","Damien Martin-Guillerez","dmarting@google.com"
"926","bazelbuild/bazel","33bab46ae38ef0dec7914bb4ca7b733a9feb435c",4,"2016-04-25 17:55:12+00:00","Split ActionMetadata into ActionAnalysisMetadata
and ActionExecutionMetadata. Except in action
execution logic (ActionExecutionFunction,
SkyframeActionExecutor, etc.), switch Action
interface references to either
ActionAnalysisMetadata if possible or
ActionExecutionMetadata.  --
MOS_MIGRATED_REVID=120723431
",241260,2400,113359,"Rumou Duan","rduan@google.com","Yun Peng","pcloudy@google.com"
"927","bazelbuild/bazel","140634eccee693b567ba7591df550f7b72db1612",2,"2016-04-26 23:26:38+00:00","Collect logic related to extra Proguard outputs in
one place.  -- MOS_MIGRATED_REVID=120865329
",241611,2401,113470,"Googler","noreply@google.com","Yun Peng","pcloudy@google.com"
"928","bazelbuild/bazel","f8a94cd160322795865d22ef3af0810cdc3093a1",1,"2016-04-28 21:39:10+00:00","Adds the text output parameter and a partial
manifest to the action key for ApkManifestAction,
so that the key correctly changes when the
structure of the manifest changes.  --
MOS_MIGRATED_REVID=121058425
",242009,2404,113603,"Alex Humesky","ahumesky@google.com","Yun Peng","pcloudy@google.com"
"929","bazelbuild/bazel","e9cd0f315750a4b313768165b0b80ea1e81416d5",1,"2016-04-29 22:46:16+00:00","In InvocationPolicyEnforcer#enforce, instead of
just checking the direct command to see if a flag
policy applies, check whether the flag applies by
seeing if its list of commands matches one of the
commands in the hierarchy.  This avoids the
tedious and brittle specification of all commands
that may use a flag, while providing better
filtering out of inapplicable flags.  RELNOTES: A
FlagPolicy specified via the --invocation_policy
flag will now match the current command if any of
its commands matches any of the commands the
current command inherits from, as opposed to just
the current command.  --
MOS_MIGRATED_REVID=121159131
",242092,2407,113698,"Janak Ramakrishnan","janakr@google.com","Damien Martin-Guillerez","dmarting@google.com"
"930","bazelbuild/bazel","8cb3f2bd61182ae08c5506802a6a849f4bf83d17",5,"2016-05-04 16:44:23+00:00","4.8 of 5: Xml Fixes for Merger Integration  *
SimpleXmlResourceValue records all attributes
except name. (I'd like to toss description, just
as soon as I know I can -- bloats the serialized
form.) * Added handling for <item> to
SimpleXmlResourceValue: this can be used as
placeholders, or (apparently) mostly unvalidated
value definitions. * drawable can be used to put
in colored backgrounds in a values.xml * Strings,
Plurals, need to read sub tags such as xliff as
string * <eat-comment/> and <skip/> need to be
handled: we ignore them as all comments are eaten
right now; and skip appears to be for localization
diffs * xml parser must be resilient to random
characters in resources defined in values. *
Handles the <resource> not <resources> coding
mistake gracefully. * Supports a <public>
declaration. This feature is more wildly used than
the nonexistant documentation suggests.  --
MOS_MIGRATED_REVID=121490019
",242688,2410,113920,"Googler","noreply@google.com","Damien Martin-Guillerez","dmarting@google.com"
"931","bazelbuild/bazel","88ccf0c9f490a5138719c3bb476b17eb1d8384e2",1,"2016-05-04 23:15:00+00:00","[Android] Support aapt-generated main dex specs.
Add bazel support for using the ""aapt -D"" command
to generate a proguard specification for
components which need to be in the main dex.  --
MOS_MIGRATED_REVID=121531584
",243028,2410,113939,"Googler","noreply@google.com","Kristina Chodorow","kchodorow@google.com"
"932","bazelbuild/bazel","8be7fd0bb7cc8f0819f23ef4bbf6328472110db7",5,"2016-05-10 20:01:40+00:00","Allow Skyframe tests to use the NotifyingGraph and
DeterministicGraph helpers to enforce concurrency
synchronization points and determinism even if
they are not using an InMemoryGraph-backed
evaluator.  -- MOS_MIGRATED_REVID=121977783
",244103,2420,114207,"Janak Ramakrishnan","janakr@google.com","Klaus Aehlig","aehlig@google.com"
"933","bazelbuild/bazel","5d80fddc70d43cb0051d2774cf7d5b1bcfa92439",1,"2016-05-11 10:01:14+00:00","Refactor ios_split_cpu to be apple_split_cpu, in
preparation for using it to specify platform
mutli_cpu splits other than on ios_multi_cpu (such
as a split on watchos)  No users should be
manually specifying this flag, so this shouldn't
break anyone...  -- MOS_MIGRATED_REVID=122037152
",244301,2420,114259,"Chris Parsons","cparsons@google.com","Klaus Aehlig","aehlig@google.com"
"934","bazelbuild/bazel","5052a04d085075a1fed390b97f4c4fe203fe9b83",1,"2016-05-11 15:26:07+00:00","Introducing SpawnActionTemplate, a stub action for
TreeArtifacts at analysis time that can expand
into a list of SpawnActions operating on
associated TreeFileArtifacts inside TreeArtifacts
at execution time.  --
MOS_MIGRATED_REVID=122056131
",245022,2422,114528,"Rumou Duan","rduan@google.com","Klaus Aehlig","aehlig@google.com"
"935","bazelbuild/bazel","442f095ae658a82bde02b296263def07f0938f79",1,"2016-05-12 17:28:49+00:00","Make CppConfiguration fragment available from
CcToolchainProvider.  --
MOS_MIGRATED_REVID=122170387
",245330,2424,114608,"Googler","noreply@google.com","Klaus Aehlig","aehlig@google.com"
"936","bazelbuild/bazel","a56c1f4a1b47131b6d366a658f1f1e5abe0cdf3d",1,"2016-05-13 18:51:27+00:00","Speed Optimizations:  * Adds threading to the
AndroidDataWriter and AndroidDataSerializer. *
Changes to a BufferedWriter for the Writer (turns
out it's faster for string writing.) * Added
buffers to the serializer reading.  --
MOS_MIGRATED_REVID=122280993
",246229,2432,114849,"Googler","noreply@google.com","Kristina Chodorow","kchodorow@google.com"
"937","bazelbuild/bazel","74f24c1cee9e0522b3a0fdcfe40e47191f3c3973",1,"2016-05-16 17:13:52+00:00","Always unzip paths ending in / as directories
Does file type mean nothing to people?  Fixes
#1263, also made some code hygiene improvements:
* Added some tests. * Broke a java_test out of
lib/BUILD. * Renamed ZipFunction so it doesn't
look like a child of SkyFunction.  --
MOS_MIGRATED_REVID=122431322
",246668,2436,114974,"Kristina Chodorow","kchodorow@google.com","Kristina Chodorow","kchodorow@google.com"
"938","bazelbuild/bazel","6d42e336ed540fd5abfcd1bd208a6cadc41206cc",1,"2016-05-19 15:33:38+00:00","CommandLine: Add support for tree artifact
expansions. ParameterFileWriteAction: Add support
to write out CommandLine with tree artifact
expansions.  -- MOS_MIGRATED_REVID=122734422
",247349,2440,115233,"Rumou Duan","rduan@google.com","Kristina Chodorow","kchodorow@google.com"
"939","bazelbuild/bazel","e9e9779c0418178cb6906d0c3054caecfe340ca2",1,"2016-05-23 18:28:48+00:00","Assert batch existence of nodes in
DirtyingNodeVisitor#visit.  Now that we batch-
prefetch the nodes, there is no reason to delay
this check until the async Runnable runs, since we
have more debugging information this way.  --
Change-Id:
Ic73d99ed8de184ba1e29f0dee5375f5d45b5379d
Reviewed-on: https://bazel-
review.googlesource.com/3680
MOS_MIGRATED_REVID=123018542
",247960,2442,115385,"Janak Ramakrishnan","janakr@janakr-macbookair2.roam.corp.google.com","Yue Gan","yueg@google.com"
"940","bazelbuild/bazel","ba323b9af3a1c6759afb9623c69a40aea001abf3",2,"2016-06-03 05:25:21+00:00","Add resource_jar to android_studio_info.proto.
The IDE currently extracts these from the output
jars by a fragile string comparison. This will
allow the IDE to do so more robustly (eg. in case
the resource jar output is renamed).  --
MOS_MIGRATED_REVID=123939803
",249674,2453,115961,"Googler","noreply@google.com","Dmitry Lomov","dslomov@google.com"
"941","bazelbuild/bazel","d8b80c33dcddf50bcd155c7362c068bf18bcb1d4",1,"2016-06-03 14:38:19+00:00","Make a 'did you mean' suggestion when referencing
a non-existent label.  It works for both labels on
the command-line and labels in BUILD files.  --
MOS_MIGRATED_REVID=123967347
",249657,2453,115963,"Laurent Le Brun","laurentlb@google.com","Yun Peng","pcloudy@google.com"
"942","bazelbuild/bazel","3bee55145b72191d4d6423c5cdef6c728cb52dbd",8,"2016-06-03 19:42:27+00:00","Enable the AndroidResourceProcessingAction to
accept splits.  These splits will be passed
through to aapt, which will create additional
resource packages (and reduce the set found in the
base ap_) as a result.  --
MOS_MIGRATED_REVID=123995947
",249703,2453,116034,"Michael Staib","mstaib@google.com","Yun Peng","pcloudy@google.com"
"943","bazelbuild/bazel","73876205d11794a5b748dc3e800261c0f459ef76",1,"2016-06-06 18:52:08+00:00","Skyframe changes to support SpawnActionTemplate.
1. Adds ActionTemplateExpansion{Function, Value}
for ActionTemplate expansion. 2. Changes
ArtifactFunction to support evaluating
TreeFileArtifacts and TreeArtifacts generated by
ActionTemplate.  -- MOS_MIGRATED_REVID=124160939
",250516,2460,116256,"Rumou Duan","rduan@google.com","Yun Peng","pcloudy@google.com"
"944","bazelbuild/bazel","2692f9bd968f04c6358cbee4026c5d3110dba832",1,"2016-06-13 18:32:27+00:00","Rollback of commit
5160d196e62bf6f8fa56b32746a01b182729c5c8.  ***
Reason for rollback ***  Rolling forward with
fixed proto call to getMappedStringValue.  ***
Original change description ***  Automated []
rollback of commit
4f854d47888d011354357e965fd3c7bf1d74b95f.  ***
Reason for rollback ***  Breakage: http://ci.bazel
.io/view/Bazel%20bootstrap%20and%20maintenance/job
/Bazel/601/  *** Original change description ***
Xml processing fixes: * Support for <item
name=""foo"" type=""id"">7x0000</item> * Adds <eat-
comment/> after source attributions to ensure they
are not sent to the final binary * Store
attributes for arrays to the string
translatable=false case  --
MOS_MIGRATED_REVID=124748547
",251080,2462,116502,"Googler","noreply@google.com","Yue Gan","yueg@google.com"
"945","bazelbuild/bazel","19f2238b608d7ebba182a2bdd405e4696975f733",2,"2016-06-15 19:06:56+00:00","Fix hypothetical crash bug in
AspectDefinition#addAllAttributesOfAspect when the
default value of a parameterized aspect attribute
is null. This is hypothetical because I couldn't
figure out an end-to-end way to tickle the bug.
Still, the surrounding code is very brittle and
things may change in the future such that the bug
is trivially tickle-able.  --
MOS_MIGRATED_REVID=124977450
",251434,2462,116518,"Nathan Harmata","nharmata@google.com","Yue Gan","yueg@google.com"
"946","bazelbuild/bazel","0e17046797f6cfed21755f2eed7c52c0a340d40c",1,"2016-06-16 00:49:06+00:00","Description redacted. --
MOS_MIGRATED_REVID=125013752
",250794,2438,116051,"Googler","noreply@google.com","Yue Gan","yueg@google.com"
"947","bazelbuild/bazel","45e8e57fb3a12537a19859f299e672bfa9558286",1,"2016-06-17 16:43:44+00:00","In FileSystemValueChecker, only check TreeArtfacts
that are in the passed-in modified file sets.  --
MOS_MIGRATED_REVID=125173579
",250924,2437,116063,"Rumou Duan","rduan@google.com","Philipp Wollermann","philwo@google.com"
"948","bazelbuild/bazel","242ff7fcf34ec05785725e3f441beae320b64688",1,"2016-06-28 21:50:08+00:00","Canonicalize some TransitiveTraversalValue objects
-- those corresponding to error-free built-in
rules, and to non-rules. This should save memory,
as well as CPU for built-in rules, since we don't
have to make sets out of their providers more than
once.  Also fix a bug in the equality check where
we weren't comparing the canHaveAnyProvider field
properly.  -- MOS_MIGRATED_REVID=126121351
",253550,2455,116775,"Janak Ramakrishnan","janakr@google.com","Dmitry Lomov","dslomov@google.com"
"949","bazelbuild/bazel","af2ea37ceab2300a6d40afe65c1e333dfbaa0a11",2,"2016-06-29 15:49:52+00:00","Creates a fluent api that moves the xml generation
into the data writer.  The new ""define"" method
replaces the now deprecated writeToValuesXml
method. This provides three benefits: * An
agnostic writing interface to the XmlResourceValue
classes, easing the replacement of them with a
proper xml writer. * A delayed write which allows
the StyleableXmlResourceValue to claim
AttrXmlResourceValue definitions before writing. *
Centralized method of source attribution, enabling
a less verbose way to indicate multiple values
came from a single xml source file.  An example of
the new interface writing the
StyleXmlResourceValue:   ValuesResourceDefinition
definition = mergedDataWriter
.define(key)           .derivedFrom(source)
.startTag(""style"")           .named(key)
.optional()           .attribute(""parent"")
.setTo(parent)           .closeTag();   for
(Entry<String, String> entry : values.entrySet())
{     definition = definition
.startItemTag()             .named(entry.getKey())
.close()
.addCharactersOf(entry.getValue())
.endTag();   }   definition.endTag().save();  --
MOS_MIGRATED_REVID=126196028
",254587,2465,117237,"Googler","noreply@google.com","Dmitry Lomov","dslomov@google.com"
"950","bazelbuild/bazel","cc7712f0acff385046d76b9012eeb342452d93ac",4,"2016-07-08 17:38:27+00:00","Refactor QueryableGraph and ThinNodeQueryableGraph
to be independent interfaces, in preparation for
further changes.  -- MOS_MIGRATED_REVID=126924789
",268108,2619,123105,"Janak Ramakrishnan","janakr@google.com","Kristina Chodorow","kchodorow@google.com"
"951","bazelbuild/bazel","5234eed84d845cda522256ad9674ec0a7076f7be",2,"2016-07-12 18:22:13+00:00","Extract CppLinkAction.Builder to its own top level
class.  -- MOS_MIGRATED_REVID=127221256
",268859,2630,123404,"Cal Peyser","cpeyser@google.com","Kristina Chodorow","kchodorow@google.com"
"952","bazelbuild/bazel","3b25028750dd7a6df6777f6c70c1feae9063a630",1,"2016-07-14 22:31:10+00:00","Record and propagate namespaces from the
<resources> element correctly. * Reduces the size
of merged values.xml * Improves correctness of
merged xml  Sadly, this is also backwards
compatible by allowing multiple definitions of a
prefix with different namespaces. Will be cleaned
up after transition.  --
MOS_MIGRATED_REVID=127481147
",269384,2631,123432,"Googler","noreply@google.com","Dmitry Lomov","dslomov@google.com"
"953","bazelbuild/bazel","ebad192959105c24ae38e3e821fa0121ac0e1254",1,"2016-07-15 22:29:10+00:00","Remove GlobList formatting logic  Isn't strictly
necessary, remove it before anyone decides they
want to use it.  -- MOS_MIGRATED_REVID=127585617
",269554,2630,123402,"Michajlo Matijkiw","michajlo@google.com","Yun Peng","pcloudy@google.com"
"954","bazelbuild/bazel","0eb4da7d8e4503a508b9c42bb9e4002ac178cbca",1,"2016-07-21 01:01:31+00:00","Remove Rule's dependence on a RawAttributeMapper
instance  The things Rule needs it for aren't
terribly complex. Instead inline functionality
where sensible, and refactor into static methods
where not. This reduces each Rule's memory
footprint by 38%.  -- MOS_MIGRATED_REVID=128011760
",270097,2633,123535,"Michajlo Matijkiw","michajlo@google.com","John Cater","jcater@google.com"
"955","bazelbuild/bazel","3b47b1fdc6b24bb2c947d02316c1cf4e6a02cf09",4,"2016-07-26 18:41:41+00:00","Augment the
QueryableGraph#get[BatchWithFieldHints] method to
take in parameters conveying the requesting node
(if any), the requested node(s), as well as a
reason for the skyframe graph lookup. Alternate
graph implementations may be interested in this
information.  -- MOS_MIGRATED_REVID=128496089
",271255,2640,123820,"Nathan Harmata","nharmata@google.com","Damien Martin-Guillerez","dmarting@google.com"
"956","bazelbuild/bazel","ad77f9722e5adb5c997859ea4a0f0f66e7f583bb",2,"2016-07-29 20:58:42+00:00","Refactor FileArtifactValue and ArtifactValue now
that presence of mtime and digest are mutually
exclusive.  -- MOS_MIGRATED_REVID=128843642
",272189,2647,124121,"Janak Ramakrishnan","janakr@google.com","Yun Peng","pcloudy@google.com"
"957","bazelbuild/bazel","3e0f933556f1d10165e9cb02cc90cc1ed7bea4ac",5,"2016-08-09 16:23:42+00:00","Continuing removing GUAVA dependencies from
junitrunner.  Bazel users that are using a
different Guava version than the one in the
junitrunner jar are getting an
IncompatibleClassChangeError. This CL rewrites
parts of junitrunner code so it won't depend on
Guava anymore. Continuing progress on issue #1150.
Removed Guava dependencies, except for Supplier
and Ticker, from junit.runner.junit4.  --
MOS_MIGRATED_REVID=129757029
",273977,2654,124377,"Elena-Irina Iancu","elenairina@google.com","Yue Gan","yueg@google.com"
"958","bazelbuild/bazel","18f005bde9a6b85167be9f899ab4abfb888fc4d8",1,"2016-08-10 09:49:00+00:00","Added support for null terminated queries.  Closes
#1496.  -- Reviewed-on:
https://github.com/bazelbuild/bazel/pull/1496
MOS_MIGRATED_REVID=129846158
",274300,2655,124441,"Andreas Bergmeier","abergmeier@gmx.net","Yue Gan","yueg@google.com"
"959","bazelbuild/bazel","33faf91356e0b9d0326f5d0330c2cf7189cf4da1",2,"2016-08-10 19:15:15+00:00","Get rid of InvalidatableGraph. This explicit
concept is no longer needed.  --
MOS_MIGRATED_REVID=129895423
",274259,2655,124380,"Nathan Harmata","nharmata@google.com","Yue Gan","yueg@google.com"
"960","bazelbuild/bazel","0978a8ea1593ef204ea97155014f76baba2508c5",1,"2016-08-11 15:48:57+00:00","Record the category of the artifact to be linked
in LinkerInput.  It's currently only used for
sanity checks, but the idea is that we'll use this
field to decide what to do with a given linker
input instead of inferring things from its file
name.  Also make artifact name creation a bit
simpler by using the same set of variables for
compiler and linker outputs.  --
MOS_MIGRATED_REVID=129990944
",274708,2655,124422,"Lukacs Berki","lberki@google.com","Yue Gan","yueg@google.com"
"961","bazelbuild/bazel","3c0adb26bac6d756fb97e4bcc6d4e5b2cefa5eeb",13,"2016-08-15 21:54:55+00:00","Allow Skyframe graph lookups and value retrievals
to throw InterruptedException.  The only place we
now don't handle InterruptedException is in the
action graph created after analysis, since I'm not
sure that will be around for that much longer.  --
MOS_MIGRATED_REVID=130327770
",276242,2666,125011,"Janak Ramakrishnan","janakr@google.com","Philipp Wollermann","philwo@google.com"
"962","bazelbuild/bazel","7a45855aeaa56573e7497109f8a2de6d145e12c7",7,"2016-08-23 20:56:46+00:00","Remove joda-time dependency from the java test
runner  -- Change-Id:
I89804f0993e0248e23ee61c527117a9592a828da
Reviewed-on: https://bazel-
review.googlesource.com/#/c/5550/3
MOS_MIGRATED_REVID=131092172
",277150,2672,125247,"Yunchi Luo","yunchi@compass.com","John Cater","jcater@google.com"
"963","bazelbuild/bazel","b449e3fa913a99c76b22f3301d1ec29c12b9e2f9",2,"2016-08-25 22:42:37+00:00","Refactor ParallelEvaluator in preparation for
making it more modular with respect to cycle
checking.  Reducing the size of
ParallelEvaluator.java is also probably long
overdue.  I believe this change stands on its own,
but if you don't think the third change is worth
it, and this isn't worth it on its own, feel free
to push back.  -- MOS_MIGRATED_REVID=131340165
",277634,2678,125345,"Janak Ramakrishnan","janakr@google.com","John Cater","jcater@google.com"
"964","bazelbuild/bazel","aa9107b4fd1a8b8193428617bab4c694f24124a1",2,"2016-08-25 23:19:57+00:00","Factor out cycle detection.  --
MOS_MIGRATED_REVID=131344134
",277690,2679,125364,"Janak Ramakrishnan","janakr@google.com","John Cater","jcater@google.com"
"965","bazelbuild/bazel","8dc4257b9493bd2251636de1271a1972c17919ef",4,"2016-08-26 17:21:40+00:00","Add two implicit outputs to the AndroidBinary rule
that are produced by ProGuard: - The list of dead
code in the input class files (-printusage). - The
list of classes and class members matched by the
various '-keep' options (-printseeds).  --
MOS_MIGRATED_REVID=131414162
",277783,2679,125387,"Googler","noreply@google.com","John Cater","jcater@google.com"
"966","bazelbuild/bazel","5b942ff65ff2ef64dae40f94dfd7c3153e94779c",1,"2016-08-29 21:18:21+00:00","Hook up split-up resource processing tools for
android_library  Behind a flag. Flow is: parse ->
merge -> validate              \--> compile With
fewer deps across the merge steps.  --
MOS_MIGRATED_REVID=131634115
",279063,2688,125730,"Googler","noreply@google.com","Klaus Aehlig","aehlig@google.com"
"967","bazelbuild/bazel","d9d524ab77ebff673009e7405678c237bdb510fc",1,"2016-09-02 12:57:42+00:00","Removing GUAVA XML escapers from junitrunner.
Bazel users that are using a different Guava
version than the one in the junitrunner jar are
getting an IncompatibleClassChangeError. Rewriting
parts of junitrunner code so it won't depend on
Guava anymore.  Continuing progress on issue
#1150.  -- MOS_MIGRATED_REVID=132054901
",280416,2704,126356,"Irina Iancu","elenairina@google.com","Kristina Chodorow","kchodorow@google.com"
"968","bazelbuild/bazel","ab64e592fe5f5fb2e5dd2996b72c75416b2de721",1,"2016-09-05 09:40:13+00:00","Make
--experimental_interleave_loading_and_analysis a
no-op.  This is now enabled by default, and this
change removes the code path where it's disabled.
Remove a few tests that were testing the removed
code, and rewrite some others that still seem
useful. We still drop configured targets on
configuration changes, so we use that to check
that things are dropped from Skyframe.  --
MOS_MIGRATED_REVID=132226208
",280673,2709,126270,"Ulf Adams","ulfjack@google.com","Kristina Chodorow","kchodorow@google.com"
"969","bazelbuild/bazel","daf62aeddbd35a3c3959769507112d400fc38bbe",1,"2016-09-08 14:08:40+00:00","Expose aar to Skylark.  --
MOS_MIGRATED_REVID=132551909
",282257,2747,127155,"Googler","noreply@google.com","Damien Martin-Guillerez","dmarting@google.com"
"970","bazelbuild/bazel","b78a2129d9371de9a174edfd4160bd1f8a4ba5a4",2,"2016-09-12 20:35:24+00:00","Blaze support for ExtensionRegistryGenerator.  --
MOS_MIGRATED_REVID=132912013
",282921,2752,127353,"Googler","noreply@google.com","Dmitry Lomov","dslomov@google.com"
"971","bazelbuild/bazel","cd708c3e68256ada53ed2a477a66621aad106e0d",3,"2016-09-15 13:48:47+00:00","Make environment dependency of actions factor
through individual values  With actions depending
on the (white-listed part) of the environment as a
whole, even though they are only re-executed if
the used parts of the environment change, each
action has to be reconsidered on any change of the
environment. For large dependency graphs, this can
be a considerable amount of effort; therefore add
intermediate values for the individual variables
and make actions only depend on those actually
used.  -- Change-Id:
I283d289da3e0782dc4f9ac084a41425166cfede0
Reviewed-on: https://bazel-
review.googlesource.com/#/c/5494
MOS_MIGRATED_REVID=133255911
",283690,2758,127536,"Klaus Aehlig","aehlig@google.com","Dmitry Lomov","dslomov@google.com"
"972","bazelbuild/bazel","94d35deeb44bdac33d58430d0441b34d5c5c630e",1,"2016-09-16 15:21:39+00:00","Add a specialized TransitiveInfoProviderMap to map
TransitiveInfoProviders by class.
TransitiveInfoProviderMap enforces that the
provider implements the interface it's keyed by
and provides accessors the reduce the amount of
casting. This in general reduces boilerplate
throughout wherever TransitiveInfoProviders are
mapped by their class.  Also add shorthand for
adding a provider where it only implements
TransitiveInfoProvider once, reducing the
redundant specification of the
TransitiveInfoProvider class. Infer the class as
the exclusive direct implementor of
TransitiveInfoProvider to account for special
cases like AutoValue and LicenseProvider.  --
MOS_MIGRATED_REVID=133386336
",283604,2762,127655,"Googler","noreply@google.com","Laszlo Csomor","laszlocsomor@google.com"
"973","bazelbuild/bazel","7b7fce1ebed8e34f789fdd3a0a47d741f175e4a3",3,"2016-09-20 19:52:07+00:00","Use Object for what instead of String  The string
is only used for error messaging on failure.
Instead of constructing lots of strings allow
passing in a generic Object whos toString is used
for the error message. This allows us to bypass a
lot of garbage string generation, at th expense of
a little indirection.  Chose Object over some
specialized type, since we use inline strings
frequently as well.  --
MOS_MIGRATED_REVID=133741724
",285597,2766,127902,"Michajlo Matijkiw","michajlo@google.com","Laszlo Csomor","laszlocsomor@google.com"
"974","bazelbuild/bazel","36395c417899bd4009efc3a6cda5ea838f3d98ef",1,"2016-09-22 04:16:39+00:00","Bazel to support external links integration.  This
is so that the tests can inject custom extra data
(link, icons, etc) so that a test method can be
associated with an external tool.  --
MOS_MIGRATED_REVID=133912980
",285630,2769,128022,"Googler","noreply@google.com","Laszlo Csomor","laszlocsomor@google.com"
"975","bazelbuild/bazel","b4ac0713bfbe0aaf323a04f411fbd574879e07bd",5,"2016-09-23 16:36:26+00:00","Add manifest merger output log.  RELNOTES: When
using android_binary.manifest_merger=""android"" the
merger produces a summary log next to the merged
manifest artifact.  --
MOS_MIGRATED_REVID=134082985
",285864,2771,128103,"Andrew Pellegrini","apell@google.com","Laszlo Csomor","laszlocsomor@google.com"
"976","bazelbuild/bazel","c4e2255275751f5e01034bccd89db4aa292ffcac",2,"2016-09-27 15:44:40+00:00","Fixed EvaluationProgressReceiver object names
EvaluationProgressReceiver objects have two common
naming schemes currently, and calling them
invalidationReceiver is misleading, so to make the
naming convention standard, all object names are
based on ""progressReceiver.""  --
MOS_MIGRATED_REVID=134411011
",286387,2771,128172,"Googler","noreply@google.com","Yun Peng","pcloudy@google.com"
"977","bazelbuild/bazel","23d6f632981c1e4b02336dea4ee8fc9ac2379ec1",1,"2016-09-29 18:44:50+00:00","Export idl_import_root to Android Studio, so that
we know the packages of new AIDL files in relation
to their location.  --
MOS_MIGRATED_REVID=134687843
",287751,2785,128641,"Googler","noreply@google.com","Yun Peng","pcloudy@google.com"
"978","bazelbuild/bazel","af8ebca2b88a0ee1129b72b4ce825f6489c31e67",4,"2016-09-29 19:02:00+00:00","Open source dex merging tools for incremental
dexing.  Tested with bazel build --incremental_dex
ing_binary_types=monodex,multidex_unsharded,multid
ex_sharded --
//examples/android/java/bazel:hello_world  --
MOS_MIGRATED_REVID=134690103
",288575,2797,129020,"Adam Michael","ajmichael@google.com","Yun Peng","pcloudy@google.com"
"979","bazelbuild/bazel","860b8d27724f6beeb67e19f102ddca00b143bee6",2,"2016-10-05 22:52:55+00:00","EvaluationProgressReceiver absorbs other progress
trackers.  Remove DirtyKeyTracker and inflight
node tracking as independent progress tracking
bits of code, and instead use an internal-facing
DirtyTrackingProgressReceiver wrapper of the
user's EvaluationProgressReceiver.  --
MOS_MIGRATED_REVID=135291924
",289480,2796,129108,"Chloe Calvarin","ccalvarin@google.com","Damien Martin-Guillerez","dmarting@google.com"
"980","bazelbuild/bazel","4f005551b52083f1e8995f799d4dc8a690604d95",2,"2016-10-06 20:21:56+00:00","Update android_ide_common to 25.0.0 and clean up
FolderConfigs  Older android_ide_common does not
handle BCP 47, so we update the code to handle
that and remove most of the workarounds. This also
pulls in a fix for 3-letter locales, unblocks
resource shrinking whitelisting, etc.  --
MOS_MIGRATED_REVID=135396457
",289186,2787,128769,"Googler","noreply@google.com","Damien Martin-Guillerez","dmarting@google.com"
"981","bazelbuild/bazel","74b94328db5346e0f6c573731fcbaa85ca751304",1,"2016-10-11 15:30:49+00:00","Move interface so building to action configs  This
cl moves the conditional building of interface
libraries from LinkCommandLine to action configs
and features. It provides link_dynamic_library.sh
to keep blaze backwards compatible. The script and
related code can be deleted once all crosstools
are updated.  RELNOTES: No.  --
MOS_MIGRATED_REVID=135799041
",289750,2792,128920,"Marcel Hlopko","hlopko@google.com","Yue Gan","yueg@google.com"
"982","bazelbuild/bazel","79eb4094537d369b22ac72cab4f08a3c1a5f650e",2,"2016-10-11 22:06:40+00:00","When requesting all transitive traversal values
recursively, request packages/targets in parallel
with subdirectories.  The previous implementation
was vulnerable to incomplete traversal in case of
cycles: if a subdirectory had a cycle, the targets
in the package would never be requested.
Requesting the package first would create a
different problem, where the subdirectories would
never be requested if the package depended on a
cycle.  Also stop uniquifying Skylark import
cycles when inlining. While uniquification is
nice, this was leading to us emitting an error
during queries that we weren't actually emitting
when not inlining. Putting the cycle into the
exception error message should be enough
information, and since we emit an error per
exception anyway, the number of events will still
be lower (although each event might be more
verbose).  -- MOS_MIGRATED_REVID=135846847
",290418,2798,129087,"Janak Ramakrishnan","janakr@google.com","Yue Gan","yueg@google.com"
"983","bazelbuild/bazel","b4f461ecc183d9adc9482f4cad848687ed0227ee",1,"2016-10-25 16:16:35+00:00","Add new skyframe function to lookup the repository
given a path, and use that to report invalid
package references. Fixes #1592.  --
MOS_MIGRATED_REVID=137164164
",292723,2811,129686,"John Cater","jcater@google.com","John Cater","jcater@google.com"
"984","bazelbuild/bazel","578a5122cc4bf6239222226adfa2dafd32c4c220",1,"2016-10-27 19:53:11+00:00","bazel query:  - Extend https://github.com/bazelbui
ld/bazel/commit/83ffb5e7bc034ea2dd1e957249079b3884
a9450d to --output=xml, --output=proto, too. This
makes query much more resilient against freezing /
OOMing from ""select() + select() + select() + ...""
patterns. - Make the above logic accessible to any
output type. - Move
AggregatingAttributeMapper.flattenAttributeValues
to ProtoOutputFormatter, since this is really a
utility method for ProtoOutputFormatter.  --
MOS_MIGRATED_REVID=137429116
",293423,2817,129855,"Greg Estren","gregce@google.com","John Cater","jcater@google.com"
"985","bazelbuild/bazel","db7b04c3a026736314963f8241df4a9ed3126627",2,"2016-10-28 21:04:29+00:00","Introduce proto_lang_toolchain().  RELNOTES: New
rule: proto_lang_toolchain(), to support
LANG_proto_library rules on multiple platforms.
-- MOS_MIGRATED_REVID=137550563
",293523,2820,129978,"Carmi Grushko","carmi@google.com","Laszlo Csomor","laszlocsomor@google.com"
"986","bazelbuild/bazel","fbbd299b0d3ecf6fa2b1c3bcfa47637da2be6c11",3,"2016-11-02 20:04:05+00:00","Refactor MavenDownloader to be a subclass of
HttpDownloader to streamline instantiation of
HttpDownloader and RepositoryCache in
BazelRepositoryModule.  There are sufficient
similarities between the download flows of
HttpDownloader and MavenDownloader such that we
can extend HttpDownloader to MavenDownloader, and
reuse method headers such as checkCache and
download.  GITHUB: #1752  --
MOS_MIGRATED_REVID=137982375
",293968,2823,130188,"Jingwen Chen","jingwen@google.com","Laszlo Csomor","laszlocsomor@google.com"
"987","bazelbuild/bazel","f83f70ed3921b5ed347f063b593eae36f6d950f3",1,"2016-11-09 20:20:13+00:00","Fix NPE when maven_jar sha1 isn't set and caching
is enabled  -- MOS_MIGRATED_REVID=138669967
",295324,2834,130469,"Kristina Chodorow","kchodorow@google.com","Klaus Aehlig","aehlig@google.com"
"988","bazelbuild/bazel","4665e709054dcfe34d1e246caefb8847a560e22a",2,"2016-11-09 21:51:27+00:00","Migrate ActionOwner to @AutoValue.  --
MOS_MIGRATED_REVID=138680612
",295316,2834,130467,"Carmi Grushko","carmi@google.com","Klaus Aehlig","aehlig@google.com"
"989","bazelbuild/bazel","73fa5f47430439db28c200ffa43caace7dbb5829",7,"2016-11-09 23:49:15+00:00","Adds obfuscated constant string implicit output.
-- MOS_MIGRATED_REVID=138695951
",295584,2836,130618,"Googler","noreply@google.com","Klaus Aehlig","aehlig@google.com"
"990","bazelbuild/bazel","0c0735a12f4491a2594bde7c6ac26c1a4d5b6bd9",1,"2016-11-11 01:52:02+00:00","Update package lookup to check for files named
BUILD.bazel before files named BUILD.  Fixes #552.
RELNOTES[NEW]: Packages are defined in BUILD.bazel
as well as BUILD files.  --
MOS_MIGRATED_REVID=138828981
",295853,2837,130642,"John Cater","jcater@google.com","Klaus Aehlig","aehlig@google.com"
"991","bazelbuild/bazel","5bb4ff6886450217f00765c7ed19055ff08e9568",2,"2016-11-15 20:21:38+00:00","Implement basic objc executable linking in the
CROSSTOOL.  The following link features are *not*
implemented yet: 1) Objc++ linking semantics 2)
Dead stripping 3) --should_prioritize_static_libs
4) DSYM generation 5) Coverage support 6) Swift
interop 7) Linkmap  --
MOS_MIGRATED_REVID=139232434
",296913,2837,130785,"Cal Peyser","cpeyser@google.com","Kristina Chodorow","kchodorow@google.com"
"992","bazelbuild/bazel","ed7ced0018dc5c5ebd6fc8afc7158037ac1df00d",7,"2016-11-29 18:29:37+00:00","Support multiple mirror URLs for external repos
This change improves upon
4c67807964e37cfd55bbcda4c6374fcc480bcecc.  - A
urls attribute has been added to the native
workspace rules, with   the exception of maven_jar
and git_repository. The Skylark repository   API
also supports multiple URLs now.  - The earlier
mirrors in the list are preferred. Failover will
happen   automatically in parallel.  - The first
32kB of data is checked before choosing a mirror
in order   to evade captive portals.  - If one's
Internet goes down or a download times out, then
the   download will resume automatically where it
left off, provided the   server supports RFC7233
for that particular file. Please note that
GitHub does not support this for archive
snapshots. Files should   always be mirrored to a
CDN, e.g. GCS, because they support this.  - A
semaphore is now used on downloads so only 8 can
happen at once.  Fixes #1814 Fixes #2131 Fixes
#2008 Fixes #1968 Fixes #1717 Fixes #943 Wont fix
#1194 Fixes tensorflow/tensorflow#5933 Fixes
tensorflow/tensorflow#5924 Fixes
tensorflow/tensorflow#5924 Fixes
tensorflow/tensorflow#5432 See #1607 See #821 See
tensorflow/tensorflow#5080 See
tensorflow/tensorflow#5029 See
tensorflow/tensorflow#4583 See
tensorflow/tensorflow#4058  RELNOTES: A urls
attribute has been added to repository rules to
support multiple mirror URLs for reliably
downloading files.  --
MOS_MIGRATED_REVID=140495736
",300626,2870,131891,"Justine Tunney","jart@google.com","Kristina Chodorow","kchodorow@google.com"
"993","bazelbuild/bazel","5c8d4274356a27a2a7a2998cdd7b0d9095c2e0b6",7,"2016-12-19 22:07:28+00:00","Switch Bazel to use ResourceUsageAnalyzer.java
instead of ResourceShrinker.java.  -- PiperOrigin-
RevId: 142484589 MOS_MIGRATED_REVID=142484589
",305730,2914,133656,"Andrew Pellegrini","apell@google.com","Kristina Chodorow","kchodorow@google.com"
"994","bazelbuild/bazel","1a592765f3fc116ac5c83b80784dcf0c043ccb5e",14,"2016-12-22 17:19:44+00:00","Update depot version of ResourceUsageAnalyzer.java
from the public Gradle source. This version
includes: - support for tools attributes
(whitelist) - analysis of non-xml text files for
resource references - better obfuscation handling
- bug fixes  https://android.googlesource.com/plat
form/tools/base/+/gradle_2.0.0/build-
system/gradle-core/src/main/groovy/com/android/bui
ld/gradle/tasks/ResourceUsageAnalyzer.java  --
PiperOrigin-RevId: 142772328
MOS_MIGRATED_REVID=142772328
",305477,2915,133592,"Andrew Pellegrini","apell@google.com","Klaus Aehlig","aehlig@google.com"
"995","bazelbuild/bazel","112840b4d6fafd04e2381a2e52fbad848a818ea6",1,"2016-12-29 21:49:56+00:00","Remove WalkableGraph#exists and allow
WalkableGraph#getValue and
WalkableGraph#getException to be given non-
existent keys without crashing. Add
WalkableGraph#isCycle to fill the gap in testing
for the difference between non-existence and
depending on a cycle.  -- PiperOrigin-RevId:
143205289 MOS_MIGRATED_REVID=143205289
",305790,2917,133700,"Janak Ramakrishnan","janakr@google.com","John Cater","jcater@google.com"
"996","bazelbuild/bazel","f57730b8d8cd1f0d1e3b2cd59f8c26cadb773b99",3,"2017-01-05 19:43:03+00:00","Some little changes to prep for rolling forward
the execroot change  This are random little nits
that aren't dependent on changing the directory
structure, so it makes the (rather large) CL that
is coming cleaner.  -- PiperOrigin-RevId:
143690681 MOS_MIGRATED_REVID=143690681
",306576,2917,133889,"Kristina Chodorow","kchodorow@google.com","John Cater","jcater@google.com"
"997","bazelbuild/bazel","1a2ab00bfecafc66724f637cf58bf0066175cdba",1,"2017-01-10 08:32:24+00:00","Open sourcing junitrunner tests.  -- PiperOrigin-
RevId: 144053696 MOS_MIGRATED_REVID=144053696
",308404,2950,134447,"Irina Iancu","elenairina@google.com","Marcel Hlopko","hlopko@google.com"
"998","bazelbuild/bazel","3c5e55ff8e058b624ce26e803ff00434c70d4b91",2,"2017-01-10 19:55:08+00:00","Invoke javac using the API, instead of main()
This unifies the test and production javac
invocations. Location arguments (e.g. classpath,
sources) are now set programatically from Paths,
instead of going through string args.  The
classloader masking plugin is now just a custom
filemanager, since javac uses the same context for
the entire compilation and we don't need a plugin
to carry it across annotation processing rounds.
-- PiperOrigin-RevId: 144110025
MOS_MIGRATED_REVID=144110025
",308597,2949,134445,"Liam Miller-Cushon","cushon@google.com","Marcel Hlopko","hlopko@google.com"
"999","bazelbuild/bazel","b7a731189eee8a57c6aee289f7b1bdae91b32d99",3,"2017-01-12 20:11:35+00:00","Fix ResourceUsageModel analysis of <style>
resource bugs by overriding this behavior in the
extended class owned by ResourceUsageAnalyzer.
This makes the fix available to both Blaze and
Bazel, since Bazel uses the AOSP released version
of the com.tools.android.lint library, which
contains ResourceUsageModel, instead of the source
version available in [].  This change is based on
the upstream patch [] and will be removed when the
patch is included in the packaged version released
with Bazel.  -- PiperOrigin-RevId: 144355049
MOS_MIGRATED_REVID=144355049
",309206,2952,134524,"Andrew Pellegrini","apell@google.com","Marcel Hlopko","hlopko@google.com"
"1000","bazelbuild/bazel","4cb32a994308e1b4921471e32a02c49d8ceffb84",1,"2017-01-17 15:41:12+00:00","Expose thinlto_params_file and linker_param_file
as build variables  This cl exposes param files
that were hard-coded before. This enables more
precise placement on the link command line.  This
is a roll-forward of commit
db7a9ea7f6b2af3c4c1f43ad4aa50cd4eca02921  --
PiperOrigin-RevId: 144708270
MOS_MIGRATED_REVID=144708270
",310213,2960,134747,"Marcel Hlopko","hlopko@google.com","Vladimir Moskva","vladmos@google.com"
"1001","bazelbuild/bazel","0d380646da41b7533e9c56c56629b3a7b3083df7",2,"2017-01-20 14:39:55+00:00","Remove the ability for an aspect to propagate a
different aspect.  This functionality is never
used, have never been exposed to Skylark and is a
continuous pain to maintain and test.  --
PiperOrigin-RevId: 145079832
MOS_MIGRATED_REVID=145079832
",310373,2963,134712,"Dmitry Lomov","dslomov@google.com","Vladimir Moskva","vladmos@google.com"
"1002","bazelbuild/bazel","697db16687c0d62f1f26859dd34a02848709788e",1,"2017-01-24 08:58:32+00:00","Move the test environment setup to the
TestRunnerAction.  This is part of unifying the
test strategies; here, I'm working towards sharing
the test environment setup.  This change moves
code from previously closed source code into the
open source parts. The internal change is not
visible, making this look like an addition rather
than a move..  The next change hooks this up to
Bazel. I did this in order to reduce the size of
the change to make it easier to debug, review, and
so that it's smaller in case we have to roll it
back. Unfortunately, that requires duplicating
some of the code in StandaloneTestStrategy until
the next change lands.  -- PiperOrigin-RevId:
145387109 MOS_MIGRATED_REVID=145387109
",309621,2952,134175,"Ulf Adams","ulfjack@google.com","Laszlo Csomor","laszlocsomor@google.com"
"1003","bazelbuild/bazel","a385f73a07dd100d2a07327fc69f73add9db47d5",4,"2017-01-25 02:15:44+00:00","Move rexed proguard map to top level blaze-bin
directory when rex enabled  -- PiperOrigin-RevId:
145495392 MOS_MIGRATED_REVID=145495392
",309450,2953,134189,"Googler","noreply@google.com","Laszlo Csomor","laszlocsomor@google.com"
"1004","bazelbuild/bazel","4a877386b0d647885dbba48714d1be36a36362f4",1,"2017-01-27 19:30:34+00:00","Switch to RunfilesSuppliers for communicating
runfiles  ActionSpawn/SpawnAction now deal
exclusively in RunfilesSuppliers, manifests maps
are no more.  There is some lingering awkwardness,
in particular: - Manifests still need to be
tracked in some places, we can work out if this is
still necessary on a case by case basis. - Skylark
makes actions' runfiles available via
'resolve_command' where they are   consumed by
'action'. I've updated the documentation, though
the name isn't   entirely accurate anymore. That
being said these interfaces _are_ marked as
experimental, so we _should_ be able to be
flexible here.  Overall, I think the benefits
consolidating runfiles into suppliers, from both
code cleanliness and performance perspectives (no
longer needing to parse manifests), outweights the
awkwardnesses.  RELNOTES: resolve_command/action's
input_manifest return/parameter is now list  --
PiperOrigin-RevId: 145817429
MOS_MIGRATED_REVID=145817429
",311323,2974,134886,"Michajlo Matijkiw","michajlo@google.com","Yun Peng","pcloudy@google.com"
"1005","bazelbuild/bazel","47bde4012eb05674e2b100eb985de79db86573f4",4,"2017-02-01 17:14:58+00:00","Fills out some macOS support needed for the
bundler.  This CL also changes some names from
""MacOSX"" to ""macOS"", such as the command line
options, internal constants/enum values, and
platform constants that are accessible from
Skylark but are not let being used. It also adds
some flags that are needed for completeness, like
macos_minimum_os and macos_cpus.  This change
intentionally omits a few reference (such as
""default_macosx_sdk_version"" in ""xcode_version"")
that are currently used in BUILD files in order to
prevent those from breaking--I'll try to attack
those later.  This CL also does *not* add
compiling/linking support for macOS.  --
PiperOrigin-RevId: 146250799
MOS_MIGRATED_REVID=146250799
",311882,2978,134958,"Googler","noreply@google.com","Yun Peng","pcloudy@google.com"
"1006","bazelbuild/bazel","ea459a07ef5e073cca2001d9c5a9b5bc56de415e",1,"2017-02-01 23:32:33+00:00","Inject the changes in the client environment for
the ClientEnvironmentFunction   Using a
precomputed values prevent us from being able to
depends on any environment variable (or we would
invalidate the whole graph each time the
environment change, that is each time we run a
command).  -- Change-Id:
If322df4240271d04b9278e1222f936156531580c
Reviewed-on: https://cr.bazel.build/8400
PiperOrigin-RevId: 146298592
MOS_MIGRATED_REVID=146298592
",312345,2985,135105,"Damien Martin-Guillerez","dmarting@google.com","Yun Peng","pcloudy@google.com"
"1007","bazelbuild/bazel","777f3afea4195e094d45bdfc317b236146117ff7",2,"2017-02-08 17:22:02+00:00","Introduce a Skyframe function:
ActionEnvironmentFunction
ActionEnvironmentFunction returns the list of
environment variable with the one overwritten by
--action_env being replaced. This let other
Skyframe function declares dependency to any value
of the environment and being influenced by the
--action_env flag.  This will be used to declare
dependency of remote repositories on environment
variables (step 3 of
https://bazel.build/designs/2016/10/18/repository-
invalidation.html)  -- Change-Id:
I1ed3fb6f48e8e17d4d64c903fccecb6ed7596350
Reviewed-on: https://cr.bazel.build/7974
PiperOrigin-RevId: 146918603
MOS_MIGRATED_REVID=146918603
",313255,2993,135347,"Damien Martin-Guillerez","dmarting@google.com","Kristina Chodorow","kchodorow@google.com"
"1008","bazelbuild/bazel","a43dacd3f44019fbfb6cacfb91673cbbdcd8f045",1,"2017-02-08 17:39:07+00:00","Stop retrieving CcToolChainProvider statically
from hard-coded attribute "":cc_toolchain"" in
RuleContext, instead take the provider from users
and pass it around to where it is used.  This
gives J2ObjcAspect the ability to specify the C++
toolchain attribute under a different name to
avoid attribute conflicts with attached rules that
have already declared attribute "":cc_toolchain"".
-- PiperOrigin-RevId: 146920294
MOS_MIGRATED_REVID=146920294
",313313,2993,135359,"Rumou Duan","rduan@google.com","Kristina Chodorow","kchodorow@google.com"
"1009","bazelbuild/bazel","e16c564b9d9cd4ee983ca7ae580000111fd12dda",2,"2017-02-08 18:21:11+00:00","Introduce a new SkyValue that merely contains the
workspace name. The workspace name is needed for
package loading, and so splitting out this
computation into a separate skyframe node that can
be change-pruned gives us better incrementality;
previously we'd need to reload all packages on a
WORKSPACE file change.  N.B. (i) This CL doesn't
solve all the other performance issues with
//external in Bazel/Blaze since it's still
inefficiently used for resolving labels like
@foo//bar:baz. (ii) This CL doesn't address the
wasteful invalidation + change pruning of all the
packages.  -- PiperOrigin-RevId: 146925369
MOS_MIGRATED_REVID=146925369
",313457,2996,135422,"Nathan Harmata","nharmata@google.com","Kristina Chodorow","kchodorow@google.com"
"1010","bazelbuild/bazel","29aa0eb17c85a96e3edae8362ba93fddeed4c1e0",2,"2017-02-10 02:43:34+00:00","Open source java 8 desugarer.  Fixes
https://github.com/bazelbuild/bazel/issues/2222.
RELNOTES: Support for Java 8 lambdas, method
references, type annotations and repeated
annotations in Android builds with
--experimental_desugar_for_android.  --
PiperOrigin-RevId: 147109786
MOS_MIGRATED_REVID=147109786
",314540,3007,135818,"Adam Michael","ajmichael@google.com","Kristina Chodorow","kchodorow@google.com"
"1011","bazelbuild/bazel","3a6f6297917b9d97d83d8384e346e2c725819c3d",1,"2017-02-10 22:55:47+00:00","Add @Nullable annotations to
PackageFunction#progressReceiver.  -- PiperOrigin-
RevId: 147202629 MOS_MIGRATED_REVID=147202629
",315242,3017,136119,"Janak Ramakrishnan","janakr@google.com","Dmitry Lomov","dslomov@google.com"
"1012","bazelbuild/bazel","4afb4b513f58c7dd724c7ea8c336be26b57afa45",1,"2017-02-17 11:55:40+00:00","BEP: Also report the xml file in cached test
When the result of a test is reported from cache,
report the full list of files. This requires
knowing the exec root for, e.g., the xml output
file. Therefore, add this path when constructing a
cached TestResult.  -- Change-Id:
Id448eacfe3cfd0d36c25a5344874de4dc57acee9
Reviewed-on: https://cr.bazel.build/8934
PiperOrigin-RevId: 147823951
MOS_MIGRATED_REVID=147823951
",316984,3022,136609,"Klaus Aehlig","aehlig@google.com","Dmitry Lomov","dslomov@google.com"
"1013","bazelbuild/bazel","33751738c77d1ee6a1dffeabcc8007913d7ece65",1,"2017-02-21 10:59:04+00:00","TestResult: make execRoot visible to subclasses
-- PiperOrigin-RevId: 148075887
MOS_MIGRATED_REVID=148075887
",316920,3024,136632,"Klaus Aehlig","aehlig@google.com","Yue Gan","yueg@google.com"
"1014","bazelbuild/bazel","786cfa2ed980e278c42ee474408844f7e3720385",1,"2017-02-23 06:17:21+00:00","Separate the classpaths of the TestRunner with the
test target, and use a separate Classloader to
load the test target's classes. This enables a
clean separation of the classes of the TestRunner
with the target under test.  This is achieved with
the following steps: 1. Start the test runner with
only the bare bones classpaths to the Test
Runner's classes which are used by the system
ClassLoader. 2. Have all the classpaths required
to load the test target's classes in a
TEST_TARGET_CLASSPATH environment variable
exported by the stub script. 3. Use a new
classloader to load all the test target's classes
using the paths in TEST_TARGET_CLASSPATH.  This
additionally enables the persistent test runner
(currently experimental), to reload all the
target's classes for every subsequent test run, so
it can pick up any changes to the classes in
between runs.  The persistent test runner can be
used by adding the argument
--test_strategy=experimental_worker to the bazel
test command. Tested this against: 1.
gerrit/gerrit-common:client_tests: Dismal avg.
improvement of 580ms to 557ms  (just 23ms) 2.
intellij/intellij/base:unit_tests: Somewhat modest
avg. improvement 1661ms to 913ms (748 ms)
RELNOTES: 1) Java tests and suites will now have
to explicitly declare JUnit dependency 2) All non-
legacy java_tests will now be run in a  --
PiperOrigin-RevId: 148309979
MOS_MIGRATED_REVID=148309979
",317197,3025,136681,"Kush Chakraborty","kush@google.com","Yue Gan","yueg@google.com"
"1015","bazelbuild/bazel","777b30d06700f76ba580715429f3663de3fa0529",2,"2017-02-24 16:30:15+00:00","Provide more reporting options to SkyFunctions
With more specific information to be reported by
Skyfunctions, e.g., to inform the build-event
protocol on missing files, the EventHandler
interface is no longer enough. Therefore, provide
an enriched context for reporting events.  --
Change-Id:
I2d06166fe4d5b9054e24ad8c752fafc039e3f9f8
Reviewed-on: https://cr.bazel.build/8794
PiperOrigin-RevId: 148463437
MOS_MIGRATED_REVID=148463437
",318250,3028,136697,"Klaus Aehlig","aehlig@google.com","Yue Gan","yueg@google.com"
"1016","bazelbuild/bazel","822c37816ac669e51bec3853b41849a19ec5e230",1,"2017-02-27 21:55:56+00:00","Reimplement blaze query using an async evaluation
model. Use a concurrent backend for
SkyQueryEnvironment's implementation in order to
achieve parallelism.  Advantages: -New design has
no flaws that the old design had. -Code is
structured so that deadlocks due to thread
starvation are impossible (yup!).  Disadvantages:
-The meat of this change needs to all be in a
single CL because every single QueryFunction and
QueryExpression needs to be rewritten in the async
style.  Still TODO: -Fully embrace the async model
in all QueryFunctions (e.g. 'rdeps', 'allpaths').
-Use concurrency in BlazeQueryEnvironment to
achieve parallel evaluation for (non SkyQuery)
'blaze query' and genquery.  -- PiperOrigin-RevId:
148690279 MOS_MIGRATED_REVID=148690279
",318408,3027,136742,"Nathan Harmata","nharmata@google.com","Yue Gan","yueg@google.com"
"1017","bazelbuild/bazel","ef651712e9bee512967d8ec6ac6d63fda41addab",1,"2017-03-08 08:00:09+00:00","Add a source_jars variable to OutputJar.  Having a
correlation between an output jar and a source jar
is not enough. There may be situations when an
output jar is generated from more source jars, not
just one. We need this flexibility especially in
Skylark for the java sandwich, when the user can
compile multiple source jars.  -- PiperOrigin-
RevId: 149510534 MOS_MIGRATED_REVID=149510534
",319795,3045,137210,"Irina Iancu","elenairina@google.com","Vladimir Moskva","vladmos@google.com"
"1018","bazelbuild/bazel","fb2d38b34219b06cdbb280ad2ab5132b658dce8f",2,"2017-03-10 23:01:45+00:00","Improve query error msg when a package has a
broken Skylark load  The error message logged
during query (and build) when a package has a
broken Skylark load statement was not specific.
Previously, it said ""package contains errors:"" and
then the package name.  Also, this error message
was not emitted when using SkyQueryEnvironment and
evaluating a query containing a
""TargetsBelowDirectory"" pattern (such as
//foo/...) when a package below the specified
directory had such an error.  The approach taken
by this CL is to include any package loading error
message in the SkyValue produced by
CollectPackagesUnderDirectoryFunction, and report
them during evaluation of a TargetsBelowDirectory
pattern.  RELNOTES: Evaluation of commands on
TargetsBelowDirectory patterns (e.g. //foo/...)
matching packages that fail to load now report
more detailed error messages in keep_going mode.
-- PiperOrigin-RevId: 149802362
MOS_MIGRATED_REVID=149802362
",320296,3047,137461,"Mark Schaller","mschaller@google.com","Vladimir Moskva","vladmos@google.com"
"1019","bazelbuild/bazel","42d313fa526398b76aa122106adf1518a784e12f",1,"2017-03-17 21:27:29+00:00","Open source some tests for android_binary.  --
PiperOrigin-RevId: 150484382
MOS_MIGRATED_REVID=150484382
",323627,3067,138191,"Adam Michael","ajmichael@google.com","Yue Gan","yueg@google.com"
"1020","bazelbuild/bazel","c6a6a7791b1464bea79bf9af01f00360b0147450",1,"2017-03-20 06:48:15+00:00","Add support to read inputs from directories  --
PiperOrigin-RevId: 150595482
MOS_MIGRATED_REVID=150595482
",323833,3070,138283,"Googler","noreply@google.com","Yue Gan","yueg@google.com"
"1021","bazelbuild/bazel","92a2d0253fcaba384dc82b93f20d2f97d4d78e14",2,"2017-03-20 17:00:45+00:00","Define the ConfigFeatureFlagConfiguration
fragment.  This will eventually be used to store
the values of user-defined configuration flags,
once such a rule is added. Because this rule does
not exist yet, this fragment is currently not part
of the rule class provider. This will have to be
done when that rule is turned on.  -- PiperOrigin-
RevId: 150638292 MOS_MIGRATED_REVID=150638292
",321481,3061,138077,"Michael Staib","mstaib@google.com","Yue Gan","yueg@google.com"
"1022","bazelbuild/bazel","2587a6dd010266c749b6234115b9333830a951a7",6,"2017-03-22 15:33:40+00:00","Open source some Android tools' tests.  --
PiperOrigin-RevId: 150881315
MOS_MIGRATED_REVID=150881315
",327204,3087,138797,"Adam Michael","ajmichael@google.com","Yue Gan","yueg@google.com"
"1023","bazelbuild/bazel","e182500db1f331fd39f7e5d6215e6fdedbb0791a",1,"2017-03-23 16:53:40+00:00","Avoid to re-index classpath and bootclasspath
Avoid to re-index classpath and bootclasspath for
each input/output pair since they share the same
classpath and bootclasspath. RELNOTES: n/a  --
PiperOrigin-RevId: 151015798
MOS_MIGRATED_REVID=151015798
",327145,3088,138756,"Googler","noreply@google.com","Yue Gan","yueg@google.com"
"1024","bazelbuild/bazel","ab10f47891d2045fc6c902de0ac33ed24c01a01d",1,"2017-03-24 17:08:24+00:00","Remove BuildingState, since it only has one field.
Instead, keep the signaledDeps field directly in
InMemoryNodeEntry.  Should save ~24 bytes per
freshly evaluating node entry (I haven't
calculated object alignment for InMemoryNodeEntry
now, so could be more or less). Also might save
some memory for re-evaluating node entries, since
the BuildingState class had to be padded out to a
multiple of 8 bytes before the DirtyBuildingState
fields could start. Don't actually know if that
was happening.  -- PiperOrigin-RevId: 151138224
MOS_MIGRATED_REVID=151138224
",327743,3088,138911,"Janak Ramakrishnan","janakr@google.com","Philipp Wollermann","philwo@google.com"
"1025","bazelbuild/bazel","6b60718363c6b3abed8e68b524fe4641b4991517",2,"2017-03-27 15:37:50+00:00","Clarify InvocationPolicy origins.  Some policies
can come from the module API, and some come from
the user via startup argument. Clarify which one
is which.  -- PiperOrigin-RevId: 151324618
MOS_MIGRATED_REVID=151324618
",328127,3089,138976,"Chloe Calvarin","ccalvarin@google.com","Philipp Wollermann","philwo@google.com"
"1026","bazelbuild/bazel","1cb9a012a73d6adfc0027099b5f3bd94784cc300",3,"2017-03-28 20:18:21+00:00","Log the server pid to java logging.  PiperOrigin-
RevId: 151489034
",328930,3094,139144,"janakr","janakr@google.com","Philipp Wollermann","philwo@google.com"
"1027","bazelbuild/bazel","db4dec23008069a4c5ceccdb686e515808c921ba",4,"2017-03-28 22:39:35+00:00","Clear AspectValues when discarding analysis cache,
along with ConfiguredTargetValues. Also clear
transitive packages for both, even for top-level
targets.  This is not expected to save significant
memory, but is expected to reduce the number of
references to Packages, allowing them to be
dropped more easily when discarding analysis cache
and running in batch mode.  PiperOrigin-RevId:
151508877
",328978,3094,139151,"janakr","janakr@google.com","Philipp Wollermann","philwo@google.com"
"1028","bazelbuild/bazel","bd151bf2623fe27f66079335ade5048d80e9f772",4,"2017-03-30 17:46:21+00:00","Modify
AndroidSemantics#addMainDexListActionArguments to
take proguard map as argument.  This is needed
because which proguard map that gets added as an
argument to mainDexListAction depends on whether
or not Rex is enabled  RELNOTES: None
PiperOrigin-RevId: 151720305
",330692,3107,139499,"Googler","noreply@google.com","Philipp Wollermann","philwo@google.com"
"1029","bazelbuild/bazel","090351eec48eec401efbbf28885b1258a8416ea1",1,"2017-03-31 15:54:17+00:00","Move BuildConfiguration option data access to a
new class.  ConfigSetting is being moved to
rules/config, and that means that it no longer has
its special package-private access to
BuildConfiguration. The solution: a new
TransitiveOptionDetails class which cuts down on
clutter in BuildConfiguration and is publicly
accessible.  However, we don't really want anyone
accessing BuildConfiguration's
TransitiveOptionsDetails - only config-related
rules should ever need it. As a result,
BuildConfigurationOptionDetails provides public
access to BuildConfiguration's
TransitiveOptionDetails, but is limited via Blaze
visibility to only configuration rules.  RELNOTES:
None.  PiperOrigin-RevId: 151828068
",332383,3121,140024,"mstaib","mstaib@google.com","Marcel Hlopko","hlopko@google.com"
"1030","bazelbuild/bazel","2ce304aebe95b9e377fc9d1e0d9f1dd5ebfdd60d",1,"2017-04-04 08:04:01+00:00","Extract a SpawnRunner interface  The
RemoteSpawnRunner now implements the SpawnRunner
interface.  Note that Google's internal
implementations were also retrofitted, and
SpawnRunner is intended as a stable interface;
that's also why I decided to move all params into
SpawnExecutionPolicy, which is, unfortunately, not
quite done yet.  The specification of SpawnRunner
is also still incomplete. In particular, it is
still missing execution info keys, as well as
inputs and outputs handling.  This is a step
towards unifying all SpawnStrategy
implementations, with the SpawnRunner
implementations performing the actual Spawn
execution.  There should be no user-visible
semantic changes to the code, but one small fix: -
GrpcActionCache was trying to download files even
if there were none  PiperOrigin-RevId: 152105696
",332865,3124,140265,"ulfjack","ulfjack@google.com","Marcel Hlopko","hlopko@google.com"
"1031","bazelbuild/bazel","d705c98773afd3d08f7c04f71263b23f3dbc98f7",3,"2017-04-04 19:09:15+00:00","Rephrase AbstractAttributeMapper#visitLabels such
that we can avoid creating a temporary
Type.LabelVisitor instance per Attribute being
visited. Instead, we can now create one temporary
object per visitation. Getting rid of this
dimension of scaling reduces the amount of garbage
created.  RELNOTES: None  PiperOrigin-RevId:
152161836
",332137,3123,139974,"nharmata","nharmata@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1032","bazelbuild/bazel","72143fef3fef6a76b17824f9543bfdacca7f627f",1,"2017-04-05 14:04:30+00:00","Expand the SpawnRunner/SpawnResult interfaces to
cover more functionality  The intention is for the
SpawnRunner interface to be the single, unified
interface for running Spawns, so it needs to cover
both execution and error reporting functionality
for all current implementations, some of which are
internal to Google.  Note in particular the
unified status code - it reports success if the
subprocess was executed regardless of its exit
code, which is reported separately.  PiperOrigin-
RevId: 152252975
",332697,3129,140180,"ulfjack","ulfjack@google.com","Marcel Hlopko","hlopko@google.com"
"1033","bazelbuild/bazel","3a081f7030616b7ccfbf56cb3955c9533d758f40",1,"2017-04-07 11:21:38+00:00","Open source LocalSpawnRunner  The LocalSpawnRunner
is a non-sandboxed local execution implementation,
which will replace the current
StandaloneSpawnStrategy. The code has been around
for a long time and has seen a lot of bugfixes. It
also supports local prefetching, which is required
for Google. I have a follow-up change to make it
support Windows, so it's not a drop-in replacement
for StandaloneSpawnStrategy yet. PiperOrigin-
RevId: 152486973
",333647,3137,140634,"ulfjack","ulfjack@google.com","Marcel Hlopko","hlopko@google.com"
"1034","bazelbuild/bazel","8989e19ab957a18f4937531dd55b5c30b207e6df",2,"2017-04-20 13:45:25+02:00","Rewrite repository lookup to return a failed value
rather than throw  We need to lookup repositories
as part of converting exec paths to artifacts,
which in turn is needed for action cache lookups.
These lookups should not cause a Skyframe exit, so
we must not throw an exception here, unless the
error makes it impossible to continue. Instead, we
need to leave the decision whether to error out or
not to the caller.  Note that we may unnecessarily
fetch a remote repository in order to do the
action cache lookup, even if the action no longer
depends on the input file, although this should
only be possible for C++ compile actions. It's
possible that there's another bug in the C++
compile action key computation that also
contributes.  This change also makes it so that
the post-resolution action cache code ignores any
errors wrt. repository lookup rather than
throwing. If any of the paths could not be found,
then the action cache lookup fails and we re-
execute the corresponding action, which is exactly
what should happen.  Fixes #2759.  PiperOrigin-
RevId: 153696243
",346822,3417,148163,"ulfjack","ulfjack@google.com","Klaus Aehlig","aehlig@google.com"
"1035","bazelbuild/bazel","ebd299084e0e4e37fef104619361c8e3c5ef8557",3,"2017-04-20 20:35:04+02:00","Default and static interface desugaring RELNOTES:
n/a  PiperOrigin-RevId: 153735445
",346976,3418,148261,"kmb","kmb@google.com","Vladimir Moskva","vladmos@google.com"
"1036","bazelbuild/bazel","1a5c63c6a4f465c3ca3825c8979898d174b44bf8",1,"2017-04-25 18:07:23+02:00","Add check to LocalRepositoryFunction that the path
contains a WORKSPACE file.  Fixes #2841.
RELNOTES: Every local_repository now requires a
WORKSPACE file.  Change-Id:
I11d50b852796b8f919b1a61c8c9b59cb78c5b724
PiperOrigin-RevId: 154179215
",348037,3426,148634,"John Cater","jcater@google.com","Vladimir Moskva","vladmos@google.com"
"1037","bazelbuild/bazel","543e7837e2cbb6f110aae2d5b46a84c12dc39ffd",1,"2017-04-27 16:11:07+02:00","Make JavaCompilationArtifacts an AutoValue.
Helpful for debugging.  DELTA=41 (3 added, 29
deleted, 9 changed) DELTA_BY_EXTENSION=java=12
RELNOTES: None. PiperOrigin-RevId: 154418751
",348731,3430,148825,"Googler","noreply@google.com","Vladimir Moskva","vladmos@google.com"
"1038","bazelbuild/bazel","ba827ba91d8e23fcfde3ebce538f0a33acec109d",1,"2017-04-27 16:42:20+02:00","Retain target kind in TransitiveTraversalValue
Introduces two sub-classes to
TransitiveTraversalValue to store target
references and errors separately.  Target kind is
retained in the TransitiveTraversalValues for all
targets without errors. Interner now interns
values for all built-in targets without errors.
RELNOTES: None PiperOrigin-RevId: 154421161
",348758,3430,148826,"Googler","noreply@google.com","Vladimir Moskva","vladmos@google.com"
"1039","bazelbuild/bazel","67b992804f36e1e9bdb72285455fcc2f4b01307c",2,"2017-04-27 17:43:16+02:00","Simplify RecursiveDirectoryTraversalFunction:
neither of its use cases were using the env
variable passed into their visitors' methods,
which means that we can stop passing them, and
simplify the code a bit.  Just a cleanup I
noticed.  PiperOrigin-RevId: 154426694
",348703,3430,148815,"janakr","janakr@google.com","Vladimir Moskva","vladmos@google.com"
"1040","bazelbuild/bazel","d000e0c996e2c7f8f68d3bc4d571427c11760884",1,"2017-04-28 13:35:05+02:00","Extend BlazeModule to support listening to the
console output  Besides writing console output to
the console and the command log, allow modules to
register other places where the output should be
recorded to. This will allow the build-event
protocol to also report on the console output.
Change-Id:
Ie700243120b0db7c3c68d192abeb0ab7033dc175
PiperOrigin-RevId: 154528369
",348965,3432,148872,"Klaus Aehlig","aehlig@google.com","Vladimir Moskva","vladmos@google.com"
"1041","bazelbuild/bazel","9b3b2e9dd488d99266e6f4b8e41450074a9ace68",4,"2017-05-02 11:18:42+02:00","BuildEventStreamer: support also providing
stdout/stderr  Extend the build-event streamer to
also report about stdout/stderr, if provided. This
information is reported in the progress events. At
the moment, we only report stdout/stderr in
progress events we send anyway, but the interface
is generic enough that we could add time-based
reporting later, if needed. Also note, that at the
end of the build, we report the final progress
event, so that all stdout/stderr generated before
the build-complete event get also reported in the
build-event protocol.  Change-Id:
If5dbd59c151edbce02d0a9b2e5938b63c0a5dc58
PiperOrigin-RevId: 154811110
",408109,3637,170632,"Klaus Aehlig","aehlig@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1042","bazelbuild/bazel","4b7aae4907dc3fa24659444c28ee984c8a519d36",1,"2017-05-04 17:16:09-04:00","Make TransitiveInfoProviderMap an interface.
PiperOrigin-RevId: 155125357
",410084,3651,171094,"Googler","noreply@google.com","Kristina Chodorow","kchodorow@google.com"
"1043","bazelbuild/bazel","cbbb423663b154d82e3dfa5e9a56839583987999",1,"2017-05-09 04:53:37-04:00","RELNOTES: Effectively remove sysroot from
CppConfiguration and allow it to use select
statements.  PiperOrigin-RevId: 155480011
",410815,3659,171278,"Googler","noreply@google.com","Kristina Chodorow","kchodorow@google.com"
"1044","bazelbuild/bazel","c4a8e91b9079933b242a492372ce59b0342a41c5",2,"2017-05-20 04:07:15+02:00","Create a loadPackages() method that loads multiple
packages simultaneously, using multiple threads.
The immediate upside is that if multiple packages
load the same bzl file, that file will only be
read once when using loadPackages().  RELNOTES:
None PiperOrigin-RevId: 156621988
",411892,3681,171766,"carmi","carmi@google.com","Irina Iancu","elenairina@google.com"
"1045","bazelbuild/bazel","b36774ac955c5af15d59df36c66dc69f89674a49",1,"2017-05-22 11:33:47+02:00","Extract :cc_toolchain as constant  And while at it
cleanup all the calls of CppHelper.getToolchain
and CppHelper.getFdoSupport.  RELNOTES: None.
PiperOrigin-RevId: 156716291
",411934,3681,171783,"hlopko","hlopko@google.com","Irina Iancu","elenairina@google.com"
"1046","bazelbuild/bazel","73ff45075e5b23441c66c0f7dad3ae84a9cf0436",2,"2017-05-25 19:41:19+02:00","Use nested sets for configured target runfiles
instead of flattened lists.  RELNOTES: None
PiperOrigin-RevId: 157124371
",412551,3682,171895,"Googler","noreply@google.com","Irina Iancu","elenairina@google.com"
"1047","bazelbuild/bazel","a47780541536764cf56d09f78a988d6155689c7f",3,"2017-05-26 11:37:28+02:00","Use FeatureConfiguration to compute value of
CC_FLAGS make variable  This cl introduces new
action_config type for Crosstool named 'generic'.
This can be used to set the value of CC_FLAGS make
variable using much more expressive mechanism
(action_configs + features) than previous
make_variable Crosstool messages. This has been
requested by the C++ LPT.  However, as
FeatureConfiguration needs RuleContext, CC_FLAGS
cannot be computed using configuration only
anymore. Also, FeatureConfiguration is C++ rules
specific class, and Bazel build-base cannot depend
on it. Therefore we cannot use
FeatureConfiguration for ExtraActions, for
example. Because it cannot be made perfect, this
cl is not updating all the possible places that
expand make variables but limits the scope to:  *
genrule (the only widely used rule that often
expands make variables) * *_test (CC_FLAGS is used
by Tensorflow in the 'args' attribute) * cc_rules
(people sometimes set 'copts' to something like:
""-DCC_STRING=\\\""$(CC)\\\""
-DCC_FLAGS_STRING=\""$(CC_FLAGS)\""""  The long term
plan is to use Skylark C++ API to get C++ command
lines, so CC_FLAGS together with this inconsistent
solution will be removed.  RELNOTES: CC_FLAGS can
be defined using 'generic' action_config in
CROSSTOOL PiperOrigin-RevId: 157202883
",412932,3686,172025,"hlopko","hlopko@google.com","Irina Iancu","elenairina@google.com"
"1048","bazelbuild/bazel","18dc43f1e11f61fd0c3f70e7b198e536d86c82e5",2,"2017-06-02 12:13:36-04:00","Expose .ap_ artifact as a skylark provider
RELNOTES: none PiperOrigin-RevId: 157837746
",413244,3690,172021,"Googler","noreply@google.com","John Cater","jcater@google.com"
"1049","bazelbuild/bazel","2730bae6223d611fbe5a45463cd788c4f4cc076f",2,"2017-06-08 23:56:05+02:00","BES: Open Source the build event service gRPC
client implementation.  This change moves the BES
code from blaze to bazel.  RELNOTES: None.
PiperOrigin-RevId: 158445754
",413930,3703,172144,"buchgr","buchgr@google.com","Jakob Buchgraber","buchgr@google.com"
"1050","bazelbuild/bazel","da0a701d010785b9687cf0548c460f5116f3b176",4,"2017-06-14 13:40:23+02:00","Propagate postable events further up  With the
introduction of the ExtendedEventHandler,
SkyFunctions were given the possibility to post
additional Postable events in addition to the
standard events. As SkyFunctions have to be
restartable, events are collected first and only
posted after the function is finished. Make sure
that this also applies to postable events and they
are not dropped.  Change-Id:
Ie1c3a0134935c75ea984fa2cc924e7327a9da81f
PiperOrigin-RevId: 158964337
",414767,3707,172239,"Klaus Aehlig","aehlig@google.com","Yun Peng","pcloudy@google.com"
"1051","bazelbuild/bazel","9eea05d068a06ab642dd9d86d46ee5fa2e36b02e",1,"2017-06-14 16:11:32+02:00","Switching to Watcher API instead of
wait_for_completion, in preparation for
deprecating the wait_for_completion field.  Note
on errors: in the RemoteWorker, I currently handle
all errors as onError of the watch call. Other
options are: pass them as the operation error
field, and pass some of them as the onError of the
execute call. For now, I'm just using the simplest
option; the Bazel client is ready to handle all
possible options.  RELNOTES: none PiperOrigin-
RevId: 158974207
",415004,3707,172244,"olaola","olaola@google.com","Yun Peng","pcloudy@google.com"
"1052","bazelbuild/bazel","bea67e9e7bc5b25dc0569bc429d92434a76b9a84",1,"2017-06-16 00:26:27+02:00","A bunch of unrelated cleanups: -Have
SkylarkImportLookupFunction include causes in the
SkyFunctionExceptions it throws. -Better
transitive skyframe error declarations in
ASTFileLookupFunction. -Have ErrorInfo
differentiate between direct and transitive
transience. -Introduce ErrorInfoManager and have
ParallelEvaluator/ParallelEvaluatorContext use it.
RELNOTES: None PiperOrigin-RevId: 159163186
",415354,3709,172274,"nharmata","nharmata@google.com","Yun Peng","pcloudy@google.com"
"1053","bazelbuild/bazel","9c931b3dfe204e5c25d016876c6ccb3ea55e7998",1,"2017-06-19 19:35:25-04:00","Access interface constants to explicitly trigger
the execution of interface initializers. The
problem is that when we desugar default methods,
the static intializer of interface will not be
executed. The JVM spec says that if an interface
has default methods, then when it is loaded, it
will also be initialized. After we desugar such an
interface, its default methods are removed, and
when we load the interface, the <clinit> will not
be executed.  This CL checks whether an interface
has default methods and fields. If yes (needs to
be initialized when the interface is loaded), it
injects field access code to access the interface
fields in the <clinit> of the companion class. We
also create a constant $$CONSTANT$$ in the
companion class.  Then for all the classes that
implement the interface, we inject GETSTATIC in
the class <clinit> to the $$CONSTANT$$ of the
companion class of the interface. This indirection
is to avoid the IllegalAccessError when the
interface is package private.  Note that accessing
an arbitrary interface field does not guarantee
the interface will be initialized. We need to
access the field that is initialized in the
interface static initializer.  RELNOTES: None
PiperOrigin-RevId: 159496992
",415746,3711,172350,"cnsun","cnsun@google.com","Kristina Chodorow","kchodorow@google.com"
"1054","bazelbuild/bazel","231e24e77f56a28d7032eee3e03bda78c8cc4589",1,"2017-06-19 19:46:47-04:00","Extract ImmutableSharedKeysMap class from
TransitiveInfoProviderMap.  PiperOrigin-RevId:
159498323
",415890,3713,172399,"Googler","noreply@google.com","Kristina Chodorow","kchodorow@google.com"
"1055","bazelbuild/bazel","29916a909f525501b49f7b751e633f27abf306b1",1,"2017-06-21 18:06:06+02:00","Refactor our RemoteWorker for easier maintenance
in the future.  This contains no real functional
changes apart from slightly tweaked log messages.
RELNOTES: None.  Change-Id:
I84fb5cf7b1e31a5ec693bbf39e22573e1750ff04
PiperOrigin-RevId: 159700159
",415717,3718,172417,"Philipp Wollermann","philwo@google.com","Philipp Wollermann","philwo@google.com"
"1056","bazelbuild/bazel","bf2e2d8003a2418941404741fce82f1e51b3b28b",2,"2017-06-21 23:12:51+02:00","In the Blaze Query implementation, use Set and Map
implementations backed by the same KeyExtractor
used that the Uniquifier implementation uses. This
fixes a hypothetical issue where we were
previously relying on Target#equals/hashCode.
RELNOTES: None PiperOrigin-RevId: 159741545
",415845,3718,172451,"nharmata","nharmata@google.com","Philipp Wollermann","philwo@google.com"
"1057","bazelbuild/bazel","c35f086c275b5b088e12cea908ff2b2550853c06",1,"2017-06-27 23:23:15+02:00","Do not take all possible values of an attribute
for selector lists of list types when running
query output. Instead, simply return a list of
list types, each list type being the concatenation
of each of the possible outputs in each select.
RELNOTES: Make querying attributes formed by
selector lists of list types more efficient by no
longer listing every possible combination of
attribute value but by more compactly storing the
possible values of the list. PiperOrigin-RevId:
160326041
",418014,3710,172265,"shreyax","shreyax@google.com","Marcel Hlopko","hlopko@google.com"
"1058","bazelbuild/bazel","873d25e1f2c20606bc35368c0d5607196626d6e8",1,"2017-06-28 22:43:08+02:00","Enable aapt2 support in library actions.
RELNOTES: None PiperOrigin-RevId: 160445869
",418472,3711,172361,"corysmith","corysmith@google.com","Marcel Hlopko","hlopko@google.com"
"1059","bazelbuild/bazel","469079377a9561a7c2cc7a46492c44e012b9fb33",1,"2017-06-30 14:01:45+02:00","Refactor Printer  It's now easier to customize
Printer if in different situations objects should
be printed differently. Also its API is cleaner
now. Names of methods of SkylarkValue objects now
reflect names of Skylark functions:
SkylarkValue#repr and SkylarkPrintableValue#str.
PiperOrigin-RevId: 160635154
",420900,3738,173132,"vladmos","vladmos@google.com","Marcel Hlopko","hlopko@google.com"
"1060","bazelbuild/bazel","9c787fac7e556db7eae5c6ddea97eab46f825c87",1,"2017-07-04 11:45:22-04:00","Allow strings as default values of labels  Strings
now can be passed to the default parameter of
attr.label, attr.label_list, and
attr.label_keyed_string_dict.  PiperOrigin-RevId:
160896987
",422117,3746,173346,"vladmos","vladmos@google.com","John Cater","jcater@google.com"
"1061","bazelbuild/bazel","51f76dbb931b025c6066af91e8c53a9715014b8a",1,"2017-07-07 11:19:45-04:00","Platform -> ApplePlatform, to avoid ambiguity with
the newly introduced Platform rule.  PiperOrigin-
RevId: 161203491
",434650,3799,175004,"cpeyser","cpeyser@google.com","John Cater","jcater@google.com"
"1062","bazelbuild/bazel","9cce261badc3089ef676a8b4ea9816890d08ee45",1,"2017-07-10 12:17:22+02:00","Android: fix path bugs and enable tests on Windows
Now all tests under
//src/test/j/c/g/devtools/build/android/...:* pass
on Windows, yay!  Also adjust test sizes as
advised by Bazel (using
--test_verbose_timeout_warnings).  See
https://github.com/bazelbuild/bazel/issues/3264
Change-Id:
I3f1f4978306bdedaf805149295daa413d2248fbb
PiperOrigin-RevId: 161373699
",435717,3806,175217,"Laszlo Csomor","laszlocsomor@google.com","László Csomor","laszlocsomor@google.com"
"1063","bazelbuild/bazel","3fbd7c43fe329c7052b7105d6941205680fb1a3d",1,"2017-07-10 13:19:19+02:00","Reimplement RemoteSpawnStrategy on top of
RemoteSpawnRunner  It is intentional that
RemoteSpawnStrategy no longer contains any remote
execution specific code. My intent is to merge all
SpawnStrategy implementations into a single class
(similar to the new RemoteSpawnStrategy), and
delegate all the specific work to SpawnRunner
implementations. However, we're not there yet, and
we still need to be able to look up SpawnStrategy
implementations by name through the annotations,
so we still need separate classes for now.  We
might also want to have a shared test suite for
all SpawnRunner instances that checks for basic
compliance with the specification.  Progress on
#1531.  PiperOrigin-RevId: 161377751
",435683,3807,175226,"ulfjack","ulfjack@google.com","László Csomor","laszlocsomor@google.com"
"1064","bazelbuild/bazel","8a9be26492651afd8c71e5da98751e36d948b4e5",6,"2017-07-10 13:30:04+02:00","Windows, Android BusyBox: create JunctionCreator
Introduce the JunctionCreator classes that the
Android BusyBox can use to work around path length
limitations on Windows.  See
https://github.com/bazelbuild/bazel/issues/3264
Change-Id:
Ia5ee39f0635dcc2690ffb1755dc56d21e7bc7536
PiperOrigin-RevId: 161378422
",435876,3812,175360,"Laszlo Csomor","laszlocsomor@google.com","László Csomor","laszlocsomor@google.com"
"1065","bazelbuild/bazel","f626144b6fd245fcf0f793e18dda513b2263a7a7",2,"2017-07-12 23:50:23+02:00","Add skyfunction to return all registered toolchain
labels.  Part of #2219.  Change-Id:
I7293fd13bd8e0931f92afd051e18a9e7ce63762d
PiperOrigin-RevId: 161721445
",434876,3809,175009,"John Cater","jcater@google.com","László Csomor","laszlocsomor@google.com"
"1066","bazelbuild/bazel","98375a24ab40bfe0ff124401ca2d95740f67e072",1,"2017-07-13 19:18:50+02:00","Add a SkyFunction to perform toolchain resolution.
Part of #2219.  Change-Id:
I339009c13639144ca756eb07c520df7d430a64e3
PiperOrigin-RevId: 161826487
",435445,3813,175146,"John Cater","jcater@google.com","László Csomor","laszlocsomor@google.com"
"1067","bazelbuild/bazel","28adce590d95cb9aa826fcd9f939efbb8e1eab7e",1,"2017-07-13 19:55:32+02:00","If globbing throws an IOException, fail to
construct the package instead of constructing the
package with an error.  Prior to this change, if a
Package.Builder object was constructed, it was
guaranteed that a Package (possibly with errors)
would be created. This is no longer true: if an
IOException is set on the Package.Builder object,
it will throw a NoSuchPackageException during
#build().  PiperOrigin-RevId: 161832111
",435703,3814,175170,"janakr","janakr@google.com","László Csomor","laszlocsomor@google.com"
"1068","bazelbuild/bazel","a76c94be7c56b93fc5a2f9ececfba7ac1f61f69c",1,"2017-07-14 17:06:05+02:00","CustomCommandLine.Builder: clean up its interface
In this commit: - remove unused methods and
classes - turn CustomCommandLine.ArgvFragment into
an   interface - remove the
CustomCommandLine.TreeFileArtifactArgvFragment
abstract class; it only had one remaining
subclass - add @Nullable annotations where nulls
are fine - add Precondition checks for non-
nullable args - simplify the interface by removing
add* methods   that can be composed of other add*
methods; this   makes it easier to see what the
callers do with   the Builder - remove add*
methods that add a single argument   followed by a
list of other elements (or a   joined string of
them); these had a bug in that   they didn't check
if the collection was empty   (only that it was
not null), and if it was empty   then the single
argument was still added though   it was not
followed by any value - fix call sites of add*
methods where we   previously could have added a
flag with an empty   collection - audit every
affected call site  RELNOTES: none PiperOrigin-
RevId: 161957521
",436599,3817,175254,"laszlocsomor","laszlocsomor@google.com","Jakob Buchgraber","buchgr@google.com"
"1069","bazelbuild/bazel","455110ce3c4bcccfec30fc03f7976cdae05c92ce",1,"2017-07-16 04:23:16+02:00","ResourceFilter supports dynamically configured
resource filtering  Dynamically Configured
Resource Filtering change 3/6  Resource filtering
behaves somewhat differently when dynamically
configured. Resources obtained from dependencies
will have already been filtered and do not need to
be filtered again. Resources that were filtered
out do not need to be tracked since resource
processing will never receive a reference to them
anyway.  Also, to make builds where ResourceFilter
is dynamically configured, add equals and hashCode
methods (otherwise, the configuration code throws
a NullPointerException) and a global output prefix
(otherwise, conflicts can occur).  To ensure that
the global output prefix (and the ResourceFilter
object itself) is the same regardless of the
ordering of filters in the android_binary, build
the filters into a set, not a list, and sort them
as part of creating the ResourceFilter object.
This way, for example, objects built with filters
""en,fr"", ""fr,en"", and ""en,en,fr"" will all end up
equal.  Finally, rename the getFilteredResources
method to better reflect its new role, and improve
the isPrefiltering method to not try to prefilter
if there are no filters.  Add tests for all of
this, and helper methods for all of those tests,
including, most notably, a makeResourceFilter
method that instantiates a ResourceFilter
similarly to how it is actually created outside of
tests (rather than directly calling the
constructor) and a fake implementation of
AttributeMap to support this.  RELNOTES: none
PiperOrigin-RevId: 162099178
",436867,3821,175519,"Googler","noreply@google.com","Jakob Buchgraber","buchgr@google.com"
"1070","bazelbuild/bazel","f4aeaedb5f72f234711813b84e214c1edd94d643",1,"2017-07-18 16:30:36+02:00","CustomCommandLine: add emptiness checks  This is a
semantic roll-forward of https://github.com/bazelb
uild/bazel/commit/a76c94be7c56b93fc5a2f9ececfba7ac
1f61f69c which was rolled back in https://github.c
om/bazelbuild/bazel/commit/33cd68e18f554b98194b4ce
924580d3333ab9217 due to memory regressions.  In
this commit: - add @Nullable annotations to
CustomCommandLine.Builder.add* methods where it
makes sense - add Preconditions.checkNotNull for
non-nullable   arguments - add emptiness checks
for Iterables in   add(String, Iterable) style
methods, to avoid   adding the argument when the
Iterable is empty   and so the argument would not
be followed by any   values  RELNOTES: none
PiperOrigin-RevId: 162349842
",437370,3820,175631,"laszlocsomor","laszlocsomor@google.com","Klaus Aehlig","aehlig@google.com"
"1071","bazelbuild/bazel","be83f13d14fe090b111ced12c835b4c092184ac9",7,"2017-07-18 18:12:09+02:00","Now that SkyKey is an interface, accept Iterable<?
extends SkyKey>  A subsequent CL makes
TargetPatternKey implement SkyKey, and it's much
nicer if I can pass lists of TargetPatternKey to
the various Skyframe APIs.  PiperOrigin-RevId:
162359843
",437600,3820,175644,"ulfjack","ulfjack@google.com","Klaus Aehlig","aehlig@google.com"
"1072","bazelbuild/bazel","9bdef4370fa952097509e413689597e8431fec4b",1,"2017-07-19 14:54:42+02:00","Refactor TargetPatternPhaseFunction  - Make
TargetPatternPhaseKey implement SkyKey - Move the
TargetParsingCompleteEvent posting into the
function - Split the time reporting out into
TargetParsingPhaseTimeEvent  PiperOrigin-RevId:
162475743
",438290,3825,175736,"ulfjack","ulfjack@google.com","Klaus Aehlig","aehlig@google.com"
"1073","bazelbuild/bazel","de965ac47e5dedf9dd43004d7523dbfa5ab64de1",4,"2017-07-31 21:07:51+02:00","Better names for declared providers-related
classes.  Follows https://docs.google.com/document
/d/1aAIVWvHPERDz2cv_PCFGwr8dvh5FcAkENFoRsNS4clk/.
RELNOTES: None. PiperOrigin-RevId: 163728291
",439147,3828,176247,"dslomov","dslomov@google.com","Dmitry Lomov","dslomov@google.com"
"1074","bazelbuild/bazel","78105ee42f9caf62492b69a8455bb42f7acef407",1,"2017-08-02 23:48:22+02:00","Tolerate missing interface markers in method calls
from interface methods to methods in that
interface. RELNOTES: none  PiperOrigin-RevId:
164041648
",439364,3832,176431,"kmb","kmb@google.com","Dmitry Lomov","dslomov@google.com"
"1075","bazelbuild/bazel","ce59d4dc6c7ea461c2945e80e508fa7b4d2c7c4e",1,"2017-08-04 17:32:47+02:00","Aspects that apply to files cannot apply to source
files.  Make them not crash.  RELNOTES: None.
PiperOrigin-RevId: 164265379
",439684,3833,176560,"dslomov","dslomov@google.com","Jakob Buchgraber","buchgr@google.com"
"1076","bazelbuild/bazel","ce61d638197251f71ed90db74843b55d9c2e9ae5",1,"2017-08-04 19:28:56+02:00","don't use methods and classes removed in upstream
dx RELNOTES: update dexing tools to Android SDK
26.0.1  PiperOrigin-RevId: 164278101
",439732,3833,176557,"kmb","kmb@google.com","Jakob Buchgraber","buchgr@google.com"
"1077","bazelbuild/bazel","cfe25a6e1f2a92f29b6455782c6d1cdbaf7e15c6",1,"2017-08-05 01:40:57+02:00","Introduce AbstractParallelEvaluator  This change
enables alternate evaluation strategies.  Drive-by
fix to GraphTester, making TestFunction static
because it has no dependencies on its outer class,
and adding #unsetConstantValue.  RELNOTES: None.
PiperOrigin-RevId: 164327055
",440107,3835,176586,"mschaller","mschaller@google.com","Jakob Buchgraber","buchgr@google.com"
"1078","bazelbuild/bazel","f2d459502f5fb422d6000db782795cffc6efa3e4",7,"2017-08-09 15:27:49+02:00","Rewrite the Command API  Important: the simplified
API now defaults to forwarding interrupts to
subprocesses. I did audit all the call sites, and
I think this is a safe change to make.  - Properly
support timeouts with all implementations -
Simplify the API   - only provide two flavours of
blocking calls, which require no input and
forward interrupts; this is the most common usage
- provide a number of async calls, which
optionally takes input, and a flag     whether to
forward interrupts   - only support input streams,
no byte arrays or other 'convenience features'
that are rarely needed and unnecessarily increase
the surface area   - use java.time.Duration to
specify timeout; for consistency, interpret a
timeout of <= 0 as no timeout (i.e., including
rather than excluding 0)   - KillableObserver and
subclasses are no longer part of the public API,
but     still used to implement timeouts if the
Subprocess.Factory does not support     them -
Update the documentation for Command - Update all
callers; most callers now use the simplified API
PiperOrigin-RevId: 164716782
",440140,3843,176525,"ulfjack","ulfjack@google.com","Marcel Hlopko","hlopko@google.com"
"1079","bazelbuild/bazel","7740f68c7ed2b925628f2a60e774b5c04ca5bbed",2,"2017-08-09 21:17:40+02:00","Open source apple-package java tests  RELNOTES:
None. PiperOrigin-RevId: 164755768
",440429,3846,176637,"cparsons","cparsons@google.com","Marcel Hlopko","hlopko@google.com"
"1080","bazelbuild/bazel","a664a5118e552504ba7962e1cccfea43b51ef28e",1,"2017-08-10 20:30:17+02:00","Make the print function output debug messages
RELNOTES: The `print` function now prints debug
messages instead of warnings. PiperOrigin-RevId:
164880003
",440438,3841,176530,"vladmos","vladmos@google.com","Marcel Hlopko","hlopko@google.com"
"1081","bazelbuild/bazel","e7e7ba4d6f250899165bb8862fefa4e90a33da57",1,"2017-08-10 20:34:02+02:00","Adds aapt2.ResourceCompiler and
CompileLibraryResourcesAction.  Refactorings: *
Change data binding to have configurable archive
generation * Extract a ZipBuilder class from the
ZipBuilderVisitor to provide a general purpose
archiving class. * Small changes to visibility
AaptCommandLineBuilder for reuse in the aapt2
code.  RELNOTES: None PiperOrigin-RevId: 164880571
",440768,3843,176576,"corysmith","corysmith@google.com","Marcel Hlopko","hlopko@google.com"
"1082","bazelbuild/bazel","3f7ac38f2cb55b0bab0e1be43d479180a50f5b73",1,"2017-08-11 20:37:12+02:00","Internal change  PiperOrigin-RevId: 165003777
",440827,3844,176602,"Googler","noreply@google.com","Irina Iancu","elenairina@google.com"
"1083","bazelbuild/bazel","86f6dc25a6ce8e50ce237c19a434d4e871fd0f73",1,"2017-08-14 18:13:46+02:00","Add @CompileTimeConstant annotations to
CustomCommandLine.  This enforces certain memory-
efficient patterns. For deliberate use of dynamic
strings, explicitly named overloads are
introduced, with javadoc that guides the
programmer into making the right choice.  This CL
is a memory no-op on benchmarks, but it tries to
prevent backslide by making sure programmers make
conscious choices when they construct their
command lines.  RELNOTES: None PiperOrigin-RevId:
165185997
",440499,3824,175998,"tomlu","tomlu@google.com","Irina Iancu","elenairina@google.com"
"1084","bazelbuild/bazel","59f1d889f71d6d203ca061787d4ea16465df1916",17,"2017-08-15 23:21:25+02:00","Add more type safety to CustomCommandLine.
Allowing add(Object) is too loose and can easily
lead to programmer mistakes.  Because of type
erasure, we can't use the same overload name for
(eg.) add(NestedSet<String>) and
add(NestedSet<Artifact>). The API is overhauled to
use the same terms everywhere, eg. ""add"",
""addPaths"", ""addExecPaths"". This is similar to how
it used to be a few CLs ago.  The API is
overhauled to make sure it's consistent for all
types. While tedious, the facade methods
immediately dispatch to internal helpers, so
implementation wise it's not too heavy.  While
large, this CL is almost entirely an automated
refactor.  PiperOrigin-RevId: 165358287
",440578,3820,175997,"tomlu","tomlu@google.com","Irina Iancu","elenairina@google.com"
"1085","bazelbuild/bazel","3076055edfb671c5449d9c437daafb494efe7b58",1,"2017-08-16 16:41:51+02:00","REDACTED  PiperOrigin-RevId: 165439218
",440721,3819,175966,"Googler","noreply@google.com","Irina Iancu","elenairina@google.com"
"1086","bazelbuild/bazel","b86f8b06f5f4832b51e3be0de9d32170a79371ee",3,"2017-08-17 17:49:50+02:00","Open-source Skyframe serialization, and make
AppleConfiguration serializable as a pilot.
Currently not hooked up to anything, but will be
shortly.  PiperOrigin-RevId: 165583517
",441370,3844,176305,"janakr","janakr@google.com","Irina Iancu","elenairina@google.com"
"1087","bazelbuild/bazel","375f95b16e1a8b164d2caaa4d65a4c9b4e310bd3",2,"2017-08-21 12:52:41+02:00","Rename some of native declared providers according
to the new naming scheme.  RELNOTES: None
PiperOrigin-RevId: 165910455
",441606,3848,176196,"dslomov","dslomov@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1088","bazelbuild/bazel","3ff87f79c6a579272532bc676acdf924db1e8b59",2,"2017-08-21 18:41:45+02:00","remote: don't fail build if upload fails  If the
upload of local build artifacts fails, the build
no longer fails but instead a warning is printed
once. If --verbose_failures is specified, a
detailed warning is printed for every failure.
This helps fixing #2964, however it doesn't fully
fix it due to timeouts and retries slowing the
build significantly.  Also, add some other tests
related to fallback behavior.  Change-Id:
Ief49941f9bc7e0123b5d93456d77428686dd5268
PiperOrigin-RevId: 165938874
",441779,3848,176209,"Benjamin Peterson","bp@benjamin.pe","Damien Martin-Guillerez","dmarting@google.com"
"1089","bazelbuild/bazel","c03ca7cc8bcef66f8e077c2451e8a9f68ee4733c",15,"2017-08-21 19:26:41+02:00","Improve CustomCommandLine interface.  In
converting SpawnAction.Builder (multi-thousand
line CL) users directly to CustomCommandLine I
didn't like the resulting loss of readability, and
the methods didn't feel very discoverable. Unless
it's very convenient and readable to use
CustomCommandLine, people will resort to non-
memory efficient patterns by default. I'm holding
that CL for this, which should offer a nicer
interface.  This CL removes VectorArg from the API
contact surface area, instead creating 64
overloads for every valid combination of
parameters. Pretty sad, but the methods dispatch
straight to internal helper methods so it's mostly
boilerplate to the tune of +400 LOC.  Other
changes:  * Change ImmutableCollection ->
Collection and copy the args directly into the
internal args vector. Saves on collection object
overhead and saves users from having to create
immutable copies. * Change some names, notably add
-> addAll for collection methods * Create
additional missing overloads * Fix JavaDoc
RELNOTES: None PiperOrigin-RevId: 165943879
",442459,3847,176292,"tomlu","tomlu@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1090","bazelbuild/bazel","7dc86d0906267c198c4146f8f8ef496639925392",2,"2017-08-21 22:31:26+02:00","Minor change to the
ActionOnIOExceptionReadingBuildFile interface.
RELNOTES: None PiperOrigin-RevId: 165967625
",442426,3847,176290,"nharmata","nharmata@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1091","bazelbuild/bazel","e8aae03888a44ee8d5264c3d8f6b3adaeb830df5",1,"2017-08-22 07:17:44+02:00","Add OptionDefinition layer between the @Option
annotation and its fields and the options parser.
Removes any direct reads of the annotation outside
of OptionDefinition. This allows for fewer manual
checks for the annotation's existence, unifies
error wording, and paves the way for potentially
generifying the OptionsParser to accept different
@Option-equivalent annotations.  Also allows for
cleanup of duplicate code by giving @Option-
specific operations a clear home, such as sorts
and default logic. In followup changes, we can
eliminate some unnecessarily complex caching by
instead memoizing values in the OptionDefinition.
This will have the positive side effect of making
sure reads come from the cached values.  RELNOTES:
None. PiperOrigin-RevId: 166019075
",441985,3839,176102,"ccalvarin","ccalvarin@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1092","bazelbuild/bazel","e516a101bb615f064d6622a5d4add541617b8c1f",1,"2017-08-23 15:24:31+02:00","Adds compile action for aapt2:
Aapt2ResourcePackagingAction Adds a
ManifestContainer interface to centralize the
types that provide manifests. Adds
PackagedResources to represent a linked dexless
resource apk  RELNOTES: None PiperOrigin-RevId:
166193049
",442698,3850,176289,"corysmith","corysmith@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1093","bazelbuild/bazel","827d3d2f3350417d33f9f7caf614c7e48aabb071",2,"2017-08-23 19:01:08+02:00","Final tweaks and fixes to enable aapt2 for Blaze.
Implemented processing databinding for compile
passes  RELNOTES: None PiperOrigin-RevId:
166215052
",443179,3851,176363,"corysmith","corysmith@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1094","bazelbuild/bazel","93fdf030042f1aa9f235e6d7c0cde79f02263c26",2,"2017-08-24 02:33:57+02:00","Restore VectorArg to CustomCommandLine's public
interface.  This CL intends to remove 81 overloads
from CustomCommandLine, replacing them with 6
overloads that operate on VectorArg. The actual
inlining isn't done in this CL to make it easier
to review.  This CL tries to balance reducing the
API contact surface area while retaining the
readability and discoverability of these methods,
ensuring that they will be used over methods that
eagerly convert arguments to strings.
PiperOrigin-RevId: 166280990
",443517,3853,176487,"tomlu","tomlu@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1095","bazelbuild/bazel","54c5c5cf41bd47d11ea309f37697d83ae65fe9e7",1,"2017-08-24 17:40:22+02:00","Windows: Implement Java native launcher  Now Bazel
build a Windows exe binary to launch JVM for
java_binary and java_test.  The Java native
launcher is implemented with the same logic and
functionalities as the original java shell stub
script.  Change-Id:
Ida40579bce82425f3506f9376b7256aa3edc265e
PiperOrigin-RevId: 166346445
",443662,3853,176527,"Yun Peng","pcloudy@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1096","bazelbuild/bazel","cb375a453491fc3be5e9bd0e76e235ae0d18670b",3,"2017-08-31 23:12:18+02:00","Publish TARGET_SKIPPED status to Goops and Master
Log for targets with incompatible CPU constraints.
PiperOrigin-RevId: 167189106
",446384,3869,177082,"Googler","noreply@google.com","Vladimir Moskva","vladmos@google.com"
"1097","bazelbuild/bazel","98bfd9831168660d10ba4f29b62dc65d90653b13",3,"2017-09-05 00:37:27+02:00","Support direct classpaths in javac-turbine
PiperOrigin-RevId: 167520688
",442286,3736,174488,"cushon","cushon@google.com","Yun Peng","pcloudy@google.com"
"1098","bazelbuild/bazel","268c0bcbf79f9f3f72d95fa51af0f1b18c5ce29e",1,"2017-09-05 18:12:26+02:00","Introduce unfiltered_compile_flags build variable,
rename copts variable to user_compile_flags  Also
add magic to a feature named
'unfiltered_compile_flags' so the flags expanded
from it are not subject to nocopt filtering.
RELNOTES: None. PiperOrigin-RevId: 167587189
",442461,3736,174472,"hlopko","hlopko@google.com","Yun Peng","pcloudy@google.com"
"1099","bazelbuild/bazel","fe46788eaf91673916c12e83396277e00fd0a9bd",1,"2017-09-14 22:30:06+02:00","Add serialization support to BlazeDirectories (and
.hashCode() and .equals() support into the
bargain).  Equality checking isn't that important
since there's only one instance per Blaze server,
but it keeps serialization semantics reasonable.
PiperOrigin-RevId: 168735669
",447358,3822,176203,"janakr","janakr@google.com","Philipp Wollermann","philwo@google.com"
"1100","bazelbuild/bazel","7df9198a771ef2eabef396dcb7a21e6cbb3cabb0",2,"2017-09-14 23:24:06+02:00","Support multiple command lines / params files in
SpawnAction.  This is necessary for the upcoming
Skylark implementation of param files.
PiperOrigin-RevId: 168744486
",447444,3821,176135,"tomlu","tomlu@google.com","Philipp Wollermann","philwo@google.com"
"1101","bazelbuild/bazel","7b8b1166646e48fb7ceae87477af16a68c9d8082",1,"2017-09-15 02:21:34+02:00","Avoid nested set expansion for deploy archives.
android_local_test and java_test/java_binary do
not need to flatten their nested sets because they
do not have a jar mapping.  android_test and
android_binary still flatten because of
desugaring.  RELNOTES: None PiperOrigin-RevId:
168771671
",447474,3819,176097,"tomlu","tomlu@google.com","Philipp Wollermann","philwo@google.com"
"1102","bazelbuild/bazel","fb153cd83c6f801271048ec1d62d17a68562376d",1,"2017-09-15 19:29:50+02:00","Throw away the confusing
UnparsedOptionValueDescription name.  We get
UnparsedValues after ... parsing the options. So
that doesn't make sense. What was meant was that
it wasn't converted to the final value.  In an
effort to make this distinction more clear, this
change will make the terminology more consistent.
The `--foo=bar` step is ""parsing"" and the `bar ->
Object` step is ""converting"" (it is, in fact, done
by Converters).  RELNOTES: None. PiperOrigin-
RevId: 168852847
",447663,3820,176171,"ccalvarin","ccalvarin@google.com","László Csomor","laszlocsomor@google.com"
"1103","bazelbuild/bazel","d13badff830587c381e8ae8845d208753f91120d",1,"2017-09-20 17:26:56+02:00","Drop 32-bit architectures from builds with
ios_mimimum_os > 11.0.  This change misses the
corner case of builds which are entirely 32-bit
(as opposed to mixed 32&64 bit) due to no
legitimate place to report the error of such a
build; execution will fail for such builds at the
action level.  RELNOTES: None. PiperOrigin-RevId:
169397354
",448879,3831,176563,"cparsons","cparsons@google.com","László Csomor","laszlocsomor@google.com"
"1104","bazelbuild/bazel","3a0df3cb0637d71dfcf0add7057332c09cd508c5",2,"2017-09-21 04:16:59+02:00","Track the origin of an option in the option
instance, not its final value.  A single instance
of an option has a single origin, but the final
value only has a single origin if it has a single
value. For multi-valued options, it is wrong to
expect that the final value of an option will have
a single parent. Track the option parents (which
option expanded to the current instance, if any)
in the right place, with the
ParsedOptionDescription.  Also fix some
inconsistent spelling of 'dependent,' in favor of
the American English standard.  RELNOTES: None.
PiperOrigin-RevId: 169487515
",446666,3820,176009,"ccalvarin","ccalvarin@google.com","László Csomor","laszlocsomor@google.com"
"1105","bazelbuild/bazel","54c86b4c6f29f4b0d52e1db702d30c10f3ac8b56",1,"2017-09-22 02:02:35+02:00","Action for resource shrinking with aapt2
Introduces the ResourcesZip class to more easily
handle processing merged resources.  RELNOTES:
None PiperOrigin-RevId: 169622715
",446958,3822,176080,"corysmith","corysmith@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1106","bazelbuild/bazel","c8dce99f7d4a5a6fdd129cdaab7c3434f4f5141a",2,"2017-09-25 21:48:27+02:00","Stop injecting WorkspaceStatusAction into the
Skyframe graph as a precomputed value. Instead,
manually check if the value has changed, and if it
has, invalidate its consuming WorkspaceStatusValue
node, forcing its re-evaluation, where it will
pick up the new value.  This seems more awkward
than the original code, but it is more correct in
spirit: injecting a precomputed value which can
change even while the source state does not is a
smell. Long-term, the key for the
WorkspaceStatusValue should incorporate a hash of
the action, and that hash should be in the
configuration, just as other configuration flags
are. That isn't possible right now just because we
don't have configuration trimming, and we drop all
nodes on configuration changes, so putting
workspace status options into the configuration
would lose change pruning whenever we changed
workspace status options.  If/when those problems
are fixed, we can extend this change to have
WorkspaceStatusFunction continue to request the
action out-of-band, but keyed by the hash. Then we
can stop invalidating stale nodes.  See also
https://github.com/bazelbuild/bazel/issues/3785.
PiperOrigin-RevId: 169947071
",447531,3823,176167,"janakr","janakr@google.com","Vladimir Moskva","vladmos@google.com"
"1107","bazelbuild/bazel","42ac567ed7e68659cfd1f986fba87a6977092f6a",1,"2017-09-27 14:45:55-04:00","More narrowly specify
SkyframeExecutor#prepareExecution as
#detectModifiedOutputFiles and move implementation
to SequencedSkyframeExecutor.  PiperOrigin-RevId:
170230031
",448902,3834,176379,"janakr","janakr@google.com","John Cater","jcater@google.com"
"1108","bazelbuild/bazel","078601363a2b814ce20c24ec0451e70214b92078",1,"2017-09-29 08:59:44-04:00","Move expansion functionality to a new class
Progress on #2475.  PiperOrigin-RevId: 170473111
",449700,3838,176541,"ulfjack","ulfjack@google.com","John Cater","jcater@google.com"
"1109","bazelbuild/bazel","ae32398146a05ecbe60966b0fe16e409e7b3e3ae",2,"2017-09-29 21:11:53+02:00","Don't symlink into the execroot if possible in
SymlinkAction: instead, symlink directly to the
target artifact. Also offer the option to not
provide the package roots to create the execroot:
we would like to avoid the execroot if possible.
PiperOrigin-RevId: 170515263
",449774,3841,176607,"janakr","janakr@google.com","Klaus Aehlig","aehlig@google.com"
"1110","bazelbuild/bazel","9a54b435b44c00d5a70e3d6a2a9a3949e3d00548",2,"2017-09-29 23:25:39+02:00","Fix aapt2 actions to use the compiled intermediate
resource files for linking. Also include assets in
the aapt2 packaging action.  RELNOTES: none
PiperOrigin-RevId: 170532322
",449834,3841,176618,"Googler","noreply@google.com","Klaus Aehlig","aehlig@google.com"
"1111","bazelbuild/bazel","af67774310ce210cdc2528fd39631ec408563408",1,"2017-10-02 10:55:41+02:00","LocationExpander: always require options to be
passed in  Also update CommandHelper to split the
heuristic label expansion code path from the
normal code path.  Progress on #2475.
PiperOrigin-RevId: 170675702
",449851,3841,176618,"ulfjack","ulfjack@google.com","Klaus Aehlig","aehlig@google.com"
"1112","bazelbuild/bazel","bdb12ceeb7c23d7d2293e8006d0aa7127a91b973",3,"2017-10-03 02:14:25+02:00","add flags to desugar to emit metadata that can be
used for double-checking correctness of default
and static interface desugaring. RELNOTES: none
PiperOrigin-RevId: 170779637
",497233,4533,213376,"kmb","kmb@google.com","Klaus Aehlig","aehlig@google.com"
"1113","bazelbuild/bazel","8a2f09c0290fd39d612390d2ccec1cc2d770f0ea",6,"2017-10-05 08:56:41+02:00","Windows,launcher: add LauncherFileWriteAction
Introduce LauncherFileWriteAction, a
FileWriteAction that can create a native
{java,sh,py}_binary launcher from the launcher
stub and the user-specified launch information.
The LauncherFileWriteAction class does not use the
""copy"" command of cmd.exe so it's not restricted
with path lengths.  The class stores a LaunchInfo
object, which describes the launch data that the
launcher stub reads to identify its payload.  The
LaunchInfo is a lazy object, similar to
CustomCommandLine. LaunchInfo won't fully
construct the launch data until it is about to
write the data to the output. Thus LaunchInfo is
memory efficient because it won't create any
String objects in the analysis phase that it would
only read in the execution phase.  Fixes
https://github.com/bazelbuild/bazel/issues/3802
Change-Id:
I4ddd83369e7131d42e2e9b35f105ad2dc60bcc52
PiperOrigin-RevId: 171115105
",497282,4535,213496,"Laszlo Csomor","laszlocsomor@google.com","Klaus Aehlig","aehlig@google.com"
"1114","bazelbuild/bazel","334d2f155d85fca1797e249dc0acf2c47be089b0",1,"2017-10-05 16:39:42+02:00","Downgrade the default invocation policy log levels
to fine.  Unfortunately, since the invocation
policy gets enforced on a user's command line
early in the command environment setup, so the
effective log level is not yet set. For this run,
keep the logs at INFO, since any other level will
disappear into the ether.  InvocationPolicy gets
enforced not only at invocation startup but also
elsewhere to recompute the default values. The log
statements from these different runs overwhelm the
log output from our tests, making it hard to find
other events without filtering the log. Make all
extra invocation policy enforcements log at FINE
so that they only appear when extra detail is
requested.  PiperOrigin-RevId: 171151573
",497319,4535,213500,"ccalvarin","ccalvarin@google.com","Klaus Aehlig","aehlig@google.com"
"1115","bazelbuild/bazel","7569bd0cab3a7eec863f48caee69d47f6260211a",1,"2017-10-05 23:06:41+02:00","Open-source unit tests for proguard actions.
RELNOTES: None PiperOrigin-RevId: 171205009
",497518,4535,213489,"ajmichael","ajmichael@google.com","Klaus Aehlig","aehlig@google.com"
"1116","bazelbuild/bazel","38da0c2e6e082964e32e8646439cdec7cd50808f",2,"2017-10-06 23:31:07+02:00","Do not rewrite static interface method invocations
from bootclasspath  RELNOTES: n/a PiperOrigin-
RevId: 171344856
",497312,4534,213414,"Googler","noreply@google.com","Klaus Aehlig","aehlig@google.com"
"1117","bazelbuild/bazel","a0c391e185b3baed9cb2eb237606cab1c48cda2b",2,"2017-10-07 03:34:22+02:00","Bubble errors up even in the case of keep_going
builds that failed due to catastrophes. Our
stricter behavior in the face of errors means that
it is no longer possible for a done node to depend
on a not-done node in this build.  This opens up
the possibility to discard graph edges on all
--batch builds, or at least those with
--discard_analysis_cache.  PiperOrigin-RevId:
171375405
",497453,4537,213495,"janakr","janakr@google.com","Klaus Aehlig","aehlig@google.com"
"1118","bazelbuild/bazel","deea6b08efef98ae2ef03d516356ab3438d089c8",1,"2017-10-16 12:32:20+02:00","BuildEventStreamer: clear a pending BuildStarted
event first  If we receive an event indicating
that the build is over, we first post that event
and then clear up all pending event by stating
that their prerequisite event was aborted (which
we can safely assert, as we know we will not
process any further events).  Now, if a build is
aborted (e.g., user interruption) before the build
starting event is generated, the streamer can
receive a build-finished event while still having
an event (e.g., the raw command line) blocked on
the build-starting event. So the canonical order
of clearing the stream would send a build-finished
event before the build-starting event, which can
be confusing to consumers of the stream.
Therefore, if have to generate an artificial
aborted build-starting event, do so first
(including clearing the events blocked on the
build-starting event) and only afterwards post the
build-finished event in the stream.  Change-Id:
Ib33f16f74b7bee7a963df94bbcad7a56db9f07e3
PiperOrigin-RevId: 172305114
",499460,4553,213623,"Klaus Aehlig","aehlig@google.com","Jakob Buchgraber","buchgr@google.com"
"1119","bazelbuild/bazel","93c080ad752d029f9f9f9466414430d609105257",1,"2017-10-16 19:21:08+02:00","Accept command lines from tools invoking Bazel.
For tools that wrap Bazel in some way, the
original way that the tool was invoked can be a
useful piece of information to track when logging
what Bazel did and why.  In order to output this
information in the same way that Bazel outputs its
command lines, we accept --tool_command_line in
the structure command line format that Bazel uses
in the BEP. These structured command lines are
protos that we expect as a base64 encoded byte
array. For simple scripts that wish to use this
feature without compiling the proto, we will also
accept any old string (that cannot be interpreted
as a base64 encoding) as a single ""chunk"" in a
structured command line.  This is experimental for
now and users should not get attached to the
format. We will remove the experimental_ prefix
when it is stable.  RELNOTES: None. PiperOrigin-
RevId: 172341216
",499673,4553,213687,"ccalvarin","ccalvarin@google.com","Jakob Buchgraber","buchgr@google.com"
"1120","bazelbuild/bazel","7cd9e883dd31f54cd505844aa1f1e0ed7bd9f380",1,"2017-10-16 22:18:32+02:00","Track Option placement within a priority category.
An option has precedence over previous options at
the same enum-valued priority. Track its placement
in this ordering explicitly.  This will allow
after-the-fact expansion of expansion options such
that they correctly take precedence or not
compared to other mentions of the same flag. This
is needed to fix --config's expansion.  RELNOTES:
None. PiperOrigin-RevId: 172367996
",499990,4553,213720,"ccalvarin","ccalvarin@google.com","Jakob Buchgraber","buchgr@google.com"
"1121","bazelbuild/bazel","72642a24f24a7d81929f7c1338d5531ef4fbe9f2",5,"2017-10-18 06:23:14+02:00","Add memory profiler.  This adds two dump command,
bazel dump --rules and bazel dump
--skylark_memory.  dump --rules outputs a summary
of the count, action count, and memory consumption
of each rule and aspect class.  dump
--skylark_memory outputs a pprof-compatible file
with all Skylark analysis allocations. Users can
then use pprof as per normal to analyse their
builds.  RELNOTES: Add memory profiler.
PiperOrigin-RevId: 172558600
",500743,4561,213955,"tomlu","tomlu@google.com","Jakob Buchgraber","buchgr@google.com"
"1122","bazelbuild/bazel","db549b9d8b199f20779d254a1c9ac384a736f794",1,"2017-10-20 15:34:47+02:00","Allow ClassObjects to throw EvalExceptions.
Preparations to fix
https://github.com/bazelbuild/bazel/issues/3826.
RELNOTES: None. PiperOrigin-RevId: 172876802
",501280,4569,214160,"dslomov","dslomov@google.com","Dmitry Lomov","dslomov@google.com"
"1123","bazelbuild/bazel","539b22b15c0114402e52151f63a2c83c95010244",1,"2017-10-20 22:58:24+02:00","Fix changes that broke resource filtering, and
document related confusion  Recent changes: 1)
Started passing all resources to processors,
ignoring the filtered ResourceContainers, and 2)
Started loading an unfiltered
LocalResourceContainer into binary resource
processing, in addition to the filtered container.
Fix both of these. To fix the former, we need to
split the misleadingly-named
'transitiveResourceRoots' (actually transitive
resource and assets artifacts) into transitive
resources and assets.  Update resource filtering
tests to catch bugs like these.  Also, rename
getters for resource containers to make clear that
they are not getters for resources.  Finally,
document some weirdness and partially-completed
migrations encountered as part of investigating
these issues, and add appropriate TODOs and
deprecation.  RELNOTES: None PiperOrigin-RevId:
172929936
",500840,4565,213928,"Googler","noreply@google.com","Dmitry Lomov","dslomov@google.com"
"1124","bazelbuild/bazel","ca77f608e486bf7aa762565d25bf7b9e30f2268c",1,"2017-10-24 19:59:51+02:00","Extend TemplateExpander to handle $(func param)
expansion  Rewrite the Expander to use the new
functionality; also rewrite the Skylark
expand_location function to use it.  PiperOrigin-
RevId: 173280839
",501411,4567,214041,"ulfjack","ulfjack@google.com","Dmitry Lomov","dslomov@google.com"
"1125","bazelbuild/bazel","caceacd984a3f86b623ea726f4df36bd81998d25",1,"2017-11-04 01:00:59+01:00","Expose late-bound-attributes to Skylark.
RELNOTES: Late-bound attributes are exposed to
skylark. This is a new API
(`configuration_field()`) to depend on certain
configuration-defined targets from skylark rules.
PiperOrigin-RevId: 174534104
",500020,4547,213831,"cparsons","cparsons@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1126","bazelbuild/bazel","72129ad6baac7035d1a1469e9bc07ccf037f6440",1,"2017-11-09 01:15:23+01:00","Support multiple (disjoint) inputs and add
--multidex=given_shard flag to DexFileMerger tool
RELNOTES: None.  PiperOrigin-RevId: 175082253
",500500,4552,213997,"kmb","kmb@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1127","bazelbuild/bazel","694105dc2b6056c6c8330d9a0d3af9cff7edf7d5",5,"2017-11-10 19:40:08+01:00","Replace truth.FailureStrategy with
truth.FailureMetadata in bazel's Subjects.  Also
changed truth.SubjectFactory to
truth.Subject.Factory (plain renaming) and use
method reference instead of anonymous class to
create the factory when applicable.
FailureMetadata, an opaque object to its users, is
introduced to replace FailureStrategy in in custom
Subject in order to resolve some existing flaws of
FailureStrategy as well as enable new features to
be added to Truth.  New API is available in
Truth-0.36, if there is a build/pom.xml, it's also
updated to use this version.  PiperOrigin-RevId:
175308179
",500776,4549,213823,"Googler","noreply@google.com","Damien Martin-Guillerez","dmarting@google.com"
"1128","bazelbuild/bazel","f581da7375d8548ffaac61ead74cdc3519eeb5b2",1,"2017-11-13 17:18:29-08:00","Fix EnclosingMethod attribute when moving
interface methods to companion class RELNOTES:
None.  PiperOrigin-RevId: 175613518
",501059,4552,213905,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1129","bazelbuild/bazel","9cc954a8c1e1f5134c4b6701588cd226e9e52707",1,"2017-11-14 01:45:02-08:00","Add win_def_file attribute to cc rules.
RELNOTES[NEW]: Users can use win_def_file
attribute to specify a DEF file for exporting
symbols when build a shared library on Windows.
Change-Id:
Ifa28d8b7b24eaefcefc9640d8dc56fd2931e9688
PiperOrigin-RevId: 175651203
",501089,4552,213928,"Yun Peng","pcloudy@google.com","Copybara-Service","copybara-piper@google.com"
"1130","bazelbuild/bazel","e83f3b1fb010298cbe1e16e5f7f2f39bfb045cef",3,"2017-11-14 14:03:09-08:00","Specialize $closeResource(Throwable,
AutoCloseable) so that desugared code does not
depend on AutoCloseable, as it is not available
before API 19.  This CL includes the following: 1.
A type inference algorithm based on ASM. It relies
on the stack map frames to compute type
information at the entry of basic blocks. 2. The
type inference is used to infer the types of the
resources to be closed. Then for each concrete
resource type, we specialize the synthetic
$closeResource method to $closeResource(Throwable,
<concrete resource type>).  RELNOTES: None
PiperOrigin-RevId: 175731437
",502478,4558,214097,"cnsun","cnsun@google.com","Copybara-Service","copybara-piper@google.com"
"1131","bazelbuild/bazel","9a2d3fe37e96f56c9ef1e6844bded0eb9ffabef9",7,"2017-11-17 08:04:47-08:00","Support incremental dexing tools in proguarded
Android builds RELNOTES: None.  PiperOrigin-RevId:
176109497
",503258,4560,214222,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1132","bazelbuild/bazel","a90a976418e31922749d20e0caaa19cfe129ddbd",7,"2017-11-17 09:25:19-08:00","Convert JavaToolchainProvider to a concrete class,
and a subclass of ToolchainInfo.  PiperOrigin-
RevId: 176117866
",503475,4565,214316,"jcater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1133","bazelbuild/bazel","6364017ef95353969a8297c99a07c2a52102d9cc",1,"2017-11-20 09:29:52-08:00","Change config expansion application order, gated
by startup flag --expand_configs_in_place.
--config options were expanded in a fix-point
expansion, where in practice, the flags that
--config values expanded to ended up between the
normal bazelrc options and the command line's
explicit options. Since the options parser has an
order-based priority scheme and it accepts
multiple mentions of a single-valued option, this
conflicts with users' expectations of being able
to override these config expansions by using the
order in which they are mentioned.  This change
makes it possible to expand the config values
defined in your bazelrc (or blazerc) files to
occur in-place: --stuff --config=something
--laterstuff will interpret the options that
--config=something expands to as if they had been
mentioned explicitly between --stuff and
--laterstuff.  In order to not break users relying
on complex flag combinations to configure their
builds, this behavior will not yet be turned on by
default. Instead, use --expand_configs_in_place as
a startup flag to test this feature. --announce_rc
may be helpful for debugging any differences
between the fixed point and in-place expansions.
Once you've debugged your problems, add ""startup
--expand_configs_in_place"" to your blazerc to
stick to the new behavior.  RELNOTES: Use
--expand_configs_in_place as a startup argument to
change the order in which --config expansions are
interpreted. PiperOrigin-RevId: 176371289
",504132,4566,214403,"ccalvarin","ccalvarin@google.com","Copybara-Service","copybara-piper@google.com"
"1134","bazelbuild/bazel","0b2352de3101e87647d083f6089246079dda0f75",2,"2017-11-27 17:37:54-08:00","Use java.nio.file.Paths instead of strings in
JavaBuilder  This avoids bazelbuild/bazel#4108.
PiperOrigin-RevId: 177096864
",505146,4568,214493,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1135","bazelbuild/bazel","683bdc7a069a8328676740798d2fb6abc2119a2f",1,"2017-11-28 05:24:51-08:00","refactor: add LocationExpander factories  Stop
using LocationExpander.Options in LocationExpander
constructors, because the Options semantics are
confusing.  I also need the refactoring in order
to extend the expansion semantics: to support
expanding to absolute paths on Windows, where
$(location) should not expand to the (non-
existent) runfiles path, but to the absolute path
the runfiles symlink would point to.  See
https://github.com/bazelbuild/bazel/issues/4171
Change-Id:
Ie4d47ec3807bc3c6e39156efa1746b666f69f99c
PiperOrigin-RevId: 177147372
",505146,4568,214495,"L?szl? Csomor","laszlocsomor@google.com","Copybara-Service","copybara-piper@google.com"
"1136","bazelbuild/bazel","3d1a194ff9e76f25f1a7242ff2d021523ba8e4a0",1,"2017-11-29 14:01:21-08:00","Add ActionKeyContext to Action#getKey.  This key
context can be used by actions to share partial
key computations, for instance when computing MD5s
for nested sets.  RELNOTES: None PiperOrigin-
RevId: 177359607
",506158,4578,214798,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1137","bazelbuild/bazel","72f3a10e258764f0e6ed1fa645bf3c72bb6986e3",1,"2017-12-01 16:28:28-08:00","Make Predicate<String> obtainable from
RuleClassNamePredicate   * Extend
RuleClassNamePredicate to be both inclusive or
exclusive  * Attribute uses RuleClassNamePredicate
instead of Predicate<RuleClass>  PiperOrigin-
RevId: 177656647
",507365,4587,215219,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1138","bazelbuild/bazel","9ac1f287eab0ce2fa0e3c685cd218832091f19e9",7,"2017-12-04 19:34:53-08:00","Added execution platform to the
ActionExecutionMetadata.  Part of #4128.  Change-
Id: Id822d3ae6f8daf7c92a75bd8bd28590d4f625845
PiperOrigin-RevId: 177905460
",507358,4585,215147,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1139","bazelbuild/bazel","21fdc48b07682314a5cee5d4625425f627255c0e",1,"2017-12-05 16:10:47-08:00","Upgrade --target_environment,
--auto_cpu_environment_group.  1: Allow both in
the same build (before, just one would trigger) 2:
Don't check environment defaults from other
groups, since neither    flag asserts any
expectations on those groups PiperOrigin-RevId:
178026699
",507674,4586,215227,"gregce","gregce@google.com","Copybara-Service","copybara-piper@google.com"
"1140","bazelbuild/bazel","fdca7d5eac5c71cfe81dd12b19a3149bf163f629",1,"2017-12-06 09:13:44-08:00","Add option to populate selector list in blaze
query's proto output.  RELNOTES[NEW]: query: Add
option --noproto:flatten_selects to turn off
flattening of selector lists in proto output.
PiperOrigin-RevId: 178106289
",507822,4590,215286,"twerth","twerth@google.com","Copybara-Service","copybara-piper@google.com"
"1141","bazelbuild/bazel","c861c0afd9a4df283936218b9e5b33c452b07c95",1,"2017-12-06 09:19:21-08:00","Register separate linkstamp compile action  This
cl replaces entire hardcoded linkstamping command
line generation with a separate action. Instead of
generating bash command to compile linkstamp and
prepending it to the standard link command line,
this cl creates a special action that link action
depends on.  I kept linkstamp action registration
in the CppLinkActionBuilder (and
GoCompilationHelper internally) to keep the cl
shorter and change more localized. I also didn't
remove linkstamps and buildInfoHeaderArtifacts
from CppLinkAction to stay compatible with extra
actions api. Both issues and corresponding
cleanups will be addressed in separate cls.
RELNOTES: Linkstamping is now a separate and full-
blown CppCompileAction, it's no longer a part of
linking command. PiperOrigin-RevId: 178106899
",507839,4592,215219,"hlopko","hlopko@google.com","Copybara-Service","copybara-piper@google.com"
"1142","bazelbuild/bazel","704d6ada9a17111879fec62bd7063a8a8a687b72",2,"2017-12-06 14:28:31-08:00","Support inclusion filter in DexFileSplitter, with
the same semantics as in ../ziputils/DexMapper.
RELNOTES: None.  PiperOrigin-RevId: 178153254
",507918,4592,215223,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1143","bazelbuild/bazel","7c8cd9c402b3ca4f7b50074d249ef8e1dc52086a",4,"2017-12-07 05:49:46-08:00","Expose two methods from JavaSkylarkApiProvider in
JavaInfo  JavaSkylarkApiProvider will be
deprecated soon and replaced by JavaInfo. Methods
exposed: getCompilationInfoProvider()
getTransitiveExports()  Changed signature of
JavaCommon methods to accept JavaInfoBuilder.
RELNOTES:none PiperOrigin-RevId: 178229835
",508063,4592,215256,"dbabkin","dbabkin@google.com","Copybara-Service","copybara-piper@google.com"
"1144","bazelbuild/bazel","e7707580aa47b1dea03c2c6af2438219ee8d9bd6",1,"2017-12-09 08:30:16-08:00","Move native deps collection code out of
android_binary.  Also remove a TODO that was
addressed in unknown commit.  RELNOTES: None
PiperOrigin-RevId: 178489151
",508725,4592,215466,"ajmichael","ajmichael@google.com","Copybara-Service","copybara-piper@google.com"
"1145","bazelbuild/bazel","a3b8e3972379f7e32f7c72c298ee20d8127f9aff",1,"2017-12-13 05:55:07-08:00","Implement --(no)expand_test_suites flag.
--noexpand_test_suites flag will suppress
expansion of test_suite targets into constituent
tests, so that command-line aspects can analyze
test_suite targets.  RELNOTES: Added
--(no)expand_test_suites flag. PiperOrigin-RevId:
178892829
",509927,4601,215852,"dslomov","dslomov@google.com","Copybara-Service","copybara-piper@google.com"
"1146","bazelbuild/bazel","918f32784eff50166cc6d0d5ac2f9dad7c5525ee",2,"2017-12-13 12:35:00-08:00","Adds a codec for RegexFilter.  PiperOrigin-RevId:
178942449
",510081,4601,215862,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1147","bazelbuild/bazel","69c45f8e37e021c6668b8be12eb44ad132292186",1,"2017-12-14 11:15:43-05:00","Rename OutputGroupProvider -> OutputGroupInfo.
RELNOTES: None PiperOrigin-RevId: 179046403
",510362,4603,215989,"dslomov","dslomov@google.com","John Cater","jcater@google.com"
"1148","bazelbuild/bazel","15c90b3cda481ee95079b4c4be17e484cb44199a",2,"2017-12-18 08:34:40-08:00","Set the execution platform on a new SpawnAction
based on the RuleContext.  Part of #4128.  Change-
Id: Ic46d2db2017b6cf4c14a91653ab75b3381b80b5a
PiperOrigin-RevId: 179426362
",511037,4603,215852,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1149","bazelbuild/bazel","f527577fcc27a06a3db5b9fdc426a71a1b96d5a4",2,"2017-12-19 06:51:56-08:00","remote: Allow auth scopes to be a comma-separated
list.  --auth_scopes can be passed a comma-
separated list of authentication scopes.  Add ""htt
ps://www.googleapis.com/auth/devstorage.read_write
"" to the list of defaults. This scope is used when
using Google Cloud Storage (GCS) as a remote
caching backend.  Change-Id:
I62e6fed28b28737823ad6c70cbc5048b3a3190b5
PiperOrigin-RevId: 179548090
",511010,4602,215818,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-piper@google.com"
"1150","bazelbuild/bazel","44d1571470ff0a145cf13f3728de5d1483143fb7",1,"2017-12-20 05:42:28-08:00","Aspects-on-aspect see and propagate over aspect
attributes.  If an aspect is applied to a
rule+aspect node, all attributes are merged into
ctx.rule.attr collection, and the first one with
the same name wins (in particular, rule attribute
will always win over aspect attribute). This is
backwards-compatible, and unlikely to cause
problems in practice.  RELNOTES: Aspects-on-aspect
see and propagate over aspect attributes.
PiperOrigin-RevId: 179675660
",511600,4605,215969,"dslomov","dslomov@google.com","Copybara-Service","copybara-piper@google.com"
"1151","bazelbuild/bazel","ab8ea13d81106aebcfd1c08f4edec198e347c48c",1,"2017-12-20 12:53:31-08:00","Remove references to some internal tooling.
RELNOTES: None PiperOrigin-RevId: 179722149
",512321,4608,216073,"ajmichael","ajmichael@google.com","Copybara-Service","copybara-piper@google.com"
"1152","bazelbuild/bazel","4abd6c30f99635b803b9170baa3de1e3f3b2859d",1,"2017-12-21 10:52:16-08:00","Move FileStateValue.Type to Metadata; add
Metadata.getType()  This is in preparation for
merging FileArtifactValue and FileStateValue.
Progress on #3360.  PiperOrigin-RevId: 179832948
",512704,4613,216381,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1153","bazelbuild/bazel","0421d7d8566a6fbe35e17a1edc3ab4d622aa6c9e",9,"2017-12-21 14:17:10-08:00","Warn about config expansions as we do for other
expansions.  If an expanded value overrides an
explicit value, users who do not know the contents
of the expansion may be surprised. We already
warned about this for hard-coded expansions, and
this is now applicable for --config expansions as
well.  This will only warn when a single-valued
option has its value replaced. Options that
accumulate multiple values in a list (e.g.,
--copt) will silently include both explicit and
expanded values.  RELNOTES: None. PiperOrigin-
RevId: 179857526
",513193,4623,216597,"ccalvarin","ccalvarin@google.com","Copybara-Service","copybara-piper@google.com"
"1154","bazelbuild/bazel","4b6f10cfff8ab99a17fe5de79966248c3ccf1806",1,"2017-12-24 13:57:22-08:00","Memoize equals and hashCode operations for
BuildOptions. Currently, equality is so slow that
if we have to compare many of them, the build can
basically never finish. This is needed for a
follow-up in which BuildOptions are part of many
SkyKeys.  PiperOrigin-RevId: 180056834
",513448,4657,217068,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1155","bazelbuild/bazel","d331fa7b642ac5487a3e084ad53117fc3c2cf5df",2,"2017-12-28 07:38:31-08:00","Rename some ClassObject/Provider-related methods
The terminology ""field"" is preferred over ""key""
for the components of a struct or struct-like
object.  RELNOTES: None PiperOrigin-RevId:
180269374
",513592,4657,217083,"brandjon","brandjon@google.com","Copybara-Service","copybara-piper@google.com"
"1156","bazelbuild/bazel","2ef5d2170e0558468b0c0e989b910fbb52e95368",1,"2018-12-31 08:17:04-08:00","Add android_local_test rule to Bazel.  This rule
enables testing android_librarys locally in the
jvm (as opposed to on a device). To use this rule
with robolectric (robolectric.org), add the
following to your WORKSPACE file:  http_archive(
name = ""bazel_android"",   url = ""..."", )
load(""@bazel_android//:setup_robolectric.bzl"",
""setup_robolectric"") setup_robolectric()  and then
an android_local_test rule would need to add:
""@bazel_android//:robolectric"", to its
dependencies.  android_local_test(     name =
""MyTest"",     srcs = [""MyTest.java""],     deps = [
""//java/app:lib"",
""@bazel_android//:robolectric"",     ], )
RELNOTES[NEW]: New android test rule,
android_local_test.  PiperOrigin-RevId: 180438995
",513670,4660,216904,"dannark","dannark@google.com","Copybara-Service","copybara-piper@google.com"
"1157","bazelbuild/bazel","6ad05df111478e412ea760b60039224d0497228b",2,"2018-01-02 18:29:58-08:00","@AutoCodec: Uses sun.misc.Unsafe to retrieve
fields for serialization.  This is fast (profiles
indicate a 9% penalty vs getters) and does not
require getters. * Also adds a Marshaller for
java.util.regex.Pattern. * Minor fixes for codecs
that were broken by this change.  PiperOrigin-
RevId: 180619680
",513533,4652,216757,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1158","bazelbuild/bazel","f50a6659b83a8b4907d3a812f93888de9297a5fb",6,"2018-01-03 05:25:34-08:00","Rework implementation of
--nobuild_runfile_manifests.  When
--nobuild_runfile_manifests is passed, don't
create runfiles input or output manifests at all.
This seems better than creating fake manifest
artifacts that are actually a middleman. Fail fast
for local tests and the run command when
--nobuild_runfiles_manifests is passed. (These
cases were failing with obscure errors before
under --nobuild_runfile_manifests-I just improved
the messaging. See
https://github.com/bazelbuild/bazel/issues/4177.)
Change-Id:
I351d26f746ecbe47016b58e4662768a5b6a72ff2
PiperOrigin-RevId: 180659571
",513549,4652,216745,"Benjamin Peterson","bp@benjamin.pe","Copybara-Service","copybara-piper@google.com"
"1159","bazelbuild/bazel","54177d746c44e0117e0c9c068dd5885303111876",4,"2018-01-05 11:35:07-08:00","Add support for native header outputs to
JavaBuilder  Add a --native_header_output flag
which, if set, causes JavaBuilder to set the
equivalent of `javac -h`, and then collect all
generated headers and write them to a jar archive
at the given path.  PiperOrigin-RevId: 180954084
",513919,4657,216940,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1160","bazelbuild/bazel","fae484ddb382e0048479837015a704291088270c",1,"2018-01-08 03:41:51-08:00","Remove code that used to support
--javabase=<absolute path>.  This is the first
step in removing package loading from
JvmConfigurationLoader (I didn't want to add the
rest into this change because it's technically
possible to access ctx.fragments.jvm even though
it contains no fields, so removing that is an
incompatible change) and it's also possible that
removing error reporting from
JvmConfigurationLoader causes some subtle changes
in behavior.  Baby steps. Now that the hard part
is done, there is no need to rush.  RELNOTES:
None. PiperOrigin-RevId: 181143978
",514159,4658,216947,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1161","bazelbuild/bazel","3864a45afa368473a4a6a90d69edb48cb67d367a",4,"2018-01-11 17:15:24-08:00","Add support for native header outputs to
{java,android}_library  PiperOrigin-RevId:
181684446
",515757,4672,217443,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1162","bazelbuild/bazel","4d6cc0cfcf762e2a644510483942d199ab91d737",1,"2018-01-12 04:21:46-08:00","java,runfiles: add Java library to handle runfiles
This is a prerequisite to port all tests to run on
Windows. It is also part of the effort to provide
platform-independent, language-specific runfiles-
handling libraries.  See: -
https://github.com/bazelbuild/bazel/issues/4292 -
https://github.com/bazelbuild/bazel/issues/3839
Change-Id:
Ic64aadcf3f97885de3151da9f921d6351687dce9
PiperOrigin-RevId: 181727511
",515883,4679,217599,"Laszlo Csomor","laszlocsomor@google.com","Copybara-Service","copybara-piper@google.com"
"1163","bazelbuild/bazel","d4c19e65c9e219772d22720761ef7646cdb210f8",4,"2018-01-12 09:01:13-08:00","RELNOTES: Allow expanding TreeArtifacts for
libraries_to_link  PiperOrigin-RevId: 181750466
",516023,4679,217610,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1164","bazelbuild/bazel","8134b9fc140c810d00a91ca9a0313a1e4322ee00",1,"2018-01-17 08:53:48-08:00","Migrate Apple providers to abide by Native
Declared Provider best practices.  This has the
effect of documenting exposed struct fields on
these providers.  RELNOTES: None. PiperOrigin-
RevId: 182221042
",516977,4684,217688,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1165","bazelbuild/bazel","ee6a6862e26704854fb08bd90912890814cc3426",7,"2018-01-17 14:36:26-08:00","Introduce Root class.  This class represents a
root (such as a package path or an output root)
used for file lookups and artifacts. It is meant
to be as opaque as possible in order to hide the
user's environment from sky keys and sky
functions.  Roots are used by RootedPaths and
ArtifactRoots.  This CL attempts to make the
minimum number of modifications necessary to
change RootedPath and ArtifactRoot to use these
fields. Deprecated methods and invasive accessors
are permitted to minimise the risk of any
observable changes.  RELNOTES: None PiperOrigin-
RevId: 182271759
",517381,4686,217721,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1166","bazelbuild/bazel","8896d2e211c57453359566c4520615c1c1f75b66",1,"2018-01-19 02:55:21-08:00","Prevent broken cache entries on concurrent file
changes  Local execution has an inherent race
condition: if a user modifies a file while an
action is executed, then it is impossible for
Bazel to tell which version of the file was
actually read during action execution. The file
may have been modified before or after the tool
has read it, or, in the worst case, the tool may
have read both the original and the modified
version. In addition, the file may be changed back
to the original state before Bazel can check the
file, so computing the digest before / after may
not be sufficient.  This is a concern for both
local and remote caches, although the cost of
poisoning a shared remote cache is significantly
higher, and is what has triggered this work.
Fixes #3360.  We solve this by keeping a reference
to the FileContentsProxy, and using that to check
for modificaitons before storing the cache entry.
We output a warning if this check fails.  This
change does not increase memory consumption; Java
objects are always allocated in multiples of 8
bytes, we use compressed oops, and the
FileArtifactValue currently has 12 bytes worth of
fields (excl. object overhead), so adding another
pointer is effectively free.  As a possible
performance optimization on purely local builds,
we could also consider not computing digests at
all, and only use the FileContentsProxy for
caching.  PiperOrigin-RevId: 182510358
",518102,4688,217832,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1167","bazelbuild/bazel","192c8904999a3e4407999a12c85fc4e9114b5e97",1,"2018-01-19 22:29:42-08:00","Start serializing ArtifactOwner: put in a simple
codec for the null artifact owner and fix up
BuildConfigurationValue.Key. ConfiguredTargetKey
is going to need some modifications to AutoCodec:
probably the long-awaited static ""create"" method.
PiperOrigin-RevId: 182630181
",518382,4689,217872,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1168","bazelbuild/bazel","65797d43f1ae31b8150d36734d3d07db3369e1c8",2,"2018-01-22 10:07:04-08:00","Add new skyfunction to load registered execution
platforms  Part of #4442.  Change-Id:
I49d6d851787727739f50348df2e2ef48392af479
PiperOrigin-RevId: 182795733
",518723,4693,217958,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1169","bazelbuild/bazel","de683bf1a677c35c6a0c3b6f7197c107f6850f3a",1,"2018-01-23 11:25:59-08:00","ThinLTO: Add support for merged object files.
Merged object files are needed when we use -flto-
unit. It's created during the LTO indexing step
and needs to be passed to the final link. LLVM
already can create merged object files we just
need to pass ""-Wl,-plugin-opt,obj-path="" into LLVM
gold plugin.  ""-flto-unit"" emits IR to support LTO
unit features needed for CFI (Control Flow
Integrity).  RELNOTES: Add support for merged
object files needed for -flto-unit. PiperOrigin-
RevId: 182964781
",518894,4695,218001,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1170","bazelbuild/bazel","a39a562850bc17182d2ee0d86177457f27453bef",1,"2018-01-24 08:43:35-08:00","Introduce a wrapper around the
ImmutableSortedSet<Class<? extends
BuildConfiguration.Fragment>> set of Fragment
classes that is part of the
BuildConfigurationValue.Key. This class allows us
to compute a fingerprint of the wrapped
ImmutableSortedSet, making equality comparisons
fast. The number of additional wrapper objects is
the number of distinct sets of fragment classes,
so 1. (In fact, we don't even need to compute a
fingerprint, since reference equality does the job
for us here, but we do it just to be
conservative.)  This CL has a performance benefit
for Bazel currently, but has a bigger performance
benefit in the following changes, where there are
more BuildConfigurationValue.Key objects to
compare.  PiperOrigin-RevId: 183090122
",518996,4696,218013,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1171","bazelbuild/bazel","269d9bd849938af49a30950522bec9e1140cf599",1,"2018-01-24 10:15:56-08:00","Add codecs for SkyKeys that are needed for null
build.  PiperOrigin-RevId: 183102476
",519041,4696,218015,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1172","bazelbuild/bazel","fbdeffed9f2bd3f2eca1335c60fc04c82a2524a9",1,"2018-01-26 02:19:58-08:00","BEP: report analysis failure events  ...as
completion of the respective top-level targets. In
this way, a failure is associated to its root
cause, even if the cause is at analysis phase; in
particular, visibility errors are correctly
associated.  For the time beeing, we associate
visibility root causes only with labels; it is
planned to change that to the more accurate
configured labels in a follow-up change.  Change-
Id: I04121a7cd2099fc65171eae0719fd77b98aef09b
PiperOrigin-RevId: 183359798
",516718,4702,217563,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-piper@google.com"
"1173","bazelbuild/bazel","29f2ba82ca7581a68b4cc760d15fc9f89b0ea9b9",3,"2018-01-29 13:43:24-08:00","Expose ApkInfo and AndroidInstrumentationInfo to
Skylark.  This will enable us to write testing
rules in Skylark.  RELNOTES: None PiperOrigin-
RevId: 183719720
",517824,4717,217828,"ajmichael","ajmichael@google.com","Copybara-Service","copybara-piper@google.com"
"1174","bazelbuild/bazel","be55e1181fd49ef78c24255f66f8d26882730af1",2,"2018-01-30 11:04:53-08:00","Rename Transition to ConfigurationTransition.
PiperOrigin-RevId: 183859414
",517867,4715,217757,"gregce","gregce@google.com","Copybara-Service","copybara-piper@google.com"
"1175","bazelbuild/bazel","12c62bdf6e6a3bb0e37d00d3a7bfde5c16a371b4",8,"2018-02-01 08:16:25-08:00","Add a codec for FeatureConfiguration using
AutoCodec.  This is necessary for CppCompileAction
serialization.  PiperOrigin-RevId: 184141676
",518709,4720,217898,"cpeyser","cpeyser@google.com","Copybara-Service","copybara-piper@google.com"
"1176","bazelbuild/bazel","2f8fa6484cb10efb862d22009cecaaf97a85a4d0",6,"2018-02-01 14:48:13-08:00","Refactors ParallelEvaluator to support eval-wide
exceptions.  Also clarifies a comment on
preventNewEvaluations.  RELNOTES: None.
PiperOrigin-RevId: 184198568
",518907,4720,217898,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1177","bazelbuild/bazel","8b5a64b87f13cf613f9e72d7710294304c091ff1",2,"2018-02-02 07:45:22-08:00","Fix error handling in skyframe target pattern
parsing  Bazel completely swallowed errors in some
cases, e.g., if the pattern is invalid like bazel
build foo//bar:baz.  Note that it previously
silently ignored empty targets if
--experimental_skyframe_target_pattern_evaluator
was passed, and now fails (which is consistent
with legacy behavior). This is an intentional
change, but may break users who are using the
experimental flag and are passing empty strings to
Bazel.  PiperOrigin-RevId: 184282856
",519159,4721,217932,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1178","bazelbuild/bazel","4741aa83145fd2d3ab0599314f7732c5b80977bd",2,"2018-02-05 07:59:13-08:00","Add a ""direct"" mode to ""blaze run"" that makes the
process being run a direct child of the process
where the Blaze client itself was run.
Limitations:  - Untested on Windows; it should
work because ExecuteProgram() is implemented
there, too, but since Windows doesn't support
exec(), there is at least one process in between
Progress towards #2815.  RELNOTES[NEW]: The new ""
--direct_run"" flag on ""blaze run"" lets one run
interactive binaries.  PiperOrigin-RevId:
184528845
",519522,4722,217942,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1179","bazelbuild/bazel","5be4dd62ee5d7bf3730ab2099829dc7f87ef2e94",2,"2018-02-05 11:11:53-08:00","Fix Fileset incrementality bug when Fileset
consumes a generated file. The native skyframe
implementation was actually quite incorrect in
this case: It was adding a skyframe dependency on
a FileValue for the output file. Without a
transitive dependency on the source files and
actions that determine the output file's state,
this could never work (and explains why the
incremental build would fail). Instead, we now
depend on the Artifact corresponding to the output
file instead.  This change updates the business
logic RecursiveFilesystemTraversalFunction. This
approach keeps the business logic of Fileset
filesystem traversal centralized in RFTF.  To
avoid making weird recursive Skyframe nodes in the
output tree, we inline Skyframe dependencies and
do direct filesystem operations over the output
tree.  There are now three states we can be in
when looking up a file: 1. Source file: As before,
make a skyframe dep on the corresponding file 2.
Top-level file of an output tree: Make a dep on
the corresponding Artifact 3. Recursive file under
an output directory: Do direct filesystem
operations. It doesn't make sense to make Skyframe
nodes corresponding to these files. In the future,
I think we should consider failing fast on this
case.  RELNOTES: None PiperOrigin-RevId: 184556044
",519736,4727,218034,"felly","felly@google.com","Copybara-Service","copybara-piper@google.com"
"1180","bazelbuild/bazel","33c419bb0952721f056f01a0374f9f2d238e98bd",4,"2018-02-06 10:57:49-08:00","Add a new tool to check the deps of aar_import.
This is the first cl of a series. The following
CLs will integrate this into bazel.  RELNOTES:n/a.
PiperOrigin-RevId: 184706507
",521469,4750,218446,"cnsun","cnsun@google.com","Copybara-Service","copybara-piper@google.com"
"1181","bazelbuild/bazel","8a96fe9bc1472656cecc420df881181340b82a40",3,"2018-02-08 01:42:23-08:00","C++: Split C++ library into two classes,
compilation and linking  These will be separate
calls in the Skylark API.  RELNOTES:none
PiperOrigin-RevId: 184961734
",522048,4753,218550,"plf","plf@google.com","Copybara-Service","copybara-piper@google.com"
"1182","bazelbuild/bazel","4c2a19613abbde8bfdff861a05e3a4d046efc7b2",1,"2018-02-08 08:09:39-08:00","Refactor RunCommand so that it's a bit less messy.
RELNOTES: None. PiperOrigin-RevId: 184996540
",522269,4755,218587,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1183","bazelbuild/bazel","a729b9b4c3d7844a7d44934bf3365f92633c0a60",3,"2018-02-08 15:32:00-08:00","Replace path implementation.  Path and
PathFragment have been replaced with String-based
implementations. They are pretty similar, but each
method is dissimilar enough that I did not feel
sharing code was appropriate.  A summary of
changes:  PATH ====  * Subsumes LocalPath
(deleted, its tests repurposed) * Use a simple
string to back Path * Path instances are no longer
interned; Reference equality will no longer work *
Always normalized (same as before) * Some
operations will now be slower, like instance
compares (which were previously just a reference
check) * Multiple identical paths will now consume
more memory since they are not interned  PATH
FRAGMENT =============  * Use a simple string to
back PathFragment * No more segment arrays with
interned strings * Always normalized * Remove
isNormalized * Replace some isNormalizied uses
with containsUpLevelReferences() to check if path
fragments try to escape their scope * To check if
user input is normalized, supply static methods on
PathFragment to validate the string before
constructing a PathFragment * Because
PathFragments are always normalized, we have to
replace checks for literal ""."" from
PathFragment#getPathString to
PathFragment#getSafePathString. The latter returns
""."" for the empty string. * The previous
implementation supported efficient segment
semantics (segment count, iterating over
segments). This is now expensive since we do
longer have a segment array.  ARTIFACT ========  *
Remove Path instance. It is instead dynamically
constructed on request. This is necessary to avoid
this CL becoming a memory regression.  RELNOTES:
None PiperOrigin-RevId: 185062932
",521196,4752,218064,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1184","bazelbuild/bazel","aa79fd483daff0db9be274c33de109257f8a6804",1,"2018-02-08 18:11:29-08:00","Stub default methods as needed for core library
desugaring RELNOTES: None  PiperOrigin-RevId:
185082719
",521261,4752,218075,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1185","bazelbuild/bazel","037c9dcf873e8037f7e6a03d4e4c6230dd5a1b27",1,"2018-02-09 06:06:49-08:00","Remove hard-wired basenames for the test setup and
the coverage collection script.  Accomplished by
creating an explicit attribute for both of them on
test actions.  RELNOTES: None. PiperOrigin-RevId:
185132460
",521310,4752,218071,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1186","bazelbuild/bazel","9b96c0b37da7dfbb6f590c3da65413d921b83eb5",4,"2018-02-12 02:53:19-08:00","Skylark: SlicingExpression: do not create new
nodes for optional expressions  RELNOTES: None.
PiperOrigin-RevId: 185353994
",521544,4757,218164,"laurentlb","laurentlb@google.com","Copybara-Service","copybara-piper@google.com"
"1187","bazelbuild/bazel","a92cde101f774c7731fbf16abc099dad311b5216",1,"2018-02-12 06:28:23-08:00","Add a mechanism to SpawnResult to return an in-
memory output  PiperOrigin-RevId: 185370712
",521599,4758,218234,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1188","bazelbuild/bazel","f365d3f3451c3aac00990d7c5c9a2610d96cc2cd",4,"2018-02-13 11:06:45-08:00","Accept --target_label, --injecting_rule_kind in
JavaBuilder and Turbine.  The values (if present)
are written into the manifest with this format:
Target-Label: <label> Injecting-Rule-Kind: <kind>
In the future, JavaBuilder will make sure of this
instead of command line arguments to find owners
for jars for its add_dep commands.  PiperOrigin-
RevId: 185557317
",522104,4764,218360,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1189","bazelbuild/bazel","649d2b12c647d74c6df846adff802b615119ac12",1,"2018-02-13 15:37:30-08:00","@AutoCodec AspectValue$AspectKey.  Also make
AspectKey#toString a little more informative.
PiperOrigin-RevId: 185600069
",522242,4765,218486,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1190","bazelbuild/bazel","f4c5314803d2f2fdd1c6a37324f7f2ebd2d908ca",3,"2018-02-14 16:25:36-08:00","Pass --target_label, --injecting_rule_kind to all
java compile actions.  JavaBuilder and friends
will write this into the manifest of the produced
jars to assist with add_dep commands, when
strict_deps is violated.  This will obviate the
need for blaze to pass jar owners on the command
line.  PiperOrigin-RevId: 185763422
",522837,4767,218552,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1191","bazelbuild/bazel","c8e8749adc7b98c272b2421569dc97a88d487771",1,"2018-02-15 10:43:41-08:00","Resolve the owner of interface.super calls to
inherited default methods for android desugaring
RELNOTES: None.  PiperOrigin-RevId: 185863194
",522919,4769,218463,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1192","bazelbuild/bazel","cce164aed44aba1de244f0d764cd33a5cc6980b2",4,"2018-02-16 10:50:55-08:00","Re-use previously computed deps for
TransitiveBaseTraversalFunction#compute if we have
them instead of re-computing them each time on a
skyframe restart.  PiperOrigin-RevId: 186017079
",523086,4769,218466,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1193","bazelbuild/bazel","80a0633bbeef3f84ab6eb6513a5d36936cd1bdbb",1,"2018-02-20 13:20:30-08:00","Adds ObjectCodecRegistry to
{Des|S}erializationContext.  * AutoCodec now
delegates to the registry. * Adds getSuperclass
logic for resolving a codec. * Small cleanups for
classes that break the registry.  TODO after this
change: * Explicit CODEC definitions are no longer
needed and existing ones should be cleaned up. *
POLYMORPHIC is no longer be needed and should be
cleaned up.  PiperOrigin-RevId: 186351845
",523480,4773,218640,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1194","bazelbuild/bazel","c1042f2adc55d040495a1159100146fad607d32a",1,"2018-02-20 15:30:22-08:00","Tool that scans a given Jar for references to
select classes and outputs corresponding Proguard-
style -keep rules RELNOTES: None.  PiperOrigin-
RevId: 186372769
",523971,4778,218741,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1195","bazelbuild/bazel","f4d2dad976907abea8a727a8360c2e4e087b893f",1,"2018-02-20 20:16:39-08:00","Apply interface invocation desugaring to renamed
core libraries.  Fix invokespecial invocations for
core interfaces. RELNOTES: None.  PiperOrigin-
RevId: 186404206
",523777,4777,218731,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1196","bazelbuild/bazel","ae24bfef708540b0e34744f98528d8e485052714",2,"2018-02-21 14:54:30-08:00","Add basic equality checking for ErrorInfo and
tighten the interface for ErrorInfoManager.
PiperOrigin-RevId: 186524034
",523841,4777,218735,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1197","bazelbuild/bazel","deb99ccfb4e6b236c21e6d425281870aa598804a",1,"2018-02-21 21:34:01-08:00","add ability to move individual core library
methods RELNOTES: None.  PiperOrigin-RevId:
186565673
",523854,4777,218723,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1198","bazelbuild/bazel","da51eb327c39b64357faa85ce5c884d51a58c003",1,"2018-02-22 18:29:57-08:00","Enable ability to pass the resource apk to
Robolectric so that it can consume binary
resources.  This functionality is guarded by a
flag,
--experimental_android_local_test_binary_resources
whose default value is false. If the flag is set
to true, Bazel will generate the .ap_ and add the
path to the .ap_ to the test_config.properties
file. Bazel will still generate and pass the raw
resources to Robolectric in both cases and so the
cue to Robolectric that binary resources should be
used is the presence of the path to the .ap_ in
the test_config.properties file.  RELNOTES: None
PiperOrigin-RevId: 186708941
",524490,4778,218743,"dannark","dannark@google.com","Copybara-Service","copybara-piper@google.com"
"1199","bazelbuild/bazel","246f0aa048aeb3f456c89565e1e3021957b6cef4",1,"2018-02-23 07:46:54-08:00","Automated rollback of commit
7fe59b98eefc96a6310f0b0221d4e0f18e2a9000.  ***
Reason for rollback ***  Fixed bug due to
TransitiveTargetFunction requesting multiple
Package dependencies when computing its aspect
deps by only applying the optimization to
TransitiveTraversalFunction.  *** Original change
description ***  Automated rollback of commit
cce164aed44aba1de244f0d764cd33a5cc6980b2.
PiperOrigin-RevId: 186766812
",524697,4779,218777,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1200","bazelbuild/bazel","ceed58c70f1684fc4da2b32d86198c7a0635ec35",2,"2018-02-23 16:03:28-08:00","@AutoCodec FilesetOutputConfiguredTarget.
PiperOrigin-RevId: 186837642
",525108,4778,218782,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1201","bazelbuild/bazel","c4eb5bc0b858b01f142ae3659ca0d656befd9e32",2,"2018-02-26 10:31:12-08:00","@AutoCodec TransitiveJavaRuleOutputJarsProvider
and JavaRuleOutputJarsProvider.  PiperOrigin-
RevId: 187043046
",525673,4780,218832,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1202","bazelbuild/bazel","0b59342ad5e4935368c790799dfc9c7b192b6225",2,"2018-02-26 12:52:13-08:00","Allow @AutoCodec to tag static final fields, and
generate a ""pointer"" class that has a single
static INSTANCE field pointing back to the target
field, so that serialization can grab it.
PiperOrigin-RevId: 187065629
",525884,4782,218879,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1203","bazelbuild/bazel","dfa0b12a44c6cd434de612db2c6b5573ef4e64bb",1,"2018-02-28 09:46:06-08:00","Add functionality to MemoryProfiler to do multiple
garbage collections at the end of the build in an
effort to get an accurate measurement of used
memory.  PiperOrigin-RevId: 187337487
",526575,4785,218923,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1204","bazelbuild/bazel","e70aafe68eebfd4f7dedf3cccd19deae72d29db6",4,"2018-02-28 12:16:38-08:00","Deprecate and remove several uses of the 'values'
map in NativeInfo subclasses.  These subclasses
should be using @SkylarkCallable(structField =
true) instead This is a bit of a memory win, as
there is now no need to store field information
twice.  There are still a couple of stragglers
that are more difficult, namely ToolchainInfo and
DefaultInfo. Their APIs will likely need some more
extensive revamping before proceeding.  RELNOTES:
None. PiperOrigin-RevId: 187364392
",526572,4781,218860,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1205","bazelbuild/bazel","babbfdc6cb98a23fe0dadf02d7dc407504e9cac5",1,"2018-03-02 14:41:23-08:00","emulate dynamic dispatch of emulated default
interface methods RELNOTES: None.  PiperOrigin-
RevId: 187671513
",527262,4789,219106,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1206","bazelbuild/bazel","922d1e671bc02086afdcfb8ae1636eefc53e0ee2",1,"2018-03-05 14:49:00-08:00","remote: Add interceptor for logging gRPC calls
during remote execution/caching  This provides a
io.grpc.ClientInterceptor implementation that can
be used to log gRPC call information. The
interceptor can select a logging handler to use
based on the gRPC method being called (Watch,
Execute, Write, etc) to build a LogEntry, which
can then be logged after the call has finished.
Unit tests for the interceptor are included.  In
this change, the interceptor is never invoked, nor
are there any handlers implemented for any gRPC
methods. The interceptor also never tries to log
any entries.  To avoid circular dependency issues
(Remote library will depend on logger which
depends on remote library for utils), I've
factored out the utility classes from the remote
library into their own directory/package as part
of this change.  PiperOrigin-RevId: 187926516
",528463,4795,219160,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1207","bazelbuild/bazel","7ba939dfd5df48903929e9c14ebd0449656403e4",7,"2018-03-05 16:19:35-08:00","Cache SkylarkLookupImportValues in memory so that
we don't recompute them multiple times.
PiperOrigin-RevId: 187941859
",528830,4797,219199,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1208","bazelbuild/bazel","bbf251f9aac9bb7f362b903420e47ad4fa12d17c",1,"2018-03-06 12:07:46-08:00","Convert a bunch of non-AutoCodec classes to use
@AutoCodec: BuildConfiguration, BuildOptions,
CollectTargetsUnderDirectoryValue.  PiperOrigin-
RevId: 188059815
",528600,4798,219114,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1209","bazelbuild/bazel","e2d200f32a7242898a5c976837bd3b8e6dfed62c",5,"2018-03-06 16:15:11-08:00","Expose an actions provider on RuleConfiguredTarget
instances.  Given a target (for example from a
skylark aspect), one will be able to access a list
of actions that the target generated using
""target.actions"". This is without additional
memory footprint.  Actions themselves are not
fully exposed to skylark (and thus there isn't
much meaning to gather from them in skylark yet).
Access methods will follow soon.  RELNOTES: None.
PiperOrigin-RevId: 188098079
",529503,4807,219408,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1210","bazelbuild/bazel","bc1e2b0052c910bc976ab06823289ca1cf8156e4",3,"2018-03-07 07:30:48-08:00","Add a binary to CppCompileAction that is
responsible for grepping header files for include
statments. This binary is currently only used for
an internal feature - but that feature may be
supported externally eventually.  RELNOTES: None
PiperOrigin-RevId: 188173513
",529685,4807,219425,"ajmichael","ajmichael@google.com","Copybara-Service","copybara-piper@google.com"
"1211","bazelbuild/bazel","55ccf58f9da9847269a42c15e05317aab993d78c",2,"2018-03-08 10:02:54-08:00","Add an interface to interact with sandboxfs.  The
new SandboxfsProcess interface allows interacting
with sandboxfs. There are two implementations:
RealSandboxfsProcess, which spawns the sandboxfs
binary, and FakeSandboxfsProcess, which mimics
what sandboxfs does but using symlinks and is
intended for testing purposes only.  The
RealSandboxfsProcess implementation works but
still carries many TODOs.  The most ""painful"" one
may be that the test requires manual invocation
because we do not yet have an easy way to
integrate with sandboxfs.  That will be solved
later on; for now this is sufficient for initial
testing.  RELNOTES: None. PiperOrigin-RevId:
188347393
",530390,4817,219781,"jmmv","jmmv@google.com","Copybara-Service","copybara-piper@google.com"
"1212","bazelbuild/bazel","7e50ced9bb59b4ab445edd7904bf31601fd2cea0",3,"2018-03-09 17:02:18-08:00","Allow ObjectCodecRegistry to handle
MemoizingCodecs. Initially this is just Skylark
memoization, but we may extend in future to handle
more than just Skylark this way. In fact, we
probably want most of our ObjectCodecs to be
MemoizingCodecs that can efficiently fall back to
ObjectCodec if not using memoization (maybe coming
in a follow-up).  At a high level, this CL merges
the functionality of MemoizingCodecMap into
ObjectCodecRegistry, adds auto-registration of
MemoizingCodec, and uses that to get rid of a lot
of codecs that were just delegating. The big one
to get rid of there is SkylarkValueCodec: all of
its delegation duties are implicitly now in
ObjectCodecRegistry and friends.  One danger with
this CL is that many of the features of Skylark
serialization are only being tested in unit tests,
which had to be reworked as part of this change. I
don't think we've lost any coverage, but I could
be wrong. SkylarkValueCodec had a bunch of methods
that were effectively test-only, which made it
easier to remove.  The plan is to provide a
Memoizer.Serializer inside the
SerializationContext. At the top level, it will be
a DUMMY_SERIALIZER that does no memoization, but a
MemoizingCodec can do context =
context.ensureMemoizing() which will recreate the
context with a true memoizing serializer. Then all
references to the Serializer in codec code can be
cleaned up, and the MemoizingCodec and ObjectCodec
signatures will be the same. At that point, we can
make all ObjectCodecs compatible with memoization
by default (with strategy MEMOIZE_AFTER), and add
a ""memoize"" boolean to @AutoCodec. That should
allow us to have full interoperability between all
codecs.  This CL also makes CodecScanner
deterministic in the order of classes that it
processes (there was a lurking bug here where
constants must be deterministically ordered but
that wasn't enforced at all).  PiperOrigin-RevId:
188559983
",531460,4820,220143,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1213","bazelbuild/bazel","50f99d56bb710f01524bd3f04882dada16a792c3",1,"2018-03-10 05:14:09-08:00","ActionOwner references only BuildEvent instead of
full BuildConfiguration  This reduces the size of
its serialized representation.  PiperOrigin-RevId:
188597127
",531846,4821,220185,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1214","bazelbuild/bazel","9c101404519d91db8e8dec09f9a9495eb8352f58",2,"2018-03-10 06:48:59-08:00","Add BuildConfiguration to
ConfiguredTargetAndTarget and rename it to
ConfiguredTargetAndData. We want to get
BuildConfiguration out of ConfiguredTarget because
it uses >800K when serialized.  PiperOrigin-RevId:
188600002
",531856,4821,220185,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1215","bazelbuild/bazel","0084e16b55ad54f7aeeffd6d003ea3506039d957",2,"2018-03-12 18:50:56-07:00","Fix toolchain and execution platform registration
to use patterns.  This allows more flexibility in
registering toolchains and execution platforms,
both in the WORKSPACE and from the command-line.
Change-Id:
I6fe75507d1a74de74085b7c927fdf093c152b894
PiperOrigin-RevId: 188813688
",531684,4824,220232,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1216","bazelbuild/bazel","2cbeb24a9c41c6b14ecbb26e2e198fbaf79aea64",1,"2018-03-12 21:37:51-07:00","Make KeepScanner tool search classpath for nearest
definition of each member reference, instead of
potentially referring to a subtype. Refactor
desugar's class loading machinery and related code
into a separate package for easier reuse in this
tool. RELNOTES: None.  PiperOrigin-RevId:
188825305
",531807,4825,220260,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1217","bazelbuild/bazel","9ba46f8f3c2f62a37914e7bfb199c65a71b64b9f",3,"2018-03-13 13:07:52-07:00","Integrate memoization into standard serialization.
This involves a number of large changes:  1.
SerializationContext and DeserializationContext
become the owners of the Memoizer if requested.
They produce new versions of themselves on demand
that are memoization-aware. Because of intricacies
of Skylark that I do not fully understand, we
inject a Mutability object when starting
memoization, and so to be conservative, that
injection starts up a new memoization frame,
nested if we were already memoizing, just like
before. It would be nice to decouple this
injection from memoization in the future.  2.
MemoizingCodec is deleted, but really ObjectCodec
becomes MemoizingCodec, so it lives on. BaseCodec
is deleted since it now has only one
implementation.  3. The simplified model of
registering MemoizingCodecs is adopted for
ObjectCodecs: all codecs are registered based on
their #getEncodedClass and
#additionalEncodedSubclasses. This also allows us
to register codecs that are defined using tricky
parameter types, since we're no longer trying to
reflectively examine them. This required a clean-
up of such codecs, and the addition of
ArrayListCodec to stop NullableListCodec from
making lists unmodifiable when they shouldn't be.
4. @AutoCodec is extended to allow users to
specify that memoization should start with this
codec.  To ensure bit-equivalence,
SkyKeySerializer disables memoization.
PiperOrigin-RevId: 188918251
",531942,4825,220267,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1218","bazelbuild/bazel","31032f5a089ded7ebeeb2786eb91864ac58e3306",1,"2018-03-15 12:21:25-07:00","Remove unnecessary @VisibleForTesting  I imagine
it was used at some point, can't find any usages
now.  PiperOrigin-RevId: 189226615
",532116,4826,220337,"michajlo","michajlo@google.com","Copybara-Service","copybara-piper@google.com"
"1219","bazelbuild/bazel","2732df0202499aff75de38c012fec57ed53a5a30",4,"2018-03-16 08:48:13-07:00","Propagating remote results, including stdout/err,
to Bazel on execution timeouts.  The refactoring
to have an Exception that contains partial results
will also be used in the next CL, in order to
propagate and save remote server logs.  RELNOTES:
None PiperOrigin-RevId: 189344465
",531495,4833,220386,"olaola","olaola@google.com","Copybara-Service","copybara-piper@google.com"
"1220","bazelbuild/bazel","bff4ac081bd80f227cc0c3027f67e306d35699fa",2,"2018-03-19 13:15:59-07:00","Expose the j2objc configuration fragment, with
field dead_code_report, matching build flag
--j2objc_dead_code_report.  RELNOTES: The 'j2objc'
configuration fragment is exposed to Skylark.
PiperOrigin-RevId: 189630012
",531973,4839,220459,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1221","bazelbuild/bazel","e2df6e2ade9279dc2a1adfbcaaf16116f201ad07",2,"2018-03-19 14:31:00-07:00","Add some testing methods to get
ConfiguredTargetAndData more easily, and rename
some methods that were still called
ConfiguredTargetAndTarget. Move some tests over to
using ConfiguredTargetAndData instead of calling
ConfiguredTarget#getConfiguration() directly.
PiperOrigin-RevId: 189642264
",532095,4839,220468,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1222","bazelbuild/bazel","56d1b1c3122a3d1ec111baab339631b8c42c2c31",3,"2018-03-19 19:04:20-07:00","Plumb support for mounting a sandboxfs instance
during a build.  This introduces user-facing
options to enable the experimental sandboxfs
support and, when enabled, mounts a sandboxfs
instance throughout the build.  The sandboxfs'
process handle is passed to the
SandboxActionContextProvider so that the
SpawnRunners can later consume it.  Note that this
does NOT yet provide sandboxfs support for the
builds as the SpawnRunners are untouched.
RELNOTES: None. PiperOrigin-RevId: 189678732
",532170,4838,220455,"jmmv","jmmv@google.com","Copybara-Service","copybara-piper@google.com"
"1223","bazelbuild/bazel","0acc6a7a989949635524424d0c88d7dbf32f38f8",6,"2018-03-20 07:25:33-07:00","Have the Android R class generators add the target
label to the class jar.  This re-enables support
for add_deps.  RELNOTES: None PiperOrigin-RevId:
189737607
",532637,4840,220497,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1224","bazelbuild/bazel","5d7fa7ba5d93a1fe35353b05882698b0d74d90f7",1,"2018-03-22 13:37:38-07:00","Add a DefaultBuildOptions specifying default build
flags that may differ from the provided defaults
in Options classes. These are used to create
BuildOptionsDiffForReconstruction, which lets us
store only the diffs in our
BuildConfigurationValue.Keys.  PiperOrigin-RevId:
190117455
",533616,4857,220813,"mjhalupka","mjhalupka@google.com","Copybara-Service","copybara-piper@google.com"
"1225","bazelbuild/bazel","3a7b8bc2abeaf8b8647c037bed1dd5fd73b8392b",1,"2018-03-22 15:12:00-07:00","Add support for sandboxfs-based sandboxing to
macOS.  This only modifies the
DarwinSandboxedSpawnRunner for now and leaves
behind the Linux version.  The latter is a bit
more complex to do because of the need to deal
with tmpfs and bind-mount interactions.  We expect
sandboxfs to have the biggest impact on macOS
anyway, not Linux, so this can wait until this has
proven that it deserves staying for the long-term.
Tested: Manually ran a self-build of Bazel on a
version of Bazel built with these changes and the
build passed.  RELNOTES: None. PiperOrigin-RevId:
190133429
",533914,4860,220920,"jmmv","jmmv@google.com","Copybara-Service","copybara-piper@google.com"
"1226","bazelbuild/bazel","10798099687faad9edd9a3b9e4e46b03cedfaad7",1,"2018-03-23 12:10:25-07:00","Adds hook to AspectFunction to allow for inlining
SkylarkImportLookupFunction. If inlining is off,
fixes a bug where null return values resulted in
an error.  PiperOrigin-RevId: 190255818
",534080,4861,220806,"cpeyser","cpeyser@google.com","Copybara-Service","copybara-piper@google.com"
"1227","bazelbuild/bazel","26e7280deecc11172c1b16637d513c2d0d242c09",2,"2018-03-26 09:04:48-07:00","Add DONE_CHECKING as a reason for requesting
nodes.  Split registering the unique new deps of a
node between those where we're enqueueing a known
dependency from a prior build and one where we're
adding a new dependency.  Replace prefetchBatch
with getBatchAsync and add
createIfAbsentBatchAsync.  PiperOrigin-RevId:
190471980
",534439,4864,220900,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1228","bazelbuild/bazel","327c74df7c3b4820a0620bf9696c3f88bffebda3",1,"2018-03-26 18:38:07-07:00","stub simple core library bridge methods that only
differ in return type RELNOTES: None.
PiperOrigin-RevId: 190559240
",534788,4868,220974,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1229","bazelbuild/bazel","60554e40665c44e0f0423eb43183db3ea7c69514",1,"2018-03-27 10:26:36-07:00","Get rid of a few more #getConfiguration() calls.
We're now passing a ConfiguredTargetAndData into
TargetCompleteEvent, which seems reasonable.
PiperOrigin-RevId: 190634162
",534831,4866,220897,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1230","bazelbuild/bazel","1e00497c61323d1b7f0992b21887474283ebe0cb",1,"2018-03-28 08:23:33-07:00","Add a skylark-compatible alternative to
MessageBundleProvider  PiperOrigin-RevId:
190775527
",534775,4867,220884,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1231","bazelbuild/bazel","500e17be9da4c334c02b8e08f2d5c62254432178",7,"2018-03-28 15:26:04-07:00","Allow ConfiguredTargetFunction to release its CPU-
bound semaphore during dep requests if
SkyframeExecutor has reason to believe that those
requests may not be CPU-bound.  PiperOrigin-RevId:
190844728
",534741,4872,220942,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1232","bazelbuild/bazel","f2b66aa31b0a3addb2f3712c6232f4c8c65b55db",2,"2018-03-29 10:02:27-07:00","Rename LocalResourceContainer to AndroidResources
and remove asset code from it  As part of
decoupling Android resources and assets, rename
LocalResourceContainer to AndroidResources and
remove asset code from it. Some general asset and
manfiest code still remains and will be dealt with
in future changes.  Remove LocalResourceContainer
from the ParsingActionBuilder, since it's always
used to build the ResourceContainer that is
subsequently passed in.  RELNOTES: none
PiperOrigin-RevId: 190945260
",534748,4873,220974,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1233","bazelbuild/bazel","083be7a8f972a060e4e263819e0e9080b5aa6929",4,"2018-03-29 10:41:52-07:00","Pass resources and assets seperately into parse
and compile actions  This will eventually allow us
to parse or compile assets and resources
separately.  Also, remove a no-op null check that
was making the code confusing, and some unneeded
resource filtering that was doing the same.
RELNOTES: none PiperOrigin-RevId: 190951667
",534771,4873,220985,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1234","bazelbuild/bazel","1067310e18cb9ac203110726de0be53bdc403cea",2,"2018-03-29 11:20:31-07:00","Remove Target from TargetPatternPhaseValue. Use
the sets of targets that would have been in
TargetPatternPhaseValue to construct Postables
that would use information from the
TargetPatternPhaseValue.  Tag
TargetPhasePatternValue with @AutoCodec.
PiperOrigin-RevId: 190958515
",534855,4873,220985,"mjhalupka","mjhalupka@google.com","Copybara-Service","copybara-piper@google.com"
"1235","bazelbuild/bazel","d3fe5e7f42e31a1021ace7cefb8a10285aad3494",3,"2018-03-30 12:49:12-07:00","Make RuleClass serializable and remove Environment
from it, since it was only being used for the
transitive hash code and transitive label of its
globals, which can be passed in explicitly.
Assert along the way that the transitive label of
its globals is always non-null. That is currently
the case, although there seems to be no hard
invariant of the system that it is true. Might as
well tighten it now.  PiperOrigin-RevId: 191103310
",535231,4877,221064,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1236","bazelbuild/bazel","81dbe79d09b4fa98d7803018b5d6d026e2e52a2e",4,"2018-04-03 07:08:09-07:00","Add methods to parse resources without assets  -
Add ParsedAndroidResources to wrap
AndroidResources and resource parsing   output. -
Implement parse() method in AndroidResources, and
support for it elsewhere - Move some supporting
methods to the right place (setting up an aapt2
sdk for   tests goes to the base test rule, and
creating a dummy DataBinding zip goes   to the
DataBinding class). - Tests for new parse()
method, including support for getting a test
RuleContext instance  RELNOTES: none PiperOrigin-
RevId: 191436027
",535568,4880,221124,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1237","bazelbuild/bazel","00b72a1590713e7650285d84ae2a1e5c2041defe",1,"2018-04-04 09:49:03-07:00","Replaces JavaSerializableCodec with DynamicCodec
as the default  * Skylark serialization was
previously dropping location in error, which this
fixes. * Deletes a lot of codecs with fidelity
issues (DynamicCodec has full fidelity). * Deletes
EnumRuntimeCodec which can now be replaced with
the superior EnumCodec. * This should eventually
allow us to delete Serializable from all Blaze.
The remaining blocker is
NoSuchPackageExceptionCodec.  PiperOrigin-RevId:
191603929
",524844,4749,216566,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1238","bazelbuild/bazel","c4987159509cd8de3f0c4070b53ea1bf3b8278cd",1,"2018-04-04 11:54:28-07:00","Remove some deprecated resources flags.  RELNOTES:
None PiperOrigin-RevId: 191624839
",524797,4751,216582,"ajmichael","ajmichael@google.com","Copybara-Service","copybara-piper@google.com"
"1239","bazelbuild/bazel","b4897fc07f91f3101ed25e3a0b46125d4853abea",3,"2018-04-04 12:58:36-07:00","Save the lookup and write of the codec index when
the object is memoized, as well as the
NEW_VALUE/BACKREF enum write. Probably doesn't
actually take much space/time, but free
optimization.  PiperOrigin-RevId: 191633484
",524813,4751,216601,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1240","bazelbuild/bazel","78651d4a407fd6114d7d1129a26d5500fdeb21f2",2,"2018-04-06 01:52:58-07:00","Move shell executable to its own configuration
fragment.  RELNOTES: None. PiperOrigin-RevId:
191861074
",525711,4752,216716,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1241","bazelbuild/bazel","5a722f3333e32a5b1bdad401c7121079d4a803c3",2,"2018-04-09 12:05:34-07:00","Remove overly optimistic decoupled manifest
processing  In earlier changes, I introduced an
idealised manifest processing pipeline that has no
relation to what's currently being used. Instead,
we should start with independent manifest
processing that keeps the current behavior. We can
migrate to new functionality later, time
permitting.  Keep some methods that will be the
basis for a reasonable decoupled manifest
processing implementation.  RELNOTES: none
PiperOrigin-RevId: 192164028
",525187,4740,216402,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1242","bazelbuild/bazel","c10ad74a80bcd890f857c0f2bbfbf61bfc1f7b6f",44,"2018-04-10 12:44:40-07:00","Simplify AbstractSkyFunctionEnvironment to more
directly call getValueOrUntypedExceptions.
PiperOrigin-RevId: 192329649
",525830,4747,216660,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1243","bazelbuild/bazel","bd923e7c6bdeb621a91ddd3eb064d3597024b7d4",1,"2018-04-10 14:01:34-07:00","Add support for sandboxfs-based sandboxing to
Linux.  This is essentially the same as https://gi
thub.com/bazelbuild/bazel/commit/3a7b8bc2abeaf8b86
47c037bed1dd5fd73b8392b.  RELNOTES: none.
PiperOrigin-RevId: 192342039
",525838,4747,216665,"jmmv","jmmv@google.com","Copybara-Service","copybara-piper@google.com"
"1244","bazelbuild/bazel","e8243465731f5c407448e7b9d5686663f149b9da",1,"2018-04-11 14:26:07-07:00","Add skipped manifest processing methods  Add some
required manifest support I didn't previously
implement: - Support for exports_manifest field -
Get properly processed manifest from
AndroidSemantics - Correctly represent the current
relationship between manifest and resource
processing - resource processing uses the stamped
manifest.  RELNOTES: none PiperOrigin-RevId:
192508962
",526478,4751,216775,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1245","bazelbuild/bazel","445fb097b82aae3b2e5736aea540ecb907d5f052",4,"2018-04-13 12:21:12-07:00","Resource-only merge action  Create wrapper for
merged resources, and methods to make it from
parsed resources.  Currently just reuse the
ResourceDependencies class to provide resource
dependencies; we could create an interface and
another class, but this class is good enough (and
will be resource-specific once we finish
decoupling assets, resources, and manifests).
Note that, like the previous parse action, merging
sometimes has a dependency on the stamped
manifest, so resources and manifests will only be
mostly decoupled.  Also, make the merge action not
require an output manifest for cases like this.
RELNOTES: none PiperOrigin-RevId: 192805891
",528455,4794,217478,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1246","bazelbuild/bazel","8b47bc0c5f489424d39e5ae4f41f8a192a890bad",4,"2018-04-13 13:28:45-07:00","Allow validation action to run just against
resources  This is the last step of decoupling
assets and resources for the basic android_library
path, but more work still needs to be done in
future changes (for additional library features
like aar exporting, and for top-level targets like
android_binary).  RELNOTES: none PiperOrigin-
RevId: 192815261
",528619,4795,217528,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1247","bazelbuild/bazel","40f91b00a88554de7adcff7b24e8b1902289ca6d",1,"2018-04-13 14:54:10-07:00","Split the single classpath (combining
bootclasspath and regular classpath together) into
two separate classpaths. This is the preparation
cl. In the following cls, I will graduately make
the dependency issues clear, i.e., wether it is a
problem in the bootclasspath or the regular
classpath.  RELNOTES: n/a. PiperOrigin-RevId:
192828237
",528816,4797,217564,"cnsun","cnsun@google.com","Copybara-Service","copybara-piper@google.com"
"1248","bazelbuild/bazel","6f91ca6e4619f25a33945f57cb29a83c6a917fc8",1,"2018-04-18 07:02:03-07:00","Create pipeline for monolithic data processing
with decoupled classes  The
AndroidResourceProcessingAction does all of asset
parsing and merging and all of resource parsing,
merging, and validation except for R class
generation, all in one action. Add class to wrap
the intermediate output of this action. It can
trigger R class generation to create a full
ValidatedAndroidResources object.  RELNOTES: none
PiperOrigin-RevId: 193350591
",528704,4752,217142,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1249","bazelbuild/bazel","96fcc45372fc020deef0914ce4041ba54d7e9afb",2,"2018-04-18 15:01:33-07:00","Makes ApkActionsBuilder honor
--nobuild_runfile_manifests.  PiperOrigin-RevId:
193422658
",528875,4751,217148,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1250","bazelbuild/bazel","913b66c552a6e6b6c4bb496d4ccfd8f3fd518e7c",2,"2018-04-19 10:43:53-07:00","Logging the spawn graph on demand. First step on
#4891.  This is a very heavy and slow option by
design. It will be enabled only when a user wants
to debug their build, most frequently to compare
the step-by-step results of two builds.  TESTED:
manually on various rules, including directories.
RELNOTES: None PiperOrigin-RevId: 193539034
",529345,4756,217298,"olaola","olaola@google.com","Copybara-Service","copybara-piper@google.com"
"1251","bazelbuild/bazel","1673cf67fc8be563ff3541795c42c44de1f70705",2,"2018-04-19 11:40:16-07:00","Introduce PackageErrorMessageValue  This CL
introduces a new intermediate SkyValue type,
PackageErrorMessageValue, to be used by
RecursivePkgFunction. RecursivePkgValue will now
have a direct dep on PackageErrorMessageValue
rather than PackageValue.  RELNOTES: None
PiperOrigin-RevId: 193549158
",529500,4759,217363,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1252","bazelbuild/bazel","44ae7946052f3a6c4c1042e6b97854fe4c13e626",3,"2018-04-24 00:53:06-07:00","Cleanup LibraryToLinkCollector to properly
distinguish C++ runtimes from dynamic libraries
Term runtime input had 2 meanings in
CppLinkAction: 1) input needed at runtime -
dynamic library 2) input corresponding to the C++
runtime (libstdc++ or libc++)  This confused me
and therefore the code :) This cl cleans this up
to some extent by: * renaming runtimeInput to
runtimesInput, to at least give the reader a
chance to catch the difference :) * treating
runtimesInputs as normal linker inputs, also
downstream in CppLinkAction and LinkCommandLine *
Simplifying LibrariesToLinkCollector by removing
explicit runtimesHandling.  RELNOTES: None
PiperOrigin-RevId: 194046439
",530450,4763,217734,"hlopko","hlopko@google.com","Copybara-Service","copybara-piper@google.com"
"1253","bazelbuild/bazel","b858ade7962ae2c967f224467fc8a59753a7c38b",1,"2018-04-25 03:31:51-07:00","Replace usage of proto class
CToolchain.WithFeatureSet with equivalent
WithFeatureSet class  RELNOTES: None. PiperOrigin-
RevId: 194218956
",531176,4768,217943,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1254","bazelbuild/bazel","936139d1b8bcf75a772d3e988b342c4ec8fd507d",2,"2018-04-25 10:57:31-07:00","Support deferred param files.  Design doc: https:/
/docs.google.com/document/d/1JXqwwVHYosZOgmjN8xrfT
alyhiUYJ99Qe2D0qBcqZ1c  The behaviour is gated on
--defer_param_files (default off) and is
controlled by --min_param_file_size.  This CL adds
support for VirtualActionInputs to
LocalSpawnRunner, and all remote runners already
supports them. The sandboxed runners are not yet
supported, but that can be added in a future CL.
This CL does not add support for spawn runner
using different param file limits. This will
require refactoring of the spawn strategies and
runners to be viable.  RELNOTES: None PiperOrigin-
RevId: 194265291
",531296,4764,217908,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1255","bazelbuild/bazel","425156edd865a554ef33af855dc8e4bd29160607",4,"2018-04-26 04:44:47-07:00","Prepare to abstract away the param file write
action from tests.  Rule authors frequently wants
to make assertions on the parameter files their
rule implementations have created. However, if
they do not explicitly create parameter file write
actions, or if indeed _there aren't_ any parameter
file write actions inserted into the action graph,
the tests will fail.  This CL adds necessary
methods for the migration.  RELNOTES: None
PiperOrigin-RevId: 194379748
",531344,4764,217919,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1256","bazelbuild/bazel","dade44dab4a571acc710f0960a3afda0d7b183b3",4,"2018-04-26 11:42:10-07:00","CppDebugPackageProvider is useful for more than
just C++, so rename it.  RELNOTES: None.
PiperOrigin-RevId: 194429584
",531611,4764,217923,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1257","bazelbuild/bazel","bdd4eb2be39adb92dda0bb91cb6f2a32419e8694",7,"2018-04-30 13:35:22-07:00","Add ability for serialization to inform the
SerializationContext that any remote write should
block on the provided future.  PiperOrigin-RevId:
194836516
",532919,4771,218185,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1258","bazelbuild/bazel","2415cb4ab69ec05d2e7ba15c75a20e2d2da2fc90",1,"2018-05-01 10:32:30-07:00","Use a new pattern for builtin Provider objects
with @SkylarkCallable.  This deprecates the old
NativeProvider pattern. The new pattern is
demonstrated using AppleStaticLibraryInfo.
RELNOTES: None. PiperOrigin-RevId: 194956883
",533414,4776,218359,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1259","bazelbuild/bazel","d61a185de8582d29dda7525bb04d8ffc5be3bd11",1,"2018-05-02 08:17:31-07:00","Clean up code that directly imports nested classes
like Builder, Entry, etc.  PiperOrigin-RevId:
195094385
",533783,4788,218528,"jcater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1260","bazelbuild/bazel","56eb80b11f475a2e5b6e8803aeb3cf2294e329b4",1,"2018-05-02 09:04:10-07:00","Simplify config fragment creation.  Remove all
unnecessesary accesses to ConfigurationEnvironment
and deprecate the accesses that actually need
ConfigurationEnvironment.  For review, check out
ConfigurationFragmentFactory first.  PiperOrigin-
RevId: 195099768
",533760,4788,218540,"gregce","gregce@google.com","Copybara-Service","copybara-piper@google.com"
"1261","bazelbuild/bazel","2ce45a21dbd6891a3b7ec92e4862ee822b7e8dd1",3,"2018-05-02 14:15:37-07:00","Use the in-memory metadata in blaze as the source
of truth for Fileset mappings instead of the
manifest files.  RELNOTES: None PiperOrigin-RevId:
195149880
",533897,4788,218568,"kush","kush@google.com","Copybara-Service","copybara-piper@google.com"
"1262","bazelbuild/bazel","8ac2fb1ff86a8a08d1a53888ae5adf901becd2b9",3,"2018-05-03 03:20:24-07:00","In PackageLookupValue also track the repository
...to distinguish files with the same name that go
through a repository symlink that has changed.
Change-Id:
I611c15ea5a48f4b797a725785165bf5a3aba387f
PiperOrigin-RevId: 195226865
",534068,4789,218611,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-piper@google.com"
"1263","bazelbuild/bazel","ffb0913d9f2bd210717bccb9bdc00b39a6c1ba5f",2,"2018-05-03 07:22:56-07:00","Expose asset merging result in AndroidAssetsInfo
to Skylark  By default, in decoupled asset
processing, merging will not be run. Expose an
artifact so we can force validation as needed.
RELNOTES: none PiperOrigin-RevId: 195248517
",534182,4790,218615,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1264","bazelbuild/bazel","158dda74f4d6d33b88be4ab4c40322eca5f1c2fd",3,"2018-05-03 08:09:09-07:00","Fix up newly discovered bugs in decoupled Android
data processing  - Always generate a symbols file
- the new resource processing pipeline likes
knowing that this is non-null, and it shouldn't
cost much extra to create.  - A misleading method
signature (which I made) led to me forgetting
about   Proguard artifacts. Properly propogate
them into the ResourceApk object.  - Don't get
Aapt version directly from AndroidConfiguration -
there's some   additional logic in
AndroidAaptVersion not exposed elsewhere  - Split
library tests that expect resources and assets to
be processed together   to have a new version
where they're processed seperately.  - Tests use
ValidatedAndroidData interface rather than
ResourceContainer object  - Properly move some
LocalTest magic around resource JAR out of the old
pipeline only, as it should apply to both old and
new pipelines.  - Processing action defaults to
empty resource and asset deps rather than null
RELNOTES: none PiperOrigin-RevId: 195253161
",534414,4790,218617,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1265","bazelbuild/bazel","3851667a8454d891eb031c00fe6d07244b6e606d",4,"2018-05-03 09:50:44-07:00","Expose merge_assets method to skylark  RELNOTES:
none PiperOrigin-RevId: 195266230
",534591,4791,218636,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1266","bazelbuild/bazel","1a48c210d8b6f1261fb52a32dc8f3705e7f9f87c",4,"2018-05-07 13:18:48-07:00","Make Aar provider into NativeInfo  This provider
needs to be the new type so we can expose Aar
information in Skylark  RELNOTES: none
PiperOrigin-RevId: 195710606
",535209,4799,218747,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1267","bazelbuild/bazel","ee3cc87ca8382c9eda37012f7fc470326aad1521",1,"2018-05-07 15:28:53-07:00","Flag indirect dependencies in ImportDepsChecker
tool  PiperOrigin-RevId: 195732395
",535519,4799,218763,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1268","bazelbuild/bazel","b1dd4e3ad80cd978ed6c86c67fac43f6e0b153b1",2,"2018-05-09 08:23:31-07:00","Adds an action-scoped filesystem.  PiperOrigin-
RevId: 195973862
",536084,4798,218821,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1269","bazelbuild/bazel","7cddb57365f7d2c0c1ef8d184db3bbf40228c6c2",3,"2018-05-09 11:46:28-07:00","Expose process_test_data (for android_test) to
Skylark  Explicitly work with rele attributes at
(or closer to) the top level rather than deep in
the code.  RELNOTES: none PiperOrigin-RevId:
196004542
",536361,4798,218863,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1270","bazelbuild/bazel","c53e4579e19505f3cf10f690115b73b2050c4dde",1,"2018-05-10 07:00:43-07:00","Only include generated resources when pseudo
locales are asked for.  CompileResources: generate
pseudo locales into a separate compiled resource
file when the pseudo locale flag is true and the
locale is default (e.g. absent). The generated
resources must be first in the returned list of
compiled resource paths. This allows the user to
define custom values to the pseudo locales (which,
for some obscure reason, is accepted as a
reasonable practice by aapt{,2})
AndroidResourceOutputs: record the type of
compiled resource in the comment field of the zip
entry for fast comparison. ResourceLinker: only
include the generated resources when the pseudo
locale is explicitly asked for. It's important to
note that the ordering for compiled resources in
the zip goes <generated>...<normal>...<default>.
This means the default locale will overwrite the
generated locale values. Annoying, but necessary,
as that is current order before introducing this
cl.  RELNOTES:None PiperOrigin-RevId: 196111843
",536611,4798,218899,"corysmith","corysmith@google.com","Copybara-Service","copybara-piper@google.com"
"1271","bazelbuild/bazel","f9e7529908149e0511cc666c8fed879a50dbaea8",4,"2018-05-10 10:28:10-07:00","Create top-level android data provider  This
provider wraps the other android data providers,
as well as artifacts that should only be made
available for top-level Android targets.  This
provider is required for some output (such as
final data APK) to be exposed to Skylark, and also
makes it easy to pass information from
android_binary data processing to postprocessing
actions, most notably resource shrinking (next
reviews).  RELNOTES: none PiperOrigin-RevId:
196135042
",536627,4801,218939,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1272","bazelbuild/bazel","4926eaf573589d063544b48462544b556c5b408e",2,"2018-05-11 10:11:44-07:00","Allow java_toolchain.header_compiler to be an
arbitrary executable  RELNOTES: Allow
java_toolchain.header_compiler to be an arbitrary
executable PiperOrigin-RevId: 196270007
",537274,4801,219001,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1273","bazelbuild/bazel","747f0355f8149bcb18c818069dabec18579d0098",19,"2018-05-14 09:30:17-07:00","Extract logic for dealing with CROSSTOOL values
and build variables into separate class  RELNOTES:
None. PiperOrigin-RevId: 196517537
",537762,4809,219151,"rosica","rosica@google.com","Copybara-Service","copybara-piper@google.com"
"1274","bazelbuild/bazel","238079669ec280a972adf68ee987c5d407e15b26",3,"2018-05-16 10:07:56-07:00","Create {Un}ManagedBuildEventServiceGrpcClient to
allow customization of the channel used to connect
with BES.  RELNOTES: none. PiperOrigin-RevId:
196845127
",537997,4817,219308,"lpino","lpino@google.com","Copybara-Service","copybara-piper@google.com"
"1275","bazelbuild/bazel","cf2f494b2a7b023c88fe12b8fa54f447577a30ca",1,"2018-05-18 05:19:37-07:00","Add support of empty target to LateBoundAlias.
RELNOTES:none PiperOrigin-RevId: 197132230
",538815,4828,219550,"dbabkin","dbabkin@google.com","Copybara-Service","copybara-piper@google.com"
"1276","bazelbuild/bazel","19b4377b3f99222dea874376aa5fc342b43f42bf",2,"2018-05-18 11:45:44-07:00","Move various visitor classes into their own
classes. ParallelSkyQueryUtils is currently quite
large and hard to navigate. Also, rename
AbstractRdepsVisitor to AbstractEdgeVisitor as
there is nothing specific about rdeps involved.
PiperOrigin-RevId: 197177966
",539137,4837,219697,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1277","bazelbuild/bazel","06e43f8b56ca50d7b87c7963d2251d1c72c00977",3,"2018-05-22 08:38:40-07:00","Pass AndroidDataContext through manifest
processing methods  Manifest processing methods
are particularly messy for this migration, since
the old ApplicationManifest class is still around.
Anyway, pass around AndroidDataContext instead of
RuleContext everywhere we can.  Note that the
built-in expander does not seem able to be
modified to support decoupling attributes and
other information, and thus really can't be done
once we get rid of RuleContext. Instead, for
Skylark rules, document that expansion must happen
outside of the Android data Skylark method calls
(for example, for manifest_values and
nocompress_extensions).  RELNOTES: none
PiperOrigin-RevId: 197567541
",539703,4842,219695,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1278","bazelbuild/bazel","88b58112a0379732f052467b51bd868270e46bc7",6,"2018-05-22 10:29:28-07:00","Add additional methods to BusyBoxActionBuilder
Many of the Busybox action building classes rely
heavily on RuleContext. While we're migrating them
to AndroidDataContext, we may as well also move
them to use the BusyBoxAxtionBuilder, which
removes a lot of boilerplate and makes bad
practices (like collapsing NestedSets) harder to
do by accident. The BusyBoxActionBuilder needs
some more methods to cover all the behavior seen
in various action builders, so update it in one
change now rather than scattering these changes
across many different reviews.  RELNOTES: none
PiperOrigin-RevId: 197584157
",539901,4842,219764,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1279","bazelbuild/bazel","28cc833b50d55051ac087a5362b8c14cb67893e8",1,"2018-05-22 14:00:22-07:00","Migrate JavaInfo's provider to use the new
provider pattern.  This dramatically improves
documentation generation for JavaInfo and it makes
it far more maintainable and extensible going
forward.  RELNOTES: None. PiperOrigin-RevId:
197619040
",539840,4843,219761,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1280","bazelbuild/bazel","1bfba70e22b1a4fbcd580cfc7ed0ca0c1b4ece67",1,"2018-05-22 16:06:50-07:00","Get Target out of TargetParsingCompleteEvent.
Makes it easier to serialize Events.  PiperOrigin-
RevId: 197640007
",539869,4843,219757,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1281","bazelbuild/bazel","5bd2365d342ad1766e037b7dbe734f4d4e510da6",6,"2018-05-22 17:04:00-07:00","Get ConfiguredTargetAndData out of
TargetCompleteEvent.  Having it in there makes
serializing events harder.  PiperOrigin-RevId:
197648233
",539907,4843,219758,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1282","bazelbuild/bazel","4089f8b965bfaabb49764f20d66fc67969e4ec37",2,"2018-05-22 20:08:41-07:00","Add events and get rid of ErrorInfoEncoder. Clean
up some signatures and visibility in Skyframe
classes.  PiperOrigin-RevId: 197665817
",539909,4843,219753,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1283","bazelbuild/bazel","6192b8c8eb5f9164153ad63dbb99444551ba50a1",1,"2018-05-24 02:40:42-07:00","Refactor analysis failure reporting, report
loading failures  Split the AnalysisFailureEvent
into a legacy and a new variant; always post an
AnalysisFailureEvent, even if the legacy variant
is not posted - this gives us some coverage for
loading failures.  PiperOrigin-RevId: 197862257
",540211,4854,219952,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1284","bazelbuild/bazel","bc32493847eb5670ed9fdf472abc3a70b1901999",3,"2018-05-24 09:12:10-07:00","Expose [AndroidAssetsInfo].local_assets,
[AndroidAssetsInfo].local_asset_dir and
[AndroidResourcesInfo].r_txt to Skylark.
RELNOTES: none PiperOrigin-RevId: 197902129
",539851,4851,219800,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1285","bazelbuild/bazel","c2cf1132a75d03cc37888fe8c2b9583c7ce198c5",1,"2018-05-25 11:16:34-07:00","Automated rollback of commit
372fbc2f016157b0331f83a20edad10d4b4cf9f7.  ***
Reason for rollback ***  Roll forward with fix:  I
was assuming that R.txt and symbols files are
always set, but they can be null in some cases
(especially in the old data processing pipeline).
Properly handle them here.  RELNOTES: none
PiperOrigin-RevId: 198075743
",540058,4855,219966,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1286","bazelbuild/bazel","cdf118a607ab179807cd39d0cafdb551859d1cd1",1,"2018-05-28 03:02:06-07:00","Enable --experimental_remote_spawn_cache by
default  - It is now an error to specify the gRPC
remote execution backend in   combination with a
local disk or HTTP-based cache. - It is now an
error to specify both local disk and HTTP-based
caches.  Note that before this CL, enabling the
local disk cache silently disabled remote
execution - we now give an error in that case.
With these combination no longer being accepted,
remote execution being enabled now means that we
only create a RemoteSpawnRunner, and don't provide
a SpawnCache. This is not a semantic change - we
never created both.  In principle, it should be
possible for users to combine local execution with
remote caching for actions that are marked local
or no-remote, and still use remote execution
otherwise. However, Bazel cannot currently express
this combination of execution strategies.
RELNOTES: The --experimental_remote_spawn_cache
flag is now enabled by default, and remote caching
no longer needs --*_strategy=remote flags (it will
fail if they are specified). PiperOrigin-RevId:
198280398
",540714,4884,220443,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1287","bazelbuild/bazel","904a8d63833301f54c7df85bccc56ff67156afc5",7,"2018-05-29 05:17:35-07:00","Refactor root cause reporting in
ConfiguredTargetFunction  We now track Causes
instead of plain Labels, which will allow us to do
better reporting in the future. Add basic tests.
PiperOrigin-RevId: 198380468
",541052,4889,220545,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1288","bazelbuild/bazel","26c86f88be0ddd9d59f4fd3f3afdd769af4ecefc",1,"2018-05-29 06:57:03-07:00","Add a pretty-printer class to Skylark  With the
recording of the results of repository rules (that
eventually will lead to an implementation of the
WORKSPACE.resolved proposal) bazel started writing
out lengthy Skylark values. To make this file more
readable for humans, add a Skylkark printer that
does at least some basic line breaking and
indenting.  Change-Id:
I469d029421df9212b43747509dd17bd6c64da4a8
PiperOrigin-RevId: 198389112
",541102,4889,220552,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-piper@google.com"
"1289","bazelbuild/bazel","6ee1a8184bd2afd21da7c96359d202ad43d32264",1,"2018-05-29 08:05:47-07:00","Move Android data info classes to skylarkbuildapi
Expose all Android data info classes as interfaces
in skylarkbuildapi. Most methods are not exposed
in the interface since they are not exposed in
Skylark. In fact, stop exposing a few methods from
AndroidResourcesInfo that are exposed but
shouldn't be.  RELNOTES: none PiperOrigin-RevId:
198396677
",541242,4897,220684,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1290","bazelbuild/bazel","6d33f2874eb1647526557d291496e78163d94095",6,"2018-05-29 10:29:44-07:00","Use independently passed assets in aapt2 packaging
as well  Much earlier, I made a change that
allowed passing assets without resources to aapt
packaging. Do the same for aapt2 packaging too.
The busybox seems to be expecting compiled
symbols, so compile assets and pass the compiled
version in. (Compiling assets doesn't save any
time, but doesn't cost much either, and means that
we'll eventually be able to phase out the parsed
form entirely. Adapting the Busybox to take parsed
assets would probably work too, but getting the
code to handle it would be really messy.)
RELNOTES: none PiperOrigin-RevId: 198417111
",541333,4896,220673,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1291","bazelbuild/bazel","5ad445b09283ee80dab22a4ba342cb4a72fedb0e",1,"2018-05-30 11:41:14-07:00","Resolve all super classes even if we have found
missing super classes. This is necessary. If we
stop resolving the super classes, then the checker
will complain that some methods are missign. In
fact, these methods exist, but their class is not
resolved due to the existing early-break strategy.
RELNOTES: none PiperOrigin-RevId: 198594008
",541872,4898,220756,"cnsun","cnsun@google.com","Copybara-Service","copybara-piper@google.com"
"1292","bazelbuild/bazel","c3495858f097451e06044778bc806e94e06d6da7",2,"2018-06-04 13:53:22-07:00","Process 'repo_mapping' attribute from WORKSPACE
rules. 'repo_mapping' is a way to remap references
to repositories within an external repository by
another name. This CL only adds the mappings to
the Package object, but it does not actually
enable the reassignments.  Example usage (in a
WORKSPACE file): local_repository(   name = ?a?,
path = ?../a?,   repo_mapping = {?@x? : ?@y?} )
This change also creates a new SkyKey which
represents the mappings. This is to prevent all
packages from depending on the external package,
and instead depending just on the mappings. i.e. a
change to the WORKSPACE file that does not touch
the mappings shouldn't cause a reload of the
package.  RELNOTES:None PiperOrigin-RevId:
199187963
",543264,4936,221385,"dannark","dannark@google.com","Copybara-Service","copybara-piper@google.com"
"1293","bazelbuild/bazel","0eddd293a269469013af673e3b9c4facdd478e4e",2,"2018-06-05 18:12:03-07:00","MetadataProvider now provides ActionInput lookup
by exec path.  Adds a helper class, ActionInputMap
to do this with minimal wrapping overhead.
PiperOrigin-RevId: 199391251
",543906,4938,221575,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1294","bazelbuild/bazel","ccaccb2b277a82f7264567563a02ab133a0f6e6f",1,"2018-06-06 14:32:29-07:00","Let blaze obfuscate manual main_dex_list according
to proguard map.  PiperOrigin-RevId: 199529974
",544001,4938,221586,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1295","bazelbuild/bazel","602cc856051b02328ed56e2af808b829dafecd4b",5,"2018-06-06 20:09:57-07:00","Refactoring: makes the code simpler by deleting
Metadata and InputArtifactData.  (minor) ActionFS
now implements MetadataProvider.getInput
PiperOrigin-RevId: 199575194
",544084,4937,221569,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1296","bazelbuild/bazel","5e893626640351de0f12e36bb14d80af0ff1e036",4,"2018-06-07 14:07:17-07:00","Add an initial skylark debug server
implementation.  Not intending this to be a
complete implementation yet.  Among the things
still to do: - officially add support for
debugging aspects, rules, etc.,   with
corresponding tests. - handle breakpoints at
return statements (an edge case which   bypasses
Eval).  PiperOrigin-RevId: 199692670
",545268,4945,221824,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1297","bazelbuild/bazel","72660e2293d873ab3170891d87d7a564c6a3513f",1,"2018-06-08 08:39:36-07:00","Deletes default implemetation of
MetadataProvider.getInput  Small misc cleanups.
PiperOrigin-RevId: 199797948
",545116,4944,221736,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1298","bazelbuild/bazel","ad34b9a7f3c1b9332eb93a80b0f4bc4499b1d0fa",1,"2018-06-08 10:45:04-07:00","Use unsafe String operations when writing
parameter files.  When a LATIN-1 parameter file is
requested, we can take advantage of the fact that
JDK9 strings are (usually) stored as LATIN-1.  For
UTF-8, we can still optimize for the common case
where a LATIN-1 string contains only ASCII
characters, as these are bit-identical between
UTF-8 and LATIN-1. This would still be expected to
be the vast majority of parameter file contents.
RELNOTES: None PiperOrigin-RevId: 199816430
",545273,4946,221797,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1299","bazelbuild/bazel","3694136dc22d9653c6b58a547be7957668b12818",1,"2018-06-08 16:31:53-07:00","Use Identifiers instead of Strings  The high level
summary of the changes: - use `Identifier` instead
of `name` in `Keyword` and `Parameter`. -
construct `Identifier` through a factory method in
case future interning is desired.  These changes
are in preparation for using `Identifier` instead
of `name` for environment lookups.  Closes #5304.
PiperOrigin-RevId: 199869171
",545571,4946,221747,"Taras Tsugrii","ttsugrii@fb.com","Copybara-Service","copybara-piper@google.com"
"1300","bazelbuild/bazel","e28c0ab84c7967e10cc3cd5333560c54653084bd",1,"2018-06-11 08:25:41-07:00","Implement LcovMerger.  LcovMerger is a tool that
merges all the intermediate lcov tracefiles (with
.dat extension) found under a coverage directory
and prints the merged tracefile to a given output
file.  A custom implementation for merging lcov
tracefiles is needed because the merging
functionality of lcov itself is very slow.
LcovMerger is required to get a single coverage
report (lcov tracefile) from a bazel coverage
command that executes multiple tests.  ATM
LcovMerger is only invoked by
tools/test/collect_coverage.sh that collects and
merges the tracefiles from a single test
invocation. It will also be used from a
CoverageReportAction.  Progress on #5246.
PiperOrigin-RevId: 200054506
",546742,4954,222003,"elenairina","elenairina@google.com","Copybara-Service","copybara-piper@google.com"
"1301","bazelbuild/bazel","159a61134e49c36b7839b22a886809df4e378ee7",1,"2018-06-12 15:34:09-07:00","Rename VariableContext to the more general purpose
QueryExpressionContext and thread it through to
graph traversal functions. Some other light
refactorings as well.  PiperOrigin-RevId:
200292556
",547508,4971,222372,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1302","bazelbuild/bazel","fc83d753cf033f5906565b2eea13fbd8f2bdfb86",1,"2018-06-13 14:57:29-07:00","Pass ActionFS paths through to action-level
FileOutErr for the Action's stdout/stderr.
RELNOTES: None PiperOrigin-RevId: 200459354
",547876,4974,222496,"felly","felly@google.com","Copybara-Service","copybara-piper@google.com"
"1303","bazelbuild/bazel","5eae3409e1b60b803c4a7cdf1dd890af03346b33",1,"2018-06-13 23:07:15-07:00","Serialize lambdas when they are cast to
Serializable.  We could conceivably do some
monkey-patching at server startup to make all
lambdas act Serializable, but one step at a time.
PiperOrigin-RevId: 200509321
",548145,4978,222609,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1304","bazelbuild/bazel","68aa410229cb36ceedc910c803a0aff2db6d027f",2,"2018-06-15 01:40:02-07:00","Add a mechanism for build event protocol events to
upload files  This should be a no-op, mostly
replacing PathConverter with
BuildEventArtifactUploader, since none of the
implementations perform any upload yet.
PiperOrigin-RevId: 200685325
",548632,4986,222777,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1305","bazelbuild/bazel","1ee5e0c716b4c579af0cdd52f76d0d61fedb1231",1,"2018-06-16 16:25:12-07:00","Fix bug in NestedSetStore where racing
deserializations could create multiple futures for
the same fingerprint and add a test showing that
racing serializations can result in duplicate
writes.  PiperOrigin-RevId: 200860099
",547449,4983,222230,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1306","bazelbuild/bazel","e35e8cfabd33e2e35b88d3693083350cf3c9d006",1,"2018-06-18 08:14:01-07:00","Refactoring: uses OutputService for
ActionFileSystem injection  Moves more Action-
oriented from skyframe package, which has become
very unwieldy, to action package. This is needed
to avoid circular dependencies caused when build-
base is needed for skyframe.  PiperOrigin-RevId:
200996982
",547026,4983,222166,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1307","bazelbuild/bazel","9e91f20bb31e44b4be836996ac9d91af61e1e822",1,"2018-06-18 16:16:36-07:00","Remove support for
--discard_actions_after_execution.  The memory
savings from this flag are not worth the
complexity, and it interferes with action
restarting.  RELNOTES: Remove support for
--discard_actions_after_execution. PiperOrigin-
RevId: 201077905
",547233,4982,222177,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1308","bazelbuild/bazel","a0e8aae4b30a23d6a3069c343a47cd56b5ed3809",9,"2018-06-19 15:07:26-07:00","Add new BuildMetrics event to BEP.  To start we
add just a single metric, the number of actions
constructed in the current build.  RELNOTES: None
PiperOrigin-RevId: 201248490
",547571,4985,222211,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1309","bazelbuild/bazel","d0c99bd1738c80389acf7b05d72f07eb6015029b",1,"2018-06-20 07:56:44-07:00","Remove genrule's special handling of the
""toolchains"" attribute.  The general handling
should be fine for this.  PiperOrigin-RevId:
201352916
",547658,4988,222267,"jcater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1310","bazelbuild/bazel","dcd0abc97b8372949b592aae817e5ad12f040ab4",2,"2018-06-21 10:13:53-07:00","Migrate DefaultInfo and its provider to
skylarkbuildapi  RELNOTES: None. PiperOrigin-
RevId: 201544076
",548215,4992,222412,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1311","bazelbuild/bazel","f24479d495df540bae634b5ff2dde3177585c2a3",3,"2018-06-21 11:55:44-07:00","Take into account repository mapping when
processing labels inside BUILD files within
external repositories.  For example: a/BUILD
genrule(   name = ""a"",   srcs = [""@x//:x.txt""],
outs = [""result.txt""],   cmd = ""echo hello >
\$(location result.txt)"" )  If the main workspace
file references that repository with a rule:
local_repository(   name = ""other_repo"",   path =
""../a"",   repo_mapping = {""@x"" : ""@y""} )  Then
when a/BUILD is evaluated, the string ""@x//:x.txt""
will be turned into a Label ""@y//:x.txt""
RELNOTES: None PiperOrigin-RevId: 201562148
",548300,4992,222426,"dannark","dannark@google.com","Copybara-Service","copybara-piper@google.com"
"1312","bazelbuild/bazel","4f547a7ea86df80e4c76145ffdbb0c8b75ba3afa",6,"2018-06-26 03:04:24-07:00","process runner for junit integration test
framework  Closes #5435.  PiperOrigin-RevId:
202100672
",549491,5000,222618,"Irina Chernushina","ichern@google.com","Copybara-Service","copybara-piper@google.com"
"1313","bazelbuild/bazel","4a2002043ed3907223a403e8b8fc66975e516fd8",1,"2018-06-26 11:47:22-07:00","Flatten JavaCompilationAgs into
JavaCompilationArgsProvider  Consolidate the
creation of JavaCompilationArgsProviders, and
avoid explicit handling of the 'direct' and
'recursive' cases in clients. Also add some
higher-level methods to the builder API to support
adding dependencies with dep/export/runtime_dep-
like semantics.  PiperOrigin-RevId: 202166383
",549844,5004,222829,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1314","bazelbuild/bazel","5d85e75601b1c82bbc1358d399afa3e07e87a766",2,"2018-06-26 13:47:28-07:00","Initial check-in of skydoc rewrite.  This skydoc
rewrite uses an actual skylark interpreter with a
faked build API (implementing the actual build API
that Bazel uses).  There's a lot left to do here,
this is a barebones start. For example, this does
not yet handle:   - load() statements   - non-
global build API elements (e.g. apple_common)   -
output of any rule information other than
attribute names   - markdown output format
RELNOTES: None. PiperOrigin-RevId: 202187207
",550329,5018,223115,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1315","bazelbuild/bazel","7bcb8eda43aad9318415c2be0596edfaac52bb9d",1,"2018-06-27 16:25:59-07:00","Handles null value in createAggregatingValue
env.getValues call.  PiperOrigin-RevId: 202389874
",550853,5019,223175,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1316","bazelbuild/bazel","c71157f9a826db25e2588a0147de76e97ff30eb2",1,"2018-06-28 05:38:50-07:00","Expose Skylark API to the C++ toolchain  This is
an implementation of the design at
https://docs.google.com/document/d/1g91BWJITcYw_X-
VxsDC0VgUn5E9g0kRBGoBSpoO41gA/edit>. More thorough
documentation will be sent in a separate cl. The
api was approved at https://docs.google.com/docume
nt/d/1M8JA7kzZnWpLZ3WEX9rp6k2u_nlwE8smsHYgVTSSJ9k/
edit?ts=5b292400#.  Work towards #4571 (only the
docs are missing).  RELNOTES: None. PiperOrigin-
RevId: 202464331
",551768,5020,223203,"hlopko","hlopko@google.com","Copybara-Service","copybara-piper@google.com"
"1317","bazelbuild/bazel","fc6c7425dc86f13d6922254c0efd11eb39b8c215",10,"2018-06-28 10:18:39-07:00","Split common functionality out of
ConfiguredTargetQueryEnvironment.  This will allow
us to reuse the code for the action graph query in
a later CL.  RELNOTES: None PiperOrigin-RevId:
202500176
",551832,5020,223177,"twerth","twerth@google.com","Copybara-Service","copybara-piper@google.com"
"1318","bazelbuild/bazel","a8926b7010f7bbbe6e1d9b558bac88b73be28250",2,"2018-06-28 11:53:36-07:00","Convert directDeps to a map of SkyValues
SkyFunctionEnvironment only cares about
directDeps' values, not other NodeEntry data.
This reduces the space of code which could be
sensitive to nodes which transition from done to
dirty during evaluation.  To prevent check-then-
act races in the refactored code (and only there;
other code will be fixed in future refactorings),
instead of checking deps' isDone() methods before
accessing their value, allow
getValueMaybeWithMetadata to be called when not
done, and have it return null when not done.
(Note that done->dirty node transitions during
evaluation are planned, but not yet possible.)
RELNOTES: None. PiperOrigin-RevId: 202518781
",551853,5020,223191,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1319","bazelbuild/bazel","0541f95e4a03d99bd17d5e56f57cc38f41121e5a",1,"2018-06-28 17:52:05-07:00","Store SkyValues for new deps from the graph intra-
environment  This ensures that if a SkyFunction
read a value (or its absence) for a dep during its
evaluation, subsequent requests for that dep's
value (or its absence) provide the same result.
This does not yet necessarily apply to the process
of collecting events and posts from a node's deps,
which will be considered in a future refactoring.
This CL adds SkyFunctionEnvironment#removeUndoneNe
wlyRequestedDeps because the prior strategy for
removing undone deps for done parents, by re-
requesting the dep's node from the graph and
checking its doneness, could lead to deps being
dropped from parents if those deps transitioned
from done to dirty as the parent completes.  Minor
cleanup to the bubbleErrorInfo field, which is
nullable, and now documented.  (Note that
done->dirty node transitions during evaluation are
planned, but not yet possible.)  RELNOTES: None.
PiperOrigin-RevId: 202577098
",552286,5031,223424,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1320","bazelbuild/bazel","7ba40ccf3c63dccd13f15a0587005e8f413c6cd7",1,"2018-06-29 14:17:53-07:00","Debug server: retrieve nested frame bindings tree
lazily.  TYPE_CHANGE_OK=Proto hasn't yet been used
PiperOrigin-RevId: 202705882
",553047,5051,223814,"brendandouglas","brendandouglas@google.com","Copybara-Service","copybara-piper@google.com"
"1321","bazelbuild/bazel","8ae7a3ba8c68278b362f6c0e5aa127c96f8f6025",1,"2018-06-29 15:43:11-07:00","Refactor TemplateExpansionAction so that various
strategies can be used to implement it.  Also
clarify the behavior of the expand_template API in
the presence of multiple-substitutions.  RELNOTES:
None PiperOrigin-RevId: 202719656
",553127,5055,223852,"kush","kush@google.com","Copybara-Service","copybara-piper@google.com"
"1322","bazelbuild/bazel","b9166943e5dc23f7ce8ef2dce3cb98e5ce26e50b",1,"2018-07-01 19:41:03-07:00","Restart node building if previous dep is dirty,
fix check-then-act races  While initializing the
SkyFunctionEnvironment for a node being built, if
a previously requested dep is found to be not
done, reset and re-enqueue the building node. This
lets the node handle the not-done dep like any
other not-done dep (e.g. by enqueuing it or by
waiting to be signalled by it).  Similarly, while
registering newly requested deps when building a
node yields a value or an error, if a newly
requested dep is found to be not done, return
without completing the node, so that it may be
signalled by the dep (without crashing; done nodes
cannot be signalled).  Also fixes a handful of
remaining check-then-act races during Skyframe
evaluation that were vulnerable to done->dirty
node transitions.  (Note that done->dirty node
transitions during evaluation are planned, but not
yet possible.)  RELNOTES: None. PiperOrigin-RevId:
202886360
",553186,5055,223893,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1323","bazelbuild/bazel","9438d1042df9e70570d245f6bd259acdfbb3455e",2,"2018-07-06 03:06:21-07:00","Create Bazel coverage report action.  Fixes #5246
RELNOTES: None. PiperOrigin-RevId: 203453340
",554209,5063,224073,"elenairina","elenairina@google.com","Copybara-Service","copybara-piper@google.com"
"1324","bazelbuild/bazel","35ff63a50997ca3af603629ee2d9d30b44aae27b",1,"2018-07-09 05:55:40-07:00","bep: introduce BuildEventArtifactUploaderFactory
There can be multiple BuildEventTransports active
at the same time and we need to ensure that each
transport gets its own BuildEventArtifactUploader
as these transports might have different
lifecycles.  We do that by introducing another
level of indirection via the
BuildEventArtifactUploaderFactory. BlazeModules
now register a factory object instead of an
uploader.  In addition, the
BuildEventArtifactUploader gets a shutdown()
method that allows to free any resources
associated with it.  PiperOrigin-RevId: 203752092
",554110,5062,223997,"buchgr","buchgr@google.com","Copybara-Service","copybara-piper@google.com"
"1325","bazelbuild/bazel","e45e92e34854e5d56dd42e15ec4ebe8687d897c3",2,"2018-07-09 11:11:18-07:00","Adds interning to CcToolchainVariables  This
entails adding equality to all VariableValue
subclasses.  PiperOrigin-RevId: 203796225
",554299,5064,224040,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1326","bazelbuild/bazel","fb8332ff6ee990fccc98548e12b200359b3114f8",1,"2018-07-11 12:21:23-07:00","Omit parts of BEP events (like stdout, stderr)
when the associated artifact uploader cannot
upload a particular file.  RELNOTES: None
PiperOrigin-RevId: 204167372
",550093,5055,222653,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1327","bazelbuild/bazel","1a3c6c94921e63f7e55c9167d356d0b6f6abe6cf",7,"2018-07-11 12:43:21-07:00","Cleanup Optional usage  RELNOTES:None PiperOrigin-
RevId: 204170706
",550089,5055,222653,"corysmith","corysmith@google.com","Copybara-Service","copybara-piper@google.com"
"1328","bazelbuild/bazel","e54491e10db727f757f7ac0d50ce1bc76102625b",5,"2018-07-11 16:29:13-07:00","Set the version of a computed node to the max of
its child versions rather than the graph version
when that is feasible.   * It's not feasible when
the computation accesses outside state, i.e. is
non-hermetic, so see below.   * It's also more
complicated (and not worth the trouble) when the
computation is taking place just for the error
status.  Have SkyFunctionName declare whether the
function it corresponds to is hermetic or non-
hermetic. Only non-hermetically-generated
SkyValues can be directly marked changed, and non-
hermetic SkyFunctions have their values saved at
the graph version, not the max of the child
versions. All SkyFunctions are hermetic except for
the ones that can be explicitly dirtied.  A
marked-hermetic SkyFunction that has a transient
error due to filesystem access can be re-evaluated
and get the correct version: if it throws an
IOException at version 1 and then, when re-
evaluated at version 2 with unchanged
dependencies, has a value, the version will be
version 1.  All Skyframe unit tests that were
doing non-hermetic things to nodes need to declare
that those nodes are non-hermetic. I tried to make
the minimal set of changes there, so that we had
good incidental coverage of hermetic+non-hermetic
nodes. Also did some drive-by clean-ups around
that code.  Artifacts are a weird case, since
they're doing untracked filesystem access (for
source directories). Using max(child versions) for
them gives rise to the following correctness bug:
1. do a build at v1 that creates a FileStateValue
for dir/ at v1. Then at v2, add a file to dir/ and
do a build that consumes dir/ as a source
artifact. Now the artifact for dir/ will
(incorrectly) have v1. Then at v1, do that build
again. We'll consume the ""artifact from the
future"". However, this can only have an effect
when using the local action cache, since the
incorrect value of the artifact (the mtime) is
only consumed by the action cache. Bazel is
already broken in this way (incremental builds
don't invalidate directories), so this change
doesn't make things worse.  PiperOrigin-RevId:
204210719
",550456,5058,222799,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1329","bazelbuild/bazel","b50fe8607a94579e30561a7cfb65315e71a50238",3,"2018-07-12 04:01:45-07:00","remote: add a ByteStreamBuildEventArtifactUploader
This change allows local files referenced by the
BEP/BES protocol to be uploaded to a ByteStream
gRPC service.  The ByteStreamUploader is now
implicitly also used by the BES module which has a
different lifecycle than the remote module. We
introduce reference counting to ensure that the
channel is closed after its no longer needed. This
also fixes a bug where we currently leak one
socket per remote build until the Bazel server is
shut down.  RELNOTES: None PiperOrigin-RevId:
204275316
",550965,5061,222895,"buchgr","buchgr@google.com","Copybara-Service","copybara-piper@google.com"
"1330","bazelbuild/bazel","75bc18a6290f9112077884460d61f34bec325814",2,"2018-07-13 00:52:17-07:00","For all top-level artifacts, track the labels that
own them when that is available.  The owning
labels are the labels of the top-level configured
targets that requested this artifact to be built
(there may be many such targets). In cases where
the artifact is added not through a configured
target (build-info artifacts and coverage
artifacts), the label of the artifact's owner is
used.  PiperOrigin-RevId: 204432951
",550812,5061,222878,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1331","bazelbuild/bazel","83ddf681a8c5814283cb0c1d470a4c532f32fae4",9,"2018-07-16 13:51:09-07:00","AndroidIdeInfoProvider exposed to Skylark (as
AndroidIdeInfo).  RELNOTES: None. PiperOrigin-
RevId: 204801047
",551915,5066,222985,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1332","bazelbuild/bazel","ddebc72255212c808db21d146078b3b3f5897038",2,"2018-07-17 12:22:24-07:00","Move platform lookup to new dedicated helper
class.  Change-Id:
I2195a3f7d60e9835bc00d6f151ea91271fdccf6f
PiperOrigin-RevId: 204954233
",552898,5074,223132,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1333","bazelbuild/bazel","dfce7407e6922ca5e070c348ad72a1917a54da82",4,"2018-07-17 13:23:44-07:00","Move constraint value lookup to a new utility
function.  Change-Id:
I13645199a21991b1458264f9d9ac2db2736066b2
PiperOrigin-RevId: 204963740
",553072,5076,223180,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1334","bazelbuild/bazel","4d10250291a813302de64151be3b22d57e94749d",6,"2018-07-17 15:15:02-07:00","Expose AndroidSdkProvider to Skylark (as
AndroidSdkInfo).  RELNOTES: None. PiperOrigin-
RevId: 204983634
",553448,5078,223215,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1335","bazelbuild/bazel","ceafeaef5977d0671c44c86864b9a4b2b0e5ee04",1,"2018-07-17 16:15:13-07:00","Move target pattern work to new util class
Change-Id:
Ib1a29a927fa6fd3f49e03efa3b73e1547df6cacd
PiperOrigin-RevId: 204993474
",553459,5079,223236,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1336","bazelbuild/bazel","a1a57a519d49fcbda35f3df0e68e04ba09db3362",7,"2018-07-18 05:34:13-07:00","Add aquery as proper command to Bazel.  RELNOTES:
Add aquery command to get analysis time
information about the action graph. PiperOrigin-
RevId: 205064145
",554253,5092,223513,"twerth","twerth@google.com","Copybara-Service","copybara-piper@google.com"
"1337","bazelbuild/bazel","6c399d642d3451d6cd22009118f64f50ccaefd6a",5,"2018-07-18 15:55:59-07:00","Introduce --strict_fileset_output which treats all
output Artifacts encountered in a Fileset as a
regular file.  PiperOrigin-RevId: 205152271
",554101,5092,223512,"felly","felly@google.com","Copybara-Service","copybara-piper@google.com"
"1338","bazelbuild/bazel","13445c6d2f1139232923326eaf696b0513570a86",2,"2018-07-17 12:01:12-04:00","Update the ResourceUsageAnalyzer with the latest
bug fixes.  Expose methods to enable shrinking
resources via aapt2 proto.  Change-Id:
I2379c81ea3573ac2314f0d3e8d638b53028f7949
",554044,5091,223416,"corysmith@google.com","corysmith@google.com","Chris Parsons","cparsons@rodete-desktop-imager.corp.google.com"
"1339","bazelbuild/bazel","24d3a01b53a603059091a690e0bddb20ef5fbc98",2,"2018-07-25 10:39:40-07:00","Support optional repository verification  Add an
option to provide a file with a resolved value,
that will be used to verify that the repositories
mentioned in this file produce a correct directory
tree.  RELNOTES: newly added options
--experimental_repository_hash_file and
--experimental_verify_repository_rules allow to
verify for repositories   the directory generated
against pre-recorded hashes. See documentation
for those options.  Work towards #5660.  Change-
Id: I2d8becb188d0fa51e890fb8f6139f321cca14b7b
PiperOrigin-RevId: 206016792
",555913,5104,223636,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-piper@google.com"
"1340","bazelbuild/bazel","be31bb8527a93659fb7540d8f4fc087e3b60411c",2,"2018-07-26 13:37:45-07:00","Modify --subcommands to allow pretty printing the
arguments of a subcommand as a list, rather than
as a single line (i.e., newline delimited rather
than space delimited).  Before:  SUBCOMMAND: # //s
rc/main/java/com/google/devtools/build/lib:string_
util [action 'Building src/main/java/com/google/de
vtools/build/lib/libstring_util.jar (2 source
files) [for host]'] (cd
/tmp/devbazel_output_base/execroot/io_bazel && \
exec env - \     LC_CTYPE=en_US.UTF-8 \
external/embedded_jdk/bin/java
-XX:+UseParallelOldGC -XX:-CompactStrings '--add-
exports=jdk.compiler/com.sun.tools.javac.api=ALL-
UNNAMED' '--add-
exports=jdk.compiler/com.sun.tools.javac.code=ALL-
UNNAMED' '--add-
exports=jdk.compiler/com.sun.tools.javac.comp=ALL-
UNNAMED' '--add-
exports=jdk.compiler/com.sun.tools.javac.file=ALL-
UNNAMED' '--add-
exports=jdk.compiler/com.sun.tools.javac.main=ALL-
UNNAMED' '--add-
exports=jdk.compiler/com.sun.tools.javac.tree=ALL-
UNNAMED' '--add-
exports=jdk.compiler/com.sun.tools.javac.util=ALL-
UNNAMED' '--add-
opens=jdk.compiler/com.sun.tools.javac.file=ALL-
UNNAMED' '--patch-module=java.compiler=external/ba
zel_tools/third_party/java/jdk/langtools/java_comp
iler.jar' '--patch-module=jdk.compiler=external/ba
zel_tools/third_party/java/jdk/langtools/jdk_compi
ler.jar' '--add-opens=java.base/java.nio=ALL-
UNNAMED' -jar external/bazel_tools/tools/jdk/JavaB
uilder_deploy.jar @bazel-out/host/bin/src/main/jav
a/com/google/devtools/build/lib/libstring_util.jar
-2.params)  After:  SUBCOMMAND: # //src/main/java/
com/google/devtools/build/lib:string_util [action
'Building src/main/java/com/google/devtools/build/
lib/libstring_util.jar (2 source files) [for
host]'] (cd
/tmp/devbazel_output_base/execroot/io_bazel && \
exec env - \     LC_CTYPE=en_US.UTF-8 \
external/embedded_jdk/bin/java \
-XX:+UseParallelOldGC \     -XX:-CompactStrings \
'--add-
exports=jdk.compiler/com.sun.tools.javac.api=ALL-
UNNAMED' \     '--add-
exports=jdk.compiler/com.sun.tools.javac.code=ALL-
UNNAMED' \     '--add-
exports=jdk.compiler/com.sun.tools.javac.comp=ALL-
UNNAMED' \     '--add-
exports=jdk.compiler/com.sun.tools.javac.file=ALL-
UNNAMED' \     '--add-
exports=jdk.compiler/com.sun.tools.javac.main=ALL-
UNNAMED' \     '--add-
exports=jdk.compiler/com.sun.tools.javac.tree=ALL-
UNNAMED' \     '--add-
exports=jdk.compiler/com.sun.tools.javac.util=ALL-
UNNAMED' \     '--add-
opens=jdk.compiler/com.sun.tools.javac.file=ALL-
UNNAMED' \     '--patch-module=java.compiler=exter
nal/bazel_tools/third_party/java/jdk/langtools/jav
a_compiler.jar' \     '--patch-module=jdk.compiler
=external/bazel_tools/third_party/java/jdk/langtoo
ls/jdk_compiler.jar' \     '--add-
opens=java.base/java.nio=ALL-UNNAMED' \     -jar \
external/bazel_tools/tools/jdk/JavaBuilder_deploy.
jar \     @bazel-out/host/bin/src/main/java/com/go
ogle/devtools/build/lib/libstring_util.jar-2.param
s)  RELNOTES: --subcommands can now take a
""pretty_print"" value (""--
subcommands=pretty_print"") to print the arguments
of subcommands as a list for easier reading.
PiperOrigin-RevId: 206213009
",554545,5055,220890,"ahumesky","ahumesky@google.com","Copybara-Service","copybara-piper@google.com"
"1341","bazelbuild/bazel","008e5f8d80dcf2c1eb8c152684d222c95a402d19",10,"2018-07-30 07:48:47-07:00","Add manifestProtoOutput produced during Java
compilation to the OutputJar so that it can be
accessed in Skylark. One example where this is
used is in Android IDL processing where the
manifestProtoOutput is used to split out the
Android IDL generated Java classes from the
overarching outputJar produced by the
android_library rule.  RELNOTES: none PiperOrigin-
RevId: 206580880
",554946,5056,221018,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1342","bazelbuild/bazel","3f87d1638f931d08fac0f675ad8783af8b5ce0d9",1,"2018-07-30 14:59:43-07:00","Make explicit the contract of ConfiguredTarget
builders returning null when there are rule
errors.  RELNOTES: None. PiperOrigin-RevId:
206652580
",555298,5063,221157,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1343","bazelbuild/bazel","8fe0f45852a620a078013310989396caed273342",4,"2018-07-31 08:30:55-07:00","Add apk converted to proto and all attributes from
CompiledResources to ResourcesZip. Add new proto
format for tool attributes stored in the
AndroidDataXml for storing them in the
resources.zip.  RELNOTES:None PiperOrigin-RevId:
206765679
",555627,5065,221191,"corysmith","corysmith@google.com","Copybara-Service","copybara-piper@google.com"
"1344","bazelbuild/bazel","36fbbde3a5a0e570ba55ea1e7d4dc3b26b135a20",1,"2018-08-02 05:16:00-07:00","Add a flag to evaluate the top level transitions
in Skyframe  This adds a new
PrepareAnalysisPhaseFunction, which started out as
a copy of some existing code from
SkyframeExecutor, BuildView, AnalysisPhaseRunner,
AnalysisUtils, and ConfigurationResolver, which
was then modified to work inside Skyframe.  Most
of our tests already work with the new code,
except for some of the tests related to
configuration trimming in combination with
dependency cycles. The reason for this is that we
can only recover from dependency cycles at the end
of a Skyframe invocation, but never inside a
Skyframe invocation. The new code therefore cannot
return partial results like the old code.  This
seems to make null builds a bit faster. In my
testing, I saw null build times for a single test
target go from ~50ms to ~40ms. This is probably
due to slightly better caching - it seems that
computing the configuration transitions and top-
level targets is non-negligible, even if there's
only a single top-level configuration for a single
top-level target.  This might be an even bigger
win if there are a lot of top-level targets and
configurations.  PiperOrigin-RevId: 207083192
",556937,5071,221499,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1345","bazelbuild/bazel","272c93ce4faece38e7f95508393d1dc15bf4b031",4,"2018-08-02 11:16:06-07:00","Expose AndroidResourceUsageAnalyzer methods to
enable proto-based resource shrinking without tool
attributes.  RELNOTES: PiperOrigin-RevId:
207132534
",557530,5074,221593,"corysmith","corysmith@google.com","Copybara-Service","copybara-piper@google.com"
"1346","bazelbuild/bazel","172d36dfe19f4ddab275ef7116525aa67c3e9877",6,"2018-08-03 09:05:05-07:00","Introduce a new file-based logging handler for
Bazel.  It provides a number of features that we
want and whose combination cannot be accomplished
using the standard FileHandler: * Using a
different filename per server process, by putting
a timestamp and   process ID in the filename. This
means Bazel will no longer overwrite its   log
when the server is restarted, making it easier for
developers and   maintainers to diagnose issues. *
Putting the hostname and username in the filename
(useful when running on a   shared network
filesystem). * Automatically setting a symlink to
the latest log file, ensuring that the   latest
log can still be found under the usual Bazel
server log path. * Providing an API for getting
the filename of the current log file, for use   by
Bazel itself. * Cleaning up old log files when
their total size exceeds a set limit.  This commit
only introduces the handler; its usage in Bazel
will be enabled by a follow-up commit.  RELNOTES:
None. PiperOrigin-RevId: 207274587
",558464,5077,221922,"arostovtsev","arostovtsev@google.com","Copybara-Service","copybara-piper@google.com"
"1347","bazelbuild/bazel","0cb8590de83b9250eee198a3f82078aad74f42b5",1,"2018-08-03 15:20:44-07:00","Reduce and centralize databinding context
instances. Due to some of the vagaries of skylark
and multiple entry points, the databinding context
is currently updated by the parse action.
RELNOTES: None PiperOrigin-RevId: 207333111
",558715,5078,221935,"corysmith","corysmith@google.com","Copybara-Service","copybara-piper@google.com"
"1348","bazelbuild/bazel","25f112e0eba147f14ac51736c41ced3d6b284b57",2,"2018-08-08 09:52:27-07:00","Remove ValidatedAndroidData interface  Now that
ValidatedAndroidResources is the only
implementation, we can just use that instead.
RELNOTES: none PiperOrigin-RevId: 207900844
",557836,5071,221635,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1349","bazelbuild/bazel","f2a07a7336445b9b427c144c95663c2f2649a307",1,"2018-08-08 10:43:59-07:00","Improve error messaging for constraints
violations.  1) Break up dense lines with clearer
pretty-printing. 2) When a violation happens
because of a select(), mention    both the target
with the select (as before) *and*    the dep that
the select() chose. 3) Integrate this messaging
into --target_environment violations,    which
currently provide no info about the root cause.
Examples:  -------------------------------------
select() + compatible_with violation:
------------------------------------- Before:
ERROR: /workspace/testapp/BUILD:41:1: in cc_binary
rule //testapp:top: the current command-line flags
disqualify all supported environments because of
incompatible select() paths:  environment:
//constraints:p removed by: //testapp:midlib
(/workspace/testapp/BUILD:28:1)  After:   ERROR:
/workspace/testapp/BUILD:41:1: in cc_binary rule
//testapp:top: the current command line flags
disqualify all supported environments because of
incompatible select() paths:      environment:
//constraints:p       removed by: //testapp:midlib
(/workspace/testapp/BUILD:28:1)       which has a
select() that chooses dep: //testapp:glib
which lacks: //constraints:p.
------------------------------------- select() +
--target_environment=//constraints:p violation:
------------------------------------- Before:
ERROR: This is a restricted-environment build.
- //testapp:top does not support required
environment //constraints:p  After:   ERROR: This
is a restricted-environment build.
//testapp:top does not support:     environment:
//constraints:p       removed by: //testapp:midlib
(/workspace/testapp/BUILD:28:1)       which has a
select() that chooses dep: //testapp:g       which
lacks: //constraints:p  Fixes: #5795 PiperOrigin-
RevId: 207910308
",558077,5071,221674,"gregce","gregce@google.com","Copybara-Service","copybara-piper@google.com"
"1350","bazelbuild/bazel","8264972b4aa708710653e02da842902040ffabf7",5,"2018-08-08 11:01:16-07:00","Remove ApplicationManifest  This class just
contains methods used elsewhere; move them to
appropriate places (generally AndroidManifest or
StampedAndroidManifest).  Also, somewhat reduce
code duplication by having more stuff use the
existing AndroidManifest.from() method, which
automatically handles unspecified manifests and
packages.  RELNOTES: none PiperOrigin-RevId:
207913410
",558020,5070,221656,"asteinb","asteinb@google.com","Copybara-Service","copybara-piper@google.com"
"1351","bazelbuild/bazel","bddc514c24e696fcc61df68eae50bc4963d0a4ad",5,"2018-08-08 13:10:36-07:00","In AbstractSkyFunctionEnvironment, don't check for
filtered exceptions in the common case of no
exceptions. We were already mostly tracking
missing dependencies in the subclasses, so there's
no need to check for missing dependencies here.
PiperOrigin-RevId: 207934220
",558037,5070,221667,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1352","bazelbuild/bazel","39974a43abdd32e3a1acbc7da945b08da9983e4e",5,"2018-08-09 14:28:14-07:00","Allow skyframe-aware actions to pass partial
results through ActionExecutionContext. Remove
FilesetProvider.  PiperOrigin-RevId: 208111251
",557841,5067,221638,"felly","felly@google.com","Copybara-Service","copybara-piper@google.com"
"1353","bazelbuild/bazel","44e267980fffd6b0aaee49831fc83441e2000082",2,"2018-08-10 09:53:12-07:00","Combine prefix event and payload stdout/stderr
...in a single event instead of relying on the
synchronisation on the reporter. In this way, it
will be possible to focus on output of errors, and
also to deduplicate warnings.  Change-Id:
I9669e8497ca6e22a01f3e285ec9ee42c1ecf3fb5
PiperOrigin-RevId: 208223882
",558398,5070,221775,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-piper@google.com"
"1354","bazelbuild/bazel","9efbc25845c5ec4e6eece8540079fb33669e39e5",1,"2018-08-10 11:51:20-07:00","Do not crash when attempting to upload a tree
artifact.  These show up as directories. Filter
these out and return null from the path converter,
which should cause omission of those files from
any build events.  RELNOTES: None PiperOrigin-
RevId: 208244910
",558302,5070,221753,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1355","bazelbuild/bazel","5276be608c43fa37706903c1d9301403f814985e",3,"2018-08-11 13:33:30-07:00","Use NestedSets to store topLevelModules and
discoveredModules. Also improve
computeTransitivelyUsedModules to return early on
missing values instead of starting to create
datastructures.  RELNOTES: None. PiperOrigin-
RevId: 208351193
",558364,5070,221772,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1356","bazelbuild/bazel","5d46f327041ade0a6314ba0859baef919730c796",2,"2018-08-13 04:00:32-07:00","bazel: handle proto_src_root when dealing with
proto includes, generated files and C++ headers
This change completes the handling of
proto_src_root when it comes to inclusion of
protos, generating the proto files in the right
place and adding the generated headers to the
include paths.  WANT_LGTM=elenairina RELNOTES:
None. PiperOrigin-RevId: 208457740
",558402,5070,221798,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1357","bazelbuild/bazel","9b9904aa3c97f9f2aa72a23d928770e0a141c983",1,"2018-08-13 13:03:01-07:00","Correctly manage the ProtoApk lifecycle by
ensuring it is closed when finished. Move finding
used resources to ProtoResourceUsageAnalyzer for
correctness and memory improvements. New report
format: now records the kept resource along with
the resource that keep it, as well maintaining the
root status for each resource.   Example line:
{number/foo[isRoot: false] = 0x07f...} =>
[{array/foos[isRoot: true] = 0x...}...]  RELNOTES:
None PiperOrigin-RevId: 208529350
",558668,5074,221919,"corysmith","corysmith@google.com","Copybara-Service","copybara-piper@google.com"
"1358","bazelbuild/bazel","6ae05b419922193c4c253e51c9a5e483e4f947fa",2,"2018-08-13 16:13:42-07:00","Order Skyframe evaluations in a priority queue,
with all children of a given node having the same
priority, later enqueueings having higher
priority, re-enqueued nodes having highest
priority, and new root nodes having lowest
priority. Experimentally, this can save
significant RAM (1.4G in some builds!) while not
affecting speed.  Also do a semi-drive-by deleting
ExecutorFactory parameter to AbstractQueueVisitor,
since it was always
AbstractQueueVisitor.EXECUTOR_FACTORY.
PiperOrigin-RevId: 208560889
",558768,5073,221998,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1359","bazelbuild/bazel","7574d84e61086b5835a2b2cc003ca72fcfcf4fe4",1,"2018-08-14 21:38:51-07:00","Filter out events from analysis when constructing
execution-phase values in Skyframe.  This avoids
some unnecessary iteration over already-emitted
events that can show up in profiles, and allows us
to store execution-phase values a bit more
compactly, since we don't need to carry around
wrapper objects and nested sets everywhere.  This
crucially depends on the fact that we can't build
a target in the execution phase without first
having analyzed it in a separate Skyframe call.
Skyframe normally propagates all events/posts up
the graph because it must be able to emit them if
a user requests a node that only transitively
depends on the node that emitted an event.
However, because we do analysis in a separate
Skyframe call, any warnings/posts associated with
the analysis nodes will be emitted then, and we
don't need to propagate them into execution.
PiperOrigin-RevId: 208767078
",559528,5080,222162,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1360","bazelbuild/bazel","f0aa55d81c7a311efef203bdecf7bca99aaded00",1,"2018-08-16 08:51:06-07:00","Remote API v2 migration.  Major differences
between v1test and v2 that are implemented here: -
Execute call streams Operation updates -
WaitExecution call replaces Watcher API - Action
is no longer part of the Execute request, and must
be uploaded separately - output spec and platform
moved from Action to Command  Also, adding retries
to operations lost on the server, resolving a
TODO.  TESTED=unit tests, LRE, RBE.
TYPE_CHANGE_OK=this is a breaking change by
design, will update proto parsing tool as well
TAG_CHANGE_OK=this way give us flexibility to
update the parsing tool to support both versions
PiperOrigin-RevId: 208990450
",559712,5075,222113,"olaola","olaola@google.com","Copybara-Service","copybara-piper@google.com"
"1361","bazelbuild/bazel","618a0760144a1b78fc41895447df0e03fea558b7",4,"2018-08-17 08:33:52-07:00","Change the name of the OptionsClassProvider class
-> OptionsProvider. This is CL 2/3 in order to add
a <code>getSkylarkOptions()</code> method to
OptionsProvider n?e OptionsClassProvider.  This
renaming is done to better reflect the fact that
the class will be a more general options provider
instead of specifically an options ~class~
provider.  PiperOrigin-RevId: 209153230
",559560,5073,222135,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-piper@google.com"
"1362","bazelbuild/bazel","4ebf6c0529313be09210501aa2f010be1bf8913d",1,"2018-08-17 14:49:36-07:00","Separate Info object semantics from Struct object
semantics.  Info objects are objects that are
created by Provider instances, and Struct objects
are created by calls to struct(). There's no real
reason these two sets of semantics must be bound
together.  This change demonstrates separated
semantics by migrating ObjcProvider to be no
longer a struct. This means that ObjcProvider no
longer has methods to_json() and to_proto(); this
should not be considered a breaking change,
however, because prior to this change, calling
those methods on an ObjcProvider would always
result in a thrown error.  RELNOTES: None.
PiperOrigin-RevId: 209210876
",559735,5076,222298,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1363","bazelbuild/bazel","5631c1f252bc221ad6cd49572e7eccbd62f66152",8,"2018-08-20 06:40:45-07:00","Adding packages to the ResourcesZip.  RELNOTES:
None PiperOrigin-RevId: 209408896
",560029,5080,222467,"corysmith","corysmith@google.com","Copybara-Service","copybara-piper@google.com"
"1364","bazelbuild/bazel","2cb307633907d3c3643623b0f115a8708f86807f",1,"2018-08-20 09:48:05-07:00","Add the (currently unused) ability for
QueryFunctions that are simply filtering some
input argument to be inverted.  PiperOrigin-RevId:
209433690
",560377,5080,222496,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1365","bazelbuild/bazel","42942de1c0eaac155aff23bf786ad80b5a6414be",5,"2018-08-23 13:31:34-07:00","Stop writing the merged resources to xml. Stop
passing the merged xml resources to the resource
shrinker.  RELNOTES: None PiperOrigin-RevId:
209989758
",562989,5091,222658,"corysmith","corysmith@google.com","Copybara-Service","copybara-piper@google.com"
"1366","bazelbuild/bazel","0ac47377980da88c14c3402fe5f30ecb664b5d4b",2,"2018-08-24 05:22:56-07:00","Split resolved hashes computation  ...into a
computation of the Skylark value contained in a
resolved file, and the computation of the expected
hashes from this value. In this way, we can reuse
the code for computing the resolved value for the
(experimental) feature of using a resolved file
instead of a workspace file.  PiperOrigin-RevId:
209150452  Change-Id:
Ib1a77128100d821c4cc3e0a0ba57f65d44e07e97
PiperOrigin-RevId: 210085624
",563245,5094,222693,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-piper@google.com"
"1367","bazelbuild/bazel","b5099a245ced48f3badb43e93766691bc223bf93",2,"2018-08-29 08:48:16-07:00","Deprecate --experimental_java_header_compilation_d
isable_javac_fallback  unconditionally disable
javac fallback for non-API-generating annotation
processors, and remove support for two-tiered
spawns from header compilation actions.
PiperOrigin-RevId: 210728118
",564306,5099,222889,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1368","bazelbuild/bazel","12e27f7b016acf1538b3c14c11bf828ca499fcc0",2,"2018-08-29 13:49:38-07:00","Optimize header compilation for direct-classpath
actions  Add java_toolchain.header_compiler_direct
for an optimized header compiler that only
supports direct-classpath, non-annotation
processing header compilation actions.
PiperOrigin-RevId: 210783139
",564599,5100,222939,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1369","bazelbuild/bazel","c31c8c9c54958b7ac3ac568aa5564ae7d7f4a718",3,"2018-08-29 15:07:59-07:00","Expose a method for fingerprinting a Runfiles
instances.  PiperOrigin-RevId: 210798673
",564661,5100,222966,"felly","felly@google.com","Copybara-Service","copybara-piper@google.com"
"1370","bazelbuild/bazel","fff72a7879c7ed67b635dd8d0571e88e993c566c",1,"2018-08-30 17:42:10-07:00","RELNOTES[NEW]: Add --modify_execution_info, a flag
to customize action execution info.  Execution
info is a map of string key-value pairs used by
certain actions.  The info forms part of the cache
key and is available to the execution platform.
Action types which support execution info include
tests, genrules, skylark actions, c++ build/link
actions, and java compiler actions.  The flag
contains some simple syntax and filtering: each
modifier takes two arguments, a regular expression
and a string value with a required ""+"" or ""-""
prefix.  The regular expression specifies which
actions to apply to based on mnemonic.  The ""-""
prefix indicates that the string value should be
removed from the execution info map; the ""+"" means
it should be added or replaced.  The execution
info items added by this flag all have empty
string values.  The flag applies with tests and
genrules which currently specify execution info
using ""requires-* tags.  For example, if a rule
has tags=[""requires-x""], ""--
modify_execution_info.*=-requires-x"" will remove
it, and ""--modify_execution_info.*=+requires-y""
will add to it.  PiperOrigin-RevId: 211013061
",564950,5103,223019,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1371","bazelbuild/bazel","f89e063584564a090ab64c42fb8d4a253398c36f",1,"2018-08-31 11:32:42-07:00","Annotate ValueWithMetadata#justValue as @Nullable.
PiperOrigin-RevId: 211116899
",564951,5103,223013,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1372","bazelbuild/bazel","52bb22a1f16f8d87628fece187992a48e547c319",1,"2018-09-02 08:39:50-07:00","Skyframe now pulls information about configured
target sources instead of observing it. Deletes
the old listener-based code.  This requires
exposing sources in some interfaces.  PiperOrigin-
RevId: 211273401
",564956,5104,223038,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1373","bazelbuild/bazel","46a6707dade3ca0b940bd9465209b54f53452a3e",1,"2018-09-07 10:52:15-07:00","Expose provider methods to Skylark required for
the migration. This provider will require
additional follow up cls to be able to create it
in Skylark.  RELNOTES: none. PiperOrigin-RevId:
212000560
",558344,5074,221357,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1374","bazelbuild/bazel","2000cfd764cf2b3b0ec5474a5aeed20c6638c9e6",2,"2018-09-07 11:24:30-07:00","Add new PlatformConstraintsApi interface for
accessing constraints for a platform.  Part of
work on default constraint values, #3432.  Closes
#5970.  Change-Id:
I3fedc3ec238acd486bb31fbfd9c73ca650e2b037
PiperOrigin-RevId: 212006827
",558596,5078,221421,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1375","bazelbuild/bazel","a205ed85ce99abad24862e837d7e897a1fd6fe51",2,"2018-09-10 11:52:34-07:00","Rephrase InMemoryFileSystem in terms of error
codes rather than exceptions, enabling better
performance on statIfFound() / statNullable()
calls.  RELNOTES: None PiperOrigin-RevId:
212306308
",558914,5080,221493,"felly","felly@google.com","Copybara-Service","copybara-piper@google.com"
"1376","bazelbuild/bazel","c40b2d4cf8c8034eb6ad3f3c557f297f4cd37d06",4,"2018-09-11 07:59:04-07:00","Add default_constraint_value for
constraint_setting targets.  Part of work on
default constraint values, #3432.  Change-Id:
I80fe6ef852827362737388aeef8d9e65f04563a7  Closes
#6104.  Change-Id:
I80fe6ef852827362737388aeef8d9e65f04563a7
PiperOrigin-RevId: 212451979
",559103,5080,221464,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1377","bazelbuild/bazel","b629238a8af71ae5262e69e423d18cbe8f0687af",1,"2018-09-12 10:16:56-07:00","Have PlatformInfo check for default constraint
values.  Finishes work on default constraint
values, fixes #3432.  Change-Id:
I629f7d669ccccfd50724859502b6114e435c1980  Closes
#6130.  Change-Id:
I629f7d669ccccfd50724859502b6114e435c1980
PiperOrigin-RevId: 212660425
",559576,5086,221592,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1378","bazelbuild/bazel","46e65d1fb236d0eea9d2f8511e7412d98b534fc6",3,"2018-09-13 08:06:38-07:00","Do not rely on CppConfiguration package loading
when selecting toolchain in cc_toolchain  Rather
re-select the toolchain for yourself. The next
step will be to stop relying on CROSSTOOL in the
CppConfiguration. #6072.  RELNOTES: None.
PiperOrigin-RevId: 212813981
",560033,5088,221737,"hlopko","hlopko@google.com","Copybara-Service","copybara-piper@google.com"
"1379","bazelbuild/bazel","35eaec4caae64af9077e7e614edfa62a09c3b0c4",1,"2018-09-14 13:22:44-07:00","Correct according to review comments for initial
CL #209589090, ""Add PythonBlackBoxTest.java,
modify BUILD files to include blackbox package
tests into Windows tests as well.""  PiperOrigin-
RevId: 213032765
",560279,5090,221797,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1380","bazelbuild/bazel","126d16a47da7ad12a3d09f0830b14e0eed4e9efd",1,"2018-09-17 11:47:30-07:00","Batch GenQuery Skyframe lookups and skip totally
unnecessary direct package lookups to get targets
that we only need for their labels anyway.
Tolerate missing lookups as per Skyframe
requirement.  PiperOrigin-RevId: 213310462
",560581,5091,221835,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1381","bazelbuild/bazel","8b7aad41ea5ed3b62573e2e3fc569ef6dbd2848f",3,"2018-09-19 04:05:59-07:00","Remove generics use from critical path classes  -
remove generic types from AggregatedCriticalPath -
remove generic types from CriticalPathComputer -
remove generic types from
AbstractCriticalPathComponent - rename
AbstractCriticalPathComponent to
CriticalPathComponent - add SpawnMetrics, id to
CriticalPathComponent - add SpanwMetrics to
AggregatedCriticalPath - remove
SimpleCriticalPathComponent  PiperOrigin-RevId:
213605615
",560653,5090,221851,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1382","bazelbuild/bazel","f526ed0f4c8c89fbc17f453575c96948242a7ea9",3,"2018-09-20 03:59:54-07:00","Show configured targets summary during analysis
phase.  Developers like to know what's going on
when they are building their targets. Currently,
especially when building complex targets, there is
no update shown on the command line during the
analysis phase when all packages are loaded and
targets are still being configured. Add the number
of configured targets after the number of loaded
packages to show the developer what's happening
during that time.  RELNOTES: Add number of
configured targets to analysis phase status
output. PiperOrigin-RevId: 213786479
",560867,5094,221930,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1383","bazelbuild/bazel","4cba428ddb66ece95bbb210fcb1d124c81a9c45c",2,"2018-09-24 08:44:41-07:00","C++: Makes Java native deps launcher use linking
API.  The CppLinkAction.Context provider from
CcBinary is no longer needed. Only use remaining
is the Python launcher.  RELNOTES:none
PiperOrigin-RevId: 214272741
",560969,5093,221921,"plf","plf@google.com","Copybara-Service","copybara-piper@google.com"
"1384","bazelbuild/bazel","e856d82e50c5b065fd1d42a75b1b895001944034",3,"2018-09-26 16:03:12-07:00","Add super-gross logging to track down mysterious
nonexistent file bug.  PiperOrigin-RevId:
214685897
",561167,5096,221973,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1385","bazelbuild/bazel","b56ba84c6b83ef98753e5b0d46d9c8d01b3d8f54",2,"2018-09-27 18:32:33-07:00","Clean up Package and Package.Builder interface  A
lot of stuff was a lot more exposed than it needed
to be. This reduces the number of ways we can
create, mutate, and generally interact with
packages. This only grabs the low hanging fruit,
there's definitely more.  PiperOrigin-RevId:
214871508
",561685,5098,222009,"michajlo","michajlo@google.com","Copybara-Service","copybara-piper@google.com"
"1386","bazelbuild/bazel","7138b07c622049151506a0d7f9541cbe42b2ae2b",2,"2018-09-28 10:14:11-07:00","Mark nodes to be force-rebuilt during node
restarting  Non-deterministic nodes may evaluate
to different values after being restarted. By
ensuring that the nodes are ""force-rebuilt"" after
a restart, such a situation won't result in a
crash.  Because restarted nodes are no longer
dirtied with isChanged=true, the assertion logic
that ensures that nodes are not dirtied twice with
the same value for isChanged can go back into the
#markDirty method. In other words, this CL
includes a logical rollback of ""Permit marking
dirty/changed a node more than once"".  This also
fixes a race condition bug where a dep which is
restarted by >1 parent could cause a crash if the
dep was inflight when the later restart attempted
to dirty it.  RELNOTES: None. PiperOrigin-RevId:
214954192
",561751,5099,221973,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1387","bazelbuild/bazel","366e948bf2301e5d3d0c065297058703157e66e8",5,"2018-10-02 05:44:00-07:00","Open source the C++ include scanning module
PiperOrigin-RevId: 215373298
",564096,5120,222902,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1388","bazelbuild/bazel","64416ce21f7245c87784d142ae1424a6ce3813a8",7,"2018-10-02 12:46:08-07:00","Make aspects support SkylarkApiProviders.  These
are initialised with a TransitiveInfoCollection,
which aspects do not implement. By fiddling with
the interfaces we can pull out a
ProviderCollection which is sufficient for a
SkylarkApiProvider to operate.  RELNOTES: None
PiperOrigin-RevId: 215441598
",564174,5121,222898,"tomlu","tomlu@google.com","Copybara-Service","copybara-piper@google.com"
"1389","bazelbuild/bazel","dcae7dce5b82c58d730a0480dac92223453c61d8",3,"2018-10-02 12:56:15-07:00","Allow for PrepareDepsOfPattern to optionally load
a test_suite only dependency subgraph. Off by
default.  PiperOrigin-RevId: 215443087
",564363,5125,222967,"shreyax","shreyax@google.com","Copybara-Service","copybara-piper@google.com"
"1390","bazelbuild/bazel","5b6db3fa3c5c69d14cac22175dbbac2bb447a67e",7,"2018-10-03 16:01:37-07:00","Android NDK r18 support  Fixes
https://github.com/bazelbuild/bazel/issues/5585
Changes:  - Remove gnustl and STLport runtime
libraries - Update clang version to 9.0.2 - Remove
support for API levels 14 and 15  Successfully
built Tensorflow targets
`//tensorflow/examples/android:tensorflow_demo`
and `//tensorflow/contrib/lite/examples/android:tf
lite_demo` with `--cxxopt=-std=c++11` at TF
v1.11.0-rc2 with NDK r18.  Closes #6296.
RELNOTES[NEW]: Added support for Android NDK r18.
Change-Id:
Ia42727f0aac47fa8d5993d9f0c5eb37a1bcf9a11
PiperOrigin-RevId: 215645706
",565192,5134,223216,"Jingwen Chen","jingwen@google.com","Copybara-Service","copybara-piper@google.com"
"1391","bazelbuild/bazel","e8d450c4cbae8b733470eee6d816baaaa0162318",1,"2018-10-04 16:01:53-07:00","Create a mode to propagate AnalysisFailureInfo for
rule errors instead of failing a build  This new
functionality is tied to
--experimental_allow_analysis_failures : This
feature is designed to facilitate in-build
(analysis-phase) testing rules.  Progress toward
#6237.  RELNOTES: None. PiperOrigin-RevId:
215820356
",565599,5138,223368,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1392","bazelbuild/bazel","9b3b081ef3d80e2a23087d558228576b4b9c71cd",1,"2018-10-05 16:21:04-07:00","Basic action rewinding test and implementation
Given two genrules, where the 1st produces an
output file which is consumed as an input by the
2nd, if the intermediate file goes missing before
the 2nd genrule has the chance to execute, we'd
like to be able to ""rewind"" the 1st genrule's
action, and make it regenerate its output.  This
CL demonstrates that
ActionExecutionFunction/SkyframeActionExecutor
support the simple case of rewinding actions for a
chain of two genrules.  The action execution node
corresponding to the failed action discovers the
set of Skyframe nodes to restart by evaluating,
inline, the dependencies of artifacts associated
with its lost inputs. The edges it adds while
doing this are deleted when it restarts.  This is
intended as a foundation for future development.
Note that LostInputsExecException is only
constructed in tests. Support for throwing it must
still be added to execution strategies.  Future
changes will add support for other kinds of
actions and artifacts, and put a limit on how
often rewinding is tolerated before failing the
build.  Action rewinding currently depends on
Skyframe node restarting, which is supported only
for evaluations which don't track reverse
dependencies between Skyframe nodes.  RELNOTES:
None. PiperOrigin-RevId: 215984081
",565545,5133,223256,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1393","bazelbuild/bazel","44666dc253bac9064216c6693a0184edfef9ed6d",4,"2018-10-05 17:47:11-07:00","Adds childForDebugging parameter to
NodeEntry.signalDep method.  PiperOrigin-RevId:
215994280
",565550,5133,223257,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1394","bazelbuild/bazel","64823dd90ffc1cbac4fe924abfbee35713083974",4,"2018-10-09 07:23:57-07:00","Querying the remote Capabilities service for
remote execution/cache builds.  - call the
Capabilities API once per command and save the
server capabilities - check the server API version
in order to issue a warning if client uses an
unsupported or deprecated version - check that
server supports execution, if remote execution is
requested, error otherwise - check that server
digest function matches the client, error
otherwise - check that updating action cache is
enabled if requested, error otherwise  Minor
refactoring of the RemoteModule initialization
logic for clarity. I decided to provide the
resulting ServerCapabilities to the remote classes
(e.g. RemoteSpawnRunner) on initialization; a
different way to do this would be to provide them
a handle to the client, and allow lazy fetch. I
initially implemented the latter, but switched to
the former because it is much simpler.  RELNOTES:
query remote server Capabilities (per REAPI v2)
PiperOrigin-RevId: 216353089
",566286,5139,223381,"olaola","olaola@google.com","Copybara-Service","copybara-piper@google.com"
"1395","bazelbuild/bazel","6147ebfc2df588c3c650860e28d58b19e6cd291c",1,"2018-10-09 08:43:49-07:00","Increase visibility of a couple of things.
RELNOTES: None PiperOrigin-RevId: 216362857
",566281,5139,223381,"nharmata","nharmata@google.com","Copybara-Service","copybara-piper@google.com"
"1396","bazelbuild/bazel","241b5fa326b32b6257ad7a41f8596c74b05aca4c",8,"2018-10-10 13:15:52-07:00","Add handling for null values in
PlatformProviderUtils.  Change-Id:
I1d0c3b28cb61b94140de0a3d462cb432a766c09a  Closes
#6334.  Change-Id:
I1d0c3b28cb61b94140de0a3d462cb432a766c09a
PiperOrigin-RevId: 216580928
",566339,5140,223394,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1397","bazelbuild/bazel","5861310e2055de37bfd7762ff3068680b537f730",1,"2018-10-11 15:10:04-07:00","Remove code that's dead because
FileSymlinkException can never get propagated from
ContainingPackageLookupValue.  RELNOTES: None
PiperOrigin-RevId: 216768770
",566358,5142,223407,"nharmata","nharmata@google.com","Copybara-Service","copybara-piper@google.com"
"1398","bazelbuild/bazel","1ca8099fc100d25683e5a7f94a5ad1a184fe2a96",1,"2018-10-11 17:47:22-07:00","Instead of removing relative symlinks from the
entries map, avoid adding them in the first place.
This refactoring will make it easier to push
absolute path reconstitution to later in the
process (after FilesetManifest is constructed) so
that consumers aren't required to care about the
exec root.  RELNOTES: None. PiperOrigin-RevId:
216791274
",566356,5142,223406,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1399","bazelbuild/bazel","65d8c3c523c3ae14474964e5ffed5101f22bab1e",2,"2018-10-12 10:17:47-07:00","Make flags supported by dex sharder tool
configurable RELNOTES: None.  PiperOrigin-RevId:
216881522
",566340,5142,223409,"kmb","kmb@google.com","Copybara-Service","copybara-piper@google.com"
"1400","bazelbuild/bazel","9b796a2967bd1a2cfeab39b3707f3eb8b00f99bd",2,"2018-10-16 09:26:07-07:00","Replace JavaCompileAction with a regular
SpawnAction  PiperOrigin-RevId: 217329815
",566185,5142,223332,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1401","bazelbuild/bazel","6a80f0a4a4c861d8b720e62936d9ee6087419c22",4,"2018-10-16 18:02:53-07:00","Adding GoogleAndroidMigrationSemantics to
AndroidInstrumentationTestRule and AndroidSdkRule.
RELNOTES: none. PiperOrigin-RevId: 217421411
",566467,5147,223419,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1402","bazelbuild/bazel","7bea2fb428d06d0fd7373582bba6eb6e83940c34",1,"2018-10-17 01:21:46-07:00","Miscellaneous cleanups  PiperOrigin-RevId:
217454043
",566468,5147,223422,"cushon","cushon@google.com","Copybara-Service","copybara-piper@google.com"
"1403","bazelbuild/bazel","6f6583c9544b2327dd1994187a65ab8413e855c7",1,"2018-10-18 01:30:19-07:00","Use factory methods for SymlinkAction.  RELNOTES:
None. PiperOrigin-RevId: 217660874
",567140,5158,223770,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1404","bazelbuild/bazel","1779b47f833ead0c9dfd119f4c13a5d1b95a2418",1,"2018-10-18 11:53:10-07:00","Injecting directory creation CL for
FileStateValue.  RELNOTES: None. PiperOrigin-
RevId: 217742024
",567395,5162,223833,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1405","bazelbuild/bazel","1964714fccdc36e6315d392323e76bcb26722f3b",10,"2018-10-19 09:03:25-07:00","Do not try to create log symlink on Windows.
RELNOTES: None. PiperOrigin-RevId: 217877971
",567519,5162,223887,"arostovtsev","arostovtsev@google.com","Copybara-Service","copybara-piper@google.com"
"1406","bazelbuild/bazel","f26d2fb6b2c25ade4443b9b87fe7f6c580956fdf",2,"2018-10-24 13:26:21-07:00","Output the execution platform with other
information when verbose  failures are output.
Fixes #6362.  Change-Id:
Ie2309bf47a0d2d83d68a0cde0b6ae3f81238624f  Closes
#6424.  Change-Id:
I1a0d51dc0ca92a2eb4f228d3ffcd7ddbf79c7af7
PiperOrigin-RevId: 218565224
",567931,5165,224024,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1407","bazelbuild/bazel","9f496f3a9577ce0e973bccf0c8a4a6e12e3db532",2,"2018-10-24 15:08:09-07:00","Handle incorrect sharing of workspace status
action/artifacts:  * Allow SkyKeys to specify the
shareability of their values. This defaults to the
SkyKey#functionName()'s shareability. * Don't
share any actions that depend on the build id,
similar to NotifyOnActionCacheHit actions. In
practice, this means adding in volatile actions.
It was probably a mistake to initially put the
shareability of SkyKeys at the SkyFunctionName
level: since we no longer have generic SkyKey
objects, we could specify this bit on each SkyKey
subclass, not using any more memory than we
currently do.  PiperOrigin-RevId: 218584116
",567953,5166,224044,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1408","bazelbuild/bazel","ef0024b831a71521390dcb837b24b86485e5998d",1,"2018-10-25 04:14:52-07:00","C++: Merges CcCompilationInfo and CcLinkingInfo
into one provider.  The class CcCompilationInfo is
deleted, we keep CcCompilationContext.
CcLinkingInfo will be renamed to CcLinkingContext
in a later CL, but in Skylark we already use the
new name. The new provider is called encapsulating
these two contexts is called CcInfo.
RELNOTES:none PiperOrigin-RevId: 218663647
",567963,5166,224023,"plf","plf@google.com","Copybara-Service","copybara-piper@google.com"
"1409","bazelbuild/bazel","c64421bc35214f0414e4f4226cc953e8c55fa0d2",1,"2018-10-26 00:56:32-07:00","For source directory action inputs, depend on all
files in the subtree  This fixes a number of long-
standing correctness issues where Bazel did not
notice if files within the purview of an action
changed.  Consider this BUILD rule: genrule(
name = ""bad"",   outs = [""ls.txt""],   srcs =
[""dir""],   cmd = ""ls -l test/dir > $@"", )  If
""dir"" is a directory, then Bazel does not notice
changes to files underneath dir, and also does not
give an error message. It only emits a warning
like this: ""WARNING: /path/to/BUILD:1:1: input
'test/dir' to //test:bad is a directory;
dependency checking of directories is unsound""  We
use a startup flag for rollout since the new code
requires additional Skyframe dependencies. Use
like this: bazel
--host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1
build ...  With this change, Bazel assumes that
all the files underneath dir/ are action inputs
(i.e., it implicitly globs all the files) and
reruns the action whenever any of these files
change. The main differences to glob([""dir/**""])
are: - the file names do not have to be valid
labels; the label syntax currently   restricts the
allowed characters to a small subset of UTF-8
(mainly ASCII) - the files cannot be directly
referenced from another package unless they   are
also explicitly mentioned in the package -
globbing happens during execution, not loading;
this can have a significant   effect on
performance for packages that have a lot of globs
/ directory   references - globs are evaluated
eagerly during loading, even if only a   single
rule from that package is needed  This change does
not affect remote execution, which continues to
not allow such inputs, although this could be
changed subsequently.  We may in the future
require that directory references in BUILD files
end with a trailing forward slash ('/') to
indicate this fact to a reader of the BUILD file.
PiperOrigin-RevId: 218817101
",568409,5169,224101,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1410","bazelbuild/bazel","472320ca8ec9e73fd7a52487c8b50d0a191cb1a4",1,"2018-10-29 14:27:00-07:00","Simplify BinTools: There is no need to create a
""_bin"" directory under the execRoot. If running
the binary locally, we can execute from the
install_base directly.  RELNOTES: None
PiperOrigin-RevId: 219193314
",568651,5167,224134,"felly","felly@google.com","Copybara-Service","copybara-piper@google.com"
"1411","bazelbuild/bazel","1b4aa06432ac98505ddcdb5c72b8a8b9105d73fa",3,"2018-10-29 17:00:51-07:00","Allows module-filesystems to virtualize execroot.
PiperOrigin-RevId: 219218894
",568630,5166,224127,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1412","bazelbuild/bazel","566352743315223d9dcb0329bd70559b69db4474",6,"2018-10-30 07:41:56-07:00","Update error messaging for
RegisteredExecutionPlatformsFunction and
RegisteredToolchainsFunction  This will only
report errors with targets that were directly
requested.  Closes #6522.  PiperOrigin-RevId:
219297899
",568707,5166,224135,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1413","bazelbuild/bazel","1f332e0c33ba98e82a5ba32c4e7c298a4ac99eff",2,"2018-10-31 14:20:55-07:00","Allow starlark rules to be build settings.  For
skylark rules that are declared build settings, we
auto-add a nonconfigurable build_setting_default
attribute which must be set on a per target basis.
We also add access to the build setting value via
the rule context object. All of this functionality
is hidden behind the
--experimental_build_setting_api flag which by
default is flipped off.  This includes: - Add a
build_setting parameter to starlark rule
construction. - If a starlark rule sets the
build_setting parameter, auto-add a mandatory
'build_setting_default' attribute of the same
type. - Allow the value of a build setting skylark
rules to be accessed via ctx.build_setting_value.
- Get rid of BuildSettingDescriptor since we don't
need both it and BuildSetting. - Add the
--experimental_build_setting_api flag to
SkylarkSemantics flags.  Work towards issue #5577
PiperOrigin-RevId: 219537101
",569117,5167,223956,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-piper@google.com"
"1414","bazelbuild/bazel","14f8b109b9f987f1b0c69c8cf399326740749382",5,"2018-11-06 05:43:33-08:00","Refactor SkyframeActionExecutor  - avoid
FutureTask; make ActionRunner self-contained -
reorganize the prepare/execute/complete flow  This
is in preparation for making actions async, which
requires that ActionRunner itself becomes async,
which in turn precludes the use of FutureTask and
also requires that the code flow more cleanly
separates pre-execution and post-execution steps.
PiperOrigin-RevId: 220266937
",571690,5187,224700,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1415","bazelbuild/bazel","fb03fc28e0c17181bcac1bdfc57ad52131cc121c",1,"2018-11-09 10:19:08-08:00","Support rewinding when inputs of trees are lost
An action that fails because it depends on a
derived TreeFileArtifact which was lost will now
rewind the appropriate Skyframe nodes.
Previously, rewinding didn't support lost
TreeFileArtifacts which were indirectly depended
on (i.e. when the action directly depended on the
tree artifact, but not directly on the lost file
contained by it).  Also includes a couple of
drive-by improvements to related comments.
RELNOTES: None. PiperOrigin-RevId: 220822879
",572614,5193,224948,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1416","bazelbuild/bazel","68b8b8b813d054b5a4fe5bc8c0b16999dae408a2",2,"2018-11-13 02:02:35-08:00","[Remote] Don't discard metadata attached to
ExecuteResponse's status.  When executing builds
for which input files got removed between
FindMissing() and Execute(), Buildbarn workers
will return FAILED_PRECONDITION errors through
ExecuteResponse's status field. Attached to this
status is a violation entry, indicating that the
failed precondition is due to the absence of a
blob.  This should cause RemoteModule's
RETRIABLE_EXEC_ERRORS to treat this as a retriable
error, causing Bazel to restart the build process
for that action entirely. Unfortunately, it does
not, due to the fact that ExecutionStatusException
currently throws away the metadata. Only the code
and message are preserved.  Same idea as
https://github.com/bazelbuild/bazel/pull/6641,
except does not expose internals, adds a test, and
makes sure the Status proto in the Metadata is the
same one from which the grpc.Status object is
created. Closes #6641.  TESTED=new unit test
RELNOTES: None PiperOrigin-RevId: 221233439
",572974,5193,224967,"Ed Schouten","ed@nuxi.nl","Copybara-Service","copybara-piper@google.com"
"1417","bazelbuild/bazel","5d13aab280a4109dcff1af63b45b5155e779167b",1,"2018-11-14 18:36:48-08:00","Scope the cache lifetimes in NestedSetCache to the
lifetimes of the underlying contents of NestedSet:
either an Object[] or a
ListenableFuture<Object[]>, rather than wrapping
Object[] in a future. This fixes a bug where the
wrapping future goes out of scope, leading us to
not dedup deserialized nested set contents that
are still in memory.  PiperOrigin-RevId: 221551823
",573918,5199,225204,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1418","bazelbuild/bazel","4c7ca32428f6f884371c01411fd82c199f6e5417",3,"2018-11-20 13:22:05-08:00","Support rewinding of inputs in runfiles  An action
that fails because it depends on a generated file
in the action's runfiles will now rewind the
appropriate Skyframe nodes.  Previously the
checkInputs method lost the relationship between
""middleman"" artifacts, used by runfiles and
directly depended on by actions that include
runfiles, to the artifacts they aggregate.  This
CL refactors checkInputs and the ActionInputMap it
populates so that it can be rerun to reestablish
those relationships if the executing action fails
due to lost inputs, without incurring additional
costs in the normal case.  RELNOTES: None.
PiperOrigin-RevId: 222296167
",574844,5208,225374,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1419","bazelbuild/bazel","b6f2ff19727c150cd745cff3d6365eb40935253e",4,"2018-11-21 12:38:23-08:00","Open source DynamicExecutionModule  RELNOTES:
Dynamic execution is now available with
--experimental_spawn_strategy. Dynamic execution
allows a build action to run locally and remotely
simultaneously, and Bazel picks the fastest
action. This provides the best of both worlds:
faster clean builds than pure local builds, and
faster incremental builds than pure remote builds.
PiperOrigin-RevId: 222446721
",575339,5213,225526,"jingwen","jingwen@google.com","Copybara-Service","copybara-piper@google.com"
"1420","bazelbuild/bazel","b83c5f800699a1bbcac11baeab1155d85880d9e4",1,"2018-11-21 14:46:57-08:00","Migrate InstrumentedFilesProvider to Starlark
provider pattern  Progress toward #6241  RELNOTES:
None. PiperOrigin-RevId: 222463226
",575293,5212,225508,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1421","bazelbuild/bazel","d663c4a358bae03bb7ff460a1bfefba80df7fc5b",1,"2018-11-23 05:15:48-08:00","Report progress during query command  Inform on
the event bus, that a query command shows
progress. Also provide information about loading
activity during queries by posting the respective
progress reporter over the event bus.  In this
way, the user is informed on the console about the
packages currently being loaded.  Change-Id:
If72c2aaff5e5ce748ace63f50978841378e1a552
PiperOrigin-RevId: 222615638
",575299,5213,225535,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-piper@google.com"
"1422","bazelbuild/bazel","eb139371c91b48cfd018aa99bdc334c7b2422179",1,"2018-11-23 05:50:25-08:00","C++: Exposes new C++ API to Skylark  This is the
API as described in https://docs.google.com/docume
nt/d/1_irTE1a8aTg8Hhf5mmlEXsFcwOw6-hz3a8FxufCyVKA/
edit  This is a low level API used for rules like
cc_import or for foreign C++ rules. This does not
include the compilation and linking API elements.
This CL introduces the new API in a compatible way
with the old. Several Skylark methods may return
different object types depending on whether we are
using the new or the old API. We figure out
whether we are using the old or the new API from
the parameters that are passed to the functions.
All of this is transparent to the user from
Skylark.  The old API will be deleted once
cc_import and foreign rules C++ have been
migrated. The internal implementation of
CcLinkParams will also be deleted.  RELNOTES:none
PiperOrigin-RevId: 222617935
",575803,5215,225602,"plf","plf@google.com","Copybara-Service","copybara-piper@google.com"
"1423","bazelbuild/bazel","34e2d3f72d30a824257fe3e85b1dc028d62b7ffe",1,"2018-11-23 08:24:01-08:00","Rename ProtoSourcesProvider to ProtoInfo.  It
contains much more than sources now and *Info is
the new naming convention.  RELNOTES: None.
PiperOrigin-RevId: 222628598
",575624,5215,225563,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1424","bazelbuild/bazel","4da459189e6e2aadb0da6979ce17e00f0ae9415c",3,"2018-11-29 08:42:15-08:00","Implement --attempt_to_print_relative_paths in the
old ui.  There's no good reason to not have this
feature in the old ui.  The old flag name
--experimental_ui_attempt_to_print_relative_paths
will still work, and will now work for the old ui
too. We will remove this old flag name in the
future.  RELNOTES: None PiperOrigin-RevId:
223351802
",575760,5213,225353,"nharmata","nharmata@google.com","Copybara-Service","copybara-piper@google.com"
"1425","bazelbuild/bazel","b380dc976474b127cb9c2c3d727866090e694cbd",1,"2018-12-05 13:57:39-08:00","Create SkylarkCallable.useContext and use it
instead of Environment.BazelInfo  This makes the
Starlark interpreter pass a StarlarkContext object
to methods, which, for Bazel, should be a stand-in
replacement for the previous BazelInfo object.  In
a future cleanup, we can move Mutability to
context, and then turn down useEnvironment.
Environment is a bit too powerful an object to be
passing around.  RELNOTES: None. PiperOrigin-
RevId: 224216211
",579933,5302,229134,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1426","bazelbuild/bazel","e7da94faaa3d171bb8487b2ff025d95281afe40a",7,"2018-12-07 12:04:49-08:00","Event suppression for action rewinding  With this
change, certain events will not be emitted during
action execution when lost inputs have been
detected, and actions are getting rewound.
Specifically:  - Events having to do with action
completion (ActionCompletionEvent,
ActionExecutedEvent) are not emitted for an action
that failed due to lost inputs. Other action-
execution-related events, such as
ActionStartedEvent, may be emitted more than once
for a particular action. Now, consumers of those
events support receiving more than one event per
action.  - Events monitoring the progress of
action execution are not emitted for an action,
which was previously successfully evaluated during
a build, which was then rewound because some of
its outputs are missing, during that action's
subsequent evaluations.  Includes a handful of
other drive-by fixes:  Renames
ActionExecutionFunction's ""sharedActionAlreadyRan""
to ""actionAlreadyRan"" because the value can be
true for a non-shared action if the Skyframe
evaluation restarted, due to input discovery,
after the action executed.  Cleans up some
unnecessary modifiers in ExtendedEventHandler.
Fixes unnecessary boxing in
ExperimentalStateTracker.  Ensures that
SkyframeActionExecutor.ActionRunner.call emits an
ActionStartedEvent before emitting an
ActionCompletionEvent.  RELNOTES: None.
PiperOrigin-RevId: 224555573
",580479,5303,229245,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1427","bazelbuild/bazel","5de60f1db3bb9032e860036da4cf867fd41c080c",1,"2018-12-07 17:06:38-08:00","Small refactoring. Implementor decides how to
handle QueryableGraph.prefetchDeps.  PiperOrigin-
RevId: 224601444
",580543,5303,229255,"shahan","shahan@google.com","Copybara-Service","copybara-piper@google.com"
"1428","bazelbuild/bazel","2a38fdbc73530121af9a4b8a2a1cc9a6bc37e240",2,"2018-12-10 08:11:24-08:00","Added rule and function for local_config_platform
repository rule.  Part of #6849.  Closes #6850.
PiperOrigin-RevId: 224814687
",580900,5306,229314,"John Cater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1429","bazelbuild/bazel","a2d4d3d794b02da6e1249415025d5605a504c063",7,"2018-12-10 18:30:08-08:00","Allow NodeEntries to prune their deps based on
fingerprinting the dep group. This is useful in
situations in which the deps themselves are
forbidden from value-based pruning because of
subtle version bugs.  PiperOrigin-RevId: 224922819
",581107,5308,229408,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1430","bazelbuild/bazel","0ecb86d80e878d5b68c4344092a68a878f54194f",1,"2018-12-13 14:58:21-08:00","Do not load the package the file is in when
ModuleEnvironment#getFileFromWorkspace() is
called.  Instead, just locate its BUILD file and
take the appropriate relative path.  RELNOTES:
None. PiperOrigin-RevId: 225441160
",581493,5314,229587,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1431","bazelbuild/bazel","8699929dbcd745f4873ccd9fb3a29c94b25bdcaf",1,"2018-12-13 17:26:20-08:00","Migrate config_feature_flag to be backed by
Starlark build configuration.  This should be a
purely internal refactoring, but it means that
trimming that works for Starlark build settings
would also work for config_feature_flag. (The
reverse is not true yet. But it's possible that if
automatic trimming turns out to be too far out,
manual trimming could be extended to Starlark
build settings.)  RELNOTES: None. PiperOrigin-
RevId: 225464499
",581412,5315,229499,"mstaib","mstaib@google.com","Copybara-Service","copybara-piper@google.com"
"1432","bazelbuild/bazel","e46813103d9b6320918805990a0386dd806d71c9",1,"2018-12-14 17:22:20-08:00","Data Binding 3.4 preparation This CL adds a new
flag
(experimental_android_databinding_updated_args) to
use 3.4 arguments. I also centralized annotation
processor argument generation in a builder to
avoid duplicate code between v1 and v2 contexts.
This still does not enable 3_4 since it does not
work w/o a blaze update.  PiperOrigin-RevId:
225628684
",581678,5316,229557,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1433","bazelbuild/bazel","9d8016eeccc471ffe48fa71b703b2e5ae970be3e",1,"2018-12-17 11:20:39-08:00","BuildEventServiceProtoUtil: set projectId in all
PublishBuildToolEventStreamRequest where one is
available.  RELNOTES: set projectId in all
PublishBuildToolEventStreamRequest PiperOrigin-
RevId: 225858428
",581815,5316,229556,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1434","bazelbuild/bazel","c02badd19b90cbea7899e13a36d49c7c808cdd0e",1,"2018-12-18 15:34:14-08:00","Add support for 'HOST_RAM' and value ranges to
standard ResourceConverter (formerly
CpuThreadsConverter).  Default ResourceConverter
now supports HOST_CPUS, HOST_RAM, and ""auto"" (auto
behavior is passed into the constructor).
RELNOTES: None. PiperOrigin-RevId: 226071503
",581892,5319,229800,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1435","bazelbuild/bazel","e2b31c63f60e997986aaf67e6f0fc9c36cf84614",2,"2018-12-20 07:48:35-08:00","CppToolchainInfo.sysroot should be allowed to
return None.  This makes the implementation match
the documentation.  PiperOrigin-RevId: 226335089
",581924,5316,229741,"jcater","jcater@google.com","Copybara-Service","copybara-piper@google.com"
"1436","bazelbuild/bazel","61020a7069c52cadb013344e7938be544f9d9662",1,"2018-12-20 10:57:43-08:00","Add a BigIntegerFingerprint class to create a fast
non-cryptographcially secure fingerprinting scheme
for ActionExecutionValues.  PiperOrigin-RevId:
226360834
",582132,5317,229780,"mjhalupka","mjhalupka@google.com","Copybara-Service","copybara-piper@google.com"
"1437","bazelbuild/bazel","d71711807853d321ecba894418db8db7c249c798",3,"2018-12-27 07:09:21-08:00","Allow setting supports_embedded_runtimes crosstool
capability using feature
`supports_embedded_runtimes` can now be expressed
using 'static_link_cpp_runtimes' feature (should
be enabled for it to take effect).  This cl allows
toolchain owners to express that toolchain
supports embedded runtimes in the same way as
other crosstool capabilities are expressed.  This
cl is a step towards
https://github.com/bazelbuild/bazel/issues/5883.
Also see the rollout doc here: https://docs.google
.com/document/d/1uv4c1zag6KvdI31qdx8C6jiTognXPQrxg
sUpVefm9fM/edit#.  Flag removing legacy behavior
is https://github.com/bazelbuild/bazel/issues/6861
RELNOTES: None. PiperOrigin-RevId: 227024509
",585086,5331,230299,"hlopko","hlopko@google.com","Copybara-Service","copybara-piper@google.com"
"1438","bazelbuild/bazel","328b7bbd372061b79fdd6193d541443ced6af024",8,"2018-12-27 10:26:08-08:00","Add a mechanism to prohibit select()-ing on some
native flags  The options fragment gets to decide
whether its flags are selectable. This way,
selectability can be guarded by an experimental or
incompatible change flag, provided that it's
declared in the same options fragment as the flag
it's guarding.  Work toward #6583 and #6501.
RELNOTES: None PiperOrigin-RevId: 227040456
",585281,5331,230372,"brandjon","brandjon@google.com","Copybara-Service","copybara-piper@google.com"
"1439","bazelbuild/bazel","8911ba594cce6e4385e084d45a02bb55f19b9f2a",1,"2019-01-02 11:51:03-08:00","Implement #getValueFingerprint for more
ArtifactValues (and equality for some!).
PiperOrigin-RevId: 227556428
",585446,5328,230311,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1440","bazelbuild/bazel","0892b50f8e1f38e5fbec731c27e98106bce58872",3,"2019-01-07 15:37:23-08:00","Pass the java packages of direct dependencies with
databinding to databinding's annotation processor
so that it can distinguish between transitive and
direct BR files.  RELNOTES: None. PiperOrigin-
RevId: 228249266
",585773,5332,230485,"ahumesky","ahumesky@google.com","Copybara-Service","copybara-piper@google.com"
"1441","bazelbuild/bazel","2b36cd3f17993b5f93a2b44bfc5653d08f8f34de",2,"2019-01-11 10:53:50-08:00","Merge instrumentation jar in collect_coverage.sh
TESTED=[]  RELNOTES: None. PiperOrigin-RevId:
228908215
",586136,5318,229727,"elenairina","elenairina@google.com","Copybara-Service","copybara-piper@google.com"
"1442","bazelbuild/bazel","a9e4dbd2d5312f9f9a6a22def95e0148e248fb70",3,"2019-01-14 05:18:21-08:00","C++: Use new API in cc_import native
implementation  The API was already used in the
Starlark implementation of cc_import. This CL
basically copies what is done in Starlark in the
native implementation. We stop using CcLinkParams
in cc_import.  RELNOTES:none PiperOrigin-RevId:
229165412
",585975,5318,229726,"plf","plf@google.com","Copybara-Service","copybara-piper@google.com"
"1443","bazelbuild/bazel","b4ff31bd569dcdc9b5533855c7cab30b6a71280f",3,"2019-01-14 08:29:37-08:00","Loosen visibility of NodeEntrySubject and make
ChainedFunction take an arbitrary Runnable for its
notifying parts, rather than a CountDownLatch.
PiperOrigin-RevId: 229187454
",586035,5318,229725,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1444","bazelbuild/bazel","4654b870766ec93a27dff45cd41a100f4ac6700a",1,"2019-01-16 03:04:11-08:00","Add additional flag to JavaBuilder to signal
compilation with a reduced classpath. Upon
discovering a compilation failure, this will
report that a full classpath compilation is
necessary via the dependency information file.
This enables build systems to do a compilation
with the full classpath separately.  RELNOTES:
None. PiperOrigin-RevId: 229527781
",586652,5320,229848,"Googler","noreply@google.com","Copybara-Service","copybara-piper@google.com"
"1445","bazelbuild/bazel","0629519ad334dbe26742b02b476141b776773164",1,"2019-01-16 09:13:34-08:00","Fix BEP error reporting for CTs w/ deps cycles
Before this change, errors for configured targets
were not correctly reported, in particular if they
depended on a dependency cycle, but also if they
depended on a configured target with an error in a
different configuration.  The reason is that
ConfiguredTargetKey contains a
BuildConfiguration.Key, which does not contain
enough information to construct a
BuildConfiguration EventId (for BEP). We are
passing the set of top-level ConfiguredTargetKeys
to SkyframeBuildView, but not the corresponding
configurations, even though the BuildView has
access to them (that's how it's constructing the
ConfiguredTargetKeys in the first place).  The
ideal fix would be to handle dependency cycle
errors in Skyframe and perform error bubbling (or
something like that) to allow the top level
configuration function to catch and report the
error. However, this is not supported by Skyframe
at this time.  Instead, we pass in a lookup map
that allows recovering the BuildConfiguration
instances corresponding to the top-level
configured targets. In order to save effort in the
common case where there is no analysis error, we
only pass in a memoized supplier.  Alternatives
considered: - call Skyframe to recover the
BuildConfiguration from the key - pass in the
TargetAndConfiguration instances rather than a
lookup map  I don't have any strong reasons to
prefer the present approach over either of the
others.  PiperOrigin-RevId: 229568727
",586536,5317,229813,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1446","bazelbuild/bazel","c67dceca77a93646961fc4bb863826e344fda5e0",4,"2019-01-17 11:24:01-08:00","Move the label -> configured target transformation
to a single place in DependencyResolver.  We do
this instead of doing two passes over most of the
code with resolving labels to targets first, then
targets to configured targets. The goal of this
refactoring is twofold:  1. Make the code slightly
more comprehensible 2. Have a single location in
the code where we can experiment with various
smart ways to avoid the bottleneck whereupon the
packages of *all* direct dependencies need to be
loaded first, and only then can analysis of any
direct dependency (including loading its
transitive closure) can begin.  The next step is
that the single (dependency kind -> label) ->
(attribute -> (label, aspect, configuration))
mapping will be split into two:  1. (dependency
kind -> label) -> (dependency kind -> (label,
aspect, configuration)) 2. (dependency kind ->
(label, aspect, configuration)) -> (attribute ->
(label, aspect, configuration))  where all the
information about the configuration transition
derived from the originating rule will be
reflected in the result of (1) and the remaining
part (the rule configuration transition) will be
reflected in the result of (2).  (it's not as
simple as it looks because we need to do some
error handling based on the type of the target we
depend on, but it *almost* is)  The only
collateral damage is slightly worse error
reporting when a dependency through a visibility=
attribute is not a package group. There isn't a
fundamental reason for that, it's just that I
decided that the additional code branches are not
worth it.  RELNOTES: None. PiperOrigin-RevId:
229785096
",586322,5316,229787,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1447","bazelbuild/bazel","75a422a3750c802093af9bfde41e7318086a7c28",1,"2019-01-17 14:52:49-08:00","Merge uploader instances to avoid duplicating
uploads of the same file within a build.
RELNOTES: None PiperOrigin-RevId: 229822830
",586399,5316,229775,"felly","felly@google.com","Copybara-Service","copybara-piper@google.com"
"1448","bazelbuild/bazel","716e4e3e1412d9e7ba1dbb29e382251bfe5ffb4c",1,"2019-01-21 07:59:23-08:00","remote: refactor the code to make dead code
obvious  ensureInputsPresent(...) is only used
during remote execution. The GrpcRemoteCache is
the only supported remote cache for remote
execution. This change makes this obvious through
types.  Closes #7179.  PiperOrigin-RevId:
230227284
",586645,5316,230000,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-piper@google.com"
"1449","bazelbuild/bazel","e65f3a8ee2405854e6b6b62d6c318289e7d3c059",2,"2019-01-22 08:36:48-08:00","Clarify comments concerning output artifact data,
remove index check  Note that 0 is a legal backend
index to use when representing local, empty, or
omitted outputs.  Also, remove backend index check
in injectRemoteFile to accommodate storing omitted
output information.  RELNOTES: None. PiperOrigin-
RevId: 230345657
",586640,5315,229988,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1450","bazelbuild/bazel","907ca4aec3fce97984cb2bdb84584b99c832857e",1,"2019-01-25 13:37:24-08:00","Un-AutoCodec AspectValue,
BuildInfoCollectionValue, and
WorkspaceStatusValue. DynamicCodec is fine for
them.  PiperOrigin-RevId: 230960078
",586531,5319,230099,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1451","bazelbuild/bazel","d3dd9d1b3cd238467143becb8665ea252fda8e0d",1,"2019-01-25 15:01:45-08:00","Convert MethodLibrary's SkylarkSignature methods
to SkylarkCallable  Note that converted parameter
@Param annotations need legacyNamed = true (and in
some places, noneable = True) to retain
compatibility with the bugginess of
SkylarkSignature.  This facilitates followup to
clean up these methods / parameters -- given the
refactor, we can enforce some of these parameters
are positional-only (subject to an --incompatible
flag)  Progress toward #5010  RELNOTES: None.
PiperOrigin-RevId: 230975480
",586510,5319,230106,"cparsons","cparsons@google.com","Copybara-Service","copybara-piper@google.com"
"1452","bazelbuild/bazel","8abb430fa4f1f77af9304ee0dc7c98feee8b67e6",1,"2019-01-28 10:14:29-08:00","Fold BazelCrashUtils.java into BugReport.java.
There's no need to have both of these.  This was
very tedious and a lot of care had to be done in
order to avoid build-time cycles -- this is mostly
due to the combination of (a) the serialization
codebase's usage of BugReport and (b) the
proliferation of '@AutoCodec' annotations.  Also,
while I'm here, slightly improve readability of
BugReport.java.  RELNOTES: None PiperOrigin-RevId:
231241644
",586823,5318,230088,"nharmata","nharmata@google.com","Copybara-Service","copybara-piper@google.com"
"1453","bazelbuild/bazel","ee1107a6ada146666f50aa7e834e9f954153de32",1,"2019-01-29 15:31:54-08:00","Make inconsistency receiver accept collections of
keys  Many children may be rewound by a failed
action. Handling them one at a time is
inefficient.  RELNOTES: None. PiperOrigin-RevId:
231485845
",587623,5324,230222,"mschaller","mschaller@google.com","Copybara-Service","copybara-piper@google.com"
"1454","bazelbuild/bazel","eaff19cb71b8b820550db2a741a3c016d6c03a88",2,"2019-01-31 13:59:40-08:00","Make two
LibraryToLinkWrapper$CcLinkingContext$LinkOptions
value-equal if they have the same contents and
were created by the same action owner at the same
point in its analysis.  To do so, we expose an
opaque SymbolGenerator in
RuleContext/BazelStarlarkContext, as suggested by
lberki@. The SymbolGenerator generates symbols
(surprise) that will compare equal to other
symbols that have the same ""owner"" (package,
label, action lookup key, etc.) and index (order
in which they were generated).  This is partially
a logical rollback of https://github.com/bazelbuil
d/bazel/commit/830a286748f64e61dcb03c64318bc7e54cf
87d88, with the symbol making things more
acceptable.  PiperOrigin-RevId: 231848582
",587678,5324,230186,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1455","bazelbuild/bazel","0cd3594dcabd508636d6f3af8867de4d1a044aac",1,"2019-02-05 02:50:02-08:00","Move the computation of the full propagating
aspect path to the loop that is executed before
loading the dependencies.  With this change, the
only thing the originating rule is used for in the
second loop is error reporting. We'll have to do
with a little worse errors, which change will be
made separately so that refactoring is separate
from behavior change.  RELNOTES: None.
PiperOrigin-RevId: 232451397
",588150,5329,230228,"lberki","lberki@google.com","Copybara-Service","copybara-piper@google.com"
"1456","bazelbuild/bazel","6dbfafe639507c60a00201baa14e293c69315695",2,"2019-02-05 08:55:07-08:00","In Parser, dedupe the String instances referred to
by StringLiteral instances. Implement the same
optimization in the serialization code.  Some .bzl
files have tons of duplicate string constants.  We
can't dedupe the StringLiteral instances
themselves, because they all have different
Locations.  RELNOTES: None PiperOrigin-RevId:
232495067
",588447,5329,230231,"nharmata","nharmata@google.com","Copybara-Service","copybara-piper@google.com"
"1457","bazelbuild/bazel","458f07a9de18dc3bcc826993e33b31ff9a9af7a4",1,"2019-02-05 13:51:54-08:00","Make BigInteger calculations more secure:
BigInteger ordered composition is not guaranteed
to be collision-free when the inputs are not
uniformly distributed. Thus, we cannot blindly add
strings/booleans/etc. when fingerprinting. For
simplicity, we delegate to a normal Fingerprint
for everything that isn't known to be uniformly
distributed, although we then have to be careful
with how BigInteger is ordered with respect to the
other fields.  PiperOrigin-RevId: 232551309
",588590,5331,230280,"janakr","janakr@google.com","Copybara-Service","copybara-piper@google.com"
"1458","bazelbuild/bazel","3d4cd2584021dde9d4ecaa985c26751455eabf0e",2,"2019-02-06 04:22:50-08:00","[#6987] aquery against the current state of
Skyframe.  Objective: Allow users to get the
current actions in Skyframe's Action Graph, after
several build commands were run. An example use
case is described in the Github issue:
https://github.com/bazelbuild/bazel/issues/6987.
Examples: 1/ bazel aquery --output=proto
--skyframe_state  -> output all actions currently
in Skyframe's Action Graph  2/ bazel aquery
--output=proto --skyframe_state inputs("".*.java"")
-> output all actions currently in Skyframe's
Action Graph, filtered by input files' names.
Notes: 1/ Specifying a build target with
--skyframe_state is NOT supported  The following
command would return an error: bazel aquery
--output=proto --skyframe_state //some_target  The
flag automatically implies the inclusion of the
whole Action Graph on Skyframe. Filtering can be
done with aquery filter functions (inputs,
outputs, mnemonic).  2/ We currently only support
--skyframe_state with --output=(proto|textproto),
not --output=text.  RELNOTES: Allow running aquery
against the current state of Skyframe PiperOrigin-
RevId: 232651835
",588768,5334,230329,"leba","leba@google.com","Copybara-Service","copybara-piper@google.com"
"1459","bazelbuild/bazel","e6cd8eec65946ccce1276b9a54d9fb1311b64ac6",2,"2019-02-06 06:03:38-08:00","Pass the correct import path to protoc when using
strict dependency checks or exports  Currently,
when strict dependency checks are enabled Bazel
passes the full path of each directly dependent
proto file to protoc via the
`--direct_dependencies` flag. Similarly, when
proto exports are used the full path of each
export is passed to protoc via the
`--allowed_public_imports` flag.  With the
introduction of the `import_path` and
`strip_import_path` proto_library attributes, it
is no longer true that the full path of a .proto
file is always its import path. Meaning that when
the import path is modified, Bazel passes the
incorrect import path to the `direct_dependencies`
and `allowed_public_imports` protoc flags.  This
issue is fixed by having `ProtoInfo` keep track of
a pair of each .proto file and its import path.
That way whenever the import path has been
modified it can be used as the protoc command line
argument rather than the .proto's full path.
Closes #7280.  PiperOrigin-RevId: 232661815
",588919,5334,230351,"Brandon Lico","blico@uber.com","Copybara-Service","copybara-piper@google.com"
"1460","bazelbuild/bazel","cffad55b5f2243b0d70e72232e8d7bbb2ba828a7",1,"2019-02-07 03:46:09-08:00","C++: Starts removing rule context from
CcLinkingHelper  Working towards #4570
RELNOTES:none PiperOrigin-RevId: 232843780
",589044,5333,230351,"plf","plf@google.com","Copybara-Service","copybara-piper@google.com"
"1461","bazelbuild/bazel","ea956ae20bac5be1e9917faabdcac3cab2965c12",2,"2019-02-07 13:56:27-08:00","Add `--incompatible_py3_is_default` to change
`py_binary` and `py_test`'s default version  When
this flag is enabled, `py_binary` and `py_test`
targets that do not specify a version (by setting
the `python_version` attribute, or its deprecated
alias `default_python_version`) will default to
`PY3` instead of `PY2`. In addition, the host
configuration will use `PY3`, unless
`--host_force_python=PY2` is set to override it.
The flag requires the new version semantics (`--in
compatible_allow_python_version_transitions=true`)
, and will fail the build if it is not set.  The
flag is implemented by eliminating
PythonVersion#DEFAULT_TARGET_VALUE and replacing
it with an accessor
PythonOptions#getDefaultPythonVersion. For the
case of rule transition factories in rule
definitions, which previously relied on
DEFAULT_TARGET_VALUE and which do not have access
to a configuration, they are updated to instead
pass a callback function that retrieves the
default version from the configuration at the time
of the transition.  Work toward #6647, #7359.
RELNOTES[INC]: Added --incompatible_py3_is_default
to test switching the default Python version to
PY3 for py_binary/py_test targets that do not
specify a version. See #7359.  PiperOrigin-RevId:
232939284
",589128,5333,230400,"brandjon","brandjon@google.com","Copybara-Service","copybara-piper@google.com"
"1462","bazelbuild/bazel","4310989764adb48005d0da2eb8b1c01e7189817b",1,"2019-02-12 05:45:05-08:00","C++: Completely removes ctx from compile.  No
instances of RuleContext left.  #4570
RELNOTES:none PiperOrigin-RevId: 233590830
",589154,5329,230222,"plf","plf@google.com","Copybara-Service","copybara-piper@google.com"
"1463","bazelbuild/bazel","e68cd4507129ed49a18518296ffd4946934e90be",15,"2019-02-13 03:04:18-08:00","C++: Rename LibraryToLinkWrapper to LibraryToLink
RELNOTES:none PiperOrigin-RevId: 233719947
",589364,5327,230205,"plf","plf@google.com","Copybara-Service","copybara-piper@google.com"
"1464","bazelbuild/bazel","9beabe09bab5c371d353cca3c77c4e57de555ac0",2,"2019-02-13 23:41:59-08:00","Move signaledDeps to DirtyBuildingState  This
requires using DirtyBuildingState also for the
initial evaluation of a node. As a side effect,
this reduces the set of possible states, which
might make it easier to reason about the state.
States: previously, NodeEntry distinguished
between initial evaluation and incremental update,
with 2 different states (just created / marked and
evaluating) for each case. With this change, the
case distinction goes away.  This subtly changes
the semantics of isDirty(): previously, isDirty
returned false for new nodes; now it returns true
for new nodes after their computation is
triggered.  This change should reduce memory
consumption of InMemoryNodeEntry objects per
instance for nodes that are done, but at the
expense of additional temporary DirtyBuildingState
instances for nodes that are not done.  I am
making this change in preparation for adding
another field to the dirty state, which would
otherwise increase memory consumption of all done
nodes.  = Memory consumption While this decreases
the memory consumption of Skyframe nodes in the
done state, it also increases the memory
consumption of Skyframe nodes that have to be
recomputed, especially for new nodes, but also for
incrementally updated nodes.  New nodes now have
to allocate a DirtyBuildingState instance while
they are in-flight, and incrementally updated
nodes now have an additional field in the
DirtyBuildingState. For incrementally updated
nodes, the difference is a wash - we save some in
InMemoryNodeEntry and lose the same amount in
DirtyBuildingState.  For clean builds, whether or
not this is a reduction in memory use depends on
the ratio of in-flight to done nodes. The higher
the ratio, the higher the memory consumption. Note
that the ratio goes to zero at the end of a build,
so this is a strict win for memory consumption at
rest (i.e., between builds), and only a concern
while Bazel is active.  For some representative
target, I saw ratios of less than 25% at max
during the loading+analysis phase, and dropping
off sharply as packages were completed. During the
execution phase, the ratio only barely got above
10% and usually stayed below 5%.  Assuming a
memory difference of 8 bytes per done node (since
the Jvm performs 8-byte alignment), and an
increase of 24 bytes per in-flight node, any ratio
below 1/3 is a net win for post-gc memory
consumption, although at the cost of slightly
higher gc pressure. This is clearly the case from
the numbers I collected.  For incremental builds,
the number of invalidated and recomputed nodes is
usually much, much lower (I saw numbers as low as
0.02%), which virtually guarantees that this
change is a net win.  PiperOrigin-RevId: 233899818
",589400,5327,230233,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-piper@google.com"
"1465","bazelbuild/bazel","4f00eace48ca8342139d80d3149c04e20227e0a7",2,"2019-02-15 16:01:48-08:00","Deflake test by enforcing deterministic order of
returned reverse deps when marking clean.
PiperOrigin-RevId: 234229893
",589637,5329,230308,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1466","bazelbuild/bazel","20eeaad66ca528c262c473ce5c82b349f32b7a53",1,"2019-02-18 02:51:55-08:00","Add Skyframe support for external computations
Add a SkyFunction.Environment.dependOnFuture()
method to register a dependency on the completion
of a ListenableFuture. Once all such futures are
completed, the current node is re-enqueued.  We
combine all futures that are registered in the
same pass, and treat them as a single logical
dependency. To that end, we add another counter to
NodeEntry that does just that, but otherwise use
the same signalDep method.  This is in preparation
for supporting async action execution, i.e.,
allowing actions to run in parallel without
blocking a Skyframe thread. We have reason to
believe that this will be a significant
performance win for large builds: if there are
more actions that could be run than available
jobs, but cranking up jobs is prohibitively
costly.  In addition, async action execution also
improves Bazel's command-line output; since we no
longer block Skyframe threads on action execution,
these threads are free to continue exploring the
action graph, which means we'll see the number of
outstanding actions more quickly go to the
expected maximum for that build (excluding flaky
test retries and exclusive tests, which are not
modeled in the action graph).  Progress on #6394.
PiperOrigin-RevId: 234450510
",589953,5329,230370,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1467","bazelbuild/bazel","f227730be2a2a5521f5f160226e22a36634d4da3",2,"2019-02-18 05:47:14-08:00","Refactor SkyframeActionExecutor  Move all action
state tracking to a new subclass, which replaces
the use of Pair+FutureTask, and carefully ensures
that we don't hold onto memory for any longer than
necessary.  This is another attempt at preparing
for async action execution. A similar refactoring
was previously attempted in https://github.com/baz
elbuild/bazel/commit/14f8b109b9f987f1b0c69c8cf3993
26740749382, but had to be rolled back as https://
github.com/bazelbuild/bazel/commit/68fc46b7ac2a015
cbbd4e6602f2310a935783866 due to increased memory
consumption.  The new code may seem a bit
overengineered given that the current
implementation requires exactly two states:
STARTED -> DONE  However, async actions will have
at least three, and possibly more states, which
requires a bit more infrastructure here: STARTED
-> IN_PROGRESS -> DONE  Note that we need to
explicitly model the intermediate state such that
parallel threads due to action sharing can see the
IN_PROGRESS state, and register their dependency
on the corresponding Future (code in a subsequent
commit).  Progress on #6394.  PiperOrigin-RevId:
234469209
",589974,5330,230459,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1468","bazelbuild/bazel","4ec695ca279440e9e76a93e8c2f2333755115532",3,"2019-02-19 08:30:22-08:00","Fix long-standing corner case with infinite
symlink expansion detection. See the added unit
tests for more details.  The approach is to have
FileFunction consider the entire logical chain of
paths encountered during realpath resolution, not
just the physical symlink chain. In order to
implement this, we have FileValue instances embed
the full logical chain of paths encountered during
their own real path resolution. This leads to a
natural recursive algorithm.  In addition to the
new code being less buggy, I hope it's also either
to reason about since the algorithm is more
natural. The added code comments should help as
well.  Another cool thing is that the error
message printed to the user on infinite symlink
expansion is much more useful since it shows them
the full chain of paths.  While there is a
theoretical memory concern (consider a path like
'a/b/c/d/e/f/g' where 'a' is a symlink to
'a1/b/c/d/e/f/g', 'b' is a symlink to
'b1/c/d/e/f/g', etc), in practice there's no
noticeable memory increase for many use cases.
RELNOTES: None PiperOrigin-RevId: 234606705
",590425,5330,230519,"nharmata","nharmata@google.com","Copybara-Service","copybara-worker@google.com"
"1469","bazelbuild/bazel","3b6e35ed0c387705bbe68d0d787a01f719c75302",1,"2019-02-20 00:48:01-08:00","Automatic code cleanup.  PiperOrigin-RevId:
234750806
",590469,5330,230520,"hlopko","hlopko@google.com","Copybara-Service","copybara-worker@google.com"
"1470","bazelbuild/bazel","2bf8906a3951f046c632cb777d7b40261f2324cc",4,"2019-02-21 03:24:49-08:00","Use the Builder pattern for
BuildEventService{Transport,ProtoUtil} and
BuildEventStreamer.  By using builders we can
simplify the creation of those objects in the
BuildEventServiceModule, but most importantly we
can better handle the possible exceptions thrown
at Object creation instead of catching generic
Exceptions (as we currently do in
tryCreateBesStreamer) which may hide unchecked
exceptions from being surfaced at the right place.
PiperOrigin-RevId: 234964615
",591209,5335,230614,"lpino","lpino@google.com","Copybara-Service","copybara-worker@google.com"
"1471","bazelbuild/bazel","d5767c8e7fe9ad6b6193a7746d7b9c67028dab54",1,"2019-02-21 04:21:57-08:00","Wait for shared actions asynchronously  Instead of
blocking the current thread, shared actions are
waited for using the ListenableFuture mechanism in
Skyframe.  Also clean up the API a bit.  Progress
on #6394.  PiperOrigin-RevId: 234970927
",591244,5335,230648,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1472","bazelbuild/bazel","4e49e28ec329573906cd23251c61ba47132094c2",8,"2019-02-22 11:18:16-08:00","Expose PyRuntimeProvider to Starlark as
PyRuntimeInfo  This creates a top-level symbol
`PyRuntimeInfo` representing the provider created
by the `py_runtime` rule and consumed by
`py_binary` and `py_test`.  PyRuntimeProvider is
refactored to not implement
TransitiveInfoProvider, and to now be split into
separate classes for the provider instance vs
provider type. Fakes are created for Stardoc and
friends.  Tests are added for the API of
`PyRuntimeInfo` and for the ability to sandwich a
Starlark rule between a py_runtime and its
consuming py_binary.  As drive-by cleanups, the
provider is now instantiated in Java code via
factory methods instead of its constructor, and
the isHermetic method is renamed to isInBuild to
be consistent with the terminology in the design
doc for #7375. Rule documentation is also updated.
Work toward #7375.  RELNOTES: (Python rules)
PyRuntimeInfo is exposed to Starlark, making it
possible for Starlark rules to depend on or
imitate `py_runtime`. The `files` attribute of
`py_runtime` is no longer mandatory. PiperOrigin-
RevId: 235224774
",591708,5339,230757,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1473","bazelbuild/bazel","25d46f4234c431dab5ee1aec6a246e1c9ca583f8",1,"2019-02-26 08:29:47-08:00","Refactor the async execution interface for actions
This makes the interface generic such that it can
be used for multiple steps as well as for multiple
concurrently running spawns, effectively allowing
any action subclass to opt-in to the new
framework.  The new API is directly equivalent to
the old execute method, so we can subsequently
switch to using the new API for all actions, even
if they're still executing synchronous, and then
move individual action types over piecemeal.
Progress on #6394.  PiperOrigin-RevId: 235726176
",591588,5340,230788,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1474","bazelbuild/bazel","65eea0c4707030a69c941b39a9abe50682a0053c",4,"2019-02-26 12:53:55-08:00","Convert ConstraintCollection to use a Builder.
Part of the fix for #7548.  Closes #7549.
PiperOrigin-RevId: 235774987
",591711,5340,230818,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1475","bazelbuild/bazel","06eb1bbde616d4e9b9e92da34245c8142a5b1121",1,"2019-02-26 15:33:15-08:00","Pass through information about package lookup
failure into import lookup.  This fixes
'Misleading error message ""file must have a
corresponding package""' '#7094.  PiperOrigin-
RevId: 235806611
",591964,5341,230908,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1476","bazelbuild/bazel","db8aa2b17dc18eba7ffb0992e8772408e6828738",10,"2019-02-27 09:15:35-08:00","Move constraint duplication checks to
ConstraintCollection.  Fixes #7548.  Closes #7547.
PiperOrigin-RevId: 235931238
",592059,5342,230934,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1477","bazelbuild/bazel","2d7c0ffbadc54833958c8800aaff2d7058848d15",1,"2019-02-28 08:28:11-08:00","Calculate the options fragment map in
ConfiguredRuleClassProvider instead.  This
refactoring allows for retroactive trimming to use
the option fragment map.  RELNOTES: None.
PiperOrigin-RevId: 236126725
",592311,5343,231062,"mstaib","mstaib@google.com","Copybara-Service","copybara-worker@google.com"
"1478","bazelbuild/bazel","39969b1c517307962b03d300059df633e9f4c4de",2,"2019-03-03 16:25:48-08:00","Unshare FileArtifactValues associated with
constant-metadata Artifacts: they can't really be
used across servers.  PiperOrigin-RevId: 236567498
",592609,5347,231187,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1479","bazelbuild/bazel","6afb4fdec7fec0cce8b3f4a5246285b3350bfa4e",2,"2019-03-04 12:17:19-08:00","For missing implicit dependencies show doc string
If an implicit dependency is not met for a target,
and the attribute introducing that implicit
dependency has a doc string, show it to the user.
Most likely, it will contain information on where
to obtain that dependency from. In this way, the
rule authors, who are the only ones having
knowledge about best practices using their rules,
can provide the needed information.  Improves on
#7165.  Change-Id:
I2ece552080aa2bd7581a81b790891d60d943e839
PiperOrigin-RevId: 236701041
",592850,5348,231239,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-worker@google.com"
"1480","bazelbuild/bazel","177489da94f47035dc7bb180ec92154249e9f2bc",1,"2019-03-04 22:10:51-08:00","Allow for outputs to be both an Artifact and read
via an in-memory stream. Use this from both Java
and C++.  RELNOTES: None. PiperOrigin-RevId:
236785802
",592780,5347,231190,"djasper","djasper@google.com","Copybara-Service","copybara-worker@google.com"
"1481","bazelbuild/bazel","f3b513d7d15b52cf7affaa553c0e59d9b50b2526",2,"2019-03-06 06:35:58-08:00","remote: add InputTree in preparation for replacing
the TreeNodeRepository  InputTree is a tree
representation of a list of action inputs, that
also expands directory inputs and contains
metadata (hash, size) about each input file. This
class will be used in a follw up CL to replace the
TreeNodeRepository for building merkle trees for
remote caching / execution.  Also see #7583.
RELNOTES: None PiperOrigin-RevId: 237036900
",593706,5353,231318,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1482","bazelbuild/bazel","1ee96857e13ad621967903b706bb86ccb4f683bf",1,"2019-03-06 06:57:12-08:00","C++: Link runtimes statically for Python
RELNOTES:none PiperOrigin-RevId: 237039450
",593678,5353,231299,"plf","plf@google.com","Copybara-Service","copybara-worker@google.com"
"1483","bazelbuild/bazel","f2b26ad501c38ee9abbf27d217490d82b6ab9b6e",6,"2019-03-06 09:37:00-08:00","Refactor ""determine all dependency edges from all
aspects"" logic to be a streaming visitation.  In
doing so, we use more efficient algorithm that
notably doesn't have several large sources of
garbage. The inefficiencies and garbage churn of
the old algorithm are more easily noticed when you
consider the pseudo-code.  The old algorithm for
was:    res <- []   for each attribute A of T that
entails a label dep     for each label dep L
entailed by A       aspectDeps <- {}       for
each aspect S of A         if S is satisfied by T
for each attribute A' of S             for each
label dep L' entailed by A'               // Note
that L' has nothing directly to do with L.
aspectDeps <- aspectDeps U {A', L')       for each
{a, l} in aspectDeps         res <- res + [l]
return res  And the new algorithm is:    res <- []
for each attribute A of T that entails a label dep
for each aspect S of A       if there exists a
label dep L entailed by A that satisfies S
for each label dep L' entailed by S           res
<- res + [L']   return res  This refactor exposes
an existing inefficiency in LabelVisitor. I added
a TODO comment explaining it.  RELNOTES: None
PiperOrigin-RevId: 237063485
",593683,5353,231295,"nharmata","nharmata@google.com","Copybara-Service","copybara-worker@google.com"
"1484","bazelbuild/bazel","558b717e906156477b1c6bd29d049a0fb8e18b27",5,"2019-03-06 15:20:35-08:00","Add flag for getting the Python runtime from the
toolchain  This adds
--experimental_use_python_toolchains (to be
renamed --incompatible...). When enabled,
py_binary and py_test will obtain the Python
runtime from the resolved Python toolchain, rather
than from the legacy mechanism (--python_top /
--python_path).  Work toward #7375.  RELNOTES:
None PiperOrigin-RevId: 237131032
",593854,5353,231375,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1485","bazelbuild/bazel","f4e8b0913d083f35ff65fea6b6e0304ec1d3b3df",1,"2019-03-06 19:17:17-08:00","Stop adding jacoco to JavaBuilder's classpath
PiperOrigin-RevId: 237165843
",593784,5353,231372,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1486","bazelbuild/bazel","7f72544f6e76d5184a558427e90b768f84b0634c",1,"2019-03-08 03:20:25-08:00","remote: re-implement merkle tree buildling  The
TreeNodeRepository served us well, but has become
a bit dated over time and it's increasingly hard
to understand and to fix bugs. Additionally, it
was written with the initial intend of
incrementally updating the merkle tree between
actions, however internal performance analysis has
shown that doing so is 1) hard to implement
reliably and 2) would increase memory consumption
multifold.  This is a rewrite of the code that
also fixes bugs like #4663. MerkleTree implements
a visitor pattern over an InputTree and is
responsible for serializing the InputTree to the
protobuf merkle tree that's used by remote caching
/ execution.  Benchmarks on my local machine have
shown this implementation to consumes between
2-10x less wall time than the current
implementation. Tests by users have shown equally
encouraging speedups [1].  [1]
https://groups.google.com/d/msg/bazel-
discuss/wPHrqm2z8lU/mzoRF236GQAJ  Closes #7583.
PiperOrigin-RevId: 237421145
",593579,5354,231269,"buchgr","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1487","bazelbuild/bazel","0a0c96289068507a72cc6e315f27cf129aeef9b2",1,"2019-03-08 03:40:09-08:00","Teach the FilesystemValueChecker about remotely
stored outputs  The FilesystemValueChecker is used
by Bazel to detect modified outputs before running
a command. This change teaches it about remote
output files that don't exist in the output base,
but are only stored physically on a remote storage
system with SkyFrame only tracking file metadata.
Note that this change only affects incremental
builds, and there introduces the following new
behavior for artifacts and tree artifacts:   1) If
the previous build created a remote output and the
output  does not exist in the output base then no
invalidation happens.   2) If the previous build
created a remote output and the output  does exist
in the output base then the generating action is
invalidated.  A tree artifact may either be fully
materialized in the output base or not
materialized at all.  Progress towards #6862
Closes #7269.  PiperOrigin-RevId: 237422752
",593730,5354,231283,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1488","bazelbuild/bazel","ff900a795d568aaaf7b538da49de2afaf3489e42",18,"2019-03-11 13:32:14-07:00","Update the AndroidIdeInfoProvider to accept and
return null in additional fields inline with
native behavior.  Additionally, added the
@Nullable annotations on additional nullable
fields, for consistency.  RELNOTES: None.
PiperOrigin-RevId: 237870666
",594141,5355,231363,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1489","bazelbuild/bazel","62493d77295bc916398690bbf761d169bd7169bd",3,"2019-03-11 16:11:49-07:00","Expose the ValidatedAndroidResources fields to
Starlark for the Android Rules Migration.
RELNOTES: None. PiperOrigin-RevId: 237905363
",594235,5355,231364,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1490","bazelbuild/bazel","f32b6708d3465eeb7114f85701e317f078adbe9d",1,"2019-03-15 05:28:33-07:00","Clean up compute() function of
RepositoryDelegatorFunction  just a pure
refactoring without any new functionality  Closes
#7727.  PiperOrigin-RevId: 238625657
",594956,5358,231518,"Irina","ichern@google.com","Copybara-Service","copybara-worker@google.com"
"1491","bazelbuild/bazel","11883449f3043aaa038b53ad7cb61d94b4b30561",2,"2019-03-15 12:10:47-07:00","Add TestAttemptContinuation  This adds an
interface for representing async test attempt
execution. While I'd love to move this up to
TestRunnerAction, unfortunately, the Bazel and
Blaze implementations are sufficiently different
to make that difficult at this time.  I have a
follow-up change that switches test execution to
the new code for all cases (including non-async),
which adds plenty of test coverage.  Progress on
#6394.  PiperOrigin-RevId: 238686781
",595178,5358,231525,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1492","bazelbuild/bazel","4a5e1b7868f7cf5316d8e7838944f5bf2ae308e0",2,"2019-03-18 06:56:57-07:00","Add async support to StandaloneTestStrategy
Progress on #6394.  PiperOrigin-RevId: 238977749
",595377,5359,231566,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1493","bazelbuild/bazel","d350b4f35dc9bbef7cf77dd2338c72af157ca5ed",2,"2019-03-18 12:59:07-07:00","Add platform mapping function.  Introduces a new
SkyFunction which reads a platform mapping file,
parses its contents and produces a platform
mapping sky value which can then be used to apply
the mapping to configurations (in the form of
BuildConfigurationValue.Key).  The file's location
is obtained from the newly introduced flag
--platform_mappings and defaults to
//:platform_mappings.  Note that this logic is not
in use anywhere yet because the key mapping has
not been applied. This will follow in a future CL.
Step 4/N towards the platforms mapping
functionality for
https://github.com/bazelbuild/bazel/issues/6426
RELNOTES: None. PiperOrigin-RevId: 239043475
",595940,5362,231675,"schmitt","schmitt@google.com","Copybara-Service","copybara-worker@google.com"
"1494","bazelbuild/bazel","6641ad986f436926a75b31b47314c193a9a7e032",3,"2019-03-18 18:00:09-07:00","Add option to desugar default methods with the
help of synthetic base classes where possible.
PiperOrigin-RevId: 239100491
",596227,5362,231773,"kmb","kmb@google.com","Copybara-Service","copybara-worker@google.com"
"1495","bazelbuild/bazel","7273288af84661c95e874f61c5b09485dd57ffe3",2,"2019-03-20 03:00:08-07:00","JavaCompileAction: implement async execution
Progress on #6394.  PiperOrigin-RevId: 239363618
",596665,5361,231796,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1496","bazelbuild/bazel","5bec36cd3928e8e275d6af759e5b2ddb7a1d5448",6,"2019-03-21 09:50:52-07:00","Move Reporter out of the BuildEventStreamer.  The
Reporter is a general-purpose object for
communicating events to the user. When an event is
sent (with Reporter#post or Reporter#handle) using
the Reporter then those events are forwarded to
the set of registered handlers (for #handle) and
to the event bus/extended handlers for #post.
BuildEventStreamer responsibility is to send
BuildEvents to all active transports, it shouldn't
be on the business of sending UI messages (via
#handle) or posting to the event bus (via #post).
With this CL the messages that were sent inside
the BuildEventStreamer are now sent in the
BuildEventServiceModule allowing us to manage all
the UI messages from there instead of scattered
around the BES/BEP transports code.  From the UI
perspective, the ExperimentalStateTracker uses
AnnounceBuildEventTransportsEvent and
BuildEventTransportClosedEvent to decide whether
to print information about the BES upload. We now
send those events in the BES module.  In summary,
there are a few concrete improvements with this
CL: - The waiting messages are solely the
responsibility of the experimental UI. - The logic
for closing the BEP transports in the streamer is
simplified. - The streamer doesn't report
arbitrary events to the event handlers or the
event bus.  PiperOrigin-RevId: 239613756
",597694,5360,231902,"lpino","lpino@google.com","Copybara-Service","copybara-worker@google.com"
"1497","bazelbuild/bazel","615ac4e1b6bfae8d8362493295fc8bebf6f37e55",1,"2019-03-21 11:39:04-07:00","support in-memory outputs in spawn result  split
out from #7778  Closes #7791.  PiperOrigin-RevId:
239638546
",597735,5360,231903,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1498","bazelbuild/bazel","79fd402786570f6ab0ff31bcab5eacb2675df539",1,"2019-03-22 11:02:16-07:00","Always track parallelism in EvaluationContext
EvaluationContext has 2 members for different
configurations it is run with (either is set,
never both):   1. Integer numThreads -- this
allows delegating the decision of what kind
ExecutorService to create to the user   2.
Supplier<ExecutorService> executorService --
factory of ExecutorService   objects -- makes the
user tied to what it returns  Some places in the
code are interested in knowing the parallelism of
the executor, which currently is achieved by
assuming the kind of thread pool we would use in
case numThreads is not set.  Change the
EvaluationContext to always require and store the
parallelism (even if the ExecutorService supplier
is specified). Rename the getter to
'getParallelism' to avoid confusion with the old
concept.  PiperOrigin-RevId: 239826228
",597748,5360,231901,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1499","bazelbuild/bazel","f091f9cdcc8e069d37fd97d7e4bbd7e2e36219ac",9,"2019-03-25 13:42:18-07:00","Make deterministic the error that is stored in
TransitiveTraversalValue. When there are multiple
errors, we don't want non-determinism.
PiperOrigin-RevId: 240208756
",597964,5366,232053,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1500","bazelbuild/bazel","fc74dd9f04c376429ccf8bd3693c249437adc93a",2,"2019-03-26 09:11:02-07:00","Split CcSkyframeSupportValue  Split it into
Crosstool and FDO specific values. This is a
preparation to move FDO specific value to rules
implementation, and to remove Crosstool specific
value once Crosstool in Proto is removed.
https://github.com/bazelbuild/bazel/issues/6516
RELNOTES: None PiperOrigin-RevId: 240360330
",598340,5369,232166,"hlopko","hlopko@google.com","Copybara-Service","copybara-worker@google.com"
"1501","bazelbuild/bazel","0a9ad0712a715162173964f21ee961bd3dc94154",2,"2019-03-27 09:12:39-07:00","Remove unused parameter in getConfigConditions.
PiperOrigin-RevId: 240574131
",598242,5372,232241,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1502","bazelbuild/bazel","0544d249d532cc706778540789195951b2b38299",2,"2019-03-27 11:49:19-07:00","Allow setting the OutputService in tests.
PiperOrigin-RevId: 240609460
",598275,5372,232230,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1503","bazelbuild/bazel","7faa0efc9a560dac748760dce72b25bc5db32714",1,"2019-03-28 10:00:00-07:00","Introduce a FileSystemCalls.getType() function
that just returns the type of a file in question.
In quite a few places that is sufficient and we
might be able to get the result based on a
previously existing readdir() or stat() request if
we have either of them cached.  While at it, re-
use the PerBuildSysCall cache inside of
FileStateFunction in order to profit from this.
This can prevent a whole bunch of unnecessary
stat() calls, especially for whether or not a
BUILD file is present and for creating the
FileStateValue for symlinks and directories (for
regular files we still need to stat() in order to
get modification time information).  RELNOTES:
None. PiperOrigin-RevId: 240794051
",598704,5373,232297,"djasper","djasper@google.com","Copybara-Service","copybara-worker@google.com"
"1504","bazelbuild/bazel","584ae24a193c1a288e9257334ff5e963878cdf13",1,"2019-03-29 08:58:41-07:00","remote: introduce downloadMinimal  Adds
downloadMinimal() which will only download action
outputs that are strictly required and inject the
remaining action metadata instead.  This change
also extracts the logic of retrieving complete
action result metadata into its own method so that
it can be used by both downloadMinimal() and
download().  downloadMinimal is only introduced in
this CL and will be enabled in a follow up CL.
Progress towards #6862  Closes #7867.
PiperOrigin-RevId: 240987655
",598420,5375,232123,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1505","bazelbuild/bazel","06b9871b3f405448637bd66ecea3c90a3f9ff67f",2,"2019-04-01 00:47:30-07:00","Remove a deadlock in class initialization.
Wretched bug, by the power of Ulf and his sublime
async execution, I smite thee!  This happens when
one thread tries to access (e.g.)
CcToolchainVariables.Builder and another,
CcToolchainVariables.EMPTY at the same time.
Since CcToolchainVariables.Builder is an inner
class, its initialization requires initializing
CcToolchainVariables first, but since
CcToolchainVariables has a member whose
initialization requires its builder, the same is
true the other way round.  Therefore, if we are
very unlucky, it can happen that one thread starts
initializing CcToolchainVariables, another, its
builder, therefore, deadlock.  The solution is to
wrap the constructor of the builder a static
method on the enclosing class so that the
enclosing class is always initialized first.
RELNOTES: None. PiperOrigin-RevId: 241273915
",599082,5378,232253,"lberki","lberki@google.com","Copybara-Service","copybara-worker@google.com"
"1506","bazelbuild/bazel","6a050c2c2aacb3683634b93084fd2104ea7e241c",2,"2019-04-01 05:23:33-07:00","Do not crash Bazel when C++ toolchain doesn't
specify a tool  RELNOTES: None. PiperOrigin-RevId:
241305458
",599225,5379,232290,"hlopko","hlopko@google.com","Copybara-Service","copybara-worker@google.com"
"1507","bazelbuild/bazel","bfd13b9b4a758bafd6129794a8bfc3db96b1bf76",1,"2019-04-01 09:45:56-07:00","Remove --experimental_java_coverage/--incompatible
_java_coverage flag.  RELNOTES: --experimental_jav
a_coverage/--incompatible_java_coverage flag was
removed. See #7425. PiperOrigin-RevId: 241342271
",598979,5379,232237,"elenairina","elenairina@google.com","Copybara-Service","copybara-worker@google.com"
"1508","bazelbuild/bazel","1f341a635aa5702d242ef3c298dd69e834ee9c5e",1,"2019-04-01 14:02:14-07:00","C++: More ctx removal from CppLinkActionBuilder
RELNOTES: PiperOrigin-RevId: 241394422
",599085,5379,232214,"plf","plf@google.com","Copybara-Service","copybara-worker@google.com"
"1509","bazelbuild/bazel","576fc986d34c793d46dd270d8524217bde246a48",4,"2019-04-02 07:46:44-07:00","Do not crash Bazel when CcToolchainConfigInfo
variables misbehave.  In order to do that we have
to thread EvalExceptions or RuleErrorExceptions to
various analysis corners, and we have to thread
ActionExecutionException to various execution
corners.  RELNOTES: None. PiperOrigin-RevId:
241526530
",599176,5379,232196,"hlopko","hlopko@google.com","Copybara-Service","copybara-worker@google.com"
"1510","bazelbuild/bazel","357cb1e8f6b2ef90c4840a88e5b564d2f6fdaa71",6,"2019-04-03 06:15:02-07:00","remote: implement a naive action-scoped file
system  This change accompanies d480c5f [1] in
that it registers an action-scoped filesystem that
supports lazily fetching action inputs that are
remotely stored outputs of an upstream action.
While in theory any native java action in Bazel
could do arbitrary file system operations in
practice this is mostly useful for  *
AbstractFileWriteAction (calls
Path.getInputStream())  * TemplateExpansionAction
(calls Path.getInputStream())  * SymlinkAction
(calls
Path.(isFile|isExecutable|createSymbolicLink)())
* SolibSymlinkAction (calls
Path.createSymbolicLink())  For Starlark actions
we found that only
ctx.actions.expand_template(...) directly
interacts with the file system (via
TemplateExpansionAction). All other methods on
ctx.actions create spawns internally which are
covered by d480c5f.  Progress towards #6862.  [1] 
https://github.com/bazelbuild/bazel/commit/d480c5f
5a4f38a4053ed3e3bcc4eaef343923d2d  Closes #7926.
PiperOrigin-RevId: 241717157
",600029,5385,232343,"buchgr","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1511","bazelbuild/bazel","59a88646fa6116f582e768aede0505798ac61f93",1,"2019-04-03 08:57:32-07:00","Add error-prone annotations to format strings in
LocalSpawnRunner  Add proper annotations for
string parameters and standardize the logging
methods to comply with StringFormat convention for
parameters. Refactor callers to the logging
methods to properly order parameters and delegate
string formatting to the log methods.  RELNOTES:
none. PiperOrigin-RevId: 241740728
",600122,5385,232350,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1512","bazelbuild/bazel","b3b3e8bb7320ef76dfec97f66284e0a9f7eda2d2",10,"2019-04-03 09:18:42-07:00","Convert uses of RuleTransitionFactory to
TransitionFactory.  Part of #7814.  Closes #7922.
PiperOrigin-RevId: 241744479
",600077,5383,232296,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1513","bazelbuild/bazel","21b759ddf52f6f752637420e710b64eb070c1e1c",2,"2019-04-03 10:57:09-07:00","Fix setting default values for Pattern options
Options in bazel can have default values assigned
to them, which are validated against allowed
values. We have a bug where restricting the
possible values of a Pattern will break the
default value. It happens because we create
Pattern objects, which use the default (by
reference) implementation of equals. This violates
the contract used by bazel converters that options
created from the same representation will return
true if compared using corresponding equals
method.  Create a wrapper around Pattern which
implements proper equals (compliant with the
contract). Also, specify the contract in Converter
to explicitly state the assumptions and add tests
covering the RegexPatternConverter and the
problematic scenario from the bug.  RELNOTES:
none. PiperOrigin-RevId: 241764234
",600152,5385,232335,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1514","bazelbuild/bazel","256be11d763582adaf04a9aa5ddb714479d302ca",2,"2019-04-05 05:42:01-07:00","Remove Executor.getEventHandler  The only use in
production code was SkyframeActionExecutor, which
also has access to the Reporter, which is always
the same reference.  Also remove some unused code
in BlazeExecutor.  PiperOrigin-RevId: 242110713
",600079,5385,232273,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1515","bazelbuild/bazel","cdfa9ca735808ad42429c47922f11d8fb2d94179",5,"2019-04-05 12:32:09-07:00","Rename ToolchainContext to
ResolvedToolchainContext.  Part of work on
execution transitions, #7935.  Closes #7960.
PiperOrigin-RevId: 242172690
",600065,5386,232281,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1516","bazelbuild/bazel","63534fafbcf9bd1d4d6445c5e7144b98c7163f7a",2,"2019-04-09 10:13:30-07:00","Enable evaluators to use specialized
EvaluationProgressReceiver instances  Refactor the
code to allow inheritance hierarchy of the
progress receivers:   - Move
CompoundEvaluationProgressReceiver delegating
logic to a different     class to allow inheriting
it without picking up static methods (like 'of')
- Introduce factory methods in the tests to create
the progress receivers   - Move the logic
injecting interruptions in tests to the
TrackingProgressReceiver instead of creating
anonymous classes in the tests  RELNOTES: None.
PiperOrigin-RevId: 242689840
",600905,5392,232483,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1517","bazelbuild/bazel","ecf247746372861590aa327945dd6ee3d80c041d",1,"2019-04-09 13:55:25-07:00","Add additional trimmable test rules for toolchains
and platforms.  Progress on #6524.  PiperOrigin-
RevId: 242733707
",601027,5392,232485,"mstaib","mstaib@google.com","Copybara-Service","copybara-worker@google.com"
"1518","bazelbuild/bazel","7b2cb35d3499ead907df60df1dd1fbae9e74f0b3",1,"2019-04-09 14:01:44-07:00","Create instances of SequencedSkyframeExecutor
through Builder.  Allows addition of the new
arguments to SequencedSkyframeExecutor constructor
without the need to modify all the places, where
SequencedSkyframeExecutor is constructed (if the
default value can be provided for the new argument
in Builder).  PiperOrigin-RevId: 242734996
",601006,5392,232494,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1519","bazelbuild/bazel","0b03a28701d297c9ffe976c54580ceff32eec1b7",2,"2019-04-10 01:41:20-07:00","C++: Bazel compile/link API  Introduces the C++
Starlark API to Bazel after discussion in https://
docs.google.com/document/d/1cRRdHOPTTUXBbq9Cj9hk_W
LnPqsGtAoQynYd7TKBQI8/edit.  This includes an
integration test and will be followed by more
integration tests for Objective-C as well as unit
tests.  RELNOTES:Bazel C++ compile/link Starlark
API. Can be used with experimental flag --experime
ntal_cc_skylark_api_enabled_packages=<package_path
>,<package_path2>. PiperOrigin-RevId: 242825783
",601396,5392,232516,"plf","plf@google.com","Copybara-Service","copybara-worker@google.com"
"1520","bazelbuild/bazel","0659e101c02d6ecc798e0319ee9c75eef755d077",1,"2019-04-10 10:39:18-07:00","Make java_toolchain.javac optional  it has been
subsumed by java_toolchain.tools, which is
necessary to support modularized javacs.
PiperOrigin-RevId: 242896662
",601557,5394,232566,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1521","bazelbuild/bazel","16af94c749b21a96585e6c3e8a3704fb850ff86d",2,"2019-04-16 07:44:34-07:00","Make sandbox symlink forest deletions
asynchronous.  Each sandbox action runs within a
symlink forest that exists in a separate subtree
because we use a unique identifier for those
subtrees.  Therefore it is unnecessary to delete
those trees in the critical path.  Tree deletions
can be very expensive, especially on macOS, so
make them asynchronous if --experimental_sandbox_a
sync_tree_delete_idle_threads is given.  When this
flag is not zero, Bazel will schedule all
deletions on a separate low-priority thread while
the build is running, and will then use the
requested number of threads once the build is done
to quickly catch up with an still-ongoing
deletions.  For a large iOS build, this cuts down
clean build times with sandboxed enabled
significantly.  Helps more on machines with more
cores:  * On a Mac Pro 2013, the improvement is
almost 20%:    standalone:      mean 2746.33,
median 2736.00, stddev 33.07   sandboxed-async:
mean 4394.67, median 4393.00, stddev 33.09
sandboxed-sync:  mean 5284.33, median 5288.00,
stddev 20.17  * On a MacBook Pro 2015, we see a
more modest 10% improvement:    standalone:
mean 3418.33, median 3422.00, stddev 7.41
sandboxed-async: mean 5090.00, median 5086.00,
stddev 40.92   sandboxed-sync:  mean 5694.67,
median 5700.00, stddev 37.75  Partially addresses
https://github.com/bazelbuild/bazel/issues/7527.
RELNOTES: None. PiperOrigin-RevId: 243805556
",602134,5397,232740,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1522","bazelbuild/bazel","a3df53c93d1ee65bbec3c3c77ddb5bd6c16c214c",8,"2019-04-16 11:15:28-07:00","Rename ToolchainResolutionFunction to
SingleToolchainResolutionFunction.  Part of work
on execution transitions, #7935.  Closes #8065.
PiperOrigin-RevId: 243843398
",602239,5398,232765,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1523","bazelbuild/bazel","8ca57bf602ab2d23f5d56d0e7e8c262d97392192",1,"2019-04-16 12:28:13-07:00","Add @FormatMethod to fix error prone warning.
PiperOrigin-RevId: 243857123
",602228,5398,232764,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1524","bazelbuild/bazel","fddc3fd7173d2d30964d5e3ff527aa3d2e2edae6",2,"2019-04-16 14:59:32-07:00","Mark the context parameter nullable in
NotifyingHelper.Listener#accept  For the
ADD_REVERSE_DEP type (amongst others), context may
be null.  Drive-by cleanup of one location where
Listener.NULL_LISTENER could be used.  RELNOTES:
None. PiperOrigin-RevId: 243885677
",602750,5399,232792,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1525","bazelbuild/bazel","375f72b29ab28db3df093531b978c4370b059d54",3,"2019-04-18 14:29:04-07:00","Add safety checks for toolchain resolution in
preparation for trimming.  Trimming has to make
assumptions about what configuration is used in
the process of calculating toolchains. These
checks enforce those assumptions.  Progress on
#6524.  PiperOrigin-RevId: 244258819
",602041,5394,232440,"mstaib","mstaib@google.com","Copybara-Service","copybara-worker@google.com"
"1526","bazelbuild/bazel","77a49629255d4e6f749f9082dfcbec5baa870113",1,"2019-04-19 07:23:33-07:00","Convert ToolchainResolver to
ToolchainResolutionFunction.  Part of work on
execution transitions, #7935.  Closes #8070.
PiperOrigin-RevId: 244355735
",602725,5396,232525,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1527","bazelbuild/bazel","6ca40212f660c176086f53ec4548eba8f617e574",1,"2019-04-19 08:31:23-07:00","Gracefully handle if Windows DEF-file-specific
cc_<rule> attributes are missing.  PiperOrigin-
RevId: 244362486
",602756,5396,232528,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1528","bazelbuild/bazel","f94418141145c7524b08a1ed77c16fe7ee6f4d1f",1,"2019-04-22 13:04:42-07:00","Ensure grep-includes can write to its output file
by deleting it upfront.  The include scanner
deletes existing output files before running grep-
includes, but only did so for outputs that were
generated when scanning the includes of files from
the source tree -- not for source files generated
during the build.  Make this happen now in all
cases.  The cleanup is necessary in all cases
because, when grep-includes runs remotely, we
download its output into a file and set its
permissions to 555. If we happen to run this same
action locally at a later time, the local run may
not be able to overwrite the local file and we
fail the build.  This should fix random build
failures during include scanning observed when
using the dynamic scheduler without local
sandboxing in Google-internal builds.  Addresses
https://github.com/bazelbuild/bazel/issues/7818.
RELNOTES: None. PiperOrigin-RevId: 244718195
",602842,5396,232587,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1529","bazelbuild/bazel","61b1dff25da44e3b2819c2c01116353a7e553a70",2,"2019-04-23 09:20:45-07:00","Consolidate key-caching logic in an abstract
class.  This way all actions and action templates
can share the same key-caching code.  RELNOTES:
None. PiperOrigin-RevId: 244866405
",603356,5397,232666,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1530","bazelbuild/bazel","ad410b12e6e8ef6b1808e7b7515d34e4a2e42428",1,"2019-04-23 17:23:02-07:00","Add a TrimmedConfigurationProgressReceiver.  This
will be used to monitor Skyframe changes so that
the trimming cache can be updated accordingly.
Progress on #6524.  PiperOrigin-RevId: 244956343
",603156,5401,232718,"mstaib","mstaib@google.com","Copybara-Service","copybara-worker@google.com"
"1531","bazelbuild/bazel","6ddc6229812c9da7477a69399b1e61c3d176494e",1,"2019-04-24 17:28:05-07:00","Cache a soft reference to the reconstituted
BuildOptions in OptionsDiffForReconstruction.
This makes it so that applyDiff usually does no
work and also reduces garbage creation.  Although
I do not think the results of applyDiff are
currently being compared with equals/hashCode
anywhere, this also prevents expensive re-
initialization of fingerprint/hashCode if they
ever are.  PiperOrigin-RevId: 245148847
",603401,5401,232747,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1532","bazelbuild/bazel","68a27443901b98916052d9fd5b378c89a4110f36",1,"2019-04-25 11:15:08-07:00","Add GET_BATCH as a listenable event for
NotifyingHelper.  PiperOrigin-RevId: 245271451
",603523,5402,232761,"shreyax","shreyax@google.com","Copybara-Service","copybara-worker@google.com"
"1533","bazelbuild/bazel","e1aecda8ba2fba62b87eb0380700d2b8ec0d0897",1,"2019-04-26 15:53:13-07:00","Add the ToolchainContext to
AttributeTransitionData.  Part of work on
execution transitions, #7935.  Closes #8166.
PiperOrigin-RevId: 245501815
",603805,5402,232851,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1534","bazelbuild/bazel","6b08ff13732e70d9f0eec81eaaddfd22fa0b061b",2,"2019-05-02 01:35:41-07:00","Windows, testing: only look up shell if needed
TestActionBuilder now only looks up the shell (via
ShToolchain.getPathOrError) when the shell is
required.  Now, when using the Windows-native test
wrapper with --shell_toolchain="""" (and without a
shell-command-looking --run_under argument) the
TestActionBuilder won't depend on Bash.  Related:
https://github.com/bazelbuild/bazel/issues/4319
Closes #8161.  PiperOrigin-RevId: 246275913
",604314,5409,232842,"Laszlo Csomor","laszlocsomor@google.com","Copybara-Service","copybara-worker@google.com"
"1535","bazelbuild/bazel","2291342e0ecb19ef8bb7915e90708cf548294e56",2,"2019-05-02 12:42:20-07:00","Add managed directories to
RepositoryDirectoryValue.  - This is only a part
of managed directories feature, still not
complete. - In this part the link between
WorkspaceFileListener and Bazel-specific
structures is to be seen. - Class
ManagedDirectoriesKnowledgeImpl obviously contains
logic, needed for the future, not existing yet
functionality, but if I only keep the currently
needed part, it will not be clear why we need a
separate wrapper class at all.  - Keep
precalculated (by SequencedSkyframeExecutor) value
of managed directories in the holder object,
created by BazelRepositoryModule and available to
all interested parties (repository dirty checker,
RepositoryDelegatorFunction). - Managed
directories are part of the external repository
definition. When the set of managed directories
for a repository change, repository should be
considered dirty. Repository dirty checker is
changed to support that. - When the set of managed
directories for a repository change, also the
computed repository digest value should change.
Add managed directories paths fragments to the
digest. - Add tests for both dirty checker and
digest calculation.  PiperOrigin-RevId: 246370690
",604998,5412,232949,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1536","bazelbuild/bazel","ba4862d49333e9f50470b9d5a266ffd40c9cd2cc",16,"2019-05-03 06:13:23-07:00","Make files and directories under managed
directories be correctly processed by
SequencedSkyframeExecutor.  TL;DR - two main
changes: how to invalidate changed managed
directories files, and how to force owning
external repository to be evaluated before managed
directories files.  - In ExternalFilesHelper,
introduce one more file type -
EXTERNAL_REPO_IN_USER_DIRECTORY, for the files
under managed directories. - For files under
managed directories, require owning
RepositoryDirectoryValue to be evaluated first. -
For correct dirtying of files under managed
directories, both with watchfs flag and without,
the following should be taken into account: not
only that new values for external repositories and
managed directories files can not be injected at
the stage of dirtying, but also files that used to
be under managed directories on the previous
evaluator invocation. The latter are still cached
in evaluator, and the fact that they used to
depend on their RepositoryDirectory values would
prevent injection of the new values for them. To
meet those conditions, in
SequencedSkyframeExecutor.handleChangedFiles()
filtering of the going-to-be-injected files is
added. (The change can not be done inside
ExternalDirtinessChecker only, as then it does not
affect watchfs=true case). -
ManagedDirectoriesBlackBoxTest added to
demonstrate and validate the functionality of
managed directories.  PiperOrigin-RevId: 246496823
",605476,5414,233080,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1537","bazelbuild/bazel","b5018131b584e3605941924f7d41e3fb9a704cee",5,"2019-05-03 13:41:42-07:00","Cache fingerprint of bitcode files for
LtoBackendAction.  This greatly speeds up action
key computation since many actions share the same
bitcode files.  PiperOrigin-RevId: 246565641
",605124,5415,233068,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1538","bazelbuild/bazel","1bfba46d110de105cb97bd5369f726025a05776e",2,"2019-05-06 10:48:14-07:00","Add the execution transition factory.  Part of
work on execution transitions, #7935.  Closes
#8242.  PiperOrigin-RevId: 246854462
",605410,5416,233078,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1539","bazelbuild/bazel","45bfa27cd948f7520343f94632f424a96ec662e3",1,"2019-05-06 12:19:13-07:00","Make TransitiveOptionDetails aware of Starlark
options  RELNOTES: None. PiperOrigin-RevId:
246873184
",605435,5416,233084,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-worker@google.com"
"1540","bazelbuild/bazel","291678da47d495fc31ae22eea32165b3dc7b2b20",21,"2019-05-07 06:50:58-07:00","Fork Guava's CompactHashMap into Bazel as it is
not public in Guava. CompactHashMap can
substantially reduce runtime and especially
generated garbage in various places.  RELNOTES:
None. PiperOrigin-RevId: 247011181
",605784,5417,233207,"djasper","djasper@google.com","Copybara-Service","copybara-worker@google.com"
"1541","bazelbuild/bazel","a91495f52dce0cf7d274519d5107691d1c8dc052",2,"2019-05-07 07:27:39-07:00","lib.query2 organizational cleanup  This just
changes  query2/  to  query2/   # Code common to
query, cquery, aquery   aquery/ # aquery-specific
code   query/  # query-specific code   cquery/ #
cquery-specific code  Lots of files reference each
other so it's a huge change, but conceptually
shallow.  This isn't perfect. Some classes
probably aren't in the right place. Some should
probably be refactored into their command-specific
vs. generic parts. And it'd be nice to separate
cquery, query, and aquery into independent BUILD
libraries. But BUILD refactoring makes this 10x
worse and as-is I think this makes navigation
easier.  PiperOrigin-RevId: 247015827
",605798,5417,233202,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1542","bazelbuild/bazel","2affaeb455b9e3c154ba1e4b3e342223e49b6cf1",1,"2019-05-08 08:48:13-07:00","Move closeSuppressed to TestStrategy for reuse
PiperOrigin-RevId: 247220750
",605858,5417,233219,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1543","bazelbuild/bazel","731451f4923b035480b154c678627eeebae15ba3",1,"2019-05-09 04:30:35-07:00","Remove TargetMarkerFunction  It was only used by
TransitiveBaseTraversalFunction, to which I moved
the error handling code that was previously in
TargetMarkerFunction.  We see significantly faster
deps() queries in some cases (~20%).  PiperOrigin-
RevId: 247399011
",604845,5407,232679,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1544","bazelbuild/bazel","ae112a2b013c0601fb8f164c7f24d3d5b85fe00e",1,"2019-05-13 11:09:02-07:00","Make PlatformMappingFunction properly package-path
aware and do a couple of other clean-ups:  * Make
exceptions thrown because of I/O errors transient,
since this SkyFunction is the one responsible for
them.  * Add #equals and #hashCode for
PlatformMappingsValue (and #toString). This way, a
change in the file that doesn't affect the value
of the PlatformMappingValue will be change-pruned.
Fixes #8288.  PiperOrigin-RevId: 247971816
",604478,5396,232298,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1545","bazelbuild/bazel","a45a8e0ef8f4f02ecc1c5ed1a84adf370c38f472",2,"2019-05-13 11:17:02-07:00","Add a generic additional_linker_inputs attribute
on cc_binary rules.  This can be used to provide
additional inputs that can be referenced by
$(location) in linkopts.  RELNOTES: Add a generic
additional_linker_inputs attribute on cc_binary
rules. PiperOrigin-RevId: 247973418
",604509,5396,232309,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1546","bazelbuild/bazel","d990a0a8cae0245c2f6407b4ebcdf3e48a30d98a",1,"2019-05-13 16:46:42-07:00","BuildEventStreamer supports status INCOMPLETE
(--nokeep_going) and INTERNAL (catastrophe)    -
Add and Report AbortReason.INCOMPLETE when the
build is incomplete due to an earlier build
failure (--nokeep_going).   - Report
AbortReason.INTERNAL when the build is incomplete
due to a catastrophic failure.   - If multiple
BuildEventStreamer AbortReasons are reported then
the last one wins (no change), but all reasons are
reported the Aborted event description (new
behavior).  RELNOTES: none  PiperOrigin-RevId:
248037389
",604723,5396,232336,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1547","bazelbuild/bazel","c96839f6971bda5901b40331902edfa461869879",1,"2019-05-15 04:49:40-07:00","Query performance: resolve simple patterns
directly  Instead of depending on the
TargetPatternFunction for simple patterns, depend
directly on the PackageValue and use that to
resolve the targets outside of Skyframe.  The
problem with TPF is that it returns labels rather
than targets, so query has to turn the labels back
to targets in order to be able to process the
results.  For a synthetic benchmark, we're seeing
a significant improvement in performance.  Before:
Cold 0m18.469s Hot   0m6.045s  After: Cold
0m15.778s Hot   0m4.892s PiperOrigin-RevId:
248311593
",604831,5395,232314,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1548","bazelbuild/bazel","7e29573dbcc77e7362174c6a4a551a21a26baa0b",1,"2019-05-15 19:28:39-07:00","Fix STORED / DEFLATED for Android resources in
ResourceProcessorBusyBox.  RELNOTES: None
PiperOrigin-RevId: 248452521
",604911,5395,232324,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1549","bazelbuild/bazel","407d3933e33b59bbd0a20fc254abecfa90c54608",2,"2019-05-16 15:13:59-07:00","Refactor interruptible suppliers into a library
package.  These suppliers can exist in
lib/supplier since they contain no bazel-specific
logic.  PiperOrigin-RevId: 248609626
",605057,5397,232366,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1550","bazelbuild/bazel","cc7da0bae4c277851c5713e2d48bb0b0bbbfd985",1,"2019-05-17 09:35:23-07:00","BES: Report upload wait time afterwards  It might
be nicer to tell the user that we're going to
wait, but that is not currently possible. Instead,
tell the user that Bazel waited for upload to
complete for a certain amount of time.
PiperOrigin-RevId: 248734881
",605176,5398,232429,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1551","bazelbuild/bazel","004099d17e92a09dc4f7c920e6d54bbe2e67d3fb",4,"2019-05-17 11:21:59-07:00","Update toolchain resolution to load requested
toolchain types.  This allows Bazel to validate
toolchain types earleir, and to deal with aliases
to toolchain types.  Fixes #7404.  Closes #8381.
PiperOrigin-RevId: 248755418
",605508,5400,232530,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1552","bazelbuild/bazel","bdb3e97c47188ed4e5b472a3b7393e9588c93011",1,"2019-05-18 13:14:09-07:00","Don't register import deps checker actions if
--experimental_import_deps_checker is off  Fixes
#8340  Closes #8341.  PiperOrigin-RevId: 248883983
",605584,5400,232543,"Jingwen Chen","jingwen@google.com","Copybara-Service","copybara-worker@google.com"
"1553","bazelbuild/bazel","4d62d74b645d3af31840593cd490398cee0d91ae",1,"2019-05-20 03:19:03-07:00","RepositoryCache: support ""canonical id""  Make the
repository cache support the concept of a
canonical id, i.e., files are not considered a
cache, just because they have the correct content,
if a different canonical id is specified.  Design
document: https://github.com/bazelbuild/proposals/
blob/master/designs/2019-04-29-cache.md  Related
#5144.  Change-Id:
Ie4e4cef14a5810f73add26ca8b97ce7aeb18b6e3
PiperOrigin-RevId: 249017336
",605594,5400,232542,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-worker@google.com"
"1554","bazelbuild/bazel","f1148fd0f30391d1d25341c4869e6eb521219444",2,"2019-05-20 06:01:29-07:00","Generalize EvictableSupplier and move it to the
suppliers package.  Added unit tests.
PiperOrigin-RevId: 249033345
",605803,5403,232623,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1555","bazelbuild/bazel","2358946a8828de952aaa7ca7850feac48f4d17db",1,"2019-05-20 08:51:24-07:00","Convert AttributeTransitionData to use a Builder.
PiperOrigin-RevId: 249057540
",605843,5403,232651,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1556","bazelbuild/bazel","acf55d80a5897e5069d11366c7e42e7130c1f3ba",1,"2019-05-21 09:49:58-07:00","Have BES uploads fail gracefully if the BES is not
reachable due to bad network connection.
PiperOrigin-RevId: 249268815
",605909,5403,232681,"steinman","steinman@google.com","Copybara-Service","copybara-worker@google.com"
"1557","bazelbuild/bazel","0cda991d6489c0d0e6d7ddf1fe25179b301108bb",1,"2019-05-23 14:07:58-07:00","Use a double check in getKey instead of
synchronizing every call.  RELNOTES: None.
PiperOrigin-RevId: 249711891
",606033,5403,232634,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1558","bazelbuild/bazel","4ca73e4d9ce28b6798df274d5a81598bdb9696b5",1,"2019-05-23 16:58:17-07:00","Add a flag  PiperOrigin-RevId: 249742592
",606045,5403,232639,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1559","bazelbuild/bazel","658d47f41ca6df7f6739f77b2f1bb615e61811c1",6,"2019-05-29 11:11:30-07:00","Change signatures to DerivedArtifact, and get
Labels from non-Artifact sources when possible.
In tests, try to get artifacts directly from the
actual configured target, rather than creating
fresh ones.  This change should be a prod
functional no-op, just changing signatures. Split
out from the follow-up to reduce the diff.
PiperOrigin-RevId: 250527865
",606987,5406,232733,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1560","bazelbuild/bazel","9dd7e8ed7931274b0c5b791e1c076140dcf7b74f",1,"2019-05-29 13:57:16-07:00","Put ActionLookupData inside DerivedArtifact, and
move ArtifactOwner into SourceArtifact.
ActionLookupData is set inside a DerivedArtifact
at ConfiguredTarget creation time. In particular,
it is now mutable. This means that it is no longer
safe to call #getArtifactOwner, #getOwnerLabel,
etc. on an artifact if it was created by the
configured target that is currently being
analyzed.  This allows all callers that were
indirectly getting the ActionLookupData via
retrieving an ActionLookupKey from the graph to
just use it directly. For now, don't actually do
very much with this new power. In particular,
don't change ArtifactFunction to avoid that
lookup.  In a follow-up, ActionExecutionFunction
will stop requesting ArtifactValues for normal
output artifacts, instead requesting
ActionExecutionValues directly, thus avoiding the
memory and CPU of creating ArtifactValues for the
vast majority of artifacts.  Will also remove
ArtifactOwner from
ArtifactFactory#getDerivedArtifact in a follow-up.
PiperOrigin-RevId: 250560440
",607008,5406,232739,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1561","bazelbuild/bazel","92a872b4117de3937d7535976a387e8be4ca1f57",1,"2019-06-03 02:30:12-07:00","Query: new ""graphless"" implementation  This is the
initial commit of a new query implementation that
does not copy parts of the graph into a Digraph
instance. Initially, this only works for unordered
output.  This is significantly faster than the
current implementation, especially for use cases
where the caller only wants to dump package
information, e.g., bazel query <package>:*, which
are commonly done by tools that want to work with
packages but do not use any advanced query
functionality.  PiperOrigin-RevId: 251191861
",608146,5414,232969,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1562","bazelbuild/bazel","477d965a3b6c8ffaf0d43367ff258593d7d07e38",3,"2019-06-05 13:40:21-07:00","Manual trimming: trim all feature flags from
toolchain deps.  This is a performance
optimization following up on https://bazel-
review.googlesource.com/c/bazel/+/101952.  That
change reduced the number of BuildOptions hash key
computations on a simple manually trimming
android_binary build from 809 to 475, compared to
138 when manual trimming is disabled (--enforce_tr
ansitive_configs_for_config_feature_flag=false).
But I wanted to dig further into the remaining
(+337) difference.  Profiling showed most of these
were deps on platform and toolchain rules. For
example, transitions from
@bazel_tools//platforms:[host|target]_platform to
their constituent constraint_values accounted for
192 of the difference. Transitions from toolchain
rules to their deps made up most of the rest.
This highlights the following inefficiency in the
intersection of manual trimming and toolchain
resolution:  Given ""rule -> unloaded toolchain
context -> all toolchains and platforms and their
dependencies"", the current logic uses the rule's
configuration for the toolchain context and top-
level platform/toolchain definitions. If this
happens when ""rule"" is an android_binary setting
transitive_configs, this means those definitions
inherit its feature flags in *their* configs.
Then *their* deps, which don't use feature flags,
go through the standard manual trimming
transition, which removes those flags which
requires new BuildOptions for each one.  In other
words:   <@bazel_tools//platforms:target_platform,
featureFlags=[foo, bar]>     -->
<some_platform_constraint1, featureFlags=[]>   #
Remove flags: creates a new BuildOptions     -->
<some_platform_constraint2, featureFlags=[]>   #
Remove flags: creates a new BuildOptions     -->
<some_platform_constraint3, featureFlags=[]>   #
Remove flags: creates a new BuildOptions     ...
and so on.  There's no need to do that for all
those dependencies. Instead, we can apply the
transition directly on the ""rule -> unloaded
toolchain context"" dependency, of which there's
only one. As long as toolchains and platforms
don't actually need feature flags (which they
shouldn't), this is safe.  So this PR does that.
With that change, we get:  Manual trimming
disabled: ----------------------------------------
---------------------------------- BuildOptions
hashkey calls:
137 ConfigurationResolver transition.apply()
calls:                                   447
Manual trimming calls creating a new BuildOptions
instance:                       0
ConfiguredTargetFunction total deps evaluated:
442,617 ConfiguredTargetFunction non-trivial (not
NOOP, NULL, Transition) deps evaluated: 1,419
ConfiguredTargetFunction non-trivial
transition.apply calls:                      445
Manual trimming enabled, before this change: -----
--------------------------------------------------
------------------- BuildOptions hashkey calls:
494 ConfigurationResolver transition.apply()
calls:                                   588
Manual trimming calls creating a new BuildOptions
instance:                       227
ConfiguredTargetFunction total deps evaluated:
443,126 ConfiguredTargetFunction non-trivial (not
NOOP, NULL, Transition) deps evaluated: 1,932
ConfiguredTargetFunction non-trivial
transition.apply calls:                      586
Manual trimming enabled, after this change: ------
--------------------------------------------------
------------------ BuildOptions hashkey calls:
294 ConfigurationResolver transition.apply()
calls:                                   466
Manual trimming calls creating a new BuildOptions
instance:                       78
ConfiguredTargetFunction total deps evaluated:
438,699 ConfiguredTargetFunction non-trivial (not
NOOP, NULL, Transition) deps evaluated: 1,496
ConfiguredTargetFunction non-trivial
transition.apply calls:                      464
PiperOrigin-RevId: 251708695
",610210,5426,233484,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1563","bazelbuild/bazel","efb3f1595ee897484c477168b8da42b67602e10e",6,"2019-06-05 17:42:34-07:00","Automated rollback of commit
3290e22356b59371274849ee51297635b9435285.  ***
Reason for rollback ***  Rolling forward with fix:
keep passing artifact owner into generated
artifact, sacrificing a bit of type safety for
actual safety. This effectively reverts a few
files from the original CL.  Also fix memory
regression: key map of output file artifacts by
label, since we can reuse existing labels.
Moreover, this allows us to have an empty map for
many configured targets: a build of a large
internal target had the following numbers of
targets per # of output files (apologies for the
only partially sorted map):  {0=63649, 1=67148,
2=89175, 3=49347, 4=12712, 5=3027, 261=1, 6=247,
7=9, 775=1, 8=10, 9=82, 10=6, 11=3, 12=54, 13=4,
14=2, 15=24, 655=1, 271=2, 144=1, 17=2, 18=24,
276=1, 21=9, 3990=2, 24=18, 27=11, 156=3, 30=6,
31=2, 33=12, 34=1, 163=1, 36=5, 37=1, 38=2, 294=1,
39=5, 41=1, 42=3, 43=2, 45=9, 302=1, 47=1, 48=4,
561=1, 306=2, 54=2, 183=1, 57=1, 573=2, 318=2,
63=2, 65=1, 66=1, 198=1, 71=1, 72=2, 330=2, 75=2,
204=1, 76=1, 77=2, 80=1, 82=1, 84=3, 87=2, 346=2,
90=4, 480=1, 99=5, 102=1, 231=2, 363=1, 624=2,
117=1, 120=2, 123=2, 252=2}  So those are the
sizes of the maps that are actually needed. With
the regression fixed, this change actually has a
significant progression because we no longer
create a duplicate derived artifact (with
PathFragments, etc.) per
OutputFileConfiguredTarget. Moreover, we don't
need to keep a map with every artifact as keys
inside ActionLookupValue and RuleConfiguredTarget.
The only regression remaining is that we eagerly
create ActionLookupData objects for every
artifact, versus only on demand during execution.
That's not a major issue, and it's ameliorated by
no longer needing to intern ActionLookupData
objects, which has memory and CPU benefits. Total
memory diff for analysis of our large internal
target looks very nice (net -125M out of 5.88G, or
2% gain):   objsize  chg   instances       space
KB    class name ---------------------------------
---------------------       24   +0     1345958
31545 KB    com.google.devtools.build.lib.actions.
ActionLookupData       70   +0        -334
1992 KB    [Ljava.lang.Object;       16   +0
-19073        -298 KB    java.lang.Integer
40   +0      -12795        -499 KB
com.google.common.collect.SingletonImmutableBiMap
40   +0      -45433       -1774 KB    com.google.c
ommon.collect.MapMakerInternalMap$WeakKeyDummyValu
eEntry       32   -8           0       -1852 KB
com.google.devtools.build.lib.analysis.ConfiguredA
spect       24   +0      -79943       -1873 KB
com.google.common.collect.SingletonImmutableSet
24   +0      -79943       -1873 KB
com.google.common.collect.ImmutableEntry       40
+0      -61756       -2412 KB
com.google.common.collect.RegularImmutableMap
16   +0     -216644       -3385 KB
com.google.common.collect.RegularImmutableList
24   +0     -216650       -5077 KB    com.google.c
ommon.collect.ImmutableMapEntrySet$RegularEntrySet
44   -4      -61755       -7376 KB
[Ljava.util.Map$Entry;       44   -3      -61757
-7409 KB
[Lcom.google.common.collect.ImmutableMapEntry;
32   +0     -259112       -8097 KB    com.google.d
evtools.build.lib.actions.Artifact$DerivedArtifact
24   +0     -522911      -12255 KB
com.google.devtools.build.lib.vfs.PathFragment
24   +0     -525254      -12310 KB
java.lang.String       24   +0     -541285
-12686 KB    com.google.common.collect.ImmutableMa
pEntry$NonTerminalImmutableMapEntry       24   +0
-999865      -23434 KB
com.google.common.collect.ImmutableMapEntry
85   +0     -524326      -56276 KB    [B ---------
---------------------------------------------
total change:                -125514 KB
PiperOrigin-RevId: 251755552
",610310,5426,233494,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1564","bazelbuild/bazel","5a41a2f420c4fbab906e40f7bd879d0ede6bc2b4",1,"2019-06-06 02:27:28-07:00","IncludeScanner: use includePool on spawn
completion  Previously, the ListenableFuture
callback was running using a direct executor,
which means it gets run in the thread that
completes the remote spawn future. In some cases,
this may be a much smaller thread pool, which can
have a significant (negative) impact on build
performance.  Note that we primarily need to
decouple the callback attached to the remote spawn
future. Subsequent futures can use direct executor
if we're reasonably sure that the attached-to
future is already using the includePool and
there's no additional performance win due to
parallelism possible.  There is one problem here,
which is that we use a slack pool for include
scanning, which does not guarantee decoupling, as
it can reuse the caller thread if the pool is
fully used; this does not seem to be a performance
problem for the benchmark I tested.  With this
change, I see no significant performance
difference between the sync and async include
scanners.  PiperOrigin-RevId: 251812988
",610322,5426,233494,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1565","bazelbuild/bazel","12fc87cb670f93b09f50e3f4637e1a4fa740b111",1,"2019-06-07 11:33:41-07:00","Remove obsolete fields from
AndroidInstrumentationInfo.
AndroidInstrumentationInfo is used to access the
target/instrumentation app while ApkInfo is used
to access the test app.  RELNOTES: None
PiperOrigin-RevId: 252087467
",610506,5427,233568,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1566","bazelbuild/bazel","11f3b0ecafcc15fdf90ab80736afc0f959a95b38",2,"2019-06-07 17:12:06-07:00","Let artifacts declare that they use content-based
paths.  This is basic infrastructure for
supporting --experiment_output_paths=content. This
change does not implement any actual uses.  The
intention is that we can incrementally opt in
content-mapping support, i.e. rules can declare
which of their outputs should do content mapping.
The first test goal will be to opt in java_library
compilation.  ""Experimental Content-Based Output
Paths"" design: https://docs.google.com/document/d/
17snvmic26-QdGuwVw55Gl0oOufw9sCVuOAvHqGZJFr4/edit
See
https://github.com/bazelbuild/bazel/issues/8339
PiperOrigin-RevId: 252148134
",610598,5427,233621,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1567","bazelbuild/bazel","9ca0744b92035f236c98580a491722bda6a68fc3",1,"2019-06-10 09:18:14-07:00","Refactor UserDefinedFunctionInfo into a proto.
PiperOrigin-RevId: 252418282
",610593,5428,233626,"kendalllane","kendalllane@google.com","Copybara-Service","copybara-worker@google.com"
"1568","bazelbuild/bazel","8541f6d8ed512b6d64456a5d700761b78329f0b3",5,"2019-06-11 14:40:21-07:00","Use Artifact#getGeneratingActionKey to avoid
creating Artifact nodes in the graph for all
""normal"" generated artifacts.  Any generated
artifact that does not represent multiple other
artifacts (aggregating middleman and tree
artifacts are the exceptions) can be looked up
directly from the generating action's
ActionExecutionValue. The artifact's type gives a
conservative decision procedure for this: non-
middleman, non-tree generated artifacts are
definitely ok. Non-aggregating middlemen and tree
artifacts that are not produced by template
expansion are also ok, but knowing that requires
checking more data, so we continue to call into to
ArtifactFunction for those artifacts.  Saves
60/4100 post-execution heap on a medium-sized
build, or 1.5% of memory:  $ diffheap.pl
~/blaze/histo{_before,}.txt  objsize  chg
instances       space KB    class name -----------
-------------------------------------------
77   +0        -711        -735 KB    [B       32
+0      -43594       -1362 KB    com.google.devtoo
ls.build.lib.actions.FileArtifactValue$RegularFile
ArtifactValue       24   +0      -90829
-2128 KB    java.util.ArrayList      746 -173
-5       -9230 KB
[Ljava.util.concurrent.ConcurrentHashMap$Node;
32   +0     -309720       -9678 KB
java.util.concurrent.ConcurrentHashMap$Node
40   +0     -309641      -12095 KB    com.google.d
evtools.build.skyframe.InMemoryNodeEntry       90
+0     -400463      -26764 KB
[Ljava.lang.Object; ------------------------------
------------------------  total change:
-62092 KB  There are three main external changes
in this CL:  (1) Every consumer of Artifact
metadata must pass all artifacts through
ArtifactSkyKey#key and friends, since generated
artifacts' keys are no longer necessarily
themselves. This is something of a partial
rollback of https://github.com/bazelbuild/bazel/co
mmit/bf4123df23b5f93e572cd920f15afba340f92391
(originally unknown commit): see, for example, htt
ps://github.com/bazelbuild/bazel/commit/bf4123df23
b5f93e572cd920f15afba340f92391#diff-619984696e738a
6f3ccb9b3802ab7d90.  (2) Similarly every such
consumer must be prepared for the returned
SkyValue for an Artifact to be an
ActionExecutionValue, not a FileArtifactValue or
TreeArtifactValue. This means that the consumer
must iterate over the original list of Artifacts,
constructing each key on the fly, not the returned
map, since the returned map may not have any
indication of the original Artifacts. The
construction of some FileArtifactValues on the fly
here may slightly increase garbage (although not
in the Google-internal or common Bazel case, since
we store FileArtifactValues directly in
ActionExecutionValue there), but it should be
dominated by the memory savings. I'm hoping to
clean up ActionExecutionValues in a separate
change, so that we don't have this overlapping
data, although the garbage issue may still remain.
The main complication in (2) is in
ActionExecutionFunction, where we need to
construct keys for non-mandatory source artifacts.
(3) Action rewinding no longer needs to invalidate
ordinary generated Artifact nodes in the graph.
This simplifies the resulting graphs, but can
complicate the rewinding logic, since some
Artifacts will still have nodes while others
won't. Instead of tracking on the basis of
artifacts, we now track on the basis of actions
and artifacts.  While modifying
ActionRewindStrategy, I took the liberty of doing
some clean-ups: for instance, after https://github
.com/bazelbuild/bazel/commit/efb3f1595ee897484c477
168b8da42b67602e10e, the
HashMultimap<DerivedArtifact, ActionInput>
lostInputsByDepOwners was only using its values
for a check that was guaranteed to succeed, so I
just made it a set.  PiperOrigin-RevId: 252701678
",610771,5428,233643,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1569","bazelbuild/bazel","c9fbe95ef4b93dbf1c25e854b0c6bd82b81b387d",2,"2019-06-13 09:39:23-07:00","Fix two issues with incremental Skyframe hybrid
globbing and the 'allow_empty' param to the 'glob'
function  (1) Previously, the 'allow_empty=False'
enforcement was solely in legacy globbing. So on
incremental package evaluation where all the
GlobValue nodes already existed in the Skyframe
graph, we would not do any enforcement. This was
fixed by having by Skyframe globbing and legacy
globbing do enforcement.  (2) On incremental
package evaluation where all the GlobValue nodes
already existed in the Skyframe graph, we would
still call into legacy globbing with an empty list
of glob patterns. Legacy globbing would then error
out just as it does normally when a glob *include*
pattern matches a bunch of stuff, but then all the
matches are removed by an *exclude* pattern. This
was fixed by having Skyframe hybrid globbing only
call into legacy globbing if there is work to do.
I added a bunch of unit tests for various
incremental situations. I also added explicit unit
tests for 'allow_empty=True'. We were previous
missing all/some of this coverage, respectively.
Fixes #8517  RELNOTES: None PiperOrigin-RevId:
253046516
",609002,5414,233196,"nharmata","nharmata@google.com","Copybara-Service","copybara-worker@google.com"
"1570","bazelbuild/bazel","b63a4a9c8bf2b34c49127d372608ecfc8ef5a09e",1,"2019-06-14 12:05:18-07:00","Support Starlark transitions on aliased build
settings.  Transitions on configured 'actual'
values of aliased build settings is explicitly
denied for now pending more thought on what
configuration should be used to resolve those
selects. I expect this to be a super niche case so
I wouldn't be surprised if this feature was never
implemented.  PiperOrigin-RevId: 253271896
",609280,5415,233330,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-worker@google.com"
"1571","bazelbuild/bazel","ffad58728d850b465a070d25b037ea1bced0f91f",4,"2019-06-18 08:06:32-07:00","Remove all usages of
BlazeDirectories#(getExecRoot()|getOutputPath())
from Bazel  Bazel's execution root path looks as
follows: output_base/execroot/workspace_name. That
is one needs to know the workspace name when
constructing it. Bazel only knows the workspace
name after/during the loading phase however
BlazeDirectories is constructed before that. So
BlazeDirectories.getExecRoot() returns a path to a
folder that's not the exec root (it takes the name
of the directory that contains the WORKSPACE file
as the workspace name) and this leads to all kinds
of bugs as one can imagine.  Thus I removed all
calls to
BlazeDirectories.(getExecRoot()|getOutputPath())
in Bazel and replaced them with calls to
BlazeDirectories.getExecRoot(workspaceName).  What
this change does:  - All artifacts in Bazel agree
on one exec root.  - Bazel will no longer create
two execroot directories on disk.  - Renamed
getExecRoot to getBlazeExecRoot() and updated the
code to return null when called in Bazel in order
to prevent future wrong use of this method.  -
Resolved a TODO in BlazeDirectories where we had
code to support the workspace path being null.
RELNOTES: None. PiperOrigin-RevId: 253790673
",609507,5416,233373,"buchgr","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1572","bazelbuild/bazel","4569b2abda7c520229820fd548693397b2411358",1,"2019-07-09 06:04:29-07:00","register_{toolchains, execution_platforms}: honor
renaming  When handling the registration of
toolchains or execution platforms, take the
applicable renaming into account. This, in
particular, includes the renaming from the name of
the main workspace to the canonical '@'.  Fixes
#7773.  Change-Id:
I22fe84e337ad6d33df2a9263e6671e2e0d0a284d
PiperOrigin-RevId: 257176466
",611272,5425,233830,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-worker@google.com"
"1573","bazelbuild/bazel","f1e30f37bcf270ba4046b6feb9129f95eeb064ea",5,"2019-07-09 12:26:10-07:00","Update Fileset with the HasDigest interface.
RELNOTES: None PiperOrigin-RevId: 257247094
",611494,5428,233889,"felly","felly@google.com","Copybara-Service","copybara-worker@google.com"
"1574","bazelbuild/bazel","f6408d60c724b971ce684ece89b4000b54f81ccd",1,"2019-07-16 12:51:14-07:00","Optionally expand Fileset in BEP. When referenced
in top-level targets, we now show the expanded
Fileset in BEP when enabled.  RELNOTES: None
PiperOrigin-RevId: 258422325
",612222,5429,233903,"felly","felly@google.com","Copybara-Service","copybara-worker@google.com"
"1575","bazelbuild/bazel","6d63f8a1ad33490b97e60955277c4ebca40a4f48",2,"2019-07-17 07:55:43-07:00","Add (inactive) code to compress large GenQuery
results in memory on the fly  Dynamically switches
to gzipping GenQuery results >1M, trading CPU for
memory. Hard coded to off for now while I sort out
how to connect this to a flag.  PiperOrigin-RevId:
258568242
",612463,5429,233943,"michajlo","michajlo@google.com","Copybara-Service","copybara-worker@google.com"
"1576","bazelbuild/bazel","34784c3102f7aef6165353cc75fff1a7c57a9042",2,"2019-07-22 07:40:14-07:00","Make remote_download_outputs=toplevel work for
tests too  This introduces two new behaviours:  1)
bazel test //:foo_test downloads  bazel-
testlogs/foo_test/test.{log|xml}  2) bazel build
//:foo_test downloads bazel-bin/foo_test  Fixes
#8934  Closes #8947.  PiperOrigin-RevId: 259324522
",613552,5430,234045,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1577","bazelbuild/bazel","a73aadf582b40f8a7412d2894ae9a3600d803cae",4,"2019-07-22 18:48:40-07:00","Add ActionSketch as a basis for top-down action
caching.  RELNOTES: None PiperOrigin-RevId:
259451621
",613926,5434,234133,"felly","felly@google.com","Copybara-Service","copybara-worker@google.com"
"1578","bazelbuild/bazel","59a4f65d6fc0ef7025b4f8394ef2bae0bae5a172",5,"2019-07-24 09:07:11-07:00","Adding execProperties and inheritance logic to
PlatformInfo. This is not yet added to the API or
exposed externally  RELNOTES: None PiperOrigin-
RevId: 259752115
",614186,5436,234196,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1579","bazelbuild/bazel","812e6feb953e4b09976a7e67fa5f5b4376119eb5",1,"2019-07-25 07:50:55-07:00","Clean up FileArtifactValue a little:  - Rename the
overloads of create() to something more indicative
of their purpose - Remove the use of
ArtifactPathResolver by calling it from the single
call site - Assert that createForSourceArtifact()
is only called for proper source artifacts
RELNOTES: None. PiperOrigin-RevId: 259945500
",614450,5437,234228,"lberki","lberki@google.com","Copybara-Service","copybara-worker@google.com"
"1580","bazelbuild/bazel","9a141ce9f744f651c678a85e20e77f454cc15e3a",5,"2019-07-25 09:01:30-07:00","Rename Experimental{EventHandler,StateTracker}
These classes are now called
Ui{EventHandler,StateTracker}.  PiperOrigin-RevId:
259956164
",614549,5437,234223,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1581","bazelbuild/bazel","0b0f447c368fc3dd6f9c5bbde5dc69e65c1b7d5f",4,"2019-07-26 09:01:31-07:00","Changing SpawnLogContext to use the common
functionality. As a side effect, it will now
recognize remote_default_platform_properties
RELNOTES: Execution log now respects
--remote_default_platform_properties PiperOrigin-
RevId: 260153595
",614813,5437,234231,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1582","bazelbuild/bazel","ef015022c8721be17fb5df36b60bc7e7b04ca7e9",1,"2019-07-29 04:59:37-07:00","Tweaks to ArtifactFileMetadata so that it's more
understandable:  - Hide its FileStateValue (but
expose FileContentsProxy) - Do not pretend that
special files are regular files anymore - Refactor
the creation of ArtifactFileMetadata in
ActionMetadataHandler.fileMetadataFromArtifact()
so that it's clearer what happens to symlinks -
Add assertions about what kind of Artifacts cannot
give rise to ArtifactFileMetadata - Change its
Javadoc so that it's hopefully more informative
I'm still not convinced that ArtifactFileMetadata
and FileArtifactValue need to be separate classes,
but it's at least a bit nicer this way.  RELNOTES:
None. PiperOrigin-RevId: 260475139
",614885,5438,234254,"lberki","lberki@google.com","Copybara-Service","copybara-worker@google.com"
"1583","bazelbuild/bazel","f7eee1edc1f8dfc6d436894db2eb672bb11bc962",5,"2019-07-31 05:49:10-07:00","Remove ArtifactFileMetadata and replace it with
FileArtifactValue.  A harmful side effect is the
loss of the ""digest must be present"" assertion on
RegularFileArtifactValue. I'm not a fan of this,
however, in practice:  - There are other kinds of
FileArtifactValues and it's not clear whether they
are supposed to have digests or not - The
important invariant, that ActionExecutionValue
supplies a digest in all sane cases, is not upheld
at HEAD because ArtifactFileMetadata is not
guaranteed to contain one.  The game plan is to
re-instate that check when ActionExecutionValue is
constructed (somehow) after getting rid of the
PLACEHOLDER silliness, if possible.  In exchange,
however, we get a saner treatment of output
directories: before this change, we created
ArtifactFileMetadata instances for them even
though they were not, well, files.  RELNOTES:
None. PiperOrigin-RevId: 260909718
",614873,5439,234176,"lberki","lberki@google.com","Copybara-Service","copybara-worker@google.com"
"1584","bazelbuild/bazel","ae470e1190b81e9775045f5e36ff51c06e7f0718",1,"2019-07-31 05:56:58-07:00","Refactor CommandHelper.java  Extract language
specific functions to an interface.  Working
towards:
https://github.com/bazelbuild/bazel/issues/7503
Closes #9022.  PiperOrigin-RevId: 260910470
",614873,5441,234205,"Yun Peng","pcloudy@google.com","Copybara-Service","copybara-worker@google.com"
"1585","bazelbuild/bazel","c5c078cb60b2d11c8c17f993d9b10582ee984d5f",5,"2019-07-31 12:05:24-07:00","Introduce top-down action caching in Bazel. The
top-down cache may be provided by a Bazel module.
The cache works by first computing a _transitive_
cache key for the action, known as a sketch. It
composes the action keys for all dependent actions
and all transitive source file digest hashes.
This feature is not currently wired up for use -
consider it extremely experimental at this point.
RELNOTES: None PiperOrigin-RevId: 260973078
",615140,5444,234285,"felly","felly@google.com","Copybara-Service","copybara-worker@google.com"
"1586","bazelbuild/bazel","c35878a258d3c8a5305389aadd17ac0049defa15",6,"2019-08-01 02:28:54-07:00","Remove {OutputStore,ActionExecutionValue}.addition
alOutputData.  Instead of having another map, when
additional data is needed, replace artifactData
with it.  There was one place where we exploited
the difference between the two: for cases where we
get a digest from remote execution but one is not
available for the file system,
FilesystemValueChecker used only one map.  I fixed
this by adding a method to FileArtifactValue that
tells whether given two instances, Blaze should
assume that there was no change and replicated the
existing behavior as faithfully as possible.
RELNOTES: None. PiperOrigin-RevId: 261086332
",615220,5444,234215,"lberki","lberki@google.com","Copybara-Service","copybara-worker@google.com"
"1587","bazelbuild/bazel","d3bacfba3efef386bba80d7ff16c12c486165c4e",1,"2019-08-01 03:42:29-07:00","Add cmd_bash, cmd_ps, cmd_bat attributes to
genrule  Based on
https://github.com/bazelbuild/bazel/pull/9022
Users now can use Batch or Powershell command in
genrule on Windows. The attributes have the
following priority: `cmd_ps` > `cmd_bat` >
`cmd_bash` > `cmd`, but `cmd_ps` and `cmd_bat`
will only be taken into consideration on Windows.
Fixes #7503  Closes #9024.  PiperOrigin-RevId:
261093981
",615447,5447,234351,"Yun Peng","pcloudy@google.com","Copybara-Service","copybara-worker@google.com"
"1588","bazelbuild/bazel","9771a1a72c256d506547ae888344d45298debad5",1,"2019-08-08 13:41:24-07:00","Extract an ExtraActionInfoSupplier interface  to
reduce coupling between JavaCompilerAction and
JavaCompileActionBuilder.  PiperOrigin-RevId:
262423306
",616426,5454,234647,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1589","bazelbuild/bazel","985a34ad056977dbd5be0528c68834a24d40c0b6",1,"2019-08-09 01:51:15-07:00","Inject ResourceManager everywhere  This is in
preparation for async local execution, for which
we require a thread pool. My plan is to have the
thread pool be part of ResourceManager, and
injecting it avoids having a long-lived thread
pool in Bazel. Even if we didn't inject the RM,
we'd still have to inject the thread pool, so
might as well do it now.  PiperOrigin-RevId:
262519813
",616598,5454,234678,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1590","bazelbuild/bazel","c018f607c9b52d301841c4d0fd2d8771c711d299",12,"2019-08-12 14:44:34-07:00","Remove obsolete code for config splits  Bazel
support was never launched, and aapt1 is already
obsolete.  Most of the deleted logic
(SplitConfigurationFilter) deals with inferring a
split's configuration from its filename, but the
right way is to read this directly from its
manifest: * https://android.googlesource.com/platf
orm/frameworks/base/+/refs/tags/platform-
tools-29.0.2/tools/aapt2/cmd/Util.cpp#219
PiperOrigin-RevId: 263009083
",616482,5453,234515,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1591","bazelbuild/bazel","8eb1dbbdf62c143b479f198aa2387cbad5822c0d",2,"2019-08-14 18:37:09-07:00","Refactoring: include exec_properties as a separate
field in Spawn and change the code to use that
instead of the platform. This is in preparation
for target level execution properties (See https:/
/docs.google.com/document/d/1w3fu8zu_sRw_gK1dFAvkY
2suhbQQ82tc0zdjet-
dpCI/edit#heading=h.5mcn15i0e1ch)  RELNOTES: None
PiperOrigin-RevId: 263475469
",616995,5454,234549,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1592","bazelbuild/bazel","fa769d1096e23654fcaae85036f46d95921bde1f",1,"2019-08-16 15:46:51-07:00","Add ""android_resources_strict_deps"" feature  This
feature causes transitive dependencies to be
omitted when generating R classes to reduce the
total amount of Java bytecode.  RELNOTES: N/A
PiperOrigin-RevId: 263862540
",617127,5464,234687,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1593","bazelbuild/bazel","0961225b606d979b12d10a6b3302f1d669f3c9e5",6,"2019-08-19 13:19:27-07:00","Adds application_resources to android_binary to
allow injecting the resource apk to merge into the
final apk, instead of generating it within the
rule. Do not use this attribute: it's only for
facilitating migrating resource processing to
Starlark.  RELNOTES: None. PiperOrigin-RevId:
264226756
",617482,5466,234741,"ahumesky","ahumesky@google.com","Copybara-Service","copybara-worker@google.com"
"1594","bazelbuild/bazel","b5082465a16620085fae6184dcacc240b7467431",2,"2019-08-26 14:28:09-07:00","Targets can now be configured add exec_properties
on top of the platform's exec_properties See https
://docs.google.com/document/d/1w3fu8zu_sRw_gK1dFAv
kY2suhbQQ82tc0zdjet-
dpCI/edit#heading=h.5mcn15i0e1ch  RELNOTES:
introducing per-target exec_properties
PiperOrigin-RevId: 265540815
",617564,5469,234802,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1595","bazelbuild/bazel","50951dd3bf5bae023f21f62e76ed3d7863404263",3,"2019-08-27 19:18:30-07:00","Permit alternate implementations of the
SkyFunction used for
COLLECT_PACKAGES_UNDER_DIRECTORY.  Also add a few
simple unit tests for
COLLECT_PACKAGES_UNDER_DIRECTORY.  RELNOTES: None
PiperOrigin-RevId: 265818588
",618016,5475,234911,"nharmata","nharmata@google.com","Copybara-Service","copybara-worker@google.com"
"1596","bazelbuild/bazel","0ab85003e713f644aeb1913499b5f56487de7248",2,"2019-08-29 09:34:24-07:00","Add isBuildRunfileLinks() and
isRunfileLinksEnabled() to RunfilesSupplier  This
is to allow the local execution strategies to
query whether a runfiles tree should/may be
created during ""bazel test"".  PiperOrigin-RevId:
266159890
",617884,5475,234905,"buchgr","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1597","bazelbuild/bazel","dd0960b623ab09565ea230f1cad61d8d769d6904",4,"2019-08-29 16:34:53-07:00","Factor out visitation logic of label-entailed deps
into a common utility method.  The new common
utility method permits an arbitrary streaming
visitation, which allows us to maintain the
control flow of all the old implementations (as
opposed to, say, changing the control flow to be
""first compute direct label-entailed deps, then do
the business logic for each dep"").  RELNOTES: None
PiperOrigin-RevId: 266257815
",617874,5476,234941,"nharmata","nharmata@google.com","Copybara-Service","copybara-worker@google.com"
"1598","bazelbuild/bazel","20b056ae8506e489933cf236b9401cddad90afac",1,"2019-08-30 15:00:31-07:00","Expose source symlink planting to modules.  Emit
an event when ExecutionTool plants the source
symlink forest in execution root; modules may need
to be able to access to recreate the symlink
forest elsewhere later during the build process.
PiperOrigin-RevId: 266462555
",618413,5480,235029,"arostovtsev","arostovtsev@google.com","Copybara-Service","copybara-worker@google.com"
"1599","bazelbuild/bazel","403496540806f3f5404e20919202e28fb4b68f18",7,"2019-09-02 03:06:42-07:00","Refactor the sandbox spawn runners  - Move
statisticsPath into SandboxedSpawn - Unify all
implementations of actuallyExec, inline into exec
This requires some changes to
DockerSandboxedSpawnRunner that I'm not sure
about.  This is in preparation for merging local
and sandboxed execution into a single code path,
in order to make it easier to support async
execution.  PiperOrigin-RevId: 266748829
",618514,5481,235046,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1600","bazelbuild/bazel","d190bb1375aec0f3c4615d328b31fe15feb244d2",1,"2019-09-02 11:08:23-07:00","Support Bazel reduced classpaths in javac-turbine
PiperOrigin-RevId: 266801100
",618622,5481,235036,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1601","bazelbuild/bazel","120cd54c3cdb6e90470ffd3ff275531f776f54a8",2,"2019-09-04 01:50:44-07:00","Call FindMissingBlobs before BES artifact upload.
Fixes #8673, #7630  Bazel unconditionally uploads
files referenced by BEP events to the remote
cache. This change makes it so that Bazel calls
FindMissingBlobs() before uploading a file.  This
can significantly improve BES performance for when
files already exist remotely (i.e. when using
remote execution). The gains depend mostly on the
available network bandwidth and the size of the
outputs.  A side effect of this change is that it
also moves calls to potentially blocking
Path#getDigest() on the thread pool.  Closes
#9320.  Co-authored-by: Alexander Lyon
<alexander.lyon@codethink.co.uk> PiperOrigin-
RevId: 267107453
",618565,5483,235114,"buchgr","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1602","bazelbuild/bazel","a07100071b07390b4e33056d3acad79af45668f4",2,"2019-09-05 12:54:57-07:00","Use a canonical instance for an ActionSketch with
null hashes.  PiperOrigin-RevId: 267433084
",618598,5483,235112,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1603","bazelbuild/bazel","50fc35e52a2c514eb9ad810b96257010aac60f87",1,"2019-09-06 09:09:40-07:00","Fix lookup of output files to not consider the
target configuration.  The output file's
configuration may be different from the requesting
target's configuration due to transitions.
PiperOrigin-RevId: 267609866
",618611,5483,235112,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1604","bazelbuild/bazel","7c391ef06ee568c020ef5d47eacef6ff952dec45",1,"2019-09-09 16:42:45-07:00","Extract `aapt2 optimize` to a new action.
PiperOrigin-RevId: 268106770
",618585,5484,235146,"bcsf","bcsf@google.com","Copybara-Service","copybara-worker@google.com"
"1605","bazelbuild/bazel","ae29e8284a8c02f8a828fe8144e90b407869c0fa",2,"2019-09-12 08:33:04-07:00","Avoid complex logic in MockSpawnStrategy for
better readability.  Push the necessary logic
within each instance of the remote and local
strategies in each test to the tests themselves so
that they are self-contained.  This removes all
the conditional logic from the generic
MockSpawnStrategy, which was there to prevent code
duplication but made reasoning about each test
very difficult.  RELNOTES: None. PiperOrigin-
RevId: 268691053
",618973,5485,235245,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1606","bazelbuild/bazel","351e468ef7abef86de0671d8d6770bcb217ebc53",1,"2019-09-12 16:43:25-07:00","Add getParentDirectory to RootedPath.  Getting a
parent directory for a RootedPath is a common
pattern in our code, repeating in multiple places.
Add a method to RootedPath to facilitate that and
remove replace repeated code with calls to the new
method.  RELNOTES: None. PiperOrigin-RevId:
268795195
",619176,5485,235263,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1607","bazelbuild/bazel","3e5998755223ca0709d0819973ed2114b0f66d68",2,"2019-09-13 04:21:05-07:00","Blaze actions: add support for in-memory unused
inputs list (dependency pruning).  RELNOTES:
PiperOrigin-RevId: 268878533
",619287,5486,235282,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1608","bazelbuild/bazel","3740768a2f625e7b3310f69bcec47b5dd0898cf1",1,"2019-09-17 06:30:49-07:00","Avoid all configured targets depending on all
build infos  Instead, throw a MissingDepException
from CachingAnalysisEnvironment if the build info
is missing, and restart the analysis of that
configured target in the ConfiguredTargetFunction
if so.  This removes several Skyframe edges per
configured target, since most of them never
attempt to access the build info. For builds with
a few hundred thousand targets, that's several
million edges.  The build info Skyframe nodes are
the currently the nodes with the largest number of
reverse deps, which creates a bottleneck in
InMemoryNodeEntry.addReverseDepAndCheckIfDone
during analysis, causing significant lock
contention. In the builds we have looked at, this
was the second most common source of lock
contention.  However, we have not measured any
significant reduction in end-to-end build times.
There is already an injected key for the build
info factories, but it is never actually used,
which looks like an incomplete refactoring. This
change finishes that refactoring with the nice
benefit of removing the build info factories from
the SkyframeExecutor (doing so is a prerequisite
for allowing multiple concurrent executions in the
same SkyframeExecutor).  PiperOrigin-RevId:
269555110
",619320,5483,235196,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1609","bazelbuild/bazel","02c56438fa447df9e3fcc680d6ad53c6cbd52981",1,"2019-09-18 14:02:22-07:00","Try to bring some more clarity into
DynamicSpawnStrategyTest.  The tests derived from
strategyWaitsForBothSpawnsToFinish were really
difficult to understand due to the booleans passed
to this function and the various state checks
based on them. I haven't been able to eliminate
the booleans without a lot of code duplication,
but moving the logic to verify their impact on
execution to a per-test lambda makes things
slightly easier to reason about.  As part of the
reverse-engineering of what this is supposed to
do, this sprinkles comments throughout the tests
based on my understanding so far.  And while here
(which is the smaller thing that started this CL),
eliminate the booleans from the
strategyPropagatesException helper function.
These changes fix some pre-existing flakiness in
this test related to bad interrupt handling.
RELNOTES: None. PiperOrigin-RevId: 269885062
",619330,5484,235202,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1610","bazelbuild/bazel","935e0bb3ca02507ee0580842bbe21fe7c6974946",1,"2019-09-18 23:56:03-07:00","Wire up the resource optimization config file from
shrinker to optimizer.  This replaces the usage of
the AAPT2 ""whitelist"" which is going away due to
its ambiguous name and redundancy with this config
file.  PiperOrigin-RevId: 269972895
",619357,5484,235204,"bcsf","bcsf@google.com","Copybara-Service","copybara-worker@google.com"
"1611","bazelbuild/bazel","fd8b8e1e4d11ab26220404f4e66779a3eacf0e15",2,"2019-09-22 10:49:52-07:00","bazel syntax: delete
IfStatement.ConditionalStatements  An if/elif/else
chain is now represented using a new IfStatement
for each elif.  This reduces the number of public
declarations in the API.  PiperOrigin-RevId:
270551157
",619708,5487,235349,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1612","bazelbuild/bazel","8be3468c9b16ee8ec436628827f3443674b7b70d",3,"2019-09-23 11:31:14-07:00","bazel syntax: move Environment.callerLabel to
BazelStarlarkContext.analysisRuleLabel
BazelStarlarkContext is the application state
carried by each Starlark thread created by
Bazel/Blaze, and is thus the logical place to hold
this information.  The callerLabel field exists
only to support the legacy behavior of
Label(relative_to_caller_repository=True), which
causes a label string to be parsed relative to the
repository of the rule being analyzed; the default
behavior is to use repository of the file
containing the call to Label.  Aside: the
deprecated semantics are actually cleaner, since
they rely only on state---analysisRuleLabel---in
the Starlark thread. By contrast, the supported
semantics are more complex and subtle because they
rely on dynamic scope: in effect, they introspect
on the call stack and use the Label associated
with the topmost file. Dynamic scope has been
recognized as a mistake for over 50 years.  The
analysisRuleLabel field is set only for analysis-
phase (rule and aspect implementation) Starlark
threads, and is the label of the rule instance.
(Previously, setCallerLabel was done only for rule
implementation threads, not aspect threads, but I
suspect this was an oversight, so I made them
consistent.)  The motivation for this change is to
eliminate Environment.getCallerLabel, thus
breaking a dependency from Environment to Label.
Also: remove a use of getCallerLabel in the
android rules. I made it use ruleContext.getLabel,
which is consistent with other places in the
android rules. I suspect that someone grabbed this
function by mistake while blindly groping for
anything that would give them a Label.  Also:
remove obfuscating ""convenience"" constructor of
BazelStarlarkContext. It's much clearer to have
one constructor with lots of /*foo=*/null
arguments at each call than to have two or more
constructors that are hard to tell apart and
impossible to remember.  Also: document some of
the problems with the Label function.  Once
unknown commit is also submitted, we can delete
Environment.callerLabel.  PiperOrigin-RevId:
270722058
",619891,5487,235427,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1613","bazelbuild/bazel","a3421e204f22e478382bb8487b96df9dcd8e463a",3,"2019-09-26 06:48:32-07:00","bazel syntax: rename Environment -> StarlarkThread
The environment features are about to be removed.
This is inevitably a breaking API change (sorry
copybara).  PiperOrigin-RevId: 271339546
",619467,5484,235252,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1614","bazelbuild/bazel","b113f7d27d9bdd6bb5061192124f96a2c7793156",2,"2019-10-01 18:33:49-07:00","Add explicit plumbing for a ""validation artifact""
to AndroidResourcesInfo  This unblocks fixing a
bug in which the output of validation actions [1]
is used for creating the top-level [2]
resources.jar file.  Instead, the actions which
generate level-library [3] resource JARs should
dictate the contents of the top-level
resources.jar  The extra plumbing is needed to
allow running the validation actions in parallel
with the rest of the build if their outputs are
not needed for any other purpose.  [1] https://git
hub.com/bazelbuild/bazel/blob/1664d54293749a58d4db
dcf06c9c203de84f1ab1/src/main/java/com/google/devt
ools/build/lib/rules/android/AndroidResourceValida
torActionBuilder.java#L154 [2] https://github.com/
bazelbuild/bazel/blob/1664d54293749a58d4dbdcf06c9c
203de84f1ab1/src/main/java/com/google/devtools/bui
ld/lib/rules/android/RClassGeneratorActionBuilder.
java#L89 [3] https://github.com/bazelbuild/bazel/b
lob/1664d54293749a58d4dbdcf06c9c203de84f1ab1/src/m
ain/java/com/google/devtools/build/lib/rules/andro
id/AndroidResourceMergingActionBuilder.java#L201
PiperOrigin-RevId: 272341623
",619504,5485,235297,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1615","bazelbuild/bazel","5da8f02c0e32627b1b37491aea2b22025fc121b1",1,"2019-10-02 04:44:57-07:00","Windows: Fix compiling cpp with tree artifact as
source  Fixes
https://github.com/bazelbuild/bazel/issues/9321
Closes #9454.  PiperOrigin-RevId: 272411571
",619543,5486,235319,"Yun Peng","pcloudy@google.com","Copybara-Service","copybara-worker@google.com"
"1616","bazelbuild/bazel","aa1bf4770a0827784b4879cf8718507788828e39",1,"2019-10-03 09:54:19-07:00","Fix skybuild crash when creating include scanning
header data  Skybuild does not guarantee that an
action can look up the sky value of its transitive
dependencies.  So rather than crashing blaze in
that case, have discoverInputs() return null which
will trigger a Skyframe restart.  RELNOTES: None
PiperOrigin-RevId: 272682304
",619415,5485,235348,"waltl","waltl@google.com","Copybara-Service","copybara-worker@google.com"
"1617","bazelbuild/bazel","09e8e68b11d9fc54e75b9276218ecbe50bbc2c78",2,"2019-10-03 12:16:44-07:00","[RPBB] Add --rTxtOut option to
AndroidCompiledResourceMergingAction  The allows
making AndroidCompiledResourceMergingAction the
single source of truth for resource classes owned
by libraries:  * --classJarOutput: resource JAR
going up the build graph * --rTxtOut: controls
resouce class creation at the top of the build
graph  PiperOrigin-RevId: 272714154
",619535,5487,235383,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1618","bazelbuild/bazel","73d942f6c207e9c29c49ee2572ad3501e165efc8",1,"2019-10-03 12:31:02-07:00","bazel syntax: separate Parameter from Argument  A
Parameter is not an Argument; this false relation
was presumably established to enable the reuse of
one function of about two dozen lines of code in
the parser; this change forks that function, and
makes Parameter extend Node directly.  Also: -
Argument.Passed is now Argument.   Its isX methods
are removed; use 'arg instanceof Argument.X'
instead. - Argument.getName is un-deprecated; it
seems useful and harmless.   (But getIdentifier is
gone; callers must cast to Argument.Keyword.) -
Document distribution of Node allocations. -
Delete ArgumentException  The only behavior
changes are: - wording of one error message. -
NodeVisitor: add missing descent into
Parameter.identifier.  PiperOrigin-RevId:
272716872
",619499,5487,235411,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1619","bazelbuild/bazel","3a5dd87b88b3ab0f1505d0dfcd08b15dbf8ca9fe",10,"2019-10-03 16:43:17-07:00","Add flag to use R.txt from resource merging for
creating top-level resources.jar  When
--experimental_use_rtxt_from_merged_resources is
enabled, the symbols defined in local resource.jar
files will be exactly the same as the ones defined
in the top-level resource.jar.  In particular,
this means that ""android_resources_strict_deps""
affects both local resource.jar files as well as
the top-level deploy JAR.  PiperOrigin-RevId:
272769323
",619267,5486,235296,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1620","bazelbuild/bazel","35618a888941d2dc7358094e80f88ad96548f79a",2,"2019-10-04 07:00:05-07:00","bazel syntax: remove type parameters from
Parameter<V, T>  Parameter is a part of the
syntax, and is now created only by the parser. Its
""default value"" (V) is always an Expression. Its
""type"" (T) is no longer needed.  The type
parameters were presumably added to achieve an
unholy form of code re-use in
SkylarkSignatureProcessor and FunctionSignature:
the @Param annotations from Java methods were
converted into pseudo-syntax and then fed to
WithValues.of.  This change forks rather than
reuses WithValues.of. One copy is renamed
fromParameters, and is specialized to the parser;
the other copy is inlined into
getSignatureForCallable and specialized to no
longer need the construction of transient
Parameter syntax nodes. Both copies will be
simplified in follow-up changes that make further
slices at the monster that is FunctionSignature.
Also: remove confusingly named isMandatory and
isOptional methods. They were instanceof tests,
and thus not opposites. PiperOrigin-RevId:
272868319
",619286,5486,235298,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1621","bazelbuild/bazel","c87cc91007aa89e33e95a153c448f8b9fc91fa2f",7,"2019-10-08 04:56:28-07:00","Event with output: do not keep output in memory
Instead just keep the reference to the object
describing the location on disk and dump the
content to the output stream when needed.  Change-
Id: If64b7e4e408ec487d29fe43d90dd429153e1b251
PiperOrigin-RevId: 273495045
",619331,5486,235290,"Klaus Aehlig","aehlig@google.com","Copybara-Service","copybara-worker@google.com"
"1622","bazelbuild/bazel","f4dc1a170101ee17badf97df9f3d5f6e8764310d",2,"2019-10-08 11:45:21-07:00","Provide a clearer error when Starlark rule
definitions accidentally d?  ?epend on toolchain
instances instead of toolchain types.  Inspired by
user feedback.  Closes #9967.  PiperOrigin-RevId:
273571061
",619363,5486,235303,"Greg Estren","gregestren@gmail.com","Copybara-Service","copybara-worker@google.com"
"1623","bazelbuild/bazel","fcea3372407412569df45d70de05ff439c68e041",1,"2019-10-11 15:07:32-07:00","Open source TransitionsOutputFormatterTest
PiperOrigin-RevId: 274257596
",619553,5488,235425,"michajlo","michajlo@google.com","Copybara-Service","copybara-worker@google.com"
"1624","bazelbuild/bazel","f72f46a72122a98519402e43f16b55d6161ed8cb",1,"2019-10-16 11:27:33-07:00","Replace Md5Digest class with byte[].  Supports
digests of any length in the action cache rather
than silently truncating them to 16 bytes.
RELNOTES: None. PiperOrigin-RevId: 275075814
",620608,5500,235691,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1625","bazelbuild/bazel","71f9cea7516aa3a49473375d0e6c7dbb4b3b6306",5,"2019-10-17 00:32:35-07:00","Allow cancelling test runs when detecting flakes
When using --runs_per_tests_detects_flakes, Bazel
runs multiple actions in parallel and aggregates
them such that failed runs are ignored if there is
at least one passing run. This change adds a new
flag --experimental_cancel_concurrent_tests, which
causes Bazel to cancel any concurrent actions when
the first passing run is observed. This can reduce
the end-to-end build time in case of large flaky
tests.  This is only the first half of the
implementation. The code path to interrupt a
running action is currently only used to end the
entire build, and does not post a TestResult for
the interrupted action. This leads to confusing
command-line reporting of the results.
PiperOrigin-RevId: 275199895
",620770,5500,235709,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1626","bazelbuild/bazel","1ed689cbd0c716ac8484c9fccf5fab98d0bb10e7",2,"2019-10-17 12:28:18-07:00","CriticalPathComponents aggregate duration values
for actions that have multiple spawns run in
parallel.  RELNOTES: None. PiperOrigin-RevId:
275313345
",620991,5500,235753,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1627","bazelbuild/bazel","bf6ac612c5f179c01441ca88c7e80b3d7cf6946e",3,"2019-10-18 13:05:54-07:00","bazel syntax: document the ultimate goal of all
the API changes  ...in the form of not-yet-
implemented functions.  PiperOrigin-RevId:
275530947
",620988,5501,235921,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1628","bazelbuild/bazel","ad04c1abe923203b2868ea51a447e32a705f2e0c",1,"2019-10-21 02:18:30-07:00","Implement parallel file processing for the case of
parsing Ninja files  The main ideas behind this
implementation are:  1) using the NIO with direct
buffer allocation for reading from file, (a quote
from ByteBuffer's javadoc: ""Given a direct byte
buffer, the Java virtual machine will make a best
effort to perform native I/O operations directly
upon it. That is, it will attempt to avoid copying
the buffer's content to (or from) an intermediate
buffer before (or after) each invocation of one of
the underlying operating system's native I/O
operations."")  2) utilizing the possibilities for
parallel processing, since splitting into tokens
and parsing them can be done in high degree
independently.  3) not creating additional copies
of character buffers for keeping tokens and only
then specific objects.  4) for absorbing the
results, it is possible to create a consumer for
each tokenizer, and escape synchronization,
summarizing the results after all parallel work is
done, of use just one shared consumer with
synchronized data structures.  Closes #10014.
PiperOrigin-RevId: 275801065
",621839,5517,236397,"ichern","ichern@google.com","Copybara-Service","copybara-worker@google.com"
"1629","bazelbuild/bazel","1ae1fbaf559e25b274b44c984d7afe401b329df0",2,"2019-10-28 12:43:40-07:00","select(): fix ambiguous multiple match error with
aliases  Fixes
https://github.com/bazelbuild/bazel/issues/10042.
See there for context.  Closes #10066.
PiperOrigin-RevId: 277122033
",622039,5529,236443,"Greg Estren","gregestren@gmail.com","Copybara-Service","copybara-worker@google.com"
"1630","bazelbuild/bazel","bbea57557a80716ae09aaef62a1a7f0b9f097ceb",2,"2019-10-28 13:44:54-07:00","bazel syntax: delete AugmentedAssignmentStatement
It forced most clients to duplicate their handling
of AssignmentStatement.  PiperOrigin-RevId:
277134148
",622005,5528,236423,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1631","bazelbuild/bazel","2b6a435a1c5bb683f3e69e92ca878af6e119918e",5,"2019-10-28 16:30:34-07:00","Implement Action.args  This new field on Action is
guarded by a new experimental flag,
--experimental_action_args. If enabled, it will
return a frozen Args object which contains an
accurate representation of the arguments used to
register that action (including arguments related
to expanded tree artifacts)  Args objects
retrieved from Actions.args are entirely
immutable, meaning none of their mutation methods
are callable. This includes Args.use_param_file().
We may want to relax this constraint at a later
time.  RELNOTES: None. PiperOrigin-RevId:
277167480
",622220,5530,236499,"cparsons","cparsons@google.com","Copybara-Service","copybara-worker@google.com"
"1632","bazelbuild/bazel","386b25b866bc2d68be6af04ad8ae40b0fd73a6e7",3,"2019-10-29 13:12:43-07:00","cquery --show_config_fragments: support user-
defined options.  Given:   $ blaze cquery
'deps(//:mytarget)'
--show_config_fragments=[direct|transitive]  This
includes as direct requirements:  ? Starlark flags
used in a rule's select() ? Starlark flags
required by a Starlark rule's .bzl definition ?
Android feature flags used in a rule's select() ?
Android feature flags set by an android_binary ?
Starlark rules providing FeatureFlagInfo (https://
docs.bazel.build/versions/master/skylark/lib/Featu
reFlagInfo.html)  This last case is a bit unusual:
Starlark rules providing FeatureFlagInfo ""look
like"" configuration (since you can select() on
them). But they aren't actually configuration
(since you can't set their values). See the
discussion on the last test in
configured_query_test.sh for how we're handling
them.  This also propagates required fragments
through output files (e.g. when a rule depends on
""foo.out"" which is a generated output depending on
other rules).  PiperOrigin-RevId: 277348895
",622271,5530,236545,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1633","bazelbuild/bazel","dd5fdb20ed22a97f1e5ecb1a03ed18b0c50b379c",1,"2019-10-29 19:41:08-07:00","bazel syntax: simplify cache of information about
annotated classes  This change combines three
separate caches into one, which is simpler, more
compact, and cheaper to compute and (in some
cases) access.  Also: - eliminate
hasSelfCallMethod. -
collectSkylarkMethodsWithAnnotation now returns
methods in (Java) name   order, not the rather
arbitrary Method.toString order, inadvertently
fixing a bug in Starlark completion. PiperOrigin-
RevId: 277416070
",622210,5530,236541,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1634","bazelbuild/bazel","6c417684164b82e7b214497557b6dc11eb07bc1c",5,"2019-10-31 14:00:49-07:00","bazel syntax: replace NestedSet with
SkylarkNestedSet in @SkylarkCallable-annotated
method results  NestedSet is not a valid Starlark
value. Currently the interpreter implicitly
converts NestedSet to SkylarkNestedSet, but it
should not know about either of these types.  This
change only handles the conversions in cases where
the type is explicit; there may be others where
the result type is Object, for example.  In one
case NestedSet<PathFragment> was replaced with
String elements, as PathFragment is also not a
Starlark value. (This was actually a
simplification.)  Also: add Nullable annotations
to JavaCompilationInfoProvider to match reality.
PiperOrigin-RevId: 277795809
",622657,5532,236579,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1635","bazelbuild/bazel","751728993128ca16c29003b44467799ed8d031de",1,"2019-11-04 09:35:40-08:00","Use RootedPath.getParentDirectory in FileFunction.
We get the RootedPath to the parent folder by
getting the parent PathFragment and creating a
RootedPath from that. RootedPath does exactly the
same thing -- use the helper instead.  RELNOTES:
None. PiperOrigin-RevId: 278398153
",622912,5538,236757,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1636","bazelbuild/bazel","334ef1cf1076400fbb9dfdccae35e7767ebeaa98",2,"2019-11-05 01:18:37-08:00","Add Ninja lexer with tests.  Closes #10126.
PiperOrigin-RevId: 278568644
",623795,5544,236904,"ichern","ichern@google.com","Copybara-Service","copybara-worker@google.com"
"1637","bazelbuild/bazel","9d5394e772214d1b33310f2575940a57bfbc5068",3,"2019-11-06 07:29:07-08:00","Refactor merkletree implementation to be
independent of ActionInput  This change splits up
InputTree into DirectoryTree and
DirectoryTreeBuilder. It also replaces all uses of
ActionInput in the DirectoryTree and MerkleTree by
either Path, ByteString or both.  This is part of
a series of refactorings to make the remote
package be less dependent on execution phase
constructs.  Closes #8977.  PiperOrigin-RevId:
278854034
",623687,5544,236888,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1638","bazelbuild/bazel","58d46812993713b07d6402253fc8bd00fc571f7c",8,"2019-11-07 07:19:36-08:00","Refactor Java compilation output handling  into an
AutoValue, instead of passing five different
parameters around.  PiperOrigin-RevId: 279080557
",623970,5551,236948,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1639","bazelbuild/bazel","16c8f3a0612714eafa50ebc48774c36c7e6396ac",1,"2019-11-11 05:36:40-08:00","Add parent and included/subninja scopes.  Closes
#10203.  PiperOrigin-RevId: 279717191
",623881,5552,236818,"ichern","ichern@google.com","Copybara-Service","copybara-worker@google.com"
"1640","bazelbuild/bazel","6056609dd4d6053ce3bfce951485eff43ee7eb14",15,"2019-11-11 06:28:22-08:00","Refactor remote package to only have one remote
cache impl.  Historically the remote package
shipped two implementations for remote caching:
GrpcRemoteCache and SimpleBlobStoreActionCache.
Today there is no good reason to keep this
structure and the duplication of code and tests
that comes with it. This is the final refactoring
of a long series:   * 5fc91a7  * 12ebb84  *
8ac6bdc  * 9fb83b4  * 36611c3  * a6b5b05  *
d40933d  * 797f292  This change makes it so that
there is one RemoteCache that has a
RemoteCacheClient. The RemoteCacheClient has one
implementation per caching protocol:   *
DiskCacheClient (formerly OnDiskBlobStore)  *
GrpcCacheClient (formerly GrpcRemoteCache)  *
HttpCacheClient (formerly HttpBlobStore)  *
CombinedDiskHttpCacheClient (formerly
CombinedDiskHttpBlobStore)  A single RemoteCache
type for all protocols will allow composition of
caching protocols. In particular, grpc and disk
caching. Additionally, this change will allow us
to fix a longstanding bug where for the HTTP
Closes #10200.  PiperOrigin-RevId: 279723411
",623948,5551,236800,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1641","bazelbuild/bazel","20342c7c7ebab7729d347a3ec9a51b2f055c7f05",3,"2019-11-12 04:56:16-08:00","Move retry logic to where it's being used.  Simple
refactoring that moves the retry logic from the
RemoteModule to the RemoteSpawnRunner where it's
actually being used.  Closes #10212.  PiperOrigin-
RevId: 279938161
",623943,5552,236745,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1642","bazelbuild/bazel","4871cb0d9c983a5352df05d4f7ab8efb67b2ff60",4,"2019-11-12 17:16:42-08:00","bazel syntax: rename SkylarkList to Sequence  This
is a breaking change for copybara.  PiperOrigin-
RevId: 280090855
",623843,5553,236731,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1643","bazelbuild/bazel","6bcdf11ff3870fc133bd5467915af9bbd6074c07",1,"2019-11-13 06:53:55-08:00","Refactor remote package initialization.  Over time
RemoteModule#beforeCommand has grown quite
complex. In that it was hard to tell what the
control flow was for a particular configuration.
This change simplifies it.  Closes #10218.
PiperOrigin-RevId: 280188774
",623924,5554,236724,"Jakob Buchgraber","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1644","bazelbuild/bazel","a9c9363e15f8637c135b11c34301ae6832a26a74",1,"2019-11-13 10:48:07-08:00","bazel syntax: rename SkylarkDict to Dict  This is
a breaking change for copybara.  PiperOrigin-
RevId: 280231492
",623949,5555,236740,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1645","bazelbuild/bazel","918fc2f8794169949b519277625c2837547f5806",1,"2019-11-14 14:47:52-08:00","Expose XcodeConfigProvider to Starlark.  RELNOTES:
None. PiperOrigin-RevId: 280518028
",624198,5555,236711,"steinman","steinman@google.com","Copybara-Service","copybara-worker@google.com"
"1646","bazelbuild/bazel","3d45cfe3cca005653e1aad04a5e590b668c964a0",4,"2019-11-14 19:12:09-08:00","Execute sandboxfs reconfigurations in parallel.  I
tried adding unit tests for this but doing so is
very complicated in their current form.  Given
that this feature is still very experimental and
not in wide use, I'll postpone doing that until
I'm able to prove its worth.  For now, I ran a few
builds by hand using the still-unreleased
sandboxfs 0.2.0 with parallel support and
confirmed this to work.  RELNOTES: None.
PiperOrigin-RevId: 280566455
",624957,5564,236999,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1647","bazelbuild/bazel","ccdeeda22778df438e5f26d87b5d7fe61cd63f04",3,"2019-11-15 10:00:34-08:00","bazel syntax: simplify and optimize list, tuple,
range  Sequence: - is now an interface - delete
getContentsUnsafe: don't prescribe representation.
- delete unnecessary stub methods from
StarlarkValue and AbstractList. - delete abstract
repeat method. It is defined only for list and
tuple.  Tuple: - now extends AbstractList -
manipulates an Object[] directly, eliminating
ImmutableList intermediary   ...yet
getImmutableList avoids a copy using the toArray
sharing trick. - eliminate all unnecessary array
copies - isHashable and isImmutable iterate over
Object[] directly, not List wrapper.  StarlarkList
- now extends AbstractList - delete one overload
of StarlarkList.wrapUnsafe - manipulates an
Object[] directly, eliminating ArrayList
intermediary. - eliminate all unnecessary array
copies  RangeList: - optimize equals() not to
materialize the sequence - merge RangeList and
RangeListView - delete unreachable repeat() method
Also: - removed comment at
Sequence.createImmutable.   We should stop using
StarlarkThread to mean Mutability.   (Longer term,
we should get rid of Mutability in favor of a per-
object frozen bit.) PiperOrigin-RevId: 280680660
",624991,5564,236977,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1648","bazelbuild/bazel","c37398d0bec8b9932c1a810afd1b4e368e2fc44b",1,"2019-11-15 10:54:06-08:00","Refactor lost input ownership calculation, do it
unconditionally  Previously, lost input ownership
information from an action's inputDeps was only
calculated if any lost inputs came from runfiles.
By calculating ownership information
unconditionally, lost input owners can be
determined for each kind of aggregating artifact,
except for filesets, at the
ActionExecutionFunction level.  By not treating
runfiles ownership specially,
ActionRewindStrategy's lost-input-owning direct
deps calculation can be simpler. Also, the
runfiles-specific tracking in
LostInputsExecException.InputOwners is no longer
necessary, so it can be eliminated in favor of the
now-equivalent ActionInputDepOwners.  This CL also
makes
LostInputs{ExecException,ActionExecutionException}
independent. That allows other parts of action
execution, besides those which throw
ExecExceptions, to be able to communicate lost
input failures. Now that the
ActionExecutionFunction level calculates lost
input ownership unconditionally, the requirements
for those parts is looser. Before, they would have
been responsible for determining all ownership
relations except for those from runfiles. Now,
they're responsible only for determining ownership
relations from filesets.  RELNOTES: None.
PiperOrigin-RevId: 280692324
",624939,5565,237001,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1649","bazelbuild/bazel","007315319a72d62ae2d6d0e3d8de6701e8d095a1",2,"2019-11-18 04:42:35-08:00","Prefactoring for making ""blaze test <alias
target>"" work.  Mainly renaming classes and
variables and shuffling things around so that the
actual functional change is as small as possible.
RELNOTES: None. PiperOrigin-RevId: 281043194
",624805,5565,236938,"lberki","lberki@google.com","Copybara-Service","copybara-worker@google.com"
"1650","bazelbuild/bazel","f6f452d10429a50cb2ffd10939c8f4ea894592f1",1,"2019-11-18 09:16:53-08:00","Support lost input detection in action filesystems
An action filesystem may know when an action's
inputs have been lost. If so, and if any have,
then suppress the result of that action's
execution and allow action rewinding to try to
restore what was lost.  RELNOTES: None.
PiperOrigin-RevId: 281083357
",624845,5565,236951,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1651","bazelbuild/bazel","e58d6023e1864a5a1aee9373d5d66819d5d3f106",1,"2019-11-19 03:51:27-08:00","SymlinkTreeAction: require a Runfiles object  This
is not particularly useful in itself, but updates
the callers to match the new expectation, and also
points out the one place (filesets) where we may
need to do additional work.  I'll make use of the
Runfiles reference in a subsequent change to avoid
reading back the local file into Bazel.
PiperOrigin-RevId: 281263527
",624964,5568,237030,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1652","bazelbuild/bazel","d56de83681cc7ab3704cb866c38357631bea9a3f",3,"2019-11-19 05:09:50-08:00","Stream blaze JSON profile output via remote
uploader with
--experimental_stream_log_file_uploads. When
enabled, we do not write the profile to disk at
all.  RELNOTES: None PiperOrigin-RevId: 281272627
",625336,5569,237101,"felly","felly@google.com","Copybara-Service","copybara-worker@google.com"
"1653","bazelbuild/bazel","df389d2aac1f11ab1359f1dd93423763eecffbb4",2,"2019-11-19 06:08:45-08:00","Add interface and implementation that will allow
the remote module to inject remote execution
functionality into repository_rule.  1) Introduce
the RepositoryRemoteExecutor interface which will
be implemented by the RemoteModule in a follow up
change. The intent is for the RemoteModule to
register a RepositoryRemoteExecutorFactory which
the BazelRepositoryModule calls before each
command in order to obtain a
RepositoryRemoteExecutor object. This extra layer
of indirection is necessary because remote
execution can be enabled and disabled between
commands without causing reanalysis.  2) Add logic
to repository_ctx.execute() to execute a command
remotely using RepositoryRemoteExecutor  RELNOTES:
None PiperOrigin-RevId: 281279763
",625573,5571,237149,"buchgr","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1654","bazelbuild/bazel","084b64bc56806aa51c727ad88ea4cc0204a12074",1,"2019-11-19 14:41:30-08:00","bazel syntax: assert validity of results from Java
calls  Other than legal Starlark values, the
implicit conversion to Starlark now accepts only
null, List, and Map.  - make
Attribute.{Computed,LateBound}Default implement
StarlarkValue - move SkylarkType.convertToSkylark
to Starlark.fromJava. - move
SkylarkType.isSkylarkAcceptable to Starlark.valid.
- move support for legacy implicit NestedSet
conversion to MethodDescriptor.   I was hoping to
delete this but there are still a dozen or so
clients to fix.  PiperOrigin-RevId: 281382879
",625546,5571,237140,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1655","bazelbuild/bazel","06a26c37126e3eefabd28c24a4e35059b5b136bc",4,"2019-11-20 02:01:12-08:00","Support remote execution in repository_rule
Motivation:  This change adds support for running
a command on a remote machine from a
repository_rule and getting its stdout, stderr and
exit code back. The initial use case of this
feature is to allow a repository_rule to inspect a
remote machine, discover the installed tools,
libraries and environment in order to generate
Bazel platforms and toolchains for the remote
environment.  The upload of files as part of the
command and download of its outputs is not
supported. The use cases looked at so far don't
have a need for it. For example, Bazel's own
cc_configure rule only uses one file as part of
ctx.execute(). The contents of the file are ""int
main() {}"". There the lack of file inputs can
simply be worked around with ""echo 'int main() {}'
> empty.cc && gcc empty.cc"". I am not aware of a
use case that would require downloading output
files.  How to Use:  This feature is not on by
default. It can be enabled with
--experimental_repository_remote_exec.
repository_rule gains an additional attribute
remotable. If true any repository_ctx.execute()
call may be executed on a remote worker. That is,
if Bazel is configured build/test with remote
execution so is repository_ctx.execute():  def
_cc_configure_impl(ctx):   result =
ctx.execute([""/bin/bash"", ""-c"", ""export""])
print(""stdout: "" + result.stdout)   print(""stderr:
"" + result.stderr)   print(""exit code: "" +
result.return_code)  cc_configure =
repository_rule(   implementation =
_cc_configure_impl,   remotable = True, )  Note:
The 'remotable' attribute is set by rule author as
any such rule needs to be carefully crafted to
work with both local and remote execution.  The
remote platform of repository_ctx.execute() is
specified via the newly introduced exec_properties
attribute on the repository_rule target:
load(..., ""cc_configure"")  cc_configure(   name =
""remote_cc_configure"",   exec_properties = {
""OSFamily"" : ""Linux"",     ""ISA"" : ""x86-64""   } )
The intended usage is for the repository_rule to
generate the Bazel platform and toolchains for the
remote platform that the build/test actions will
be run on:  bazel build \
--experimental_repository_remote_exec \
--platforms=@remote_cc_configure//:platform \
--remote_executor=remote.example.com \   ...  If
--remote_executor is not specified then
repository_ctx.execute() is executed on the
local/host machine (just like before this change).
RELNOTES: None PiperOrigin-RevId: 281476515
",625767,5573,237195,"buchgr","buchgr@google.com","Copybara-Service","copybara-worker@google.com"
"1656","bazelbuild/bazel","de93e8b7384aa556f1108ed6586ab594d22bca51",2,"2019-11-20 07:17:42-08:00","Allow streaming remote upload to be sourced by an
InputStream rather that a thread writing to an
OutputStream. This is a pull mechanism.
PiperOrigin-RevId: 281514390
",625771,5573,237201,"felly","felly@google.com","Copybara-Service","copybara-worker@google.com"
"1657","bazelbuild/bazel","9257870bf9376ea2ca101e6bb160577f7114585b",4,"2019-11-21 12:19:31-08:00","bazel syntax: remove deprecated list constructors
- rename Sequence.createImmutable to
StarlarkList.immutableCopyOf - delete
StarlarkList.of(StarlarkThread, ...)      and
StarlarkList.copyOf(StarlarkThread, ...)
Mutability is now always an explicit parameter.
StarlarkThread is no longer relevant to
StarlarkList - deprecate Dict constructors that
take a StarlarkThread,   and provide (only a few)
Mutability variants.   This CL makes only the
minimum change to Dict to support   the changes to
StarlarkList. A follow-up CL will   eliminate the
deprecated constructors. In some cases
""(Mutability) null"" is required to avoid overload
ambiguity.  This is a breaking change for
copybara.  BEGIN_PUBLIC bazel syntax: remove
deprecated list constructors END_PUBLIC
PiperOrigin-RevId: 281805867
",626529,5581,237347,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1658","bazelbuild/bazel","d21a0d194b3e83ca585e466ed4f6a383776bfb76",11,"2019-11-21 13:52:30-08:00","bazel syntax: rename SkylarkNestedSet to Depset
The new name matches the Bazel documentation,
whereas NestedSet is a Blaze internal. Also, it is
shorter.  Also: tweak its class doc comment. All
other changes are mechanical. PiperOrigin-RevId:
281824680
",626376,5581,237339,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1659","bazelbuild/bazel","5cfb0b36913427ae85b19334fefdba410a40a534",1,"2019-11-22 07:13:33-08:00","Invalidate the analysis cache if a starlark option
changes.  Without this change it was possible for
an action to be in the skyframe cache whose
outputs' contents had changed based on a starlark
option without invalidating the action. Then if
the action was requested again Bazel would assume
that its outputs were fine and not re-run the
action.  RELNOTES: None. PiperOrigin-RevId:
281962111
",626443,5582,237372,"schmitt","schmitt@google.com","Copybara-Service","copybara-worker@google.com"
"1660","bazelbuild/bazel","81fb43c8eaed8ac360f8792500675466e2bc63bc",2,"2019-11-22 12:35:28-08:00","Move checking whether usages of proguard_apply_*
attributes into existing validation method.
validateRuleContext() is renamed to
validateContext().  PiperOrigin-RevId: 282020488
",626448,5582,237369,"bcsf","bcsf@google.com","Copybara-Service","copybara-worker@google.com"
"1661","bazelbuild/bazel","6456fcb5c1775297cc5bfcf5e5de520cac381495",4,"2019-11-22 13:05:42-08:00","bazel syntax: remove legacy dict constructors  All
callers now pass an explicit Mutability.  This is
a breaking change for copybara.  BEGIN_PUBLIC
bazel syntax: remove legacy dict constructors
END_PUBLIC  PiperOrigin-RevId: 282026241
",626475,5583,237367,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1662","bazelbuild/bazel","34f705832500efa7669942d26beb30d879dc064e",1,"2019-11-25 12:27:34-08:00","bazel: rename SkylarkValue  This change moves
skylarkinterface.SkylarkValue to
syntax.StarlarkValue, and also
skylarkinterface.SkylarkPrinter to syntax.Printer,
where its functionality is merged into the
existing class of that name.  This change is
entirely mechanical, except for syntax.Printer
(naturally), and MethodLibrary and
SkylarkEvaluationTest, which needed a tweak due
the removal of the Printer.debugPrint static
method.  All classes related to the representation
of values are now in the evaluator package;
skylarkinterface now contains only the
annotations.  This is a breaking change for
copybara.  BEGIN_PUBLIC bazel: rename SkylarkValue
END_PUBLIC PiperOrigin-RevId: 282410278
",626234,5582,237371,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1663","bazelbuild/bazel","7b5043f1646759aec98c14fef3071fab19a54db1",1,"2019-11-25 12:30:22-08:00","Add py2-bin functionality, and experimental flag
to gate it  IMPORTANT: This flag is not intended
to be supported long term, or to be turned on by
default in Bazel.  This adds
--experimental_create_py2_bin_symlink. When
enabled, a <prefix>-py2-bin symlink will be
created that mirrors the usual <prefix>-bin
symlink, except that it points to a corresponding
PY2 output root. When <prefix>-bin is already PY2
(e.g. --python_version=PY2, or if
--incompatible_py3_is_default is not turned on, or
--use_top_level_targets_for_symlinks is enabled
and the top-level target is PY2), the two symlinks
have the same destination.  BUILD files: - Add
dependencies on Python rules, since -py2-bin is
naturally Python-specific.  BuildRequestOptions: -
Add the flag, clarify unrelated doc.
ExecutionTool: - Add helper to obtain config from
options using the executor. Turns out we have a
myriad of ways to get configurations, at different
levels of abstraction over the configuration
machinery and with different levels of skyframe
entanglement. Since we're doing a transition to
get the new config, we don't have a
BuildConfigurationValue.Key handy and instead have
to use a different API. Pass along this helper as
a callback to the symlink utils class.
OutputDirectoryLinksUtils: - Add ConfigGroup, a
value class to hold a single config for which we
want to generate symlinks, along with its derived
configs (here, the py2 config). This encapsulates
the (minimal) Python-specific logic. - Add
Py2BinSymlink.  ConvenienceSymlinkTest: - Test
that the flag controls availability of the
symlink, that it may or may not point to the same
place as -bin, and that even when -bin can't be
created because you're building both PY2 and PY3
targets, you can still use -py2-bin. We implement
this using a mock Python rule that uses the real
Python transition (including its baggage of
requiring a dummy default_python_version attr).
ConfigurationResolver: - Fix typo that briefly
confused me.  Note that this machinery can be used
to enable other symlinks that point to other -bin-
like configs in the future -- not that we
necessarily want to do that.  RELNOTES: None
PiperOrigin-RevId: 282410753
",626303,5582,237387,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1664","bazelbuild/bazel","bbcad6023dbab2c329ac0ea6dfe964734ca64003",4,"2019-11-26 05:13:09-08:00","Implement NinjaPipeline - for parsing declarations
in Ninja file together with all its included and
subninja files.  Refactor NinjaScope to contain
only already expanded variables. Introduce
NinjaFileParseResult to represent parsed file
fragments with non-expanded variables, rules, and
pointers to target fragments. Included files in
NinjaFileParseResult (with include or subninja
statements) are kept in form of promises (lazily
computables), since for their parsing we may need
to first resolve the variables in their parent
file.  All the parsing tasks are using the same
provided ListeningExecutorService.  Closes #10286.
PiperOrigin-RevId: 282543267
",627345,5599,237805,"ichern","ichern@google.com","Copybara-Service","copybara-worker@google.com"
"1665","bazelbuild/bazel","733a37723e831c959c7298fa04ab3f4d9575e8fa",2,"2019-11-26 15:12:10-08:00","In NamedSetOfFiles traversal, expand aggregate
artifacts prior to splitting based on the
--build_event_max_named_set_of_file_entries value.
PiperOrigin-RevId: 282648596
",626482,5587,237437,"felly","felly@google.com","Copybara-Service","copybara-worker@google.com"
"1666","bazelbuild/bazel","52eb53bda4a8f64f96a763439756ff9d45f58b9b",1,"2019-11-27 07:38:24-08:00","Add validation that all targets used as platforms
actually advertise  they provide PlatformInfo.
Fixes #10282.  Closes #10307.  PiperOrigin-RevId:
282766536
",626507,5587,237445,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1667","bazelbuild/bazel","8c91022bdb0ebc0a2d10772314eb4a96dee55333",1,"2019-11-27 12:47:27-08:00","Allow xcode_config to choose an xcode version from
available local and remote xcode versions.
RELNOTES: None. PiperOrigin-RevId: 282818473
",626818,5587,237456,"steinman","steinman@google.com","Copybara-Service","copybara-worker@google.com"
"1668","bazelbuild/bazel","6ae38f9596f8ae6c8be9a2e86875a16316805299",1,"2019-11-27 15:01:49-08:00","bazel syntax: make MethodDescriptor and
ParamDescriptor private  The only external uses
are docgen and Kythe, which need only
SkylarkCallable annotation.  PiperOrigin-RevId:
282839886
",626701,5586,237437,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1669","bazelbuild/bazel","ef1a9da624050c41e13d3577803d153f051d7802",1,"2019-11-29 12:00:03-08:00","Allow skipping creation of the runfiles manifest
If --experimental_skip_runfiles_manifests is
enabled, Bazel does not write a
<rule>.runfiles_manifest file for binary and test
rules, and instead creates the symlink tree from
the in-memory representation.  The way this is
implemented is by making the symlink tree action
not depend on the input manifest. If there are
other dependencies on the manifest, it will still
be written. I have carefully audited the code, and
I believe that there are no such dependencies, and
the manifest is generally not part of the
providers published by a configured target.  Note
that this has no effect on Fileset manifests, on
Windows, and if --experimental_enable_runfiles is
false.  RELNOTES: We are planning to deprecate the
runfiles manifest files, which aren't safe in the
presence of whitespace, and also unnecessarily
require local CPU when remote execution is used.
This release adds
--experimental_skip_runfiles_manifests to disable
the generation of the input manifests
(rule.manifest files) in most cases. Note that
this flag has no effect on Windows by default or
if --experimental_enable_runfiles is explicitly
set to false. PiperOrigin-RevId: 283078443
",627136,5589,237546,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1670","bazelbuild/bazel","a4d93cac636e908459e05f1778cafb9a1567f8ed",1,"2019-12-02 07:30:47-08:00","Add Starlark flags to BEP output.  PiperOrigin-
RevId: 283336349
",627200,5591,237592,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1671","bazelbuild/bazel","949e806a4b4e24b36d6d41cc4f9721c8f5ab63ad",1,"2019-12-03 05:31:56-08:00","C++: Add dynamic_deps to cc_binary rule  This is
protected by --experimental_cc_shared_library.
RELNOTES:none PiperOrigin-RevId: 283526634
",627193,5592,237633,"plf","plf@google.com","Copybara-Service","copybara-worker@google.com"
"1672","bazelbuild/bazel","79712cb9ff03142be2c96efdc5977a13bc2585c1",1,"2019-12-04 10:01:17-08:00","Misc small cleanups  This is in preparation for
moving py-bin symlinks out of buildtool. Note the
deleted field in BlazeRuntime was unused.
RELNOTES: None PiperOrigin-RevId: 283777726
",627354,5596,237733,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1673","bazelbuild/bazel","774f3ffff4b27b5c2d294383821ab597bba57a1b",1,"2019-12-04 12:38:42-08:00","Add a boolean to EvaluationContext to indicate
whether it is the execution phase.  PiperOrigin-
RevId: 283812170
",627384,5596,237721,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1674","bazelbuild/bazel","7d68029d3ec03d44572865ab76cdaf6ac0182bca",1,"2019-12-05 03:11:25-08:00","New SkyFunction: PathCasingLookupFunction  The new
PathCasingLookupFunction is a SkyFunction that can
validate the casing of a path.  On case-
insensitive filesystems if ""foo/BUILD"" exists then
""FOO/BUILD"" also exists (because they mean the
same file), but this should not imply that the
""//foo"" and ""//FOO"" packages both exist.  The new
SkyFunction can validate whether ""FOO/BUILD"" is
the correct casing. The casing is correct if the
file's name in its parent directory's listing is
exactly the same (case-sensitively) as the
expected name.  In a later PR we can change the
PackageLookupFunction to deny loading if the path
is not correctly cased.  Motivation:
https://github.com/bazelbuild/bazel/issues/8799
Change-Id:
Ibb2a5f4f6c6041bdfc537b33d0c6fc55e568b998  Closes
#10362.  Change-Id:
Ie25b9b202a1aef3b2594064b4842fc0f2fb2776b
PiperOrigin-RevId: 283939452
",627651,5599,237819,"Laszlo Csomor","laszlocsomor@google.com","Copybara-Service","copybara-worker@google.com"
"1675","bazelbuild/bazel","8d8f62f89f259708d7c24e90be0dfb04c0fba24d",1,"2019-12-05 15:03:53-08:00","Reduce analysis-time iteration over nested sets  -
Avoid Iterable for values that are known to be
NestedSet - Avoid Iterables.* for NestedSet -
Avoid flattening NestedSets for runfiles - Remove
some dead code from MiddlemanFactory  PiperOrigin-
RevId: 284061855
",627663,5599,237821,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1676","bazelbuild/bazel","5706fcd9cc468c2319c3a3ae0517920ce6962418",5,"2019-12-05 16:41:29-08:00","Remove unused legacy XML-based resource merging
This unblocks removing the ""MERGE"" tool from
ResourceProcessorBusyBox.  The ""PARSE"" tool
remains pending cleaning of asset merging, which
is separate from resource merging.  PiperOrigin-
RevId: 284081672
",627606,5599,237816,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1677","bazelbuild/bazel","a11e2d068a4ae10f851612efa9dd5eacc7f54329",3,"2019-12-06 07:11:35-08:00","bazel packages: rename InfoInterface to Info  Info
is now an interface. The logic of the former
abstract class of that name has been pushed down
into it subclasses, most of which do not need to
materialize Location and Provider as fields. This
saved two words per Info instance.  PiperOrigin-
RevId: 284178767
",627806,5599,237829,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1678","bazelbuild/bazel","4409afe6ce392c20aff761a4d1adf30747e4db75",7,"2019-12-09 15:59:37-08:00","Code cleanup on skylarkbuildapi classes.  Removed
redundant ""abstract"" and ""public static""
modifiers.  PiperOrigin-RevId: 284653823
",627630,5597,237718,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1679","bazelbuild/bazel","3ecaa4990ae2191f629e452ac7db62a63349e699",2,"2019-12-09 16:26:00-08:00","Code cleanup on skylarkbuildapi classes.  Removed
redundant ""abstract"" and ""public static""
modifiers.  PiperOrigin-RevId: 284659044
",627653,5597,237715,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1680","bazelbuild/bazel","af8eba9b496e530f29ef860b48d860f1a4362321",2,"2019-12-09 16:27:29-08:00","Code cleanup on skylarkbuildapi classes.  Removed
redundant ""abstract"" and ""public static""
modifiers.  PiperOrigin-RevId: 284659300
",627652,5597,237701,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1681","bazelbuild/bazel","4e2b4958d508ef2ed65db7b681c3be5939e7f147",1,"2019-12-10 12:19:20-08:00","bazel syntax: remove unsound x.f() optimization
Previously, the interpreter had two different
control paths for ""y=x.f; y()"" and x.f(). This was
ostensibly an optimization to avoid allocating a
bound method closure for x.f only for it to be
called immediately after. However, this was
unsound because it deferred the x.f operation
until after the evaluation of any arguments to the
call, which causes effects to occur in the wrong
order; see
https://github.com/bazelbuild/bazel/issues/10339.
This change removes the ""optimization"". It's
unclear to me that saving the cost of allocating
the bound method closure is even measurable given
the profligacy of the current calling convention.
In any case, follow-up changes will optimize the
calling convention much more than any loss in this
change. (Laurent says that this is a more a
vestige of Starlark method overloading than an
optimization; see b/21392896#comment4.)
BuiltinCallable now accepts the MethodDescriptor
if this is known, as it is during an x.f() call,
to avoid the need for a second lookup. Our usual
benchmarks of loading+analysis show slight
improvements that I can't explain (2 batches of 3
runs each):            mean                median
stddev    pval    cpu:   672.737s (-1.38%)
669.890s (+0.32%) 15.927 0.02379    cpu:
648.187s (-4.44%)   640.020s (-3.89%) 17.961
0.02379  Removing the alternate code path revealed
a number of other minor ways in which the
semantics of x.f() differed from its two-step
decomposition, such as error messages and
suggestions, resolution of field/method ambiguity,
ConfiguredTarget providers vs. methods, and (in
commit 59245cac3d8853598666a6e1f93dd4efd1cc0ca1),
treatment of the struct.to_{json,proto} methods.
Also: - reorder the cases in EvalUtils.getAttr so
that @SkylarkCallable-annotated   methods (like
annotated fields) are dispatched before
ClassObject-defined fields.   The only code that
might care about this is user-defined instances of
ToolchainInfo. - Order instanceof checks by
frequency in evalArguments. - Add test of correct
order of effects. - Update numerous error
messages.  This change will make it hard to roll
back commit
59245cac3d8853598666a6e1f93dd4efd1cc0ca1, (which
makes getattr(struct, ""to_json"", None) return a
function) should that be necessary.  This is a
breaking change for copybara's tests.  RELNOTES:
x.f() is now equivalent to y=x.f; y(). That is,
x.f should return the same attribute value
regardless of whether it is accessed as a field or
called like a method. Any arguments to the call
are evaluated after the x.f operation.
PiperOrigin-RevId: 284823002
",627581,5597,237684,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1682","bazelbuild/bazel","f2bcae9d55fa78469bb871e9c103aa22945bde31",3,"2019-12-11 13:01:10-08:00","Change lcov_merger flag parsing to allow legacy
flags    - Improve lcov_merger flag parsing (use
jcommander instead of custom parser)   - Allow
usage of empty space as flag separator   - Allow
unknown flags for for legacy lcov_merger
convergence   - Allow simultaneous use of
--coverage_dir value in favor of --report_file,
the latter takes precedence.  PiperOrigin-RevId:
285043913
",627664,5597,237651,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1683","bazelbuild/bazel","93632d40f9fc146504bc161ced89e03f5e48b03c",1,"2019-12-11 16:00:31-08:00","bazel syntax: delete BuiltinFunction
PackageFactory's BuiltinRuleFunction (rule) and
WorkspaceFactory's newRuleFunction
(repository_rule) both now extend BaseFunction
directly, without BuiltinFunction. (We can further
simplify by eliminating BaseFunction in a follow-
up.) Both functions now do their own argument
checking, which is trivial: they merely reject
positional arguments.  The push/pop operations on
the AllocationTracker Callstack are now done by
StarlarkThread.push/pop, so the stack contains all
callables, not just those that implement
BaseFunction. (The whole thing is redundant and
will be eliminated.)  The BaseFunction constructor
that accepts default values was made package-
private; only StarlarkFunction needs it.  Also,
simplify the exception handling. Starlark.call is
the sole place that augments an EvalException with
a location.  PiperOrigin-RevId: 285080959
",627562,5596,237605,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1684","bazelbuild/bazel","b23b8c778f2e077f1830f63b37083d9318324e5b",2,"2019-12-12 11:42:14-08:00","bazel syntax: delete SkylarkUtils  The Phase is
now recorded in lib.packages.BazelStarlarkContext.
It is now always explicit whereas, before, failure
to set it caused it to assume a default of
ANALYSIS.  In SkylarkRepositoryFunction, the
""fetch"" thread now uses phase=LOADING where before
it has none (=ANALYSIS), which I suspect was an
oversight. PiperOrigin-RevId: 285236359
",627591,5596,237604,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1685","bazelbuild/bazel","4e6937ea8190c004f6002e7a098270461969739a",2,"2019-12-12 14:09:55-08:00","Update actions to use NestedSet for inputs (part
3)  This is in preparation for making NestedSet
not implement Iterable. Unfortunately, doing so
means that there is no longer a common super-type
for NestedSet and Collection, which means that we
have to use NestedSet for all action inputs.
PiperOrigin-RevId: 285267839
",627688,5596,237606,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1686","bazelbuild/bazel","facdd762e00f66de0ce7be26a2c970e64c469ec6",2,"2019-12-16 04:30:27-08:00","Refactor callers of InstrumentedFilesCollector
When passing NO_METADATA_COLLECTOR, there's no
need to pass root files, because they'll be
ignored. Add some convenience methods
collectTransitive to avoid having to pass in these
values.  PiperOrigin-RevId: 285746517
",627202,5592,237435,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1687","bazelbuild/bazel","eb25ef5cb5f3028182957dd005d10520239d7c64",1,"2019-12-16 12:06:54-08:00","Allow access to the original SkyFunctionException
from a ReifiedSkyFunctionException.  PiperOrigin-
RevId: 285821196
",626747,5591,237344,"shreyax","shreyax@google.com","Copybara-Service","copybara-worker@google.com"
"1688","bazelbuild/bazel","f077ada3427c1b10a3486b820ae2aafc51ef0374",1,"2019-12-16 14:40:14-08:00","[Java 11 Desugar Support] Desugar Nest-based
Accesses - 4/N   #java11 #desugar  PiperOrigin-
RevId: 285853686
",628149,5608,237754,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1689","bazelbuild/bazel","7a05289d916c802bd515dcfb25eef99624bc791a",1,"2019-12-17 01:21:54-08:00","Infrastructure: Add toList() calls  This is in
preparation for making NestedSet *not* implement
Iterable anymore.  PiperOrigin-RevId: 285934422
",628165,5611,237797,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1690","bazelbuild/bazel","a104a56fcb2e7e2ad52f9f781cf7d6bec335d2c8",4,"2019-12-17 08:21:10-08:00","Update CppCompileAction to use NestedSet for
inputs (part 7)  This is in preparation for making
NestedSet not implement Iterable. Unfortunately,
doing so means that there is no longer a common
super-type for NestedSet and Collection, which
means that we have to use NestedSet for all action
inputs.  PiperOrigin-RevId: 285983631
",628180,5611,237797,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1691","bazelbuild/bazel","a43876f6254374b4e1d8b89f639c936ace65b546",1,"2019-12-17 17:33:43-08:00","Plumb visibility info from
AndroidCompiledDataDeserializer to
AndroidResourceSymbolSink  *
AndroidResourceSymbolSink will use this to ignore
private symbols from   dependencies.  *
PlaceholderIdFieldInitializerBuilder will use this
to mark private symbols   as package-private.
Visibility is defined as part of DataValue
subclasses (i.e. *XmlResourceValue) as opposed to
DataKey subclasses so that it can take part in
resource conflict detection---two non-styleable/id
resource definitions conflict if they differ in
visibility.  PiperOrigin-RevId: 286096251
",628567,5617,237959,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1692","bazelbuild/bazel","cf7f6b45fc9e9aa884704e6d462313af575ee763",3,"2019-12-18 02:49:26-08:00","Prefer NestedSet/List over Iterable (part 8)
Update a few places in preparation for changing
AbstractAction.inputs to be a NestedSet. This
requires updating all callers of updateInputs.
PiperOrigin-RevId: 286156540
",628572,5617,237953,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1693","bazelbuild/bazel","6c3908c636fe8a9d7b696617f794b540bd285746",3,"2019-12-18 05:03:36-08:00","Explicit iteration over NestedSet with toList()
This is in preparation for making NestedSet not
implement Iterable.  PiperOrigin-RevId: 286170676
",628573,5617,237952,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1694","bazelbuild/bazel","0242b3510bc4429a2078aad864e272a541b6443e",6,"2019-12-18 05:47:41-08:00","CppCompileAction: use NestedSet for input
discovery  This is the last location where
AbstractAction.updateInputs is called with
something other than a NestedSet, which in turn is
the last place AbstractAction.inputs can be
anything other than a NestedSet.  PiperOrigin-
RevId: 286175117
",628580,5617,237952,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1695","bazelbuild/bazel","38a732151d94e94bdc5d3f03ce3c535220a32af8",1,"2019-12-18 05:55:25-08:00","Pass --remote_header's headers to grpc endpoints
Extends #8245 to gRPC.  Closes #10015.
PiperOrigin-RevId: 286175898
",628759,5617,237952,"Alessandro Patti","apatti@uber.com","Copybara-Service","copybara-worker@google.com"
"1696","bazelbuild/bazel","5381e48db4d405cf4c43324865120a283018fe33",2,"2019-12-18 11:19:43-08:00","Expose execution info (requirements) for all
actions that implement ActionApi.  This will allow
us to test new functionality where we set
execution requirements based on Xcodes.  RELNOTES:
None. PiperOrigin-RevId: 286229592
",628780,5616,237950,"steinman","steinman@google.com","Copybara-Service","copybara-worker@google.com"
"1697","bazelbuild/bazel","61216fd405e9b80ce89ffafbb6518e859679f4ab",3,"2019-12-18 12:31:03-08:00","Prefer List/NestedSet over Iterable  This is in
preparation for making NestedSet not implement
Iterable anymore.  PiperOrigin-RevId: 286243512
",628796,5616,237963,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1698","bazelbuild/bazel","972ade8b70fa55b53b56043ac1bbfac5f3bbc8fd",2,"2019-12-18 13:58:14-08:00","bazel syntax: fast calling convention  This CL
changes the calling convention so that the caller
provides the callee with two arrays, one of
positional and one of named arguments, the latter
represented as alternating String/Object values.
The array of named arguments seen by the callee
may contain duplicates. This reduces allocation,
especially of hash tables, as the callee must
already check for duplicates implied by the
combination of positional and named.  BaseFunction
historically adapted an ""outer"" call protocol to
an ""inner"" one, interpreting the positional and
named arguments with respect to a
FunctionSignature. The change moves the task of
adaptation into the base interface,
StarlarkCallable, so that subclasses may implement
either the outer protocol (fastcall) or the inner
one (call)---or neither for and ""unimplemented""
test or fake function. The inner protocol now
simply collects all the positional and named
arguments and presents them as a tuple and a dict,
as if by the signature def f(*args, **kwargs).
BaseFunction's role is reduced to implementing
methods like toString and repr based on the
signature and default values, and exposing this
information to the documentation tools. (The
default behaviors of these methods could be
improved.) The signature and default values are
not implicitly used for any kind of validation,
though subclasses may use them explicitly for that
purpose.  BaseFunction.processArguments has moved
to Starlark.checkSignature, making Signature-based
argument processing available to classes unrelated
to BaseFunction. This function could be much
improved in clarity and UI, but in this CL I have
limited edits to performance concerns: -
eliminating the 'bothPosKey' pass and allocation
(which means we don't   distinguish the causes of
repeated argument). - case 2b deleted (it's no
longer a faster version of 2c) - avoid duplicate
hashing when inserting to kwargs. I plan to
improve the code and the UI (error messages) in a
follow-up.  Also - turn BaseFunction.signature
field into an abstract method;   for most
subclasses it is a constant. -
PackageFactory.newPackageFunction uses the inner
protocol   and does its own parameter validation.
Simpler than   forcing it to use
FunctionSignature. - avoid dubious list mutation
in BuiltinCallable  The performance impacts have
been hard to measure, with benchmarks showing high
variance. A few ad-hoc tests of particularly
expensive single BUILD files have shown consistent
reductions in real time of around 15%.
PiperOrigin-RevId: 286259755
",628808,5616,237967,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1699","bazelbuild/bazel","3c8883d4678f4f88a6d42399d159d66b4140b374",1,"2019-12-19 05:19:28-08:00","Minor refactoring in java files  In this change: -
mark variables and classes final, so they are
easier to reason about while reading the code -
turn AnalysisUtils into a stateless class, so we
need not to create a throwaway instance of it -
move ImmutableXXX.copyOf calls from
AnalysisResult ctor to call sites, to avoid
making copies if the input is already Immutable -
mark nullable arguments with @Nullable to aid
readability at call sites - change a map-based
duplication check logic from   using ""if-contains-
then-error-else-put"" to   ""put-and-fail-if-was-
present"", because this is   shorter and Map.put
returns the old value anyway - change a
LinkedHashMap to HashMap because the   latter
requires less memory and we never iterate   over
the Map so the linked property is   unnecessary
PiperOrigin-RevId: 286374383
",628838,5616,237968,"laszlocsomor","laszlocsomor@google.com","Copybara-Service","copybara-worker@google.com"
"1700","bazelbuild/bazel","dc71d401efe8c227dbb84e3101255086d70d5a92",1,"2019-12-19 10:13:03-08:00","Added new flag experimental_convenience_symlinks
to the build request options.  This option works
in tandem with symlink_prefix will control how the
user sees the symlinks via the terminal using four
options, of which normal (true) and ignore (false)
are the true and false values:   normal [Default &
true] - Works the same as now as it will use the
value of symlink_prefix.   clean - Will clean up
any existing symlinks of symlink_prefix.   ignore
[false] - will not do anything to the symlinks,
skip it entirely.   log_only - Currently not
implemented and a placeholder, but this will have
the same function as normal, but will not create
or delete any symlinks.  RELNOTES: None.
PiperOrigin-RevId: 286414996
",628964,5616,237999,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1701","bazelbuild/bazel","821dd821e2f7a5ed20f479cc2327381b2c9e36de",1,"2019-12-19 12:24:41-08:00","bazel syntax: define and use Starlark.errorf  This
change defines an API helper function that returns
an EvalException with no location and an error
message produced by formatting the arguments.  It
also updates all applicable places within the
package to use it: when creating an Exception
whose location is either null or obviously
unneeded (such as within a built-in), with no
""cause"" exception.  This eliminates all uses of
useLocation=true within the package except the one
in 'print'. We should be able to eliminate
useLocation globally once the location can be
retrieved from the callstack for the few functions
(like print) that need it.  Exceptions thrown by
the evaluator itself, including operators like
EvalUtils.getIndex, should continue to report the
location of the failed operator. (The operators
are not entirely consistent about this. At some
point I will remove the Location parameters to the
operators and make the evaluator responsible for
adding locations, if necessary by catching and
rethrowing.)  PiperOrigin-RevId: 286441023
",628890,5616,238004,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1702","bazelbuild/bazel","5a8219ada648bae84d9d342c3dff67a5b6b14be2",1,"2019-12-23 11:25:39-08:00","Generate Xcode-related execution requirements and
expose them to rules via XcodeConfig.  This should
help keep these requirements in sync across rules
that care about them.  RELNOTES: None.
PiperOrigin-RevId: 286920859
",628608,5616,237949,"steinman","steinman@google.com","Copybara-Service","copybara-worker@google.com"
"1703","bazelbuild/bazel","b4c83ec5319faf6c00eed4e3837911e9ae663650",4,"2019-12-26 08:27:08-08:00","Add a LostInputCheck so failed rewindable
executions can avoid side effects  It delegates to
checking an action filesystem for lost inputs, if
such a filesystem is in use. The check is
available in ActionExecutionContext and
SpawnExecutionContext.  Also, this changes the
return type of getDepOwners from Collection to
ImmutableSet to more clearly embody its
properties: it's unordered and should have no
duplicates.  Action execution involves two failure
exception base types, ExecException and
ActionExecutionException. Like before, there
remain two ""lost inputs"" exception variants, one
for each. There was, and is, a way from converting
in one direction, and now there is a way of safely
converting in both directions.
{Exec,ActionExecution}Exception probably instead
should be collapsed to one type, but that's a much
bigger refactoring that this avoids.  RELNOTES:
None. PiperOrigin-RevId: 287190381
",628759,5617,237986,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1704","bazelbuild/bazel","ca0f2c38c435e75b9831d5470876bc66edeee976",3,"2019-12-28 10:22:06-08:00","Fix a type signature to make it obvious that it's
legacy-only  AndroidParsedDataDeserializer is
obsolete.  PiperOrigin-RevId: 287407073
",629431,5625,238202,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1705","bazelbuild/bazel","d69ebea5130afec89c96b0a1a18beef21b86ca94",2,"2019-12-30 17:08:55-08:00","Use ""compiled"" versions of resources for detecting
resource conflicts  The previous code was using
the raw ""uncompiled"" sources which are redundant
and can lead to bypassing some processing steps.
In particular, by falling back to checking the raw
sources, this ignored visibility as a criterion
for a resource conflict.  To save memory, we just
store hashes/fingerprints of artifacts.  Since
AndroidCompiledDataDeserializer can be in the
critical path (R class generation) we only read
these artifacts when needed.  PiperOrigin-RevId:
287609977
",629450,5626,238233,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1706","bazelbuild/bazel","1159848e2f1e90d39a9f2f516c93e5dd045ab500",1,"2020-01-06 15:24:13-08:00","Shared actions must not emit rewound events if
they aren't primary  To be more like other action
event types, ActionRewoundEvent should only be
emitted for the action which is primary (i.e. won
the race to evaluate) among its set of shared
actions.  To do so, an action evaluation observing
lost inputs compares ActionLookupData values
between the lost inputs exception and itself to
determine whether the current action is primary.
It emits ActionRewoundEvent only if it is.  Also,
handleLostInputs now only invalidates
SkyframeActionExecutor's buildActionMap if the
action is primary, to fix a theoretical bug. If
non-primary actions evict, then they might evict
the retried action, which would allow >1 action in
a shared action set to evaluate simultaneously.
RELNOTES: None. PiperOrigin-RevId: 288387504
",629014,5633,238294,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1707","bazelbuild/bazel","2d67cc0c08e7e41826efb0113342fada0ff4c8bf",7,"2020-01-07 04:35:48-08:00","Java/Android: no implicit iteration over nested
sets  PiperOrigin-RevId: 288473356
",629022,5633,238304,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1708","bazelbuild/bazel","1d6828a4cd9ef4d13ccb330409d469d3525eed02",4,"2020-01-07 05:28:16-08:00","Change Action.discoverInputs to return NestedSet
PiperOrigin-RevId: 288478729
",629025,5633,238304,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1709","bazelbuild/bazel","3a94f77b7e6bd6463c81993153d3d806d76fd85e",2,"2020-01-07 15:01:37-08:00","Include Starlark options in `blaze config <c1>
<c2>` output.  Note the ""config"" command is
intended as Blaze developer tool. It doesn't have
the same test coverage as most of Blaze, so there
are no tests to extend.  PiperOrigin-RevId:
288579798
",629126,5634,238348,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1710","bazelbuild/bazel","c332799a8cc6f7fac5f1791603135d0812dfc5da",1,"2020-01-08 09:09:11-08:00","bazel syntax: remove Location from Starlark.call
This change removes the Location parameter from
the call operator, Starlark.call. The thread's
call stack now records the position of the program
counter of each active frame. Clients may access
it through StarlarkThread.getCallerLocation. The
frame location is updated only at certain key
points, such as at function entry, breakpoints,
and when making a call.  The stack of call frames
in StarlarkThread is no longer off-by-one. That
is, we now push a frame for the implicit function
(called ""<toplevel>"") representing the top-level
statements of a file, and for the implicit
function (called ""<expr>"") representing an
isolated expression. In each case we materialize a
StarlarkFunction and call it in the usual way. All
Starlark evaluation now occurs in the context of a
function call with a call frame, bringing us a
step closer to the ""exec API"" documented in
comments in Starlark.java.  Unfortunately, because
identifiers are not uniformly resolved prior to
execution, we must treat <toplevel> functions
specially: they do not get a LexicalFrame, and
assignments to unresolved identifiers are assumed
to refer to globals. This internal hack will be
removed in due course.  For now, the
StarlarkCallable.{fast,}call methods still provide
the redundant Location parameter to callees, but
this will be removed in a follow-up change.  Also:
- remove Location parameter from
SkylarkClassObject.getValue. - Eval: unify top-
level + non-toplevel execStatements logic and
simplify. - rewrite and augment one debugger test,
which was too low-level. - avoid useLocation=true
throughout lib.syntax.  Use useStarlarkThread
instead.  BEGIN_PUBLIC bazel syntax: remove
Location from Starlark.call END_PUBLIC
PiperOrigin-RevId: 288710067
",629016,5633,238257,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1711","bazelbuild/bazel","3f602f2abdeccb353dfbb8cfed91fb5c9bd6dfc5",2,"2020-01-08 10:28:10-08:00","bazel syntax: optimize calls to built-in methods
This change rewrites CallUtils.convertStarlarkArgu
mentsToJavaMethodArguments, now called
BuiltinCallable.getArgumentVector, to process
arguments in three steps---positional, named,
defaults---avoiding all memory allocation except
for the argument vector itself. Evaluation of
parameter default value expressions has been moved
into ParamDescriptor, so that concurrent hash map
lookups are avoided.  Also, the error messages
have been improved in many ways - they are more
concise, and don't dump the whole signature. -
they state facts before expectations. - they are
better phrased (subject first, emphasis last). -
the called function is always named, but simply,
not in fussy detail. - the numbers of accepted
parameters are stated, when relevant. - the
incorrect type is shown after a failed type check.
- unexpected keywords are spell-checked. - plurals
are correct.  The logic is somewhat simpler.
Except in lib.syntax itself, test expectations of
these error messages have been edited down to the
crucial parts, for robustness.  This is a breaking
API change for copybara.  BEGIN_PUBLIC bazel
syntax: optimize calls to built-in methods
END_PUBLIC  PiperOrigin-RevId: 288725155
",628961,5633,238266,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1712","bazelbuild/bazel","459ce87d43aa0b7e7aa1a6acf242dfb92d206328",1,"2020-01-09 05:06:07-08:00","C++: avoid implicit iteration over nested sets
PiperOrigin-RevId: 288876946
",629348,5637,238327,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1713","bazelbuild/bazel","f7d56b3ebaf91454dfcdfe4a2fe9a9dc5bf92d3e",1,"2020-01-09 07:12:40-08:00","Change Action.getInputFilesForExtraAction to
NestedSet  PiperOrigin-RevId: 288891172
",629411,5639,238378,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1714","bazelbuild/bazel","d237db7848482b81efaccfe3ce68c4c8718d4e13",1,"2020-01-09 08:15:07-08:00","BuildView refactor: collectTests is now static  I
renamed scheduleTestsIfRequested method to
collectTests, because the method does not schedule
any tests but just separates the parallel tests
from the exclusive ones.  I also changed the
method's signature to return the two sets rather
than mutate arguments, because this makes the
method pure (free of side effects) so it is easier
to reason about.  PiperOrigin-RevId: 288900132
",629374,5639,238363,"laszlocsomor","laszlocsomor@google.com","Copybara-Service","copybara-worker@google.com"
"1715","bazelbuild/bazel","56f1cc02f76f6c29b24bc72d7de821987a6ef156",2,"2020-01-09 13:34:59-08:00","JavaGenJarsProvider: avoid flattening eagerly
PiperOrigin-RevId: 288961079
",628283,5633,238112,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1716","bazelbuild/bazel","2f2c844cc70d1b698227c4987ac610fa99d98752",2,"2020-01-10 13:16:47-08:00","bazel syntax: simplify and optimize slice operator
Starlark.slice implements the Starlark slice
operator. It does all the index computation
formerly done by the EvalUtils.getSliceIndices,
without allocating and array full of Integers.
The Sequence.getSlice method now has stronger pre-
and postconditions: valid 'int' indices, cannot
fail.  Exploiting this invariant:
x[start:stop:step] == x[i] for i in range(start,
stop, step) List, Tuple, and String now implement
getSlice in terms of RangeList, using only
constant space in addition to the result. All
three use a fast path for the common case of
step==1.  Also: - add Starlark.type utility -
s/stop/end/g for consistency PiperOrigin-RevId:
289152148
",627186,5616,237229,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1717","bazelbuild/bazel","605eaccabe2fed0a1d188d77baa2206f6346becd",1,"2020-01-10 17:42:36-08:00","cquery: support config() on arbitrary
configurations, update documentation.  In support
of ""cquery somepath: easy mode"": https://docs.goog
le.com/document/d/1ZbcOi8htQrKichHGWq6Dc8-HI7oFjvo
BYeRoTedsgWY/edit  This also updates the docs on
how cquery resolves labels into configured
targets. I acknowledge this is a broader theme
than `somepath` and deserves its own place as a
more core component of cquery semantics. I'm not
prepared to refactor that deeply w.r.t. this
change - I'd rather do that refactoring in its own
dedicated change.  RELNOTES: cquery's config() now
supports arbitrary configurations. PiperOrigin-
RevId: 289196982
",627230,5616,237238,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1718","bazelbuild/bazel","de9b95587ad4a9eb8815302490994b0c16629d8e",3,"2020-01-13 10:44:29-08:00","Move remote local fallback resolution to registry.
Previously the remote local fallback logic needed
to inspect all registered strategy (and action
context) implementations to find one that matches
the (potentially) registered strategy commandline
identifier for this purpose. In an effort to limit
strategy resolution to one code location this
change instead introduces a generic way of
registering the user-provided commandline
identifier and an API to retrieve the resolved
strategy implementation.  RELNOTES: None
PiperOrigin-RevId: 289473807
",627239,5620,237323,"schmitt","schmitt@google.com","Copybara-Service","copybara-worker@google.com"
"1719","bazelbuild/bazel","3924737e4d6e151e0efa4d9d560296ec1e972628",9,"2020-01-13 17:06:10-08:00","Add plumbing to allow querying all resources
referenced from (protobuf-)XML  These are needed
to validate resource references, i.e. references
should be to internal definitions or public
resources from direct dependencies.  This entails
adding a field for the protos to
android/xml/*XmlResourceValue, which is
technically redundant to the existing
strings/maps.  The latter can be removed once we
stop parsing XML---presently the XML parsing is
only done in AAR generation for the benefit of
merging res/ directories.  PiperOrigin-RevId:
289551860
",627288,5620,237322,"dchai","dchai@google.com","Copybara-Service","copybara-worker@google.com"
"1720","bazelbuild/bazel","872c60fe58f9da9339c0cf96f50750987f04537c",3,"2020-01-14 02:57:29-08:00","analyze-profile: Add basic support for the JSON
profile.  The binary profile is deprecated and is
being replaced by the JSON trace event format. We
switched to the new format a while ago and add now
back functionality for analyze-profile.  Work
towards #10140.  RELNOTES: None PiperOrigin-RevId:
289615172
",627628,5622,237405,"twerth","twerth@google.com","Copybara-Service","copybara-worker@google.com"
"1721","bazelbuild/bazel","b1030403002bc0fd59754c36f05ea5c26f877b11",1,"2020-01-14 10:14:50-08:00","Use ImmutableList for results in SpawnContinuation
and SpawnActionContext.  SpawnContinuation and
SpawnActionContext return a regular list even
though it is always used with an ImmutableList.
Change the signature to make it explicit the list
is immutable and all overrides. Apply ErrorProne
cleanups.  PiperOrigin-RevId: 289677190
",627783,5622,237301,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1722","bazelbuild/bazel","e39d4f6934eb1644421709ab2fdc08fedcaea94a",2,"2020-01-14 11:23:57-08:00","Add support for 'local' compile-time deps
PiperOrigin-RevId: 289692706
",627851,5622,237305,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1723","bazelbuild/bazel","b74cf3020f4ae711f4ebd7f8cf3932760a1df91b",1,"2020-01-15 04:57:15-08:00","NestedSet no longer implements Iterable  This
makes the Java version match the Starlark depset
to make it more explicit when / where nested sets
are flattened. In many, but not all, of these
cases, the flattening implies quadratic cpu/memory
consumption.  PiperOrigin-RevId: 289836851
",627859,5624,237328,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1724","bazelbuild/bazel","7c20af3ee4888437ad08d43fab7d4919874b1dec",1,"2020-01-15 07:59:02-08:00","Refactor test case summarization  This improves
accuracy in cases where no or limited test case
information is available. I also simplified the
API and made the implementation of TestSummary
only do a single transitive traversal over the
TestCase tree.  Fixes #8188.  PiperOrigin-RevId:
289859356
",627903,5625,237344,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1725","bazelbuild/bazel","f8f59bc6804e3609132818286c2797bc4d0fd7c3",2,"2020-01-15 10:05:18-08:00","Replace @ExecutionStrategy with module-based
registration.  Strategies and other action
contexts used an annotation to indicate their
identifying type (for example: ""I'm something that
can write a file for an action"") and commandline
identifiers (for example: ""local"", ""remote""). This
approach has a number of drawbacks:  * Reflection
is required to obtain the values, making it harder
to understand control flow/dependencies. * Classes
have to be created just so an annotation can be
put upon them (everything else is handled as
constructor parameters passed to a common base
class). * Identifying information is not visible
in places usually associated with configuration
(Bazel modules) which merely register the class.
This change removes the annotation-based
propagation of identifying information and instead
adds registration methods (called in Bazel modules
that would previously simply register an
annotation context instance) that take the data
explicitly.  RELNOTES: None PiperOrigin-RevId:
289881876
",627956,5624,237354,"schmitt","schmitt@google.com","Copybara-Service","copybara-worker@google.com"
"1726","bazelbuild/bazel","8ddbf7b5402016ddd2e3aa730ffb45dae7a440f2",4,"2020-01-15 15:17:28-08:00","Extract ActionContextRegistry interface for types
that allow action context lookup.  Several types
in Blaze offer a way to look up action context
instances by their ""identifying type"", each along
with a number of other purposes. This change
unifies this behavior in a single interface so
that the implementations can be used
interchangeably and (where feasible) less
abstraction leak is possible by just exposing this
interface to consumers.  RELNOTES: None.
PiperOrigin-RevId: 289947907
",627883,5623,237320,"schmitt","schmitt@google.com","Copybara-Service","copybara-worker@google.com"
"1727","bazelbuild/bazel","a3ef825641049681ab42295523eac0fb6a545377",7,"2020-01-16 05:57:09-08:00","Remove support for writing the binary profile.
This has been disabled via flag already for a
while.  With that, also update our tests to use
the JSON profile instead.  RELNOTES: None
PiperOrigin-RevId: 290050892
",627947,5626,237352,"twerth","twerth@google.com","Copybara-Service","copybara-worker@google.com"
"1728","bazelbuild/bazel","f34b8053f5e9cce8bb617f978528356c2b8a7026",1,"2020-01-16 09:42:22-08:00","bazel syntax: delete
StarlarkFunction.getStatements  Clients cannot
assume the representation of code is syntax trees;
soon, it will be bytecode.  Details: - added
StarlarkFunction.getDocumentation method. - remove
dead code from DocstringUtils
collectDocstringLiterals, getNameAndDocstring,
getAssignedVariableName, extractDocstring -
DocstringUtils.parseDocstring now computes the
indentation using a heuristic. - removed assertion
from StarlarkFunctionCodecTest - rephrased
assertion in PackageSerializationTest - remove
function syntax from some obscure log messages
PiperOrigin-RevId: 290084502
",627917,5626,237355,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1729","bazelbuild/bazel","fcfca6157b6de903ab942cef2fc460bf8c8da6ed",6,"2020-01-16 14:51:22-08:00","Add experimental support for using turbine for all
annotation processing  PiperOrigin-RevId:
290150848
",628037,5627,237387,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1730","bazelbuild/bazel","e11a3824395279bfc3621621e09acfcf77a44568",4,"2020-01-17 08:39:47-08:00","Add
experimental_do_not_use_dont_symlink_in_execroot
workspace function  enabled with the flag
--experimental_ninja_actions.  Additionally,
construct WorkspaceFactory with StarlarkSemantics
attribute, and use it for gathering workspace
functions. The reason for this change is that some
workspace functions may be guarded by flags, so
the usage of default StarlarkSemantics for
gathering available workspace functions is not
correct. Without this change, the test
WorkspaceFunctionTest of introduced workspace
function, guarded by a flag, did not work.  Closes
#10589.  PiperOrigin-RevId: 290277001
",628129,5625,237351,"ichern","ichern@google.com","Copybara-Service","copybara-worker@google.com"
"1731","bazelbuild/bazel","582bbce66eb4d6b335f825250d97dcc1a39bc581",4,"2020-01-17 13:17:01-08:00","Rename SpawnActionContext to SpawnStrategy.  This
is in preparation for splitting SpawnStrategy from
ActionContext and making it a separate entity.
RELNOTES: None PiperOrigin-RevId: 290328486
",628143,5625,237353,"schmitt","schmitt@google.com","Copybara-Service","copybara-worker@google.com"
"1732","bazelbuild/bazel","80e703a4841c837498c8c945f26e698712fca0c1",1,"2020-01-22 06:51:30-08:00","Rewrite the inprocess symlink strategy  This is
currently hidden behind an experimental flag, so
this code is not used yet. This new implementation
more closely matches build-runfiles.cc. Also, it
now correctly creates the output manifest, which
was previously missing.  This passes almost all of
our tests, but there are still some open issues: -
on Windows, it copies instead of symlinking (this
is caught by tests) - it does not fix the file
mode bits if there is an existing file or
directory with incorrect mode bits (not caught by
tests)  We are also not sure whether this is
acceptable from a performance standpoint.
PiperOrigin-RevId: 290944709
",628664,5627,237529,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1733","bazelbuild/bazel","93aa1215bf8b278cc960dbda591715ba0bb0c5d6",1,"2020-01-22 12:18:24-08:00","Apply static analysis findings in
FileFunctionTest.  Apply minor cleanups as
suggested by the static analysis.  PiperOrigin-
RevId: 291005058
",628644,5627,237529,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1734","bazelbuild/bazel","7891d3b4be8549f762f32308a4085f802e7608e5",5,"2020-01-22 12:40:50-08:00","bazel syntax: remove Location from calling
convention  This change removes the Location
parameter from StarlarkCallable.call (built-in
functions) and the SkylarkCallable.useLocation
feature from annotated built-in functions.
Lately, the thread's call stack records the
position of the program counter of each active
frame, so clients may access it through
StarlarkThread.getCallerLocation.  Numerous
parameters that pass Locations merely to construct
an EvalException have been deleted. (This is the
bulk of the change.) Many places that directly
constructed an EvalException now call
Starlark.errorf instead. (A few places in Bazel
formerly specified a location other than
thread.getCallerLocation, or equivalently, null.)
The evaluator ensures that any exception thrown by
Starlark.call is augmented with the location of
the call.  PiperOrigin-RevId: 291009378
",627998,5625,237478,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1735","bazelbuild/bazel","29eded28d57aae8fd870bddb00ec6eb48bcf34c5",4,"2020-01-27 07:38:29-08:00","Add action context and spawn strategy registries.
These registries are intended to replace
SpawnActionContextMaps, a class that performed
most of their functions before. There are now two
versions in preparation of splitting SpawnStrategy
from the ActionContext inheritance tree, in part
due to their very different resolution behavior as
shown in these two registries.  RELNOTES: None
PiperOrigin-RevId: 291719265
",629781,5636,237946,"schmitt","schmitt@google.com","Copybara-Service","copybara-worker@google.com"
"1736","bazelbuild/bazel","5b157d18226983a0ca11850a4b4a04c47194475b",1,"2020-01-27 08:23:38-08:00","bazel syntax: generalize Concatter to HasBinary,
for binary operators  A Starlark value that
implements HasBinary may define its own semantics
for binary operators such as x+y. See HasBinary
for details.  This brings us a step closer to
moving Selector{List,Value} to lib.packages.
Also: - remove the Location parameter from the
operator method.   This API simplification causes
a minor usability regression:   SkylarkInfo
instances created by x+y will no longer record the
location of the plus operator. - make the control
tree for binary operator cases shallower   (that
is, avoid unnecessary re-tests of instanceof),
with a single fall-through. - The specialized
error message for 'in' is no longer feasible   as
the set of valid operand types is no longer
closed. - Simplify arithmetic division, borrowing
from go.starlark.net.  This is a breaking API
change for Copybara.  PiperOrigin-RevId: 291726807
",629715,5633,237893,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1737","bazelbuild/bazel","37aeabcd39fe326d1c4e55693d8d207f9f7ac6c4",3,"2020-01-27 08:34:29-08:00","Split SpawnStrategy from ActionContext.  This
change removes SpawnStrategy from the
ActionContext hierarchy. Spawn strategies thus are
officially no longer queryable from any place in
the execution phase (they already hadn't been but
it was not obvious at all). Instead all access to
them must be mediated by the SpawnStrategyResolver
(formerly ProxySpawnStrategy) which uses the
SpawnStrategyRegistry (formerly
SpawnActionContextMaps) to do its work.  Other
kinds of action contexts are accessible through
the ModuleActionContextRegistry. Blaze modules now
also register action contexts and strategies
separately, in newly introduced methods for this
purpose.  This change makes the many distinct
properties of spawn strategies (as opposed to
other contexts) more obvious, whether in
registration (where there is a complex matching
logic for strategies to spawns) or in usage
(execution flows and selection of strategy). It
also paves the way for some information of
strategies to be available in the analysis phase
rather than only for the execution phase (action
contexts will remain in the latter).  RELNOTES:
None. PiperOrigin-RevId: 291728633
",629343,5631,237779,"schmitt","schmitt@google.com","Copybara-Service","copybara-worker@google.com"
"1738","bazelbuild/bazel","df3d4cd34b90bbfbc312f502ffe4b21010668520",1,"2020-01-27 09:07:15-08:00","bazel syntax: rename StarlarkThread.CallFrame to
Frame  (I did try moving it to Frame at top level,
but the frame and thread classes are rather
intimately connected, so perhaps a nested class is
best.)  PiperOrigin-RevId: 291734654
",629342,5631,237778,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1739","bazelbuild/bazel","acccd4232487a4729abe4234f3a65dda57483d04",2,"2020-01-27 13:38:23-08:00","Have ExecutionFinishedEvent contain the number of
source files manually checked for changes because
of a lack of precise diff information.
PiperOrigin-RevId: 291789856
",629462,5631,237798,"nharmata","nharmata@google.com","Copybara-Service","copybara-worker@google.com"
"1740","bazelbuild/bazel","e411fa74176cdc54f84d62c189d042e9fb6d5c79",4,"2020-01-28 08:40:19-08:00","Add a flag to declare coverage dir as tree
artifact  This adds an experimental flag that
changes the behavior of tests when run with
coverage such that the _coverage directory is
declared as a tree artifact. This makes it
significantly easier to debug coverage runs when
sandboxing (the default) or remote execution are
enabled. Without this, the files are implicitly
ignored, and only the coverage.dat file is brought
back into the output tree. If for some reason the
additional steps to generate the coverage.dat file
fail, then that the file is empty or non-existent.
This also provides a workaround for languages that
cannot currently generate lcov format coverage
data. By bringing back the individual files, the
user can use a post-process to merge the data.
It's not perfect, but it's simple and effective. I
used it myself to debug a coverage issue due to
incorrect file paths w/ gcc on MacOS.
Unfortunately, the coverage collector script
generates a number of temporary files in the
_coverage directory which we generally do not want
(or need) to bring back into the output tree. This
will have to be addressed separately.
PiperOrigin-RevId: 291940271
",629891,5635,237947,"ulfjack","ulfjack@google.com","Copybara-Service","copybara-worker@google.com"
"1741","bazelbuild/bazel","df05243768049192c10e21316c4ee2c56bc28a10",1,"2020-01-28 13:22:46-08:00","bazel syntax: eliminate calls to
StarlarkThread.getGlobals during evaluation  Calls
during evaluation want the innermost enclosing
Starlark source file on the call stack, which is
now provided by the ugly helper function
Module.ofInnermostEnclosingStarlarkFunction.  All
remaining calls to getGlobals are called before or
after execution, so StarlarkThread call/return no
longer needs to save/restore this.globalFrame (now
called this.module). These calls will be
eliminated once the StarlarkThread and Module
construction API is simplified.  This is a
breaking API change for Copybara. References to
StarlarkThread have been replaced by Module where
the one appeared to be a proxy for the other.  No
behavior change.  PiperOrigin-RevId: 292000083
",630296,5637,238073,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1742","bazelbuild/bazel","a0e7b67ec8de73bb7e808d23a491e83acbd6ae13",4,"2020-01-29 11:31:07-08:00","Allows symlink tree actions to construct fileset
links without consuming the input manifest.
Instead, construct the links directly from the
Fileset links propagated through the action
execution values.  PiperOrigin-RevId: 292183775
",630284,5637,238071,"felly","felly@google.com","Copybara-Service","copybara-worker@google.com"
"1743","bazelbuild/bazel","bfafe14363dace53be005567e949a907160f9d9b",4,"2020-01-30 18:21:02-08:00","Internal change  PiperOrigin-RevId: 292464794
",630684,5639,238193,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1744","bazelbuild/bazel","7f55852eec6c750ba2696846f408e0821b9750b6",1,"2020-02-04 09:36:27-08:00","Fix RawTypes warning by changing
NodeEntrySubject.addReverseDepandCheckifDone to
return a plain Subject.  All calls are simply
using ""isEqualTo"", nothing from ComparableSubject
is used.  PiperOrigin-RevId: 293164254
",631702,5647,238491,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1745","bazelbuild/bazel","e00a3255d6d8a40591fe968ec423c299ab52a8c6",2,"2020-02-05 13:10:40-08:00","bazel syntax: break bad dependencies on
StarlarkSemantics.FlagIdentifier  Currently the
Starlark annotation classes and annotation
processor depend on
StarlarkSemantics.FlagIdentifier, yet the latter
type is coupled to StarlarkSemantics, which is
currently part of :frontend, so this is an upward
dependency (and StarlarkSemantics will eventually
move even higher up, to :evaluator). This logical
cycle was broken by having StarlarkSemantics
appear in two java_library rules, which is always
a sign of bad design.  This change replaces
FlagIdentifier by a simple String, allowing us to
break the dependency.  Also: - skylarkinterface/
gets its own BUILD file. - x==FlagIdentifier.NONE
is now x.isEmpty().  A later change will move all
the FlagIdentifier string constants up into Bazel
proper, where whey belong.  PiperOrigin-RevId:
293434176
",632189,5651,238581,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1746","bazelbuild/bazel","314cd3353b018420598188cf54c3f97358baa2e3",4,"2020-02-05 14:13:26-08:00","bazel syntax: a CPU profiler for Starlark  See
CPUProfiler.java for design.  PiperOrigin-RevId:
293448529
",632572,5654,238817,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1747","bazelbuild/bazel","f4b6ac64aa7c1a8abcb6e96acb93b920cccf7be5",1,"2020-02-06 01:13:44-08:00","Open-source tests in lib/analysis  Open-source: - 
lib/analysis/ConfiguredTargetTransitivePackagesTes
t.java - lib/analysis/GeneratorConflictTest.java -
lib/analysis/PackageGroupBuildViewTest.java -
lib/analysis/RuleConfiguredTargetTest.java -
lib/analysis/SourceManifestActionTest.java
RELNOTES: none PiperOrigin-RevId: 293541359
",633201,5659,238979,"laszlocsomor","laszlocsomor@google.com","Copybara-Service","copybara-worker@google.com"
"1748","bazelbuild/bazel","0e228f1a3bf7749facf5a47567aa3b5e864e298c",6,"2020-02-06 10:59:48-08:00","bazel syntax: delete Callstack (used by memory
allocation tracker)  The Callstack was a copy of
the thread's stack saved in thread-local storage.
It was notified not only of every function call
entry and exit, but the same for every expression
too. This made it not only intrusive but
incompatible with a compiled representation.  This
change deletes Callstack and replaces it with an
interface, Debug.ThreadHook, that lets a single
client be notified when a thread pushes its first
frame or pops its last. The allocation tracker
uses these notifications to maintain a mapping of
Java threads to StarlarkThreads (similar to
CpuProfiler), so that when the memory allocator
hook is called, it can ascertain which Starlark
thread caused the allocation.  The tests have been
reworked to call the interpreter instead of
peeking and poking into the callstack directly.
BUG=149023294 PiperOrigin-RevId: 293629363
",635637,5668,239315,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1749","bazelbuild/bazel","798f244faab7f98fc1aaa5f5c3c74a1df8359b7c",2,"2020-02-07 13:01:04-08:00","Add Support of Core Library Type Desugaring for
Classes with Nest-based Access.  #java11 #desugar
Rationale: - Context: Nest desugaring takes two
passes of input class files. During the first
pass, a nest analyzer collects class attributes
without core library type renaming (i.e.
__desugar__/ prefixing). During the second pass,
core library types are renamed (by
CoreLibrarySupport-enabled class visitors) before
running nest-based desugaring (by NestDesugaring).
- This causes breakages that class attributes for
core types cannot be found during NestDesugaring
visiting. Potential Real issues:    1) Java 11
core library with inter-mate private access cannot
be desugared.    2)
IllegalStateExceptions/NullPointerExceptions even
for prior Java 11, since ClassAttributes in
langmode/ is not specific to NestHost/NestMembers,
it is expected ClassAttributes is present for
every input class during second pass to ensure
state integrity. An blind null check would just
hide the incorrect state and make wrong
assumptions.  - Key Changes:   - Add support type
remapping for the nest summary object
(NestDigest), including its recursively dependent
data classes.   - Rename NestCompanions to
NestDigest; Move ClassMemberRecord APIs used by
NestDesugaring to NestDigest; Remove the
NestDesugaring's direct dependency on
ClassMemberRecord, and let NestDesugaring only
query with NestDigest for nest attribute info.   -
Create ClassName class in replacement of String-
represented class binary names to get better name
anchoring, conversions among different names and
centralized checking.   - Share and feed the core
library renaming logic into NestDigest.   - Add
javadesugar/ package in par with java/ for easy
testing.  PiperOrigin-RevId: 293876896
",638105,5681,239787,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1750","bazelbuild/bazel","1eb769f5ce988f58423d9209a6a5d4a57820679a",1,"2020-02-07 13:17:32-08:00","filter toolchain deps consistently with
--noimplicit_deps  repro for how this doesn't work
today: blaze cquery
""deps(//experimental/users/juliexxia:my-library,
1)"" --noimplicit_deps  PiperOrigin-RevId:
293880272
",638133,5681,239796,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-worker@google.com"
"1751","bazelbuild/bazel","75ed889beae02388800a022831f20e6c78be98dd",3,"2020-02-07 16:43:46-08:00","Adopt class MethodDeclInfo to use @AutoValue  -
Resolve TODO - Encapsulate bridge/substitute the
computation of access, naming, descriptor,
signature computation to MethodDeclInfo. - Apply
Law of Demeter shortening.  PiperOrigin-RevId:
293922626
",638219,5681,239807,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1752","bazelbuild/bazel","29f370d8db4f8a6f053ee775b39ff70f1d8d974e",1,"2020-02-11 06:56:28-08:00","Allow to not specify the value of variable (in
expression ""var_name ="")  Closes #10753.
PiperOrigin-RevId: 294429500
",638318,5681,239827,"ichern","ichern@google.com","Copybara-Service","copybara-worker@google.com"
"1753","bazelbuild/bazel","12a3e01df057a4448e47d28c0aac232c4295fc13",5,"2020-02-11 13:12:07-08:00","Qualify all uses of StopConcurrentSpawns.  Part of
the rollforward of https://github.com/bazelbuild/b
azel/commit/37aeabcd39fe326d1c4e55693d8d207f9f7ac6
c4.  PiperOrigin-RevId: 294503575
",638260,5681,239810,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1754","bazelbuild/bazel","cb9fbc07c9a33588ec2d388f13a4cf2c913c2bf7",2,"2020-02-11 13:56:21-08:00","Document FailureDetail message, introduce
Interrupted  This documents the conventions
guiding forward compatible use of FailureDetails
by consumers.  To have something basic to
illustrate those conventions, this implements the
Interrupted category and makes use of it in one
place, GrpcServerImpl.  RELNOTES: None.
PiperOrigin-RevId: 294513459
",638327,5682,239849,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1755","bazelbuild/bazel","9451f2a650198f321c6c3c743a4c9822cfd733f6",1,"2020-02-12 15:27:28-08:00","Add support for --system to JavaBuilder
PiperOrigin-RevId: 294771352
",638772,5686,239965,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1756","bazelbuild/bazel","63605576dd9a3643eb77053388e94f2dcd0c58b4",1,"2020-02-13 13:47:00-08:00","Support sibling repository execution root layout.
Enable building and depending on targets in
subpackages of //external.  Closes #10604.  1)
Added --experimental_sibling_repository_layout
starlark semantics flag 2) When enabled, the flag
changes the execution root of external repository
source artifacts (non-default/main repository)
from <execroot cwd>/external/reponame to <execroot
cwd>/../reponame. Therefore, this allows
plantSymlinkForest to plant the ""external"" top
level directory in the execution root, like any
other top level source directory in the main
repository. 3) The artifact roots (and therefore
root relative path) of external repos' source
artifacts are left unchanged. This enables
RepositoryName#getRunfilesPath and
RepositoryName#getSourceRoot to remain unchanged.
Thus we only needed to thread StarlarkSemantics#ex
perimentalAllowExternalDirectory from
BazelRepositoryModule / ruleContext to callsites
of RepositoryName#getExecPath(boolean
allowExternalRepository).  This took a while
because I had to revert some changes in order to
make the other changes less intrusive.
Specifically, for external source artifacts,
rosica's change set output_base/external as a
source root, instead output_base. This causes all
external source artifact's rootRelativePath to
drop ""external"" as a prefix. By retaining the
output_base source root, I was able to undo a lot
of the intrusive changes.  Another caveat: this
change currently clobbers output artifacts from
external repositories and subpackages of
//external in the same derived output root (bazel-
bin/external). This will be a problem if external
repository names conflicts with directory names in
the top-level external directory. We'll probably
have to draft up a design following this change.
PiperOrigin-RevId: 294991422
",639250,5686,240045,"Jingwen Chen","jingwen@google.com","Copybara-Service","copybara-worker@google.com"
"1757","bazelbuild/bazel","33d43e68cfa15b42861ec85aa0666b9965525c69",1,"2020-02-14 11:48:06-08:00","Add a flag for using a custom legacy main dex list
generator for android_binary.  RELNOTES: None
PiperOrigin-RevId: 295192505
",591884,5517,221269,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1758","bazelbuild/bazel","e2d97b22620ba82ec456d65bfaef6d558acb4492",2,"2020-02-18 10:50:05-08:00","Add initial support for CDS images  PiperOrigin-
RevId: 295770802
",592560,5521,221395,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1759","bazelbuild/bazel","8e8435e7c5834e766aa5882dd305bcda876184b0",3,"2020-02-18 10:51:10-08:00","Don't crash on I/O exceptions when creating
BuildEventArtifactUploader: they can happen when
underlying state is bad.  PiperOrigin-RevId:
295771133
",592587,5521,221395,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1760","bazelbuild/bazel","f555419127962c14988cd5e133e54ae446d757d7",1,"2020-02-19 04:30:19-08:00","Add ""out"" field to actions in JSON profile.  This
provides a way to link the JSON profile to
aquery's [text]proto output via the actions'
primary output.  Also added `primary_output_id` to
analysis_v2.proto.  RELNOTES: Add actions' primary
output details in JSON profile and
analysis_v2.proto. PiperOrigin-RevId: 295940635
",592846,5522,221384,"leba","leba@google.com","Copybara-Service","copybara-worker@google.com"
"1761","bazelbuild/bazel","3187f3da68ac311128ec1095f1630ba6b3ea5275",4,"2020-02-19 15:10:40-08:00","Clean up SpawnResult documentation and visibility.
This clarifies and improves the accuracy of its
documentation. Also, this reduces its
unnecessarily broad visibility.  RELNOTES: None.
PiperOrigin-RevId: 296067625
",592980,5522,221413,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1762","bazelbuild/bazel","8c50cfd3716c09339903d8ac884e2467d20b8199",8,"2020-02-20 16:18:36-08:00","Update multipass progress messages and mnemonics
to reflect current state.  PiperOrigin-RevId:
296322222
",593109,5523,221453,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1763","bazelbuild/bazel","6852289c05b9e85c3b4fcdaecde52baec5654f60",5,"2020-02-25 12:27:34-08:00","Prepare bootclasspath handling for Java 11
PiperOrigin-RevId: 297176327
",593372,5529,221557,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1764","bazelbuild/bazel","d05a9234566feaa5f2f2bb04a437a734ec145fb6",1,"2020-02-25 16:39:00-08:00","Add rudimentary PackageValidator functionality
Provides a hook for BlazeModules to provide
loaded-package validation logic. Packages which
fail validation are treated as having failed to
load.  RELNOTES: None PiperOrigin-RevId: 297233863
",593486,5529,221578,"michajlo","michajlo@google.com","Copybara-Service","copybara-worker@google.com"
"1765","bazelbuild/bazel","c770408bf3c98c36bcecb4ec6e5bcbd161677148",2,"2020-02-27 07:35:55-08:00","Do not create TestResults with null data.
TestRunnerAction attempts to read the test data
from a local cache. In case of a failure to read
that, we will create pass a null TestResultData to
TestResult, which is unexpected and results with
NullPointerExceptions in the future.  Add a null
check to TestResult constructor for data and
prevent the TestResult from being created in case
we fail to read the cached data. This will match
the handling of IOExceptions when creating the
cached result, which are logged to remote storage
and prevent the event from being emitted.
PiperOrigin-RevId: 297592861
",593863,5531,221641,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1766","bazelbuild/bazel","08666adc4d3902e56adb45b467c0333cf059dbfe",3,"2020-02-27 13:59:52-08:00","Add TESTBRIDGE_TEST_RUNNER_FAIL_FAST to JUnit4   -
Suppport Bazel protocol for stopping test runner
execution upon first failure.  - Reduces test
failure result latency by returning the test
action as soon as it fails  - Implemented using
TESTBRIDGE env variable (similar to --testonly
flag)  - Important behavior change in
StoppedUserException handling: no longer
propagates the exception. This is done so that
tests still generates test.xml output    Bazel
flag: --test_runner_fail_fast   Environment
variable: TESTBRIDGE_TEST_RUNNER_FAIL_FAST=1
Change on test runners: Stop and return upon first
test failure if TESTBRIDGE_TEST_FAIL_FAST=1
PiperOrigin-RevId: 297681623
",594012,5532,221685,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1767","bazelbuild/bazel","e746fa4ccfbd46307496a0067978edc2f563d6c2",3,"2020-02-28 15:54:34-08:00","Add FailureDetail to SpawnResult  FailureDetail
may be used to describe failure modes in detail in
a structured way. A future change will pass
FailureDetail values up to Bazel's gRPC server and
return them in the RunResponse message associated
with a failed invocation.  RELNOTES: None.
PiperOrigin-RevId: 297953940
",596173,5562,222540,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1768","bazelbuild/bazel","d8a121e286728bec5f129c2ad53cba375c793960",4,"2020-02-28 16:41:11-08:00","Make BlazeCommandResult's pair of ExitCode and
FailureDetail reusable  Adds DetailedExitCode
which specifies an ExitCode and an optional
FailureDetail.  Ultimately the numeric value of
ExitCode will be subsumed by FailureDetail (when
that numeric value is not zero), but it's early
days.  RELNOTES: None. PiperOrigin-RevId:
297963878
",596191,5563,222559,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1769","bazelbuild/bazel","a60ed0c1d987874bd0f53fdc21f690fefa5d8492",1,"2020-03-02 06:40:48-08:00","GoBinaryRule: flip gc_shell default to false, now
that the depot was fixed  We still need to wait
for GoTestRule, where gc_shell was introduced
later.  RELNOTES: None. PiperOrigin-RevId:
298340803
",596186,5563,222559,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1770","bazelbuild/bazel","52c8773c3ccbcc9051427d6f86a9fe23217f3977",2,"2020-03-03 04:18:12-08:00","Intercept capabilities and uploader requests and
add custom grpc headers  Following #10015. Some
requests do not use the custom headers.  Closes
#10634.  PiperOrigin-RevId: 298574179
",596771,5565,222650,"Alessandro Patti","apatti@uber.com","Copybara-Service","copybara-worker@google.com"
"1771","bazelbuild/bazel","4ee52dbdb0351aa2f9c8340e3bacd9a6b36e6a77",1,"2020-03-04 11:17:52-08:00","Use prefix encoding for paths.  sandboxfs now has
the ability to track directory paths separately
from each mapping request, essentially encoding
paths as an integer that identifies a directory
and the file name within that directory.  This
change adds support for this kind of encoding to
cut down the massive size of the reconfiguration
messages.  As a result, we use less CPU time in
Bazel and in sandboxfs just dealing with
communication overhead.  RELNOTES: None.
PiperOrigin-RevId: 298895132
",596412,5563,222553,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1772","bazelbuild/bazel","9108f6299c8ff3ab731052dfbee245fa4981988b",1,"2020-03-09 08:27:32-07:00","Add sandboxfs support to the processwrapper-
sandbox spawn runner.  The lack of this is an
overlook from when I first added sandboxfs support
to the linux-sandbox and darwin-sandbox spawn
runners.  I noticed this by chance when doing some
sandboxfs work on a Debian VM, where namespaces
are not allowed for unprivileged users.  I saw
that my builds were using the processwrapper-
sandbox, not the linux-sandbox, and that they were
not using sandboxfs.  I know that this comes with
no tests.  There currently are not tests to
validate a real build with sandboxfs enabled.  If
there were, these tests should verify the behavior
with the platform-specific spawn runner and now
also with the more generic processwrapper-sandbox.
However, adding these tests is pretty complicated
and their benefit would be pretty low at this
point (because sandboxfs is not present in Bazel
CI so we would not run them automatically).  I'll
work on these later if we decide to make further
progress on this feature.  RELNOTES: None.
PiperOrigin-RevId: 299846783
",597192,5569,222766,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1773","bazelbuild/bazel","45d652ab279dee568ae94608b5db36121633e274",3,"2020-03-09 08:48:16-07:00","Ensure the workspace name appears in paths within
sandboxfs sandboxes.  Some tools walk path
hiearchies looking for the workspace name and
misbehave if that component is not present.  All
sandboxed spawn runners have provisions to deal
with this and explicitly add the workspace name to
the execroots they generate... but the sandboxfs
spawn runner was not doing so.  Fix it now.
RELNOTES: None. PiperOrigin-RevId: 299850812
",597221,5569,222770,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1774","bazelbuild/bazel","289efe5fb5b2f2f12d6f68ab31f4cd1bc0bf3f32",1,"2020-03-09 12:42:08-07:00","Implementation (but not plumbing) of the gRPC
remote downloader  Extracted from
https://github.com/bazelbuild/bazel/pull/10622
Per discussion on that PR, there's still some
unanswered questions about how exactly we plumb
the new `Downloader` type into `RemoteModule`. And
per https://github.com/bazelbuild/bazel/issues/107
42#issuecomment-595633454, it is unlikely that
even heroic effort from me will get the full end-
to-end functionality into v3.0.  Given this, to
simplify the review, I'm taking some of the bits
the reviewer is happy with and moving them to a
separate PR. After merger, `GrpcRemoteDownloader`
and its tests will exist in the source tree, but
will not yet be available as CLI options.  R:
@michajlo CC: @adunham-stripe @dslomov
@EricBurnett  @philwo @sstriker  Closes #10914.
PiperOrigin-RevId: 299908615
",597884,5575,222892,"John Millikin","jmillikin@stripe.com","Copybara-Service","copybara-worker@google.com"
"1775","bazelbuild/bazel","05de852e65765bc380d6a695d4b9b049575bd4df",2,"2020-03-10 10:03:56-07:00","Implement RemoteDownloader w/
`--experimental_remote_downloader`  This is the
Bazel client implementation of
https://github.com/bazelbuild/proposals/pull/160.
It allows downloading of external dependencies to
be delegated to a remote service.  TODOs: - [x]
Once https://github.com/bazelbuild/remote-
apis/pull/112 is merged, the vendored copy of
`bazelbuild/remote-apis` should be updated. I've
used a [WIP] placeholder for now. - [x] If the
general approach looks reasonable then I'll add
tests. Currently I've been testing with an in-
house implementation of the downloader server.  R:
@buchgr @dslomov CC: @EricBurnett @sstriker
@ulfjack  Closes #10622.  PiperOrigin-RevId:
300116716
",597907,5576,222906,"John Millikin","jmillikin@stripe.com","Copybara-Service","copybara-worker@google.com"
"1776","bazelbuild/bazel","7327af25674e250f789761891d727ac8ea5f9eff",7,"2020-03-10 13:34:31-07:00","Ninja offsets: use long instead of int  Closes
#10938.  PiperOrigin-RevId: 300167036
",598091,5578,222986,"Jingwen Chen","jingwen@google.com","Copybara-Service","copybara-worker@google.com"
"1777","bazelbuild/bazel","0f040255764355a748d923b613c39e6885172875",5,"2020-03-11 12:46:04-07:00","Add BootClassPathInfo field to AndroidSdkProvider
PiperOrigin-RevId: 300386532
",598190,5578,222995,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1778","bazelbuild/bazel","40a737c8f369270490e00b69d98c8c8ea31ff697",3,"2020-03-11 14:32:19-07:00","bazel packages: add
--record_rule_instantiation_callstack flag  This
flag (default: false) causes each rule to record
the Starlark call stack at the moment of its
instantiation.  The stacks are displayed by blaze
query --output=build.  Example output:          #
/workspace/x/BUILD:2:1         cc_library(
name = ""a"",           ...         )         #
Instantiation stack:         #
/workspace/x/inc.bzl:4:3 called from g         #
/workspace/x/inc.bzl:2:3 called from f         #
/workspace/x/BUILD:2:1   called from <toplevel>
By combining two optimizations, prefix sharing
using a linked tree, and element compression using
packed integers, this feature imposes an
additional retained heap space cost of only 1.5%
for deps(//X) where X is Google's web server.
PiperOrigin-RevId: 300408104
",598325,5579,223077,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1779","bazelbuild/bazel","400dbc45b180fc2c0ef302a932f3f34bd2c32c31",7,"2020-03-13 14:55:35-07:00","Roll forward of https://github.com/bazelbuild/baze
l/commit/78fdb7d62d  The original change broke
some call paths that didn't have an event reporter
to provide. It's also a bit fragile in relying on
AbstractUnorderedFormatter.setEventHandler to
provide the reporter - there are different call
sites and if we forget to call that method from
one of them we'd get a null pointer exception.
This version simply makes the reporting optional:
if the reporter is available the output formatter
reports to it. Else it skips it.  Ideally we'd do
a deeper audit of all call sites and guarantee the
existence of a reporter in all expected places.
That's a lot of refactoring, and in some disparate
pieces of code that serve varying purposes. So
it's unclear what assumptions are correct in what
place.  This approach, while weaker, at least
avoids the crash and provides a clear reason in
*some* use cases. We could presumably expand such
qualifying use cases incrementally as needed. In
the meantime those use cases will simply return
misleading data. :(  PiperOrigin-RevId: 300832332
",598741,5581,223149,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1780","bazelbuild/bazel","649ac7b0909acb4216b79d9677006c3179807618",1,"2020-03-19 07:26:12-07:00","Remove null as an encoding of BUILD_FAILURE (exit
code 1)  Future work will deliver details for
failures attributable to the user.  RELNOTES:
None. PiperOrigin-RevId: 301809499
",599235,5580,223204,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1781","bazelbuild/bazel","4e5b5b04ad6a56b635e9ef185976bcefd2b30de4",2,"2020-03-19 10:02:10-07:00","Turn SandboxHelpers into a stateful class.  This
is to simplify an upcoming fix, which requires
tracking an option, and an upcoming optimization,
which requires carrying state around the various
sandbox instances.  RELNOTES: None. PiperOrigin-
RevId: 301837964
",599285,5580,223213,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1782","bazelbuild/bazel","e59fe6cce12326ca1f6bac8f93aff4e944279662",3,"2020-03-19 12:23:29-07:00","Abstract out build file creation in
XcodeConfigTest  Should make it easier to read/add
tests.  RELNOTES: None. PiperOrigin-RevId:
301870300
",599504,5581,223292,"steinman","steinman@google.com","Copybara-Service","copybara-worker@google.com"
"1783","bazelbuild/bazel","39c00d20e89395d7bb126ba6c3bba10a7214e1ad",1,"2020-03-20 15:23:10-07:00","Validate build artifacts that originated remotely
and can't be accessed locally, unless otherwise
specified by the OutputService.  Previously, we
assumed that if a file wasn't available locally
and we know it was available remotely recently,
the file is still accessible, but this isn't true
when you've written a file to a remote
OutputService and then switch to a local (or no)
OutputService. This results in build failures when
Bazel tries to read a file that it no longer can
access that it should have validated during the
analysis phase.  PiperOrigin-RevId: 302110160
",599682,5584,223376,"steinman","steinman@google.com","Copybara-Service","copybara-worker@google.com"
"1784","bazelbuild/bazel","033d5bef615a73e32bf7dc0191a56d9b43022afd",2,"2020-03-24 02:23:39-07:00","Flag to disable AggregatingMiddleman in rules.
The actual clean up of code will be done later.
RELNOTES: None PiperOrigin-RevId: 302623425
",599755,5585,223391,"leba","leba@google.com","Copybara-Service","copybara-worker@google.com"
"1785","bazelbuild/bazel","034220a24599f6a41b7032e39c10f246011f5c0e",1,"2020-03-24 10:11:26-07:00","bazel syntax: add FileOptions  FileOptions is a
set of per-file options that control the front-end
(""static"") processing of a single Starlark file:
scanning, parsing, validation, and, eventually,
compilation.  FileOptions determine language
dialect and ""code generation"", like the options to
a compiler. Different files may have different
options, as in the case of BUILD and .bzl files,
for example. By contrast, a StarlarkSemantics
affects only dynamic behavior, and is carried down
the thread, possibly through many files that vary
in their FileOptions.  FileOptions are specified
at the construction of a StarlarkFile (parsing)
and are retained by it thereafter. This reduces
the burden of ensuring that consistent options are
provided to the operations of parsing and
validation when these steps are widely separated
in the source, as is often the case in Bazel.
This change allows Copybara do validation on all
its files. It was previously unable because it
could not select validation options ""a la carte"".
This will soon allow us to assume that all files
are resolved before execution.  The API for
creating a Starlark thread is getting more
verbose. This is temporary; to ""refactor"" a term
in an equation one must first expand it out.
Details:  - Add FileOptions parameters to scanner,
parser, and their wrappers. - Remove the
StarlarkSemantics parameter from
getUndeclaredNameError.   It was only used for an
assertion. - Move StarlakSemantics into the
evaluator package.   ValidationTest no longer
depends on semantics or lib.packages. - Decompose
the validator's previous isBuildFile parameter
into   separate features: top-level rebinding,
whether to call setScope, etc. - Simplify the
""restrict string escapes"" feature by pushing it
from the validator to the scanner. - Simplify the
""load disregards privacy"" feature by pushing it
from the syntax tree into the validator. Delete
parseVirtualBuildFile. - Add a placeholder for a
""load binds globally"" feature,   for load in the
REPL and for upcoming changes to the
implementation   of the prelude. Its
implementation will come later. - Move the ""load
of private symbol"" check from Eval to Validator.
This is a breaking API change for Copybara.
PiperOrigin-RevId: 302691302
",599697,5586,223409,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1786","bazelbuild/bazel","710955a422819b7fe951a271b2b4cc3bbe6edf7f",1,"2020-03-26 17:41:44-07:00","Make --incompatible_remove_old_python_version_api
a no-op  This flag blocked use of the old
--force_python flag, and the old
default_python_version attribute. It has long
since been flipped. This change deletes its uses
in tests and its legacy code paths.  Work toward
#7797.  RELNOTES: None PiperOrigin-RevId:
303229827
",601549,5621,224115,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1787","bazelbuild/bazel","6d185b896541e0a2234d303edb0980c3b9932296",7,"2020-03-30 14:08:01-07:00","Avoid trying to build a top-level target that has
an action conflict in its transitive closure, even
if that conflict happens in an action coming from
an aspect.  This is more accurate than the
previous scheme, which completely ignored aspects,
but more tolerant in some cases: if the target
that owns the conflicting action is actually not
needed to build the top-level target, then the
top-level target can successfully build, even if
the target with the conflict is listed as a dep.
We also now detect action conflicts underneath
top-level aspects instead of trying to build them
and failing.  Overall, we will probably build less
after this CL, since we will no longer try to
build as much of the target as we can if an aspect
caused a conflict. This may seem to violate the
spirit of --keep_going, but that's already our
behavior for target deps that caused conflicts, so
our behavior is now more consistent.  In an effort
to avoid code duplication and skew, the traversal
starts with artifacts that are computed in
CompletionFunction by calling the same utility
method, so that the set of artifacts is always the
same. To that end, I made the inheritance
hierarchy of ConfiguredAspects and
ConfiguredTargets more similar, as well as their
completion keys. There's probably more convergence
possible.  While writing this, caught that we
didn't properly handle cycles underneath top-level
aspects: fixed in the sequel, unknown commit.
This is effectively a rollback of the production
side of https://github.com/bazelbuild/bazel/commit
/46bfa2ed003fd6a550f89783efd2729e73236a7a, because
we are detecting the conflict before the execution
phase. The excellent test is kept and expanded on
for the scenarios this fixes.  PiperOrigin-RevId:
303819009
",601165,5622,224008,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1788","bazelbuild/bazel","b548ec841b9502016de4a5862a04ed8f2960ed2c",1,"2020-03-31 08:16:32-07:00","Clean up nullability in the
CommandEnvironment#pendingException field's value.
Distinguish between pendingException being unset,
being set to a dummy value by #precompleteCommand,
and being set to a not-dummy value
BlazeModuleEnvironment#exit. Commit 54c9f1
inadvertently got rid of this distinction, since
it disallowed the AbruptExitException ctor taking
in a null ExitCode.  This distinction is
potentially relevant for
CommandEnvironment#getPendingExitCode. In this
change here, I made that method private and
cleaned up its usage.  The distinction was added
pretty early in the history of Bazel in commit
6e5e8f. It didn't actually matter in the codebase
back then, and it still doesn't now, because
BuildTool#processRequest is called *before*
CommandEnvironment#precompleteCommand (see the
consecutive lines in BlazeCommandDispatcher...),
but let's not make the code brittle in the face of
future changes. I also wanted to save future code
readers time; I spent ~10 mins convincing myself
that the code was ""correct"" today.  RELNOTES: None
PiperOrigin-RevId: 303968383
",602062,5634,224352,"nharmata","nharmata@google.com","Copybara-Service","copybara-worker@google.com"
"1789","bazelbuild/bazel","0a75645f03fcbdb14c6dfa54206d23e02e7edbd6",3,"2020-03-31 14:02:55-07:00","Implement mutual TLS authentication  Add a pair of
flags tls_client_certificate / tls_client_key to
specify a certificate and corresponding key, which
allow Bazel to authenticate itself over TLS to a
remote cache or remote executor.  Before this
change, Bazel only supports Google Cloud
authentication, which requires an open network
connection to Google Cloud on the client as well
as on the server.  I have heard from one user that
they are tunneling their traffic over a VPN and
then perform no client authentication in their
remote caching system. I heard from another user
that they have locally patched Bazel to enable
mTLS (but have not upstreamed the patch). Finally,
there is also a pending feature request.  Compared
to other authentication mechanisms, mTLS is
already supported by gRPC out of the box.  I added
test coverage by also adding a
--tls_ca_certificate to the local remote worker,
and updating the existing TLS test to also run
with an mTLS configuration.  I had to generate a
new ca cert/key pair in order to sign a new client
certificate (and also re-generate the server
cert/key pair); these are checked in as testdata.
Note that the generator script given there already
supports generating both server and client
cert/key pairs, so no change to the documentation
was necessary.  Fixes #10735.  Change-Id:
I8c9fdab11d172a4cc8a2b80de43faa48086cc893  Closes
#11030.  Change-Id:
I8c9fdab11d172a4cc8a2b80de43faa48086cc893
NOKEYCHECK=True PiperOrigin-RevId: 304041337
",602234,5637,224412,"Ulf Adams","ulf@engflow.com","Copybara-Service","copybara-worker@google.com"
"1790","bazelbuild/bazel","7aa74984e99d7b81824916000852dbf6e442502a",2,"2020-04-01 00:54:15-07:00","Populate SpawnMetrics and improve CP output
Prevent non-remote executions from remote stat
output in CriticalPathComponent. Populate metrics
recorded in remote execution. Emit
SpawnExecutedEvent to supply metrics to
CriticalPathComputer subscriber after 'Actual
execution' in AbstractSpawnStrategy.  Closes
#10361.  PiperOrigin-RevId: 304132580
",602557,5638,224456,"George Gensure","ggensure@uber.com","Copybara-Service","copybara-worker@google.com"
"1791","bazelbuild/bazel","3ca2468ddd3d34606e34ee08b8698d4ddce84dfe",2,"2020-04-01 09:12:03-07:00","Remove superfluous BuildEventId Java class. The
protobuf is just as good, and it reduces
complexity to not have these wrapper classes
floating around.  Probably will have no noticeable
effect on performance/memory, but can't hurt.
PiperOrigin-RevId: 304197948
",602711,5638,224461,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1792","bazelbuild/bazel","e0f197b988425098089427cb061e1a2dd00add91",3,"2020-04-01 11:20:26-07:00","Fix analysis-time crash when 2to3 is used across
package boundaries  This has little impact for
Bazel, where 2to3 is not supported anyway.
RELNOTES: None PiperOrigin-RevId: 304224577
",602750,5638,224484,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1793","bazelbuild/bazel","1ca960ca2b0aaf58d688f42ec4c6b1dfa200d0ce",2,"2020-04-02 00:16:12-07:00","Refactoring: Rename ProtoModuleApi to
ProtoCommonApi, rename ProtoInfoApi.Provider to
ProtoInfoProviderApi, and extract most needs of
ruleContext out of ProtoCommon and into
BazelProtoLibrary  This PR has two changes  1)
Refactor the ProtoCommon code to make it easier to
create a ProtoInfo object since it no longer
requires the ruleContext.  All of the calls to
ruleContext were moved to the BazelProtoLibrary
class.  2) Rename ProtoModuleApi to ProtoCommonApi
since it exposes ""proto_common"" to Starlark.
Closes #10966.  PiperOrigin-RevId: 304341897
",602951,5643,224577,"Chris Heisterkamp","cheister@squareup.com","Copybara-Service","copybara-worker@google.com"
"1794","bazelbuild/bazel","8afce476e31f5bcff0e8cc8a3b7ba7d791738d3a",1,"2020-04-02 11:42:36-07:00","Implement depfile processing for ninja_build
actions  RELNOTES: None. PiperOrigin-RevId:
304444437
",603068,5643,224561,"cparsons","cparsons@google.com","Copybara-Service","copybara-worker@google.com"
"1795","bazelbuild/bazel","5d66721ec4e7aab6bdfe47b1d74389bcac86c538",7,"2020-04-03 10:45:41-07:00","Add failure_detail field to Build Event Stream
proto's ActionExecuted and TargetComplete events.
The detail is taken from the DetailedExitCode
object attached to an ActionExecutionException (so
detail may not be set).  PiperOrigin-RevId:
304647718
",603116,5643,224549,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1796","bazelbuild/bazel","5aaceb58560da18300576ebebc332fe23e9a0622",4,"2020-04-07 06:31:56-07:00","Make the number of threads that are used in the
FilesystemValueChecker configurable.  RELNOTES:
None PiperOrigin-RevId: 305244825
",603254,5657,224786,"twerth","twerth@google.com","Copybara-Service","copybara-worker@google.com"
"1797","bazelbuild/bazel","7b04b49ce89270cee1cd2e87bd50c949975c1227",1,"2020-04-07 12:03:26-07:00","Move static function only used in
ConfiguredTargetFunction into
ConfiguredTargetFunction.  This removes a cyclic
dependency between ConfiguredTargetFunction and
ToolchainException.  PiperOrigin-RevId: 305310646
",603189,5657,224871,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1798","bazelbuild/bazel","09924273efc7050a2e342cd89b823a619ca073f8",2,"2020-04-07 20:50:28-07:00","Support publishing FailureDetail messages for
crashes  Adds a startup flag, ""--
failure_detail_out"", whose default value is
""${OUTPUT_BASE}/failure_detail.rawproto"".  Adds a
class similar to the existing class which supports
writing an exit code file to the output base. This
new class supports writing a serialized
FailureDetail protobuf message to the ""--
failure_details_out"" path.  When Bazel handles a
crash via BugReport.handleCrash, the new class is
used to write a FailureDetail message describing
the crash.  Adds a Crash category message type to
failure_details.proto. Along with a Code-style
subcategory enum field, this message type
specifies a repeated Throwable field to describe
the java.lang.Throwable responsible for the crash,
if any, and its chain of causes. This chain's
length is limited to a small number: 5, for now.
The number of stack trace elements described is
limited to 1000 per Throwable, for now.  There are
still ways for Bazel to fail without reporting
FailureDetail via gRPC or through the
BugReport.handleCrash methods, notably during
startup. Future changes will add support for
emitting FailureDetail in more places.  RELNOTES:
None. PiperOrigin-RevId: 305398847
",603365,5661,224951,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1799","bazelbuild/bazel","2f3c5bd32400d0fbc3f7da6d48080ada5bd585db",2,"2020-04-08 09:09:55-07:00","Extract the widely-used
ConfiguredValueCreationException to its own file.
PiperOrigin-RevId: 305489450
",603354,5664,224985,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1800","bazelbuild/bazel","9091cd1bacf9f313eeaeb82b22a1195f1c0fc211",1,"2020-04-08 10:11:07-07:00","Move getActionForLookupData from
ActionExecutionFunction to ActionRewindStrategy.
This breaks a dependency cycle between the two
classes.  PiperOrigin-RevId: 305501720
",603392,5667,225027,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1801","bazelbuild/bazel","32782babf3d109b9fb82ae49be5dda882712d48c",1,"2020-04-09 08:15:11-07:00","Move the getConfigurationKey method from
TransitiveInfoCollection to ConfiguredTarget.
This breaks a dependency cycle between
BuildConfiguration, TransitiveInfoCollection, and
ConfiguredTarget.  PiperOrigin-RevId: 305686902
",603478,5669,225058,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1802","bazelbuild/bazel","71a80dc40b1b81f0aeaed1f4e0a31d4a4d4444cf",4,"2020-04-09 09:07:09-07:00","Create UnloadedToolchainContexts for exec groups
and make exec_group-related toolchains a
dependency of their targets. Use a new helper
class ToolchainCollection to handle the
default/unnamed execution group.  PiperOrigin-
RevId: 305695378
",603601,5670,225084,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-worker@google.com"
"1803","bazelbuild/bazel","e29829165e15645f578b6dea61b04c900ea54a8b",1,"2020-04-09 10:32:08-07:00","Apply error-prone fixes for MethodCanBeStatic in
Skfyrame.  PiperOrigin-RevId: 305711825
",603608,5670,225084,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1804","bazelbuild/bazel","b5f9d748dfef278ccc63087f3a662db8b2ebabe4",10,"2020-04-09 13:07:13-07:00","Resolve toolchains and thread through to
RuleContext  PiperOrigin-RevId: 305744813
",603567,5670,225041,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-worker@google.com"
"1805","bazelbuild/bazel","07b15e6d996609129c5bd42d7669519cd959e4d5",3,"2020-04-09 18:32:33-07:00","bazel syntax: fine-grained syntax locations  This
change improves the precision with which the
locations of source tokens are recorded in the
syntax tree. Prior to this change, every Node held
a single LexerLocation object that recorded the
start and end offsets of the node, plus a
reference to the shared LineNumberTable (LNT),
that maps these offsets to Locations. This had a
cost of one reference and one LexerLocation object
per node.  This change causes every Node to record
the offsets only of its salient tokens, plus a
reference to the LNT. For example, in the
expression ""1 + 2"", the only salient token is the
plus operator; the start and end offsets can be
computed inductively by delegating to
x.getStartLocation and y.getEndLocation.
Similarly, in f(x), the salient tokens are '(' and
')'. This has a cost of 1 word plus approximately
1 int per Node. Consequently, we can record the
exact position of operators that fail, and do so
using less memory than before.  Now, when an
expression such as 'f().g() + 1' fails, the
location in the error message will refer to the
'+' operator or one of the two '(' tokens. Before,
all three errors would be wrongly reported at the
same place: f, since it is the start of all three
subexpressions.  Overview: - Every Node has a
reference to the LNT, set immediately   after
construction. (Morally it is part of the
constructor   but it's fussy to set it that way.)
- Every node defines getStartOffset and
getEndOffset,   typically by delegating to its
left and right subtrees. - Node end offsets are
exclusive again. CL 170723732 was a mistake:
half-open intervals are mathematically simpler.
A client that wants to subtract one may do that.
But there are none. - Comprehension.{For,If} are
now true Nodes. - StarlarkFile's extent is now
(correctly) the entire file,   not just the range
from the first statement to the last. - The parser
provides offsets of salient tokens to the Node
constructors. - IntegerLiteral now retains the raw
token text in addition to the value. - Token is
gone. Its four fields are now embedded in the
Lexer. - Eval uses the following token positions
in run-time error messages:       x+y   f(x)
x[i]   x.y   x[i:j]   k: v       ^     ^      ^
^     ^        ^  - Location is final.
LexerLocation and LineAndColumn are gone. -
Misparsed source represented as an Identifier now
has the text of the   source instead of ""$error$"".
This is more faithful and causes   the offsets to
be correct. - The offsets of the orig Identifier
in load(""module"", local=""orig"")   coincide with
the text 'orig', sans quotation marks.  Benchmark:
saves about 65MB (1% of live RAM) retained by the
Usual Benchmark, a deps query.  RELNOTES: N/A
PiperOrigin-RevId: 305803031
",603854,5669,225036,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1806","bazelbuild/bazel","d51ac9bb2deef519a145aff8248e005a49510a42",5,"2020-04-10 10:15:08-07:00","bazel syntax: make Node.lnt final; pass
LineNumberTable as ctor param  Also: - make the
field package-private (again). Unlike protected,
this does not   expose the existence of the field
in the Javadoc. - rename 'LineNumberTable lnt' to
'FileLocations locs'. - change Comment.text to
include the leading # (to match its start-end
range). PiperOrigin-RevId: 305897033
",603957,5669,225050,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1807","bazelbuild/bazel","f7d726f88f20c871d274b75a01f6a64d186403dc",2,"2020-04-13 10:34:54-07:00","Move the Mode enum out of RuleConfiguredTarget and
rename to TransitionMode.  This keeps all uses
from needing a dependency on RuleConfiguredTarget.
PiperOrigin-RevId: 306260126
",604186,5673,225073,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1808","bazelbuild/bazel","1a4066af0ae1123546c792f034da1870f78e54a3",2,"2020-04-13 13:24:27-07:00","Fix a subtle bug involving action conflicts with
extra actions, fix another silly bug, and clean up
action conflict handling a fair amount:  1. Add an
additional conflict-filtering step after top-level
artifacts have been computed (as distinct from
top-level configured targets and aspects). This
will filter out such artifacts that depend on
targets that have action conflicts, preventing
those actions from executing. 2. Fix a silly bug
where if there was an action conflict, we would
filter out all top-level aspects from the set to
build, even if they were error-free, because we
were checking the wrong type of key. 3. Remove all
action conflict checking from the execution phase.
It is up to the analysis phase to filter out all
targets that depend on such conflicts. Having this
belt-and-suspenders style is error-prone. 4. Move
action conflict checking into analysis-phase-
proper objects. As part of that, move the flag
--experimental_strict_conflict_checks to
AnalysisOptions. Its prior location actually meant
that its stricter action conflict checking would
not start on the first build it was specified for:
it would have to wait for the subsequent build.
There's still a bug here, in that a build with no
conflicts if the flag is off might not detect
conflicts with the flag on until the server has to
analyze a new configured target, but I'll leave it
to felly@ to decide how important that is.  I
considered unifying the conflict-filtering steps,
but decided against it, because I didn't like the
idea of computing extra action artifacts for
targets that we wouldn't try to build in the end
because they depended on action conflicts. Keeping
the semantics that only error-free targets can
have their extra-action artifacts built seemed
like the right call, which means we have to filter
twice. I don't expect any performance impact
because the Skyframe nodes from the first
evaluation will still be there, and this codepath
is only hit on rare occasions anyway.  There is
talk of deprecating extra actions. If they are
ever removed, then potentially this second
filtering step could also be removed. Left a TODO
for cparsons@ around that.  PiperOrigin-RevId:
306296831
",604263,5674,225093,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1809","bazelbuild/bazel","c568d844b6c73160273e60096fa9507d6755acde",2,"2020-04-14 09:20:01-07:00","bazel skylarkbuildapi: replace BaseFunction with
StarlarkCallable  BaseFunction is an abstract base
class to simplify the implementation of
StarlarkCallable. It is overused and unnecessary
in most cases. StarlarkCallable is an interface
that represents all callable Starlark values. This
change replaces BaseFunction throughout Bazel's
Starlark API with StarlarkCallable, allowing these
places in the API that accept a function to work
equally well with Starlark or built-in functions:
Args.add(map_each)   Args.add(map_all)
rule(implementation)   aspect(implementation)
transition(implementation)  The StarlarkCallable
interface does not expose a FunctionSignature (an
inessential concept I would like to delete).
Consequently, the eager check done by Args.add to
ensure that its map_each value is a function of
one argument can no longer be implemented. This is
no great loss: signature mismatch is only one of a
million way a function call can fail, and it is
the easiest to detect dynamically as it happens on
every call. In general we should strive to treat
callable values opaquely.  Similarly, some places
that used to accept only a StarlarkFunction (that
is, a function defined in Starlark) also now
accept any StarlarkCallable. The only places that
continue to demand a specific non-interface type
are places like rule(outputs), which must
introspect on the parameter names of a function
defined in Starlark.  BUG=153667498 PiperOrigin-
RevId: 306452316
",604246,5675,225120,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1810","bazelbuild/bazel","2018b87fd3b058664006325f2a08ddbd587940b9",9,"2020-04-14 09:59:00-07:00","Allow customizing the priority list of WORKSPACE
files.  We currently assume the order of WORKSPACE
files is WORKSPACE.bazel and WORKSPACE. Introduce
ExternalPackageHelper to resolve the WORKSPACE
files, which allows to specify the priority list
at the creation time. Use the new class in place
of the old helper which had a hardcoded list.
PiperOrigin-RevId: 306460197
",604489,5675,225123,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1811","bazelbuild/bazel","0749f3d48821a0e5913a79f69d1b7675e1139b97",1,"2020-04-14 10:07:35-07:00","Remove unneeded dependencies in
BuildInfoCollectionValue.  PiperOrigin-RevId:
306462130
",604491,5676,225137,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1812","bazelbuild/bazel","a666f0027adcf2c1cbc5bb314645282289abc6c0",4,"2020-04-14 14:55:20-07:00","Extract BuildConfiguration.Fragment to its own
class.  This removes many dependencies on
BuildConfiguration directly.  PiperOrigin-RevId:
306519976
",604536,5680,225218,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1813","bazelbuild/bazel","802551e0c264fa2287f3c6f9cd8753e48c287c47",3,"2020-04-15 09:59:58-07:00","Create an interface for ConstraintSemantics.  This
breaks the cycle between ConstraintSemantics and
RuleContext.  PiperOrigin-RevId: 306664492
",604483,5683,225249,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1814","bazelbuild/bazel","858039031b3fcfb58ab589e06b1e6db493a9e740",1,"2020-04-16 14:46:57-07:00","bazel syntax: rationalize the type check operators
This change introduces
{Dict,Sequence}.{,noneable}Cast. These four
conversion operators cast an arbitrary value to a
Sequence<T> or Dict<K,V>, replacing these 9
previous functions: -
Dict.{castSkylarkDictOrNoneToDict,getContents} - S
equence.{castList,castSkylarkListOrNoneToList,getC
ontents} -
SkylarkType.{cast,cast',checkType,castMap}  The
functions don't allocate an unmodifiable wrapper,
as Dict and List are already unmodifiable through
the java.util interfaces, so this is just wasteful
allocation and indirection. Also, there is no a
priori allocation of Formattable error messages.
A number of messes (e.g. unsound casts) were
cleaned up throughout.  The new operators do not
accept a Location, and report error using
Starlark.errorf. (This whole CL started as a
subtask of a subtask to eliminate the Location
parameter of EvalException, and this sub-sub-task
is an experiment to see whether removing Location
parameters that don't correspond to program
counter locations is a UI regression.
SRCTU.createTarget is the only place where this
appears to be a problem. For now I've added a
small kludge, but in a follow-up I will change it
to report events, not throw exceptions, so that it
can report multiple errors at arbitrary locations.
Depset might benefit from a similar
{noneable,}Cast treatment, but this too is left
for a follow-up.  This is a breaking API change
for copybara.  RELNOTES: N/A PiperOrigin-RevId:
306925434
",604350,5686,225163,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1815","bazelbuild/bazel","24f97e15bfd0e9d076d215c9cd42ffd101829e90",2,"2020-04-17 05:42:46-07:00","Guard parseActionResultMetadata with bulk wrapper
ActionResult Orphaned Output Directories must be
wrapped in BulkTransferExceptions in order to be
eligible for re-execution. This change prevents an
unavoidable build failure introduced with #10029
in the event that an output directory tree
specified in an action result is missing from the
CAS, and adds testing that would detect such a
regression.  Closes #11140.  PiperOrigin-RevId:
307027914
",604892,5692,225266,"George Gensure","ggensure@uber.com","Copybara-Service","copybara-worker@google.com"
"1816","bazelbuild/bazel","74d84d43b0b810e7eb2c8f866694fa2dcf209baa",3,"2020-04-17 10:02:03-07:00","The great Skylark -> Starlark class migration:
SkylarkRuleClassSerializer
SkylarkProviderIdentifierCodecTest
SkylarkProviderIdentifier  Rough algorithm:  -
Convert these class names  - Convert methods,
variables, other symbols encountered in the files
these  classes are defined in. - *Don't* replace
class names for classes defined in other files.
These will  be handled in their own order. This
helps keep individual changelist scope  small.
PiperOrigin-RevId: 307063447
",604961,5692,225260,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1817","bazelbuild/bazel","ca247cea30531b0bf6b1b0db3ecf54348f8d5992",2,"2020-04-20 05:32:18-07:00","Fixed mimimum_os_version call's annotation to
allow returning None.  RELNOTES: None.
PiperOrigin-RevId: 307380784
",605461,5696,225364,"ilist","ilist@google.com","Copybara-Service","copybara-worker@google.com"
"1818","bazelbuild/bazel","b6eafeeb62e0de5e7e49906e72641c4274e215af",3,"2020-04-20 08:04:51-07:00","The great Skylark -> Starlark class migration:
SkylarkDictCodec   SkylarkListCodec
SkylarkProviderIdentifierCodec
SkylarkSemanticsVersionGetter
SkylarkDictCodecTest   SkylarkProviderCodecTest
SkylarkProvider   SkylarkProvider.SkylarkKey
SkylarkProviderTest  PiperOrigin-RevId: 307399612
",605544,5696,225367,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1819","bazelbuild/bazel","7f266408e95c50af158df1108fe6bffc3030eec7",6,"2020-04-20 10:15:47-07:00","bazel syntax: hide BaseFunction and matchSignature
commit c568d844b6c73160273e60096fa9507d6755acde
replaced most uses of BaseFunction with
StarlarkCallable, which abstracts all function-
like values. This change removes BaseFunction from
the API, and a follow-up will merge it into its
sole remaining subclass, StarlarkFunction.  Most
of the classes that implemented BaseFunction did
so only for its trivial toString, repr, and
isImmutable methods, which have been copied as
needed, and in some cases tweaked.
SkylarkProvider formerly used BaseFunction and
matchSignature to match arguments to schema
fields, but provider instantiation can be done
more efficiently by permuting the argument array
directly, without allocating any hash tables or
indeed any additional memory at all. Thanks to
Murali Ganapathy for the algorithm. This also
unifies the schemaful and schemaless cases.  This
sets the stage for removing FunctionSignature from
the API. Its only remaining uses are in the doc
tools.  ---  Also, this CL causes ParamDescriptor
to no longer use SkylarkType internally to
validate arguments and to describe types for error
messages. Parameter types are now represented as a
union of Class symbols. Validation uses
instanceof. Error messages are produced using
getDataTypeNameFromClass.  The reason this change
is bundled in this CL is that SkylarkType.of (a
conceptual mess) uses fragile heuristics to decide
whether a value is a ""function"" based on whether
it implements BaseFunction; this breaks when
changed to use StarlarkCallable.  Type errors in
the function call machinery now report only what
they test, that is, the top-level constructor:
""want list"", not ""want list of strings"". The old
messages were a bit of a lie because the call
would happily accept lists of other types unless
the function implementation performed an explicit
element type check. Such checks continue to
produce detailed errors: ""got list of X, want list
of Y"".  The 'generic1' annotation no longer
affects the interpreter; it is purely for
documentation.  The only remaining use of
SkylarkType is for Depsets. A follow-up change
will make the necessary renamings and
simplifications.  PiperOrigin-RevId: 307424087
",605698,5696,225453,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1820","bazelbuild/bazel","5ac9086f89325f91de47e8b096f9aaa7a7533fda",1,"2020-04-20 13:07:58-07:00","The great Skylark -> Starlark class migration:
AndroidSkylarkData   JavaSkylarkCommon
SkylarkCcCommonTest  PiperOrigin-RevId: 307460994
",605751,5698,225486,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1821","bazelbuild/bazel","ff94123361859d997426d7ae793e4174d9dc3873",1,"2020-04-21 08:03:32-07:00","The great Skylark -> Starlark class migration:
SkylarkProviderValidationUtil
SkylarkActionFactory   SkylarkFileDependency
SkylarkActionFactoryApi
SkylarkCcCommonTestHelper  PiperOrigin-RevId:
307605500
",605795,5696,225439,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1822","bazelbuild/bazel","bd5ace7ab0a6217da554f8af2cfc0f7dace01ec0",1,"2020-04-21 08:39:33-07:00","Rename Skylark to Starlark in
devtools/build/docgen/skylark/Skylark/*  RELNOTES:
None. PiperOrigin-RevId: 307611251
",605858,5697,225458,"laurentlb","laurentlb@google.com","Copybara-Service","copybara-worker@google.com"
"1823","bazelbuild/bazel","aa7a61cfc8b6920e2e26fd7361251755f19af0b4",2,"2020-04-21 10:21:16-07:00","Move ManagedDirectoriesKnowledge into skyframe, so
that it is available to the different types of
SkyframeExecutor.  PiperOrigin-RevId: 307630305
",605853,5697,225452,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1824","bazelbuild/bazel","9fede017660374f332dd11ad775b8125dd957473",2,"2020-04-21 12:08:29-07:00","Fix SkylarkConstructor documentation collection
This was broken due to refactoring work pertaining
to @SkylarkCallable annotation (and not caught due
to lack of test coverage). The original regression
was caused by change of behavior of
CallUtils.collectSkylarkMethodsWithAnnotation.
Prior to the refactoring, that method would return
the selfCall method of the requested module. After
that refactoring, it would not. Selfcall methods
were thus dropped from documentation.  Fixes
#10848. Original regression was likely
CL/277416070.  RELNOTES: None. PiperOrigin-RevId:
307654334
",605879,5697,225452,"cparsons","cparsons@google.com","Copybara-Service","copybara-worker@google.com"
"1825","bazelbuild/bazel","0a0a13bd4eaeefc3cdf17e8e34dcca4e1453a491",1,"2020-04-21 15:55:00-07:00","Add ExecGroupCollection and ExecGroupContext
objects to starlark for
ctx.exec_groups[<exec_group>] and ctx.exec_groups[
<exec_group>].toolchains[<toolchain_type>] access
respectively  WANT_LGTM=all PiperOrigin-RevId:
307697565
",606061,5700,225526,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-worker@google.com"
"1826","bazelbuild/bazel","f15d08d4e48336c5f16b1d74400a7f95b7986fa5",8,"2020-04-22 12:53:03-07:00","Try to clean up some of the excess baggage Aspects
are carting around, mainly from a code cleanliness
perspective, but with some minor memory benefits:
1. Use AspectKey instead of AspectValue wherever
possible at the top-level, since keys are what
callers should be using, not values. 2. Remove the
freestanding label field from AspectKey. It is
always equal to its ConfiguredTargetKey field's
label. Having two fields with redundant data is
confusing. 3. Remove the freestanding label field
from AspectValue. Same reason: it was always the
AspectKey's label. 4. Remove AspectDescriptor from
ConfiguredAspect: it comes from the AspectKey, so
just use the key.  This is also good because I
think maximizing correspondence between
ConfiguredAspect and ConfiguredTarget is a goal.
Having an AspectValue muddies the waters. Note
that, for historical reasons, ConfiguredTarget has
much more data in it than we'd want a
ConfiguredAspect to have (ideally, both would just
have actions and providers).  In a follow-up, I
may wrap AspectValue together with an AspectKey in
TopLevelSkylarkAspectFunction#compute's return
value. I think that, plus some tolerable casting,
would remove the only remaining real need for
AspectValue to have an AspectKey inside it.
PiperOrigin-RevId: 307877866
",605686,5699,225352,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1827","bazelbuild/bazel","379eaefcbb6ba27f184f0985f8436dd2e15b2409",2,"2020-04-23 07:16:59-07:00","bazel syntax: rename SkylarkType to
Depset.ElementType  Also in Depset: - rename
contentType to elementType - doc comment tweaks -
inline ofValue - add TODOs.  No functional
changes. All other changes are mechanical.
PiperOrigin-RevId: 308044710
",605712,5698,225390,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1828","bazelbuild/bazel","cac48fe7c91e38f363feaa6b8710811013115880",1,"2020-04-23 12:31:21-07:00","bazel syntax: make FunctionSignature private  This
change makes FunctionSignature private; for ease
of review, it will be inlined, simplified, and
deleted in a follow-up CL.
FunctionSignature.fromParameters has moved to
Parser; its logic has not changed.
FunctionSignature's only external clients are
ApiExporter and Skydoc, and they only need four
pieces of information: the parameter names,
hasVarargs, hasKwargs, and a getter for (optional)
default values, so that is all that
StarlarkFunction exposes.  PiperOrigin-RevId:
308106753
",605666,5698,225419,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1829","bazelbuild/bazel","b20f5122b9523381d70b52ebbb41a9a22e96b87b",9,"2020-04-23 21:36:25-07:00","Control rewinding via SkyFunction.Environment
SkyFunction implementations need to know whether
to return Restart or fail (with a thrown
exception). The Environment provides this
configuration, driven by the
GraphInconsistencyReceiver in use during the
evaluation.  RELNOTES: None. PiperOrigin-RevId:
308191628
",605791,5698,225427,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1830","bazelbuild/bazel","c7434358218c5343838e838dc7406ce94a6efff9",3,"2020-04-24 09:05:50-07:00","bazel syntax: rename ValidationEnvironment ->
Resolver  parseAndValidate is not yet renamed, to
avoid changing the API used directly by copybara.
It will go away eventually.  PiperOrigin-RevId:
308264655
",605834,5699,225444,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1831","bazelbuild/bazel","31e4479a98a31bba4dab5b5c836328515ab0af6e",2,"2020-04-27 09:10:40-07:00","cquery --show_config_fragments: capture Make
variables.  Any Make variable ""$(foo)"" is
equivalent to requiring ""--define foo"".  This
works for native rule logic and Starlark rules
routing through https://docs.bazel.build/versions/
master/skylark/lib/ctx.html#expand_make_variables,
but not Starlark rules routing through https://doc
s.bazel.build/versions/master/skylark/lib/ctx.html
#var.  Supports
https://github.com/bazelbuild/bazel/issues/10613.
Added refactoring TODO in
https://github.com/bazelbuild/bazel/issues/11221.
PiperOrigin-RevId: 308632503
",606156,5702,225539,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1832","bazelbuild/bazel","111774f9ad2a7f327e6b411135ebb55d5a5279f6",1,"2020-04-27 10:28:49-07:00","Make NestedSet#toString cheaper and more accurate,
and use it rather than the raw array dump we were
using before in ArtifactNestedSetKey.  Tolerance
for failed futures is removed, since I haven't
seen any cases where we actually needed it.
PiperOrigin-RevId: 308648387
",606285,5702,225554,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1833","bazelbuild/bazel","f388e7175183a78890eabed2514480df3fef69b2",1,"2020-04-27 11:09:03-07:00","bazel syntax: some trivial syntax renamings  -
DefStatement.statements -> body -
ForStatment.block -> body - ForStatement.lhs ->
vars - Lexer.{left,right} -> {start,end} -
ReturnStatement.returnExpression -> result
PiperOrigin-RevId: 308658059
",606281,5702,225551,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1834","bazelbuild/bazel","4893ee3b3ad53e93fd5665e87d2ea3e9c92fccdf",10,"2020-04-27 11:53:54-07:00","The great Skylark -> Starlark class migration:
SkylarkApiProvider   SkylarkAttr ->
StarlarkAttrModule   SkylarkAttributesCollection
SkylarkCommandLine   SkylarkCustomCommandLine
SkylarkErrorReporter   AndroidSkylarkApiProvider
CcSkylarkApiProvider   JavaSkylarkApiProvider
SkylarkAttrApi -> StarlarkAttrModuleApi
SkylarkAttributesCollectionApi
SkylarkCommandLineApi   FakeSkylarkAttrApi
FakeSkylarkCommandLineApi
CcSkylarkApiProviderTest  PiperOrigin-RevId:
308667674
",606283,5702,225551,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1835","bazelbuild/bazel","20b0befdcf4d5f064a8e328c1766e8ca434a8bb1",1,"2020-04-27 13:52:12-07:00","Analysis failure root cause reported for deps on
missing package.  When resolving a configured
target's dependencies in the analysis phase the
DependencyResolver is the first to discover a
Target has a listed dependency on a nonexistent
package.  Unlike most analysis-phase errors that
are reported to the RuleErrorConsumer, while
creating the ConfiguredTarget, there was no
facility to report root causes before creation
begins. This change ensures root causes discovered
by configured target dependency resolution are
retained.  PiperOrigin-RevId: 308691320
",606366,5702,225567,"adgar","adgar@google.com","Copybara-Service","copybara-worker@google.com"
"1836","bazelbuild/bazel","940511f152b902ece445030c1c5c60c1aa2e50e7",1,"2020-04-28 08:56:38-07:00","Discard NinjaTarget's NinjaScope and NinjaRule
fields.  NinjaScope and NinjaRule contained much
superfluous data for purposes of facilitating on-
demand rule variable expansion. By using their
data to partially-expand rule variables prior to
creation of NinjaTarget, we see significant post-
build memory savings.  RELNOTES: None.
PiperOrigin-RevId: 308832192
",606235,5701,225547,"cparsons","cparsons@google.com","Copybara-Service","copybara-worker@google.com"
"1837","bazelbuild/bazel","6e87c95361e9bff06c018d50679cfafbe08a6f02",4,"2020-04-28 11:44:05-07:00","Rename Skylark to Starlark in
build/lib/starlarkdebug/...  RELNOTES: None.
PiperOrigin-RevId: 308865253
",606242,5701,225551,"laurentlb","laurentlb@google.com","Copybara-Service","copybara-worker@google.com"
"1838","bazelbuild/bazel","9ec48cf41b0bdea315db5cdacd8d34a2a6b15e51",1,"2020-04-29 09:53:16-07:00","Use failure details in BlazeRuntime and
GrpcServerImpl  Adapts their usage of ExitCode and
AbruptExitException to add FailureDetail values.
Failure modes detected in these classes now have
corresponding codes in failure_details.proto.  For
Bazel's server mode (as opposed to the batch mode)
the startup code path now communicates detailed
failures more often. Because this code path is
visited prior to establishing a gRPC connection,
the normal method of returning a FailureDetail
message in RunResponse is unavailable. Instead,
failures occuring on this path result in a
failure_detail.rawproto file being written to the
location specified by --failure_detail_out.
RELNOTES: None. PiperOrigin-RevId: 309041964
",606447,5704,225583,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1839","bazelbuild/bazel","3b9195323c17821cf4c1ee7243b8b84a6b6ded76",2,"2020-04-29 13:03:07-07:00","bazel syntax: introduce Resolver.Binding  This
refactoring is a first step towards a
go.starlark.net-style one-pass resolver that
produces flat environment frames.  A Binding is a
static abstraction of a variable. The Resolver's
main job is to resolve each Identifier to its
Binding. Bindings are created by binding
occurrences of a name: loads, parameters,
assignments.  Also: - cleanups to Scope enum -
remove specialized errors for long-obsolete
{PACKAGE,REPOSITORY}_NAME. PiperOrigin-RevId:
309080798
",606490,5704,225637,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1840","bazelbuild/bazel","c05b67c69ff899d62a6ea2337484a44438f36cdd",2,"2020-04-29 15:04:32-07:00","Use failure details in InfoCommand,
InvalidConfigurationException  Adapts its usage of
ExitCode and AbruptExitException to add
FailureDetail values. Failure modes detected there
now have corresponding codes in
failure_details.proto.
InvalidConfigurationException now specifies a
fine-grained code to more precisely represent what
configuration-related activity failed. This gets
its first use for platform mapping failures.
(Platform mapping failures may benefit from
additional refinement.)  RELNOTES: None.
PiperOrigin-RevId: 309104771
",606552,5704,225637,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1841","bazelbuild/bazel","8478f78d00ce90999a79f1e67619edf4492b3b96",7,"2020-04-30 08:18:26-07:00","Support Desugar-shadowed Overridable APIs: Type
Hierarchy Analyer - 2 / 3  #desugar #new-android-
api-support #desugar-shadowed-api  - The self-
contained package is to support to analyze type
inheritance and method overriding from a
collection of compiled bytecode.  PiperOrigin-
RevId: 309228346
",602238,5699,221821,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1842","bazelbuild/bazel","ff580817ae94859a858e9b155ba73566d68c4592",4,"2020-04-30 15:01:09-07:00","allow starlark actions to declare which exec_group
they belong to  #11250  FIG_LOSSY_EXPORT=Don't
submit from Critique.  Use hg submit instead, or
sync and re-upload when the diffbase is submitted.
See[] PiperOrigin-RevId: 309306324
",602656,5699,221863,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-worker@google.com"
"1843","bazelbuild/bazel","220a1c8414d92cf59c469591c19274d384109f0b",3,"2020-05-01 10:19:52-07:00","The great Skylark -> Starlark class migration:
SkylarkLateBoundDefault   SkylarkInterfaceUtils
SkylarkModule -> StarlarkBuiltin
SkylarkModuleCategory ->
StarlarkDocumentationCategory
SkylarkInterfaceUtilsTest  This change is
unusually large - apologies.  111 files in the
copybara project reference SkylarkModule and
SkylarkModuleCategory. These also constitute the
vast majority of changes in the Bazel project.  I
could alternatively reduce this change just to
those symbols, due to the size and cross-project
impact. But the other symbols really don't make
much of a difference.  I could also *add* to this
change by also replacing SkylarkCallable, which is
also in most of these files. But I don't know how
much larger that will make the change and I fear
it's already hitting its reasonable limits.
PiperOrigin-RevId: 309428973
",602608,5701,221873,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1844","bazelbuild/bazel","2a8b69a8708aabcf57cb282e9c7614a20ba069b3",2,"2020-05-04 18:31:34-07:00","Wrap the logging Messsage of desugar-identified
boot class path entry under verbose mode and flag
guard auto_desugar_shadowed_api_use  - Avoid
Message flusing and possible cause more memory
use.  PiperOrigin-RevId: 309860225
",603029,5710,222095,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1845","bazelbuild/bazel","640d7f7e503deb263e71553d2ac2b2c3743c4572",1,"2020-05-05 18:18:44-07:00","Make getOptputSymlinks public.  PiperOrigin-RevId:
310060519
",603234,5712,222126,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1846","bazelbuild/bazel","3ef8fb98e7becaac160003f5c24f35914b764bb9",2,"2020-05-06 09:49:48-07:00","Anchor input fetches to source action id  Provide
the specific action id via RequestMetadata which
provided an action input artifact when using
remote_download_minimal. This replaces the
unattributable ""fetch-remote-inputs"" identifier
populated for each input via a nested context.
Closes #11236.  PiperOrigin-RevId: 310170811
",603371,5713,222156,"George Gensure","ggensure@uber.com","Copybara-Service","copybara-worker@google.com"
"1847","bazelbuild/bazel","412e03c4e2c696deeb827c874d10b2393371c866",3,"2020-05-07 08:20:55-07:00","Automated rollback of commit
9a00c789ea46dcb8c73e513ad1ba234a8417fff3.  ***
Reason for rollback ***  Added fix for
unconfigured dependencies causing analysis
failure.  PiperOrigin-RevId: 310361242
",603893,5724,222370,"adgar","adgar@google.com","Copybara-Service","copybara-worker@google.com"
"1848","bazelbuild/bazel","1d93d26d9900328dcba0026bf21cb45cc37a4596",3,"2020-05-07 14:50:42-07:00","bazel syntax: delete StarlarkThread.Extension
This change replaces every use of Extension by
Module. Extension was a pair of a globals
dictionary, and a digest of ""the thread's source
file"" (a dubious concept) and all the Starlark
(actually: .bzl) files it transitively loads.
Before this change, construction of StarlarkThread
would combine the file hash (which is only defined
if the parseWithDigest function was used) with the
transitive hashes of the imports, and would save
this information in the StarlarkThread.  Now,
StarlarkImportLookupFunction does this hashing,
and saves the result in a new field of
BazelStarlarkContext, which is the application-
specific state carried by a Starlark thread
created by Bazel. This field is set only in
threads created by StarlarkImportLookupFunction.
SkylarkTestCase.newStarlarkThread sets it to a
dummy value, because execAndExport requires it to
be set. (It was implicitly a dummy value prior to
this change: in these tests source files are not
parsed with parseWithDigest, and newStarlarkThread
uses an empty import map.)  Also: - use byte[] not
string for digest. - StarlarkImportLookupValue   -
record the transitive digest alongside the module.
- use == equivalence relation. There is no
realistic scenario in which     two distinct SILV
instances alive at the same time might be equal. -
terminology:         import -> load      extension
-> module       hashCode -> digest - without
Fingerprint, lib.syntax no longer depends on
lib.util. - Extension.checkStateEquals moved to
SerializationCheckingGraph. - Eval: hoist loop-
invariant code for LoadStatement -
discard_graph_edges_test: remove assertions on
cardinality of Extension.   The cardinality of
Module is quite different, and not something that
belongs in this test.  A follow-up change will
remove StarlarkFile.getContentHash.  This is a
breaking API change for Copybara.  PiperOrigin-
RevId: 310441579
",603800,5725,222394,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1849","bazelbuild/bazel","dfcda9e1fb417af94884b319d40ce747b2b7c871",2,"2020-05-08 13:10:45-07:00","bazel syntax: replace map with callback for module
loading  This change replaces the map of Modules,
keyed by name, provided at thread creation, with a
callback, so that clients can implement loading
lazily. The interpreter has no need to enumerate
modules.  Also, document next steps for long-
awaited decoupling of thread and module.  This is
a breaking API change for Copybara.  PiperOrigin-
RevId: 310614969
",603944,5724,222373,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1850","bazelbuild/bazel","511cfd918b753e149256922aeb9638d0c53e3df4",2,"2020-05-11 07:35:04-07:00","Turn ProcessWrapperUtil helper functions into a
ProcessWrapper class.  This will make it easier to
carry the process-wrapper configuration around. In
particular, I want to add the ability to pass
arbitrary extra flags to the tool, and carrying
them around explicitly and separately from the
process-wrapper path adds a lot of noise
everywhere.  This also cleans up the way we gain
access to the process-wrapper binary and the
checks to see if it is supported by homogenizing
all logic into a single place and removing OS-
specific checks from a variety of places.  Part of
https://github.com/bazelbuild/bazel/issues/10245.
RELNOTES: None. PiperOrigin-RevId: 310908570
",603973,5726,222421,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1851","bazelbuild/bazel","d281df7d5e21de8d557cf24687f060a872b4ad66",16,"2020-05-11 12:27:06-07:00","The great Skylark -> Starlark class migration:
SkylarkModules   SkylarkRuleClassFunctions
SkylarkRuleContext   SkylarkAspect
SkylarkDefinedAspect   SkylarkExportable
SkylarkNativeAspect   SkylarkNativeModule
SkylarkAspectApi   SkylarkNativeModuleApi
SkylarkRuleContextApi   SkylarkRuleFunctionsApi
SkylarkAspectStub   FakeSkylarkAspect
FakeSkylarkNativeModuleApi
FakeSkylarkRuleFunctionsApi
SkylarkDefinedAspectsTest
SkylarkRuleClassFunctionsTest
SkylarkRuleContextTest
SkylarkRuleImplementationFunctionsTest
SkylarkStringRepresentationsTest   SkylarkTestCase
PiperOrigin-RevId: 310967362
",604095,5726,222468,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1852","bazelbuild/bazel","79a201b924c3007736d7cbeec7d7898e00b9a0c7",4,"2020-05-12 06:26:56-07:00","Fold killDelay into ProcessWrapper.  The kill
delay setting comes from the
--local_termination_grace_seconds option (it's not
specific to individual process-wrapper
invocations) and we want every process-wrapper
invocation to respect it.  In the past, we were
propagating this value through various layers so
that we could reach the places where command lines
were built... but we can now take advantage of the
ProcessWrapper object to pass this information
around.  Part of
https://github.com/bazelbuild/bazel/issues/10245.
RELNOTES: None. PiperOrigin-RevId: 311112402
",604152,5726,222474,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1853","bazelbuild/bazel","d7c1cefc8c082fd7119470436f366c618d1eea06",18,"2020-05-12 07:51:48-07:00","The great Skylark -> Starlark class migration:
SkylarkRuleConfiguredTargetUtil
SkylarkExecutionResult   SkylarkOS   SkylarkPath
SkylarkRepositoryContext
SkylarkRepositoryDebugModule
SkylarkRepositoryDefinitionLocationEvent
SkylarkRepositoryFunction
SkylarkRepositoryModule   SkylarkInfo
SkylarkExecutionResultApi   SkylarkOSApi
SkylarkRepositoryContextApi   SkylarkInfoTest
PiperOrigin-RevId: 311124209
",604147,5726,222474,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1854","bazelbuild/bazel","59183b6abb2994ff021dbeafc7f3c136f0218caa",2,"2020-05-12 11:05:09-07:00","Add a mechanism to pass extra flags to the
process-wrapper.  This adds a new
--process_wrapper_extra_flags repeated flag that
takes extra flags to pass to the proces-wrapper.
These flags are appended to the invocation built
by Blaze, so we can use this to override builtin
computed values.  We'll use this to controlledly
roll out the changes from https://github.com/bazel
build/bazel/commit/7828118ea8f4150aa1eae4ab3133935
ffe221eb5 (and, later, https://github.com/bazelbui
ld/bazel/commit/9c1853aa2fe49cf80dd467bb4020eb0822
d53881), both of which required a Bazel release
rollback due to unforeseen problems.  Part of
https://github.com/bazelbuild/bazel/issues/10245.
RELNOTES: None. PiperOrigin-RevId: 311162177
",604213,5726,222486,"jmmv","jmmv@google.com","Copybara-Service","copybara-worker@google.com"
"1855","bazelbuild/bazel","9f2cab5d84678e492d8f5848525633f1c73f0994",2,"2020-05-12 12:00:24-07:00","Provide transitive digest of bzl files for each
Starlark Module.  Replace the optional label in
Module with a context object, storing arbitrary
additional data. The context will still carry a
label which can be used to enhance the information
provided by the repr, but also allows to store
more information, useful outside of Starlark
interpreter. An example of this is the transitive
hash of the bzl files loaded by the module, which
is not relevant to Starlark itself, but is
important in Bazel.  Move the concept of
bzlTransitiveDigest from BazelStarlakContext
(associated with the thread) to new
BazelModuleContext, which is added to the Starlark
module.  The concept of the transitive digest
makes most sense at the level of the module -- it
means the `digest({bzl \in
transitively_loaded(module)})`. After this change,
we rely on picking appropriate module to get the
digest from rather than the data associated with
the StarlarkThread.  One of the uses of the
bzlTransitiveDigest is adding a digest for
RuleClass instances. After this change, we
explicitly use the hash of the module which
defines the RuleClass itself.  PiperOrigin-RevId:
311173293
",604208,5727,222508,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1856","bazelbuild/bazel","18694cd7a94597dcd04f1224635fa66129b6acf6",2,"2020-05-12 15:40:05-07:00","The great Skylark -> Starlark class migration:
SkylarkConfigurationField
SkylarkConfigurationFieldProcessor
SkylarkAspectClass   AndroidSkylarkCommon
ConfigSkylarkCommon   AndroidSkylarkCommonApi
ConfigSkylarkCommonApi   FakeAndroidSkylarkCommon
FakeConfigSkylarkCommon
SkylarkConfigurationFieldProcessorTest
AndroidSkylarkCommonTest
Attribute.SkylarkRuleAspect
Attribute.SkylarkComputedDefaultTemplate
Attribute.SkylarkComputedDefault  PiperOrigin-
RevId: 311216560
",604422,5729,222536,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1857","bazelbuild/bazel","4cf7a65acabb3309310e016cc299d10f4cd711ae",2,"2020-05-12 17:20:13-07:00","Implement -Werror: in JavaBuilder  PiperOrigin-
RevId: 311233509
",604539,5730,222574,"cushon","cushon@google.com","Copybara-Service","copybara-worker@google.com"
"1858","bazelbuild/bazel","5c8a5f55b9bd2455ed6392f5f334a3b4669199e4",14,"2020-05-13 10:35:36-07:00","The great Skylark -> Starlark class migration:
AppleSkylarkCommon   ObjcProviderSkylarkConverters
SkylarkTestingModule
AspectValueKey.SkylarkAspectLoadingKey
AspectValueKey.HostSkylarkAspectLoadingKey
ErrorReadingSkylarkExtensionException
SkylarkAspectFactory   SkylarkModuleCycleReporter
ToplevelSkylarkAspectFunction   ToplevelSkylarkAsp
ectFunction.LoadSkylarkAspectFunctionException
SkylarkBuildApiGlobals
AndroidSkylarkApiProviderApi
SkylarkTestingModuleTest  PiperOrigin-RevId:
311357679
",604789,5731,222559,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1859","bazelbuild/bazel","47a99f316193b9f1865d0feb1a2a085505661859",2,"2020-05-13 12:35:26-07:00","The great Skylark -> Starlark class migration:
JavaSkylarkApiProviderApi
JavaToolchainSkylarkApiProviderApi
SkylarkConstructor   SkylarkIndexable
SkylarkQueryable   SkylarkFileAccessor
FakeJavaToolchainSkylarkApiProviderApi
BuildConfigurationSkylarkTest
SkylarkRepositoryContextTest
SkylarkRepositoryIntegrationTest  PiperOrigin-
RevId: 311382863
",604790,5731,222557,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1860","bazelbuild/bazel","154b28a66adde011031296a9464052165c68b0fc",1,"2020-05-15 07:45:06-07:00","Merge SkylarkClassObject into ClassObject
RELNOTES: None. PiperOrigin-RevId: 311727988
",604693,5729,222513,"laurentlb","laurentlb@google.com","Copybara-Service","copybara-worker@google.com"
"1861","bazelbuild/bazel","3ce647f06cf28b87708461f427cf3a51ecb8a2c2",2,"2020-05-15 09:05:03-07:00","Clean up ExitCode uses without details  This CL
reduces the uses of an AbruptExitException
constructor without details and conveys details
through CommandEnvironment. This is part of an
extended effort.  RELNOTES: None. PiperOrigin-
RevId: 311739946
",604739,5729,222516,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1862","bazelbuild/bazel","8345b792b755a33c4035b2d1dc46c5be05201f58",3,"2020-05-15 13:23:29-07:00","The great Skylark -> Starlark class migration:
SkylarkCallable -> StarlarkMethod
SkylarkGlobalLibrary -> StarlarkGlobalLibrary
Both of these are used throughout copybara.
PiperOrigin-RevId: 311790307
",604606,5728,222495,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1863","bazelbuild/bazel","8329068a6551f67a2c45337dcfbc806621ead3db",5,"2020-05-18 09:08:43-07:00","bazel syntax: break dependency on lib.profiler
...by injecting the wall-time profiler from a
static initializer in lib.packages.  PiperOrigin-
RevId: 312090563
",604848,5728,222460,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1864","bazelbuild/bazel","61ec8d1bec3c8281a12e17c4498816d945c72058",3,"2020-05-18 11:02:05-07:00","Skylark -> Starlark for various methods,
variables, constants, etc.  PiperOrigin-RevId:
312113900
",604865,5728,222460,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1865","bazelbuild/bazel","1d8d138183995ee41bbdb5b7ee8b6c023e558fba",3,"2020-05-18 12:10:49-07:00","Create a clearer distinction between normal tree
artifact children and action template expansion
outputs.  Two different factory methods are used:
createTreeOutput for normal tree artifact children
and createTemplateExpansionOutput for template
expansion outputs. Additional documentation and
validation is added for action templates to ensure
that implementations follow the contract.  After
this, I plan to add a method on TreeFileArtifact
to distinguish between the two so that various
places can properly treat these two different tree
file artifact types differently instead of always
having to handle both possibilities.  A lot of
tests needed to be cleaned up, but the only test
that needed a major overhaul was
TreeArtifactBuildTest since it was generally
declaring the outputs before creating the action.
RELNOTES: None. PiperOrigin-RevId: 312128057
",604918,5757,222776,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1866","bazelbuild/bazel","c034d7109adb2060bc05ebba189d2a423acd09d4",1,"2020-05-18 17:39:13-07:00","Consolidate Rewriters of method invocation
retargeting  - Move hard-coded class member
retargeting into a text proto config file. -
Replace ad-hoc counters with a united runtime
class set.  PiperOrigin-RevId: 312188425
",605027,5756,222794,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1867","bazelbuild/bazel","546f1a0c7d66e5cf91c1faa836afb22a29e7d11f",14,"2020-05-19 01:22:45-07:00","Move `--retarget_core_library_member` flag to text
proto configuration.  - Unify and reuse
`ClassMemberRetargetRewriter` for invocation site
replacement logic. - Prepare for flag removal.
PiperOrigin-RevId: 312237141
",605106,5757,222812,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1868","bazelbuild/bazel","2a54659ec05d4f603754ed8843ea286ce5024cd9",2,"2020-05-19 04:48:52-07:00","Split ConfigurationTransitionDependency into a new
class   and break relation to the existing
Dependency.  Part of work on toolchain
transitions, #10523.  Closes #11398.  PiperOrigin-
RevId: 312256302
",605163,5759,222819,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1869","bazelbuild/bazel","09d1370d4f6d334d24059a9fe3b2f960658733d1",2,"2020-05-19 08:26:55-07:00","bazel syntax: disentangle StarlarkThread and
Module  New interpreter API (if you don't use a
helper function):  To call a function:     try
(Mutability mu = Mutability.create(""myexpr"")) {
StarlarkThread thread = new StarlarkThread(mu,
semantics);       return Starlark.call(thread, fn,
args, kwargs);    } catch (EvalException ex) {
...    }  To execute a file:     StarlarkFile file
= ...    Module module = Module.create(); //
default environment    Resolver.resolve(file,
module);    try (Mutability mu =
Mutability.create(""myfile"")) {
StarlarkThread thread = new StarlarkThread(mu,
semantics);       Starlark.exec(file, thread,
module);    } catch (EvalException ex) {
...    }    // Inv: module contains globals
Overview of change:  - Eliminate the concept of ""a
Starlark thread's module"".   A module is rightly
associated with a Starlark function, not a thread.
Consider a thread used just to call an existing
function value, for example.   (Previously, a
module would always have been created even if
unused.)  - Modules are now created explicitly,
from a predeclared environment   and a semantics,
which is used for filtering but not retained.
Modules can now be created before threads---the
logical order.   This simplifies a number of
clients.  - Flatten Module. It is no longer a
linked list. It contains only    (predeclared,
globals, clientData),   and exportedGlobals which
will go away soon.  - Simplify processing of
FlagGuardedValues. They are either unwrapped   (if
enabled by semantics) or left as is, if disabled.
This means they are visible through
Module.getPredeclared.  - Delete
Module.mutability. It is inessential and raises
questions of consistency with StarlarkThread.
What really matters is whether a module's global
values are mutable.  - Delete
StarlarkThread.Builder. A simple constructor now
suffices:    new StarlarkThread(Mutability,
StarlarkSemantics).  - EvaluationTestCase now
exposes two hooks for Module and Thread creation
so that tests can predeclare bindings, set client
data, and insert   thread local values.  Creation
of Module and Thread is now fully lazy.   A
follow-up change will eliminate the regrettable
use of inheritance.  Also:  - Move ModuleCodec
into Module, so that we don't need to harm its
API.  - Use separate UNIVERSE and predeclared
buckets in Module.   The UNIVERSE is always
implicitly available.   The API doesn't fully
separate them yet (needs Resolver work),   but
this should reduce the amount of map copying and
redundant   specification.  - Add more pre-
evaluated expressions to
ParamDescriptor.evalDefault   so that we can
bootstrap all the @Param annotation's default
values   used by Starlark.UNIVERSE without JVM
deadlock. This breaks a cyclic   dependency
between the evaluator and UNIVERSE.  - Use
composition not inheritance of EvaluationTestCase
in more tests.  This is my 6th attempt at this
change in as many months.  This is a breaking API
change for Copybara.  PiperOrigin-RevId: 312284294
",604928,5759,222785,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1870","bazelbuild/bazel","94ff76021c20550587f416859ea829394f0ed9da",8,"2020-05-19 12:59:28-07:00","Document that ActionAnalysisMetadata#getOwner() is
never null, add some Preconditions checks to make
that more clear, and ensure that ActionOwner's
fields are never null except for the
SYSTEM_ACTION_OWNER wart.  Also do some drive-by
serialization annotation clean-ups and other
housekeeping.  PiperOrigin-RevId: 312336006
",605271,5762,222861,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1871","bazelbuild/bazel","226ad7f1e2ca26bb41d4bd7ee6440fb73a564add",1,"2020-05-19 13:58:03-07:00","Do not re-run Ninja actions when only order-only
inputs change.  RELNOTES: None. PiperOrigin-RevId:
312347597
",605320,5762,222882,"ahumesky","ahumesky@google.com","Copybara-Service","copybara-worker@google.com"
"1872","bazelbuild/bazel","a0f7eb1a706780c6b4de081b912320c1a157c836",1,"2020-05-19 22:41:48-07:00","Encode MobileInstallCommand failures with
FailureDetails  RELNOTES: None. PiperOrigin-RevId:
312423138
",605472,5762,222880,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1873","bazelbuild/bazel","a61681ec7bbc45b7e22cede4f19a1e1c036495f8",1,"2020-05-20 10:00:40-07:00","Add StarlarkBuiltinsFunction  This is the first
step toward allowing predeclared symbols in BUILD
and .bzl files to be overridden by a special set
of Starlark files. This CL adds a Skyfunction that
depends on an exports.bzl file (currently a
hardcoded dummy label) and parses its module to
obtain certain symbols.  Follow-up work will have
StarlarkImportLookupFunction resolve
""@builtins//""-labeled files to a special location,
and use the results of StarlarkBuiltinsFunction to
modify the available bindings.  Design doc: https:
//docs.google.com/document/d/1GW7UVo1s9X0cti9OMgT3
ga5ozKYUWLPk9k8c4-34rC4/edit#  Work toward #11437.
RELNOTES: None PiperOrigin-RevId: 312501918
",605740,5765,222987,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1874","bazelbuild/bazel","b100b1d65f45864efb8e9855cdce6e3de2deec66",3,"2020-05-20 10:22:17-07:00","Skylark -> Starlark for various methods,
variables, constants, etc.  PiperOrigin-RevId:
312506803
",605742,5765,222985,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1875","bazelbuild/bazel","137b759c8f6d37d7512d621571aa9446d5c1ec4d",1,"2020-05-20 11:27:14-07:00","Allow re-exporting of module maps/headers from
dependencies' `CcInfo`s when merging.  This change
adds a new `direct_cc_infos` keyword argument to
`cc_common.merge_cc_infos` that takes another list
of `CcInfo` providers (not already specified in
the `cc_infos` argument). Both lists will be
merged into the new `CcInfo`, but the module maps
and headers of the `direct_cc_infos` providers
will be re-exported by the new provider (the
headers accessible through the `direct_*` fields
in Starlark).  RELNOTES: None. PiperOrigin-RevId:
312520489
",605811,5765,222997,"allevato","allevato@google.com","Copybara-Service","copybara-worker@google.com"
"1876","bazelbuild/bazel","1f6758f6a7426f1ebc48f4d1ba8538613e703e99",1,"2020-05-21 08:41:53-07:00","Simplify Dependency and make it use AutoValue.
Part of work on toolchain transitions, #10523.
Closes #11460.  PiperOrigin-RevId: 312676534
",605675,5766,222994,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1877","bazelbuild/bazel","771a0297b8044a0544095f7b4e90b5399186ef32",14,"2020-05-26 12:04:16-07:00","Rename StarlarkImportLookupFunction and friends
This renames ""StarlarkImportLookup*"" to
""BzlLoad*"", and also changes a number of uses of
""import"" to ""load"". This helps keep names to a
more manageable length and is in line with modern
Starlark terminology.  This is refactoring work
toward adding a new kind of .bzl loading context,
for Bazel-internal .bzl files.  Work toward
#11437.  RELNOTES: None PiperOrigin-RevId:
313240742
",605779,5764,223045,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1878","bazelbuild/bazel","974879de97b891f53b21daf0cfe5ac959dcdbcf3",2,"2020-05-27 13:25:52-07:00","Avoid unnecessary insertion of tree file artifacts
to artifactData.  Tree file artifacts that are not
template expansion outputs are already stored as
part of their parent artifact in treeArtifactData,
so they do not need to also be stored in
artifactData. This is accomplished by having
callers insert metadata into the store instead of
doing it in constructFileArtifactValue and
maybeStoreAdditionalData.  Additionally,
constructFileArtifactValue and
maybeStoreAdditionalData are merged into a single
method since they are always called in succession,
and the latter's name doesn't make much sense
after https://github.com/bazelbuild/bazel/commit/c
35878a258d3c8a5305389aadd17ac0049defa15 removed
additionalOutputData. Outdated comments are
cleaned up.  FilesystemValueChecker made some
assumptions about tree files appearing in both
maps except in the remote case, so had to change
the logic there a bit.  RELNOTES: None.
PiperOrigin-RevId: 313452251
",605852,5769,223065,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1879","bazelbuild/bazel","02054bbca72cdfb88f6a596302a577698c8e46f7",10,"2020-05-28 09:49:38-07:00","Remove AspectValueKey.aspectConfigurationIsHost
method.  PiperOrigin-RevId: 313605453
",605814,5769,223080,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1880","bazelbuild/bazel","3eb2d25ae4ff201da7dbd217d35493948e02d66d",2,"2020-05-28 10:39:12-07:00","Introduce a Builder class for creating instances
of ConfiguredTargetKey.  Part of work on toolchain
transitions, #10523.  PiperOrigin-RevId: 313615963
",605832,5769,223087,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1881","bazelbuild/bazel","be6ee5c9266d7409e87cb385df44eca767fd9a54",1,"2020-05-28 11:41:46-07:00","Remove the ConfiguredTargetKey factory methods.
PiperOrigin-RevId: 313628598
",605992,5769,223082,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1882","bazelbuild/bazel","b8d21f95ab9384c8e09d6f26690697f8397b51e9",1,"2020-05-28 11:47:20-07:00","Specify FailureDetails for default exit values not
expected to be used  The pre-existing INTERNAL
values ought to be overwritten before they're
used. Replacing them with CrashFailureDetail
values provides more context in case that ever
happens.  RELNOTES: None. PiperOrigin-RevId:
313629803
",606000,5769,223080,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1883","bazelbuild/bazel","9198819ef62df4a2cd670c4392078540a439964c",1,"2020-05-28 14:57:45-07:00","Refactor and document the BzlLoadFunction inlining
code path  This is refactoring work toward adding
a new kind of .bzl loading context, for Bazel-
internal .bzl files.  Work toward #11437.
Changes: - Add more documentation of the inlining
behavior to save future readers some effort and
make the invariants explicit. This also
streamlines away some inline (haha) comments. -
The recursive entry point to the inlining code
path (computeInlineWithState()) now accepts
InliningState, to keep the signatures more uniform
and avoid forcing other callers to break
encapsulation. Responsibility for registering
child nodes with the parent is moved into that
function. - Split cache-checking and child-
registration logic (computeInlineWithState()) from
code that runs only when we need to compute it
from scratch (computeInlineForCacheMiss()). - Gave
InliningState a little more responsibility: It now
has a couple factory methods and manages the
visited stack. A small change, but it helps
readability. - Store a callback in InliningState
instead of the whole cacheDataBuilder, to keep the
knowledge minimal.  (In the future,
StarlarkBuiltinsFunction will grow an inlining
code path that will call into
computeInlineWithState(). The recordingEnv will be
threaded through StarlarkBuiltinsFunction but
unwrapped just before the call back to
computeInlineWithState(), mirroring the current
recursive call. I would've liked to avoid forcing
callers to do this unwrapping and instead
localizing the knowledge to
computeInlineWithState(), but that would mean
having computeInline() manufacture a dummy
recordingEnv, which seemed confusing to readers.)
RELNOTES: None PiperOrigin-RevId: 313665628
",606066,5769,223107,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1884","bazelbuild/bazel","8d669290e3ad783df3115b2283d6b488f8bd84b7",5,"2020-05-28 15:27:38-07:00","Rename/clarify ast manager and inlining
terminology  This is refactoring work toward
adding a new kind of .bzl loading context, for
Bazel-internal .bzl files.  Work toward #11437.
Changes: - ""ASTFileLookupValueManager"" ->
""ASTManager"" (NB: camel case ""Ast"" is preferred
Java style but ""AST"" is what we have historically,
so let's be consistent; also converted an existing
camelcase to uppercase) - ""InliningManager"" ->
""CachedBzlLoadDataManager"" -- this aligns better
with its actual purpose and side-steps the
ambiguity of bzl inlining vs ast inlining. Also
renamed its fields. - specify ""bzl inlining"" in a
couple places to avoid ambiguity but generally
interpret ""inlining"" as referring to
BzlLoadFunction unless otherwise specified -
caution against calling computeInline from
anywhere but PackageFunction  RELNOTES: None
PiperOrigin-RevId: 313670971
",606051,5769,223133,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1885","bazelbuild/bazel","8e08aa3ff5d0e25752fe92d7cd2dd1978d15cc55",1,"2020-05-29 11:27:59-07:00","Remove unneeded static serialization method.
PiperOrigin-RevId: 313817831
",606166,5769,223175,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1886","bazelbuild/bazel","0b31794c3f7b06f2197e7d6071ce77744b53b11b",1,"2020-06-01 02:10:52-07:00","Introduce AggregatedSpawnMetrics  This allows
aggregating `SpawnMetrics` per different execution
modes (remote, worker, local). So now we'll be
able to differentiate between the aggregated
metrics for remote, local and worker executions,
which is useful because we probably don't want to
aggregate the queuing time for remote and worker
execution together.  This change doesn't yet
change any output, but in the future we should be
able to report the metrics not only for remote
execution, but also for local actions and workers.
The next step is populating more metrics (not only
execution time) for local and worker execution.
RELNOTES: None. PiperOrigin-RevId: 314097914
",606402,5771,223248,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1887","bazelbuild/bazel","df1a96e61e3a7ac682152c6a47b5716f00183597",4,"2020-06-03 14:28:46-07:00","Add a new ConfiguredTargetKey subclass for
configured targets with explicit toolchain
contexts.  Part of work on toolchain transitions,
#10523.  PiperOrigin-RevId: 314604998
",607104,5776,223421,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1888","bazelbuild/bazel","f70067fc536158aca5401645a107c0884be3c831",2,"2020-06-03 14:32:24-07:00","ConfiguredTargetFunction should use the given
ToolchainContextKey, if available.  Part of work
on toolchain transitions, #10523.  PiperOrigin-
RevId: 314605757
",607143,5776,223420,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1889","bazelbuild/bazel","df9825958128beaaa4c7ded4c433f276308dc5e0",1,"2020-06-03 14:53:24-07:00","Implement directory expander, currently only used
in map_each.  Design doc: https://docs.google.com/
document/d/14MalcSscNHKriA9aHalRQSwNggSPO0JzSLbwzQ
MO_so/edit  PiperOrigin-RevId: 314609929
",607243,5777,223437,"tomlu","tomlu@google.com","Copybara-Service","copybara-worker@google.com"
"1890","bazelbuild/bazel","eb048fd3bb74d05d6f65edeb6f29161bc0da5c97",6,"2020-06-04 01:35:28-07:00","[Profiler] Add target label of action owner to
profiler trace files  While analyzing trace files,
it is useful to have target label associated with
the action which was created by that target. This
change adds target label under trace events which
have owner, mostly Action-type event. Target label
is saved as a custom entry to ""args"" map attached
to each Action event, as per trace format
definition. The change is guarded by new flag
`--experimental_profile_include_target_label`
Closes #11443.  PiperOrigin-RevId: 314687980
",607373,5777,223443,"Sergey Balabanov","sergeyb@uber.com","Copybara-Service","copybara-worker@google.com"
"1891","bazelbuild/bazel","bd864ef45a64b09d04978f3643a43f6b16e3877d",1,"2020-06-05 07:34:16-07:00","Add a copy() method for Dependency.Builder.  Part
of work on toolchain transitions, #10523.
PiperOrigin-RevId: 314925260
",607538,5777,223469,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1892","bazelbuild/bazel","31b6880c254b099d2e7feb27708b6d52503c6148",4,"2020-06-05 14:07:06-07:00","Skip unnecessary call to getFastDigest when the
digest is injected.  PiperOrigin-RevId: 314992993
",607815,5778,223502,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1893","bazelbuild/bazel","1af65cf2ca952671ab483921f240bbc6bf106725",6,"2020-06-06 18:17:53-07:00","Add basic builtins injection functionality, behind
a flag  BzlLoadFunction now requests the injected
builtins from StarlarkBuiltinsFunction. Added
BuildViewTestCase tests of injection. Improved
error handling is in a follow-up CL.  Other
changes: - Add cautionary note about
BuildViewTestCase#getConfiguredTarget returning
null.  Work toward #11437.  RELNOTES: None
PiperOrigin-RevId: 315115168
",607993,5778,223635,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1894","bazelbuild/bazel","844fef5289548a0ee3ecbb70c634e63f4bc156be",2,"2020-06-08 10:30:36-07:00","Improve error handling for builtins injection
BuiltinsFailedException gets wrapped as a
BzlLoadFailedException in BzlLoadFunction, and
vice versa in StarlarkBuiltinsFunction. This makes
for more verbose errors, but generally users who
are not Bazel developers shouldn't see these
errors.  The tests assert against the long form of
the error rather than a substring to demonstrate
the message in context.  Also slightly refactored
the way errors in loaded bzls are reported, for
uniformity between inlining and non-inlining code
paths.  Work toward #11437.  RELNOTES: None
PiperOrigin-RevId: 315303094
",608168,5778,223668,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1895","bazelbuild/bazel","1d3f309c1ce14cf7cf78d8e4127ae8d3d3cc00bc",2,"2020-06-08 10:58:25-07:00","Factor BzlLoadFunction.InliningState into callers
of the inlining code path  InliningState becomes
package-visible and gains some documentation. It
is now an opaque object that replaces the set of
visited bzl keys for a BUILD file.  This prepares
the way for a follow-up CL that has
StarlarkBuiltinsFunction call BzlLoadFunction's
inlining code path with an existing InliningState
(obtained from prior BzlLoadFunction evaluation).
It allows us to have it call computeInline(), the
same entry point which PackageFunction calls,
rather than exposing computeInlineWithState() to
package visibility.  computeInlineWithState() is
renamed to computeInlineCachedData(), since its
distinguishing feature is now only that it returns
the cached data wrapper, and not that it accepts
InliningState.  Work toward #11437.  RELNOTES:
None PiperOrigin-RevId: 315309686
",608167,5778,223689,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1896","bazelbuild/bazel","2863252a837c9863fb78a41c74f8fb0fa2e8c7ff",4,"2020-06-08 13:14:07-07:00","Add inlining code path to
StarlarkBuiltinsFunction, and tests
StarlarkBuiltinsFunction grows a computeInline()
method that accepts the calling BzlLoadFunction's
InliningState and forwards it back to
BzlLoadFunction#computeInline. It follows the same
RecordingSkyFunctionEnvironment unwrapping
convention as BzlLoadFunction uses to recursively
call itself inline.  CachedBzlLoadData had some
assertions on how its API could be used. These
appear to be overly specific and are removed.
(This allows the transitive dep on builtins to be
resolved in any order relative to other deps.)
The tests are just clones of the existing tests
with inlining turned on.  Work toward #11437.
RELNOTES: None PiperOrigin-RevId: 315338126
",608244,5778,223744,"brandjon","brandjon@google.com","Copybara-Service","copybara-worker@google.com"
"1897","bazelbuild/bazel","40f2f0e27cf69ff63413060ffdd5e4ea3f43ef48",2,"2020-06-08 17:03:06-07:00","Custom-serialize derived artifacts. This allows us
to intern them more efficiently.  Also simplify
ArtifactFactory handling in SkyframeExecutor: the
ArtifactFactory is set at construction time, so
there's no need to mess around with suppliers.
PiperOrigin-RevId: 315383662
",608343,5778,223733,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1898","bazelbuild/bazel","c7262a330666b06063314e1158bc9ae642aed427",1,"2020-06-09 07:47:51-07:00","Rewrite the ConfigurationResolver for simplicity.
This removes a large number of obsolete
optimizations and reduces the code size and
complexity drastically.  Part of work on toolchain
transitions, #10523.  Closes #11441.  PiperOrigin-
RevId: 315482263
",608186,5778,223661,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1899","bazelbuild/bazel","e9137b6684edb9f221fd944a6dd4533efe210e98",6,"2020-06-10 14:16:21-07:00","Add the ToolchainContextKey to dependency chain
classes.  TODOs mark where this will be set and
used.  Part of work on toolchain transitions,
#10523.  Closes #11575.  PiperOrigin-RevId:
315766282
",607660,5775,223522,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1900","bazelbuild/bazel","45576671e2b26cc8572fcbee8e04332e78305d60",1,"2020-06-10 19:15:07-07:00","Encode some environmental execution failures with
FailureDetails  Details failures represented by
EnvironmentalExecException in some general
execution contexts (e.g. AbstractAction,
SpawnAction, StarlarkAction) and some language-
specific implementations (e.g. JavaCompileAction,
CppCompileAction, IncludeScanning).  The
nullability of EnvironmentalExecException's
FailureDetails field is temporary, and intended to
bridge between this CL and its immediate follow-
ups.  RELNOTES: None. PiperOrigin-RevId: 315815272
",607755,5775,223519,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1901","bazelbuild/bazel","0503fee6f6d2058b15a7f7340d52e6faaf3ef5dd",2,"2020-06-11 09:22:27-07:00","The great Skylark -> Starlark class migration:
For rules in tests:  - More renamings of test
target names  - Various symbol renamings
PiperOrigin-RevId: 315913067
",607862,5774,223382,"gregce","gregce@google.com","Copybara-Service","copybara-worker@google.com"
"1902","bazelbuild/bazel","099cf2f9c57936617e912cff73399bbf65f14e64",2,"2020-06-11 12:58:36-07:00","Check the toolchain transition migration status
and use the new transition  Adds a test for the
new toolchain transition functionality.  Adds the
--incompatible_use_toolchain_transition flag to
force all rules to depend on toolchains via the
toolchain transition. Adds the
incompatible_use_toolchain_transition rule
attribute to force a specific rule to depend on
toolchains via the toolchain transition.
RELNOTES: Rule authors should use the
incompatible_use_toolchain_transition rule
attribute to migrate to using the toolchain
transition. jcater to udpate notes further.
Closes #10523.  Incompatible flag issue is #11584.
Closes #11583.  PiperOrigin-RevId: 315959878
",607963,5774,223376,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1903","bazelbuild/bazel","2c97d38f66cf631a37b4b010814fde5695d852e3",2,"2020-06-12 10:16:26-07:00","For RuleContext#getActionOwner, return null
instead of crashing if you request an ActionOwner
for a non-existent exec group. This makes it
easier for callers to handle the return if they
aren't sure what exec groups is going to exist in
the rulecontext.  PiperOrigin-RevId: 316126509
",608149,5774,223403,"juliexxia","juliexxia@google.com","Copybara-Service","copybara-worker@google.com"
"1904","bazelbuild/bazel","50226aca5fd3b0831c3ed28ae4d7331a7f05b97a",24,"2020-06-14 21:28:27-07:00","Replace 'whitelist' with 'allowlist' in Bazel
source code.  Phase 1: Rename class, methods,
variables, and error messages. This change still
leaves the list locations at hard coded paths to
//tools/whitelists. Those may each require a
separate migration. NOTE: We are not considering
this a breaking change, even though the error
messages might change.  Also: Fix some things that
ErrorProne complains about, but only if critique
could provide a fix. I don't think that
refactoring code to please a strident tricorder
test should be part of a renaming CL.  RELNOTES:
None PiperOrigin-RevId: 316394382
",608183,5774,223402,"aiuto","aiuto@google.com","Copybara-Service","copybara-worker@google.com"
"1905","bazelbuild/bazel","621559cb02a4408b957932dc90bc3a0b7f9d1b23",1,"2020-06-16 07:21:58-07:00","bazel collect: simplify NestedSet depth limit
check  (Second attempt at commit
ed9d6390eb78303631c25b3d4776cb07eeded544, which
was rolled back in commit
867d232f27aa762d4b15e811df18b1939cc1a34b.)  This
change causes NestedSet to record the depth of the
graph, exposed to the package as
NestedSet.getApproxDepth().  To save space, we
squirrel the value into the 30 bits liberated by
the removal of the size field, which since commit
ea5ec545fbcf815163e419a0e853f65527028acf is now
recorded in the memo field, along with the
traversal replay information. The previous attempt
recorded the depth in the graph, but this led to a
greater than expected RAM regression, of about 1%,
causing it to be rolled back.  This approach in
this CL has a significant drawback: because
NestedSet is just a wrapper around the Object[]
array that represents the graph node, the depth is
not durably recorded in the graph, as it was in
the previous approach. The union constructor
effectively discards the depth of all direct
successors except the deepest, thus the
getNonLeaves method cannot restore the correct
depth, so the NestedSets it returns may report a
depth larger than their true depth.  Having access
to the (approximate) depth in constant time,
without flattening, allows the Starlark depset
constructor to reject too-deep sets eagerly
instead of deferring the check till flattening
time, which resulted in the scattering of
unchecked NestedSetDepthExceptions throughout the
code base, including in such places as the
Starlark interpreter's 'str' operator.  Java code
that uses NestedSet is not subject to any depth
limit or check, but could in principle add
explicit checks at important boundaries, such as
rule construction, provider construction, and so
on. (That said, getApproxDepth is currently not
public.) Even in the absence of such explicit
checks, if an overly deep depset is constructed by
alternating Java and Starlark operations, a
Starlark operation will eventually fail even it
was not the one that crossed the threshold of the
limit.  RELNOTES: The --debug_depset_flag has been
removed as it is in effect always on at no cost.
PiperOrigin-RevId: 316676111
",608533,5775,223461,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1906","bazelbuild/bazel","41cb9438e5f65a84e27d67c6d5346435aa77792f",2,"2020-06-16 08:41:26-07:00","Don't process headers for objc non_arc compilation
This is in preparation for enabling parse_headers
for objc_library. It's currently a no-op.  We only
need to validate headers in objc_library once, for
arc compilation.  RELNOTES: None PiperOrigin-
RevId: 316688268
",608552,5775,223462,"waltl","waltl@google.com","Copybara-Service","copybara-worker@google.com"
"1907","bazelbuild/bazel","81db8a5671f47369091fe77ea748cdfcbfb4239a",9,"2020-06-16 13:54:48-07:00","Hoist up the useToolchainTransitionParameter to
the caller.  This will allow Aspects to use the
toolchain transition.  Part of work on toolchain
transition, #10523.  PiperOrigin-RevId: 316751670
",608567,5775,223465,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1908","bazelbuild/bazel","bc4ef8c5ad7bbd274fe5481ca45d8d8a9da4f1d7",3,"2020-06-16 13:58:01-07:00","Add API for aspects to declare they are ready for
the toolchain transition migration.  Part of work
on toolchain transitions, #10523.  PiperOrigin-
RevId: 316752326
",608607,5775,223472,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1909","bazelbuild/bazel","d0ceb46f8aca1d13d5d2198eeea56b12b0f87661",1,"2020-06-22 18:28:30-07:00","bazel query: report rule instantiation stack in
--output=proto  Also: - document unpleasant
discoveries about Target.getLocation. - slight
change to behavior of --relative_locations:
before, a target whose location is
/workspace/dir1/a.txt   belonging to package
/workspace/dir2/BUILD would not be   relativized;
now, it is printed as dir1/a.txt.   (This happens
for source file targets created by an   explicit
call to exports_files in a .bzl file elsewhere.)
PiperOrigin-RevId: 317777452
",608873,5775,223513,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1910","bazelbuild/bazel","3d90c3f99968dc8b747b9a999de61b0687c2ce43",2,"2020-06-24 03:07:50-07:00","Provide LTO bitcode files via LibraryToLinkApi
Starlark Api.  PiperOrigin-RevId: 318033214
",608818,5775,223517,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1911","bazelbuild/bazel","1847a01b9a84a3384f2fa3425dc5d225fc2a9fb2",11,"2020-06-24 12:30:11-07:00","Rename the BlacklistPackagePrefix family of
classes and their related functions.  Rename
BlacklistPackagePrefix to IgnoredPackagePrefix to
reflect the fact that this comes from the
bazelignore file in repositories. Update all code
references referring to the blacklist to use a new
variable or method name to reflect the new class
name.  RELNOTES: None PiperOrigin-RevId: 318117736
",608846,5775,223533,"kkress","kkress@google.com","Copybara-Service","copybara-worker@google.com"
"1912","bazelbuild/bazel","bd7999eed71fc14c68890553c68fa5a8f608922c",1,"2020-06-25 07:32:41-07:00","C++: Give error when grep-includes missing  This
was crashing during execution of compilation
actions.  RELNOTES:none PiperOrigin-RevId:
318268035
",609019,5775,223529,"plf","plf@google.com","Copybara-Service","copybara-worker@google.com"
"1913","bazelbuild/bazel","10cb3c5f3f6084727ca384b5a29f7245c15afc77",5,"2020-06-25 10:48:28-07:00","Propagate JavaGenJarsProvider through Starlark-
constructed JavaInfo  PiperOrigin-RevId: 318303229
",608956,5776,223576,"kmb","kmb@google.com","Copybara-Service","copybara-worker@google.com"
"1914","bazelbuild/bazel","75216c74470090c6f720814dbee239ae4102290e",7,"2020-06-25 16:04:29-07:00","Remove remaining undetailed BuildFailedException
constructor  Some loading-phase-related failure
modes have placeholder detailed codes to be
improved when loading-phase failures are detailed.
RELNOTES: None. PiperOrigin-RevId: 318366815
",609036,5776,223574,"mschaller","mschaller@google.com","Copybara-Service","copybara-worker@google.com"
"1915","bazelbuild/bazel","74178a56539ca8da7458b2225afa4ad1e681a83c",2,"2020-06-29 17:42:47-07:00","Provide more accurate ExitCode and FailureDetails
when an exception is caught during the loading
phase.  In each failure instance of
PackageFunctionException, a specific FailureDetail
code will be used to describe the exception. As
the error gets bubbled up, we have to make sure
the information is not lost and is properly passed
up the call chain.  RELNOTES: None. PiperOrigin-
RevId: 318929283
",609361,5776,223621,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1916","bazelbuild/bazel","6e2b1a09c8529c78fbc69f6b65628d2f00dff7ab",1,"2020-07-02 08:40:43-07:00","Add Nullable annotation to packageLocator.
PiperOrigin-RevId: 319415068
",609568,5778,223714,"twerth","twerth@google.com","Copybara-Service","copybara-worker@google.com"
"1917","bazelbuild/bazel","13875947fed420cdec8696bbd33cc1d8e6ce33bf",1,"2020-07-06 10:28:00-07:00","Make sorting of graphless query more efficient.
PiperOrigin-RevId: 319806006
",609711,5778,223740,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1918","bazelbuild/bazel","4784d735f5c13ab7ad0c4c1068c50a3a6a23f855",51,"2020-07-07 11:33:14-07:00","Expand `ActionExecutionMetadata.getKey()` method
to accept an ArtifactExpander.  Computing a key
which uniquely identifies whether 2 actions are
equal is generally impossible without the ability
to expand tree artifacts. The source of the
problem happens for Starlark-defined actions which
use `Args.add_all` with a custom `map_each`
function and `expand_directories` option enabled.
For such functions, we cannot know the real output
of the execution until we can expand the directory
arguments.  Please consider an example:  ``` def
f(file):   if file.is_directory():     return
file.path   return file.path + '_suffix'
directory = ... # input directory args =
ctx.actions.args() args.add_all([directory],
map_each=f, expand_directories=True)
ctx.actions.run(..., inputs=[directory],
arguments=args) ```  If we make a change to `f`,
which only affects the behavior for files, we
cannot detect that without actually expanding the
directory:  ``` def f(file):   if
file.is_directory():     return file.path   return
file.path + '_different_suffix' ```  Technically,
we could have a digest identifying Starlark code
and base the key on that, but that is a feature
which would limit the ability to expand Starlark
in the future and it does not fit the overall
design of it. Additionally to that, we could
theoretically change the function in a way which
does not affect the output for the contents of a
given directory, which would lead to false-
positive changes to the key. Due to those
concerns, the solution to this problem is to
provide the artifact expander so that we can
actually run the Starlark function with the same
parameters as if we were to construct the command
line.  This is a pure refactoring change in
preparation to provide a fix for the bug. We are
adding an optional `ArtifactExpander` parameter
which will only be used in the future and, until
then, is always null.  PiperOrigin-RevId:
320025538
",609375,5777,223620,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1919","bazelbuild/bazel","8545304348a9ef6927beb95b4719fd75ccdda2de",3,"2020-07-07 14:21:40-07:00","Fire build event service event when we complete
the build event lifecycle or fail to publish build
events to the build event service.  RELNOTES:
None. PiperOrigin-RevId: 320059960
",609483,5779,223668,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1920","bazelbuild/bazel","60e34433ac2a8427c1fd0f0834ae0259dceb269e",1,"2020-07-08 06:38:17-07:00","Add support for object files in the Starlark
implementation of cc_import  This change allows
users to import object files when using Starlark
version of cc_import rule (currently hidden behind
'--experimental_starlark_cc_import' flag).
Previously in order to import object files users
were required to put them in the srcs field of
cc_library.  Closes #11696.  PiperOrigin-RevId:
320177122
",609579,5779,223674,"Andrzej Guszak","agluszak@google.com","Copybara-Service","copybara-worker@google.com"
"1921","bazelbuild/bazel","a05fec555fe9fc33e55593908592845e15fbde3f",2,"2020-07-08 10:11:30-07:00","Replace Package.Builder.Helper with
PackageSettings object  Use a boolean instead of
inheritance to toggle the features Helper was
enabling. The bulk PackageSettings object is
likely unnecessary - we could have threaded a
boolean along, but given how much wiring we had to
do the renaming/repurposing was far less tedious.
PiperOrigin-RevId: 320211700
",609609,5779,223674,"michajlo","michajlo@google.com","Copybara-Service","copybara-worker@google.com"
"1922","bazelbuild/bazel","9198660ab2b7fc60f7cb4e8a63e94450ff215630",1,"2020-07-08 10:40:09-07:00","Mark BlazeModule#getPackageSettings @Nullable
RELNOTES: None PiperOrigin-RevId: 320218301
",609610,5779,223674,"michajlo","michajlo@google.com","Copybara-Service","copybara-worker@google.com"
"1923","bazelbuild/bazel","a13887748cfb82a04cc1e617b7fc868f1f9acd89",6,"2020-07-08 12:11:01-07:00","Fix minor code issues flagged by error prone  The
review of this PR hightlighted a few points about
following the advice of the linter - any advice
about changing default character encoding to an
explicit one is incorrect for Bazel - we should
generally not expand the potential text of an
exception to include more data. That may adversely
increase the amount of logging output.  In
general, the only linter suggestion which should
be followed without careful inspection are those
that can not possibly modify behavior.  Closes
#11542.  Change-Id:
I0162f5e6c13a52af1a6d5bcb06d826371b6ebcc7
PiperOrigin-RevId: 320237874
",609625,5779,223672,"David Ostrovsky","david@ostrovsky.org","Copybara-Service","copybara-worker@google.com"
"1924","bazelbuild/bazel","3e3c831d7ce3deb0f052cd623389e62ae17101c5",1,"2020-07-08 15:41:39-07:00","Update FailureDetail in QueryException for query
environments and formatters.  Bubble up fine
grained failures to higher levels of query for the
different types of errors.  RELNOTES: None.
PiperOrigin-RevId: 320280651
",609717,5779,223671,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1925","bazelbuild/bazel","87b4608ea2c6f594847790ef5c1c18d6bc476374",1,"2020-07-08 15:58:04-07:00","bazel packages: record load graph (DAG over
Modules) in Module and Package  This is a
preparatory step for a new, rich query output
format that will provide all the information
needed to implement stardoc as a client of blaze,
thus allowing us to delete the fakebuildapi
implementations and the starlarkbuildapi
abstractions.  In some situations this could
increase live heap usage by causing a package to
keep its loaded modules live for longer.
Specifically, if packages P and Q both load module
M, then M is changed and package Q is reloaded,
the stale package P remains live, and it holds a
reference to the stale M, whereas before it did
not. The next time P is loaded, the stale P and M
are evicted. Note that today, P already keeps
alive any modules required by rules instantiated
by P, so an additional cost will be incurred only
if P uses functions (""macros"") or data defined in
M, but no rules. I expect the effect to be quite
marginal.  A number of opportunities for
simplification (and memory saving) have been
identified and will be acted on in a follow-up.
Also: - define BazelModuleContext.of helper
function.  RELNOTES: N/A PiperOrigin-RevId:
320283510
",609768,5779,223699,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1926","bazelbuild/bazel","902b18dab7bfb16fadbda1d3ae07c71fbbddac11",2,"2020-07-09 07:55:53-07:00","Bubble up fine grained failures to
BlazeTargetAccessor so that we can construct a
QueryException with failure details.
BlazeQueryEnvironment catches NoSuchThingException
from TargetProvider#getTarget and then rethrows a
""TargetNotFoundException"". NoSuchThingException
will contain failure details (or default failure
details added in previous CL/319778705). Then we
will take the failure detail from
TargetNotFoundException and use it to construct
the QueryException.  RELNOTES: None. PiperOrigin-
RevId: 320396036
",609879,5780,223713,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1927","bazelbuild/bazel","39e42d147010911fbda1e2c6f0606b74dd263e78",1,"2020-07-09 09:16:58-07:00","bazel skyframe: remove redundant representation of
the Module load graph  commit
87b4608ea2c6f594847790ef5c1c18d6bc476374 caused
the .bzl module graph to be materialized directly,
to provide richer information in blaze query. This
change removes the previous representation which
merely recorded the transitive set of labels.
PiperOrigin-RevId: 320409577
",609874,5779,223694,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1928","bazelbuild/bazel","39401a9efcdbd6c859b68600a3480d088e8ea88e",5,"2020-07-09 10:12:55-07:00","Allow native repository rules to declare
toolchains they want  registered.  Closes #11728.
PiperOrigin-RevId: 320420725
",609881,5779,223701,"John Cater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1929","bazelbuild/bazel","e9186ebbe8ac0b4488a1111f27a5713b48191132",1,"2020-07-09 17:13:15-07:00","Miscellaneous cleanups in ActionMetadataHandler
and tests.  Fix warnings, remove
@VisibleForTesting, add checkNotNull, and simplify
some code flow. Also delete unhelpful
documentation and unnecessary private methods.
RELNOTES: None. PiperOrigin-RevId: 320506345
",609838,5779,223679,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1930","bazelbuild/bazel","4ecc74922dd617f496dadacc02e5721178778a06",3,"2020-07-10 17:41:16-07:00","Refactor interaction between
ActionExecutionFunction and
SkyframeActionExecutor.  A lot of stuff is being
passed back and forth. Let SkyframeActionExecutor
be responsible for managing the objects it needs
(for example updating the action filesystem
context and closing the ActionExecutionContext).
The MetadataConsumer for input discovery is
changed to one that always throws, since we don't
expect any outputs during input discovery.
PiperOrigin-RevId: 320707537
",609795,5779,223667,"jhorvitz","jhorvitz@google.com","Copybara-Service","copybara-worker@google.com"
"1931","bazelbuild/bazel","2a960e93924fc47138b6c422cb3748cb4066784d",2,"2020-07-10 18:58:53-07:00","Use a MetadataConsumer implementation that assists
with tree artifact aggregation.  Remove
IOException from MetadataConsumer since it is
never thrown.  PiperOrigin-RevId: 320714944
",609811,5779,223667,"jhorvitz","jhorvitz@google.com","Copybara-Service","copybara-worker@google.com"
"1932","bazelbuild/bazel","64b468a9c10befc40ee945a86b028f88dcb43466",1,"2020-07-13 09:41:34-07:00","Remove treeFileCache from OutputStore.  There is
no longer any scenario under which tree artifact
children are added to OutputStore outside of their
parent. ActionMetadataHandler prohibits calling
injectFile on a tree artifact child, and action
filesystems use MetadataAggregator in
SkyframeActionExecutor.  RELNOTES: None.
PiperOrigin-RevId: 320972931
",609732,5779,223659,"jhorvitz","jhorvitz@google.com","Copybara-Service","copybara-worker@google.com"
"1933","bazelbuild/bazel","5fb12454ff1edadec4955099fb372134e752a457",6,"2020-07-13 10:37:55-07:00","Add BulkDeleter interface to assist in deleting
outputs  PiperOrigin-RevId: 320985106
",609757,5780,223682,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1934","bazelbuild/bazel","bb9eed0653c92ba668aec94dffbfed5112921e11",2,"2020-07-14 09:03:28-07:00","Dump Skyframe state after builds.  --experimental_
post_execution_skyframe_state_format outputs the
state of Skyframe after each build.  This is a
simple version that provides
proto/textproto/jsonproto output formats, similar
to aquery's. We also excludes command lines from
the final output.  Example:  blaze build --experim
ental_aquery_dump_after_build_format=proto //foo >
/tmp/output.proto  RELNOTES: None PiperOrigin-
RevId: 321168634
",609919,5780,223671,"leba","leba@google.com","Copybara-Service","copybara-worker@google.com"
"1935","bazelbuild/bazel","68a30a0bb765d33d76919a5933df3a5a0a3147f5",2,"2020-07-15 10:56:31-07:00","Remove unnecessary MinimalOutputStore class.  This
is currently used as the store for an action
filesystem, but it does not actually store any
less data because injectOutputData is used to add
data to the store, bypassing the overridden
putArtifactData method. Instead, just use
OutputStore for all use cases, and delete
injectOutputData.  The original thought behind
MinimalOutputStore was that we could reduce
temporary caching when the action filesystem is
in-memory anyway, but now OutputStore is down to
just two maps required to construct the final
ActionExecutionValue and there are no longer any
temporary caches.  RELNOTES: None. PiperOrigin-
RevId: 321394749
",610079,5779,223662,"jhorvitz","jhorvitz@google.com","Copybara-Service","copybara-worker@google.com"
"1936","bazelbuild/bazel","6415e5c0bb8cc473c9a0444f67246a336d6f212f",1,"2020-07-15 14:17:53-07:00","Split toolchain dependencies based on the
toolchain context.  This allows the case to work
where the same toolchain is dependened on by
multiple execution groups.  Adds a test of this
case.  PiperOrigin-RevId: 321437387
",610136,5779,223669,"jcater","jcater@google.com","Copybara-Service","copybara-worker@google.com"
"1937","bazelbuild/bazel","37af36f00d8044a9f1d57b49cffe38a505f948e7",3,"2020-07-16 04:28:15-07:00","Mark EvalException constructor Location parameter
nullable  To avoid misunderstanding when browsing
the code.  Closes #11781.  PiperOrigin-RevId:
321540744
",609967,5779,223688,"Stiopa Koltsov","stepan.koltsov@gmail.com","Copybara-Service","copybara-worker@google.com"
"1938","bazelbuild/bazel","e2bb3543bbe728d1affd12efd707954a2fd51a9a",1,"2020-07-16 04:47:17-07:00","Starlark: optimize Dict.plus  `Dict.plus` is used
in implementations of `dict` and `dict.update`.
Optimize: * allocate capacity at construction *
update resulting dict without validation of input
dict maps * iterate underlying maps of input dicts
This test becomes almost two times faster:  ```
def test():     d = {x: x for x in range(100)}
for i in range(10):         print(i)         for j
in range(100000):             dict(d)  test() ```
``` A: N=9, r=5.129+-0.183 B: N=9, r=3.176+-0.155
B/A: 0.619 ```  Closes #11785.  PiperOrigin-RevId:
321542802
",609971,5779,223689,"Stiopa Koltsov","stepan.koltsov@gmail.com","Copybara-Service","copybara-worker@google.com"
"1939","bazelbuild/bazel","d0c9829fa990f8b2228c6dd9d10b457bd6207a6a",1,"2020-07-16 08:58:17-07:00","Allow writing aquery dump after builds to a file.
This CL adds a new flag --experimental_aquery_dump
_after_build_output_file, which specifies a file
to stream the aquery dump to. This should be used
in conjunction with
--experimental_aquery_dump_after_build_format.
Example:    blaze build --experimental_aquery_dump
_after_build_format=textproto \     --experimental
_aquery_dump_after_build_output_file=""foo.out""
//foo:foo  RELNOTES: None PiperOrigin-RevId:
321576309
",609989,5779,223689,"leba","leba@google.com","Copybara-Service","copybara-worker@google.com"
"1940","bazelbuild/bazel","43ef997141df23afa7d41ea0c7b26c13d2a7c380",1,"2020-07-16 11:08:32-07:00","Roll forward of https://github.com/bazelbuild/baze
l/commit/5fb12454ff1edadec4955099fb372134e752a457:
Add BulkDeleter interface to assist in deleting
outputs  NEW: Fix execution_phase_tests
PiperOrigin-RevId: 321604243
",610029,5781,223728,"Googler","noreply@google.com","Copybara-Service","copybara-worker@google.com"
"1941","bazelbuild/bazel","bda125af163e6ce990292ba17e965fc2e15a3ab4",1,"2020-07-16 12:12:31-07:00","Final cleanups for ActionMetadataHandler.  Cleans
up interfaces and improves documentation. Adds
some missing unit test coverage and fixes a bunch
of warnings in ActionsTestUtil.  RELNOTES: None.
PiperOrigin-RevId: 321617991
",610079,5781,223725,"jhorvitz","jhorvitz@google.com","Copybara-Service","copybara-worker@google.com"
"1942","bazelbuild/bazel","e294b34f4ff7b711de091a531797c48a0dec8ba5",2,"2020-07-16 17:56:21-07:00","Add a new query option --infer_universe_scope that
causes Blaze to infer a value for --universe_scope
from the target patterns in the query expression.
This is a convenient way to enable SkyQuery (https
://docs.bazel.build/versions/3.3.0/query.html#sky-
query) without having to specify a value for
--universe_scope, but it may or may not be what
you want. See the docs for details.  RELNOTES:
None PiperOrigin-RevId: 321684759
",610233,5783,223758,"nharmata","nharmata@google.com","Copybara-Service","copybara-worker@google.com"
"1943","bazelbuild/bazel","7d8b635cdebb00d6a949ae9e1faaf7cf3dd702ea",7,"2020-07-21 05:45:48-07:00","Enable streaming aquery dump after build.  Removes
the output stream to stdout. Now there are 3
output possibilities: - Output file specified:
write to that file. - No output file specified &
with streaming: stream output to another service.
- No output file specified & without streaming:
output to a default file in the output base.
RELNOTES: None PiperOrigin-RevId: 322342577
",610282,5784,223794,"leba","leba@google.com","Copybara-Service","copybara-worker@google.com"
"1944","bazelbuild/bazel","1397e1e0ac30df5c005bc8f78685bd14695ea2d9",1,"2020-07-21 10:02:17-07:00","Automated rollback of commit
b1d0b7bfcba0f709fb4ece0617b6c1ef1a004e83.  ***
Reason for rollback ***  Rolling forward with
handling and tests for null digests.  *** Original
change description ***  Automated rollback of
commit 5bb9514a7c5c926cb91465a1bd0b996dd0d5e7e5.
*** Reason for rollback ***  Breaks downstream
project rules_nodejs and rules_webtesting with
NullPointer exception.  Link:
https://buildkite.com/bazel/bazel-at-head-plus-
downstream/builds/1572  *** Original change
description ***  Reduce overhead of computing
TreeArtifactValue digest.  A more intensive digest
computation was being performed for purposes of
order-independence. However, since unknown commit,
we are sorting the children anyway. Just s...  ***
ROLLBACK_OF=322353809 PiperOrigin-RevId: 322383321
",610382,5784,223793,"jhorvitz","jhorvitz@google.com","Copybara-Service","copybara-worker@google.com"
"1945","bazelbuild/bazel","3daedc315447d2f08885bde93b3ef2a1755b2000",8,"2020-07-22 18:33:55-07:00","Split up actions java library target.  Notably,
this separates Artifact and related types so that
they don't have to be tied in with the rest of the
actions library.  Pulled some nested classes to
the top level to achieve this and did some other
drive-by cleanups, but otherwise just import
statements and BUILD files.  RELNOTES: None.
PiperOrigin-RevId: 322699250
",610564,5786,223816,"jhorvitz","jhorvitz@google.com","Copybara-Service","copybara-worker@google.com"
"1946","bazelbuild/bazel","85c410e96062f73e19d9c8a30bbe1d0067b60dc3",1,"2020-07-23 18:45:01-07:00","Properly intern ConfiguredTargetKey with
@AutoCodec.  PiperOrigin-RevId: 322913456
",610801,5788,223878,"janakr","janakr@google.com","Copybara-Service","copybara-worker@google.com"
"1947","bazelbuild/bazel","e6cce762d846f3915b834c278fcb7fa0072ea530",14,"2020-07-24 16:06:19-07:00","Fix false sharing in action cache due to incorrect
key computation for custom Starlark command lines.
Actions constructing arguments in Starlark can
define them as a lazy evaluation, which will be
run when we are about to execute the action, using
`Args.add_all`.  `Args.add_all` offers a
`expand_directories` feature which causes all of
the directories in the args list to be replaced
with the files in the directory at the time of
evaluation.  When this option is used in
conjunction with `map_each`, the behavior is to
first expand the directory and than run the
provided function on each of the elements of the
expanded array.  `ArtifactExpander`, used to
expand the directories, is not available before
execution phase. Given `Action.getKey` can be
called before that (and is for instance for shared
actions detection), we currently compute the
fingerprint without expanding directories. In
fact, current implementation, calls the provided
function on the directory itself rather than
expanded list of files in it. As a result of that,
if we have 2 functions which return the same value
for the directory, but differ for the files in it,
the key will not denote them as different. That
leads to false sharing of actions through the
action cache, which is based on action
fingerprints.  Action cache checks happen during
execution phase, when we technically have the
ability to expand the directories. Expand the
fingerprinting function to take advantage of
`ArtifactExpander` when it is provided to produce
the key based on the result of actual function
execution. Rework the `ActionExecutionFunction` to
provide `ArtifactExpander` to logic computing keys
for action caches.  PiperOrigin-RevId: 323090803
",611117,5789,224012,"ajurkowski","ajurkowski@google.com","Copybara-Service","copybara-worker@google.com"
"1948","bazelbuild/bazel","0d4843ea588da72870fa87441364fd5bcdb1d463",6,"2020-07-27 07:44:40-07:00","bazel syntax: expose Resolver API  This change
exposes a public API for accessing the results of
name resolution. All the concepts are defined by
the spec.  Currently, the tree-based evaluator has
privileged access to the Resolver because it lives
in the same Java package, but the package will
soon be split into two (syntax + eval).  When we
switch to a compiled representation, there will be
no need to access resolver data structures at run-
time. (Only the compiler need see them, and it
will live in the syntax package.) However, the
resolver information may be useful for a wide
range of other tools that examine or refactor
Starlark files.  PiperOrigin-RevId: 323358860
",611168,5789,224057,"adonovan","adonovan@google.com","Copybara-Service","copybara-worker@google.com"
"1949","elastic/elasticsearch","a8281065535d6e140c5d563d6487ad2a160605e0",1,"2010-02-20 17:35:26+02:00","add shard specific failure reason to search
operations
",70641,1271,66826,"kimchy","kimchy@gmail.com","kimchy","kimchy@gmail.com"
"1950","elastic/elasticsearch","a62f1f3e0dc0716918945d5d9ff48503c90ccb2c",3,"2010-11-02 19:56:18+02:00","API: Allow to control document shard routing, and
search shard routing, closes #470.
",103441,1875,59829,"kimchy","kimchy@gmail.com","kimchy","kimchy@gmail.com"
"1951","elastic/elasticsearch","ba725f8986463d41d14fd331b82702ab65a2e87e",1,"2011-01-17 14:37:36+02:00","fix a (rare) case where search will fail due to
failed serialization
",117695,2038,64856,"kimchy","kimchy@gmail.com","kimchy","kimchy@gmail.com"
"1952","elastic/elasticsearch","1bcd3b67ee9f3462d6cac310b3be9a952f154b48",1,"2011-03-14 11:30:01+02:00","Search / Get: Allow to specify a preference on
which shards (or order) it will be executed,
closes #769.
",125015,2109,67379,"kimchy","kimchy@gmail.com","kimchy","kimchy@gmail.com"
"1953","elastic/elasticsearch","80062fbe10b574cd1a9723caf197254a5c54e752",6,"2011-08-24 11:24:52+03:00","Indices Stats API + indexing statistics, closes
#1273.
",155184,2490,79970,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1954","elastic/elasticsearch","1add5ce5664fee64afe9ac3370fcd26d8e96e58d",1,"2011-08-30 20:56:39+03:00","Node / Indices Stats: Add get stats (including
missing / exists), closes #1288.
",156299,2499,80273,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1955","elastic/elasticsearch","dee1addc17ba38f05c5ccf616452f59f544fba4c",1,"2011-09-04 23:55:35+03:00","Indices / Node Stats: Shard level search stats,
closes #1301.
",157376,2505,80506,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1956","elastic/elasticsearch","c1b86f5786a152caa9d3686599baf77809a2922a",2,"2011-12-06 21:09:28+02:00","upgrade to guava 10.0.1 and fix assembly
",161316,2401,76451,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1957","elastic/elasticsearch","4693b1e875ed673dfb9b875303b764fb7026d2e8",1,"2011-10-31 14:50:18+01:00","Add the hostname to the node info
",161560,2401,76456,"Nicolas Lalevée","nicolas.lalevee@hibnet.org","Shay Banon","kimchy@gmail.com"
"1958","elastic/elasticsearch","55d8d0d9c63fb8dcde923cf37b94d6485f47eec0",1,"2011-12-21 23:24:55+02:00","Analyze API: Allow to execute it without pre-
creating an index, and allow to build custom
analyzer (tokenizer + token_filters), closes
#1555.
",161610,2401,76135,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1959","elastic/elasticsearch","83d5084f620e13678e7786b5c735de32c4e9fb80",3,"2012-01-02 22:02:19+02:00","Update API: Allow to update a document based on a
script, closes #1583.
",164405,2429,76982,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1960","elastic/elasticsearch","f1f2fb2ba79b98200013b970cc0a5db721068e75",2,"2012-01-09 15:24:17+02:00","Nodes Info API: Allow to specify which info to get
back, simpler URI paths, closes #1596.
",164211,2421,76733,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1961","elastic/elasticsearch","4464fe1dc172f176862caf9d907042d92d9636ee",13,"2012-01-09 18:01:41+02:00","Node Stats API: Add specific flags for stats,
simplified REST paths, closes #1597.
",164455,2421,76800,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1962","elastic/elasticsearch","9d979dfc015ee8de43a1080d817f48a1583b8ae9",3,"2012-01-10 17:45:10+02:00","Add thread_pool to nodes info and nodes stats
APIs, closes #1601.
",164855,2423,76866,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1963","elastic/elasticsearch","e1cca9000603b164cc70ff25534381e5df2a8220",2,"2012-02-15 15:28:01+02:00","Retrieving byte type stored field fails, closes
#1702.
",165552,2414,76755,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1964","elastic/elasticsearch","4a9cb6408c2fed821cc347a6c6097e6ccaae2fb1",2,"2012-02-20 18:57:27+02:00","API: Multi Search, closes #1722.
",166396,2424,76974,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1965","elastic/elasticsearch","8ca36c8dd5eec5151a7af9f9b92fe6093ecb07c6",1,"2012-04-29 00:37:20+03:00","allow internally to register index warmup actions,
as well as expose stats on it
",167342,2429,76487,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1966","elastic/elasticsearch","3bf55a0858c17ac48208210dd71a84a6fde35dbf",1,"2012-05-24 00:33:52+02:00","Query DSL: Add more fuzzy options in different
queries (text, query_string/field), closes #1974.
",169724,2444,77048,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1967","elastic/elasticsearch","d6bc17fee5f60dbdd3ef97897c5bf28050719cec",1,"2012-06-16 19:51:44-07:00","Partial update without script  Allow the use of
""doc"" as the update source when a script is not
specified.  New fields are added, existing fields
are overwritten, and maps are merged recursively.
",178683,2490,85137,"Matt Weber","matt@mattweber.org","Shay Banon","kimchy@gmail.com"
"1968","elastic/elasticsearch","35233564fdc6d455f4492085c18038e76b1ae1b6",1,"2012-07-07 01:26:40+02:00","buffer management refactoring First phase at
improving buffer management and reducing even
further buffer copies. Introduce a BytesReference
abstraction, allowing to more easily slice and
""read/write references"" from streams. This is the
foundation for later using it to create smarter
buffers on top of composite netty channels for
example (which http now produces) as well as
reducing buffer copies when sending transport/rest
responses.
",180103,2513,85745,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1969","elastic/elasticsearch","f7b538e17f294eb93cad2b34d027c60425906153",1,"2012-07-07 22:49:31+02:00","move rest request to provide content as
BytesReference this allows for better buffer
usage, specifically when forwarding requests to
other nodes
",180217,2515,85765,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1970","elastic/elasticsearch","1dd30bd388be7bfb4cd130e2e1e8dece81c3fe8b",2,"2012-07-08 21:21:17+02:00","deprecate readUTF, use readString instead (better
named)
",180274,2516,85756,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1971","elastic/elasticsearch","fbd352b44887e26702c64e8b011d0a9fdfb08237",2,"2012-09-07 11:13:43+02:00","sync with latest guava version of abstract future
",186361,2584,87900,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1972","elastic/elasticsearch","cfe7504d1cee2cffd3ed06c3b61d0c77de63b67f",1,"2012-09-26 23:46:27+02:00","introduce TransportRequest (with optional headers)
introduce a new class, TransportRequest, which
includes headers. This class can be used when
sending requests over the transport layer, and
ActionRequest also extends it now. This is the
first phase of the refactoring part in the
transport layer and action layer to allow for
simpler implementations of those as well as
simpler ""filtering"" capabilities in the future
",188042,2614,88562,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1973","elastic/elasticsearch","bcdda811efecaabb96a0d61316d8498cd21395bd",2,"2013-01-07 02:54:22+01:00","add read/write optional text
",192984,2622,89947,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1974","elastic/elasticsearch","cc83c2f848be69a77f1275fe1ff5363dcdd4c955",1,"2013-02-18 16:50:49+01:00","refactoring getter/setters  Fixes #2657
",199106,2641,90496,"David Pilato","david@pilato.fr","Igor Motov","igor@motovs.org"
"1975","elastic/elasticsearch","acff102234dc7e81920b18bf570f7629bf12e98b",2,"2013-03-05 07:24:07-05:00","Implement search shards API  Closes #2726
",209603,2686,97366,"Igor Motov","igor@motovs.org","Igor Motov","igor@motovs.org"
"1976","elastic/elasticsearch","1fc37e59547ba544ab1a4677f2622c9e39b26313",3,"2013-03-28 15:34:38+01:00","Segments API: Add version & compound for each
segment closes #2823
",211404,2704,98027,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1977","elastic/elasticsearch","15d7ae598304299d2d9d3ff87c77fe5ff2962117",1,"2013-04-07 18:30:24-07:00","FieldData Stats: Add field data stats to indices
stats API closes #2870
",210687,2723,98222,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1978","elastic/elasticsearch","5fa66cd59299e81ffebf9220e1761b58ee1a3348",19,"2013-04-07 20:22:48-07:00","Node Stats: Allow to explicitly get specific
indices level node stats element closes #2871
",210830,2724,98257,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1979","elastic/elasticsearch","271305d5ebe74fbca3348f4c5f482c240d76457c",1,"2013-04-16 18:08:50-07:00","Search Stats: Add current open searches closes
#2906
",212422,2729,98546,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1980","elastic/elasticsearch","41e4ee22e68a312ab58eb9b2c17382a516a88289",1,"2013-06-11 13:06:59+02:00","Thread pool: rename `capacity` to `queue_size`
fixes #3161
",220101,2793,100455,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1981","elastic/elasticsearch","668d55758b751e848f2b82299e2c5e74af55cd12",17,"2013-07-03 14:30:26+02:00","Added source fetching and filtering parameters to
search, get, multi-get, get-source and explain
requests  Closes #3301
",224556,2844,99586,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"1982","elastic/elasticsearch","cdddbb758502793ebcecf0e4311de574a74293ea",2,"2013-08-21 13:15:38+02:00","Expose size statistics for completion suggest  In
order to determine how many RAM the completion
suggest structures will eat up, this data should
be exposed.  Closes #3522
",233376,2910,101661,"Alexander Reelsen","alexander@reelsen.net","Alexander Reelsen","alexander@reelsen.net"
"1983","elastic/elasticsearch","3ca0239668187c535f36a5da6473d73315f42679",2,"2013-08-26 16:28:27+02:00","Added highlighter to percolate api.  The
highlighter in the percolate api highlights
snippets in the document being percolated. If
highlighting is enabled then foreach matching
query, highlight snippets will be generated. All
highlight options that are supported via the
search api are also supported in the percolate
api, since the percolate api embeds the same
highlighter infrastructure as the search api. The
`size` option is a required option if highlighting
is specified in the percolate api, other than that
the `highlight`request part can just be placed in
the percolate api request body.  Closes #3574
",235952,2934,102309,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"1984","elastic/elasticsearch","c093e90d517a3652d8b8f46c61a48097132a8cef",1,"2013-10-14 11:04:48+02:00","Segments API: Support merge id on segments (groups
segments being merged) Return a merge_id element
in each segment of the segments API, allowing to
group segments that are being merged as part of a
single merge and indicate which ones are being
merged now. closes #3904
",243400,2970,103032,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1985","elastic/elasticsearch","c95c7096e50d329d4591913bf1b3e5c58d3a6065",4,"2013-11-06 00:06:16+01:00","Index Stats: Add support for segments stats closes
#4101
",250149,3036,105729,"Shay Banon","kimchy@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"1986","elastic/elasticsearch","510397aecdb95047995930f48dc439614aeafce0",3,"2013-11-08 19:20:43-05:00","Initial implementation of Snapshot/Restore API
Closes #3826
",257337,3141,111258,"Igor Motov","igor@motovs.org","Igor Motov","igor@motovs.org"
"1987","elastic/elasticsearch","3c5106ae98be55614fb122c58f95773a0fdd1796",2,"2013-12-18 11:51:28+01:00","Added cluster health status to the Cluster Stats
API  Relates to #4460
",282838,3444,119412,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"1988","elastic/elasticsearch","33878be1e83d13285eb82c8c687ff4f25c027f51",2,"2013-12-11 12:09:59+01:00","Simplify indices stats API  Note: This breaks
backward compatibility  * Removed clear/all
parameters, now all stats are returned by default
* Made the metrics part of the URL * Removed a lot
of handlers * Added shards/indices/cluster level
paremeter to change response serialization *
Returning translog statistics in IndicesStats *
Added TranslogStats class * Added
IndexShard.translogStats() method to get the stats
from concrete implementation * Updated
documentation  Closes #4054
",288570,3488,120890,"Alexander Reelsen","alexander@reelsen.net","Alexander Reelsen","alexander@reelsen.net"
"1989","elastic/elasticsearch","3afdf4a872e257ec95a4436049907ee825d249e0",3,"2014-01-28 10:47:40+01:00","Added support for aliases to create index api  It
is now possible to specify aliases during index
creation:  curl -XPUT 'http://localhost:9200/test'
-d ' {     ""aliases"" : {         ""alias1"" : {},
""alias2"" : {             ""filter"" : { ""term"" :
{""field"":""value""}}         }     } }'  Closes
#4920
",300633,3555,125131,"Luca Cavanna","cavannaluca@gmail.com","Luca Cavanna","cavannaluca@gmail.com"
"1990","elastic/elasticsearch","5821fa042cf0b376ee4743c8d50a8eb79f4f67aa",1,"2014-02-16 19:20:33+01:00","Cardinality aggregation.  This aggregation
computes unique term counts using the
hyperloglog++ algorithm which uses linear counting
to estimate low cardinalities and hyperloglog on
higher cardinalities.  Since this algorithm works
on hashes, it is useful for high-cardinality
fields to store the hash of values directly in the
index, which is the purpose of the new `murmur3`
field type. This is less necessary on low-
cardinality string fields because the aggregator
is smart enough to only compute the hash once per
unique value per segment thanks to ordinals, or on
numeric fields since hashing them is very fast.
Close #5426
",308134,3636,127599,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"1991","elastic/elasticsearch","63290a910e0b4332042516d09769d8256703752e",1,"2014-03-21 22:54:16+01:00","Freq Terms Enum A frequency caching terms enum,
that also allows to be configured with an optional
filter. To be used by both significant terms and
phrase suggester. This change extracts the
frequency caching into the same code, and allow in
the future to add a filter to control/customize
the background frequencies Closes #5597
",314744,3687,129508,"Shay Banon","kimchy@gmail.com","markharwood","markharwood@gmail.com"
"1992","elastic/elasticsearch","1434f6bcbb9cdfdd42f696aedfa199aab09b8ca2",1,"2014-03-28 16:04:03+01:00","A new ClusterStateStatus to indicate cluster state
life cycles  When the ClusterService applies a new
cluster state, it is first assigned as the new
active one and then all listeners are called. Some
of ES's features sample the current state and try
to take action on it (for example index a
document). If that fails, they will wait for
change in the cluster state and try again (for
example, wait for a shard to start and try
indexing again).  If you're unlucky you sample the
state after it has been assigned as the ""active""
state but before all listeners has done the work.
In this cases the action take (i.e., indexing a
doc) will still fail (as the shard is not yet
started) but waiting for a new state may take a
long time or fail.  This commit adds a new
ClusterStateStatus that allows to better track the
stages a cluster state goes through (currently
`RECEIVED`, `BEING_APPLIED` & `APPLIED`). This
allows detecting that a cluster state is not yet
fully applied and retry without waiting for a new
state to arrive.  This commit also adds a utility
class , ClusterStateObserver, to make this pattern
slightly simpler and avoid common pit falls.
Closes #5741
",305374,3714,118772,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"1993","elastic/elasticsearch","629f91ae57b5a2223f2edaa213b5d0d08a155885",3,"2014-07-18 17:02:07+02:00","Fielddata: goodbye comparators.  This commit
removes custom comparators in favor of the ones
that are in Lucene.  The major change is for
nested documents: instead of having a comparator
wrapper that deals with nested documents, this is
done at the fielddata level by having a selector
that returns the value to use for comparison.
Sorting with custom missing string values might be
slower since it is using TermValComparator since
Lucene's TermOrdValComparator only supports
sorting missing values first or last. But other
than this particular case, this change will allow
us to benefit from improvements on comparators
from the Lucene side.  Close #5980
",328458,3858,129047,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"1994","elastic/elasticsearch","6abe4c951dcb81c16aed873d26009b99823b74bd",2,"2014-05-21 13:37:03+02:00","Add HierarchyCircuitBreakerService  Adds a breaker
for request BigArrays, which are used for
parent/child queries as well as some aggregations.
Certain operations like Netty HTTP responses and
transport responses increment the breaker, but
will not trip.  This also changes the output of
the nodes' stats endpoint to show the parent
breaker as well as the fielddata and request
breakers.  There are a number of new settings for
breakers now:  `indices.breaker.total.limit`:
starting limit for all memory-use breaker,
defaults to 70%
`indices.breaker.fielddata.limit`: starting limit
for fielddata breaker, defaults to 60%
`indices.breaker.fielddata.overhead`: overhead for
fielddata breaker estimations, defaults to 1.03
(the fielddata breaker settings also use the
backwards-compatible setting
`indices.fielddata.breaker.limit` and
`indices.fielddata.breaker.overhead`)
`indices.breaker.request.limit`: starting limit
for request breaker, defaults to 40%
`indices.breaker.request.overhead`: request
breaker estimation overhead, defaults to 1.0  The
breaker service infrastructure is now generic and
opens the path to adding additional circuit
breakers in the future.  Fixes #6129  Conflicts:
src/main/java/org/elasticsearch/index/fielddata/In
dexFieldData.java         src/main/java/org/elasti
csearch/index/fielddata/IndexFieldDataService.java
src/main/java/org/elasticsearch/index/fielddata/Ra
mAccountingTermsEnum.java         src/main/java/or
g/elasticsearch/index/fielddata/ordinals/GlobalOrd
inalsBuilder.java         src/main/java/org/elasti
csearch/index/fielddata/ordinals/InternalGlobalOrd
inalsBuilder.java         src/main/java/org/elasti
csearch/index/fielddata/plain/AbstractIndexOrdinal
sFieldData.java         src/main/java/org/elastics
earch/index/fielddata/plain/DisabledIndexFieldData
.java         src/main/java/org/elasticsearch/inde
x/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/pl
ain/NonEstimatingEstimator.java         src/main/j
ava/org/elasticsearch/index/fielddata/plain/Packed
ArrayIndexFieldData.java         src/main/java/org
/elasticsearch/index/fielddata/plain/ParentChildIn
dexFieldData.java         src/main/java/org/elasti
csearch/index/fielddata/plain/SortedSetDVOrdinalsI
ndexFieldData.java         src/main/java/org/elast
icsearch/node/internal/InternalNode.java         s
rc/test/java/org/elasticsearch/index/aliases/Index
AliasesServiceTests.java         src/test/java/org
/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/index/fielddata/Ab
stractFieldDataTests.java         src/test/java/or
g/elasticsearch/index/fielddata/IndexFieldDataServ
iceTests.java         src/test/java/org/elasticsea
rch/index/mapper/MapperTestUtils.java         src/
test/java/org/elasticsearch/index/query/IndexQuery
ParserFilterCachingTests.java         src/test/jav
a/org/elasticsearch/index/query/SimpleIndexQueryPa
rserTests.java         src/test/java/org/elasticse
arch/index/query/guice/IndexQueryParserModuleTests
.java         src/test/java/org/elasticsearch/inde
x/search/FieldDataTermsFilterTests.java         sr
c/test/java/org/elasticsearch/index/search/child/C
hildrenConstantScoreQueryTests.java         src/te
st/java/org/elasticsearch/index/similarity/Similar
ityTests.java
",331437,3873,129732,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"1995","elastic/elasticsearch","418ce50ec412ecf9bdbd4fd7500be3e48eb01642",3,"2014-06-28 16:54:32+02:00","Query Cache: Support shard level query response
caching  The query cache allow to cache the
(binary serialized) response of the shard level
query phase execution based on the actual request
as the key. The cache is fully coherent with the
semantics of NRT, with a refresh (that actually
ended up refreshing) causing previous cached
entries on the relevant shard to be invalidated
and eventually evicted.  This change enables query
caching as an opt in index level setting, called
`index.cache.query.enable` and defaults to
`false`. The setting can be changed dynamically on
an index. The cache is only enabled for search
requests with search_type count.  The indices
query cache is a node level query cache. The
`indices.cache.query.size` controls what is the
size (bytes wise) the cache will take, and
defaults to `1%` of the heap. Note, this cache is
very effective with small values in it already.
There is also the advanced option to set
`indices.cache.query.expire` that allow to control
after a certain time of inaccessibility the cache
will be evicted.  Note, the request takes the
search ""body"" as is (bytes), and uses it as the
key. This means same JSON but with different key
order will constitute different cache entries.
This change includes basic stats (shard level,
index/indices level, and node level) for the query
cache, showing how much is used and eviction
rates.  While this is a good first step, and the
goal is to get it in, there are a few things that
would be great additions to this work, but they
can be done as additional pull requests:  - More
stats, specifically cache hit and cache miss, per
shard. - Request level flag, defaults to ""not set""
(inheriting what the setting is). - Allowing to
change the cache size using the cluster update
settings API - Consider enabling the cache to
query phase also when asking hits are involved,
note, this will only include the ""top docs"", not
the actual hits. - See if there is a performant
manner to solve the ""out of order"" of keys in the
JSON case. - Maybe introduce a filter element,
that is outside of the request, that is checked,
and if it matches all docs in a shard, will not be
used as part of the key. This will help with time
based indices and moving windows for shards that
fall ""inside"" the window to be more effective
caching wise. - Add a more infra level support in
search context that allows for any element to mark
the search as non deterministic (on top of the
support for ""now""), and use it to not cache search
responses.  closes #7161
",336828,3915,130949,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"1996","elastic/elasticsearch","24bc8d331eb28a686233573bdcaf9cadd9a6dc5b",3,"2014-10-06 17:28:14+02:00","Recovery: refactor RecoveryTarget state management
This commit rewrites the state controls in the
RecoveryTarget family classes to make it easier to
guarantee that: - recovery resources are only
cleared once there are no ongoing requests -
recovery is automatically canceled when the target
shard is closed/removed - canceled recoveries do
not leave temp files behind when canceled.
Highlights of the change: 1) All temporary files
are cleared upon failure/cancel (see #7315 ) 2)
All newly created files are always temporary 3)
Doesn't list local files on the cluster state
update thread (which throw unwanted exception) 4)
Recoveries are canceled by a listener to
IndicesLifecycle.beforeIndexShardClosed, so we
don't need to explicitly call it. 5) Simplifies
RecoveryListener to only notify when a recovery is
done or failed. Removed subtleties like ignore and
retry (they are dealt with internally)  Closes
#8092 , Closes #7315
",338837,3939,128468,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"1997","elastic/elasticsearch","4ddb0575b5975efcc5f5fdc728f289ba15c74863",1,"2014-11-03 12:36:13+01:00","Discovery: Improve the lifecycle management of the
join control thread in zen discovery.  Also added:
* Better exception handling in UnicastZenPing#ping
and MulticastZenPing#ping * In the join thread
that runs the innerJoinCluster loop, remember the
last known exception and throw that when
assertions are enabled. We loop until inner join
has completed and if continues exceptions are
thrown we should fail the test, because the
exception shouldn't occur in production (at least
not too often). Applied feedback 3  Closes #8327
",340575,3958,128970,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"1998","elastic/elasticsearch","610ce078fb3c84c47d6d32aff7d77ba850e28f9d",1,"2014-11-05 15:48:51-05:00","Upgrade master to lucene 5.0 snapshot  This has a
lot of improvements in lucene, particularly around
memory usage, merging, safety, compressed bitsets,
etc.  On the elasticsearch side, summary of the
larger changes:      API changes: postings API
became a ""pull"" rather than ""push"", collector API
became per-segment, etc.     packaging changes:
add lucene-backwards-codecs.jar as a dependency.
improvements to boolean filtering: especially
ensuring it will not be slow for SparseBitSet.
use generic BitSet api in plumbing so that
concrete bitset type is an implementation detail.
use generic BitDocIdSetFilter api for dedicated
bitset cache, so there is type safety.     changes
to support atomic commits     implement
Accountable.getChildResources (detailed memory
usage API) for fielddata, etc     change handling
of IndexFormatTooOld/New, since they no longer
extends CorruptIndexException  Closes #8347.
Squashed commit of the following:  commit
d90d53f5f21b876efc1e09cbd6d63c538a16cd89 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Nov 5 21:35:28 2014 +0100      Make default
codec/postings/docvalues format constants  commit
cb66c22c71cd304a36e7371b199a8c279908ae37 Merge:
d4e2f6d ad4ff43 Author: Robert Muir
<rmuir@apache.org> Date:   Wed Nov 5 11:41:13 2014
-0500      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
d4e2f6dfe767a5128c9b9ae9e75036378de08f47 Merge:
4e5445c 4111d93 Author: Robert Muir
<rmuir@apache.org> Date:   Wed Nov 5 06:26:32 2014
-0500      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
4e5445c775f580730eb01360244e9330c0dc3958 Author:
Robert Muir <rmuir@apache.org> Date:   Tue Nov 4
16:19:19 2014 -0500      FixedBitSet -> BitSet
commit 9887ea73e8b857eeda7f851ef3722ef580c92acf
Merge: 1bf8894 fc84666 Author: Robert Muir
<rmuir@apache.org> Date:   Tue Nov 4 15:26:25 2014
-0500      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
1bf8894430de3e566d0dc5623b0cc28b0d674ebb Author:
Robert Muir <rmuir@apache.org> Date:   Tue Nov 4
15:22:51 2014 -0500      remove nocommit  commit
a9c2a2259ff79c69bae7806b64e92d5f472c18c8 Author:
Robert Muir <rmuir@apache.org> Date:   Tue Nov 4
13:48:43 2014 -0500      turn jenkins red again
commit 067baaaa4d52fce772c81654dcdb5051ea79139f
Author: Robert Muir <rmuir@apache.org> Date:   Tue
Nov 4 13:18:21 2014 -0500      unzip from stream
commit 82b6fba33d362aca2313cc0ca495f28f5ebb9260
Merge: b2214bb 6523cd9 Author: Robert Muir
<rmuir@apache.org> Date:   Tue Nov 4 13:10:59 2014
-0500      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
b2214bb093ec2f759003c488c3c403c8931db914 Author:
Robert Muir <rmuir@apache.org> Date:   Tue Nov 4
13:09:53 2014 -0500      go back to my URL until
we can figure out what is up with jenkins  commit
e7d614172240175a51f580aeaefb6460d21cede9 Author:
Robert Muir <rmuir@apache.org> Date:   Tue Nov 4
10:52:54 2014 -0500      try this jenkins  commit
337a3c7704efa7c9809bf373152d711ee55f876c Author:
Simon Willnauer <simonw@apache.org> Date:   Tue
Nov 4 16:17:49 2014 +0100      Rename temp-files
under lock to prevent metadata reads while
renaming  commit
77d5ba80d0a76efa549dd753b9f114b2f2d2d29c Author:
Robert Muir <rmuir@apache.org> Date:   Tue Nov 4
10:07:11 2014 -0500      continue to treat too-
old/too-new as corruption for now  commit
98d0fd2f4851bc50e505a94ca592a694d502c51c Author:
Robert Muir <rmuir@apache.org> Date:   Tue Nov 4
09:24:21 2014 -0500      fix last nocommit  commit
643fceed66c8caf22b97fc489d67b4a2a90a1a1c Author:
Simon Willnauer <simonw@apache.org> Date:   Tue
Nov 4 14:46:17 2014 +0100      remove
NoSuchDirectoryException  commit
2e43c4feba05cfaf451df70f946c0930cbcc4557 Merge:
93826e4 8163107 Author: Simon Willnauer
<simonw@apache.org> Date:   Tue Nov 4 14:38:00
2014 +0100      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
93826e4d56a6a97c2074669014af77ff519bde63 Merge:
7f10129 44e24d3 Author: Simon Willnauer
<simonw@apache.org> Date:   Tue Nov 4 12:54:27
2014 +0100      Merge branch 'master' into
enhancement/lucene_5_0_upgrade      Conflicts:
src/main/java/org/elasticsearch/index/store/Distri
butorDirectory.java         src/main/java/org/elas
ticsearch/index/store/Store.java         src/main/
java/org/elasticsearch/indices/recovery/RecoverySt
atus.java         src/test/java/org/elasticsearch/
index/store/DistributorDirectoryTest.java         
src/test/java/org/elasticsearch/index/store/StoreT
est.java         src/test/java/org/elasticsearch/i
ndices/recovery/RecoveryStatusTests.java  commit
7f10129364623620575c109df725cf54488b3abb Author:
Adrien Grand <jpountz@gmail.com> Date:   Tue Nov 4
11:32:24 2014 +0100      Fix TopHitsAggregator to
not ignore the top-level/leaf collector split.
commit 042fadc8603b997bdfdc45ca44fec70dc86774a6
Author: Adrien Grand <jpountz@gmail.com> Date:
Tue Nov 4 11:31:20 2014 +0100      Remove
MatchDocIdSet in favor of DocValuesDocIdSet.
commit 7d877581ff5db585a674c95ac391ac78a0282826
Author: Adrien Grand <jpountz@gmail.com> Date:
Tue Nov 4 11:10:08 2014 +0100      Make the and
filter use the cost API.      Lucene 5 ensured
that cost() can safely be used, and this will have
the benefit     that the order in which filters
are specified is not important anymore (only
for slow random-access filters in practice).
commit 78f1718aa2cd82184db7c3a8393e6215f43eb4a8
Author: Robert Muir <rmuir@apache.org> Date:   Mon
Nov 3 23:55:17 2014 -0500      fix previous
eclipse import braindamage  commit
186c40e9258ce32f22a9a714ab442a310b6376e0 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
22:32:34 2014 -0500      allow child queries to
exhaust iterators again  commit
b0b1271305e1b6d0c4c4da51a3c54df1aa5c0605 Author:
Ryan Ernst <ryan@iernst.net> Date:   Mon Nov 3
14:50:44 2014 -0800      Fix nocommit for mapping
output.  index_options will not be printed if
the field is not indexed.  commit
ba223eb85e399c9620a347a983e29bf703953e7a Author:
Ryan Ernst <ryan@iernst.net> Date:   Mon Nov 3
14:07:26 2014 -0800      Remove no commit for
chinese analyzer provider.  We should have a
separate issue to address not using this provider
on new indexes.  commit
ca554b03c4471797682b2fb724f25205cf040c4a Author:
Ryan Ernst <ryan@iernst.net> Date:   Mon Nov 3
13:41:59 2014 -0800      Fix stop tests  commit
de67c4653ec47dee9c671390536110749d2bb05f Author:
Ryan Ernst <ryan@iernst.net> Date:   Mon Nov 3
12:51:17 2014 -0800      Remove analysis
nocommits, switching over to Lucene43*Filters for
backcompat  commit
50cae9bec72c25c33a1ab8a8931bccb3355171e2 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
15:32:25 2014 -0500      add ram accounting and
TODO lazy-loading (its no worse than master, can
be a followup improvement) for suggesters  commit
7a7f0122f138684b312d0f0b03dc2a9c16c15f9c Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
15:11:26 2014 -0500      bump lucene version
commit cd0cae5c35e7a9e049f49ae45431f658fb86676b
Merge: 446bc09 3c72073 Author: Robert Muir
<rmuir@apache.org> Date:   Mon Nov 3 14:49:05 2014
-0500      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
446bc09b4e8bf4602d3c252b53ddaa0da65cce2f Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
14:46:30 2014 -0500      remove hack  commit
a19d85a968d82e6d00292b49630ef6ff2dbf2f32 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
12:53:11 2014 -0500      dont create exceptions
with circular references on corruption (will open
a PR for this)  commit
0beefb9e821d97c37e90ec556d81ac7b00369b8a Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
11:47:14 2014 -0500      temporarily add
craptastic detector for this horrible bug  commit
e9f2d298bff75f3d1591f8622441e459c3ce7ac3 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
10:56:01 2014 -0500      add nocommit  commit
e97f1d50a91a7129650b8effc7a9ecf74ca0569a Merge:
c57a3c8 f1f50ac Author: Robert Muir
<rmuir@apache.org> Date:   Mon Nov 3 10:12:12 2014
-0500      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
c57a3c8341ed61dca62eaf77fad6b8b48aeb6940 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
10:11:46 2014 -0500      fix nocommit  commit
dd0e77e4ec07c7011ab5f6b60b2ead33dc2333d2 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Nov 3
09:54:09 2014 -0500      nocommit -> TODO, this is
in much more places in the codebase, bigger issue
commit 3cc3bf56d72d642059f8fe220d6f2fed608363e9
Author: Ryan Ernst <ryan@iernst.net> Date:   Sat
Nov 1 23:59:17 2014 -0700      Remove nocommit and
awaitsfix for edge ngram filter test.  commit
89f115245155511c0fbc0d5ee62e63141c3700c1 Author:
Ryan Ernst <ryan@iernst.net> Date:   Sat Nov 1
23:57:44 2014 -0700      Fix EdgeNGramTokenFilter
logic for version <= 4.3, and fixed instanceof
checks in corresponding tests to correctly check
for reverse filter when     applicable.  commit
112df869cd199e36aab0e1a7a288bb1fdb2ebf1c Author:
Robert Muir <rmuir@apache.org> Date:   Sun Nov 2
00:08:30 2014 -0400      execute geo disjoint
query/filter as intersects  commit
e5061273cc685f1252e9a3a9ae4877ec9bce7752 Author:
Robert Muir <rmuir@apache.org> Date:   Sat Nov 1
22:58:59 2014 -0400      remove chinese analyzer
from docs  commit
ea1af11b8978fcc551f198e24fe21d52806993ef Author:
Robert Muir <rmuir@apache.org> Date:   Sat Nov 1
22:29:00 2014 -0400      fix ram accounting bug
commit 53c0a42c6aa81aa6bf81d3aa77b95efd513e0f81
Merge: e3bcd3c 6011a18 Author: Robert Muir
<rmuir@apache.org> Date:   Sat Nov 1 22:16:29 2014
-0400      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
e3bcd3cc07a4957e12c7b3affc462c31290a9186 Author:
Robert Muir <rmuir@apache.org> Date:   Sat Nov 1
22:15:01 2014 -0400      fix url-email back compat
(thanks ryan)  commit
91d6b096a96c357755abee167098607223be1aad Author:
Robert Muir <rmuir@apache.org> Date:   Sat Nov 1
22:11:26 2014 -0400      bump lucene version
commit d2bb9568df72b37ec7050d25940160b8517394bc
Author: Robert Muir <rmuir@apache.org> Date:   Sat
Nov 1 20:33:07 2014 -0400      remove nocommit
commit 1d049c471e19e5c457262c7399c5bad9e023b2e3
Author: Robert Muir <rmuir@apache.org> Date:   Sat
Nov 1 20:28:58 2014 -0400      fix eclipse to
group org/com imports together: without this, its
madness  commit
09d8c1585ee99b6e63be032732c04ef6fed84ed2 Author:
Robert Muir <rmuir@apache.org> Date:   Sat Nov 1
14:27:41 2014 -0400      remove nocommit, if you
dont liek it, print assembly and tell me how it
can be better  commit
8a6a294313fdf33b50c7126ec20c07867ecd637c Author:
Adrien Grand <jpountz@gmail.com> Date:   Fri Oct
31 20:01:55 2014 +0100      Remove deprecated
usage of DocIdSets.newDocIDSet.  commit
601bee60543610558403298124a84b1b3bbd1045 Author:
Robert Muir <rmuir@apache.org> Date:   Fri Oct 31
14:13:18 2014 -0400      maybe one of these
zillions of annotations will stop thread leaks
commit 9d3f69abc7267c5e455aefa26db95cb554b02d62
Author: Robert Muir <rmuir@apache.org> Date:   Fri
Oct 31 14:05:39 2014 -0400      fix some analysis
nocommits  commit
312e3a29c77214b8142d21c33a6b2c2b151acf9a Author:
Adrien Grand <jpountz@gmail.com> Date:   Fri Oct
31 18:28:45 2014 +0100      Remove XConstantScoreQ
uery/XFilteredQuery/ApplyAcceptedDocsFilter.
commit 5a0cb9f8e167215df7f1b1fad11eec6e6c74940f
Author: Adrien Grand <jpountz@gmail.com> Date:
Fri Oct 31 17:06:45 2014 +0100      Fix misleading
documentation of DocIdSets.toCacheable.  commit
8b4ef2b5b476fff4c79c0c2a0e4769ead26cf82b Author:
Adrien Grand <jpountz@gmail.com> Date:   Fri Oct
31 17:05:59 2014 +0100      Fix
CustomRandomAccessFilterStrategy to override the
right method.  commit
d7a9a407a615987cfffc651f724fbd8795c9c671 Author:
Adrien Grand <jpountz@gmail.com> Date:   Fri Oct
31 16:21:35 2014 +0100      Better handle the
special case when there is a single SHOULD clause.
commit 648ad389f07e92dfc451f345549c9841ba5e4c9a
Author: Adrien Grand <jpountz@gmail.com> Date:
Fri Oct 31 15:53:38 2014 +0100      Cut over
XBooleanFilter to BitDocIdSet.Builder.      The
idea is similar to what happened to Lucene's
BooleanFilter.      Yet XBooleanFilter is a bit
more sophisticated and I had to slightly
change the way it is implemented in order to make
it work. The main difference     with before is
that slow filters are now applied lazily, so eg.
if you have 3     MUST clauses, two with a fast
iterator and the third with a slow iterator, the
previous implementation used to apply the fast
iterators first and then only     check the slow
filter for bits which were set in the bit set. Now
we are     computing a bit set based on the fast
must clauses and then basically returning     a
BitsFilteredDocIdSet.wrap(bitset, slowClause).
Other than that, BooleanFilter still uses the
bitset optimizations when or-ing     and and-ind
filters.      Another improvement is that
BooleanFilter is now aware of the cost API.
commit b2dad312b4bc9f931dc3a25415dd81c0d9deee08
Author: Robert Muir <rmuir@apache.org> Date:   Fri
Oct 31 10:18:53 2014 -0400      clear nocommit
commit 4851d2091e744294336dfade33906c75fbe695cd
Author: Simon Willnauer <simonw@apache.org> Date:
Fri Oct 31 15:15:16 2014 +0100      cut over to
RoaringDocIdSet  commit
ca6aec24a901073e65ce4dd6b70964fd3612409e Author:
Simon Willnauer <simonw@apache.org> Date:   Fri
Oct 31 14:57:30 2014 +0100      make nocommit more
explicit  commit
d0742ee2cb7a6c48b0bbb31580b7fbcebdb6ec40 Author:
Robert Muir <rmuir@apache.org> Date:   Fri Oct 31
09:55:24 2014 -0400      fix standardtokenizer
nocommit  commit
7d6faccafff22a86af62af0384838391d46695ca Author:
Simon Willnauer <simonw@apache.org> Date:   Fri
Oct 31 14:54:08 2014 +0100      fix compilation
commit a038a405c1ff6458ad294e6b5bc469e622f699d0
Author: Simon Willnauer <simonw@apache.org> Date:
Fri Oct 31 14:53:43 2014 +0100      fix
compilation  commit
30c9e307b1f5d80e2deca3392c0298682241207f Author:
Simon Willnauer <simonw@apache.org> Date:   Fri
Oct 31 14:52:35 2014 +0100      fix compilation
commit e5139bc5a0a9abd2bdc6ba0dfbcb7e3c2e7b8481
Author: Robert Muir <rmuir@apache.org> Date:   Fri
Oct 31 09:52:16 2014 -0400      clear nocommit
here  commit
85dd2cedf7a7994bed871ac421cfda06aaf5c0a5 Author:
Simon Willnauer <simonw@apache.org> Date:   Fri
Oct 31 14:46:17 2014 +0100      fix
CompletionPostingsFormatTest  commit
c0f3781f616c9b0ee3b5c4d0998810f595868649 Author:
Robert Muir <rmuir@apache.org> Date:   Fri Oct 31
09:38:00 2014 -0400      add tests for these
analyzers  commit
51f9999b4ad079c283ae762c862fd0e22d00445f Author:
Simon Willnauer <simonw@apache.org> Date:   Fri
Oct 31 14:10:26 2014 +0100      remove nocommit -
this is not an issue  commit
fd1388fa03e622b0738601c8aeb2dbf7949a6dd2 Author:
Martijn van Groningen
<martijn.v.groningen@gmail.com> Date:   Fri Oct 31
14:07:01 2014 +0100      Remove redundant null
check  commit
3d6dd51b0927337ba941a235446b22e8cd500dc3 Author:
Martijn van Groningen
<martijn.v.groningen@gmail.com> Date:   Fri Oct 31
14:01:37 2014 +0100      Removed the work around
to prevent p/c error when invoking #iterator()
twice, because the custom query filter wrapper now
doesn't transform the result to a cache doc id set
any more.      I think the transforming to a
cachable doc id set in CustomQueryWrappingFilter
isn't needed at all, because we use the DocIdSet
only once and because of that is just slowed
things down.  commit
821832a537e00cd1216064b379df3e01d2911d3a Author:
Simon Willnauer <simonw@apache.org> Date:   Fri
Oct 31 13:54:33 2014 +0100      one more nocommit
commit 77eb9ea4c4ea50afb2680c29682ddcb3851a9d4f
Author: Martijn van Groningen
<martijn.v.groningen@gmail.com> Date:   Fri Oct 31
13:52:29 2014 +0100      Remove cast  commit
a400573c034ed602221f801b20a58a9186a06eae Author:
Simon Willnauer <simonw@apache.org> Date:   Fri
Oct 31 13:49:24 2014 +0100      fix stop filter
commit 51746087cf8ec34c4d20aa05ba8dbff7b3b43eec
Author: Simon Willnauer <simonw@apache.org> Date:
Fri Oct 31 13:21:36 2014 +0100      fix changed
semantics of FBS.nextSetBit to check for
NO_MORE_DOCS  commit
8d0a4e2511310f1293860823fe3ba80ac771bbe3 Author:
Robert Muir <rmuir@apache.org> Date:   Fri Oct 31
08:13:44 2014 -0400      do the bogus cast
differently  commit
46a5cc5732dea096c0c80ae5ce42911c9c51e44e Author:
Simon Willnauer <simonw@apache.org> Date:   Fri
Oct 31 13:00:16 2014 +0100      I hate it but P/C
now passes  commit
580c0c2f82bbeacf217e594f22312b11d1bdb839 Merge:
a9d3c00 1645434 Author: Robert Muir
<rmuir@apache.org> Date:   Fri Oct 31 06:54:31
2014 -0400      fix nocommit/classcast  commit
a9d3c004d62fe04989f49a897e6ff84973c06eb9 Author:
Adrien Grand <jpountz@gmail.com> Date:   Fri Oct
31 08:49:31 2014 +0100      Update TODO.  commit
aa75af0b407792aeef32017f03a6f442ed970baa Author:
Robert Muir <rmuir@apache.org> Date:   Thu Oct 30
19:18:25 2014 -0400      clear obselete nocommits
from lucene bump  commit
d438534cf41fcbe2d88070e2f27c994625e082c2 Author:
Robert Muir <rmuir@apache.org> Date:   Thu Oct 30
18:53:20 2014 -0400      throw classcastexception
when ES abuses regular filtercache for nested docs
commit 2c751f3a8feda43ec127c34769b069de21f3d16f
Author: Robert Muir <rmuir@apache.org> Date:   Thu
Oct 30 18:31:34 2014 -0400      bump lucene
revision, fix tests  commit
d6ef7f6304ae262bf6228a7d661b2a452df332be Author:
Simon Willnauer <simonw@apache.org> Date:   Thu
Oct 30 22:37:58 2014 +0100      fix merge problems
commit de9d361f88a9ce6bb3fba85285de41f223c95767
Merge: 41f6aab f6b37a3 Author: Simon Willnauer
<simonw@apache.org> Date:   Thu Oct 30 22:28:59
2014 +0100      Merge branch 'master' into
enhancement/lucene_5_0_upgrade      Conflicts:
pom.xml
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/gateway/local/stat
e/meta/MetaDataStateFormat.java  commit
41f6aab388aa80c40b08a2facab2617576203a0d Author:
Simon Willnauer <simonw@apache.org> Date:   Thu
Oct 30 17:48:46 2014 +0100      fix potiential NPE
commit c4428b12e1ae838b91e847df8b4a8be7f49e10f4
Author: Simon Willnauer <simonw@apache.org> Date:
Thu Oct 30 17:38:46 2014 +0100      don't advance
iterator in a match(doc) method  commit
28ab948e99e3ea4497c9b1e468384806ba7e1790 Author:
Simon Willnauer <simonw@apache.org> Date:   Thu
Oct 30 17:34:58 2014 +0100      don't advance
iterator in a match(doc) method  commit
eb0f33f6634fadfcf4b2bf7327400e568f0427bb Author:
Simon Willnauer <simonw@apache.org> Date:   Thu
Oct 30 16:55:54 2014 +0100      fix GeoUtilsTest
commit 7f711fe3eaf73b6c2268cf42d5a41132a61ad831
Author: Simon Willnauer <simonw@apache.org> Date:
Thu Oct 30 16:43:16 2014 +0100      Use a
dedicated default index option if field type is
not indexed by default  commit
78e3f37ab779e3e1b25b45a742cc86ab5f975149 Author:
Robert Muir <rmuir@apache.org> Date:   Thu Oct 30
10:56:14 2014 -0400      disable this test with
AwaitsFix to reduce noise  commit
9a590f563c8e03a99ecf0505c92d12d7ab20d11d Author:
Simon Willnauer <simonw@apache.org> Date:   Thu
Oct 30 09:38:49 2014 +0100      fix lucene version
commit abe3ca1d8bb6b5101b545198f59aec44bacfa741
Author: Simon Willnauer <simonw@apache.org> Date:
Thu Oct 30 09:35:05 2014 +0100      fix
AnalyzingCompletionLookupProvider to wrok with new
codec API  commit
464293b245852d60bde050c6d3feb5907dcfbf5f Author:
Robert Muir <rmuir@apache.org> Date:   Thu Oct 30
00:26:00 2014 -0400      don't try to write stuff
to tests class directory  commit
031cc6c19f4fe4423a034b515f77e5a0e282a124 Author:
Robert Muir <rmuir@apache.org> Date:   Thu Oct 30
00:12:36 2014 -0400      AwaitsFix these known
issues to reduce noise  commit
4600d51891e35847f2d344247d6f915a0605c0d1 Author:
Robert Muir <rmuir@apache.org> Date:   Thu Oct 30
00:06:53 2014 -0400      openbitset lives on
commit 8492bae056249e2555d24acd55f1046b66a667c4
Author: Robert Muir <rmuir@apache.org> Date:   Wed
Oct 29 23:42:54 2014 -0400      fixes for filter
tests  commit
31f24ce4efeda31f97eafdb122346c7047a53bf2 Author:
Robert Muir <rmuir@apache.org> Date:   Wed Oct 29
23:12:38 2014 -0400      don't use fieldcache
commit 8480789942fdff14a6d2b2cd8134502fe62f20c8
Author: Robert Muir <rmuir@apache.org> Date:   Wed
Oct 29 23:04:29 2014 -0400      ancient index no
longer supported  commit
02e78dc7ebdd827533009f542582e8db44309c57 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 23:37:02 2014 +0100      fix more tests
commit ff746c6df23c50b3f3ec24922413b962c8983080
Author: Simon Willnauer <simonw@apache.org> Date:
Wed Oct 29 23:08:19 2014 +0100      fix all mapper
commit e4fb84b517107b25cb064c66f83c9aa814a311b2
Author: Simon Willnauer <simonw@apache.org> Date:
Wed Oct 29 22:55:54 2014 +0100      fix
distributor tests and cut over to FileStore API
commit 20c850e2cfe3210cd1fb9e232afed8d4ac045857
Author: Simon Willnauer <simonw@apache.org> Date:
Wed Oct 29 22:42:18 2014 +0100      use DOCS_ONLY
if index=true and current options == null  commit
44169c108418413cfe51f5ce23ab82047463e4c2 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 22:33:36 2014 +0100      Fix index=yes|no
settings in mappers  commit
a3c5f77987461a18121156ed345d42ded301c566 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 21:51:41 2014 +0100      fix several field
mappers conversion from setIndexed to indexOptions
commit df84d736908e88a031d710f98e222be68ae96af1
Author: Simon Willnauer <simonw@apache.org> Date:
Wed Oct 29 21:33:35 2014 +0100      fix
SourceFieldMapper to be not indexed  commit
b2bf01d12a8271a31fb2df601162d0e89924c8f5 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 21:23:08 2014 +0100      Cut over to .liv
files in store and corruption tests  commit
619004df436f9ef05d24bef1b6a7f084c6b0ad75 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 17:05:52 2014 +0100      fix more tests
commit b7ed653a8b464de446e00456bce0a89e47627c38
Author: Simon Willnauer <simonw@apache.org> Date:
Wed Oct 29 16:19:08 2014 +0100      [STORE] Add
dedicated method to write temporary files
Recovery writes temporary files which might not
end up in the     right distributor directories
today. This commit adds a dedicated     API that
allows specifying the target file name in order to
create the     tempoary file in the correct
directory.  commit
7d574659f6ae04adc2b857146ad0d8d56ca66f12 Author:
Robert Muir <rmuir@apache.org> Date:   Wed Oct 29
10:28:49 2014 -0400      add some leniency to
temporary bogus method  commit
f97022ea7c2259f7a5cf97d924c59ed75ab65b32 Author:
Robert Muir <rmuir@apache.org> Date:   Wed Oct 29
10:24:17 2014 -0400      fix MultiCollector bug
commit b760533128c2b4eb10ad76e9689ef714293dd819
Author: Simon Willnauer <simonw@apache.org> Date:
Wed Oct 29 14:56:08 2014 +0100      CheckIndex is
now closeable we need to close it  commit
9dae9fb6d63546a6c2427be2a2d5c8358f5b1934 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 14:45:11 2014 +0100
s/Lucene51/Lucene50  commit
7aea9b86856a8c1b06a08e7c312ede1168af1287 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 14:42:30 2014 +0100      fix
BloomFilterPostingsFormat  commit
16fea6fe842e88665d59cc091e8224e8dc6ce08c Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 14:41:16 2014 +0100      fix some codec
format issues  commit
3d77aa97dd2c4012b63befef3f2ba2525965e8a6 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 14:30:43 2014 +0100      fix CodecTests
commit 6ef823b1fde25657438ace1aabd9d552d6ae215e
Author: Simon Willnauer <simonw@apache.org> Date:
Wed Oct 29 14:26:47 2014 +0100      make it
compile  commit
9991eee1fe99435118d4dd42b297ffc83fce5ec5 Author:
Robert Muir <rmuir@apache.org> Date:   Wed Oct 29
09:12:43 2014 -0400      add an ugly hack for
TopHitsAggregator for now  commit
03e768a01fcae6b1f4cb50bcceec7d42977ac3e6 Author:
Simon Willnauer <simonw@apache.org> Date:   Wed
Oct 29 14:01:02 2014 +0100      cut over
ES090PostingsFormat  commit
463d281faadb794fdde3b469326bdaada25af048 Merge:
0f8740a 8eac79c Author: Robert Muir
<rmuir@apache.org> Date:   Wed Oct 29 08:30:36
2014 -0400      Merge branch 'master' into
enhancement/lucene_5_0_upgrade  commit
0f8740a782455a63524a5a82169f6bbbfc613518 Author:
Robert Muir <rmuir@apache.org> Date:   Wed Oct 29
01:00:15 2014 -0400      fix/hack remaining filter
and analysis issues  commit
df534488569da13b31d66e581456dfd4b55156b9 Author:
Robert Muir <rmuir@apache.org> Date:   Tue Oct 28
23:11:47 2014 -0400      fix ngrams / openbitset
usage  commit
11f5dc3b9887f4da80a0fa1818e1350b30599329 Author:
Robert Muir <rmuir@apache.org> Date:   Tue Oct 28
22:42:44 2014 -0400      hack over sort
comparators  commit
4ebdc754350f512596f6a02770d223e9f5f7975a Author:
Robert Muir <rmuir@apache.org> Date:   Tue Oct 28
21:27:07 2014 -0400      compiler errors < 100
commit 2d60c9e29de48ccb0347dd87f7201f47b67b83a0
Author: Robert Muir <rmuir@apache.org> Date:   Tue
Oct 28 03:13:08 2014 -0400      clear some
nocommits around ram usage  commit
aaf47fe6c0aabcfb2581dd456fc50edf871da758 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Oct 27
12:27:34 2014 -0400      migrate fieldinfo
handling  commit
ef6ed6d15d8def71cd880d97249678136cd29fe3 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Oct 27
12:07:13 2014 -0400      more simple fixes  commit
f475e1048ae697dd9da5bd9da445102b0b7bc5b3 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Oct 27
11:58:21 2014 -0400      more fielddata ram
accounting fixes  commit
16b4239eaa9b4262df258257df4f31d39f28a3a2 Author:
Simon Willnauer <simonw@apache.org> Date:   Mon
Oct 27 16:47:32 2014 +0100      add missing file
commit 5b542fa2a6da81e36a0c35b8e891a1d8bc58f663
Author: Simon Willnauer <simonw@apache.org> Date:
Mon Oct 27 16:43:29 2014 +0100      cut over
completion posting formats - still some nocommits
commit ecdea49404c4ec4e1b78fb54575825f21b4e096e
Author: Robert Muir <rmuir@apache.org> Date:   Mon
Oct 27 11:21:09 2014 -0400      fielddata
accountable fixes  commit
d43da265718917e20c8264abd43342069198fe9c Author:
Simon Willnauer <simonw@apache.org> Date:   Mon
Oct 27 16:19:53 2014 +0100      cut over
BloomFilterPostings to new API  commit
29b192ba621c14820175775d01242162b88bd364 Author:
Robert Muir <rmuir@apache.org> Date:   Mon Oct 27
10:22:51 2014 -0400      fix more analyzers
commit 74b4a0c5283e323a7d02490df469497c722780d2
Author: Robert Muir <rmuir@apache.org> Date:   Mon
Oct 27 09:54:25 2014 -0400      fix tests  commit
554084ccb4779dd6b1c65fa7212ad1f64f3a6968 Author:
Simon Willnauer <simonw@apache.org> Date:   Mon
Oct 27 14:51:48 2014 +0100      maintain supressed
exceptions on CorruptIndexException  commit
cf882d9112c5e8ef1e9f2b0f800f7aa59001a4f2 Author:
Simon Willnauer <simonw@apache.org> Date:   Mon
Oct 27 14:47:17 2014 +0100
commitOnClose=false  commit
ebb2a9189ab2f459b7c6c9985be610fd90dfe410 Author:
Simon Willnauer <simonw@apache.org> Date:   Mon
Oct 27 14:46:06 2014 +0100      cut over
indexwriter closeing in InternalEngine  commit
cd21b3d4706f0b562bd37792d077d60832aff65f Author:
Simon Willnauer <simonw@apache.org> Date:   Mon
Oct 27 14:38:10 2014 +0100      fix constant
commit f93f900c4a1c90af3a21a4af5735a7536423fe28
Author: Robert Muir <rmuir@apache.org> Date:   Mon
Oct 27 09:50:49 2014 -0400      fix test  commit
a9a752940b1ab4699a6a08ba8b34afca82b843fe Author:
Martijn van Groningen
<martijn.v.groningen@gmail.com> Date:   Mon Oct 27
09:26:18 2014 +0100      Be explicit about the
index options  commit
d9ee815babd030fa2ceaec9f467c105ee755bf6b Author:
Simon Willnauer <simonw@apache.org> Date:   Sun
Oct 26 20:03:44 2014 +0100      cut over store and
directory  commit
b3f5c8e39039dd8f5caac0c4dd1fc3b1116e64ca Author:
Robert Muir <rmuir@apache.org> Date:   Sun Oct 26
13:08:39 2014 -0400      more test fixes  commit
8842f2684e3606aae0860c27f7a4c53e273d47fb Author:
Robert Muir <rmuir@apache.org> Date:   Sun Oct 26
12:14:52 2014 -0400      tests manual labor
commit c43de5aec337919a3fdc3638406dff17fc80bc98
Author: Robert Muir <rmuir@apache.org> Date:   Sun
Oct 26 11:04:13 2014 -0400      BytesRef ->
BytesRefBuilder  commit
020c0d087a2f37566a1db390b0e044ebab030138 Author:
Martijn van Groningen
<martijn.v.groningen@gmail.com> Date:   Sun Oct 26
15:53:37 2014 +0100      Moved over to
BitSetFilter  commit
48dd1b909e6c52cef733961c9ecebfe4f67109fe Author:
Martijn van Groningen
<martijn.v.groningen@gmail.com> Date:   Sun Oct 26
15:53:11 2014 +0100      Left over Collector api
change in ScanContext  commit
6ec248ef63f262bcda400181b838fd9244752625 Author:
Martijn van Groningen
<martijn.v.groningen@gmail.com> Date:   Sun Oct 26
15:47:40 2014 +0100      Moved indexed() over to
indexOptions != null or indexOptions == null
commit 9937aebfd8546ae4bb652cd976b3b43ac5ab7a63
Author: Martijn van Groningen
<martijn.v.groningen@gmail.com> Date:   Sun Oct 26
13:26:31 2014 +0100      Fixed many compile
errors. Mainly around the breaking Collector api
change in 5.0.  commit
fec32c4abc0e3309cf34260c8816305a6f820c9e Author:
Robert Muir <rmuir@apache.org> Date:   Sat Oct 25
11:22:17 2014 -0400      more easy fixes  commit
dab22531d801800d17a65dc7c9464148ce8ebffd Author:
Robert Muir <rmuir@apache.org> Date:   Sat Oct 25
09:33:41 2014 -0400      more progress  commit
414767e9a955010076b0497cc4f6d0c1850b48d3 Author:
Robert Muir <rmuir@apache.org> Date:   Sat Oct 25
06:33:17 2014 -0400      more progress  commit
ad9d969fddf139a8830254d3eb36a908ba87cc12 Author:
Robert Muir <rmuir@apache.org> Date:   Fri Oct 24
14:28:01 2014 -0400      current state of fun
commit 464475eecb0be15d7d084135ed16051f76a7e521
Author: Robert Muir <rmuir@apache.org> Date:   Fri
Oct 24 11:42:41 2014 -0400      bump to 5.0
snapshot
",342147,3963,129139,"Robert Muir","rmuir@apache.org","Robert Muir","rmuir@apache.org"
"1999","elastic/elasticsearch","256712640f5718c9f3727f73c3b955aab24bfca3",2,"2014-11-26 18:12:17+01:00","MLT Query: Support for ignore docs  Adds a
`ignore_like` parameter to the MLT Query, which
simply tells the algorithm to skip all the terms
from the given documents. This could be useful in
order to better guide nearest neighbor search by
telling the algorithm to never explore the space
spanned by the given `ignore_like` docs. In
essence we are interested about the characteristic
of a given item, but not of the ones provided by
`ignore_like`, thereby forcing the algorithm to go
deeper in its selection of terms. Note that this
is different than simply performing a must not
boolean query on the unliked items. The syntax is
exactly the same as the `like` parameter.  Closes
#8674
",345177,3962,129715,"Alex Ksikes","alex.ksikes@gmail.com","Alex Ksikes","alex.ksikes@gmail.com"
"2000","elastic/elasticsearch","3e37c89932bca3af580b476b0181a7da851f64e6",2,"2014-12-29 16:26:35+01:00","[INTERNAL] Remove OperationRouting abstraction
This commit removes the unneeded OperationRouting
interface and flattens the package structure
inside cluster.routing
",348209,3972,129965,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2001","elastic/elasticsearch","59f8c0951afa72c482500a1265456d2dfd885a97",1,"2015-02-02 08:17:54+01:00","Netty Transport: Add profiles to transport infos
Until now, there was no possibility to expose
infos about configured transport profiles. This
commit adds the ability to expose those
information in the TransportInfo class.  The
channel was well as the netty pipeline handler now
also contain the profile they were configured for,
as this information cannot be extracted elsewhere.
In addition, each profile now can set its own
publish host and port, which might be needed in
case of portforwarding or using docker.  Closes
#9134
",351409,3974,130476,"Alexander Reelsen","alexander@reelsen.net","Alexander Reelsen","alexander@reelsen.net"
"2002","elastic/elasticsearch","30a4294a6a76fbef7840cac4c23b05d9de7786a5",1,"2015-02-20 06:58:43-05:00","Upgrade to lucene r1660560  Squashed commit of the
following:  commit
07391388715ed1f737e8acc391cea0bce5d79db9 Merge:
a71cc45 b61b021 Author: Robert Muir
<rmuir@apache.org> Date:   Fri Feb 20 06:58:11
2015 -0500      Git really sucks      Merge branch
'lucene_r1660560' of
github.com:elasticsearch/elasticsearch into
lucene_r1660560  commit
b61b02163f62ad8ddd9906cedb3d57fed75eb52d Author:
Adrien Grand <jpountz@gmail.com> Date:   Wed Feb
18 19:03:49 2015 +0100      Try to improve
TopDocs.merge usage.  commit
bf8e4ac46d7fdaf9ae128606d96328a59784f126 Author:
Ryan Ernst <ryan@iernst.net> Date:   Wed Feb 18
07:43:37 2015 -0800      reenable scripting test
for accessing postings pieces.  commented out
parts that fail because of bad assumptions  commit
6d4d635b1a23b33c437a6bae70beea70ad52d91c Author:
Robert Muir <rmuir@apache.org> Date:   Wed Feb 18
09:41:46 2015 -0500      add some protection
against broken asserts, but, also disable crappy
test  commit
c735bbb11f38782dfea9c4200fcf732564126bf5 Author:
Robert Muir <rmuir@apache.org> Date:   Wed Feb 18
02:21:30 2015 -0500      cutover remaining stuff
from old postings api  commit
11c9c2bea3db3ff1cd2807bd43e77b500b167aed Author:
Robert Muir <rmuir@apache.org> Date:   Wed Feb 18
01:46:04 2015 -0500      cut over most DocsEnum
usage  commit
bc18017662f6abddf3f074078f74e582494c88e2 Author:
Robert Muir <rmuir@apache.org> Date:   Wed Feb 18
01:19:35 2015 -0500      upgrade to
lucene_r1660560, modulo one test fail
",353534,3984,130947,"Robert Muir","rmuir@apache.org","Robert Muir","rmuir@apache.org"
"2003","elastic/elasticsearch","4fddda307f7aa336bb15ad5df98bbba957b002cd",1,"2015-02-10 16:19:14+01:00","[Discovery] Prevent stale master nodes from
sharing dated cluster states to nodes that have
moved to a different master node.  If an elected
master node goes into a long gc then other nodes'
fault detection will notice this and a new master
election is started and eventually a new master
node is elected. If the previous master nodes goes
out of the long gc it can still have pending tasks
which can result in new cluster state updates.
Nodes that are still in the nodes list of this
previous elected master node can get these cluster
state updates. This commit makes sure that this
dated cluster states are not accepted by these
nodes.  This issue can temporary lead to the fact
that non elected master nodes switch to the
previous elected master node. The new elected
master node also gets the same dated cluster
state, but rejects it and tells the previous
elected master node to step down and rejoin.
Because the new elected master is the only master
node the previous elected master node will follow
the new elected master node. Any nodes that follow
the previous elected master node (by accident),
will also rejoin and follow the new elected master
node because their master fault detection will
fail. So all in all this isn't a severe problem,
because the problem fixes itself eventually.
Closes #9632
",354046,3988,131090,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2004","elastic/elasticsearch","8c695355807be445d0322ecffb28377c1117c7a9",3,"2015-03-14 17:46:43-07:00","Recovery: add throttle stats  This commit adds
throttling statistics to the index stats API and
to the recovery state.  Closes #10097
",357179,3986,131210,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"2005","elastic/elasticsearch","41832b6f5bdb00f16890c3630b5b7f91a008c5dc",1,"2015-03-24 13:06:06+01:00","Change project name to elasticsearch-watcher  -
`alerts` package is now `watcher` package - we no
longer use the term `Alert`, but instead we use
`Watch` - documentation still needs to be updated
Original commit: elastic/x-pack-elasticsearch@1225
edf7e39bdab87916ef866b173a591aa352f4
",16274,216,2709,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2006","elastic/elasticsearch","76ac6476104d8701e8ad37563fcff693521d352c",2,"2015-04-12 04:10:13+02:00","Cleanup of templates  - Introduced
`TemplateEngine` and its only implementation
`MustacheTemplateEngine` - Change `Template` to
only hold the template config.. the rendering is
now done by the engine - Introduced
`EmailTemplate` that can render itself to an
`Email` (given an engine and model) - Renamed
`TemplatedHttpRequest` to `HttpRequestTemplate`
and it has a `render` method that given a model
and an engine it creates an `HttpRequest`
construct.  - also fixed a bug where when the http
request is build, the configured scheme wasn't
set. - cleaned up `HttpRequest` - made it
immutable and now we use a builder to build it.  -
also fixed a bug in `HttpRequest` where the
xcontent didn't render the scheme - Got rid of all
old template implementations... also, parsing a
template is now simply `Template.parse(...)` (no
need for a special `TemplateParser`. - While at
it, change the action builder to only deal with
actions and not know anything about the action id.
The id is now passed to the watch builder directly
when adding an action  Original commit:
elastic/x-pack-elasticsearch@1a7acc58687ada63278ae
555eb7d8edc7489b136
",21325,278,3302,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2007","elastic/elasticsearch","d339ee40056d5d24f73343f4ad368c05a8100daa",6,"2015-01-30 14:27:08+01:00","Term Vectors: terms filtering  This adds a new
feature to the Term Vectors API which allows for
filtering of terms based on their tf-idf scores.
With `dfs` option on, this could be useful for
finding out a good characteric vector of a
document or a set of documents. The parameters are
similar to the ones used in the MLT Query.  Closes
#9561
",356415,3956,129953,"Alex Ksikes","alex.ksikes@gmail.com","Alex Ksikes","alex.ksikes@gmail.com"
"2008","elastic/elasticsearch","13573d6c6da02558313697e42749590879d1dacd",9,"2015-04-13 10:02:43+02:00","Cleanup and Refactoring of the actions  * Split
the action into two constructs: `Action` and
`ExecutableAction`. The former holds all the
action configuration, the latter can execute the
action based on that configuration (an executable
action holds an action)  - This the code clearer
to understand and maintain.  - This also enabled
to pull some common implementation code into the
`ExecutableAction` and by that reduce the
implementation details of each executable to the
minimum required.  * Also, extracted teh
`Action.Parser` to its own top level class, and
renamed it to - `ActionFactory`. The main thing
that the parser does is: 1) delegate to the
parsing to the `Action` class, 2) construct & wire
up the `ExecutableAction`.  * Cleaned up and
aligned the log messages across all actions.
Introduced  - introduced parameterized exceptions
(now the exception messages are constructed
exactly like that log messages - using `{}`
params)  - Introduced the notion of `Wid` - Watch
(execution) ID`. Now the `WatchExecutionContext`
and the `WatchRecord` hold this construct as their
ID (instead of an opaque string). The Wid has a
well defined structure where it's prefixed with
the watch id. This is very helpful to provide
context to parsing the different constructs
(actions in our case) as when parsing error occurs
we can point directly to the place were we found
the error (ie. watch id, record id and action id).
* With the introduction of `Action`, we no longer
need the `SourceBuilder` for actions. Instead, we
have `Action.Builder` that help you build actions.
This is much more intuitive from the client
perspective.  Original commit: elastic/x-pack-elas
ticsearch@df22da4e1f08ddf621184cb7ea9276f093c148bf
",21710,292,3420,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2009","elastic/elasticsearch","ebda02438e3b86234bda47c188384d52e83ab275",2,"2015-04-17 12:57:34-07:00","Cleanup and Refactoring of the inputs  * Split the
action into two constructs: `Input` and
`ExecutableInput`. The former holds all the input
configuration, the latter can execute the input
based on that configuration (an executable input
holds an input)  - This the code clearer to
understand and maintain.  - This also enabled to
pull some common implementation code into the
`ExecutableInput` and by that reduce the
implementation details of each executable to the
minimum required.  * Also, extracted the
`Input.Parser` to its own top level class, and
renamed it to - `InputFactory`. The main thing
that the factory does is: 1) delegate to the
parsing to the `Input` class, 2) construct & wire
up the `ExecutableInput`.  * With the introduction
of `Input`, we no longer need the `SourceBuilder`
for inputs. Instead, we have an `Input.Builder`
that help you build an input. This is much more
intuitive from the client perspective.  * Changed
the `request` xcontent field in the http input
result to `sent_request` for clarity * Changed the
`request` xcontent field in the search input
result to `executed_request` for clarity  Original
commit: elastic/x-pack-elasticsearch@63b93f9c7b386
49ef99ed6800c1c4a2f966fbb85
",22985,327,3786,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2010","elastic/elasticsearch","690af790b284b2fc20a9376b91e1e808beae84cd",2,"2015-04-22 23:11:48+02:00","Cleanup and Refactoring of the transforms  * Split
the transform into two constructs: `Transform` and
`ExecutableTransform`. The former holds all the
transform configuration, the latter can execute
the transform based on that configuration (an
executable transform holds a transform)  - This
makes the code clearer to understand and maintain.
- This also enabled to pull some common
implementation code into the `ExecutableTransform`
and by that reduce the implementation details of
each executable to the minimum required.  * Also,
extracted the `Transform.Parser` to its own top
level class, and renamed it to -
`TransformFactory`. The main thing that the
factory does is: 1) delegate to the parsing to the
`Transform` class, 2) construct & wire up the
`ExecutableTransform`.  * With the introduction of
`Transform`, we no longer need the `SourceBuilder`
for transforms. Instead, we have
`Transform.Builder` that help you build a
transform. This is much more intuitive from the
client perspective.  Original commit:
elastic/x-pack-elasticsearch@f6ee0d0c75079a6f31095
833e20f68973c8a6ef8
",24011,346,3925,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2011","elastic/elasticsearch","d746e14cf3f6d9b25a2c6018eedca249555cf44b",1,"2015-04-26 21:04:41-04:00","Add support for cluster state diffs  Adds support
for calculating and sending diffs instead of full
cluster state of the most frequently changing
elements - cluster state, meta data and routing
table.  Closes #6295
",360277,3995,131079,"Igor Motov","igor@motovs.org","Igor Motov","igor@motovs.org"
"2012","elastic/elasticsearch","c8a986cab78be8a438751f00ab88e4383a0757a0",1,"2015-05-01 15:41:28+02:00","Added a timeout to all watch write operations  The
problem we have today is that since all write
operations on a watch are blocked on the watch
lock, if a watch is executing for a long time (for
whatever reason) the action will simply block and
by that hold a `management` thread for potentially
a long time. This impacts elasticsearch as a whole
- if for example there's an infinite loop in the
condition script, then you try to
delete/ack/update the watch 5 times (the default
size of the management thread pool in
elasticsearch is 5). You effectively block all
management threads in elasticsearch and from that
moment on, the only thing left to do is kill the
node.  This commit introduces a timeout for the
tree write watch actions - `put`, `ack` and
`delete`. It is set to 10 seconds by default, but
you can customize it both in java and in the rest
API using the standard `master_timeout` query
parameter.  Updated the relevant docs.  Fixes
elastic/elasticsearch#309  Original commit:
elastic/x-pack-elasticsearch@03292db37b07bfd8f0bc5
389ef7dbc1a0fc55b2c
",26092,365,4126,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2013","elastic/elasticsearch","187d79b6df99ee9ff94605b4ecf6417df552aa33",4,"2015-05-04 16:23:08+02:00","Centralize admin implementations and action
execution This change removes the multiple
implementations of different admin interfaces and
centralizes it with AbstractClient. It also makes
sure *all* executions of actions now go through a
single AbstractClient#execute method, taking care
of copying headers and wrapping listener. This
also has the side benefit of removing all the code
around differnet possible clients, and removes
quite a bit of code (most of the + code is
actually removal of generics and such).  This
change also changes how TransportClient is
constructed, requiring a Builder to create it, its
a breaking change and its noted in the migration
guide.  Yea another step towards simplifying the
action infra and making it simpler...
",361790,3999,131033,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"2014","elastic/elasticsearch","a0af88e99630b9d3f0c2cf4997f2e82f1f834d41",2,"2015-05-05 08:27:52+02:00","Query DSL: Remove filter parsers.  This commit
makes queries and filters parsed the same way
using the QueryParser abstraction. This allowed to
remove duplicate code that we had for similar
queries/filters such as `range`, `prefix` or
`term`.
",359208,3963,129248,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"2015","elastic/elasticsearch","3289ee90298fcbc22fde39cf3e9092bc7835d79c",2,"2015-05-08 14:13:52+02:00","Changed `attach_data` in emails to be more
flexible  Bye default, when `attach_data` is set
to `true` we attache the watch execution data as a
`yaml` file. Now it's possible to configure the
format of the file by setting the `attach_data` to
an object with a `format` field (can either be set
to `yaml` or `json`). Example:  ``` ""attach_data""
: {   ""format"" : ""json"" } ```  Original commit:
elastic/x-pack-elasticsearch@5cab59a676a190bc68333
083bfcb00b50f3a8985
",27465,380,4283,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2016","elastic/elasticsearch","72fde6f69579655ca6c582c7928cda137753b224",2,"2015-05-11 01:19:13+02:00","Async fetch of shard started and store during
allocation Today, when a primary shard is not
allocated we go to all the nodes to find where it
is allocated (listing its started state). When we
allocate a replica shard, we head to all the nodes
and list its store to allocate the replica on a
node that holds the closest matching index files
to the primary.  Those two operations today
execute synchronously within the GatewayAllocator,
which means they execute in a sync manner within
the cluster update thread. For large clusters, or
environments with very slow disk, those operations
will stall the cluster update thread, making it
seem like its stuck.  Worse, if the FS is really
slow, we timeout after 30s the operation (to not
stall the cluster update thread completely). This
means that we will have another run for the
primary shard if we didn't find one, or we won't
find the best node to place a shard since it might
have timed out (listing stores need to list all
files and read the checksum at the end of each
file).  On top of that, this sync operation happen
one shard at a time, so its effectively
compounding the problem in a serial manner the
more shards we have and the slower FS is...  This
change moves to perform both listing the shard
started states and the shard stores to an async
manner. During the allocation by the
GatewayAllocator, if data needs to be fetched from
a node, it is done in an async fashion, with the
response triggering a reroute to make sure the
results will be taken into account. Also, if there
are on going operations happening, the relevant
shard data will not be taken into account until
all the ongoing listing operations are done
executing.  The execution of listing shard states
and stores has been moved to their own respective
thread pools (scaling, so will go down to 0 when
not needed anymore, unbounded queue, since we
don't want to timeout, just let it execute based
on how fast the local FS is). This is needed sine
we are going to blast nodes with a lot of requests
and we need to make sure there is no thread
explosion.  This change also improves the handling
of shard failures coming from a specific node.
Today, those nodes were ignored from allocation
only for the single reroute round. Now, since
fetching is async, we need to keep those failures
around at least until a single successful fetch
without the node is done, to make sure not to
repeat allocating to the failed node all the time.
Note, if before the indication of slow allocation
was high pending tasks since the allocator was
waiting for responses, not the pending tasks will
be much smaller. In order to still indicate that
the cluster is in the middle of fetching shard
data, 2 attributes were added to the cluster
health API, indicating the number of ongoing
fetches of both started shards and shard store.
closes #9502 closes #11101
",360465,3967,129427,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"2017","elastic/elasticsearch","e0a70722e0a576b3f6c871d5cf51c4a37bde8827",10,"2015-04-27 23:13:50+02:00","Move acking/throttling to the action level  Until
now, acking and throttling functionality was
applied at the watch level. This has major
drawbacks in different aspects:  - When multiple
actions are defined on a watch, acking a watch
effectively acks all the actions. This is
conceptually wrong. Say you have two actions:
`email` and `index`. It's very likely you'd like
to ack the email action (to avoid receiving too
many emails) but at the same time continue
indexing the data in the `index` action. Right now
it's not possible.  - Different actions types may
require different throttling. An `email` action
probably needs a longer throttle period compared
to an `index` action. Also for different `webhook`
actions, the throttling is ultimately determined
by the 3rd party system that is called.  This
commit changes how we do throttling & acking.
Moving this functionality to the action level.
Now, when acking, each action in the watch will be
acked separately. During executiong, each action
will determine whether it needs to be throttled or
not. The throttler is not associated with the
action, not with the watch.  The throttle period
was enhanced. There is a default throttle period
that is configured for watcher as a whole (using
the `watcher.execution.default_throttle_period`
setting. Next to that, each `watch` can define its
own `throttle_period` that can serve as the
default throttle period for the actions in the
watch. Lastly, each action can have its own
throttle period set.  Since the throttler is now
an action ""thing"", the `throttle` package was
renamed to `throttler` and moved under the
`actions` package. Also, `WatchThrottler` was
renamed to `ActionThrottler`.  With this change,
the `Watch Execute API` changed as well. Now, when
executing a watch, you can define an execution
mode per action. The execution mode offers 4 types
of execution: - `execute`: executes the watch
normally (actually executing the action and it may
be throttled) - `force_execute`: skips/ignores
throttling and executes the watch - `simulate`:
simulates the watch execution yet it may be
throttled - `force_simulate`: skips/ignores
throttling and simulates the watch execution  As
part of this change, the structure of the watch
status changed along with the xconent representing
the `watch_record`. A new `ActionStatus` was
introduced (as part of the `WatchStatus`) and is
always set for every action in the watch. This
status holds:  - the current state of the action
(`ackable`, `awaits_successful_execution`,
`acked`)  - the last execution state
(success/failure + reason)  - the last successful
execution state  - the last throttle state
(timestamp + reason)  Original commit:
elastic/x-pack-elasticsearch@32c2985ed8739cb19d436
d16092356463f5d1e51
",29736,402,4587,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2018","elastic/elasticsearch","6acc3f26161a0ee01bb310dec31c29e60764e3a2",2,"2015-04-29 15:54:17+02:00","Added support for headers in HttpClient  -
HttpResponse now holds the response headers -
Added specific support for content type of the
response, based on which we create the xcontent
payload.  Original commit: elastic/x-pack-elastics
earch@beae27f57644fa7a988256be387fa40d9a8e49bc
",29971,404,4604,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2019","elastic/elasticsearch","35a58d874ef56be50a0ad1d7bfb13edb4204d0a3",1,"2015-05-12 10:37:22+01:00","Scripting: Unify script and template requests
across codebase  This change unifies the way
scripts and templates are specified for all
instances in the codebase. It builds on the Script
class added previously and adds request building
and parsing support as well as the ability to
transfer script objects between nodes. It also
adds a Template class which aims to provide the
same functionality for template APIs  Closes
#11091
",368060,3987,131062,"Colin Goodheart-Smithe","colin.goodheart-smithe@elasticsearch.com","Colin Goodheart-Smithe","colings86@users.noreply.github.com"
"2020","elastic/elasticsearch","14ffe290f79c96d5f1321c63ec1686c76eb89e65",3,"2015-05-15 17:04:18-04:00","Add support for http input endpoints that do not
return JSON formatted bodys.  This change allows
the httpinput to receive non json formatted data
from a http endpoint (such as the elasticsearch
_cat apis). If non json is read it will be stored
in the `payload._value` in the same way that the
`ScriptTransform` handles non map/json data
returned by transforming scripts. Added
response_content_type to http input so that the
expected content type in the response can be
configured. This accepts `yaml`, `json` and `text`
but will be overridden by the http headers.
Original commit: elastic/x-pack-elasticsearch@753d
37f14ed506dcc53641a6597b15106c025213
",29343,416,4637,"Brian Murphy","brian.p.murphy@gmail.com","Brian Murphy","brian.p.murphy@gmail.com"
"2021","elastic/elasticsearch","d899c4b522807444b16c69ddae66c908becb2e69",5,"2015-06-03 14:41:23+02:00","Execute API to support default trigger  Until
today it was required to provide a trigger event
as part of the execute API. There are two issues
with it:  1. It's not user friendly (you'd expect
that the execute API would just work with just
pointing to the watch) 2. The API could expose
inconsistencies where on one hand it points to a
watch (with a well defined trigger) on the other
it enabled the user to provide completely
different trigger (of a different type)  This
change enable supporting default triggers by
enabling the trigger engine to create a simulated
trigger event. This enables the execute API to
look up the trigger type of the pointed watch, and
ask the trigger service to simulate an event for
it. It is still possible to override the trigger
event data by providing it via the `trigger_data`
parameter in the API.  This simplifies the execute
API and prepares it for future trigger types as
well.  - This commit add missing integration tests
for the execute API - Also, removed unused
`setIgnoreThrottling` from the execute
request/builder.  Original commit: elastic/x-pack-
elasticsearch@b494ae62e6bdae9ee5d871e997cd081fbe95
1d0a
",29727,418,4643,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2022","elastic/elasticsearch","c491e4db167ff2288a32b83d824a4c7c80e10d04",1,"2015-06-04 17:40:41+02:00","Added support for multi doc indexing to index
action  This commit adds support for indexing
multiple documents with the `index` action. This
is done by introducing a special `_doc` field.
During action execution, the `_doc` field will be
looked up in the payload. If found, the value of
the field will be considered as the document that
needs to be indexed. If the value is an array of
objects, each object in that array will be treated
as a separate document and all the documents in
the array will be bulk indexed.  This commit also
changes the result of the action to hold
`XContentSource` rather than a payload (to avoid
Map creation explosions). Th `XContentSource` was
also extended to support lists.  Original commit:
elastic/x-pack-elasticsearch@86f454b0297d1c0a3da58
90fa2bfd116d8a51ad3
",30391,421,4680,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2023","elastic/elasticsearch","9e19090b2b927fc9ec8db9f723f3f5f0a2899936",2,"2015-06-11 17:46:50+02:00","Fold ShardGetService creation away from Guice
into IndexShard  it's always acccessed via
IndexShard and has crazy circular dependencies or
rather had. It just makes IndexShard ctor bigger
for no reason.
",379059,4152,135956,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2024","elastic/elasticsearch","288ce368d5c7856ffc2fd97b0f444bac57ba54ae",4,"2015-06-08 17:45:21+02:00","Moved input errors to the input result  Until now,
if the input failed, an exception would be thrown
and it would be captured globally on the watch
execution and in the watch recod message. The
problem with this approach is that the information
about the input is lost. In this commit, the
failure is returned as part of the input result.
- A new `status` field was added to the input
result. Can either have `success` or `failure`
values. When set to `failure` a `reason` field
will be set with the error message. - The
`ExecutionService` changed to enable this
functionality. Mainly, instead of relying on
exception, during the execution the input result
is checked for its status and the execution is
aborted on failure. Also, the two places where the
watch execution is handled were consolidated to a
single method `execute(WatchExecutionContext)`. -
Also, the watch execution context id (which will
end up being the `watch_record` id) was added the
the context model (accessible via scripts and
templates). This is done mainly for debugging
purposes.  Original commit: elastic/x-pack-elastic
search@e2567deada185eb42ce78307b77600daf42ed503
",30807,425,4758,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2025","elastic/elasticsearch","b6e8df6a326f45ae5c93b978c2fc418b40d94392",4,"2015-06-13 00:33:34+02:00","Added connection/read timeout support for HTTP
Until today connection and read timeout for http
was not directly supported. This means that
without setting oracle specific system properties
at startup, calling a bad http service would by
default hold the watch executing thread forever...
is niet goed!!!  This commit introduces connection
& read timeouts.  - Connection timeouts are
timeouts for setting up the connection - Read
timeouts are timeouts waiting for data to be read
By default both timeouts are set to 10 seconds
(overriding the default jdk to indefinite). It is
possible to customize the default timeouts by
settings `watcher.http.default_connection_timeout`
and `watcher.http.default_read_timeout` settings).
It is also possible to override these defaults per
http request, meaning, per webhook and http input
configuration in the watch.  Original commit:
elastic/x-pack-elasticsearch@224f50bc8b43effe244ba
aca1339200b2f7d3e6a
",31165,427,4795,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2026","elastic/elasticsearch","03b704f79bb9cc4707fef1a32022810b4b622bde",2,"2015-06-15 14:59:11+02:00","Moved transform errors to the tranform result
Until now, if the transform failed (either on the
watch or action level), an exception would be
thrown and it would be captured globally on the
watch execution and in the watch record message
This commit bring the error to the transform
result  - A new `status` field was added to the
transform result. Can either have `success` or
`failure` values. When set to `failure` a `reason`
field will hold the failure message. - The
`ExecutionService` changed to enable this
functionality. Mainly, instead of relying on
exception, during the execution the transform
result status is checked and if failed the watch
execution is aborted.  Original commit:
elastic/x-pack-elasticsearch@65b7f51f00222b6c03c56
430855c80cb3faf768e
",31586,429,4832,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2027","elastic/elasticsearch","4e0d65453fefd584379f119b0b460bed6991fab6",1,"2015-06-15 04:12:05+02:00","Add Unassigned meta data Unassigned meta includes
additional information as to why a shard is
unassigned, this is especially handy when a shard
moves to unassigned due to node leaving or shard
failure.  The additional data is provided as part
of the cluster state, and as part of `_cat/shards`
API.  The additional meta includes the timestamp
that the shard has moved to unassigned, allowing
us in the future to build functionality such as
delay allocation due to node leaving until a copy
of the shard is found. closes #11653
",374018,4175,135422,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"2028","elastic/elasticsearch","c57951780e0132c50b723d78038ab73e10d176c5",1,"2015-06-23 16:25:22+02:00","Simplify ShardRouting abstraction  This commit
folds ShardRouting, ImmutableShardRouting and
MutableShardRouting into ShardRouting. All
mutators are package private anyway today so it's
just unnecessary abstraction. ShardRoutings are
now frozen once they are added to the
IndexRoutingTable to prevent modifications outside
of the allocation code.
",375277,4162,135264,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2029","elastic/elasticsearch","193d8092db7a29535e160847e7484a0321cda74e",3,"2015-06-23 16:27:17+02:00","Added timeout option to the `search` transform,
`search` input and `index` action.  Added default
timeout setting: *
`watcher.action.index.default_timeout` sets the
timeout for `index` action, if no timeout is
defined in the `index` action itself. *
`watcher.input.search.default_timeout` sets the
timeout for `search` input, if no timeout is
defined in the `search` input itself. *
`watcher.transform.search.default_timeout`  sets
the timeout for `search` transform, if no timeout
is defined in the `search` transform itself.
Added general Watcher wide default timeout
settings to the operations exposed in the client
proxy: *
`watcher.internal.ops.search.default_timeout` for
search related operations. *
`watcher.internal.ops.index.default_timeout` for
index operations. *
`watcher.internal.ops.bulk.default_timeout` for
bulk operations.  Original commit: elastic/x-pack-
elasticsearch@5a3ef35a9dc3f5ad710f2e777919604ab4fc
2d0b
",32569,434,4905,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2030","elastic/elasticsearch","38f5cc236ac6d06556d25eab81f7b05854b326ca",2,"2015-06-26 16:31:38+02:00","Rename caches.  In order to be more consistent
with what they do, the query cache has been
renamed to request cache and the filter cache has
been renamed to query cache.  A known issue is
that package/logger names do no longer match
settings names, please speak up if you think this
is an issue.  Here are the settings for which I
kept backward compatibility. Note that they are a
bit different from what was discussed on #11569
but putting `cache` before the name of what is
cached has the benefit of making these settings
consistent with the fielddata cache whose size is
configured by `indices.fielddata.cache.size`:  *
index.cache.query.enable ->
index.requests.cache.enable  *
indices.cache.query.size ->
indices.requests.cache.size  *
indices.cache.filter.size ->
indices.queries.cache.size  Close #11569
",375896,4158,135207,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"2031","elastic/elasticsearch","21ffd931ec9f6a1fd2e4c93550d3d6ff40b39cf0",1,"2015-06-29 12:46:00+02:00","Fix missing renamings.  Relates to #11893
",375900,4158,135207,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"2032","elastic/elasticsearch","44efbf2770a9491fe4b31e8f72000079d673ecc0",5,"2015-07-07 22:50:15+02:00","Renaming FsStats to FsInfo
",379558,4158,135624,"Tanguy Leroux","tlrx.dev@gmail.com","Tanguy Leroux","tlrx.dev@gmail.com"
"2033","elastic/elasticsearch","52859e3a523983275cea0bbb0bd2d4f0203f69cf",1,"2015-07-06 17:32:39+02:00","Internal: refactored MetaData to split the
concrete index name resolution to
IndexNameExpressionResolver.  Changes in a
nutshell: * All expression logic is now
encapsulated by ExpressionResolver interface. *
MetaData#convertFromWildcards() gets replaced by
WildcardExpressionResolver. * All of the indices
expansion methods are being moved from MetaData
class to the new IndexNameExpressionResolver
class. * All single index expansion optimisations
are removed.  The logic for resolving a concrete
index name from an expression has been moved from
MetaData to IndexExpressionResolver. The logic has
been cleaned up and simplified were was possible
without breaking bwc.  Also the notion of
aliasOrIndex has been changed to index expression.
The IndexNameExpressionResolver translates index
name expressions into concrete indices. The list
of index name expressions are first delegated to
the known ExpressionResolverS. An
ExpressionResolver is responsible for translating
if possible an expression into another expression
(possibly but not required this can be concrete
indices or aliases) otherwise the expressions are
left untouched. Concretely this means converting
wildcard expressions into concrete indices or
aliases, but in the future other implementations
could convert expressions based on different
rules.  To prevent many overloading of methods,
DocumentRequest extends now from IndicesRequest.
All implementation of DocumentRequest already did
implement IndicesRequest indirectly.
",381283,4161,136157,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2034","elastic/elasticsearch","f8ba89d9e4e33ac8f4359ddfacf01672db1a4613",1,"2015-07-15 12:14:27+02:00","Carry over shard exception failure to master node
Don't loose the shard exception failure when
sending a shard failrue to the master node
",381475,4166,136083,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"2035","elastic/elasticsearch","f78db1f1d32369da4f8b35093894949e4936605a",1,"2015-07-14 18:51:05+02:00","Unique allocation id Add a unique allocation id
for a shard, helping to uniquely identify a
specific allocation taking place to a node. A
special case is relocation, where a transient
relocationId is kept around to make sure the
target initializing shard (when using
RoutingNodes) is using it for its id, and when
relocation is done, the transient relocationId
becomes the actual id of it. closes #12242
",381632,4168,136157,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"2036","elastic/elasticsearch","33d2ca13a9288dae7e8da2248f112b424a7fbebb",1,"2015-07-22 18:42:31+02:00","Simplify Replica Allocator Simplify the codebase
of replica allocator and add more unit tests for
it
",383310,4181,136683,"Shay Banon","kimchy@gmail.com","Shay Banon","kimchy@gmail.com"
"2037","elastic/elasticsearch","cafc7078e228ab696d0689ec8b2119cb1626e9cd",3,"2015-07-21 16:44:58+02:00","Removing TransportSingleCustomOperationAction in
favour of TransportSingleShardAction to clean up
code.  The TransportSingleCustomOperationAction
`prefer_local` option has been removed as it isn't
worth the effort. The TransportSingleShardAction
will execute the operation on the receiving node
if a concrete list doesn't provide a list of
candite shards routings to perform the operation
on.
",383038,4178,136619,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2038","elastic/elasticsearch","622d8a830e29baab16540ca942a41b646c32aca4",2,"2015-08-03 14:42:34-07:00","Tests: Rename integ tests to IT suffix  This
rename effectively moves all integration tests to
be run with `mvn verify`. `mvn test` now runs in
about 2 mins. This is a follow up to
",386211,4209,137500,"Ryan Ernst","ryan@iernst.net","Ryan Ernst","ryan@iernst.net"
"2039","elastic/elasticsearch","1e12d03252590bb44ae0cc3771c82c63730de212",1,"2015-08-03 17:43:00-07:00","Tests: Rename base tests cases to use ""TestCase""
suffix  Most of the abstract base test classes we
have were previously @Ignored. However, there were
also some other tests ignored. Having two ways to
quiet tests is confusing, and clearly it has
caused some tests to get lost in the fold.  This
change moves all base test classes to use the
""TestCase"" suffix, which is not picked up by the
test class name pattern. It also removes @Ignore
from (almost) all tests, and adds it to forbidden
apis. And since we were renaming, I shorted base
test class names to use ""ES"" instead of
""Elasticsearch"". I type this a lot of types a day,
and I have heard others express a similar desire
for a shorter name.  closes #10659
",386130,4208,137443,"Ryan Ernst","ryan@iernst.net","Ryan Ernst","ryan@iernst.net"
"2040","elastic/elasticsearch","23b348040e21a4ede72c94862131d773f1b2b7c9",2,"2015-08-07 14:48:49-04:00","Add script compilation stats  This commit adds
basic support to track the number of times scripts
are compiled and compiled scripts are evicted from
the script cache. These statistics are tracked at
the node level.  Closes #12673
",387093,4224,137883,"Jason Tedor","jason@tedor.me","Jason Tedor","jason@tedor.me"
"2041","elastic/elasticsearch","8862348e4f7c0d8d31bd4b3ec431f1f906017877",2,"2015-08-24 13:39:05+02:00","test: moved ensureStableCluster(...) to base integ
test class
",389534,4208,137832,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2042","elastic/elasticsearch","0731a98e971affd42a1a7e6bc0c6df48f14cf12b",2,"2015-08-18 13:13:42+02:00","Introducing HipChat Action  An action capable of
sending notifications to rooms and users on
hipchat. This actions support three types of
HipChat APIs:  - `v1` - The (now deprecated)
legacy API where a token can be registered at the
group level, and the `v1` version of the API can
be used. This API only supports room notification
(users cannot be notified). multi-room
notification is supported.  - `integration` - The
basic integration that one can create in HipChat
(it is using the `v2` API version), where
notifications can be sent to a single room. User
notification is unsupported by this API  - `user`
- this API uses an API token of a specific user.
An admin user can create an API token and
configure it to have access to room notification
and user private messaging. This API supports
multi-room and multi-user notifications.  The
settings for `hipchat` are very similar to the
`email` infrastructure in nature. It is possible
to configure multiple/different hipchat account,
each is associated with the api type (a.k.a
profile) - can be `v1`, `integration` or `user`,
and the respective `auth_token`. When configuring
the action in the watch, one can specify what
hipchat account they would like to use (when not
specifying an account, the `default_account` will
be used). Each account can also specify its own
unique `host`/`port` for the hipchat server - for
full flexibility.  Closes
elastic/elasticsearch#462  Original commit:
elastic/x-pack-elasticsearch@9d9ee1354231a06c312e5
0e2de7c21e345486bb9
",60856,701,8629,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2043","elastic/elasticsearch","5b363f104146f5e46ab5d39f7cb8559afbe1579a",2,"2015-08-25 14:42:19+02:00","[watcher] Rename `Template` to `TextTemplate`  We
have different types of templates in watcher -
http request template, email template, hipchat
message template, and simple text template... to
avoid confusion, and clean up the codebase, this
commit renames the `Template` class to
`TextTemplate` to better convey what this template
is about.  Original commit: elastic/x-pack-elastic
search@8e5202019c5a87740481baaaf7cadc33a4aeda0b
",60832,700,8621,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2044","elastic/elasticsearch","03ccb99cd52f09666bdccd5f5aaf9f5f1f26d40b",1,"2015-08-26 11:24:23+02:00","Expose shards data and state path via ShardStats
Since we now don't stripe shards across data paths
we need a way to access the information on which
path a shard is allocated to eventually do better
allocation decisions based on disk usage etc. This
commit exposes the shard paths as part of the
shard stats.  Relates to #13106
",389761,4211,137969,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2045","elastic/elasticsearch","5f01f793d5541293e965d0a38a1cab8b2a2db77d",1,"2015-08-27 17:53:10+02:00","Added document and field level security  This
commit adds document and field level security to
Shield.  Field level security can be enabled by
adding the `fields` option to a role in the
`role.yml` file.  For example:  ```yaml
customer_care:   indices:     '*':
privileges: read       fields:         - issue_id
- description         - customer_handle         -
customer_email         - customer_address
- customer_phone ```  The `fields` list is an
inclusive list of fields that controls what fields
should be accessible for that role. By default all
meta fields (_uid, _type, _source, _ttl etc) are
also included, otherwise ES or specific features
stop working. The `_all` field if configured,
isn't included by default, since that actually
contains data from all the other fields. If the
`_all` field is required then this needs to be
added to the `fields` list in a role. In the case
of the content of the `_source` field and
`_field_names` there is special filtering in place
so that only the content relevant for the role are
being returned.  If no `fields` is specified then
field level security is disabled for that role and
all fields in an index are accessible.  Field
level security can be setup per index group.
Field level security is implemented at the Lucene
level by wrapping a directory index reader and
hides fields away that aren't in the `field` list
defined with the role of the current user. It as
if the other fields never existed.  * Any
`realtime` read operation from the translog is
disabled. Instead this operations fall back to the
Lucene index, which makes these operations
compatible with field level security, but there
aren't realtime. *  If user with role A executes
first and the result gets cached and then a user
with role B executes the same query results from
the query executed with role A would be returned.
This is bad and therefore the query cache is
disabled. * For the same reason the request cache
is also disabled. * The update API is blocked. An
update request needs to be executed via a role
that doesn't have field level security enabled.
Document level security can be enabled by adding
the `query` option to a role in the `role.yml`
file: ```yaml customer_care:   indices:     '*':
privileges: read       query:         term:
department_id: 12 ```  Document level security is
implemented as a filter that filters out documents
there don't match with the query. This is like
index aliases, but better, because the role query
is embedded on the lowest level possible in ES
(Engine level) and on all places the acquire an
IndexSearcher the role query will always be
included. While alias filters are applied at a
higher level (after the searcher has been
acquired)  Document level security can be setup
per index group.  Right now like alias filters the
document level security isn't applied on all APIs.
Like for example the get api, term vector api,
which ignore the alias filter. These apis do
acquire an IndexSearcher, but don't use the
IndexSearcher itself and directly use the index
reader to access the inverted index and there for
bypassing the role query. If it is required to
these apis need document level security too the
the implementation for document level security
needs to change.  Closes elastic/elasticsearch#341
Original commit: elastic/x-pack-elasticsearch@fac0
85dca6c3e1957eae0cf13d86ba93d20107c1
",63285,719,9118,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2046","elastic/elasticsearch","d81f426b682c541ce5226eb2f621a99289426c0f",1,"2015-08-24 10:59:51+02:00","Make refresh a replicated action  prerequisite to
#9421 see also #12600
",392026,4216,138369,"Britta Weber","britta.weber@elasticsearch.com","Britta Weber","britta.weber@elasticsearch.com"
"2047","elastic/elasticsearch","e4ffceb9ba898d24bd849d037d8269f930451677",1,"2015-08-25 13:02:39+02:00","Introducing Slack Action  - This action enables
sending notifications to slack channels/users -
Utilizes the incoming webhook API of slack -
Similar to the `email` and `hipchat` actions,
multiple slack accounts can be configured, each
with its own URL and message defaults - Slack
actions are associated with an account, or if not,
they'll be sent via the default account. - The
message itself is very flexible and enables
defining simple messages to one or more users
and/or one or more channels. For complex message
structures, one can use `attachments` as described
by the slack API.   Closes
elastic/elasticsearch#491  Original commit:
elastic/x-pack-elasticsearch@9ecc69c17cd8a1ae6962c
86b47d7ccfbf907d546
",66217,751,9349,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2048","elastic/elasticsearch","6e00a613ee9ecb15f2a3fb4e7434b851526f0e89",2,"2015-09-02 19:53:40+02:00","Internal: simplify filtered query conversion to
lucene query  We have some optimization in
FilteredQueryParser that tries to mimic what the
rewrite method in lucene does, based on what gets
parsed we return the simplest query possible. That
might cause issues with boost values though, if
specified in both the main query and the inner
query that we shortcut to. We should rather rely
on lucene's rewrite method to simplify the lucene
representation of the query, and always build a
filtered query instead.  relates to #13272 Closes
#13312
",391791,4204,138177,"javanna","cavannaluca@gmail.com","Luca Cavanna","cavannaluca@gmail.com"
"2049","elastic/elasticsearch","e6dfa215b61038ecdb0931a7591f3fffac64f708",1,"2015-09-04 01:55:40+02:00","Introducing Watch De/activateion  Today, once you
add a watch to watcher, it's always active. Being
""active"" means that the watch is registered with
the trigger engine (scheduled) and will be
executed when its trigger is triggered.  Quite
often, ppl want to have an option to
deactivate/disable a registered watch. Such that
while the watch definition still exists in
watcher, it is ""inactive"" and is never triggered.
The only way to do this today is using a ""hack""
where you can change the watch schedule to a cron
expression targeting a really far date in the
future (say somewhere around 2050). Again.. this
is very hackish and it requires changing the
actual definition of the watch (you loose its
original trigger).   This commit introduces the
notion of an active/inactive watch.. here are the
differences between the two states:   - active:
the watch is registered with watcher and with the
trigger engine and will be executed when its
trigger is fired by the engine  - inactive: the
watch is registered with watcher, but is not
registered with the trigger engine. An inactive
watch will never be fired, regardless of its
trigger.   This commit also adds two new APIs:
- `_watcher/watch/{id}/_activate`   -
`_watcher/watch/{id}/_deactivate`   to activate
and deactivate existing watches.   In addition,
the Put Watch API now accepts an `active`
parameter that indicates the initial state of the
put watch (by default set to  `true`, i.e.
""active"").   Closes elastic/elasticsearch#90
Original commit: elastic/x-pack-elasticsearch@37b9
ab4d5469f2e5761b55ea7e2dc5955de0283b
",67677,767,9566,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2050","elastic/elasticsearch","a6ffe8f6d50e207b44c327c99cb304f20bb07027",2,"2015-09-07 09:17:44-04:00","Remove and forbid use of
com.google.common.base.Strings  This commit
removes and now forbids all uses of
com.google.common.base.Strings across the
codebase.  For uses of
com.google.common.base.Strings.isNullOrEmpty, use
org.elasticsearch.common.Strings.isNullOrEmpty.
For uses of
com.google.common.base.Strings.padStart use
org.elasticsearch.common.Strings.padStart.  For
uses of com.google.common.base.Strings.nullToEmpty
use
org.elasticsearch.common.Strings.coalesceToEmpty.
Relates #13224
",393514,4223,138516,"Jason Tedor","jason@tedor.me","Jason Tedor","jason@tedor.me"
"2051","elastic/elasticsearch","35049a05c3491acc0ea3ebfd84a5f221622b1674",2,"2014-12-06 08:25:29+01:00","Allocation: add support for filtering by transport
IP address  Allocation filtering by IP only works
today using the node host address. But in some
cases, you might want to filter using the publish
address which could be different.
",393646,4218,138496,"David Pilato","david@pilato.fr","David Pilato","david@pilato.fr"
"2052","elastic/elasticsearch","a13336da5482d5ab2ebdf7cbb8120b551848e279",1,"2015-09-10 19:03:50+02:00","Refactors MoreLikeThisQueryBuilder and Parser
Relates to #10217  This PR is against the query-
refactoring branch.  Closes #13486
",397121,4241,139531,"Alex Ksikes","alex.ksikes@gmail.com","Alex Ksikes","alex.ksikes@gmail.com"
"2053","elastic/elasticsearch","f5398a739a111a09fa33711d6892fec3ca866d77",3,"2015-09-22 16:49:10-04:00","Stop using ImmutableMap#entrySet  This is the
first in a series of changes that will support
banning Guava's ImmutableSet.  Original commit:
elastic/x-pack-elasticsearch@7f959001863a4b8d523a3
e931d8ef2a4124510f1
",70412,789,9845,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2054","elastic/elasticsearch","d62f864317670e2ea41fae8e7196b9783aa406c4",1,"2015-09-23 12:05:25+02:00","Reduced the number of ClusterStateUpdateTask
variants  In the past ClusterStateUpdateTask was
an interface and we had various derived marker
interfaces to control behavior. Since then we
moved ClusterStateUpdateTask to be an abstract
class but we kept the old hierarchy of
implementations. All of those (but the
AckedClusterStateUpdateTask) can be folded into
ClusterStateUpdateTask, adding correct default
behavior.  Closes #13735
",391775,4201,137814,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"2055","elastic/elasticsearch","dbb01f5b43704ee75c92aff30ed2ee62b791e0d8",3,"2015-09-21 20:05:19+02:00","Query Refactoring: Move MoreLikeThisQueryBuilder
validation to constructor  The current
MoreLikeThisQueryBuilder validation checks for
existence of at least one `like` text or item.
This is hard to check in setters, so this PR tries
to change the construction of the query so that we
can do these checks already at construction time.
Changing to using arrays for fieldnames,
likeTexts, likeItems, unlikeTexts and unlikeItems.
`likeTexts` and/or `likeItems` need to be
specified at construction time to validate we have
at least one item there.  Relates to #10217
",400349,4267,140012,"Christoph Büscher","christoph@elastic.co","Christoph Büscher","christoph@elastic.co"
"2056","elastic/elasticsearch","674a9851cfedd899f691d99880128f2bfc9e1570",1,"2015-10-02 15:55:31+02:00","rename fooSafe into getFoo and getFooOrNull
",400610,4260,139953,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2057","elastic/elasticsearch","13d3a3e2572fb3ea0b2c25df30b98647eff7e5ad",1,"2015-08-25 12:36:32+02:00","send response for update request when it timed out
",400911,4262,140044,"Britta Weber","britta.weber@elasticsearch.com","Britta Weber","britta.weber@elasticsearch.com"
"2058","elastic/elasticsearch","bd5ac9ce1a80cd1468ec800e5986641ed372974d",1,"2015-10-13 14:56:16+02:00","enforce DirectoryReader when globals are loaded
",402566,4262,140321,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2059","elastic/elasticsearch","ea032cd3a975365aff29484e4d948b329d9c8f98",2,"2015-10-21 17:22:54+02:00","HttpClient: Add proxy support  Allows to configure
watcher.http.proxy.host and
watcher.http.proxy.port properties to configure a
HTTP proxy as well as specify a proxy whenever a
HTTP request is executed.  Closes
elastic/elasticsearch#587  Original commit:
elastic/x-pack-elasticsearch@75ef260fef7f90769097c
7417f90b96110202ea4
",72744,808,10050,"Alexander Reelsen","alexander@reelsen.net","Alexander Reelsen","alexander@reelsen.net"
"2060","elastic/elasticsearch","4fea56ceadbbd042774a89dbdf94c16a4a33df4c",17,"2015-10-20 23:28:17+02:00","Replace IndicesLifecycle with a per-index
IndexEventListener  Today IndicesLifecycle is a
per-node class that allows to register listeners
at any time. It also requires to de-register if
listeners are not needed anymore ie. if classes
are created per-index / shard etc. They also cause
issues where listeners are registered more than
once as in #13259  This commit removes the per-
node class and replaces it with an well defined
extension point that allows listeners to be
registered at index creation time without the need
to unregister since listeners are go out of scope
if the index goes out of scope. Yet, this still
allows to share instances across indices as before
but without the risk of double registering them
etc.  All data-structures used for event
notifications are now immuatble and can only
changes on index creation time. This removes
flexibility to some degree but increases
maintainability of the interface and the code
itself dramatically especially with the step by
step removal of the index level dependency
injection.  Closes #13259
",398827,4247,139694,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2061","elastic/elasticsearch","66d5d0c4f2de78371ccb5447e503d9d30b6b51c4",3,"2015-10-21 14:02:10+02:00","Replace IndexSettings annotation with a full-
fledged class  The @IndexSettings annoationat has
been used to differentiate between node-level and
index level settings. It was also decoupled from
realtime-updates such that the settings object
that a class got injected when it was created was
static and not subject to change when an update
was applied. This change removes the annoation and
replaces it with a full-fledged class that adds
type-safety and encapsulates additional
functionality as well as checks on the settings.
",398503,4245,139630,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2062","elastic/elasticsearch","97ecd7bf5a05966d32d7ba8fca055cbe59d5d359",2,"2015-09-20 11:20:02-07:00","Expose pending cluster state queue size in node
stats  Add 3 stats about the queue: total queue
size, number of committed cluster states, and
number of pending cluster states.
",398411,4241,139428,"xuzha","xu@elastic.co","xuzha","xu@elastic.co"
"2063","elastic/elasticsearch","04a8fb32020f0bb6d889bd3c1eacec792fb74e3b",1,"2015-10-30 09:55:00+01:00","Watcher: Add chained input  ``` Chained input for
now works like this { ""chain"" : [   { ""first"" : {
""simple"" : { ""foo"" : ""bar"" } } },   { ""second"" : {
""simple"" : { ""spam"" : ""eggs"" } } } ] ```  This
allows to access the payload via
ctx.payload.first.foo for example  The array
notation is needed to guarantee order, as JSON
itself does not guarantee order of objects.
Closes elastic/elasticsearch#353  Original commit:
elastic/x-pack-elasticsearch@7ab32c43a8a37a2593adc
ce366ade8091c6a0176
",73228,813,10100,"Alexander Reelsen","alexander@reelsen.net","Alexander Reelsen","alexander@reelsen.net"
"2064","elastic/elasticsearch","e3b8dc71211cf4a52754213faf2e1f4cdbe9939c",2,"2015-10-28 10:16:54-04:00","Forbid changing thread pool types  This commit
forbids the changing of thread pool types for any
thread pool. The motivation here is that these are
expert settings with little practical advantage.
Closes #14294, relates #2509, relates #2858,
relates #5152
",398058,4222,139050,"Jason Tedor","jason@tedor.me","Jason Tedor","jason@tedor.me"
"2065","elastic/elasticsearch","10ddd691a36fa3a8199fac8da43da540af19a697",1,"2015-10-23 11:55:28+02:00","Internal: move to lucene BoostQuery  Latest
version of lucene deprecated Query#setBoost and
Query#getBoost which made queries effectively
immutable. Those methods need to be replaced with
`BoostQuery` that wraps any query that needs
boosting.  This commit replaces usages of setBoost
with BoostQuery and adds it to forbidden-apis for
prod code.  Usages of `getBoost` are only
partially removed, as some will have to stay for
backwards compatibility.  Closes #14264
",398457,4231,139101,"javanna","cavannaluca@gmail.com","Luca Cavanna","cavannaluca@gmail.com"
"2066","elastic/elasticsearch","5fb0f9a88ff40b3bc0f9fe81f181dd90ea76c6ea",1,"2015-11-03 13:43:48+00:00","Add Sequence Numbers and enforce Primary Terms
Adds a counter to each write operation on a shard.
This sequence numbers is indexed into lucene using
doc values, for now (we will probably require
indexing to support range searchers in the
future).  On top of this, primary term semantics
are enforced and shards will refuse write
operation coming from an older primary.  Other
notes: - The add SequenceServiceNumber is just a
skeleton and will be replaced with much heavier
one, once we have all the building blocks (i.e.,
checkpoints). - I completely ignored recovery -
for this we will need checkpoints as well. - A new
based class is introduced for all single doc write
operations. This is handy to unify common logic
(like toXContent). - For now, we don't use seq# as
versioning. We could in the future.  Relates to
#10708 Closes #14651
",401107,4254,139894,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"2067","elastic/elasticsearch","18c9eba40a044df0e4601e2438239f714a93a9e5",1,"2015-11-16 23:58:10+11:00","Allow CIDR notation in a query string query  Close
#14773
",400755,4253,139812,"William Bowling","will@wbowling.info","Adrien Grand","jpountz@gmail.com"
"2068","elastic/elasticsearch","fccad13029f34af9ebd9166a760a1c8d6619419a",1,"2015-11-18 14:25:47+01:00","Persist allocation ID with shard state metadata on
nodes  Closes #14831
",402081,4254,139888,"Yannick Welsch","yannick@elastic.co","Yannick Welsch","yannick@elastic.co"
"2069","elastic/elasticsearch","f0f89e708d332cd15779ae85b111b08c08694f3d",1,"2015-10-23 21:11:15+02:00","Split cluster state update tasks into roles  This
commit splits cluster state update tasks into
roles. Those roles are:  - task info  - task
configuration  - task executor  - task listener
All tasks that have the same executor will be
executed in batches. This removes the need for
local batching as was previously in
MetaDataMappingService.  Additionally, this commit
reintroduces batching on mapping update calls.
Relates #13627
",402993,4266,140269,"Boaz Leskes","b.leskes@gmail.com","Jason Tedor","jason@tedor.me"
"2070","elastic/elasticsearch","025e9818e7c3f428aa46187572c40ce7f93fd197",1,"2015-11-18 11:52:47-05:00","Refactors TransportReplicationAction to decouple
request routing and shard operation logic
",415159,4300,141830,"Areek Zillur","areek.zillur@elasticsearch.com","Areek Zillur","areek.zillur@elasticsearch.com"
"2071","elastic/elasticsearch","3106948ae1d85a1c3cb62cb9ba9dd8d42e693261",2,"2015-11-17 13:51:25+01:00","Introduce Local checkpoints  This PR introduces
the notion of a local checkpoint on the shard
level. A local check point is defined as a the
highest sequence number for which all previous
operations (i.e. with a lower seq#) have been
processed.  relates to #10708  Closes #15390
formatting
",411543,4252,140908,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"2072","elastic/elasticsearch","ac393b7a313c2b009a50f4c8e72b2a35c6b57fc3",1,"2015-12-18 18:19:48+01:00","Make mappings tests more realistic.
DocumentMapperParser has both parse and
parseCompressed methods. Except that the parse
methods are ONLY used from the unit tests. This
commit removes the parse method and moves all
tests to parseCompressed so that they test more
realistically how mappings are managed.  Then I
renamed parseCompressed to parse given that this
is the only alternative anyway.
",418654,4298,142559,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"2073","elastic/elasticsearch","9709036024321ad147b0f6bdc6a102f1644f7d77",14,"2016-01-05 19:39:25+01:00","Watcher: Adding PagerDuty Action  * This action
enables sending notifications to pager duty
services. * Utilizes pager duty's REST API *
Similar to the `email`, `hipchat` and `slack`
actions, multiple `pagerduty` accounts can be
configured, each with its own Service API key * A
`pagerduty` account is roughly mapped to a service
in your pagerduty service. * `pagerduty` actions
are associated with an account, or if not, their
events will be sent via the default account. * An
incident can be acknowledged, resolved or
triggered  Closes elastic/elasticsearch#492
Original commit: elastic/x-pack-elasticsearch@72cc
21d119373876f29bfa15bbb1320acbe20506
",81709,924,11408,"Alexander Reelsen","alexander@reelsen.net","Alexander Reelsen","alexander@reelsen.net"
"2074","elastic/elasticsearch","75ab4f94702afc01935da63c566a66678a2ff34e",7,"2016-01-07 10:40:52+01:00","Watcher: Allow for external email attachments
This feature is mainly done for the integration
with the commercial reporting, but can be used for
anything else as well.  This adds a `attachments`
to the email configuration, which can be used like
this  ``` ""attachments"" : {   ""some_id"" : {
""http"" : {       ""request"" : {         ""url"" :
""http://example.org/foo.pdf""       }     }   },
""other_id"" : {     ""data"" : {       ""format"" :
""json""     }   } } ```  The main reason to pick
this format is extensibility. If we would like to
support another attachment type, like an file
reader, we could do so easily from an API point of
view.  Closes elastic/elasticsearch#870  Original
commit: elastic/x-pack-elasticsearch@66d14be965dd0
b5cd7d483aad2e8a09c25efa44e
",83019,940,11563,"Alexander Reelsen","alexander@reelsen.net","Alexander Reelsen","alexander@reelsen.net"
"2075","elastic/elasticsearch","85797aeb503d3ed8a17fb0ac0ce3a37a512731ea",1,"2015-11-25 11:58:14-05:00","Basic reindex and update_by_query  This creates an
reindex plugin with a very basic implementation
that is very like delete-by-query. New we'll
integrate it with the task managament work but for
now this works.
",405639,4302,141452,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2076","elastic/elasticsearch","da3d7177bef236ccf7cbcd8d547ff7ac8b80fc5c",1,"2016-01-18 16:20:33-07:00","Add Shield HTTP APIs for users and roles  Relates
to elastic/elasticsearch#33  Original commit:
elastic/x-pack-elasticsearch@a0942c933421096b7fca7
b600af9811d2df4dd10
",86626,997,12175,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"2077","elastic/elasticsearch","c00c0fa020a2ab3391a38312aba898db517f9f47",2,"2016-01-26 09:59:11+01:00","Initial refactoring for phrase suggester  Adding
initial serialization methods (readFrom, writeTo)
to the PhraseSuggestionBuilder, also adding the
base test framework for serialiazation testing,
equals and hashCode. Moving SuggestionBuilder out
of the global SuggestBuilder for better
readability.
",430508,4449,146581,"Christoph Büscher","christoph@elastic.co","Christoph Büscher","christoph@elastic.co"
"2078","elastic/elasticsearch","2a137b554825a5f848cfaff6311d7c298fd76fe7",2,"2016-01-24 22:47:38+01:00","Make index uuid available in Index, ShardRouting &
ShardId  In the early days Elasticsearch used to
use the index name as the index identity. Around
1.0.0 we introduced a unique index uuid which is
stored in the index setting. Since then we used
that uuid in a few places but it is by far not the
main identifier when working with indices,
partially because it's not always readily
available in all places.  This PR start to make a
move in the direction of using uuids instead of
name by making sure that the uuid is available on
the Index class (currently just a wrapper around
the name) and as such also available via
ShardRouting and ShardId.  Note that this is by no
means an attempt to do the right thing with the
uuid in all places. In almost all places it falls
back to the name based comparison that was done
before. It is meant as a first step towards slowly
improving the situation.  Closes #16217
",429913,4443,146324,"Boaz Leskes","b.leskes@gmail.com","Boaz Leskes","b.leskes@gmail.com"
"2079","elastic/elasticsearch","a2f07679fdeb42fe7b7986ebae457ba107fcba05",2,"2016-02-01 16:53:18-05:00","Add task status  Implements a simple task status
for superclasses of ReplicationRequest to show how
you can do use the status.
",431881,4460,147051,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2080","elastic/elasticsearch","59a20015d65ed4329433521b3d8b799eb9df26e3",1,"2016-02-04 17:17:16+01:00","Make TermVectorService static
",431376,4451,146884,"Simon Willnauer","simonw@apache.org","Simon Willnauer","simonw@apache.org"
"2081","elastic/elasticsearch","73b819bf9ba13649a1ebaa6b24f4361864bea98b",1,"2016-02-09 00:25:47-05:00","Building the term suggesters from the builder
object
",433783,4468,147480,"Ali Beyad","ali@elastic.co","Ali Beyad","ali@elastic.co"
"2082","elastic/elasticsearch","18b08c82ca2f2680149d5df93e271c1d96af3731",2,"2016-02-13 03:59:57+01:00","Introducing user full name, email and metadata.  -
`full_name` and `email` are optional user fields -
`metadata` is an optional arbitrary meta data that
can be associated with the user - cleaned up the
user actions - consistent naming (e.g.
`PutUserAction` vs. `AddUserAction`) - moved
source parsing from the `PutUserRequest` to the
`PutUserRequestBuilder` -
renamed`WatcherXContentUtils` to `XContentUtils`
and moved it to sit under
`o.e.xpack.commons.xcontent`  Closes
elastic/elasticsearch#412  Original commit:
elastic/x-pack-elasticsearch@5460e3caf7b4fd5ae23a4
9757aa06391a823cfa2
",88329,998,12307,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2083","elastic/elasticsearch","2a1b3250dbca9b81a6252e3a1c502fb3fbe0094a",5,"2016-02-27 00:57:46-08:00","Cleanup Security Roles  - Renamed
`AddRoleAction/Request/Response` to
`PutRoleAction/Request/Response` - also renamed
the user/roles rest actions - Changed the returned
format for `RestGetRoleAction`. Previously this
endpoint returned an array of role descriptor. Now
it returns an object where the role names serve as
the keys for the role objects. This is aligned
with other APIs in ES (e.g. index templates). -
When `RestGetRoleAction` cannot find all the
requested roles, it'll return an empty object and
a 404 response status - Also cleaned up
`RoleDescriptor`  Original commit: elastic/x-pack-
elasticsearch@742f6e00203af27e0517bbca4ebd97b37abf
4fa0
",88415,999,12389,"uboness","uboness@gmail.com","jaymode","jay.modi@elasticsearch.com"
"2084","elastic/elasticsearch","507e9ede59b89fc60498345d47639cfcd39f91f7",1,"2016-03-01 07:37:35-05:00","Rename unit test so it looks like a unit test
Original commit: elastic/x-pack-elasticsearch@d2d3
9ad50bb1a638461f1e2aed21110b732ea5e0
",88985,1000,12429,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2085","elastic/elasticsearch","be8ed737bc3af18d2ae4c9ad332e32900911a85a",1,"2016-02-22 11:46:47-08:00","Suggest: Move name of suggestion to SuggestBuilder
Currently each suggestion keeps track of its own
name. This has the disadvantage of having to pass
down the parsed name property in the suggestions
fromXContent() and the serialization methods as an
argument, since we need it in the ctor.  This
change moves the naming of the suggestions to the
surrounding SuggestBuilder and by this eliminates
the need for passind down the names in the parsing
and serialization methods. By making `name` a
required argument in
SuggestBuilder#addSuggestion() we also make sure
it is always set and prevent using the same name
twice, which wasn't possible before.
",447565,4642,152195,"Christoph Büscher","christoph@elastic.co","Christoph Büscher","christoph@elastic.co"
"2086","elastic/elasticsearch","d8617556cf4500bef7812ace77e1b65e64671a77",2,"2016-02-26 13:33:49-05:00","shield: do not require password for user update
operations  When thinking about applications and
the need to update a user, we should not need to
update the password of the user when making
changes to things like roles, email, full name, or
metadata. This commit changes how we handle
operations where the password field is missing.
When the password field is missing, we try to
execute an update. If the user exists, all values
for the user are updated except for the password
field. If the user does not exist and the password
field is missing then a ValidationException is
returned.  When the password field is present, we
always issue an index request.  Closes
elastic/elasticsearch#1492  Original commit:
elastic/x-pack-elasticsearch@3d8a5f2db60bd84d9e8da
6507a845b8460e1f2f2
",89214,1000,12450,"jaymode","jay.modi@elasticsearch.com","jaymode","jay.modi@elasticsearch.com"
"2087","elastic/elasticsearch","2fa33d5c47d292fdcd15c7acbefe2a579c3e9a38",3,"2016-03-02 17:57:45+01:00","Added ingest statistics to node stats API  The
ingest stats include the following statistics: *
`ingest.total.count`- The total number of document
ingested during the lifetime of this node *
`ingest.total.time_in_millis` - The total time
spent on ingest preprocessing documents during the
lifetime of this node * `ingest.total.current` -
The total number of documents currently being
ingested. * `ingest.total.failed` - The total
number ingest preprocessing operations failed
during the lifetime of this node  Also these stats
are returned on a per pipeline basis.
",445535,4629,151802,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2088","elastic/elasticsearch","0d1f3da3530544f94f52c4265aa049b602c056de",1,"2016-03-24 15:16:08-04:00","security: rename ESUsersRealm to FileRealm  This
commit is the forward port of renaming the type
for esusers to file. There is no backwards
compatibility maintained here. Additionally, a few
other renames and cleanups have been made:  *
`esusers` commands is now `users` *
org.elasticsearch.shield.authc.esusers ->
org.elasticsearch.shield.authc.file *
Validation.ESUsers -> Validation.Users *
ESUsersTool -> UsersTool * ESUsersToolTests ->
UsersToolTests * ESNativeUsersStore ->
NativeUsersStore * ESNativeRolesStore ->
NativeRolesStore. *
org.elasticsearch.shield.authz.esnative collapsed
to org.elasticsearch.shield.authz.store *
ESNativeTests -> NativeRealmIntegTests  Closes
elastic/elasticsearch#1793  Original commit:
elastic/x-pack-elasticsearch@d2a0c136f3d3a742adde5
6c9514616c3047dc353
",93805,1063,13591,"jaymode","jay.modi@elasticsearch.com","jaymode","jay.modi@elasticsearch.com"
"2089","elastic/elasticsearch","80ab366de4d4a3a4ccf7750b593a50bcd5cdd08b",2,"2016-02-26 13:21:36-07:00","Add API to explain why a shard is or isn't
assigned  This adds a new
`/_cluster/allocation/explain` API that explains
why a shard can or cannot be allocated to nodes in
the cluster. Additionally, it will show where the
master *desires* to put the shard, according to
the `ShardsAllocator`.  It looks like this:  ```
GET /_cluster/allocation/explain?pretty {
""index"": ""only-foo"",   ""shard"": 0,   ""primary"":
false } ```  Though, you can optionally send an
empty body, which means ""explain the allocation
for the first unassigned shard you find"".  The
output when a shard is unassigned looks like this:
``` {   ""shard"" : {     ""index"" : ""only-foo"",
""index_uuid"" : ""KnW0-zELRs6PK84l0r38ZA"",     ""id""
: 0,     ""primary"" : false   },   ""assigned"" :
false,   ""unassigned_info"" : {     ""reason"" :
""INDEX_CREATED"",     ""at"" :
""2016-03-22T20:04:23.620Z""   },   ""nodes"" : {
""V-Spi0AyRZ6ZvKbaI3691w"" : {       ""node_name"" :
""Susan Storm"",       ""node_attributes"" : {
""bar"" : ""baz""       },       ""final_decision"" :
""NO"",       ""weight"" : 0.06666675,
""decisions"" : [ {         ""decider"" : ""filter"",
""decision"" : ""NO"",         ""explanation"" : ""node
does not match index include filters
[foo:\""bar\""]""       } ]     },
""Qc6VL8c5RWaw1qXZ0Rg57g"" : {       ""node_name"" :
""Slipstream"",       ""node_attributes"" : {
""bar"" : ""baz"",         ""foo"" : ""bar""       },
""final_decision"" : ""NO"",       ""weight"" :
-1.3833332,       ""decisions"" : [ {
""decider"" : ""same_shard"",         ""decision"" :
""NO"",         ""explanation"" : ""the shard cannot be
allocated on the same node id
[Qc6VL8c5RWaw1qXZ0Rg57g] on which it already
exists""       } ]     },
""PzdyMZGXQdGhqTJHF_hGgA"" : {       ""node_name"" :
""The Symbiote"",       ""node_attributes"" : { },
""final_decision"" : ""NO"",       ""weight"" :
2.3166666,       ""decisions"" : [ {
""decider"" : ""filter"",         ""decision"" : ""NO"",
""explanation"" : ""node does not match index include
filters [foo:\""bar\""]""       } ]     }   } } ```
And when the shard *is* assigned, the output looks
like:  ``` {   ""shard"" : {     ""index"" : ""only-
foo"",     ""index_uuid"" : ""KnW0-zELRs6PK84l0r38ZA"",
""id"" : 0,     ""primary"" : true   },   ""assigned"" :
true,   ""assigned_node_id"" :
""Qc6VL8c5RWaw1qXZ0Rg57g"",   ""nodes"" : {
""V-Spi0AyRZ6ZvKbaI3691w"" : {       ""node_name"" :
""Susan Storm"",       ""node_attributes"" : {
""bar"" : ""baz""       },       ""final_decision"" :
""NO"",       ""weight"" : 1.4499999,
""decisions"" : [ {         ""decider"" : ""filter"",
""decision"" : ""NO"",         ""explanation"" : ""node
does not match index include filters
[foo:\""bar\""]""       } ]     },
""Qc6VL8c5RWaw1qXZ0Rg57g"" : {       ""node_name"" :
""Slipstream"",       ""node_attributes"" : {
""bar"" : ""baz"",         ""foo"" : ""bar""       },
""final_decision"" : ""CURRENTLY_ASSIGNED"",
""weight"" : 0.0,       ""decisions"" : [ {
""decider"" : ""same_shard"",         ""decision"" :
""NO"",         ""explanation"" : ""the shard cannot be
allocated on the same node id
[Qc6VL8c5RWaw1qXZ0Rg57g] on which it already
exists""       } ]     },
""PzdyMZGXQdGhqTJHF_hGgA"" : {       ""node_name"" :
""The Symbiote"",       ""node_attributes"" : { },
""final_decision"" : ""NO"",       ""weight"" :
3.6999998,       ""decisions"" : [ {
""decider"" : ""filter"",         ""decision"" : ""NO"",
""explanation"" : ""node does not match index include
filters [foo:\""bar\""]""       } ]     }   } } ```
Only ""NO"" decisions are returned by default, but
all decisions can be shown by specifying the
`?include_yes_decisions=true` parameter in the
request.  Resolves #14593
",451281,4655,153165,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"2090","elastic/elasticsearch","df08854c60a2bf1402377615e9bce644e6304e0b",1,"2016-03-28 11:06:03-04:00","Remove PROTOTYPEs from suggesters  Also stops
using guice for suggesters at all and lots of
checkstyle.
",452096,4655,153205,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2091","elastic/elasticsearch","e266452cb242cf15f3da6acbd096c834b148feec",2,"2016-03-30 15:02:42-06:00","Switch request parsing in
ClusterAllocationExplainRequest to ObjectParser
Relates to #17305
",453475,4662,153456,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"2092","elastic/elasticsearch","d84c643f5880a88d2e5c38b487123161f3e01fe0",1,"2016-04-01 11:07:35+02:00","Use the new points API to index numeric fields.
#17746  This makes all numeric fields including
`date`, `ip` and `token_count` use points instead
of the inverted index as a lookup structure. This
is expected to perform worse for exact queries,
but faster for range queries. It also requires
less storage.  Notes about how the change works:
- Numeric mappers have been split into a legacy
version that is essentially    the current mapper,
and a new version that uses points, eg.
LegacyDateFieldMapper and DateFieldMapper.  -
Since new and old fields have the same names, the
decision about which one    to use is made based
on the index creation version.  - If you try to
force using a legacy field on a new index or a
field that uses    points on an old index, you
will get an exception.  - IP addresses now support
IPv6 via Lucene's InetAddressPoint and store them
in SORTED_SET doc values using the same encoding
(fixed length of 16 bytes    and sortable).  - The
internal MappedFieldType that is stored by the new
mappers does not have    any of the points-related
properties set. Instead, it keeps setting the
index    options when parsing the `index` property
of mappings and does    `if
(fieldType.indexOptions() != IndexOptions.NONE) {
// add point field }`    when parsing documents.
Known issues that won't fix:  - You can't use
numeric fields in significant terms aggregations
anymore since    this requires document
frequencies, which points do not record.  - Term
queries on numeric fields will now return constant
scores instead of    giving better scores to the
rare values.  Known issues that we could work
around (in follow-up PRs, this one is too large
already):  - Range queries on `ip` addresses only
work if both the lower and upper bounds    are
inclusive (exclusive bounds are not exposed in
Lucene). We could either    decide to implement
it, or drop range support entirely and tell users
to    query subnets using the CIDR notation
instead.  - Since IP addresses now use a different
representation for doc values,    aggregations
will fail when running a terms aggregation on an
ip field on a    list of indices that contains
both pre-5.0 and 5.0 indices.  - The ip range
aggregation does not work on the new ip field. We
need to either    implement range aggs for
SORTED_SET doc values or drop support for ip
ranges    and tell users to use filters instead.
#17700  Closes #16751 Closes #17007 Closes #11513
",457468,4623,153276,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"2093","elastic/elasticsearch","8aa48ffaff8f9d61ea9faa30cd8b6cb9b6c8f8dc",1,"2016-04-15 13:28:27+02:00","Introduced the X-Pack Info API  - Removed Shield's
Info API - Removed Watcher's Info API  Closes
elastic/elasticsearch#2014  Original commit:
elastic/x-pack-elasticsearch@6910cb1d6ea1927387f9d
fe858c935949f346a8e
",98052,1112,14213,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2094","elastic/elasticsearch","23dc2d18a285ea19b443ff1b5d1ad151243ef261",1,"2016-04-18 16:21:50-04:00","Fix javadoc for new methods
",457802,4607,153139,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2095","elastic/elasticsearch","5c9d96211ff9ae16883a05fd8171a0162b0508a9",6,"2016-04-18 12:36:07+02:00","Extended X-Pack Info API with Features Info  -
introduced the ""Feature Set"" notion - graph,
security, monitoring, watcher, these are all
feature sets - each feature set can be:  -
`available` - indicates whether this feature set
is available under the current license  -
`enabled` - indicates whether this feature set is
enabled (note that the feature set can be enabled,
yet unavailable under the current license) - while
at it, cleaned up the main modules of watcher,
security, monitoring and graph.  Original commit:
elastic/x-pack-elasticsearch@5b3e19fe8ce82d22269ec
0c270a8a955a8568f73
",98334,1115,14255,"uboness","uboness@gmail.com","uboness","uboness@gmail.com"
"2096","elastic/elasticsearch","9511c269c6e9bce8e2020cce268693a3fedd9cf8",1,"2016-04-21 11:06:19-04:00","Remove <T> from Writeable  It isn't needed any
more! Hurray!  Closes #17085
",457252,4607,153049,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2097","elastic/elasticsearch","61f0b665b89939f0dcfb053a50b9ca5e7150da79",1,"2016-04-21 15:39:19-04:00","Fix fallback setting for two get/2
",457628,4608,152745,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2098","elastic/elasticsearch","773876caee2e7e123094b9f2d0539e925cf0c13a",6,"2016-04-12 09:19:07-04:00","security: ssl by default on the transport layer
This commit adds the necessary changes to make SSL
work on the transport layer by default. A large
portion of the SSL configuration/settings was re-
worked with this change. Some notable highlights
include support for PEM cert/keys, reloadable SSL
configuration, separate HTTP ssl configuration,
and separate LDAP configuration.  The following is
a list of specific items addressed:  *
`SSLSettings` renamed to `SSLConfiguration` *
`KeyConfig` and `TrustConfig` abstractions
created. These hide the details of how
`KeyManager[]` and `TrustManager[]` are loaded.
These are also responsible for settings validation
(ie keystore password is not null) * Configuration
fallback is changed. Previously any setting would
fallback to the ""global"" value
(`xpack.security.ssl.*`). Now a keystore path, key
path, ca paths, or truststore path must be
specified otherwise the configuration for that
key/trust will fallback to the global
configuration. In other words if you want to
change part of a keystore or truststore in a
profile you need to supply all the information.
This could be considered breaking if a user relied
on the old fallback * JDK trusted certificates
(`cacerts`) are trusted by default (breaking
change). This can be disabled via a setting. * We
now monitor the SSL files for changes and enable
dynamic reloading of the configuration. This will
make it easier for users when they are getting set
up with certificates so they do not need to
restart every time. This can be disabled via a
setting * LDAP realms can now have their own SSL
configurations * HTTP can now have its own SSL
configuration * SSL is enabled by default on the
transport layer only. Hostname verification is
enabled as well. On startup if no global SSL
settings are present and SSL is configured to be
used, we auto generate one based on the default CA
that is shipped. This process includes a best
effort attempt to generate the subject alternative
names. *
`xpack.security.ssl.hostname_verification` is
deprecated in favor of
`xpack.security.ssl.hostname_verification.enabled`
* added Bouncy Castle info to NOTICE *
consolidated NOTICE and LICENSE files  Closes
elastic/elasticsearch#14 Closes
elastic/elasticsearch#34 Closes
elastic/elasticsearch#1483 Closes
elastic/elasticsearch#1933 Addresses security
portion of elastic/elasticsearch#673  Original
commit: elastic/x-pack-elasticsearch@7c359db90bbea
93110f3824ede82c09eafcd2f79
",100893,1132,14409,"jaymode","jay.modi@elasticsearch.com","jaymode","jay.modi@elasticsearch.com"
"2099","elastic/elasticsearch","5db861d14b9eb273ffcf2a3536a08284eec1c316",1,"2016-05-06 09:06:30+02:00","Remove generics from QueryBuilder.  Related to
elastic/elasticsearchelastic/elasticsearch#18133.
Original commit: elastic/x-pack-elasticsearch@bd8c
a4f061351705fb572ca6c590157d9e107f85
",101157,1137,14443,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"2100","elastic/elasticsearch","77534205403897818e09fa7f52e9ab5a81953e76",2,"2016-05-10 19:11:04+02:00","Make ShardRouting and UnassignedInfo immutable
(#17821)  This makes defensive copying of
ShardRouting objects obsolete whenever we do a
reroute and trashes less objects.
",465756,4628,154753,"Yannick Welsch","yannick@welsch.lu","Yannick Welsch","yannick@welsch.lu"
"2101","elastic/elasticsearch","864ed04059f79a91a6680ee879f38182b5228865",4,"2016-05-11 10:28:42+02:00","Lessen leniency of the query dsl. #18276  This
change does the following:  - Queries that are
currently unsupported such as prefix queries on
numeric    fields or term queries on geo fields
now throw an error rather than returning    a
query that does not match anything.  - Fuzzy
queries on numeric, date and ip fields are now
unsupported: they used    to create range queries,
we now expect users to use range queries directly.
Fuzzy, regexp and prefix queries are now only
supported on text/keyword    fields (including
`_all`).  - The `_uid` and `_id` fields do not
support prefix or range queries anymore as    it
would prevent us to store them more efficiently in
the future, eg. by    using a binary encoding.
Note that it is still possible to ignore these
errors by using the `lenient` option of the
`match` or `query_string` queries.
",466228,4680,155851,"Adrien Grand","jpountz@gmail.com","Adrien Grand","jpountz@gmail.com"
"2102","elastic/elasticsearch","fc6df23feab09c55c93b27e727ef78ba772f5586",5,"2016-05-19 09:24:45-04:00","Rename AggregatorBuilder and all of its subclasses
to AggregationBuilder, in keeping consistent with
the Java APIs.  Closes #18377 Closes #18367
",468347,4701,156474,"Ali Beyad","ali@elastic.co","Ali Beyad","ali@elastic.co"
"2103","elastic/elasticsearch","b720216395b39b350e027882efb051a22ecf5b16",4,"2016-06-02 17:01:14-04:00","Adds UUIDs to snapshots  This commit adds a UUID
for each snapshot, in addition to the already
existing repository and snapshot name. The
addition of UUIDs will enable more robust handling
of the deletion of previous snapshots and
lingering files from partially failed delete
operations, on top of being able to uniquely track
each snapshot.  Closes #18228 Relates #18156
",470578,4748,157256,"Ali Beyad","ali@elastic.co","Ali Beyad","ali@elastic.co"
"2104","elastic/elasticsearch","24a7b7224bd834eb57d1026ceb0c455b8c48a206",2,"2016-06-03 14:11:34+02:00","Fix recovery throttling to properly handle
relocating non-primary shards (#18701)  Relocation
of non-primary shards is realized by recovering
from the primary shard. Recovery throttling
wrongly equates non-primary relocation as
recovering a shard from the non-primary relocation
source, however.    Closes #18640
",470694,4749,157302,"Yannick Welsch","yannick@welsch.lu","Yannick Welsch","yannick@welsch.lu"
"2105","elastic/elasticsearch","d8056c8213ea7d2fbd26dbe15e23e96acfbd180c",1,"2016-06-06 10:45:44-04:00","Add support for waiting until a refresh occurs
This adds support for setting the refresh request
parameter to `wait_for` in the `index`, `delete`,
`update`, and `bulk` APIs. When `refresh=wait_for`
is set those APIs will not return until their
results have been made visible to search by a
refresh.  Also it adds a `forced_refresh` field to
the response of `index`, `delete`, `update`, and
to each item in a bulk response. This will be true
for requests with `?refresh` or `?refresh=true`
and will be true for some requests (see below)
with `refresh=wait_for` but ought to otherwise
always be false.  `refresh=wait_for` is
implemented as a list of `Tuple<Translog.Location,
Consumer<Boolean>>`s in the new `RefreshListeners`
class that is managed by `IndexShard`. The
dynamic, index scoped
`index.max_refresh_listeners` setting controls a
maximum number of listeners allowed in any shard.
If more than that many listeners accumulate in the
engine then a refresh will be forced, the thread
that adds the listener will be blocked until the
refresh completes, and then the listener will be
called with a `forcedRefresh` flag so it knows
that it was the ""straw that broke the camel's
back"". These listeners are only used by
`refresh=wait_for` and that flag manifests itself
as `forced_refresh` being `true` in the response.
About half of this change comes from piping async-
ness down to the appropriate layer in a way that
is compatible with the ongoing with with sequence
ids.  Closes #1063  You can look up the winding
story of all the commits here: https://github.com/
elastic/elasticsearch/pull/17986  Here are the
commit messages in case they are intersting to
you: commit
59a753b89109828d2b8f0de05cb104fc663cf95e Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Jun 6
10:18:23 2016 -0400      Replace a method
reference with implementing an interface
Saves a single allocation and forces more
commonality     between the WriteResults.  commit
31f7861a85b457fb7378a6f27fa0a0c171538f68 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Jun 6
10:07:55 2016 -0400      Revert ""Replace static
method that takes consumer with delegate class
that takes an interface""      This reverts commit
777e23a6592c75db0081a53458cc760f4db69507.  commit
777e23a6592c75db0081a53458cc760f4db69507 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Jun 6
09:29:35 2016 -0400      Replace static method
that takes consumer with delegate class that takes
an interface      Same number of allocations, much
less code duplication.  commit
9b49a480ca9587a0a16ebe941662849f38289644 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Jun 6
08:25:38 2016 -0400      Patch from boaz  commit
c2bc36524fda119fd0514415127e8901d94409c8 Author:
Nik Everett <nik9000@gmail.com> Date:   Thu Jun 2
14:46:27 2016 -0400      Fix docs      After
updating to master we are actually testing them.
commit 03975ac056e44954eb0a371149d410dcf303e212
Author: Nik Everett <nik9000@gmail.com> Date:
Thu Jun 2 14:20:11 2016 -0400      Cleanup after
merge from master  commit
9c9a1deb002c5bebb2a997c89fa12b3d7978e02e Author:
Nik Everett <nik9000@gmail.com> Date:   Thu Jun 2
14:09:14 2016 -0400      Breaking changes notes
commit 1c3e64ae06c07a85f7af80534fab88279adb30b4
Merge: 9e63ad6 f67e580 Author: Nik Everett
<nik9000@gmail.com> Date:   Thu Jun 2 14:00:05
2016 -0400      Merge branch 'master' into
block_until_refresh2  commit
9e63ad6de52d0b28f0b6d7203721baf1ebf6f56b Author:
Nik Everett <nik9000@gmail.com> Date:   Thu Jun 2
13:21:27 2016 -0400      Test for
TransportWriteAction  commit
522ecb59d39b3c9e8df0d3b8df34b9e7aeaf0ce9 Author:
Nik Everett <nik9000@gmail.com> Date:   Thu Jun 2
10:30:18 2016 -0400      Document deprecation
commit 0cd67b947f58867e704a1f0e66928a6fb5a11f11
Author: Nik Everett <nik9000@gmail.com> Date:
Thu Jun 2 10:26:23 2016 -0400      Deprecate
setRefresh(boolean)      Users should use
`setRefresh(RefreshPolicy)` instead.  commit
aeb1be3f2c501990b33fb1f8230d496035f498ef Author:
Nik Everett <nik9000@gmail.com> Date:   Thu Jun 2
10:12:27 2016 -0400      Remove checkstyle
suppression      It is fixed  commit
00d09a9caa638b6f90f4896b5502dd98d8fad56e Author:
Nik Everett <nik9000@gmail.com> Date:   Thu Jun 2
10:08:28 2016 -0400      Improve comment  commit
788164b898a6ee2878a273961230122b7386c3c9 Author:
Nik Everett <nik9000@gmail.com> Date:   Thu Jun 2
10:01:01 2016 -0400
S/ReplicatedWriteResponse/WriteResponse/      Now
it lines up with WriteRequest.  commit
b74cf3fe778352b140355afcaa08d3d4412d749d Author:
Nik Everett <nik9000@gmail.com> Date:   Wed Jun 1
18:27:52 2016 -0400      Preserve `?refresh`
behavior      `?refresh` means the same things as
`?refresh=true`.  commit
30f972bdaeaaa0de6fe67746cdb8628aa86f5a8c Author:
Nik Everett <nik9000@gmail.com> Date:   Wed Jun 1
17:39:05 2016 -0400      Handle hanging documents
If a document is added to the index during a
refresh we weren't properly     firing its refresh
listener. This happened because the way we detect
whether a refresh makes something visible or not
is imperfect. It is     ok because it always errs
on the side of thinking that something isn't
yet visible.      So when a document arrives
during a refresh the refresh listeners     won't
think it made it into a refresh when, often, it
does. The way     we work around this is by
telling Elasticsearch that it ought to     trigger
a refresh if there are any pending refresh
listeners even     if there aren't pending
documents to update. Lucene short circuits     the
refresh so it doesn't take that much effort, but
the refresh     listeners still get the signal
that a refresh has come in and they     still pick
up the change and notify the listener.      This
means that the time that a listener can wait is
actually slightly     longer than the refresh
interval.  commit
d523b5702b60c7ba309fb0dcf3cd3a4798f11960 Author:
Nik Everett <nik9000@gmail.com> Date:   Wed Jun 1
14:34:01 2016 -0400      Explain Integer.MAX_VALUE
commit 4ffb7c0e954343cc1c04b3d7be2ebad66d3a016b
Author: Nik Everett <nik9000@gmail.com> Date:
Wed Jun 1 14:27:39 2016 -0400      Fire all
refresh listeners in a single thread      Rather
than queueing a runnable each.  commit
19606ec3bbe612095df45eba734c5b7eb2709c01 Author:
Nik Everett <nik9000@gmail.com> Date:   Wed Jun 1
14:09:52 2016 -0400      Assert translog ordering
commit 6bb4e5c75e850f4a42518f06fbc955f7ec76d245
Author: Nik Everett <nik9000@gmail.com> Date:
Wed Jun 1 13:17:44 2016 -0400      Support null
RefreshListeners in InternalEngine      Just skip
using it.  commit
74be1480d6e44af2b354ff9ea47c234d4870b6c2 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
18:02:03 2016 -0400      Move funny ShardInfo hack
for bulk into bulk      This should make it easier
to understand because it is closer to where it
matters....  commit
2b771f8dabd488e056cfdc9989608d18264ddfb0 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
17:39:46 2016 -0400      Pull listener out into an
inner class with javadoc and stuff  commit
058481ad72019c0492b03a7a4ac32a48673697d3 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
17:33:42 2016 -0400      Fix javadoc links  commit
d2123b1cabf29bce8ff561d4a4c1c1d5b42bccad Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
17:28:09 2016 -0400      Make more stuff final
commit 8453fc4f7850f6a02fb5971c17a942a3e3fd9f7b
Author: Nik Everett <nik9000@gmail.com> Date:
Tue May 31 17:26:48 2016 -0400      Javadoc
commit fb16d2fc7016c1e8e1621d481e8781c7ef43326c
Author: Nik Everett <nik9000@gmail.com> Date:
Tue May 31 16:14:48 2016 -0400      Rewrite
refresh docs  commit
5797d1b1c4d233c0db918c0d08c21731ddccd05e Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
15:02:34 2016 -0400      Fix forced_refresh flag
It wasn't being set.  commit
43ce50a1de250a9e073a2ca6cbf55c1b4c74b11b Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
14:02:56 2016 -0400      Delay translog sync and
flush until after refresh      The sync might have
occurred for us during the refresh so we     have
less work to do. Maybe.  commit
bb2739202e084703baf02cfa58f09517598cf14e Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
13:08:08 2016 -0400      Remove duplication in
WritePrimaryResult and WriteReplicaResult  commit
2f579f89b4867a880396f2e7fcffc508449ff2de Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
12:19:05 2016 -0400      Clean up registration of
RefreshListeners  commit
87ab6e60ca5ba945bf0fba84784b2bbe53506abf Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 31
11:28:30 2016 -0400      Shorten lock time in
RefreshListeners      Also use null to represent
no listeners rather than an empty list.     This
saves allocating a new ArrayList every refresh
cycle on every     index.  commit
0d49d9c5720dadfb67da3fa760397bf6d874601c Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 24
10:46:18 2016 -0400      Flip relationship between
RefreshListeners and Engine      Now
RefreshListeners comes to Engine from
EngineConfig.  commit
b2704b8a39382953f8f91a9743e894ee289f7514 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 24
09:37:58 2016 -0400      Remove unused imports
Maybe I added them?  commit
04343a22647f19304d9dc716b3fac9b183227f63 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 24
09:37:52 2016 -0400      Javadoc  commit
da1e765678890a02d61d8a29aa433274beb5e00c Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 24
09:26:35 2016 -0400      Reply with non-null
Also move the fsync and flush to before the
refresh listener stuff.  commit
5d8eecd0d904b497844b4c81c46477bd6178ed3a Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 24
08:58:47 2016 -0400      Remove funky
synchronization in AsyncReplicaAction  commit
1ec71eea0f4e1228ae1497d982307be818ef4b65 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 24
08:01:14 2016 -0400
s/LinkedTransferQueue/ArrayList/  commit
7da36a4ceed2ccf7955138c3b005237fa41efcb4 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 24
07:46:38 2016 -0400      More cleanup for
RefreshListeners  commit
957e9b77007c32ee75dde152c6622bab065d5993 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 24
07:34:13 2016 -0400
/Consumer<Runnable>/Executor/  commit
4d8bf5d4a70dcc56150c8d8d14165cd23d308b3c Author:
Nik Everett <nik9000@gmail.com> Date:   Mon May 23
22:20:42 2016 -0400      explain  commit
15d948a348089bb2937eec5ac4e96f3ec67dbe32 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon May 23
22:17:59 2016 -0400      Better....  commit
dc28951d02973fc03b4d51913b5f96de14b75607 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon May 23
21:09:20 2016 -0400      Javadocs and compromises
commit 8eebaa89c0a1ee74982fbe0d56d1485ca2ae09db
Author: Nik Everett <nik9000@gmail.com> Date:
Mon May 23 20:52:49 2016 -0400      Take boaz's
changes to their logic conclusion and unbreak
important stuff like bulk  commit
7056b96ea412f275005b93e3570bcff895859ed5 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon May 23
15:49:32 2016 -0400      Patch from boaz  commit
87be7eaed09a274cc6a99d1a3da81d2d7bf9dd64 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon May 23
15:49:13 2016 -0400      Revert ""Move async parts
of replica operation outside of the lock""
This reverts commit
13807ad10b6f5ecd39f98c9f20874f9f352c5bc2.  commit
13807ad10b6f5ecd39f98c9f20874f9f352c5bc2 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri May 20
22:53:15 2016 -0400      Move async parts of
replica operation outside of the lock  commit
b8cadcef565908b276484f7f5f988fd58b38d8b6 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri May 20
16:17:20 2016 -0400      Docs  commit
91149e0580233bf79c2273b419fe9374ca746648 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri May 20
15:17:40 2016 -0400      Finally!  commit
1ff50c2faf56665d221f00a18d9ac88745904bf5 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri May 20
15:01:53 2016 -0400      Remove
Translog#lastWriteLocation      I wasn't being
careful enough with locks so it wasn't right
anyway.     Instead this builds a synthetic
Tranlog.Location when you call
getWriteLocation with much more relaxed equality
guarantees. Rather     than being equal to the
last Translog.Location returned it is     simply
guaranteed to be greater than the last translog
returned     and less than the next.  commit
55596ea68b5484490c3637fbad0d95564236478b Author:
Nik Everett <nik9000@gmail.com> Date:   Fri May 20
14:40:06 2016 -0400      Remove listener from
shardOperationOnPrimary      Create instead
asyncShardOperationOnPrimary which is called after
all of the replica operations are started to
handle any async     operations.  commit
3322e26211bf681b37132274ee158ae330afc28b Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 17
17:20:02 2016 -0400      Increase default maximum
number of listeners to 1000  commit
88171a8322a424e624d48960fb4c98dd43e4d671 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 17
16:40:57 2016 -0400      Rename test  commit
179c27c4f829f2c6ded65967652cf85adaf2ae52 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 17
16:35:27 2016 -0400      Move refresh listeners
into their own class      They still live at the
IndexShard level but they live on their     own in
RefreshListeners which interacts with IndexShard
using a     couple of callbacks and a registration
method. This lets us test     the listeners
without standing up an entire IndexShard. We still
test the listeners against an InternalEngine,
because the interplay     between InternalEngine,
Translog, and RefreshListeners is complex     and
important to get right.  commit
d8926d5fc1d24b4da8ccff7e0f0907b98c583c41 Author:
Nik Everett <nik9000@gmail.com> Date:   Tue May 17
11:02:38 2016 -0400      Move refresh listeners
into IndexShard  commit
df91cde398eb720143a85a8c6fa19bdc3a74e07d Author:
Nik Everett <nik9000@gmail.com> Date:   Mon May 16
16:01:03 2016 -0400      unused import  commit
066da45b08148b266e4173166662fc1b3f66ed53 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon May 16
15:54:11 2016 -0400      Remove RefreshListener
interface      Just pass a Translog.Location and a
Consumer<Boolean> when registering.  commit
b971d6d3301c7522b2e7eb90d5d8dd96a77fa625 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon May 16
14:41:06 2016 -0400      Docs for setForcedRefresh
commit 6c43be821eaf61141d3ec520f988aad3a96a3941
Author: Nik Everett <nik9000@gmail.com> Date:
Mon May 16 14:34:39 2016 -0400      Rename refresh
setter and getter  commit
e61b7391f91263a4c4d6107bfbc2a828bbcc805c Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
22:48:09 2016 -0400      Trigger listeners even
when there is no refresh      Each refresh gives
us an opportunity to pick up any listeners we may
have left behind.  commit
0c9b0477085c021f503db775640d25668e02f635 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
20:30:06 2016 -0400      REST  commit
8250343240de7e63118c663a230a7a314807a754 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
19:34:22 2016 -0400      Switch to estimated count
We don't need a linear time count of the number of
listeners - a volatile     variable is good enough
to guess. It probably undercounts more than it
overcounts but it isn't a huge problem.  commit
bd531167fe54f1bde6f6d4ddb0a8de5a7bcc18a2 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
18:21:02 2016 -0400      Don't try and set forced
refresh on bulk items without a response
NullPointerExceptions are bad. If the entire
request fails then the user     has worse problems
then ""did these force a refresh"".  commit
bcfded11515af5e0b3c3e36f3c2f73f5cd26512e Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
18:14:20 2016 -0400      Replace LinkedList and
synchronized with LinkedTransferQueue  commit
8a80cc70a76375a7593745884cb987535b37ca80 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
17:38:24 2016 -0400      Support for update
commit 1f36966742f851b7328015151ef6fc8f95299af2
Author: Nik Everett <nik9000@gmail.com> Date:
Mon Apr 25 15:46:06 2016 -0400      Cleanup
translog tests  commit
8d121bf35eb265b8a0aee9710afeb1b054a113d4 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
15:40:53 2016 -0400      Cleanup listener
implementation      Much more testing too!  commit
2058f4a808762c4588309f21b13b677245832f2c Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
11:45:55 2016 -0400      Pass back information
about whether we refreshed  commit
e445cb0cb91ebdbcfdbf566696edb2bf1c84a882 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
11:03:31 2016 -0400      Javadoc  commit
611cbeeaeb458f4b428bfc43a1ee6652adf4baff Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
11:01:40 2016 -0400      Move ReplicationResponse
now it is in the same package as its request
commit 9919758b644fd73895fb88cd6a4909a8387eb2e2
Author: Nik Everett <nik9000@gmail.com> Date:
Mon Apr 25 11:00:14 2016 -0400      Oh boy that
wasn't working  commit
247cb483c4459dea8e95e0e3bd2e4bf8d452c598 Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
10:29:37 2016 -0400      Basic block_until_refresh
exposed to java client      and basic ""is it
plugged in"" style tests.  commit
46c855c9971cb2b748206d2afa6a2d88724be3ba Author:
Nik Everett <nik9000@gmail.com> Date:   Mon Apr 25
10:11:10 2016 -0400      Move test to own class
commit a5ffd892d0a352ae7e9757f2640fc2a1fa656bf2
Author: Nik Everett <nik9000@gmail.com> Date:
Mon Apr 25 07:44:25 2016 -0400      WIP  commit
213bebb6ece11b85d17e44af9a54fc2e5e332d39 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
21:35:52 2016 -0400      Add refresh listeners
commit a2bc7f30e6d4857a1224ef5a89909b36c8f33731
Author: Nik Everett <nik9000@gmail.com> Date:
Fri Apr 22 21:11:55 2016 -0400      Return last
written location from refresh  commit
85033a87551da89f36a23d4dfd5016db218e08ee Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
20:28:21 2016 -0400      Never reply to replica
actions while you have the operation lock
This last thing was causing periodic test failures
because we were     replying while we had the
operation lock. Now, we probably could get
away with that in most cases but the tests don't
like it and it isn't     a good idea to do network
io while you have a lock anyway. So this
prevents it.  commit
1f25cf35e796835b3827b8a4110e09e5de61784c Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
19:56:18 2016 -0400      Cleanup  commit
52c5f7c3f04710901f503334239a611c0e21c85a Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
19:33:00 2016 -0400      Add a listener to shard
operations  commit
5b142dc331214c8eef90587144f4b3f959f9eced Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
18:03:52 2016 -0400      Cleanup  commit
3d22b2d7ceb473db339259452a7c4f117ce86069 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
17:59:55 2016 -0400      Push the listener into
shardOperationOnPrimary  commit
34b378943b8185451acf6350f661c0ad33b5836d Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
17:48:47 2016 -0400      Doc  commit
b42b8da968d42cc7414020c7b199606a5dcce50a Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
17:45:40 2016 -0400      Don't finish early if the
primary finishes early      We use a ""fake""
pending shard that we resolve when the replicas
have     all started.  commit
0fc045b56e1e02a48c30383ac50a281d5af7e0b6 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
17:30:06 2016 -0400      Make performOnPrimary
asyncS      Instead of returning Tuple<Response,
ReplicaRequest> it returns     ReplicaRequest and
takes a ActionListener<Response> as an argument.
We call the listener immediately to preserve
backwards compatibility     for now.  commit
80119b9a26ede96a865af45904c3ac69d5b19b59 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
16:51:53 2016 -0400      Factor out common code in
shardOperationOnPrimary  commit
0642083676702618f900fa842c08802a04c1a53e Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
16:32:29 2016 -0400      Factor out common code
from shardOperationOnReplica  commit
8bdc415fedaaa9f2d0c555590a13ec4699a7c3f7 Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
16:23:28 2016 -0400      Create
ReplicatedMutationRequest      Superclass for
index, delete, and bulkShard requests.  commit
0f8fa846a2822c4293df32fed18c9b99660b39ff Author:
Nik Everett <nik9000@gmail.com> Date:   Fri Apr 22
16:10:30 2016 -0400      Create
TransportReplicatedMutationAction      It is the
superclass of replication actions that mutate
data: index, delete,     and shardBulk. shardFlush
and shardRefresh are replication actions but they
do not extend TransportReplicatedMutationAction
because they don't change     the data, only
shuffle it around.
",471774,4758,157701,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2106","elastic/elasticsearch","5161afe5e333be7e4454b2c71411c53373b2fa1d",2,"2016-06-03 09:15:10-04:00","Support optional ctor args in
ConstructingObjectParser  You declare them like
``` static {
PARSER.declareInt(optionalConstructorArg(), new
ParseField(""animal"")); } ```  Other than being
optional they follow all of the rules of regular
`constructorArg()`s. Parsing an object with
optional constructor args is going to be slightly
less efficient than parsing an object with all
required args if some of the optional args aren't
specified because ConstructingObjectParser isn't
able to build the target before the end of the
json object.
",473553,4773,158399,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2107","elastic/elasticsearch","1d761775107b3b4c73d2b968c352b805225284eb",1,"2016-05-17 14:16:20+01:00","Adds aggregation profiling (not including reduce
phase)  Add Aggregation profiling initially only
be for the shard phases (i.e. the reduce phase
will not be profiled in this change)  This change
refactors the query profiling class to extract
abstract classes where it is useful for other
profiler types to share code.
",474237,4784,158616,"Colin Goodheart-Smithe","colings86@users.noreply.github.com","Colin Goodheart-Smithe","colings86@users.noreply.github.com"
"2108","elastic/elasticsearch","6ea89004cded88ca4d0ab9cd96c7c44057e47b4f",3,"2016-06-10 12:47:41+02:00","Make IndicesClusterStateService unit testable
(#17270)  Testability of ICSS is achieved by
introducing interfaces for IndicesService,
IndexService and IndexShard. These interfaces
extract all relevant methods used by ICSS (which
do not deal directly with store) and give the
possibility to easily mock all the store behavior
away in the tests (and cuts down on dependencies).
",474815,4788,158818,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2109","elastic/elasticsearch","4d78f280ed11aaa6515fca232c2b1230ae0b47dc",3,"2016-06-14 15:25:44+02:00","Remove dead code and dead parameters (#18855)
",476262,4796,159141,"Simon Willnauer","simon.willnauer@elasticsearch.com","GitHub","noreply@github.com"
"2110","elastic/elasticsearch","3f221bf7cbd9b2db7706302fe5e05562f3f1b685",2,"2016-06-16 04:39:34-04:00","Add total_indexing_buffer/_in_bytes to nodes info
API
",479577,4812,159869,"Mike McCandless","mikemccand@apache.org","Mike McCandless","mikemccand@apache.org"
"2111","elastic/elasticsearch","275ea6837d6fc1398c4bfe453650c7a4c9330a0c",1,"2016-06-22 11:05:24-04:00","Persist sequence number checkpoints  This commit
adds persistence for local and global sequence
number  checkpoints. We also recover the max
sequence number in a shard,  although there will
be loss here today from delete operations. This
will  be addressed in a follow-up.    Relates
#18949
",475048,4783,158835,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2112","elastic/elasticsearch","04da1bda0ddb42a66c6b8481a544f24647bd0ce4",1,"2016-06-07 17:45:05+02:00","Move templates out of the Search API, into lang-
mustache module  This commit moves template
support out of the Search API to its own dedicated
Search Template API in the lang-mustache module.
It provides a new SearchTemplateAction that can be
used to render templates before it gets delegated
to the usual Search API. The current REST endpoint
are identical, but the Render Search Template
endpoint now uses the same Search Template API
with a new ""simulate"" option. When this option is
enabled, the Search Template API only renders
template and returns immediatly, without executing
the search.  Closes #17906
",484700,4860,161297,"Tanguy Leroux","tlrx.dev@gmail.com","Tanguy Leroux","tlrx.dev@gmail.com"
"2113","elastic/elasticsearch","32c9f8612433ca6c661ea5c5847fd6e913b1f687",1,"2016-06-27 10:45:10+02:00","Watcher: Support for inline attachments
(elastic/elasticsearch#2601)  If an attachment is
configured of disposition type INLINE, and is
referred to  in HTML body parts, then some email
clients can display images inside of an HTML
email and refer to those attachments.    Watcher
already had support for inlined attachments,
however this could not be configured  from a
watch, but just via the Java API. Also it was not
tested.    This commit changes the attachment to
decide on creation if it should be inline or a
regular  attachment and adds a test.    Relates
elastic/elasticsearch#2381  Relates
elastic/elasticsearch#2464  Closes
elastic/elasticsearch#2557  Original commit:
elastic/x-pack-elasticsearch@84935ffb1884048a9b936
eda718fe49cba6ca1cc
",102321,1155,14632,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2114","elastic/elasticsearch","cb0824e957dcb7a20e8450f97283874eb61b9abe",1,"2016-06-27 15:05:06+02:00","Make shard store fetch less dependent on the
current cluster state, both on master and non data
nodes (#19044)  #18938 has changed the timing in
which we send out to nodes to fetch their shard
stores. Instead of doing this after the cluster
state resulting of the node's join was published,
#18938 made it be sent concurrently to the
publishing processes. This revealed a couple of
points where the shard store fetching is dependent
of the current state of affairs of the cluster
state, both on the master and the data nodes. The
problem discovered were already present without
#18938 but required a failure/extreme situations
to make them happen.This PR tries to remove as
much as possible of these dependencies making
shard store fetching simpler and make the way to
re-introduce #18938 which was reverted.    These
are the notable changes:  1) Allow
TransportNodesAction (of which shard store
fetching is derived) callers to supply concrete
disco nodes, so it won't need the cluster state to
resolve them. This was a problem because the
cluster state containing the needed nodes was not
yet made available through ClusterService. Note
that long term we can expect the rest layer to
resolve node ids to concrete nodes, making this
mode the only one needed.  2) The data node relied
on the cluster state to have the relevant index
meta data so it can find data when custom paths
are used. We now fall back to read the meta data
from disk if needed.  3) The data node was relying
on it's own IndexService state to indicate whether
the data it has corresponds to an existing
allocation. This is of course something it can not
know until it got (and processed) the new cluster
state from the master. This flag in the response
is now removed. This is not a problem because we
used that flag to protect against double assigning
of a shard to the same node, but we are already
protected from it by the allocation deciders.  4)
I removed the redundant filterNodeIds method in
TransportNodesAction - if people want to filter
they can override resolveRequest.
",485935,4869,161510,"Boaz Leskes","b.leskes@gmail.com","GitHub","noreply@github.com"
"2115","elastic/elasticsearch","3343ceeae44f3d28e3c1ba7861886848df74e390",14,"2016-07-04 08:41:06-04:00","Do not catch throwable  Today throughout the
codebase, catch throwable is used with reckless
abandon. This is dangerous because the throwable
could be a fatal  virtual machine error resulting
from an internal error in the JVM, or an  out of
memory error or a stack overflow error that leaves
the virtual  machine in an unstable and
unpredictable state. This commit removes  catch
throwable from the codebase and removes the
temptation to use it  by modifying listener APIs
to receive instances of Exception instead of  the
top-level Throwable.    Relates #19231
",487743,4879,161754,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2116","elastic/elasticsearch","e8c1e7f9d8e2d08e2b706a567d565667cfaa1d3d",5,"2016-07-05 09:33:44+02:00","Watcher: Dont hide exceptions during watch
execution  When a painless exception is raised in
the script condition, it was not bubbled up due to
catching exceptions on during execution. This
removes the different catching of exceptions and
allows the watch record construct to contain an
exception that is also serialized correctly so
that it can be stored in the watch history but
also returned in the execute watch API.  This also
updates the watch history template, so that
exceptions are not indexed, but logged.  Relates
elastic/elasticsearch#2587  Original commit:
elastic/x-pack-elasticsearch@4dffb672bf6b8bcf00125
59d8fa1bdd6d621b115
",102878,1159,14654,"Alexander Reelsen","alexander@reelsen.net","Alexander Reelsen","alexander@reelsen.net"
"2117","elastic/elasticsearch","b3c015e2bb6324e48d02dd3770f371eb98a3a756",11,"2016-05-19 12:40:22-04:00","Reindex from remote  This adds a remote option to
reindex that looks like  ``` curl -POST
'localhost:9200/_reindex?pretty' -d'{   ""source"":
{     ""remote"": {       ""host"":
""http://otherhost:9200""     },     ""index"":
""target"",     ""query"": {       ""match"": {
""foo"": ""bar""       }     }   },   ""dest"": {
""index"": ""target""   } }' ```  This reindex has all
of the features of local reindex: * Using queries
to filter what is copied * Retry on rejection *
Throttle/rethottle The big advantage of this
version is that it goes over the HTTP API which
can be made backwards compatible.  Some things are
different:  The query field is sent directly to
the other node rather than parsed on the
coordinating node. This should allow it to support
constructs that are invalid on the coordinating
node but are valid on the target node. Mostly,
that means old syntax.
",489385,4894,162279,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2118","elastic/elasticsearch","6bcf79dd6cfed6ba66a00f0a75f460437370ea9c",1,"2016-07-11 00:04:14-07:00","Internal: Remove SecretService  The SecretService
implements a subset of the api provided by the
CryptoService. Currently the CryptoService is
simply bound to null when in the transport client
or when security is disabled. This change converts
all users of the SecretService to the
CryptoService, and any tests using
SecretService.Insecure to simply using null.
Original commit: elastic/x-pack-elasticsearch@8251
c65ffe4cf73d12048634f5c79c78fedd4ce2
",102845,1154,14621,"Ryan Ernst","ryan@iernst.net","Ryan Ernst","ryan@iernst.net"
"2119","elastic/elasticsearch","0faf6387103a62b769dfd184c069ec991697734c",7,"2016-06-15 00:46:45-04:00","Blocked allocations on primary causes RED health
If the allocation decision for a primary shard was
NO, this should cause the cluster health for the
shard to go RED, even if the shard belongs to a
newly created index or is part of cluster
recovery.  Relates #9126
",490988,4894,162222,"Ali Beyad","ali@elastic.co","Ali Beyad","ali@elastic.co"
"2120","elastic/elasticsearch","58db63b610a4417e43a2909e228a05e6cf4315cf",1,"2016-06-23 15:05:39-06:00","Expose the ClusterInfo object in the allocation
explain output  This adds an optional parameter to
the cluster allocation explain API that will
return the cluster info object,
`include_disk_info`, the output looks like:  GET
/_cluster/allocation/explain?include_disk_info -d'
{""index"": ""i"", ""shard"": 0, ""primary"": false}'  {
... other info ...    ""cluster_info"" : {
""nodes"" : {       ""7Uws-vL7R6WVm3ZwQA1n5A"" : {
""node_name"" : ""Kraven the Hunter"",
""least_available"" : {           ""path"" :
""/path/to/data1"",           ""total_bytes"" :
165999570944,           ""used_bytes"" :
118180614144,           ""free_bytes"" :
47818956800,           ""free_disk_percent"" :
28.80667493781158,           ""used_disk_percent"" :
71.19332506218842         },
""most_available"" : {           ""path"" :
""/path/to/data2"",           ""total_bytes"" :
165999570944,           ""used_bytes"" :
118180614144,           ""free_bytes"" :
47818956800,           ""free_disk_percent"" :
28.80667493781158,           ""used_disk_percent"" :
71.19332506218842         }       }     },
""shard_sizes"" : {       ""[i][2][p]_bytes"" : 0,
""[i][4][p]_bytes"" : 130,       ""[i][1][p]_bytes"" :
0,       ""[i][3][p]_bytes"" : 0,
""[i][0][p]_bytes"" : 130     },     ""shard_paths"" :
{       ""[i][3], node[7Uws-vL7R6WVm3ZwQA1n5A],
[P], s[STARTED], a[id=LegZLDniTVaw0Y1urv7s3g]"" :
""/path/to/data1/nodes/0"",       ""[i][1],
node[7Uws-vL7R6WVm3ZwQA1n5A], [P], s[STARTED],
a[id=lAU_4vf_SKmoRdtg0ACnjQ]"" :
""/path/to/data1/nodes/0"",       ""[i][2],
node[7Uws-vL7R6WVm3ZwQA1n5A], [P], s[STARTED],
a[id=Aurpeuj7SeGeyPDDpCtRgg]"" :
""/path/to/data1/nodes/0"",       ""[i][0],
node[7Uws-vL7R6WVm3ZwQA1n5A], [P], s[STARTED],
a[id=Vgg8GlQTQ82C2j6HYBq8DQ]"" :
""/path/to/data1/nodes/0"",       ""[i][4],
node[7Uws-vL7R6WVm3ZwQA1n5A], [P], s[STARTED],
a[id=t8hQlVSxQe-58fSeaXcAqg]"" :
""/path/to/data1/nodes/0""     }   } }  Resolves
#14405
",486314,4871,161510,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"2121","elastic/elasticsearch","5be383288949c8259341d244f79db74afc29ca77",4,"2016-06-01 09:53:35-04:00","security: add metadata to roles  This commit adds
the ability to define metadata for roles. This
metadata is currently only used for the API and to
indicate that a role is reserved. We can continue
passing on the metadata as needed, when necessary.
Closes elastic/elasticsearch#2036  Original
commit: elastic/x-pack-elasticsearch@8b5f606138214
2eef5fcbc403ed30eba4e04f9ca
",103652,1153,14659,"jaymode","jay.modi@elasticsearch.com","jaymode","jay.modi@elasticsearch.com"
"2122","elastic/elasticsearch","a2a7ea1f179320df015e662f403de774b00d77b4",9,"2016-07-18 20:25:12-04:00","Make ExtendedBounds immutable  We used to mutate
it as part of building the aggregation. That
caused assertVersionSerializable to fail because
it assumes that requests aren't mutated after they
are sent.  Closes #19481
",491895,4909,162861,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2123","elastic/elasticsearch","94b9b332d482f846f1a0a36b93b229ace6526f72",1,"2016-07-19 14:38:51-07:00","Internal: Remove interfaces for auth services
Both AuthenticationService and
AuthorizationService are currently interfaces with
single implementations. This is unnecessary, and
makes it harder to deguice. This change removes
the abstractions and leaves just
AuthenticationService and AuthorizationService.
Original commit: elastic/x-pack-elasticsearch@d04c
897ae4240699875a5dd72d63414b54f0a6ec
",103584,1149,14642,"Ryan Ernst","ryan@iernst.net","Ryan Ernst","ryan@iernst.net"
"2124","elastic/elasticsearch","0ae6e531735042d0e26e3307bfd6f0a8e4d6922a",1,"2016-07-23 16:55:04-07:00","Internal: Collapse Licensee per feature into
single XPackLicenseState  The license code
currently has a Licensee implementation per
feature, which is updated by the license service.
This meant maintaining a listener type feature for
the license service, and having an abstract
listener and such. The licensee class also mixed
in stuff only needed by the license service
(acknowledgement messages).  This change collapses
all the methods from licensees into
XPackLicenseState. The naming was inconsistent
across licensee implementations, so here it is
standardized on `is*Allowed()`. There are also a
number of tests which should be consolidated for
testing the license service but that is left for a
future change. I also removed collector tests that
were testing license: that is better left for the
direct tests of the license state in
XPackLicenseStateTests.  Original commit:
elastic/x-pack-elasticsearch@734871e870a4abdda876a
6829e2c46c9409118e2
",102155,1128,14273,"Ryan Ernst","ryan@iernst.net","Ryan Ernst","ryan@iernst.net"
"2125","elastic/elasticsearch","a95d4f4ee7e7ada4b1ddec96b8deef140f96c1a7",1,"2016-07-19 18:31:19-04:00","Add Location header and improve REST testing  This
adds a header that looks like `Location:
/test/test/1` to the response for the
index/create/update API. The requirement for the
header comes from https://www.w3.org/Protocols/rfc
2616/rfc2616-sec10.html
https://tools.ietf.org/html/rfc7231#section-7.1.2
claims that relative URIs are OK. So we use an
absolute path which should resolve to the
appropriate location.  Closes #19079  This makes
large changes to our rest test infrastructure,
allowing us to write junit tests that test a
running cluster via the rest client. It does this
by splitting ESRestTestCase into two classes: *
ESRestTestCase is the superclass of all tests that
use the rest client to interact with a running
cluster. * ESClientYamlSuiteTestCase is the
superclass of all tests that use the rest client
to run the yaml tests. These tests are shared
across all official clients, thus the
`ClientYamlSuite` part of the name.
",497213,4956,164328,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2126","elastic/elasticsearch","fb45f6a8a864597f05e7ecb65d0c99e560b99968",1,"2016-07-06 15:47:45-04:00","Add authentication to reindex-from-remote  The
tests for authentication extend ESIntegTestCase
and use a mock authentication plugin. This way the
clients don't have to worry about running it.
Sadly, that means we don't really have good
coverage on the REST portion of the
authentication.  This also adds
ElasticsearchStatusException, and exception on
which you can set an explicit status. The nice
thing about it is that you can set the RestStatus
that it returns to whatever arbitrary status you
like based on the status that comes back from the
remote system. reindex-from-remote then uses it to
wrap all remote failures, preserving the status
from the remote Elasticsearch or whatever proxy is
between us and the remove Elasticsearch.
",498662,4978,164845,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2127","elastic/elasticsearch","ede78ad231240f8200ccac60a32ecec07045b963",4,"2016-08-04 12:00:37+02:00","Use primary terms as authority to fail shards
(#19715)  A primary shard currently instructs the
master to fail a replica shard that it fails to
replicate writes to before acknowledging the
writes to the client. To ensure that the primary
instructing the master to fail the replica is
still the current primary in the cluster state on
the master, it submits not only the identity of
the replica shard to fail to the master but also
its own shard identity. This can be problematic
however when the primary is relocating. After
primary relocation handoff but before the primary
relocation target is activated, the primary
relocation target is replicating writes through
the authority of the primary relocation source.
This means that the primary relocation target
should probably send the identity of the primary
relocation source as authority. However, this is
not good enough either, as primary shard
activation and shard failure instructions can
arrive out-of-order. This means that the
relocation target would have to send both
relocation source and target identity as
authority. Fortunately, there is another concept
in the cluster state that represents this joint
authority, namely primary terms. The primary term
is only increased on initial assignment or when a
replica is promoted. It stays the same however
when a primary relocates.    This commit changes
ShardStateAction to rely on primary terms for
shard authority. It also changes the wire format
to only transmit ShardId and allocation id of the
shard to fail (instead of the full ShardRouting),
so that the same action can be used in a
subsequent PR to remove allocation ids from the
active allocation set for which there exist no
ShardRouting in the cluster anymore. Last but not
least, this commit also makes AllocationService
less lenient, requiring ShardRouting instances
that are passed to its applyStartedShards and
applyFailedShards methods to exist in the routing
table. ShardStateAction, which is calling these
methods, now has the responsibility to resolve the
ShardRouting objects that are to be started /
failed, and remove duplicates.
",501390,5022,166295,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2128","elastic/elasticsearch","609a199bd49efb6542fd167f0591c9d6a2847727",1,"2016-08-05 08:58:03+02:00","Upon being elected as master, prefer joins' node
info to existing cluster state (#19743)  When we
introduces [persistent node ids](https://github.co
m/elastic/elasticsearch/pull/19140) we were
concerned that people may copy data folders from
one to another resulting in two nodes competing
for the same id in the cluster. To solve this we
elected to not allow an incoming join if a
different with same id already exists in the
cluster, or if some other node already has the
same transport address as the incoming join. The
rationeel there was that it is better to prefer
existing nodes and that we can rely on node fault
detection to remove any node from the cluster that
isn't correct any more, making room for the node
that wants to join (and will keep trying).
Sadly there were two problems with this:  1) One
minor and easy to fix - we didn't allow for the
case where the existing node can have the same
network address as the incoming one, but have a
different ephemeral id (after node restart). This
confused the logic in `AllocationService`, in this
rare cases. The cluster is good enough to detect
this and recover later on, but it's not clean.  2)
The assumption that Node Fault Detection will
clean up is *wrong* when the node just won an
election (it wasn't master before) and needs to
process the incoming joins in order to commit the
cluster state and assume it's mastership. In those
cases, the Node Fault Detection isn't active.
This PR fixes these two and prefers incoming nodes
to existing node when finishing an election.   On
top of the, on request by @ywelsch ,
`AllocationService` synchronization between the
nodes of the cluster and it's routing table is now
explicit rather than something we do all the time.
The same goes for promotion of replicas to
primaries.
",501706,5023,166411,"Boaz Leskes","b.leskes@gmail.com","GitHub","noreply@github.com"
"2129","elastic/elasticsearch","af44ea04408696c526c1781540a122db6eacef7f",5,"2016-08-04 14:56:07-04:00","security: move to a single SSLService  This change
refactors the ssl services into a single class and
reduces the number of public methods that are
exposed by the class. As part of this change, ssl
configurations must be loaded during construction
of the service otherwise an exception will be
thrown when trying to retrieve the configuration.
Additionally, the reloading of key material and
trust material is now handled by the SSLService
instead of the SSLConfiguration. The
SSLConfiguration class has been made package
private as its usage has been contained to the ssl
package entirely.  See elastic/elasticsearch#2971
Original commit: elastic/x-pack-elasticsearch@46e4
535bb10a1c423cad2bcc022586fce574ef6a
",102104,1118,14371,"jaymode","jay.modi@elasticsearch.com","jaymode","jay.modi@elasticsearch.com"
"2130","elastic/elasticsearch","10a766704ef5aed4b09e94e3b4e8c6d95433a849",2,"2016-08-12 16:46:02-04:00","Rename Task Persistence into Storing Task Results
The term persisted task was used to indicate that
a task should store its results upon its
completion. We would like to use this term to
indicate that a task can survive restart of nodes
instead. This commit removes usages of the term
""persist"" when it means store results.
",502197,5023,166609,"Igor Motov","igor@motovs.org","Igor Motov","igor@motovs.org"
"2131","elastic/elasticsearch","88aff40eef94f97830c8884171bed2f8dcedae92",3,"2016-08-16 11:25:45-04:00","Primary shard allocator observes limits in forcing
allocation (#19811)  Primary shard allocation
observes limits in forcing allocation
Previously, during primary shards allocation of
shards  with prior allocation IDs, if all nodes
returned a  NO decision for allocation (e.g. the
settings blocked  allocation on that node), we
would chose one of those  nodes and force the
primary shard to be allocated to it.    However,
this meant that primary shard allocation  would
not adhere to the decision of the
MaxRetryAllocationDecider,  which would lead to
attempting to allocate a shard  which has failed N
number of times already (presumably  due to some
configuration issue).    This commit solves this
issue by introducing the  notion of force
allocating a primary shard to a node  and each
decider implementation must implement whether
this is allowed or not. In the case of
MaxRetryAllocationDecider,  it just forwards the
request to canAllocate.    Closes #19446
",502764,5033,166957,"Ali Beyad","ali@elastic.co","GitHub","noreply@github.com"
"2132","elastic/elasticsearch","f291f292bf7177edc5b718bba57cad6f704560bd",2,"2016-08-16 20:26:28+02:00","watcher: Watcher search templates shouldn't
serialize SearchSourceBuilder to a string,
template that and turn it back into a
SearchSourceBuilder   Instead watcher search
template should be agnostic of SearchSourceBuilder
and just work with BytesReference, so that
serializing to a string before templating isn't
needed.  Original commit: elastic/x-pack-elasticse
arch@36d21ec819e63cee326321494fd9212ab70fd842
",102478,1119,14468,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2133","elastic/elasticsearch","27a760f9c19fff61f7dfaf1a7d0beaae7ff326d8",2,"2016-08-17 10:46:59+02:00","Add routing changes API to RoutingAllocation
(#19992)  Adds a class that records changes made
to RoutingAllocation, so that at the end of the
allocation round other values can be more easily
derived based on these changes. Most notably, it:
- replaces the explicit boolean flag that is
passed around everywhere to denote changes to the
routing table. The boolean flag is automatically
updated now when changes actually occur,
preventing issues where it got out of sync with
actual changes to the routing table.  - records
actual changes made to RoutingNodes so that
primary term and in-sync allocation ids, which are
part of index metadata, can be efficiently updated
just by looking at the shards that were actually
changed.
",503152,5039,167167,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2134","elastic/elasticsearch","53d022a20aec46e1eb9672c67a2140687089cd63",2,"2016-08-12 17:07:10-04:00","[Watcher] Add Condition to Action  This adds a
""condition"" to every action (via the
ActionWrapper) that prevents execution of the
action if the condition fails. An action-level
condition is only useful when there is more than
one action, but nothing checks to ensure that it's
only used in that scenario.  Original commit:
elastic/x-pack-elasticsearch@704cfb1a86deda75c1c2b
3263a9e3bf828a54027
",102810,1120,14549,"Chris Earle","chris.earle@elastic.co","Chris Earle","chris.earle@elastic.co"
"2135","elastic/elasticsearch","f10fbeeb70076ec881e9a184a39d0aad110145da",1,"2016-08-17 16:31:01+02:00","watcher: remove WatchScript class  Original
commit: elastic/x-pack-elasticsearch@fb2f9a28f1a3d
f3bd1ccd4d597140f829e1348af
",102796,1117,14509,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2136","elastic/elasticsearch","22242ec881003c21534fc9442e3385bda3b698ee",1,"2016-08-19 23:24:17+08:00","Fix request cache key for search  * Make sure
indexBoost is serialized in a consistent order *
remove hasIndexBoost by using indexBoost size *
Make sure phrase suggester's collateParams is
serialized in consistent order * Make StreamOutput
writer to serialize maps in consistent order
",504473,5058,167941,"Xiang Chen","chengpohi@gmail.com","Nik Everett","nik9000@gmail.com"
"2137","elastic/elasticsearch","1b75cb63a25ce950c23ed13b568e75e468680380",8,"2016-08-27 16:11:10+02:00","Add recovery source to ShardRouting (#19516)  Adds
an explicit recoverySource field to ShardRouting
that characterizes the type of recovery to
perform:    - fresh empty shard copy  - existing
local shard copy  - recover from peer (primary)  -
recover from snapshot  - recover from other local
shards on same node (shrink index action)
",504717,5060,168020,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2138","elastic/elasticsearch","df73292256850c1391f1ee7f0ea45f03c19d63d4",3,"2016-08-18 16:51:37-04:00","Add an alias action to delete an index  While
removing an index isn't actually an alias action,
if we add an alias action that deletes an index
then we can delete and index and add an alias with
the same name as the index atomically, in the same
cluster state update.  Closes #20064
",506423,5065,168254,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2139","elastic/elasticsearch","702d55f0be066bd0cbf86e76e167ebde28ce15be",1,"2016-08-15 07:58:18-04:00","Introduce Log4j 2  This commit introduces Log4j 2
to the stack.  Original commit: elastic/x-pack-ela
sticsearch@02b2bb1c89e584cc438ffa3868c3d755490bb31
0
",104539,1121,14560,"Jason Tedor","jason@tedor.me","Jason Tedor","jason@tedor.me"
"2140","elastic/elasticsearch","7da0cdec420d05f95d470a90113061299b13124f",4,"2016-08-09 13:34:23-04:00","Introduce Log4j 2  This commit introduces Log4j 2
to the stack.
",506622,5062,168022,"Jason Tedor","jason@tedor.me","Jason Tedor","jason@tedor.me"
"2141","elastic/elasticsearch","ad9a7c9b9641683ddaf2030a609947d5cd9f9e1a",10,"2016-09-01 10:51:41-04:00","Migrate xpack to use the common ssl configuration
This change migrates xpack (security, watcher, and
monitoring) to use the common ssl configuration
for the elastic stack. As part of this work,
several aspects of how we deal with SSL has been
modified.  From a functionality perspective, an
xpack wide configuration for SSL was added and all
of the code that needs SSL uses the SSLService
now. The following is a list of all of the aspects
of xpack that can have their own SSL
configuration, which are separate from the xpack
wide configuration:  * Transport * Transport
profiles * HTTP Transport * Realms * Monitoring
Exporters * HTTP Client  In terms of the code,
some cleanups were made with these changes.
SSLConfiguration is now a concrete class and
SSLConfiguration.Custom and
SSLConfiguration.Global have been removed. The
validate method on key and trust configurations
has been removed and these classes will now throw
exceptions when they are constructed with bad
values. The OptionalSettings helper class has been
removed as it was just a file with one line
functions that made the code harder to understand.
The SSL configuration and service classes have
been moved from the security source directories to
the main xpack source set. The SSLService now
handles more of the configuration of the SSLEngine
it returns to prevent callers from having to
handle those aspects. The settings that get
registered for SSL have been moved to
XPackSettings.  Also included in this PR is a
update to the docs around SSL. This includes a
large simplification to the documentation in that
the certificate authority configuration section
has been removed and the process that is
documented for generating certificates only
includes the CLI tool that we bundle.  Closes
elastic/elasticsearch#3104 Closes
elastic/elasticsearch#2971 Closes
elastic/elasticsearch#3164  Original commit:
elastic/x-pack-elasticsearch@5bd9e5ef38b423dd1e1d9
ea6d4d4179637b2df8b
",104484,1124,14799,"jaymode","jay.modi@elasticsearch.com","jaymode","jay.modi@elasticsearch.com"
"2142","elastic/elasticsearch","b60e8aebd24da93a304f86e9116d53d0bb544a4d",1,"2016-08-31 15:36:08-04:00","[Monitoring] Publish X-Pack Usage with Cluster
Info  This publishes X-Pack usage data to the
cluster info from the elected master node. This
allows phone home to retrieve this data from the
index, rather than fetching it live from the
connected cluster (thereby not getting it from any
n - 1 clusers that are not connceted).  Original
commit: elastic/x-pack-elasticsearch@79bfaaaf0b685
0d7d2d36403134ef3fa48664b6e
",104567,1126,14829,"Chris Earle","chris.earle@elastic.co","Chris Earle","chris.earle@elastic.co"
"2143","elastic/elasticsearch","203faaf4f413abba4893622569b637312db54f98",1,"2016-08-31 10:19:07-04:00","2.x backwards compatibility support for watcher
Basic backwards compatibility support for watcher.
Closes elastic/elasticsearch#3230  Relates to
elastic/elasticsearch#3231 - this actually should
fix all the failures caused by fractional time
values but it does so by being able to parse them.
Being able to parse them is important for 2.x
compatibility but 5.0 watches shouldn't produce
fractional time values. This fixes the particular
way of making fractional time values mentioned in
elastic/elasticsearch#3231 but I expect there are
a half dozen more places to fix. The actual
watcher tests are fairly basic.  Original commit:
elastic/x-pack-elasticsearch@328717455cc40b401e477
b014c377e57a3abfd76
",104798,1128,14871,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2144","elastic/elasticsearch","565f50dbe5d52f44a3031e830a7dfa9bda530988",2,"2016-08-30 15:36:04+02:00","Remove custom parsing and toXContent logic from
TextTemplate and delegate to the Script as much as
possible  Original commit: elastic/x-pack-elastics
earch@6d23549dc1d9e31c1895d74c9064f9ee9843b8c0
",104580,1128,14811,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2145","elastic/elasticsearch","5d5a9afb571e0a14e092cc19075385e3dee9e533",26,"2016-08-22 20:29:31-04:00","[Monitoring] Use Low Level REST Client for HTTP
Exporter  This rewrites the HTTP Exporter to use
the REST client underneath. Functionality is
improved in resource blocking (templates and
pipelines existing) and the majority of the code
fundamentall simplified by removing direct HTTP
calls.  This is blocked by the SSLService pull
request. After that is merged, the I will update
this PR to reflect those changes and it could
possibly allow us to remove the security
privileges required for monitoring.  Original
commit: elastic/x-pack-elasticsearch@1ad25f17f8280
89b898b285fde5f7c5c16433036
",105981,1152,15952,"Chris Earle","chris.earle@elastic.co","Chris Earle","chris.earle@elastic.co"
"2146","elastic/elasticsearch","1e6a924e7412c1a54119359ddec60336c5c3d5a7",1,"2016-08-23 06:41:15-04:00","security: add support for disabling users  This
change adds support for disabling users. Users can
be disabled by setting the enabled property to
false and the AuthenticationService will check to
make sure that the user is enabled. If the user is
not enabled, this will be audited as an
authentication failure.  Also as part of this
work, the AnonymousUser was cleaned up to remove
having a static instance that caused issues with
tests.  Finally, the poller of users was removed
to simplify the code in the NativeUsersStore. In
our other realms we rely on the clear cache APIs
and the timeout of the user cache. We should have
the same semantics for the native realm.  Closes
elastic/elasticsearch#2172  Original commit:
elastic/x-pack-elasticsearch@0820e401832ca2ee9de43
6446d825e08967b6e1e
",106396,1159,16059,"jaymode","jay.modi@elasticsearch.com","jaymode","jay.modi@elasticsearch.com"
"2147","elastic/elasticsearch","6a7309c09aee155bfb78f921714ae2111c601031",6,"2016-09-06 11:32:43-04:00","Add ""version"" field to Pipelines  This adds a
version field to Pipelines, which is itself is
unused by Elasticsearch, but exists for users to
better manage their own pipelines.
",508861,5072,168639,"Chris Earle","chris.earle@elastic.co","Chris Earle","chris.earle@elastic.co"
"2148","elastic/elasticsearch","1764ec56b38ce87f516efdf93bb4ab56e9dd829b",8,"2016-09-13 20:54:41+02:00","Fixed naming inconsistency for
fields/stored_fields in the APIs (#20166)  This
change replaces the fields parameter with
stored_fields when it makes sense.  This is
dictated by the renaming we made in #18943 for the
search API.    The following list of endpoint has
been changed to use `stored_fields` instead of
`fields`:  * get  * mget  * explain    The
documentation and the rest API spec has been
updated to cope with the changes for the following
APIs:  * delete_by_query  * get  * mget  * explain
The `fields` parameter has been deprecated for the
following APIs (it is replaced by _source
filtering):  * update: the fields are extracted
from the _source directly.  * bulk: the fields
parameter is used but fields are extracted from
the source directly so it is allowed to have non-
stored fields.    Some APIs still have the
`fields` parameter for various reasons:  *
cat.fielddata: the fields paramaters relates to
the fielddata fields that should be printed.  *
indices.clear_cache: used to indicate which
fielddata fields should be cleared.  *
indices.get_field_mapping: used to filter fields
in the mapping.  * indices.stats: get stats on
fields (stored or not stored).  * termvectors:
fields are retrieved from the stored fields if
possible and extracted from the _source otherwise.
* mtermvectors:  * nodes.stats: the fields
parameter is used to concatenate completion_fields
and fielddata_fields so it's not related to
stored_fields at all.    Fixes #20155
",510825,5087,169456,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2149","elastic/elasticsearch","273a9fb46fee56a44c264cb6caec5f9ff589bc7a",1,"2016-09-19 10:06:02+02:00","Watcher: Fix possible chained input NPE for
execution failures (elastic/elasticsearch#3490)
Due to untested code there was an NPE happening in
production,  when a chained input execution
failed, but the chained input  tried to access the
resulting payload (which is never set on
failures). This payload now defaults to being
empty.    This commit also drive-by fixes a broken
logging statement, that  on the one side returned
not the watch id, but a useless watch  toString()
representation, and on the other hand only logs an
error  message, but not a stack trace into the
log, as this is what the  history is for.
Original commit: elastic/x-pack-elasticsearch@7dbe
1afd90ad3ae703c121f19a364170536ef978
",107784,1166,16258,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2150","elastic/elasticsearch","029fc909b54bf3ed60b6de9b6309aa7d8ec58987",2,"2016-09-23 09:02:36-04:00","Removes FailedRerouteAllocation and
StartedRerouteAllocation  Removes the
FailedRerouteAllocation class and
StartedRerouteAllocation  class, as they were just
wrappers for RerouteAllocation that stored
started and failed shards, but these started and
failed shards can  be passed in directly to the
methods that needed them, removing the  need for
this wrapper class and extra level of indirection.
Closes #20626
",510207,5081,169377,"Ali Beyad","ali@elastic.co","GitHub","noreply@github.com"
"2151","elastic/elasticsearch","370afa371b1c7712131ddea559ee2f47d319979a",2,"2016-09-20 17:01:00-04:00","Make reindex-from-remote ignore unknown fields
reindex-from-remote should ignore unknown fields
so it is mostly future compatible. This makes it
ignore unknown fields by adding an option to
`ObjectParser` and `ConstructingObjectParser`
that, if enabled, causes them to ignore unknown
fields.  Closes #20504
",510557,5082,169440,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2152","elastic/elasticsearch","615928e8cd2b27cd2cb17bad1eaea29ea8ec8ee9",1,"2016-09-30 15:49:39+02:00","ESIndexLevelReplicationTestCase: Make it easier to
add new TRA-based actions (#20708)  Right now our
unit tests in that area only simulate indexing
single documents. As we go forward it should be
easy  to add other actions, like delete & bulk
indexing. This commit extracts the common parts of
the current indexing  logic to a based class make
it easier to extend.
",510649,5084,169472,"Boaz Leskes","b.leskes@gmail.com","GitHub","noreply@github.com"
"2153","elastic/elasticsearch","7ffebef2cda8825f9b8aeb1d05eab1e18200a74d",2,"2016-10-05 09:07:09+02:00","Watcher: Add proxy support to slack action
(elastic/elasticsearch#3487)  You can set it like
this in the JSON    ""actions"" : {    ""notify-
slack"" : {      ""slack"" : {        ""account"" :
""integration-account"",        ""proxy"" : {
""host"" : ""localhost"",          ""port"" : 8080
},        ""message"" : {          ...        }
}    }  }    Relates elastic/elasticsearch#3372
Original commit: elastic/x-pack-elasticsearch@de86
233d4ff2f4899c8cf8b14f119aa060ec65bc
",108268,1169,16267,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2154","elastic/elasticsearch","53103e988fc49b71195027f6b28cf2e6d652e8bc",8,"2016-10-05 10:10:02+02:00","Watcher: Add proxy support to pagerduty action
(elastic/elasticsearch#3542)  This is the last
action that needs additional support for proxies.
You can set a proxy in the JSON like this:    ```
""actions"" : {    ""notify-pagerduty"" : {
""pagerduty"" : {        ""description"" : ""Main
system down, please check!"",        ""proxy"" : {
""host"" : ""localhost"", ""port"" : 8080 }      }    }
}  ```    Closes elastic/elasticsearch#3372
Original commit: elastic/x-pack-elasticsearch@b999
69fd6b3d5f573cd64173d2586526447c98b9
",108316,1169,16261,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2155","elastic/elasticsearch","cf4038b66870331838832a5df9a8ccd1609580cd",2,"2016-10-06 16:04:45-04:00","DeGuice some of IndicesModule  UpdateHelper,
MetaDataIndexUpgradeService, and some recovery
stuff.  Move ClusterSettings to nullable ctor
parameter of TransportService so it isn't
forgotten.
",511478,5080,169672,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2156","elastic/elasticsearch","435bd29dd57cc00ca2fe76670f3528ca94132627",1,"2016-10-18 17:34:37+02:00","Cleanup Condition infrastructure
(elastic/elasticsearch#3795)  This change reduces
the Condition infrastructure to a single interface
called  `Condition` this interface is used to
produce and parse requests but also  encapsulates
the executable condition. The per class Result,
Factory and Executable  are removed and replaced
by a single class containing all logic.  Original
commit: elastic/x-pack-elasticsearch@2870dff7adb1a
c6adb4e217151e04863a4ab60de
",108337,1157,15309,"Simon Willnauer","simon.willnauer@elasticsearch.com","GitHub","noreply@github.com"
"2157","elastic/elasticsearch","c88452dc80f8ec32aecc7952e41b4fb303f69bee",1,"2016-10-26 10:04:50-04:00","Abort snapshots on a node that leaves the cluster
(#21084)  Previously, if a node left the cluster
(for example, due to a long GC),  during a
snapshot, the master node would mark the snapshot
as failed, but  the node itself could continue
snapshotting the data on its shards to the
repository. If the node rejoins the cluster, the
master may assign it to  hold the replica shard
(where it held the primary before getting kicked
off  the cluster). The initialization of the
replica shard would repeatedly fail  with a
ShardLockObtainFailedException until the snapshot
thread finally  finishes and relinquishes the lock
on the Store.    This commit resolves the
situation by ensuring that when a shard is removed
from a node (such as when a node rejoins the
cluster and realizes it no longer  holds the
active shard copy), any snapshotting of the
removed shards is aborted.  In the scenario above,
when the node rejoins the cluster, it will see in
the cluster   state that the node no longer holds
the primary shard, so IndicesClusterStateService
will remove the shard, thereby causing any
snapshots of that shard to be aborted.    Closes
#20876
",512967,5094,167849,"Ali Beyad","ali@elastic.co","GitHub","noreply@github.com"
"2158","elastic/elasticsearch","512a77a633831f0513a47df1555f9759f4fb3d3f",3,"2016-10-26 10:21:22-07:00","Refactor ScriptType to be a top-level class.
",512937,5095,167867,"Jack Conradson","osjdconrad@gmail.com","Jack Conradson","osjdconrad@gmail.com"
"2159","elastic/elasticsearch","3a7a218e8f349c89131ede0403ec33b588c42fc1",1,"2016-10-20 16:15:47-04:00","Support negative array ofsets in painless  Adds
support for indexing into lists and arrays with
negative indexes meaning ""counting from the back"".
So for if `x = [""cat"", ""dog"", ""chicken""]` then
`x[-1] == ""chicken""`.  This adds an extra branch
to every array and list access but some
performance testing makes it look like the branch
predictor successfully predicts the branch every
time so there isn't a in execution time for this
feature when the index is positive. When the index
is negative performance testing showed the runtime
is the same as writing `x[x.length - 1]`, again,
presumably thanks to the branch predictor.  Those
performance metrics were calculated for lists and
arrays but `def`s get roughly the same treatment
though instead of inlining the test they need to
make a invoke dynamic so we don't screw up maps.
Closes #20870
",513260,5098,168004,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2160","elastic/elasticsearch","a13a05027166e3a7171cec8a1fbc48ebf74a40b0",2,"2016-11-04 20:59:15-04:00","Add automatic parallelization support to reindex
and friends (#20767)  Adds support for `?slices=N`
to reindex which automatically  parallelizes the
process using parallel scrolls on `_uid`.
Performance  testing sees a 3x performance
improvement for simple docs  on decent hardware,
maybe 30% performance improvement  for more
complex docs. Still compelling, especially because
clusters should be able to get closer to the 3x
than the 30%  number.    Closes #20624
",516016,5115,168766,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2161","elastic/elasticsearch","31c851f5c2a0fed7234cb40febccf12915e06af8",2,"2016-11-15 13:01:49-05:00","migrate authentication service to an async model
This commit migrates the authentication service to
an asynchronous model where we use listeners
instead of blocking and waiting for the
authentication to return. This is the first part
of making  authentication asynchronous as we still
have blocking I/O inside of realms.    See
elastic/elasticsearch#3790  Original commit:
elastic/x-pack-elasticsearch@9339af4af8a0f2df0a47a
81ce1c13917c8857db9
",109668,1152,15428,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2162","elastic/elasticsearch","1d2a1540ccf0667e137cd1b1e201818a52f280d9",5,"2016-11-18 10:19:27-05:00","Makes allocator decision classes top-level classes
(#21662)  This commit moves several allocation
decider related inner classes  into their own top-
level class, in order to use more easily in  the
allocation explain API. This commit also renames
some of those  decision related classes to more
suitable names.    This is simply a cosmetic
change - no functionality changes with this
commit whatsoever.    To summarize the changes:
1. ShardAllocationDecision renamed to
AllocateUnassignedDecision   2. RelocationDecision
moved to a top-level class   3. MoveDecision moved
to a top-level class   4. RebalanceDecision moved
to a top-level class   5.
ShardAllocationDecisionTests renamed to
AllocateUnassignedDecisionTests   6.
NodeRebalanceResult moved to a top-level class
7. ShardAllocationDecision#WeightedDecision moved
to a top-level class and renamed to
NodeAllocationResult.
",516160,5100,168807,"Ali Beyad","ali@elastic.co","GitHub","noreply@github.com"
"2163","elastic/elasticsearch","06df439db0219c9934382a413ce17c5709858350",5,"2016-11-18 15:21:39+00:00","Moves Java code to fit x-pack style structure
This change moves the Java code from
`/java/apps/engine-node` to `/elasticsearch` so it
matches the structure required by X-Pack. This
will make it easier to get the gradle build
working correct and building the full Pack zip.
Original commit: elastic/x-pack-elasticsearch@2fd6
539e851f19bf6ddc2928597ccb9d113e5dd5
",35645,408,6638,"Colin Goodheart-Smithe","colings86@users.noreply.github.com","Colin Goodheart-Smithe","colings86@users.noreply.github.com"
"2164","elastic/elasticsearch","9594b6f50f8130fdbae3afd7d3201fdd45cd0969",2,"2016-11-19 15:25:26+01:00","adjust visibility of DiscoveryNodes.Delta
constructor  It can be private as it gets called
by DiscoveryNodes#delta method, which is supposed
to be the only way to create a Delta
",516368,5102,168878,"javanna","cavannaluca@gmail.com","Luca Cavanna","javanna@users.noreply.github.com"
"2165","elastic/elasticsearch","18478d63c2c0cde2487ec29fd82eec21690c8c70",6,"2016-11-21 10:52:55+01:00","Watcher: Add JIRA action
(elastic/elasticsearch#4014)  closes
elastic/elasticsearch#493  Original commit:
elastic/x-pack-elasticsearch@6b7387d3e4c1d5d3a62a7
2b782fda4a378e055f1
",110014,1156,15494,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2166","elastic/elasticsearch","a32f2096a66ca157797ba096c497e501fb5c483f",1,"2016-11-23 11:53:06+01:00","Add mappings for Jira action
(elastic/elasticsearch#4155)  This commit updates
the watch_history.json file so that it includes
mappings for the new Jira action. It also update
the JiraIssue format so that it now includes the
name of the account used to create the Jira issue.
It also update the REST tests to check that Jira
action result are searchable and hide the user's
password.  Original commit: elastic/x-pack-elastic
search@75888f7748cea19077d6845c39dd66e3b87a604d
",110201,1155,15438,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2167","elastic/elasticsearch","7e198f0e411a219973b3e77cbe91d1130c2bcf6b",1,"2016-11-28 11:24:25+01:00","Detect nodes being blocked by GC-disrupted node
(#21797)  The disruption type LongGCDisruption
simulates GCs on a node by suspending all the
threads of that node. If the suspended threads are
in a code section with shared JVM locks, however,
it can prevent the other nodes from doing their
thing. The class LongGCDisruption has a list of
class names for which we know that this can occur.
Whenever a test using the GC disruption type fails
in mysterious ways, it becomes a long guessing
game to find the offending class. This commit adds
code to LongGCDisruption to automatically detect
these situations, fail the test early and report
the offending class and all relevant context.
",517357,5082,168336,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2168","elastic/elasticsearch","e6e7bab58c80cbda54f9df91914efae2da68ab4e",24,"2016-12-07 17:37:51-05:00","Prepares allocator decision objects for use with
the allocation explain API (#21691)  This commit
enhances the allocator decision result objects
(namely,  AllocateUnassignedDecision,
MoveDecision, and RebalanceDecision)  to enable
them to be used directly by the cluster allocation
explain API. In  particular, this commit does the
following:    - Adds serialization and toXContent
methods to the response objects,  which will form
the explain API responses.  - Moves the
calculation of the final explanation to the
response  object itself, removing it from the
responsibility of the allocators.  - Adds shard
store information to the NodeAllocationResult, so
that  store information is available for each
node, when explaining a  shard allocation by the
PrimaryShardAllocator or the
ReplicaShardAllocator.  - Removes
RebalanceDecision in favor of using MoveDecision
for both  moving and rebalancing shards.  -
Removes NodeRebalanceResult in favor of using
NodeAllocationResult.  - Changes the notion of
weight ranking to be relative to the current node,
instead of an absolute weight that doesn't convey
any added value to the  API user and can be
confusing.  - Introduces a new enum
AllocationDecision to convey the decision type,
which enables conveying unassigned, moving, and
rebalancing scenarios  with more detail as opposed
to just Decision.Type and AllocationStatus.
",503258,5001,166160,"Ali Beyad","ali@elastic.co","GitHub","noreply@github.com"
"2169","elastic/elasticsearch","4231aa4feb0361015cfc3eb3080e3b2772877f84",5,"2016-12-08 17:17:41-05:00","Add bwc for index/delete requests from pre-6.0
nodes
",502295,5000,165942,"Areek Zillur","areek.zillur@elasticsearch.com","Areek Zillur","areek.zillur@elasticsearch.com"
"2170","elastic/elasticsearch","ee22a477df841d2c7087674d5389b3adacc1701b",1,"2016-10-31 16:21:38-06:00","Add internal _primary_term doc values field, fix
_seq_no indexing  This adds the `_primary_term`
field internally to the mappings. This field is
populated with the current shard's primary term.
It is intended to be used for collision resolution
when two document copies have the same sequence
id, therefore, doc_values for the field are stored
but the filed itself is not indexed.  This also
fixes the `_seq_no` field so that doc_values are
retrievable (they were previously stored but
irretrievable) and changes the `stats`
implementation to more efficiently use the points
API to retrieve the min/max instead of iterating
on each doc_value value. Additionally, even though
we intend to be able to search on the field, it
was previously not searchable. This commit makes
it searchable.  There is no user-visible
`_primary_term` field. Instead, the fields are
updated by calling:  ```java
index.parsedDoc().updateSeqID(seqNum,
primaryTerm); ```  This includes example methods
in `Versions` and `Engine` for retrieving the
sequence id values from the index (see
`Engine.getSequenceID`) that are only used in unit
tests. These will be extended/replaced by actual
implementations once we make use of sequence
numbers as a conflict resolution measure.  Relates
to #10708 Supercedes #21480  P.S. As a side effect
of this commit, `SlowCompositeReaderWrapper`
cannot be used for documents that contain
`_seq_no` because it is a Point value and SCRW
cannot wrap documents with points, so the tests
have been updated to loop through the
`LeafReaderContext`s now instead.
",502539,5001,166007,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"2171","elastic/elasticsearch","37b0d52882801c141ab8d4e06f2fc66bac22e312",3,"2016-12-09 09:07:09+01:00","Watcher: Remove mock web server from square
(elastic/elasticsearch#4221)  The latest release
of the mock web server requires more security
permissions, and  we dont need all the
functionality anyway.    This introduces a small
MockWebServer using the JDK internal HttpServer,
yet fullfilling  all our needs and supporting SSL
as well for testing.    The MockWebServer allows
to enqueue responses and also requires you to
enqueue as many responses  as you requests will be
executed - there is no fallback at the moment.
SSL is also supported by passing an SSL context -
for which the TestsSSLService is needed, which
makes the required methods public.  Original
commit: elastic/x-pack-elasticsearch@55f4a172a26a6
0a21b8fa435b7746897881a78c4
",111278,1159,15683,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2172","elastic/elasticsearch","3adefb7b4a0dcfec887740692ee6176e41bae259",1,"2016-12-09 20:23:02-05:00","Begin centralizing XContentParser creation into
RestRequest (#22041)  To get #22003 in cleanly we
need to centralize as much `XContentParser`
creation as possible into `RestRequest`. That'll
mean we have to plumb the `NamedXContentRegistry`
into fewer places.    This removes
`RestAction.hasBody`,
`RestAction.guessBodyContentType`, and
`RestActions.getRestContent`, moving callers over
to `RestRequest.hasContentOrSourceParam`,
`RestRequest.contentOrSourceParam`, and
`RestRequest.contentOrSourceParamParser` and `Rest
Request.withContentOrSourceParamParserOrNull`. The
idea is to use
`withContentOrSourceParamParserOrNull` if you need
to handle requests without any sort of body
content and to use `contentOrSourceParamParser`
otherwise.    I believe the vast majority of this
PR to be purely mechanical but I know I've made
the following behavioral change (I'll add more if
I think of more):  * If you make a request to an
endpoint that requires a request body and has cut
over to the new APIs instead of getting `Failed to
derive xcontent` you'll get `Body required`.  *
Template parsing is now non-strict by default.
This is important because we need to be able to
deprecate things without requests failing.
",502892,4981,165774,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2173","elastic/elasticsearch","b57c4f6ebed23c2c19e91795bce0da46727e076c",1,"2016-12-13 08:54:03+01:00","Watcher: Remove in memory watch store
(elastic/elasticsearch#4201)  In order to prepare
to the distributed watch execution, this commit
removes the in memory watch store.    Whenever a
watch is needed now, a get request is executed and
the parsing  is done. This happens when    * Put
* Get  * Ack  * Activate/Deactivate  * Execute
Note: This also means there are no usage stats
currently regarding  the watch count, because we
would need to execute a query. This would  require
the usage stats to be async, see
elastic/elasticsearch#3569    Another advantage
is, that there is no dirty flag in the watch
itself  needed anymore, because the watch is
always the latest. Also write  operations store
immediately and dont leave anything in memory.
Also ActionListener.wrap() was used a lot instead
of more verbose anonmyous  inner classes.
Original commit: elastic/x-pack-elasticsearch@c474
65b47cad72d3e46e951fd46347545cb69f1a
",110791,1161,15699,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2174","elastic/elasticsearch","b6cbcc49ba590ead3cd6d95953eabe22f7d47fef",4,"2016-12-15 17:06:25+01:00","ClusterService should expose ""applied"" cluster
states (i.e., remove ClusterStateStatus) (#21817)
`ClusterService` is responsible of updating the
cluster state on every node (as a response to an
API call on the master and when non-masters
receive a new state from the master). When a new
cluster state is processed, it is made visible via
the `ClusterService#state` method and is sent to
series of listeners. Those listeners come in two
flavours - one is to change the state of the node
in response to the new cluster state (call these
cluster state appliers), the other is to start a
secondary process. Examples for the later include
an indexing operation waiting for a shard to be
started or a master node action waiting for a
master to be elected.     The fact that we expose
the state before applying it means that samplers
of the cluster state had to worry about two things
- working based on a stale CS and working based on
a future, i.e., ""being applied"" CS. The
`ClusterStateStatus` was used to allow
distinguishing between the two. Working with a
stale cluster state is not avoidable. How this PR
changes things to make sure consumers don't need
to worry about future CS, removing the need for
the status and simplifying the waiting logic.
This change does come with a price as ""cluster
state appliers"" can't sample the cluster state
from `ClusterService` whenever they want as the
cluster state isn't exposed yet. However, recent
clean ups made this is situation easier and this
PR takes the last steps to remove such sampling.
This also helps clarify the ""information flow"" and
helps component separation (and thus potential
unit testing). It also adds an assertion that will
trigger if the cluster state is sampled by such
listeners.     Note that there are still many
""appliers"" that could be made a simpler,
unrestricted ""listener"" but this can be done in
smaller bits in the future. The commit also makes
it clear what the `appliers` and what the
`listeners` are by using dedicated interfaces.
Also, since I had to change the listener types I
went ahead and changed the data structure for
temporary/timeout listeners (used for the
observer) so addition and removal won't be an O(n)
operation.
",504185,4987,165926,"Boaz Leskes","b.leskes@gmail.com","GitHub","noreply@github.com"
"2175","elastic/elasticsearch","0b338bf52394e49c6f4e653e8a6b7479dc71b561",4,"2016-12-17 11:45:55+01:00","Cleanup random stats serialization code (#22223)
Some of our stats serialization code duplicates
complicated seriazliation logic  or could use
existing building blocks from StreamOutput/Input.
This commit  cleans up some of the serialization
code.
",504209,4989,166042,"Simon Willnauer","simon.willnauer@elasticsearch.com","GitHub","noreply@github.com"
"2176","elastic/elasticsearch","bdc32be8b70bd82177056b1410e3e9930b7ace63",1,"2016-12-19 12:49:15+01:00","Support specifying multiple templates (#22139)
Problem: We introduced the ability to shorten the
rank eval request by using a  template in #20231.
When playing with the API it turned out that there
might be  use cases where - e.g. due to various
heuristics - folks might want to translate  the
original user query into more than just one type
of Elasticsearch query.    Solution: Give each
template an id that can later be referenced in the
actual requests.    Closes #21257
",507251,5025,167185,"Isabel Drost-Fromm","isabel.drostfromm@elastic.co","GitHub","noreply@github.com"
"2177","elastic/elasticsearch","1cabf66bd50004255a4fc727ce3437fa80f3f87d",1,"2016-12-19 14:36:58+01:00","Use correct block levels for TRA subclasses
(#22224)  Subclasses of TransportReplicationAction
can currently chose to implement block levels for
which the request will be blocked.  -
Refresh/Flush was using the block level
METADATA_WRITE although they don't operate at the
cluster meta data level (but more like shard level
meta data which is not represented in the block
levels). Their level has been changed to null so
that they can operate freely in the presence of
blocks.  - GlobChkptSync was using WRITE although
it does not make any changes to the actual
documents of a shard. The level has been changed
to null so that it can operate freely in the
presence of blocks.  The commit also adds a check
for closed indices in TRA so that the right
exception is thrown if refresh/flush/checkpoint
syncing is attempted on a closed index (before it
was throwing an IndexNotFoundException, now it's
throwing IndexClosedException).
",505124,4993,166176,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2178","elastic/elasticsearch","baea17b53fbdb7eae92607ed18f3d18110849712",2,"2016-12-23 12:23:52+01:00","Separate cluster update tasks that are published
from those that are not (#21912)  This commit
factors out the cluster state update tasks that
are published (ClusterStateUpdateTask) from those
that are not (LocalClusterUpdateTask), serving as
a basis for future refactorings to separate the
publishing mechanism out of ClusterService.
",507763,4994,166534,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2179","elastic/elasticsearch","ca90d9ea82c3ec2162a669b199c63ef5103b2fe9",2,"2016-12-27 22:31:34-05:00","Remove PROTO-based custom cluster state components
Switches custom cluster state components from
PROTO-based de-serialization to named objects
based de-serialization
",508596,4997,166743,"Igor Motov","igor@motovs.org","Igor Motov","igor@motovs.org"
"2180","elastic/elasticsearch","18a2cf23d4c0b08820ba01ccdc19689fd7207c26",5,"2016-12-30 09:27:49-05:00","Build a single role that represents a user's
permissions (elastic/elasticsearch#4449)  This PR
changes how we use roles and how we look at the
roles of a user. Previously we looked up each role
individually, parsed each into their own `Role`
object, and had a wrapper that essentially served
as an iterator over the roles. The same pattern
was also followed for the permissions that
composed a role (ClusterPermission,
IndicesPermission, and RunAsPermission). This
resulted in a lot of code that was hard to follow
and could be inefficient.     Now, we look up the
roles for a user in bulk and only get the
RoleDescriptor for each role. Once all role
descriptors have been retrieved, we build a single
Role that represents the user's permissions and we
also cache this combination for better performance
as authorization can happen many times for a
single top level request as we authorize the top
level request and any sub requests, which could be
a large number in the case of shard requests.
This change also enabled a large cleanup of our
permission and privilege classes, which should
reduce the footprint of what needs to be followed.
Some of the notable changes are:    *
Consolidation of GeneralPrivilege and
AbstractAutomatonPrivilege into the Privilege
class  * The DefaultRole class has been removed
and the permissions it provided were moved into
the AuthorizationService  * The GlobalPermission
class was removed as there is a single role that
represents a user's permissions  * The Global
inner classes for the various permissions were
removed  * The Core inner class was removed and
ClusterPermission, IndexPermission,
RunAsPermission became final classes instead of
interfaces  * The Permission interface has been
removed. The isEmpty() method defined by this
interface is not needed as we can simply evaluate
the permission to get the same effect  * The
ClusterPermission#check method only takes the
action name again  * The AutomatonPredicate class
was removed and replaced by Automatons#predicate
* IndicesAccessControl objects no longer need to
be merged when evaluating permissions  *
MergedFieldPermissions has been removed  * The
Name class that was used to hold an array of
strings has been removed and replaced with the use
of a Set  * Privilege resolution is more efficient
by only combining automata once    Other items:  *
NativeRolesStore no longer does caching, so the
RoleAndVersion class could be removed  *
FileRolesStore doesn't need to be an
AbstractLifecycleComponent    Relates
elastic/elasticsearch#4327  Original commit:
elastic/x-pack-elasticsearch@c1901bc82e4380901fc3a
3aa5e9cf1aaf3f7c958
",110180,1142,15643,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2181","elastic/elasticsearch","f985638bba1d49dfe07f4696ba363656978f342b",1,"2016-12-29 18:41:57-05:00","Add a generic way of checking version before
serializing custom cluster object  In #22313 we
added a check that prevents the
SnapshotDeletionsInProgress custom cluster state
objects from being sent to older elasticsearch
nodes. This commits make this check generic and
available to other cluster state custom objects if
needed.
",509246,5001,166879,"Igor Motov","igor@motovs.org","Igor Motov","igor@motovs.org"
"2182","elastic/elasticsearch","20ab4be59f072e21c3cb5877d4aebfae43e98680",15,"2017-01-02 12:28:32-06:00","Cluster Explain API uses the allocation process to
explain shard allocation decisions (#22182)  This
PR completes the refactoring of the cluster
allocation explain API and improves it in the
following two high-level ways:     1. The explain
API now uses the same allocators that the
AllocationService uses to make shard allocation
decisions. Prior to this PR, the explain API would
run the deciders against each node for the shard
in question, but this was not executed on the same
code path as the allocators, and many of the
scenarios in shard allocation were not captured
due to not executing through the same code paths
as the allocators.     2. The APIs have changed,
both on the Java and JSON level, to accurately
capture the decisions made by the system. The APIs
also now report on shard moving and rebalancing
decisions, whereas the previous API did not report
decisions for moving shards which cannot remain on
their current node or rebalancing shards to form a
more balanced cluster.    Note: this change
affects plugin developers who may have a custom
implementation of the ShardsAllocator interface.
The method weighShards has been removed and no
longer has any utility. In order to support the
new explain API, however, a custom implementation
of ShardsAllocator must now implement
ShardAllocationDecision
decideShardAllocation(ShardRouting shard,
RoutingAllocation allocation) which provides a
decision and explanation for allocating a single
shard. For implementations that do not support
explaining a single shard allocation via the
cluster allocation explain API, this method can
simply return an UnsupportedOperationException.
",509848,5001,167026,"Ali Beyad","ali@elastic.co","GitHub","noreply@github.com"
"2183","elastic/elasticsearch","e41b53c3441127d202c3dd0ae17a8253c455d841",8,"2017-01-03 12:06:33-05:00","roles with FLS and/or DLS are ignored when
unlicensed (elastic/elasticsearch#4481)
Currently, roles making use of field or document
level security are still applied when  the license
level does not enable field and document level
security. There is no indication  that these roles
are not being applied so it is misleading to
users. This change prevents  these roles for
applying to authorization and also adds a
transient metadata to the response  that indicates
which features of a role is unlicensed.
Additionally, this PR prevents the addition or
modification of roles to include field or
document level security.    Closes
elastic/elasticsearch#2472   Original commit:
elastic/x-pack-elasticsearch@c9455958f509ae63ba2e6
d90215ebdbb8e21ea74
",110763,1143,15666,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2184","elastic/elasticsearch","b0c009ae769877594ada8a2b05267463caebf274",2,"2017-01-06 17:48:57-05:00","Gracefully handles pre 2.x compressed snapshots
In pre 2.x versions, if the repository was set to
compress snapshots, then snapshots would be
compressed with the LZF algorithm.  In 5.x,
Elasticsearch no longer supports the LZF
compression algorithm.  This presents an issue
when retrieving snapshots in a repository or
upgrading repository data to the 5.x version,
because Elasticsearch throws an exception when it
tries to read the snapshot metadata because it was
compressed using LZF.  This commit gracefully
handles the situation by introducing a new
incompatible-snapshots blob to the repository.
For any pre-2.x snapshot that cannot be read, that
snapshot is removed from the list of active
snapshots, because the snapshot could not be
restored anyway.  Instead, the snapshot is
recorded in the incompatible-snapshots blob.  When
listing snapshots, both active snapshots and
incompatible snapshots will be listed, with
incompatible snapshots showing a `INCOMPATIBLE`
state. Any attempt to restore an incompatible
snapshot will result in an exception.
",510271,5017,167284,"Ali Beyad","ali@elastic.co","Ali Beyad","ali@elastic.co"
"2185","elastic/elasticsearch","609d2aab15d7af12bb6b39ce22bdb7b6f4c7cd06",1,"2017-01-11 09:59:43-08:00","QueryString and SimpleQueryString Graph Support
(#22541)  Add support for graph token streams to
""query_String"" and  ""simple_query_string"" queries.
",507744,4997,166633,"Matt Weber","matt@mattweber.org","Jim Ferenczi","jim.ferenczi@elastic.co"
"2186","elastic/elasticsearch","f5542ed47fede3d086477995afbc6b330ff71d3e",1,"2017-01-17 15:44:49+01:00","Simplify ElasticsearchException rendering as a
XContent (#22611)  This commit tries to simplify
the way ElasticsearchException are rendered to
xcontent. It adds some documentation and renames
and merges some methods. Current behavior is
preserved, the goal is to be more readable and
centralize everything in the
ElasticsearchException class.
",507515,4999,166651,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2187","elastic/elasticsearch","10441a3e38984f3bfc642e04965a52e11bd5f8c8",1,"2017-01-19 11:41:35+00:00","More endpoint adjustments
(elastic/elasticsearch#750)  This commit contains
some more of the endpoint changes Sophie and Steve
agreed with Clint:    1. get_jobs_stats renamed to
get_job_stats    2. Revert snapshot must now be
done using an ID - other options removed    3.
Renamed ""categorydefinitions"" to ""categories"" in
endpoints    4. get_jobs now has an implicit _all
if no job ID/wildcard is specified    5. There is
an option to retrieve a specific model snapshot by
ID in     get_model_snapshots    Relates
elastic/elasticsearch#630  Original commit:
elastic/x-pack-elasticsearch@9dd71c64a853478478df8
0785a0be8e1eb5e50ad
",38326,436,6440,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2188","elastic/elasticsearch","9fad3cf85cd51b06c1df9fe093154497ba1d92ce",2,"2017-01-25 13:03:26-05:00","[Watcher] Allow Index Action to set _id
(elastic/elasticsearch#4694)  This adds a ""doc_id""
parameter to the index action itself, which can
accept a single ID value. This also allows the
payload to set _id (or _doc._id) for each document
being indexed in order to support this with bulk
index actions.    If doc_id and _id are used
together, then this blocks the action.  Original
commit: elastic/x-pack-elasticsearch@f186ccceb8d75
0e254e7f1784bd9df617b3d5e79
",111834,1144,15840,"Chris Earle","pickypg@users.noreply.github.com","GitHub","noreply@github.com"
"2189","elastic/elasticsearch","417c93c570d835dad715c8144d63789b5e140979",1,"2017-01-27 15:53:41+01:00","First step towards separating individual search
phases (#22802)  At this point
AbstractSearchAsyncAction is just a base-class for
the first phase of a search where we have multiple
replicas  for each shardID. If one of them is not
available we move to the next one. Yet, once we
passed that first stage we have to work with  the
shards we succeeded on the initial phase.
Unfortunately, subsequent phases are not fully
detached from the initial phase since they are all
non-static inner classes.  In future changes this
will be changed to detach the inner classes to
test them in isolation and to simplify their
creation.  The AbstractSearchAsyncAction should be
final and it should just get a factory for the
next phase instead of requiring subclasses  etc.
",515193,5059,168475,"Simon Willnauer","simonw@apache.org","GitHub","noreply@github.com"
"2190","elastic/elasticsearch","2e48fb8294a924bc3742419fe80e4a29fdfa0f54",1,"2017-01-27 16:09:18-05:00","Move delete by query helpers into core (#22810)
This moves the building blocks for delete by query
into core. This  should enabled two thigns:  1.
Plugins other than reindex to implement ""bulk by
scroll"" style  operations.  2. Plugins to directly
call delete by query. Those plugins should  be
careful to make sure that task cancellation still
works, but  this should be possible.    Notes:  1.
I've mostly just moved classes and moved around
tests methods.  2. I haven't been super careful
about cohesion between these core  classes and
reindex. They are quite interconnected because I
wanted  to make the change as mechanical as
possible.    Closes #22616
",515769,5065,168723,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2191","elastic/elasticsearch","547eb5c22fdc1a949f4a6b2d2f7b0084cb4f1130",4,"2017-01-31 16:31:55-06:00","Include stale replica shard info when explaining
an unassigned primary (#22826)  Currently, if a
previously allocated shard has no in-sync copy in
the  cluster, but there is a stale replica copy,
the explain API does not  include information
about the stale replica copies in its output.
This  commit includes any shard copy information
available (even for stale  copies) when explaining
an unassigned primary shard that was previously
allocated in the cluster.    This situation can
arise as follows: imagine an index with 1 primary
and  1 replica and a cluster with 2 nodes.  If the
node holding the replica  is shut down, and data
continues to be indexed, only the primary will
have the latest data and the replica that has gone
offline will be  marked as stale.  Now, suppose
the node holding the primary is shut  down.  There
are no copies of the shard data in the cluster.
Now, start  the first stopped node (holding the
stale replica) back up.  The cluster  is red
because there is no in-sync copy available.
Running the explain  API before would inform the
user that there is no valid shard copy in  the
cluster for that shard, but it would not provide
any information  about the existence of the stale
replica that exists on the restarted  node.  With
this commit, the explain API provides information
about all  the stale replica copies when
explaining the unassigned primary.
",517060,5070,169304,"Ali Beyad","ali@elastic.co","GitHub","noreply@github.com"
"2192","elastic/elasticsearch","7520a107bee67099338813728147d2aee25ed240",5,"2017-02-02 14:07:13-05:00","Optionally require a valid content type for all
rest requests with content (#22691)  This change
adds a strict mode for xcontent parsing on the
rest layer. The strict mode will be off by default
for 5.x and in a separate commit will be enabled
by default for 6.0. The strict mode, which can be
enabled by setting `http.content_type.required:
true` in 5.x, will require that all incoming rest
requests have a valid and supported content type
header before the request is dispatched. In the
non-strict mode, the Content-Type header will be
inspected and if it is not present or not valid,
we will continue with auto detection of content
like we have done previously.    The content type
header is parsed to the matching XContentType
value with the only exception being for plain text
requests. This value is then passed on with the
content bytes so that we can reduce the number of
places where we need to auto-detect the content
type.    As part of this, many transport requests
and builders were updated to provide methods that
accepted the XContentType along with the bytes and
the methods that would rely on auto-detection have
been deprecated.    In the non-strict mode,
deprecation warnings are issued whenever a request
with body doesn't provide the Content-Type header.
See #19388
",519011,5081,170156,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2193","elastic/elasticsearch","9a0b216c36e3debb9d48374ced1e58d6568429bd",2,"2017-02-03 09:46:44-05:00","Upgrade checkstyle to version 7.5  This commit
upgrades the checkstyle configuration from version
5.9 to  version 7.5, the latest version as of
today. The main enhancement  obtained via this
upgrade is better detection of redundant
modifiers.    Relates #22960
",519098,5081,170162,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2194","elastic/elasticsearch","39e7c3091244ac1d77d8c482ef870e95c428d946",1,"2017-01-16 10:46:12-07:00","Change certain replica failures not to fail the
replica shard  This changes the way that replica
failures are handled such that not all failures
will cause the replica shard to be failed or
marked as stale.  In some cases such as refresh
operations, or global checkpoint syncs, it is
""okay"" for the operation to fail without the shard
being failed (because no data is out of sync). In
these cases, instead of failing the shard we
should simply fail the operation, and, in the
event it is a user-facing operation, return a 5xx
response code including the shard-specific
failures.  This was accomplished by having two
forms of the `Replicas` proxy, one that is for
non-write operations that does not fail the shard,
and one that is for write operations that will
fail the shard when an operation fails.  Relates
to #10708
",519105,5080,170147,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"2195","elastic/elasticsearch","bd04b30acde3f36e3e3b25d517ce63f71da6ceab",4,"2017-02-07 11:39:31-05:00","security: transport always uses TLS
(elastic/elasticsearch#4738)  This commit brings
back support an auto-generated certificate and
private key for  transport traffic. The auto-
generated certificate and key can only be used in
development  mode; when moving to production a key
and certificate must be provided.    For the edge
case of a user not wanting to encrypt their
traffic, the user can set  the cipher_suites
setting to `TLS_RSA_WITH_NULL_SHA256` or a like
cipher, but a key/cert  is still required.
Closes elastic/elasticsearch#4332  Original
commit: elastic/x-pack-elasticsearch@b7a1e629f5e7b
6402e94f3c1fab9d60d2bd253e3
",112602,1151,16000,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2196","elastic/elasticsearch","9154686623320179eec753ccbff39355346e45d4",1,"2017-02-08 10:00:55+01:00","Remove legacy primary shard allocation mode based
on versions (#23016)  Elasticsearch v5.0.0 uses
allocation IDs to safely allocate primary shards
whereas prior versions of ES used a version-based
mode instead. Elasticsearch v5 still has support
for version-based primary shard allocation as it
needs to be able to load 2.x shards. ES v6 can
drop the legacy support.
",520433,5088,170364,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2197","elastic/elasticsearch","ecb01c15b9a6645f22f153eb099a377e70e398c8",1,"2017-02-08 14:40:08+01:00","Fold InternalSearchHits and friends into their
interfaces (#23042)  We have a bunch of interfaces
that have only a single implementation  for 6
years now. These interfaces are pretty useless
from a SW development  perspective and only add
unnecessary abstractions. They also require  lots
of casting in many places where we expect that
there is only one  concrete implementation. This
change removes the interfaces, makes  all of the
classes final and removes the duplicate `foo`
`getFoo` accessors  in favor of `getFoo` from
these classes.
",520246,5085,170266,"Simon Willnauer","simonw@apache.org","GitHub","noreply@github.com"
"2198","elastic/elasticsearch","aef0665ddbb9745de5548c3a057828427461c825",3,"2017-02-14 12:34:25+01:00","Detach SearchPhases from AbstractSearchAsyncAction
(#23118)  Today all search phases are inner
classes of AbstractSearchAsyncAction or one of
it's  subclasses. This makes unit testing of these
classes practically impossible. This commit
Extracts `DfsQueryPhase` and `FetchSearchPhase` or
of the code that composes the actual  query
execution types and moves most of the fan-out and
collect code into an `InitialSearchPhase`  class
that can be used to build initial search phases
(phases that retry on shards). This will  make
modification to these classes simpler and allows
to easily compose or add new search phases  down
the road if additional roundtrips are required.
",521358,5094,170613,"Simon Willnauer","simonw@apache.org","GitHub","noreply@github.com"
"2199","elastic/elasticsearch","0d1181eabb058b0e76cc9bde41be18e7f3402e78",4,"2017-02-18 20:14:52+00:00","[ML] Show C++ process info in X-Pack's info
response (elastic/x-pack-elasticsearch#581)  The
/_xpack endpoint now has a ""native_code_info""
value in the feature  info for ml   Original
commit: elastic/x-pack-elasticsearch@6b4b408f4a036
397a71e0253c4de97ce41ffb6c9
",155541,1599,22092,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2200","elastic/elasticsearch","93a2a567cb669794c00854e868ad499b9c1588b6",2,"2017-02-24 20:17:28+01:00","[ML] Cut open job and start datafeed apis to use
persistent task's assignment explanation.  Also
included assignment explanation to both job and
datafeed stats apis and included executor node to
datafeed stats api  Original commit:
elastic/x-pack-elasticsearch@783bc77ef6c029c7e291c
cd1f074af2931d89f31
",157236,1613,22201,"Martijn van Groningen","martijn.v.groningen@gmail.com","Martijn van Groningen","martijn.v.groningen@gmail.com"
"2201","elastic/elasticsearch","99e3508267d02e0eecd60683d67c9f025ea71947",2,"2017-03-23 18:45:53+00:00","[ML] Change chunking_config.time_span into a
TimeValue (elastic/x-pack-elasticsearch#808)
Original commit: elastic/x-pack-elasticsearch@42d7
b06e3fcd05339cc9eff7b86f111e15bf6de9
",160960,1634,22735,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2202","elastic/elasticsearch","27a313c07df9cf9db5258de4ff8d79660928b994",4,"2017-03-27 13:17:44+01:00","[ML] Correctly initialise model size stats on job
reopen (elastic/x-pack-elasticsearch#822)  This
commit ensures that upon reopening a job, the in-
memory  model size stats are correctly initialized
from the ones  last persisted in the results
index.    This fixes the bug that could be seen
upon opening a job  that has processed data and
immediately calling its _stats  API only to see
the model size stats are zero.    In addition,
this PR refactors getting the parameters needed to
open an autodetect job:    - Previously, there was
a method chaining together multiple  callbacks to
the job provider.  - These methods were retrieving
data via GETs which is not  going to work with
index rollover.    Note, this PR is not
eliminating all GETs. More work is needed  to
fully support index rollover.    relates
elastic/x-pack-elasticsearch#801   Original
commit: elastic/x-pack-elasticsearch@1ef1d44b32abe
f6d85e3671357a1f9835aa29e7b
",161609,1638,22762,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2203","elastic/elasticsearch","7316b663e286378426c10090deee7bdcaf4d06f8",4,"2017-04-03 09:57:26+02:00","Replace custom sort field with SortedSetSortField
and SortedNumericSortField when possible (#23827)
Currently for field sorting we always use a custom
sort field and a custom comparator source.  Though
for numeric fields this custom sort field could be
replaced with a standard SortedNumericSortField
unless  the field is nested especially since we
removed the FieldData for numerics.  We can also
use a SortedSetSortField for string sort based on
doc_values when the field is not nested.    This
change replaces IndexFieldData#comparatorSource
with IndexFieldData#sortField that returns a
Sorted{Set,Numeric}SortField when possible or a
custom   sort field when the field sort spec is
not handled by the SortedSortFields.
",531782,5186,173191,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2204","elastic/elasticsearch","c9834bc8266908bc9aa014c7fc3cd47e9745f008",1,"2017-04-04 17:15:44+01:00","[ML] Require max time aggregation to ensure
correct datafeed restart (elastic/x-pack-
elasticsearch#948)  Before this change,
aggregation datafeeds used the histogram bucket
key as the record timestamp that is posted to the
job. That meant  that the latest_record_timestamp
at the end of a datafeed run was  the start of the
latest seen histogram bucket. Upon continuing the
datafeed, the search starts from one millisecond
after the  latest_record_timestamp. Hence, data
may be fetched for a second time.    This change
requires a max aggregation on the time_field
nested in  the histogram bucket. It then reads the
timestamp from that agg.  This ensures datafeed
can restart without duplicating data.    relates
elastic/x-pack-elasticsearch#874  Original commit:
elastic/x-pack-elasticsearch@f820efa8667b22557f81f
0f8ca1ef6d4845dc9e6
",162545,1641,22943,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2205","elastic/elasticsearch","49223a8782c24b7d09c9b2a90e9918838900513d",1,"2017-04-10 17:32:30-04:00","Persistent Tasks: remove listener from
PersistentTasksExecutor#nodeOperation
(elastic/x-pack-elasticsearch#1032)  Instead of
having a separate listener for indicating that the
current task is finished, this commit is switching
to use allocated object itself.  Original commit:
elastic/x-pack-elasticsearch@7ad5362121dacc8d33589
9171b2ca5438a46d14a
",163753,1644,23016,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2206","elastic/elasticsearch","253340a5971bfff2368719f149968c12c3a611c5",1,"2017-04-12 09:58:15-04:00","Persistent Tasks: PersistentTaskRequest ->
PersistTaskParams (elastic/x-pack-
elasticsearch#1057)  Removes the last pieces of
ActionRequest from PersistentTaskRequest and
renames it into PersistTaskParams, which is now
just an interface that extends NamedWriteable and
ToXContent.  Original commit: elastic/x-pack-elast
icsearch@5a298b924fe24895cb77a66cc4a99d93d2b5cc06
",164089,1643,23043,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2207","elastic/elasticsearch","4632661bc71bb22fc577df476e70e9dfabaaae66",1,"2017-04-18 15:17:21+02:00","Upgrade to a Lucene 7 snapshot (#24089)  We want
to upgrade to Lucene 7 ahead of time in order to
be able to check whether it causes any trouble to
Elasticsearch before Lucene 7.0 gets released.
From a user perspective, the main benefit of this
upgrade is the enhanced support for sparse fields,
whose resource consumption is now function of the
number of docs that have a value rather than the
total number of docs in the index.    Some notes
about the change:   - it includes the deprecation
of the `disable_coord` parameter of the `bool` and
`common_terms` queries: Lucene has removed support
for coord factors   - it includes the deprecation
of the `index.similarity.base` expert setting,
since it was only useful to configure coords and
query norms, which have both been removed   - two
tests have been marked with `@AwaitsFix` because
of #23966, which we intend to address after the
merge
",533065,5206,173614,"Adrien Grand","jpountz@gmail.com","GitHub","noreply@github.com"
"2208","elastic/elasticsearch","c27bb1614129330e91c8f4898a64559653a1b1eb",4,"2017-04-18 12:59:46-04:00","[Monitoring] Use Exporter to create watches in
Monitoring Cluster (elastic/x-pack-
elasticsearch#994)  By creating the watches via
the exporter, we get to afford ourselves  with a
much more automatic and simpler set of security
permissions.    This does limit us in a few ways
(e.g., every exporter has to deal with  cluster
alerts itself, which means that newer releases of
Kibana cannot  help by adding newer cluster alerts
for older, still-monitored  clusters).  Original
commit: elastic/x-pack-elasticsearch@448ef313c32f5
1a0a12ba36c03cc7b41c8b0a74d
",165442,1651,23327,"Chris Earle","pickypg@users.noreply.github.com","GitHub","noreply@github.com"
"2209","elastic/elasticsearch","f05af0a382a995cb254a851d2306f12c3da2cd1b",1,"2017-04-19 14:36:11+02:00","Enable index-time sorting (#24055)  This change
adds an index setting to define how the documents
should be sorted inside each Segment.  It allows
any numeric, date, boolean or keyword field inside
a mapping to be used to sort the index on disk.
It is not allowed to use a `nested` fields inside
an index that defines an index sorting since
`nested` fields relies on the original sort of the
index.  This change does not add early termination
capabilities in the search layer. This will be
added in a follow up.    Relates #6720
",534033,5211,173823,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2210","elastic/elasticsearch","22e07959909dca567e68e875d718f04cc38a27f2",2,"2017-04-20 17:28:43+02:00","Extract batch executor out of cluster service
(#24102)  Refactoring that extracts the task
batching functionality from ClusterService and
makes it a reusable component that can be tested
in isolation.
",534226,5218,173937,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2211","elastic/elasticsearch","295051ee8c05b66df931a2605ce7d916407b98d6",3,"2017-04-26 08:00:03-04:00","Add a short-lived token based access mechanism
(elastic/x-pack-elasticsearch#1029)  This commit
adds a token based access mechanism that is a
subset of the OAuth 2.0 protocol. The  token
mechanism takes the same values as a OAuth 2
standard (defined in RFC 6749 and RFC 6750),  but
differs in that we use XContent for the body
instead of form encoded values. Additionally, this
PR provides a mechanism for expiration of a token;
this can be used to implement logout
functionality that prevents the token from being
used again.    The actual tokens are encrypted
using AES-GCM, which also provides authentication.
The key for  encryption is derived from a salt
value and a passphrase that is stored on each node
in the  secure settings store. By default, the
tokens have an expiration time of 20 minutes and
is  configurable up to a maximum of one hour.
Relates elastic/x-pack-elasticsearch#8  Original
commit: elastic/x-pack-elasticsearch@3d201ac2bfa2c
63b2e918fe9f8a0451baa82de9c
",167334,1675,23707,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2212","elastic/elasticsearch","149629fec657e9948488195087f30583cd561f11",2,"2017-04-26 21:45:49+02:00","Cross Cluster Search: propagate original indices
per cluster (#24328)  In case of a Cross Cluster
Search, the coordinating node should split the
original indices per cluster, and send over to
each cluster only its own set of original indices,
rather than the set taken from the original search
request which contains all the indices.    In
fact, each remote cluster should not be aware of
the indices belonging to other remote clusters.
",535645,5236,174621,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2213","elastic/elasticsearch","35f78d098a45cee6b26998a8d0f11343ca67dada",4,"2017-04-28 09:34:31+02:00","Separate publishing from applying cluster states
(#24236)  Separates cluster state publishing from
applying cluster states:    - ClusterService is
split into two classes MasterService and
ClusterApplierService. MasterService has the
responsibility to calculate cluster state updates
for actions that want to change the cluster state
(create index, update shard routing table, etc.).
ClusterApplierService has the responsibility to
apply cluster states that have been successfully
published and invokes the cluster state appliers
and listeners.  - ClusterApplierService keeps
track of the last applied state, but MasterService
is stateless and uses the last cluster state that
is provided by the discovery module to calculate
the next prospective state. The ClusterService
class is still kept around, which now just
delegates actions to ClusterApplierService and
MasterService.  - The discovery implementation is
now responsible for managing the last cluster
state that is used by the consensus layer and the
master service. It also exposes the initial
cluster state which is used by the
ClusterApplierService. The discovery
implementation is also responsible for adding the
right cluster-level blocks to the initial state.
- NoneDiscovery has been renamed to TribeDiscovery
as it is exclusively used by TribeService. It adds
the tribe blocks to the initial state.  -
ZenDiscovery is synchronized on state changes to
the last cluster state that is used by the
consensus layer and the master service, and does
not submit cluster state update tasks anymore to
make changes to the disco state (except when
becoming master).    Control flow for cluster
state updates is now as follows:    - State
updates are sent to MasterService  - MasterService
gets the latest committed cluster state from the
discovery implementation and calculates the next
cluster state to publish  - MasterService submits
the new prospective cluster state to the discovery
implementation for publishing  - Discovery
implementation publishes cluster states to all
nodes and, once the state is committed, asks the
ClusterApplierService to apply the newly committed
state.  - ClusterApplierService applies state to
local node.
",536092,5240,174799,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2214","elastic/elasticsearch","c62f6f81770ff5b7ec57fadaedce03a77528a7f1",2,"2017-05-02 10:12:46+02:00","Watcher: Distributed watch execution
(elastic/x-pack-elasticsearch#544)  The
distribution of watches now happens on the node
which holds the  watches index, instead of on the
master node. This requires several  changes to the
current implementation.    1. Running on shards
and replicas     In order to run watches on the
nodes with the watches index on its     primaries
and replicas. To ensure that watches do not run
twice, there is     a logic which checks the local
shards, runs a murmurhash on the id and     runs
modulo against the number of shards and replicas,
this is the way to     find out, if a watch should
run local. Reloading happens  2. Several master
node actions moved to a HandledTransportAction, as
they     are basically just aliases for indexing
actions, among them the     put/delete/get watch
actions, the acknowledgement action, the
de/activate     actions  3. Stats action moved to
a broadcast node action, because we potentially
have to query every node to get watcher statistics
4. Starting/Stopping watcher now is a master node
action, which updates     the cluster state and
then listeners acts on those. Because of this
watches     can be running on two systems, if you
those have different cluster state     versions,
until the new watcher state is propagated  5.
Watcher is started on all nodes now. With the
exception of the ticker     schedule engine most
classes do not need a lot of resources while
running.     However they have to run, because of
the execute watch API, which can hit     any node
- it does not make sense to find the right shard
for this watch     and only then execute (as this
also has to work with a watch, that has not
been stored before)  6. By using a indexing
operation listener, each storing of a watch now
parses the watch first and only stores on
successful parsing  7. Execute watch API now uses
the watcher threadpool for execution  8. Getting
the number of watches for the stats now simply
queries the     different execution engines, how
many watches are scheduled, so this is     not
doing a search anymore    There will be follow up
commits on this one, mainly to ensure BWC
compatibility.  Original commit: elastic/x-pack-el
asticsearch@0adb46e6589d4ec410739105dc09a26256f51a
98
",168586,1679,24015,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2215","elastic/elasticsearch","6adf4fd3aff3c92c84ba27e433b665e5c5357259",7,"2017-05-04 13:38:50+10:00","Role Mapping API (elastic/x-pack-
elasticsearch#925)  This introduces a role-mapping
API to X-Pack security.    Features:  - A
`GET`/`PUT`/`DELETE` API at
`/_xpack/security/role_mapping/`  - Role-mappings
are stored in the `.security` index   - A custom
expression language (in JSON) for expressing the
mapping rules   - Supported in LDAP/AD and PKI
realms  - LDAP realm also supports loading
arbitrary meta-data (which can be used in the
mapping rules)  - A CompositeRoleMapper unifies
roles from the existing file based mapper, and the
new API based mapper.  - Usage stats for native
role mappings   Original commit: elastic/x-pack-el
asticsearch@d9972ed1da4ded284cf7557ff3c5e5d3eeaeae
ce
",170601,1714,24503,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2216","elastic/elasticsearch","2290b93aa3cc4b8491d2a08ba300fd6d84b51434",1,"2017-05-04 11:38:52+01:00","[ML] Ignore interim results during renormalization
(elastic/x-pack-elasticsearch#1298)  relates
elastic/x-pack-elasticsearch#1193  Original
commit: elastic/x-pack-elasticsearch@6f5e354bddb15
12265de096edc9a9fc33ce08404
",170678,1714,24506,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2217","elastic/elasticsearch","977016ba2503648af98be9aa831b4107bf6f1d1c",1,"2017-05-04 16:29:35+02:00","Do not index `_type` when there is at most one
type. (#24363)  This change makes `_type` behave
pretty much like `_index` when
`index.mapping.single_type` is true.
",537122,5242,175114,"Adrien Grand","jpountz@gmail.com","GitHub","noreply@github.com"
"2218","elastic/elasticsearch","1907c46689d62b60b7b67e0a3b0fdfd0ec3397ca",2,"2017-04-21 15:28:52-06:00","Refactor UpdateHelper into unit-testable pieces
This starts breaking up the `UpdateHelper.prepare`
method so that each piece can be individually unit
tested. No actual functionality has changed.  Note
however, that I did add a TODO about `ctx.op`
leniency, which I'd love to remove as a separate
PR if desired.
",537473,5243,175186,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"2219","elastic/elasticsearch","743217a4309dbe11a0c6b597cd3eedf5156d78bc",5,"2017-05-10 15:48:40-04:00","Enhances get snapshots API to allow retrieving
repository index only (#24477)  Currently, the get
snapshots API (e.g.
/_snapshot/{repositoryName}/_all)  provides
information about snapshots in the repository,
including the  snapshot state, number of shards
snapshotted, failures, etc.  In order  to provide
information about each snapshot in the repository,
the call  must read the snapshot metadata blob
(`snap-{snapshot_uuid}.dat`) for  every snapshot.
In cloud-based repositories, this can be
expensive,  both from a cost and performance
perspective.  Sometimes, all the user  wants is to
retrieve all the names/uuids of each snapshot, and
the  indices that went into each snapshot, without
any of the other status  information about the
snapshot.  This minimal information can be
retrieved from the repository index blob
(`index-N`) without needing to  read each snapshot
metadata blob.    This commit enhances the get
snapshots API with an optional `verbose`
parameter.  If `verbose` is set to false on the
request, then the get  snapshots API will only
retrieve the minimal information about each
snapshot (the name, uuid, and indices in the
snapshot), and only read  this information from
the repository index blob, thereby giving users
the option to retrieve the snapshots in a
repository in a more  cost-effective and efficient
manner.    Closes #24288
",539856,5255,175649,"Ali Beyad","ali@elastic.co","GitHub","noreply@github.com"
"2220","elastic/elasticsearch","e36e2c604dc4307ea6de3c060cc9d0a3433041cd",2,"2017-05-15 12:00:15+01:00","[ML] Write updated model snapshot to its original
index (elastic/x-pack-elasticsearch#1415)  When we
update a model snapshot we need to write it back
to  the exact index where we read it from. This is
necessary  for rollover as otherwise we would end
up with two different  versions of the same
snapshot.    Relates elastic/x-pack-
elasticsearch#827  Original commit:
elastic/x-pack-elasticsearch@b5d1ab38a7974d81c6eae
dd1a623de711f9be91b
",171464,1714,24674,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2221","elastic/elasticsearch","bd5aee8cfa92dbd15980ce004710c7b9222fb8f2",1,"2017-05-15 07:47:42-04:00","Split disruption test suite  The disruption tests
sit in a single test suite which causes these
tests  to be single-threaded. We can split this
test suite into multiple suites  (logically, of
course) enabling them to be run in parallel
reducing the  total run time of all integration
tests in core. This commit splits the  discovery
with service disruptions test suite into three
suites   - master disruptions   - discovery
disruptions   - cluster disruptions    The last
one could probably be better named, it is meant to
represent  performing actions in the cluster
(indexing, failing a shard, etc.)  while a
disruption is taking place.    Relates #24662
",540986,5269,176115,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2222","elastic/elasticsearch","dda456fb7606933afc637b5124bf1bf4ce6fd494",1,"2017-05-16 13:28:52+01:00","[ML] Add job version (elastic/x-pack-
elasticsearch#1437)  relates elastic/x-pack-
elasticsearch#1396  Original commit:
elastic/x-pack-elasticsearch@3148c76d7fd641822acdf
cfa4ef27e963c214137
",171641,1714,24712,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2223","elastic/elasticsearch","1bb7651dba5b991da4195019ae285513277c2d7c",1,"2017-05-18 18:09:20+01:00","[ML] Refactor filters API to not use _type
(elastic/x-pack-elasticsearch#1483)  - Removes
dependence on _type for filters.  - Changes the
put filter API to take the id in the URI  -
Prepares .ml-meta index to be able to host more
types in future    Relates elastic/x-pack-
elasticsearch#668   Original commit:
elastic/x-pack-elasticsearch@d4cffa9382faabb2493d1
34c01a55cc05106e20f
",171907,1715,24730,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2224","elastic/elasticsearch","15e53280dca638a85251f57cae29c5646000c564",3,"2017-06-01 12:00:46+01:00","[ML] Allow datafeed to start when job is opening
(elastic/x-pack-elasticsearch#1611)  The goal of
this change is to allow datafeeds to start  when
the job is in the opening state. This makes the
API  more async and it allows clients like the ML
UI to open a  job and start its datafeed without
having to manage the  complexity of dealing with
timeouts due to the job taking  time to open due
to restoring a large state.    In order to achieve
this, this commit does a number of things:      -
accepts a start datafeed request when the job is
opening    - adds logic to the DatafeedManager to
wait before running the    datafeed task until the
job is opened    - refactord the datafeed node
selection logic into its own class    - splitd
selection issues in critical and non-critical with
regard    to creating the datafeed task    -
refactord the unit tests to make simpler to write
& understand    - adds unit tests for added and
modified functionality    - changes the response
when the datafeed cannot be started to    be a
conflict exception    relates elastic/x-pack-
elasticsearch#1535  Original commit:
elastic/x-pack-elasticsearch@c83196155d93d522d25ae
19fcdea121bbabf7945
",172606,1720,24906,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2225","elastic/elasticsearch","c2575288d8a674e9afd37d3988ab80a1fcff9487",1,"2017-06-06 13:27:23+01:00","[ML] Account for the possibility of no ML metadata
existing (elastic/x-pack-elasticsearch#1648)  We
try to install empty ML metadata as soon as
possible after startup  if none exists.  However,
this still leaves a short gap when the cluster  is
active with no ML metadata.  To avoid problems,
functions that use  the ML metadata should treat
this situation as equivalent to having  empty ML
metadata.    relates elastic/x-pack-
elasticsearch#1643  Original commit:
elastic/x-pack-elasticsearch@8f0e00cda8a64e8876c12
3b73ad37ae9a465e170
",173230,1720,24941,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2226","elastic/elasticsearch","e5ee80c2924b97cab68e0daa3297a554071e8a88",4,"2017-06-06 14:29:52-04:00","[Monitoring] Upgrade Indices to remove usage of
_type (elastic/x-pack-elasticsearch#1616)  This is
just the culmination of all of the minor PRs
associated with 1068. It will:    - Drop the
`.monitoring-data-N` index  - Drop use of `_type`
in all cases (replaced by `doc` and a new `type`
field)  - Drop the API version from the template
name (e.g., instead of `.monitoring-es-6` we now
use `.monitoring-es`).  - Change API version to
`-6-` from `-2-`.  - Both exporters handle
versioned resources (templates, pipelines, and
watches)  - HTTP exporters will optionally (true
by default) publish placeholders for the old, `-2`
templates.    When this is backported, it will
need to:    - Change `index_patterns` to
`template` within the templates.  - Downgrade the
version requirements for the templates, pipeline,
and watches _and_ the HTTP exporter itself (all
require 6.0)    This is a companion to the feature
branch in X-Pack Kibana elastic/x-pack-
kibana/pull/1318 and they need to be merged at the
same time.  Original commit: elastic/x-pack-elasti
csearch@6031cfffa4ef5d93f2a3bcc5663d432232c41d4b
",174064,1719,25218,"Chris Earle","pickypg@users.noreply.github.com","GitHub","noreply@github.com"
"2227","elastic/elasticsearch","a8ea2f0df48f180401c0d0af840cd30936ebeda4",1,"2017-06-08 10:19:38+02:00","Leverage scorerSupplier when applicable. (#25109)
The `scorerSupplier` API allows to give a hint to
queries in order to let them  know that they will
be consumed in a random-access fashion. We should
use this  for aggregations, function_score and
matched queries.
",550082,5348,178376,"Adrien Grand","jpountz@gmail.com","GitHub","noreply@github.com"
"2228","elastic/elasticsearch","36a5cf8f35e5cbaa1ff857b5a5db8c02edc1a187",1,"2017-06-08 12:10:46+02:00","Automatically early terminate search query based
on index sorting (#24864)  This commit refactors
the query phase in order to be able  to
automatically detect queries that can be early
terminated.  If the index sort matches the query
sort, the top docs collection is early terminated
on each segment and the computing of the total
number of hits that match the query is delegated
to a simple TotalHitCountCollector.  This change
also adds a new parameter to the search request
called `track_total_hits`.  It indicates if the
total number of hits that match the query should
be tracked.  If false, queries sorted by the index
sort will not try to compute this information and
and will limit the collection to the first N
documents per segment.  Aggregations are not
impacted and will continue to see every document
even when the index sort matches the query sort
and `track_total_hits` is false.    Relates #6720
",550754,5353,178556,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2229","elastic/elasticsearch","4a8c09c5f143e584b7d51a510f15a61cd3f59560",2,"2017-06-08 10:19:06-04:00","Make randomVersionBetween work with unreleased
versions (#25042)  Test: randomVersionBetween
works with unreleased    Modifies
randomVersionBetween so that it works with
unreleased  versions. This should make switching a
version from unreleased  to released much simpler.
",550789,5353,178569,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2230","elastic/elasticsearch","a68fb27a23882dd1ced249a160e641dc847070c1",2,"2017-06-27 13:15:11-05:00","Upgrade security index to use only one (the
default) index type (elastic/x-pack-
elasticsearch#1780)  The .security index used
several different types to differentiate the
documents added to the index (users, reserved-
users, roles, etc).  Since  types are deprecated
in 6.x, this commit changes the .security index
access layer to only use a single type and have
all documents in the  index be of that single
type.  To differentiate documents that may have
the same id (e.g. the same user name and role
name), the appropriate  type of the document is
prepended to the id.  For example, a user named
""jdoe"" will now have the document id ""user-jdoe"".
This commit also ensures that any native realm
security index operations  that lead to auto
creation of the security index first go through
the process  of creating the internal security
index (.security-v6) and creating the alias
.security to point to the internal index.
Lastly, anytime the security index is accessed
without having been  upgraded, an exception is
thrown notifying the user to use the  upgrade API
to upgrade the security index.  Original commit:
elastic/x-pack-elasticsearch@cc0a474aedcf729ebd57c
33e08b41ffdd1f21e60
",178141,1750,25805,"Ali Beyad","ali@elastic.co","Igor Motov","igor@motovs.org"
"2231","elastic/elasticsearch","5a4a47332c5a9a21531eb29c3ab4fd264e7fcf36",1,"2017-06-28 15:48:47+02:00","Use a single method to update shard state  This
commit refactors index shard to provide a single
method for  updating the shard state on an
incoming cluster state update.    Relates #25431
",554952,5371,179506,"Yannick Welsch","yannick@welsch.lu","Jason Tedor","jason@tedor.me"
"2232","elastic/elasticsearch","3518e313b81564d2868c834111d716997dd86033",1,"2017-06-29 11:35:28+02:00","Unify the result interfaces from get and search in
Java client (#25361)  As GetField and
SearchHitField have the same members, they have
been unified into  DocumentField.    Closes #16440
",557954,5416,180575,"olcbean","olcbean@yahoo.com","Christoph Büscher","christoph@elastic.co"
"2233","elastic/elasticsearch","15f9b1ed9c07207bc1d19a1e06da5d40acff0831",1,"2017-07-05 11:33:42+01:00","[ML] Impove mechanism for ignoring maintenance
windows (elastic/x-pack-elasticsearch#1914)
Currently, the autodetect process has an
`ignoreDowntime`  parameter which, when set to
true, results to time being  skipped over to the
end of the bucket of the first data  point
received. After that, skipping time requires
closing  and opening the job. With regard to
datafeeds, this does not  work well with real-time
requests which use the advance-time  API in order
to ensure results are created for data gaps.
This commit improves this functionality by making
it more  flexible and less ambiguous.    - flush
API now supports skip_time parameter which  sends
a control message to the autodetect process
telling it to skip time to a given value  - the
flush API now also returns the
last_finalized_bucket_end  time which allows
clients to resume data searches correctly  - the
datafeed start API issues a skip_time request when
the  given start time is after the resume point.
It then resumes  the search from the
last_finalized_bucket_end time.    relates
elastic/x-pack-elasticsearch#1913     Original
commit: elastic/x-pack-elasticsearch@caa5fe801621a
8bf628e9a0cffadebcbdd145c98
",178710,1755,25862,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2234","elastic/elasticsearch","5762bce4b822c40ebfa5560f0b090af5619af6ab",1,"2017-07-07 10:15:52-04:00","Enable cross-setting validation  This commit
introduces a framework for settings validation and
enables  cross-setting validation.    Relates
#25560
",560201,5419,181159,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2235","elastic/elasticsearch","e4c8851a24a30d774b7cdf469138cef7f16b5d6a",2,"2017-07-13 14:24:08+10:00","Convert Realm.authenticate to provide a richer
result (elastic/x-pack-elasticsearch#1932)  This
allows for messages to be returned, and
distinguishes between 4 different results:  - I
have authenticated the user  - I don't know how to
authenticate that user. Try another realm.  - I
tried to authenticate the user, but failed. Try
another realm.  - I tried to authenticate the
user, but failed. Fail the authentication attempt.
Original commit: elastic/x-pack-elasticsearch@f796
949cfbe1232744a346df012d181a63070ef9
",180693,1764,26085,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2236","elastic/elasticsearch","c753ddf7f25e8947023901a4433a8b045d03a585",3,"2017-07-13 23:45:00+10:00","Enable TLS trust restrictions by subject
alternative name  (elastic/x-pack-
elasticsearch#1919)  Optional restrictions can be
applied on top of an existing certificate trust
scheme (PEM CAs, JKS TrustStore etc).  The
restrictions reduce the set of certificate that
would be otherwise trusted.    In this commit, the
only supported restrictions are to filter by the
certificate's SubjectAlternativeNames that are
tagged as ""other name"" with an object-identifier
of ""cn""   Original commit: elastic/x-pack-elastics
earch@c6105a47dfa36ff11588dcb0007e90e16fb671dd
",181135,1768,26144,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2237","elastic/elasticsearch","8f0b357651fe39ae48128493791ed027064eb63a",1,"2017-07-14 13:52:53+02:00","Let primary own its replication group (#25692)
Currently replication and recovery are both
coordinated through the latest cluster state
available on the ClusterService as well as through
the GlobalCheckpointTracker (to have consistent
local/global checkpoint information), making it
difficult to understand the relation between
recovery and replication, and requiring some
tricky checks in the recovery code to coordinate
between the two. This commit makes the primary the
single owner of its replication group, which
simplifies the replication model and allows to
clean up corner cases we have in our recovery
code. It also reduces the dependencies in the
code, so that neither RecoverySourceXXX nor
ReplicationOperation need access to the latest
state on ClusterService anymore. Finally, it gives
us the property that in-sync shard copies won't
receive global checkpoint updates which are above
their local checkpoint (relates #25485).
",560204,5421,181413,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2238","elastic/elasticsearch","41ea8fdcec064b5920a1ae392974fa6c51e9aef6",2,"2017-07-17 19:10:46+02:00","Picks offset source for the unified highlighter
directly from the es mapping (#25747)  This commit
changes how the offset source is picked for each
field using the es mapping rather than the
underlying Lucene field infos.  It's mandatory for
large mappings where field infos retrieval can be
costly (the global field infos is merged for each
highlighted field in every hit by the Lucene
impl).    Fixes #25699
",560616,5421,181478,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2239","elastic/elasticsearch","b302ff32e82e1d230340e80fb92fc1ccfd6a7dc7",2,"2017-07-24 10:23:06-04:00","[Monitoring] Remove BWC Layer for Marvel (2.3 -
2.4) in 6.0 (elastic/x-pack-elasticsearch#1990)
This removes all BWC code that assisted in reading
Marvel indices in 6.0.  Original commit:
elastic/x-pack-elasticsearch@253fbf9a73e242058f44d
64866c8cc47d436b6fc
",181016,1772,26057,"Chris Earle","pickypg@users.noreply.github.com","GitHub","noreply@github.com"
"2240","elastic/elasticsearch","0b5909fc65c84407bf9d2608353e2dad1cfe4135",3,"2017-08-08 18:36:22+02:00","Watcher: Stop swallowing exceptions, always return
them instead of message (elastic/x-pack-
elasticsearch#1933)  It is really hard to debug
some issues with watcher, when only the
e.getMessage() is returned as failure reasons
instead of the whole  stack trace.    This commit
gets rid of ExceptionsHelper.detailedMessage(e)
and always  returns the whole exception.    This
commit also extends the watch history to have all
fields named  error be treated like an object to
be sure they do not get  indexed. No matter where
it's placed in the hierarchy    In addition a few
Field interface classes were removed, that only
contained parse fields.    relates elastic/x-pack-
elasticsearch#1816  Original commit:
elastic/x-pack-elasticsearch@b2ce680139d1e21ed887f
7d113f4c253ab70c6d1
",181619,1772,26088,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2241","elastic/elasticsearch","85937c6e78dd2f935d9fe28a2fa45bf49862d4fa",1,"2017-08-08 17:48:03-04:00","Fix SQL's DatabaseMetaData (elastic/x-pack-
elasticsearch#2214)  It was failing because it was
missing config needed to properly  handle time
zones.  Original commit: elastic/x-pack-elasticsea
rch@1166ea74750d8a2a9d14b3ef0ae156c2e54462d0
",204466,2288,30356,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2242","elastic/elasticsearch","7e3cd6a01931a95bfad785490f3319ed79f258f4",1,"2017-08-11 08:25:25-07:00","reindex: automatically choose the number of slices
(#26030)  In reindex APIs, when using the `slices`
parameter to choose the number of slices, adds the
option to specify `slices` as ""auto"" which will
choose a reasonable number of slices. It uses the
number of shards in the source index, up to a
ceiling. If there is more than one source index,
it uses the smallest number of shards among them.
This gives users an easy way to use slicing in
these APIs without having to make decisions about
how to configure it, as it provides a good-enough
configuration for them out of the box. This may
become the default behavior for these APIs in the
future.
",567534,5450,182495,"Andy Bristol","andy.bristol@elastic.co","GitHub","noreply@github.com"
"2243","elastic/elasticsearch","44857d71b325f8542f5454aed66cb540182c5e4f",1,"2017-08-17 14:54:31+01:00","Make AllocatedPersistentTask members volatile
(elastic/x-pack-elasticsearch#2297)  These members
are default initialized on contruction and then
set by the  init() method.  It's possible that
another thread accessing the object  after init()
is called could still see the null/0 values,
depending on how  the compiler optimizes the code.
Original commit: elastic/x-pack-elasticsearch@6681
21e2747bb637c50baa23bdcf46b70b33effa
",181569,1770,26089,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2244","elastic/elasticsearch","b3edd11aa01fec1f5bb08c0d2c90513016dcab15",4,"2017-08-25 13:46:57-04:00","Allow plugins to plug rescore implementations
(#26368)  This allows plugins to plug rescore
implementations into  Elasticsearch. While this is
a fairly expert thing to do I've  done my best to
point folks to the QueryRescorer as one that at
least documents the tradeoffs that it makes. I've
attempted to  limit the API surface area by
removing `SearchContext` from the  exposed
interface, instead exposing just the IndexSearcher
and  `QueryShardContext`. I also tried to make
some of the class names  more consistent and do
some general cleanup while I was there.    I
entertained the notion of moving the
`QueryRescorer` to module.  After all, it'd be a
wonderful test to prove that you can plug  rescore
implementation into Elasticsearch if the only
built in  rescore implementation is in the module.
But I decided against it  because the new module
would require a client jar and it'd require
moving some more things around. I think if we
really want to do  it, we should do it as a
followup.    I did, on the other hand, create an
""example"" rescore plugin which  should both be a
nice example for anyone wanting to plug in their
own rescore implementation and servers as a good
integration test  to make sure that you can indeed
plug one in.    Closes #26208
",568083,5455,182359,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2245","elastic/elasticsearch","c3da66d021b56aa5903037a13f1090591dcc92db",9,"2017-08-30 20:55:11-06:00","Implement adaptive replica selection (#26128)  *
Implement adaptive replica selection    This
implements the selection algorithm described in
the C3 paper for  determining which copy of the
data a query should be routed to.    By using the
service time EWMA, response time EWMA, and queue
size EWMA we  calculate the score of a node by
piggybacking these metrics with each search
request.    Since Elasticsearch lacks the
""broadcast to every copy"" behavior that Cassandra
has (as mentioned in the C3 paper) to update
metrics after a node has been  highly weighted,
this implementation adjusts a node's response
stats using the  average of the its own and the
""best"" node's metrics. This is so that a long GC
or other activity that may cause a node's rank to
increase dramatically does not  permanently keep a
node from having requests routed to it, instead it
will  eventually lower its score back to the realm
where it is a potential candidate  for new
queries.    This feature is off by default and can
be turned on with the dynamic setting
`cluster.routing.use_adaptive_replica_selection`.
Relates to #24915, however instead of `b=3` I used
`b=4` (after benchmarking)    * Randomly use
adaptive replica selection for internal test
cluster    * Use an action name *prefix* for
retrieving pending requests    * Add unit test for
replica selection    * don't use adaptive replica
selection in SearchPreferenceIT    * Track client
connections in a SearchTransportService instead of
TransportService    * Bind `entry` pieces in local
variables    * Add javadoc link to C3 paper and
javadocs for stat adjustments    * Bind entry's
key and value to local variables    * Remove
unneeded actionNamePrefix parameter    * Use
conns.longValue() instead of cached Long    * Add
comments about removing entries from the map    *
Pull out bindings for `entry` in
IndexShardRoutingTable    * Use .compareTo instead
of manually comparing    * add assert for
connections not being null and gte to 1    * Copy
map for pending search connections instead of
""live"" map    * Increase the number of pending
search requests used for calculating rank when
chosen    When a node gets chosen, this increases
the number of search counts for the  winning node
so that it will not be as likely to be chosen
again for  non-concurrent search requests.    *
Remove unused HashMap import    * Rename rank ->
rankShardsAndUpdateStats    * Rename
rankedActiveInitializingShardsIt ->
activeInitializingShardsRankedIt    * Instead of
precalculating winning node, use ""winning"" shard
from ranked list    * Sort null ranked nodes
before nodes that have a rank
",568121,5450,182305,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2246","elastic/elasticsearch","1ca0b5e9e46e29b884a32b45f52fb08d07f7cbf2",1,"2017-09-14 21:25:02+03:00","Introduce a History UUID as a requirement for ops
based recovery  (#26577)  The new ops based
recovery, introduce as part of  #10708, is based
on the assumption that all operations below the
global checkpoint known to the replica do not need
to be synced with the primary. This is based on
the guarantee that all ops below it are available
on primary and they are equal. Under normal
operations this guarantee holds. Sadly, it can be
violated when a primary is restored from an old
snapshot. At the point the restore primary can
miss operations below the replica's global
checkpoint, or even worse may have total different
operations at the same spot. This PR introduces
the notion of a history uuid to be able to capture
the difference with the restored primary (in a
follow up PR).    The History UUID is generated by
a primary when it is first created and is synced
to the replicas which are recovered via a file
based recovery. The PR adds a requirement to ops
based recovery to make sure that the history uuid
of the source and the target are equal. Under
normal operations, all shard copies will stay with
that history uuid for the rest of the index
lifetime and thus this is a noop. However, it
gives us a place to guarantee we fall back to file
base syncing in special events like a restore from
snapshot (to be done as a follow up) and when
someone calls the truncate translog command which
can go wrong when combined with primary recovery
(this is done in this PR).    We considered in the
past to use the translog uuid for this function
(i.e., sync it across copies) and thus avoid
adding an extra identifier. This idea was rejected
as it removes the ability to verify that a
specific translog really belongs to a specific
lucene index. We also feel that having a history
uuid will serve us well in the future.
",570546,5453,182692,"Boaz Leskes","b.leskes@gmail.com","GitHub","noreply@github.com"
"2247","elastic/elasticsearch","34bd72e69b4f0ff68b28fda99adcb3971bb94784",2,"2017-09-21 09:36:03+02:00","[Monitoring] Remove monitoring resolvers
(elastic/x-pack-elasticsearch#2566)  Now all
monitoring documents are indexed in timestamped
indices dedicated   to each product, the old
monitoring's resolvers and all the associated
plumbing   can be removed from the Elasticsearch
monitoring plugin.    This pull request merges the
feature branch feature/monitoring-summer-cleanup
into master. All commits have been independently
reviewed as part of elastic/x-pack-
elasticsearch#2226:    * [Monitoring] Clean up
monitoring doc (elastic/x-pack-elasticsearch#2208)
* [Monitoring] Remove ClusterStatsResolver
(elastic/x-pack-elasticsearch#2209)  *
[Monitoring] Remove IndexRecoveryResolver
(elastic/x-pack-elasticsearch#2229)  *
[Monitoring] Remove JobStatsResolver
(elastic/x-pack-elasticsearch#2230)  *
[Monitoring] Remove ShardsResolver
(elastic/x-pack-elasticsearch#2233)  *
[Monitoring] Fix missing instanceof in exporter
bulks  * [Monitoring] Remove NodeStatsResolver
(elastic/x-pack-elasticsearch#2244)  *
[Monitoring] Remove IndexStatsResolver &
IndicesStatsResolver  (elastic/x-pack-
elasticsearch#2247)  * [Monitoring] Remove source
node attributes and add timestamp (elastic/x-pack-
elasticsearch#2285)  * [Monitoring] Remove last
resolver (elastic/x-pack-elasticsearch#2330)  *
[Monitoring] Make MonitoringDoc an abstract class
(elastic/x-pack-elasticsearch#2451)  *
[Monitoring] Fix
TransportMonitoringBulkActionTests  * [Monitoring]
Remove old resolver tests and add a single
integration test (elastic/x-pack-
elasticsearch#2453)    It does not introduce any
new feature, so it could also go in 6.0.
relates elastic/x-pack-elasticsearch#2226
Original commit: elastic/x-pack-elasticsearch@e3d5
cec28ce11eb64c9659a52b47630ab88f62d5
",183928,1761,26248,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2248","elastic/elasticsearch","80593fb23c37b62aff205dfd0a61471f198e7151",1,"2017-10-10 09:07:33+02:00","Watcher: Add execution state to watch status
(elastic/x-pack-elasticsearch#2699)  The execution
state is kind of a global indicator if a watch has
been  running successfully and is used by the
watcher UI.    However this field is only stored
in the watch history but not part of  the watch
status, thus it is not available everywhere. In
order to  simplify the watcher UI this commit also
adds the field to the  watch status which is
stored together with the watch.    It is stored
under the `status.execution_state` field as
`status.state`  is already taken. This is also
reflects with the name of the java class.    The
WatchStatus class does not contain serialization
checks, as this is  intended to be backported to
6.x, where those checks will be added.    Once the
backport is done, the old execution state field
can be fully  deleted from the master branch in
another commit (syncing with Kibana  folks
required).    relates elastic/x-pack-
elasticsearch#2385    * fix doc tests   Original
commit: elastic/x-pack-elasticsearch@26e8f995717b1
216c61fd1a2563c23bc919a37bf
",184405,1772,26424,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2249","elastic/elasticsearch","a6776cef978331161e577968f10074c24a05b42a",9,"2017-10-13 11:18:47+02:00","[Monitoring] Add interval_ms to Monitoring
documents (elastic/x-pack-elasticsearch#2650)
This commit adds a new interval_ms field to the
monitoring documents.   This field indicates the
current collection interval for Elasticsearch or
external monitored systems. The value is indexed
as a long.    Related to elastic/x-pack-
elasticsearch#212  Original commit:
elastic/x-pack-elasticsearch@2ceb20455c2d4eb68f570
c7d709227c0121baf8a
",185215,1780,26486,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2250","elastic/elasticsearch","fcfbdf1f3737d59284bd75e426751d564216a6e1",2,"2017-10-18 06:57:30-06:00","Expose adaptive replica selection stats in
/_nodes/stats API  This exposes the collected
metrics we store for ARS in the nodes stats, as
well as the computed rank of nodes. Each node
exposes its perspective about the cluster.  Here's
an example output (with `?human`):  ```json ...
""adaptive_selection"" : {
""_k6v1-wERxyUd5ke6s-D0g"" : {
""outgoing_searches"" : 0,     ""avg_queue_size"" : 0,
""avg_service_time"" : ""7.8ms"",
""avg_service_time_ns"" : 7896963,
""avg_response_time"" : ""9ms"",
""avg_response_time_ns"" : 9095598,     ""rank"" :
""9.1""   },   ""VJiCUFoiTpySGmO00eWmtQ"" : {
""outgoing_searches"" : 0,     ""avg_queue_size"" : 0,
""avg_service_time"" : ""1.3ms"",
""avg_service_time_ns"" : 1330240,
""avg_response_time"" : ""4.5ms"",
""avg_response_time_ns"" : 4524154,     ""rank"" :
""4.5""   },   ""DHNGTdzyT9iiaCpEUsIAKA"" : {
""outgoing_searches"" : 0,     ""avg_queue_size"" : 0,
""avg_service_time"" : ""2.1ms"",
""avg_service_time_ns"" : 2113164,
""avg_response_time"" : ""6.3ms"",
""avg_response_time_ns"" : 6375810,     ""rank"" :
""6.4""   } } ... ```
",573290,5458,183344,"Lee Hinman","lee@writequit.org","Lee Hinman","lee@writequit.org"
"2251","elastic/elasticsearch","d5451b20371b31c49cb1f93a9af17eede796fd16",1,"2017-11-06 17:55:11-05:00","Die with dignity while merging  If an out of
memory error is thrown while merging, today we
quietly  rewrap it into a merge exception and the
out of memory error is  lost. Instead, we need to
rethrow out of memory errors, and in fact any
fatal error here, and let those go uncaught so
that the node is torn  down. This commit causes
this to be the case.    Relates #27265
",577716,5487,184309,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2252","elastic/elasticsearch","def8c48dcb4c4ae878bd62c8bdb9f0f31be77782",4,"2017-11-13 14:24:07-05:00","[Monitoring] Add ""apm"" to ""stack_stats"" for Phone
Home (elastic/x-pack-elasticsearch#2848)  This
checks if `apm-*` indices exist in the cluster to
try to determine if APM is in use on the
Elasticsearch cluster.  Original commit:
elastic/x-pack-elasticsearch@7f9a9a4eeeb111b7585c7
07eca8c748da5b3e6e5
",188044,1788,26759,"Chris Earle","pickypg@users.noreply.github.com","GitHub","noreply@github.com"
"2253","elastic/elasticsearch","4fe9ac734beea1a72d898f9d1d0320b5a390b0cc",1,"2017-11-24 09:15:54+01:00","Watcher: Store thread context headers in watch
(elastic/x-pack-elasticsearch#2808)  In order to
be able to execute a watch as the user, who stored
the  watch, this commit stores certain headers of
the thread context, that  was used when the watch
was stored.    Upon loading the watch the headers
are loaded and applied for the  following watcher
execution features    * search transform  * search
input  * index action    A special case is the
execute watch API, which overrides the headers
loaded  from the watch with the one of the current
request, so that a user  cannot execute this watch
with other privileges of the user who stored it.
Only the headers ""es-security-runas-user"",
""_xpack_security_authentication"" are  copied for
now, as those are needed for our security
features.    The headers are stored in watch
status in the watch and are not returned by
default,  when the GET Watch API is used. A search
reveals those of course.    relates
elastic/x-pack-elasticsearch#2201  Original
commit: elastic/x-pack-elasticsearch@9803bd51c2510
0d7f4ed4ce8eb48d6d6eff7fbc2
",189072,1790,26894,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2254","elastic/elasticsearch","623d3700f005e55ebe50ddf73513935562f67721",2,"2017-12-01 07:59:45-07:00","Add accounting circuit breaker and track segment
memory usage (#27116)  * Add accounting circuit
breaker and track segment memory usage    This
commit adds a new circuit breaker ""accounting""
that is used for tracking  the memory usage of
non-request-tied memory users. It also adds
tracking for the  amount of Lucene segment memory
used by a shard as a user of the new circuit
breaker.    The Lucene segment memory is updated
when the shard refreshes, and removed when  the
shard relocates away from a node or is deleted. It
should also be noted that  all tracking for
segment memory uses `addWithoutBreaking` so as not
to fail the  shard if a limit is reached.    The
`accounting` breaker has a default limit of 100%
and will contribute to the  parent breaker limit.
Resolves #27044
",585434,5524,185790,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2255","elastic/elasticsearch","84ec47242807f5449edae60591e12c4fd9f55117",2,"2017-12-04 16:33:47+01:00","Include internal refreshes in refresh stats
(#27615)  Today we exclude internal refreshes in
the refresh stats. Yet, it's very much  confusing
to not take these into account. This change
includes internal refreshes  into the stats until
we have a dedicated stats for this.
",585905,5527,185917,"Simon Willnauer","simonw@apache.org","GitHub","noreply@github.com"
"2256","elastic/elasticsearch","628dfaa84379f33827b93e993700251502198d28",2,"2017-12-06 19:57:25+10:00","Add API for SSL certificate information
(elastic/x-pack-elasticsearch#3088)  Exposes the
certificate location (configured path), serial
number, and expiry date    Closes: elastic/x-pack-
elasticsearch#2795   Original commit:
elastic/x-pack-elasticsearch@a0773f6840834645c6ff4
fa0d765704aca373e2f
",189779,1800,26973,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2257","elastic/elasticsearch","5f8a0711f5734d3d841a5ccf3b90a403254d8429",1,"2017-12-15 16:59:29+01:00","Watcher: Set index and type dynamically in index
action (elastic/x-pack-elasticsearch#3264)  The
index action allowed to set the id of a document
dynamically,  however this was not allowed for the
index or the type.    If a user wants to execute a
search, modify the found documents and  index them
back, then this would only work across a single
index and a  single type. This change allows the
watch writer to just take a search  result, read
index and type out of that and configure this as
part of  the index action.    On top of that the
integration tests have been changed to become fast
running unit tests.  Original commit:
elastic/x-pack-elasticsearch@640b085dd4e0f4d8e4903
d391c583878a7932825
",191874,1817,27145,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2258","elastic/elasticsearch","a5e8a221ecf9cbe519049770768218d1626af204",15,"2017-12-18 15:27:44+01:00","Move GlobalCheckpointTracker and remove
SequenceNumbersService (#27837)  This commit moves
GlobalCheckpointTracker from the engine to
IndexShard, where it better fits logically:
Tracking the global checkpoint based on the local
checkpoints of all shards in the replication group
is not a property of the engine, but rather a
property fulfilled by the current primary shard.
The LocalCheckpointTracker on the other hand is
driven by the contents of the local translog. By
moving GlobalCheckpointTracker to IndexShard, it
makes little sense to keep the
SequenceNumbersService class around - it would
only wrap the LocalCheckpointTracker. This commit
therefore removes the class and replaces
occurrences of SequenceNumbersService in the
engine directly by LocalCheckpointTracker.
",593019,5571,187546,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2259","elastic/elasticsearch","8c99a4dc78b1760ba3006c75993b6a42a630e175",2,"2017-12-21 10:18:16+01:00","Watcher: Add refresh parameter to index action
(elastic/x-pack-elasticsearch#3350)  This allows
to configure the refresh parameter to the index
action,  which is either applied to the resulting
index or bulk request.    Relates elastic/apm-
dev#76   Original commit: elastic/x-pack-elasticse
arch@aedb6adc6613a13c00f60009b5eed44aec1fdc02
",193186,1830,27232,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2260","elastic/elasticsearch","01e3db3740c2cb529f50830262e6e9151af4264f",2,"2017-12-21 11:04:56-05:00","[Monitoring] Add Cluster Alert Blacklist
(elastic/x-pack-elasticsearch#3326)  This adds a
traditional blacklist that can be set
[dynamically] at the exporter level to block
specific cluster alerts (watches) from being
created. It goes further and actually removes any
watch that has been created already for the
current cluster.  Original commit: elastic/x-pack-
elasticsearch@1f67bb9501d6de37f74db17af4703125e2c1
0d83
",193312,1830,27254,"Chris Earle","pickypg@users.noreply.github.com","GitHub","noreply@github.com"
"2261","elastic/elasticsearch","368099dcbd29c82e4873cc935e557af4278670c8",1,"2017-12-23 13:19:54+02:00","SQL: Add support for object/inner/dotted fields
(elastic/x-pack-elasticsearch#3368)  * SQL: Add
support for object/inner/dotted fields    Improve
validation when selecting compound fields  Improve
fallback to exact field for text fields
Consolidate various field attributes into one
Consolidate various field HitExtractors into one
Improve grammar for column declaration  Update
response of embedded server  Improve index
validation to allow use of internal indices  Add
clean-up of scroll in case of server errors  By
default thrown an exception on multi-valued fields
Original commit: elastic/x-pack-elasticsearch@45b7
3fe0dc846b75fa97abbe52788f6efa57a80d
",223306,2500,33322,"Costin Leau","costin@users.noreply.github.com","GitHub","noreply@github.com"
"2262","elastic/elasticsearch","220aa734ee19fe114376c764e2fbf41eee93e5c7",6,"2017-12-27 11:31:16-05:00","Migrate actions to plugin core (elastic/x-pack-
elasticsearch#3424)  This commit hacks up the
xpack repo in such a way that it moves all
actions that the transport client uses to plugin
core. It also moves  any classes that those
actions use to plugin core, with a few
exceptions. I tried to split up any classes that
pulled in server side  logic into the client, but
that was not always 100% possible. Consider  this
commit a guide, and since I do not know the
codebase for each  plugin, consider it a best
guess for what should be moved. A few other
things were merged in below.    This commit
extracts the parts of Condition and
AlwaysCondition that are  needed by classes that
will be moved into the client package. The only
odd thing here is that since there are two parent
classes (Condition and  AlwaysCondition) it was
not possible to make AlwaysConditionInteral
extend from AlwaysCondition and still parse a
ConditionInternal object,  which is what the
ConditionFactory expects.    This commit removes
the use of internal users in the User class, and
instead moves them to Authentication, where they
are used.    [insert obligatory chuck norris
karate image here]    ref elastic/x-pack-
elasticsearch#2925  Original commit:
elastic/x-pack-elasticsearch@42d0b72209463d126c338
cebb1a5dace38f79e6a
",194061,1902,27625,"Michael Basnight","mbasnight@gmail.com","GitHub","noreply@github.com"
"2263","elastic/elasticsearch","7180e539def5effb02cb89739eb52603ef2c110b",2,"2018-01-05 08:19:09-05:00","Add getWarmer and getTranslog method to
NodeIndicesStats (#28092)  When calling the node
stats action via the Java API it was not able to
return  information about warmers and translog
even though that is available through   the REST
API. This change adds methods to make the
responses more   consistent.
",594378,5572,187779,"Scott Somerville","scottsom@amazon.com","Christoph Büscher","cbuescher@posteo.de"
"2264","elastic/elasticsearch","ba81321d0dccaffdd5a2297f65582f9756f8433f",2,"2018-01-06 23:08:16+02:00","SQL: Support aliases and indices pattern
(elastic/x-pack-elasticsearch#3438)  Add support
for aliases and indices pattern  Enhance ShowTable
info to differentiate between aliases and indices
Add regex filtering of index names  Handle
security exceptions (in case of no privileges or
no matching)  Original commit: elastic/x-pack-elas
ticsearch@91e3674ca712e1c1c10d8cf097a9b39f8549c55a
",226133,2593,34065,"Costin Leau","costin@users.noreply.github.com","GitHub","noreply@github.com"
"2265","elastic/elasticsearch","ce81a34467f613139b80c7d8d8c408fe87d5b560",3,"2018-01-10 09:41:36-05:00","SQL: Add jdbc mode to REST API (elastic/x-pack-
elasticsearch#3499)  Adds a mode parameter to all
SQL-related requests. The mode parameter is used
for license checks as well as to define the
response content. For now only two modes are
supported plain (default) and jdbc. We will add
other modes in the future as we add more clients.
Relates elastic/x-pack-elasticsearch#3419
Original commit: elastic/x-pack-elasticsearch@b49c
a38d4b8c226583b67d3b2d8a52e69cd3241f
",226475,2595,34114,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2266","elastic/elasticsearch","73f8559fcae9c60396e600827f7a197ec725632c",3,"2018-01-12 17:48:07+00:00","[ML] Update process when filters or calendars are
updated (elastic/x-pack-elasticsearch#3385)
Relates elastic/x-pack-elasticsearch#3325
Original commit: elastic/x-pack-elasticsearch@9da4
973cdad0e9220bd18c22c6cea108d94d68aa
",197597,1920,28058,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2267","elastic/elasticsearch","c75ac319a655f9a2b37c853913ef989e7159f65e",3,"2018-01-12 15:34:17-05:00","Add ability to associate an ID with tasks
(#27764)  Adds support for capturing the X-Opaque-
Id header from a REST request and storing it's
value in the tasks that this request started. It
works for all user-initiated tasks (not only
search).    Closes #23250    Usage:  ```  $ curl
-H ""X-Opaque-Id: imotov"" -H ""foo:bar""
""localhost:9200/_tasks?pretty&group_by=parents""  {
""tasks"" : {      ""7qrTVbiDQKiZfubUP7DPkg:6998"" : {
""node"" : ""7qrTVbiDQKiZfubUP7DPkg"",        ""id"" :
6998,        ""type"" : ""transport"",        ""action""
: ""cluster:monitor/tasks/lists"",
""start_time_in_millis"" : 1513029940042,
""running_time_in_nanos"" : 266794,
""cancellable"" : false,        ""headers"" : {
""X-Opaque-Id"" : ""imotov""        },
""children"" : [          {            ""node"" :
""V-PuCjPhRp2ryuEsNw6V1g"",            ""id"" : 6088,
""type"" : ""netty"",            ""action"" :
""cluster:monitor/tasks/lists[n]"",
""start_time_in_millis"" : 1513029940043,
""running_time_in_nanos"" : 67785,
""cancellable"" : false,            ""parent_task_id""
: ""7qrTVbiDQKiZfubUP7DPkg:6998"",
""headers"" : {              ""X-Opaque-Id"" :
""imotov""            }          },          {
""node"" : ""7qrTVbiDQKiZfubUP7DPkg"",            ""id""
: 6999,            ""type"" : ""direct"",
""action"" : ""cluster:monitor/tasks/lists[n]"",
""start_time_in_millis"" : 1513029940043,
""running_time_in_nanos"" : 98754,
""cancellable"" : false,            ""parent_task_id""
: ""7qrTVbiDQKiZfubUP7DPkg:6998"",
""headers"" : {              ""X-Opaque-Id"" :
""imotov""            }          }        ]      }
}  }  ```
",595899,5579,188031,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2268","elastic/elasticsearch","60d4b7e53e44bd6631cd28443fc9ca0759f1b250",9,"2018-01-17 12:18:44-07:00","Add the ability to refresh tokens obtained via the
API (elastic/x-pack-elasticsearch#3468)  This
commit adds the ability to refresh tokens that
have been obtained by the API using a refresh
token. Refresh tokens are one time use tokens that
are valid for 24 hours. The tokens may be used  to
get a new access and refresh token if the refresh
token has not been invalidated or  already
refreshed.    relates elastic/x-pack-
elasticsearch#2595  Original commit:
elastic/x-pack-elasticsearch@23435eb815635f1356ad1
dd400aa0b44eb6827b5
",199855,1929,28296,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2269","elastic/elasticsearch","21f692c02b7ed56894630102ad23c397da529edd",2,"2018-01-19 10:44:39+00:00","[ML] Further validate calendar_id and add calendar
description (elastic/x-pack-elasticsearch#3624)
relates elastic/x-pack-elasticsearch#3595
Original commit: elastic/x-pack-elasticsearch@fade
97736105cf99954a4b22609848dfea78be4f
",200012,1929,28312,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2270","elastic/elasticsearch","0602d38bd57e7989d45861d867f01de327e53756",1,"2018-01-19 12:09:34-05:00","Split transport implementations into client/server
This commit splits the transport implementations
into components that  can be used client-side (in
the transport client) and server-side (in  the
server). This enables removing security as a
dependency for the  transport client.    Relates
elastic/x-pack-elasticsearch#3635   Original
commit: elastic/x-pack-elasticsearch@e480eb7eb2c43
e96522406c2bcd997e0f42d7f68
",200058,1930,28317,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2271","elastic/elasticsearch","f3ec4a5208febeeca53a145861807a2dc43dac7f",1,"2018-01-19 23:30:17-06:00","Split up xpack plugins into their own modules
(elastic/x-pack-elasticsearch#3643)  Thanks to
some great work by a bunch of amazing people, the
chuck norris xpack split is a go!  Original
commit: elastic/x-pack-elasticsearch@dad98e28f4043
f805907af2ad441908f64ca6c70
",200967,1967,28592,"Michael Basnight","mbasnight@gmail.com","GitHub","noreply@github.com"
"2272","elastic/elasticsearch","47213f56758f9d9f44eac90837665acc4c971b26",7,"2018-01-21 08:43:00+10:00","[Security] Add SAML authentication support
(elastic/x-pack-elasticsearch#3646)  Introduces:
- SAML Realm  - REST & Transport actions to
support SAML single signon / signout  - Tests for
above  - More XML than you ever wanted to see.
Original commit: elastic/x-pack-elasticsearch@b0fe
7bb6528e02de11dce392e498efb8dde150a4
",208011,2027,29533,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2273","elastic/elasticsearch","119b1b5c2b26a6adc2df7a95396da7b2411b5f09",5,"2018-01-22 09:52:57+01:00","Add information when master node left to
DiscoveryNodes' shortSummary() (#28197)  This
commit changes
`DiscoveryNodes.Delta.shortSummary()` in order to
add information to the summary when the master
node left.
",597065,5588,188416,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2274","elastic/elasticsearch","36bd849cd357b9185388a35c7416891831d15d3b",1,"2018-01-24 14:43:23-05:00","SQL: Refactor the type handling (elastic/x-pack-
elasticsearch#3694)  Separates ES types and field
metadata.    Relates to elastic/x-pack-
elasticsearch#3556  Original commit:
elastic/x-pack-elasticsearch@c9601f33904c8b04f763b
ce33f4db5a0d09b9d04
",241090,2651,35917,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2275","elastic/elasticsearch","da7560a079b9ef94a32719c5d7853ebb0d38abe9",1,"2018-01-30 15:47:17+11:00","[Security] Correct DN matches in role-mapping
rules (elastic/x-pack-elasticsearch#3704)  Changes
the behaviour of the role mapping API to perform a
""DistinguishedNameMatch""  when the field is a DN.
This is achieved by moving the responsibility for
defining  the matching rules from the expression
to the data (ExpressionModel)    Because the role
mapping API is used within the SAML realm, which
may or may not be  using DNs, this implementation
assumes that the ""dn"" and ""groups"" should be
compared as DNs if they parse as a DN.  For SAML
this behaviour will generally do the right thing,
as members of the ""groups""  field might be DNs (if
the data is sourced from an LDAP directory) but
often will not be.   Original commit:
elastic/x-pack-elasticsearch@3a4dfbba79c6a6d6d13b9
0b1d22fedd5efbe1fad
",207877,2016,29351,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2276","elastic/elasticsearch","5263b8cc7ee7b1a52880ab98587b88d6c00557b8",3,"2018-02-09 09:19:24-07:00","Remove all instances of the deprecated
`ParseField.match` method (#28586)  This removes
all the server references to the deprecated
`ParseField.match`  method in favor of the method
that passes in the deprecation logger.    Relates
to #28504
",604075,5630,190353,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2277","elastic/elasticsearch","bf1550a0b2b818c489cd6980a49e0adc77e0614c",2,"2018-02-23 17:10:37-05:00","Rollups for Elasticsearch (elastic/x-pack-
elasticsearch#4002)  This adds a new Rollup module
to XPack, which allows users to configure periodic
""rollup jobs"" to pre-aggregate data.  That data is
then available later for search through a special
RollupSearch API, which mimics the DSL and
functionality of regular search.    Rollups are
used to drastically reduce the on-disk footprint
of metric-based data (e.g. timestamped document
with numeric and keyword fields).  It can also be
used to speed up aggregations over large datasets,
since the rolled data will be considerably smaller
and fewer documents to search.    The PR adds
seven new endpoints to interact with Rollups;
create/get/delete job, start/stop job, a
capabilities API similar to field-caps, and a
Rollup-enabled search.  Original commit:
elastic/x-pack-elasticsearch@dcde91aacfa52d2985e39
48cb64392061e2b10c1
",246596,2674,36903,"Zachary Tong","polyfractal@elastic.co","GitHub","noreply@github.com"
"2278","elastic/elasticsearch","79d46d1d177afbe0fe7fc11b4f93c1d280f0b229",3,"2018-02-27 17:49:05+00:00","[ML] Set explicit defaults to AnalysisLimits
(elastic/x-pack-elasticsearch#4015)  Analysis
limits contain settings that affect the resources
used by ML jobs. Those limits always take place.
However,  explictly setting them is not required
as they have reasonable  defaults. For a long time
those defaults lived on the c++ side.  The job
could just not have any explicit limits and that
meant  defaults would be used at the c++ side.
This has the disadvantage  that it is not obvious
to the users what these settings are set to.
Additionally, users might not be aware of the
settings existence.    On top of that, since 6.1,
the default model_memory_limit was lowered  from
4GB to 1GB. For BWC, this meant that jobs where
model_memory_limit  is null, the default of 4GB
applies. Jobs that were created from 6.1  onwards,
contain an explicit setting for
model_memory_limit, which is  1GB unless the user
sets it differently. This adds additional
confusion.    This commit makes analysis limits an
always explicit setting on the job.  Regardless of
whether the user sets custom limits or not, the
job object  (and response) will contain the full
analysis limits values.    The possibilities for
interpretation of missing values are:      - the
entire analysis_limits is null: this may only
happen for jobs    created prior to 6.1. Thus we
set the model_memory_limit to 4GB.    -
analysis_limits are non-null but
model_memory_limit is: this also    may only
happen for jobs prior to 6.1. Again, we set memory
limit to    4GB.    - model_memory_limit is non-
null: this either means the user set an
explicit value or the job was created from 6.1
onwards and it has    the explicit default of 1GB.
We simply keep the given value.    For
categorization_examples_limit the default has
always been 4, so  we fill that in when it's
missing.    Finally, note that we still need to
handle potential null values  for the situation of
a mixed cluster.   Original commit:
elastic/x-pack-elasticsearch@5b6994ef750298a829dd2
995664470cd4cc95e07
",246650,2673,36974,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2279","elastic/elasticsearch","c814e8e60c643efd92c5284dca2ca944a72bb812",5,"2018-02-28 08:04:50-08:00","SQL: Rename testing class  Renamed `RemoteCli` to
`EmbeddedCli` because it now contains an embedded
version of the SQL CLI.  Original commit:
elastic/x-pack-elasticsearch@c88a79a02962b7267fd7f
e031b6a5ed2933d13c8
",246650,2673,36973,"Nik Everett","nik9000@gmail.com","Nik Everett","nik9000@gmail.com"
"2280","elastic/elasticsearch","ae383462a7f406c93e74ab7585fe08d46d7a31cf",1,"2018-03-09 09:54:30-07:00","Modify self-generated basic licenses to not expire
(elastic/x-pack-elasticsearch#3952)  This is
related to elastic/x-pack-elasticsearch#3877. It
modifies self-generated basic licenses to
(practically) never expire. Specifically, self-
generated basic licenses  will be set with an
expiration date 1 year before Long.MAX_VALUE
Additionally, basic licenses with a different
expiration date will be  replaced with a new self-
generated basic licenses at startup.  Original
commit: elastic/x-pack-elasticsearch@de8b34308968b
a2d593a6f2e310437f7d2d4d34e
",247500,2684,37104,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2281","elastic/elasticsearch","7f7ac08447abfde86cf6fe587e10413118a45dc4",1,"2018-03-12 14:39:58-06:00","Add api to start basic license (elastic/x-pack-
elasticsearch#4083)  This is related to
elastic/x-pack-elasticsearch#3877. This commit
adds a route /start_basic that  will self generate
a basic license. The only validation that is
performed is to check that you do not already have
a basic license  installed. Additionally, if you
lose features from switching to a basic  license,
you must acknowledge the changes.  Original
commit: elastic/x-pack-elasticsearch@7b8eeb50b14ec
dfd2d573eb639a9b653311a3e99
",248113,2697,37177,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2282","elastic/elasticsearch","498c110073e0baf14e21c699e1cdbbc7f68bb0a4",1,"2018-03-13 19:28:11-06:00","Add type parameter to start_trial api
(elastic/x-pack-elasticsearch#4102)  This is
related to elastic/x-pack-elasticsearch#3877. This
commit adds a paramer type to the  start_trial
api. This parameter allows the user to pass a type
(trial,  gold, or platinum) of license that will
be generated. No matter what  type is choosen, you
can only generate one per major version.  Original
commit: elastic/x-pack-elasticsearch@b42234cbb5aab
9c2beeb1404d2fc8ff14da7183c
",248252,2698,37206,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2283","elastic/elasticsearch","91401fcb8371c479f8a87299dba8e8a751580f9c",1,"2018-03-16 11:38:18-04:00","[Monitoring] Add ""collection_enabled"" to usage
(elastic/x-pack-elasticsearch#4128)  This adds an
indicator to Monitoring's portion of X-Pack usage
whether or  not collection is actually enabled.
It's no longer enough to have an  exporter defined
by default to know if monitoring is actually
running.  Original commit: elastic/x-pack-elastics
earch@b2eb881d6125b083d523f7e0c859280c98e0fbf7
",249039,2701,37243,"Chris Earle","pickypg@users.noreply.github.com","GitHub","noreply@github.com"
"2284","elastic/elasticsearch","5288235ca3d8ad8437952aa77fd5b89075f21018",1,"2018-03-26 09:51:37+02:00","Optimize the composite aggregation for match_all
and range queries (#28745)  This change refactors
the composite aggregation to add an execution mode
that visits documents in the order of the values
present in the leading source of the composite
definition. This mode does not need to visit all
documents since it can early terminate  the
collection when the leading source value is
greater than the lowest value in the queue.
Instead of collecting the documents in the order
of their doc_id, this mode uses the inverted lists
(or the bkd tree for numerics) to collect
documents  in the order of the values present in
the leading source.  For instance the following
aggregation:    ```  ""composite"" : {    ""sources""
: [      { ""value1"": { ""terms"" : { ""field"":
""timestamp"", ""order"": ""asc"" } } }    ],    ""size"":
10  }  ```  ... can use the field `timestamp` to
collect the documents with the 10 lowest values
for the field instead of visiting all documents.
For composite aggregation with more than one
source the execution can early terminate as soon
as one of the 10 lowest values produces enough
composite buckets. For instance if visiting the
first two lowest timestamp created 10 composite
buckets we can early terminate the collection
since it  is guaranteed that the third lowest
timestamp cannot create a composite key that
compares lower than the one already visited.
This mode can execute iff:   * The leading source
in the composite definition uses an indexed field
of type `date` (works also with `date_histogram`
source), `integer`, `long` or `keyword`.   * The
query is a match_all query or a range query over
the field that is used as the leading source in
the composite definition.   * The sort order of
the leading source is the natural order (ascending
since postings and numerics are sorted in
ascending order only).    If these conditions are
not met this aggregation visits each document like
any other agg.
",610156,5674,191753,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2285","elastic/elasticsearch","8d6832c5ee5298e1befc372ed0b999dfeeeac279",1,"2018-03-27 15:21:11+02:00","Make SearchStats implement Writeable (#29258)
Moves another class over from Streamable to
Writeable. By this,  also some constructors can be
removed or made private.
",610289,5672,191775,"Christoph Büscher","cbuescher@posteo.de","GitHub","noreply@github.com"
"2286","elastic/elasticsearch","13e19e7428568e8a71dd42618bbbdd807881f131",1,"2018-03-28 18:03:34+02:00","Allow _update and upsert to read from the
transaction log (#29264)  We historically removed
reading from the transaction log to get consistent
results from _GET calls. There was also the
motivation that the read-modify-update  principle
we apply should not be hidden from the user. We
still agree on the fact  that we should not hide
these aspects but the impact on updates is quite
significant  especially if the same documents is
updated before it's written to disk and made
serachable.    This change adds back the ability
to read from the transaction log but only for
update calls.  Calls to the _GET API will always
do a refresh if necessary to return consistent
results ie.  if stored fields or DocValues Fields
are requested.    Closes #26802
",611252,5680,192043,"Simon Willnauer","simonw@apache.org","GitHub","noreply@github.com"
"2287","elastic/elasticsearch","74eaba2078dfd7f26331a632dc6575979fe47607",1,"2018-03-28 17:10:50-07:00","moar changes from Tal
",3774,61,4070,"Tal Levy","jubboy333@gmail.com","Tal Levy","jubboy333@gmail.com"
"2288","elastic/elasticsearch","a93c942927d675a9b1450468fc9e344788c3f278",1,"2018-04-06 09:41:14-06:00","Move ObjectParser into the x-content lib (#29373)
* Move ObjectParser into the x-content lib    This
moves `ObjectParser`, `AbstractObjectParser`, and
`ConstructingObjectParser` into the libs/x-content
dependency. This decoupling  allows them to be
used for parsing for projects that don't want to
depend on the  entire Elasticsearch jar.
Relates to #28504
",613523,5684,192293,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2289","elastic/elasticsearch","d755fcfd4bc8ffc1c23210443e14fe1e8ff36f7b",1,"2018-04-09 10:49:29+02:00","Fix date and ip sources in the composite
aggregation (#29370)  This commit fixes the
formatting of the values in the composite
aggregation response. `date` fields should return
timestamp as longs  when used in a `terms` source
and `ip` fields should always be formatted as
strings.  This commit also fixes the parsing of
the `after` key for these field types.  Finally,
this commit disables the index optimization for
the `ip` field and any source that provides a
`missing` value.
",613793,5687,192415,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2290","elastic/elasticsearch","263349f6282d90343f44888a2133e826e5f82fde",2,"2018-04-11 14:58:15-06:00","Decouple TimeValue from Elasticsearch server
classes (#29454)  * Decouple TimeValue from
Elasticsearch server classes    This commit
decouples the `TimeValue` class from the other
server classes. This  is in preperation to move
`TimeValue` into the `elasticsearch-core` jar,
allowing us to use it from projects that cannot
depend on the elasticsearch-core  library.
Relates to #28504
",610198,5667,191832,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2291","elastic/elasticsearch","e5d18ad45cc9530ec4a7f8b0328e8bc65dafc344",1,"2018-04-12 20:20:10+03:00","SQL: GROUP BY use composite instead of terms
aggregation (elastic/x-pack-elasticsearch#4282)
Rewrote the GROUP BY to use composite aggregation
instead of terms   (and everything that comes with
it) but instead rely on composite aggregation
This not only works better but simplifies the code
complexity since  composite is a straight, two-
level tree:    1. root/group-by/composite-keys  2.
(metric) aggregations    This removes a lot of
complexity from all stages that involve creating,
assembling and especially parsing the results.  By
moving to composite agg, the aggregation/GROUP BY
are now pageable  so the consumer/listener had to
be extended to include a dedicated  cursor and
specific (bucket) extractors inline with the
scroll requests.    While at it, also improved the
support for implicit GROUP BY by  formalizing it
(previously it supported only counts and no other
agg).    In addition:  Fixed a JDBC bug that
caused incorrect timeout to be passed  Improved
the returned RowSet a bit and add better naming
Pick up @Nullable move from core  Make sure to
specify the TimeZone for DateTimeHistogram
extraction  Add missing javadoc  To avoid
delegating NamedWriteableRegistry (NWR) and to
keep the scope  clean, SQL writeables now handle
their own serialization, keeping the  boundary
between the Elasticsearch's NWR in place.  Pass
NamedWriteableRegistry only when looking at the
next page  To keep in line with the existing
patter and simplify the code  bureaucracy, the
deserialization happens directly.  Since the
SearchSourceBuilder deserialization happens
explicitly (and  it's otherwise opaque), the
declarative invocation isn't necessary  anymore.
Add a bit more randomization in tests  Original
commit: elastic/x-pack-elasticsearch@f5af046386626
6dcd2cb65bec8ab388cb92dec85
",253668,2732,37883,"Costin Leau","costin@users.noreply.github.com","GitHub","noreply@github.com"
"2292","elastic/elasticsearch","0be443c5bbd4c7eb5776740d8fb7117224124cce",1,"2018-05-01 14:31:23-04:00","REST Client: Add Request object flavored methods
(#29623)  Adds two new methods to `RestClient`
that take a `Request` object. These  methods will
allows us to add more per-request customizable
options  without creating more and more and more
overloads of the `performRequest`  and
`performRequestAsync` methods. These new methods
look like:    ```  Response performRequest(Request
request)  ```    and    ```  void
performRequestAsync(Request request,
ResponseListener responseListener)  ```    This
change doesn't add any actual features but enables
adding things like  per request timeouts and per
request node selectors. This change *does*  rework
the `HighLevelRestClient` and its tests to use
these new `Request`  objects and it does update
the docs.
",868422,8430,230571,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2293","elastic/elasticsearch","df17f85e1416465fb189f123875d2525c9cc7272",1,"2018-05-10 15:27:38+01:00","Remove Discovery.AckListener.onTimeout() (#30514)
The MasterService takes responsibility for
timeouts of the AckListeners that it  creates, and
the rest of the Discovery subsystem is unaware of
these timeouts,  so there's no need for this to
appear in the Discovery.AckListener interface.
Also fix a typo in the name of
DelegatingAckListener.
",871316,8449,231335,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2294","elastic/elasticsearch","cc93131318057f53ef59efe6beceb50e4d139406",1,"2018-05-14 17:36:26+02:00","Forbid expensive query parts in ranking evaluation
(#30151)  Currently the ranking evaluation API
accepts the full query syntax for  the queries
specified in the evaluation set and executes them
via multi  search. This potentially runs costly
aggregations and suggestions too.  This change
adds checks that forbid using aggregations,
suggesters,   highlighters and the explain and
profile options in the queries that are   run as
part of the ranking evaluation since they are
irrelevent in the   context of this API.
",871435,8449,231410,"Christoph Büscher","cbuescher@posteo.de","GitHub","noreply@github.com"
"2295","elastic/elasticsearch","56d32bc8b2c73417df0d3e41206ef128f09558e5",2,"2018-05-14 16:43:29-04:00","SQL: Extract SQL request and response classes
(#30457)  Extracts SQL request and response
classes. This is the first step  towards creation
of a small minimal dependencies jdbc driver.
Relates #29856
",871711,8455,231502,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2296","elastic/elasticsearch","a19df4ab3bad6d209e20434eada4dbd1ee5be651",1,"2018-05-23 14:39:04+02:00","Add a `format` option to `docvalue_fields`.
(#29639)  This commit adds the ability to
configure how a docvalue field should be
formatted, so that it would be possible eg. to
return a date field  formatted as the number of
milliseconds since Epoch.    Closes #27740
",877632,8507,233233,"Adrien Grand","jpountz@gmail.com","GitHub","noreply@github.com"
"2297","elastic/elasticsearch","a8faf9768adb1c8a7426ceea59b776c977beaba8",1,"2018-05-29 19:11:09+03:00","Limit the scope of BouncyCastle dependency
(#30358)  Limits the scope of the runtime
dependency on  BouncyCastle so that it can be
eventually removed.    * Splits functionality
related to reading and generating certificates
and keys in two utility classes so that reading
certificates and  keys doesn't require
BouncyCastle.  * Implements a class for parsing
PEM Encoded key material (which also  adds support
for reading PKCS8 encoded encrypted private keys).
* Removes BouncyCastle dependency for all of our
test suites(except  for the tests that explicitly
test certificate generation) by using  pre-
generated keys/certificates/keystores.
",879751,8535,234168,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2298","elastic/elasticsearch","a0af0e7f1e973e11ac11711740cbac78f3f18f88",2,"2018-05-30 09:20:14+02:00","Rename methods in PersistentTasksService (#30837)
This commit renames methods in the
PersistentTasksService, to   make obvious that the
methods send requests in order to change   the
state of persistent tasks.     Relates to #29608.
",879840,8536,234230,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2299","elastic/elasticsearch","f582418ada24f34edd21c4c98b31b7b55df41f6b",1,"2018-05-30 12:55:31+02:00","Fix missing option serialization after backport
Relates #29465
",880399,8538,234275,"Jim Ferenczi","jimczi@apache.org","Jim Ferenczi","jimczi@apache.org"
"2300","elastic/elasticsearch","b2e48c9fa7b67cb7bbea0d72500332baa2459b92",1,"2018-06-12 12:23:40+03:00","Support RequestedAuthnContext (#31238)  * Support
RequestedAuthnContext    This implements limited
support for RequestedAuthnContext by :  - Allowing
SP administrators to define a list of
authnContextClassRef  to be included in the
RequestedAuthnContext of a SAML Authn Request  -
Veirifying that the authnContext in the incoming
SAML Asertion's  AuthnStatement contains one of
the requested authnContextClassRef  - Only EXACT
comparison is supported as the semantics of
validating  the incoming authnContextClassRef are
deployment dependant and  require pre-established
rules for MINIMUM, MAXIMUM and BETTER    Also adds
necessary AuthnStatement validation as indicated
by [1] and  [2]    [1] https://docs.oasis-
open.org/security/saml/v2.0/saml-core-2.0-os.pdf
3.4.1.4, line 2250-2253  [2] https://kantarainitia
tive.github.io/SAMLprofiles/saml2int.html
[SDP-IDP10]
",886507,8577,236970,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2301","elastic/elasticsearch","992c7889ee83fc3514145d0875ac359010f623ae",3,"2018-06-15 09:26:47+02:00","Uncouple persistent task state and status (#31031)
This pull request removes the relationship between
the state   of persistent task (as stored in the
cluster state) and the status   of the task (as
reported by the Task APIs and used in various
places) that have been confusing for some time
(#29608).    In order to do that, a new
PersistentTaskState interface is added.   This
interface represents the persisted state of a
persistent task.   The methods used to update the
state of persistent tasks are   renamed:
updatePersistentStatus() becomes
updatePersistentTaskState()   and now takes a
PersistentTaskState as a parameter. The
Task.Status type as been changed to
PersistentTaskState in all   places were it make
sense (in persistent task customs in cluster
state and all other methods that deal with the
state of an allocated   persistent task).
",886518,8574,236665,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2302","elastic/elasticsearch","3b70e943eb08f90aa24e9c34033c8ca2a7211239",6,"2018-06-15 08:45:29-07:00","add is-write-index flag to aliases (#30942)  This
commit adds the is-write-index flag for aliases.
It allows requests to set the flag, and responses
to display the flag.  It does not validate and/or
affect any indexing/getting/updating behavior  of
Elasticsearch -- this will be done in a follow-up
PR.
",887287,8577,236774,"Tal Levy","JubBoy333@gmail.com","GitHub","noreply@github.com"
"2303","elastic/elasticsearch","dbc9d602608864f16bf59741114f4c05119b73c6",1,"2018-06-15 22:14:28+02:00","Support for remote path in reindex api (#31290)
Support for remote path in reindex api  Closes
#22913
",887501,8579,236825,"Vladimir Dolzhenko","vladimir.dolzhenko@gmail.com","GitHub","noreply@github.com"
"2304","elastic/elasticsearch","c6cbc99f9c90c75e883393dc6b4691033ab73d72",1,"2018-06-22 15:13:31+01:00","[ML] Add ML filter update API (#31437)  This adds
an api to allow updating a filter:    POST
_xpack/ml/filters/{filter_id}/_update    The
request body may have:    - description: setting a
new description  - add_items: a list of the items
to add  - remove_items: a list of the items to
remove    This commit also changes the PUT filter
api to  error when the filter_id is already used.
As  now there is an api for updating filters, the
put api should only be used to create new ones.
Also, updating a filter results into a
notification  message auditing the change for
every job that is  using that filter.
",891046,8615,238091,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2305","elastic/elasticsearch","f04c579203299bbbb9397609344b59e6f6f8f18f",1,"2018-06-22 21:08:11+02:00","IndexShard should not return null stats (#31528)
IndexShard should not return null stats - empty
stats or AlreadyCloseException if it's closed is
better
",891139,8615,238097,"Vladimir Dolzhenko","vladimir.dolzhenko@gmail.com","GitHub","noreply@github.com"
"2306","elastic/elasticsearch","86ab3a2d1a3bc5f4478d25cd28906915c2ec03fd",1,"2018-06-25 15:59:03+02:00","Reduce number of raw types warnings (#31523)  A
first attempt to reduce the number of raw type
warnings,   most of the time by using the
unbounded wildcard.
",891844,8617,238189,"Christoph Büscher","cbuescher@posteo.de","GitHub","noreply@github.com"
"2307","elastic/elasticsearch","9ac81a13220f3843e18aacd12f64ac4ab71447d8",1,"2018-06-27 18:04:34-06:00","Add Get Snapshots High Level REST API (#31537)
With this commit we add the get snapshots API to
the Java high level  REST client.    Relates
#27205
",893692,8624,238455,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2308","elastic/elasticsearch","9c11bf1e127a488995277eaabf240c0ea3c6d195",12,"2018-07-05 13:14:12+01:00","[ML] Fix calendar and filter updates from non-
master nodes (#31804)  Job updates or changes to
calendars or filters may  result into updating the
job process if it has been  running. To preserve
the order of updates, process  updates are queued
through the UpdateJobProcessNotifier  which is
only running on the master node. All actions
performing such updates must run on the master
node.    However, the CRUD actions for calendars
and filters  are not master node actions. They
have been submitting  the updates to the
UpdateJobProcessNotifier even though  it might
have not been running (given the action was  run
on a non-master node). When that happens, the
update  never reaches the process.    This commit
fixes this problem by ensuring the notifier  runs
on all nodes and by ensuring the process update
action  gets the resources again before updating
the process  (instead of having those resources
passed in the request).    This ensures that even
if the order of the updates  gets messed up, the
latest update will read the latest  state of those
resource and the process will get back  in sync.
This leaves us with 2 types of updates:      1.
updates to the job config should happen on the
master    node. This is because we cannot refetch
the entire job    and update it. We need to know
the parts that have been changed.      2. updates
to resources the job uses. Those can be handled
on non-master nodes but they should be re-fetched
by the    update process action.    Closes #31803
",896749,8644,238931,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2309","elastic/elasticsearch","8ec33b742dc09eebdfba7233d28c61bcb30d5ec5",2,"2018-07-10 07:47:00-07:00","Watcher: Slack message empty text (#31596)  Slack
accepts an empty text or attachments, but not
both. This commit  ensures that both are not empty
when creating a watch.    Closes #30071
Replacing old pull request: #31288
",898978,8666,239479,"albendz","12453997+albendz@users.noreply.github.com","Michael Basnight","mbasnight@gmail.com"
"2310","elastic/elasticsearch","2cfe703299a9955c6eef8a1d38774c9fc63f9dc0",3,"2018-07-12 11:49:06+01:00","[ML] Ensure immutability of MlMetadata (#31957)
The test failure in #31916 revealed that updating
rules on a job was modifying the detectors list
in-place. That meant the old cluster state and the
updated cluster state had no difference and thus
the  change was not propagated to non-master
nodes.    This commit fixes that and also reviews
all of ML  metadata in order to ensure
immutability.    Closes #31916
",900867,8680,239828,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2311","elastic/elasticsearch","4ae4ac08d55d831b9e3651f2ef646a45765ceaa1",1,"2018-07-12 15:50:58+02:00","Add Expected Reciprocal Rank metric (#31891)  This
change adds Expected Reciprocal Rank (ERR) as a
ranking evaluation metric  as descriped in:
Chapelle, O., Metlzer, D., Zhang, Y., & Grinspan,
P. (2009).  Expected reciprocal rank for graded
relevance.  Proceeding of the 18th ACM Conference
on Information and Knowledge Management.
https://doi.org/10.1145/1645953.1646033    ERR is
an extension of the classical reciprocal rank to
the graded relevance  case and assumes a cascade
browsing model. It quantifies the usefulness of a
document at rank `i` conditioned on the degree of
relevance of the items at ranks  less than `i`.
ERR seems to be gain traction as an alternative to
(n)DCG, so it  seems like a good metric to
support. Also ERR seems to be the default
optimization  metric used for training in RankLib,
a widely used learning to rank library.    Relates
to #29653
",901765,8697,240069,"Christoph Büscher","cbuescher@posteo.de","GitHub","noreply@github.com"
"2312","elastic/elasticsearch","c32981db6bc4b04383a801ba40c6781d22f262fe",1,"2018-07-20 10:09:28+10:00","Detect old trial licenses and mimic behaviour
(#32209)  Prior to 6.3 a trial license default to
security enabled. Since 6.3  they default to
security disabled. If a cluster is upgraded from
<6.3  to >6.3, then we detect this and mimic the
old behaviour with respect  to security.
",909268,8749,241495,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2313","elastic/elasticsearch","387c3c7f1d9c5aa6e5c02a71ed3a64ecf6c11872",1,"2018-07-25 02:34:46+10:00","Introduce Application Privileges with support for
Kibana RBAC (#32309)  This commit introduces
""Application Privileges"" to the X-Pack security
model.    Application Privileges are managed
within Elasticsearch, and can be  tested with the
_has_privileges API, but do not grant access to
any  actions or resources within Elasticsearch.
Their purpose is to allow  applications outside of
Elasticsearch to represent and store their own
privileges model within Elasticsearch roles.
Access to manage application privileges is handled
in a new way that  grants permission to specific
application names only. This lays the  foundation
for more OLS on cluster privileges, which is
implemented by  allowing a cluster permission to
inspect not just the action being  executed, but
also the request to which the action is applied.
To support this, a ""conditional cluster privilege""
is introduced, which  is like the existing cluster
privilege, except that it has a Predicate  over
the request as well as over the action name.
Specifically, this adds  - GET/PUT/DELETE actions
for defining application level privileges  -
application privileges in role definitions  -
application privileges in the has_privileges API
- changes to the cluster permission class to
support checking of request    objects  - a new
""global"" element on role definition to provide
cluster object    level security (only for manage
application privileges)  - changes to
`kibana_user`, `kibana_dashboard_only_user` and
`kibana_system` roles to use and manage
application privileges    Closes #29820  Closes
#31559
",917199,8828,243086,"Tim Vernum","tim@adjective.org","Jay Modi","jaymode@users.noreply.github.com"
"2314","elastic/elasticsearch","15679315e3e75d58e6834a8cfd65bb258874fdfc",1,"2018-08-02 09:53:47+01:00","[ML] Rename JobProvider to JobResultsProvider
(#32551)
",921306,8891,243957,"David Kyle","david.kyle@elastic.co","GitHub","noreply@github.com"
"2315","elastic/elasticsearch","21f660d801a1f08981a1806d747b8665e63ead7e",2,"2018-08-03 13:11:00+02:00","[Rollup] Remove builders from
DateHistogramGroupConfig (#32555)  Same motivation
as #32507 but for the DateHistogramGroupConfig
configuration object. This pull request also
changes the format of the  time zone from a Joda's
DateTimeZone to a simple String.    It should help
to port the API to the high level rest client and
allows  clients to not be forced to use the Joda
Time library. Serialization is  impacted but does
not need a backward compatibility layer as
DateTimeZone are serialized as String anyway.
XContent also expects  a String for timezone, so I
found it easier to move everything to String.
Related to #29827
",922193,8909,244412,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2316","elastic/elasticsearch","2176184db18ddcae22d3506c38d35a08c86fb4b4",1,"2018-08-06 15:26:31+01:00","[Zen2] Introduce gossip-like discovery of master
nodes (#32246)  This commit introduces the
`PeerFinder` which can be used to collect the
identities of the master-eligible nodes in a
masterless cluster, based on the
`UnicastHostsProvider`, the nodes in the
`ClusterState`, and nodes that other  nodes have
discovered.
",921317,8868,244170,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2317","elastic/elasticsearch","1122314b3bdd803f72ef93f6930522995a381eba",6,"2018-08-07 09:39:24+02:00","[Rollup] Remove builders from GroupConfig (#32614)
",926113,8946,245530,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2318","elastic/elasticsearch","2e65bac5ddb5d5fe5714d9288ef31deee8a663f7",2,"2018-08-07 18:54:42+02:00","[Rollup] Remove builders from RollupJobConfig
(#32669)
",926937,8956,245884,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2319","elastic/elasticsearch","3e437438d542e81d534d9e6c4463734e65470b83",3,"2018-08-08 09:59:22+02:00","Prevent cause from being null in
ShardOperationFailedException  (#32640)
`ShardOperationFailedException` and corresponding
implementors seem to suggest that the cause may be
null, case that is also handled in a few places.
Yet, it does not seem to be possible in practice
for the cause to be null, hence we can clean that
up and enforce the cause to be a non null value.
This is best done by making
`ShardOperationFailedException` an abstract class
rather than an interface, which holds the basic
member instance that all the subclasses have in
common and can also enforce that cause, status and
reason are non null.
",927276,8963,245931,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2320","elastic/elasticsearch","e122505a9131a9fb23a7923927911bf3058e7636",1,"2018-08-13 18:03:08+02:00","Zen2: Deterministic MasterService (#32493)
Increases testability of MasterService and the
discovery layer. Changes:  - Async publish method
- Moved a few interfaces/classes top-level to
simplify imports  - Deterministic MasterService
implementation for tests
",922555,8877,244355,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2321","elastic/elasticsearch","10fddb62ee33d4154013883512ca91d14ade69d7",2,"2018-08-13 16:44:09-06:00","Remove client connections from TcpTransport
(#31886)  This is related to #31835. This commit
adds a connection manager that  manages client
connections to other nodes. This means that the
TcpTransport no longer maintains a map of nodes
that it is connected  to.
",929821,8990,247374,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2322","elastic/elasticsearch","e1206a6272d1ce2269efa97119071584cc35f44c",21,"2018-08-14 11:06:46-05:00","Watcher: Remove extraneous auth classes (#32300)
The auth.basic package was an example of a single
implementation  interface that leaked into many
different classes. In order to clean  this up, the
HttpAuth interface, factories, and Registries all
were  removed and the single implementation,
BasicAuth, was substituted in all  cases. This
removes some dependenies between Auth and the
Templates,  which can now use static methods on
BasicAuth. BasicAuth was also moved  into the http
package and all of the other classes were removed.
",930702,8988,247631,"Michael Basnight","mbasnight@gmail.com","GitHub","noreply@github.com"
"2323","elastic/elasticsearch","b218b1c68d7ef42286023efcd87439f55e2170b2",2,"2018-08-14 12:57:43-07:00","introduce random timeseries lifecycle policy util
method (#32852)  It is useful to have a random
TimeseriesLifecycleType-backed LifecyclePolicy
for testing. This PR exposes a helper method to
create one and use it for serialization tests  in
LifecyclePolicyTests
",943941,9158,249345,"Tal Levy","JubBoy333@gmail.com","GitHub","noreply@github.com"
"2324","elastic/elasticsearch","2464b686135eebab5b9a3fdcd2784a9cd16fad2e",1,"2018-08-15 09:08:33-06:00","Move connection profile into connection manager
(#32858)  This is related to #31835. It moves the
default connection profile into  the
ConnectionManager class. The will allow us to have
different  connection managers with different
profiles.
",930821,8965,247490,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2325","elastic/elasticsearch","50441f97ae745814db96c262e99d0f465aca5b2c",2,"2018-08-23 09:35:06+01:00","HLRC: Add ML Get Buckets API (#33056)  Relates
#29827
",938161,9044,249663,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2326","elastic/elasticsearch","6770a456b8a1b054948744b2e661cf6ff55c9e01",2,"2018-09-01 16:01:23-05:00","HLRC: ML Flush job (#33187)  * HLRC: ML Flush job
* Fixing package, paths, and test    * Addressing
comments
",947733,9146,251999,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2327","elastic/elasticsearch","9a404f3def3f2b54e28cf8c15ff8ec1de1a25672",1,"2018-09-07 20:09:53-04:00","Include fallback settings when checking
dependencies (#33522)  Today when checking
settings dependencies, we do not check if fallback
settings are present. This means, for example,
that if  cluster.remote.*.seeds falls back to
search.remote.*.seeds, and
cluster.remote.*.skip_unavailable and
search.remote.*.skip_unavailable  depend on
cluster.remote.*.seeds, and we have set
search.remote.*.seeds  and
search.remote.*.skip_unavailable, then validation
will fail because  it is expected that
cluster.ermote.*.seeds is set here. This commit
addresses this by also checking fallback settings
when validating  dependencies. To do this, we
adjust the settings exist method to also  check
for fallback settings, a case that it was not
handling previously.
",961028,9293,255012,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2328","elastic/elasticsearch","36ba3cda7eeb9646f917a0e4338b1eaec9a2b92d",1,"2018-09-12 10:53:22-04:00","Enable global checkpoint listeners to timeout
(#33620)  In cross-cluster replication, we will
use global checkpoint listeners to  long poll for
updates to a shard. However, we do not want these
polls to  wait indefinitely as it could be
difficult to discern if the listener is  still
waiting for updates versus something has gone
horribly wrong and  cross-cluster replication is
stuck. Instead, we want these listeners to
timeout after some period (for example, one
minute) so that they are  notified and we can
update status on the following side that  cross-
cluster replication is still active. After this,
we will  immediately enter back into a poll mode.
To do this, we need the ability to associate a
timeout with a global  checkpoint listener. This
commit adds this capability.
",964652,9335,255965,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2329","elastic/elasticsearch","c86e2d5211e5fe8667f8bb716552e727ecc081b0",2,"2018-09-14 15:25:53+03:00","Structured audit logging (#31931)  Changes the
format of log events in the audit logfile.  It
also changes the filename suffix from `_access` to
`_audit`.  The new entry format is consistent with
Elastic Common Schema.  Entries are formatted as
JSON with no nested objects and field  names have
a dotted syntax. Moreover, log entries themselves
are not spaced by commas and there is exactly one
entry per line.  In addition, entry fields are
ordered, unlike a typical JSON doc,  such that a
human would not strain his eyes over jumbled
fields from one line to the other; the order is
defined in the log4j2  properties file.  The
implementation utilizes the log4j2's
`StringMapMessage`.  This means that the
application builds the log event as a map  and the
log4j logic (the appender's layout) handle the
format  internally. The layout, such as the set of
printed fields and their  order, can be changed at
runtime without restarting the node.
",967910,9348,256429,"Albert Zaharovits","albert.zaharovits@gmail.com","GitHub","noreply@github.com"
"2330","elastic/elasticsearch","4f68104865bb5f36b473a223a88ca8e1ed4feff4",2,"2018-09-14 14:59:16+02:00","Don't count hits via the collector if the hit
count can be computed from index stats. (#33701)
This is something that we were already doing when
sorting by field, which is  now also done when
sorting by score. As-is this change will speed up
top-k  `term` queries. This could work for
`match_all` queries as well when we  implement the
`setMinCompetitiveScore` API on their Scorer.
",967949,9348,256421,"Adrien Grand","jpountz@gmail.com","GitHub","noreply@github.com"
"2331","elastic/elasticsearch","b04faa059b50bfd8c55a5704c5bca432439ec85d",1,"2018-09-14 15:00:18+01:00","HLRC: ML PUT Calendar (#33362)
",968308,9356,256590,"David Kyle","david.kyle@elastic.co","GitHub","noreply@github.com"
"2332","elastic/elasticsearch","e77835c6f5c143e0f8c4a8192528fb70b6c801df",1,"2018-09-17 09:10:23+02:00","Add create rollup job api to high level rest
client (#33521)  This commit adds the Create
Rollup Job API to the high level REST  client. It
supersedes #32703 and adds dedicated
request/response  objects so that it does not
depend on server side components.    Related
#29827
",970527,9382,257302,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2333","elastic/elasticsearch","c79fbea9235d09477fd5c95dffdbfcc28b5ebb60",3,"2018-09-17 15:00:30+02:00","[Zen2] Implement basic cluster formation (#33668)
This PR integrates the following pieces of
machinery in the Coordinator:    - discovery  -
pre-voting  - randomised election scheduling  -
joining (of a new master)  - publication of
cluster state updates    Together, these things
are everything needed to form a cluster. We
therefore  also add the start of a test suite that
allows us to assert higher-level  properties of
the interactions between all these pieces of
machinery, with as  little fake behaviour as
possible. We assert one such property: ""a cluster
successfully forms"".
",976486,9422,258355,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2334","elastic/elasticsearch","94a66c556d82f4490b5ac7a05ab970342ab98d81",1,"2018-09-17 17:00:00-07:00","add phase execution info to ILM Explain API
(#33488)  adds a section for phase execution to
the Explain API.    This contains    - phase
definition  - policy name  - policy version  -
modified date
",986690,9604,260075,"Tal Levy","JubBoy333@gmail.com","GitHub","noreply@github.com"
"2335","elastic/elasticsearch","758b2f91112b865d9e77d6b086b05a6d9b62626e",1,"2018-09-18 11:48:24+02:00","Zen2: Add DisruptableMockTransport (#33713)  Adds
a mock transport implementation that allows to
simulate network disruptions.
",976844,9425,258412,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2336","elastic/elasticsearch","27dd25857bca3b4cadef5d04994b0e9f71784cdb",1,"2018-09-18 17:07:57-06:00","Rebuild step on PolicyStepsRegistry.getStep
(#33780)  This moves away from caching a list of
steps for a current phase, instead  rebuilding the
necessary step from the phase JSON stored in the
index's  metadata.    Relates to #29823
",988725,9617,260417,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2337","elastic/elasticsearch","c764012347edce75ec2d1f8951f07692e923b218",3,"2018-09-19 12:17:08-07:00","Create a WatchStatus class for the high-level REST
client. (#33527)  This class will be used in a few
of the watcher responses ('get watch', 'ack
watch', etc.), so it's being introduced first in
its own PR.
",975010,9410,258091,"Julie Tibshirani","julie.tibshirani@elastic.co","GitHub","noreply@github.com"
"2338","elastic/elasticsearch","1d08f63effcb387473e2adedae2af79427a47cc0",2,"2018-09-26 15:08:35-07:00","When creating wildcard queries, use
MatchNoDocsQuery when the field type doesn't
exist. (#34093)
",978945,9445,258777,"Julie Tibshirani","julie.tibshirani@elastic.co","GitHub","noreply@github.com"
"2339","elastic/elasticsearch","300896d401eae0d0fa9333fa0967fbe7f7be53d3",1,"2018-10-02 12:14:25+03:00","HLRC: add change password API support (#33509)
This change adds support for the change password
APIs to the high  level rest client.    Relates
#29827
",980917,9470,259229,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2340","elastic/elasticsearch","2c82b80b8529a1b855c2916a83532c32bf65a313",1,"2018-10-04 10:51:58+03:00","Support PKCS#11 tokens as keystores and
truststores  (#34063)  This enables Elasticsearch
to use the JVM-wide configured  PKCS#11 token as a
keystore or a truststore for its TLS
configuration.  The JVM is assumed to be
configured accordingly with the appropriate
Security Provider implementation that supports
PKCS#11 tokens.  For the PKCS#11 token to be used
as a keystore or a truststore for an
SSLConfiguration, the .keystore.type or
.truststore.type must be  explicitly set to pkcs11
in the configuration.  The fact that the PKCS#11
token configuration is JVM wide implies that
there is only one available keystore and
truststore that can be used by TLS  configurations
in Elasticsearch.  The PIN for the PKCS#11 token
can be set as a truststore parameter in
Elasticsearch or as a JVM parameter (
-Djavax.net.ssl.trustStorePassword).    The basic
goal of enabling PKCS#11 token support is to allow
PKCS#11-NSS in  FIPS mode to be used as a FIPS
140-2 enabled Security Provider.
",983469,9483,259805,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2341","elastic/elasticsearch","3ccfc3de58f87249bd811432ec60f78dfd70d371",1,"2018-10-04 16:03:57+02:00","SCRIPTING: Terms set query expression (#33856)  *
SCRIPTING: Add Expr. Compile for TermSetQuery Ctx.
* Follow up to #33602 adding the ability to
compile TermsSetQuery  scripts with the
expressions engine in the same way we support
SearchScript in Expressions     * Duplicated the
code here for now to make the change less complex,
the only difference to SearchScript is that
`_score` and `_value` are not handled for
TermsSetQuery  * remove redundant check
",983609,9488,259936,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2342","elastic/elasticsearch","b32abcbd009ada6e3486e4776e9e4ea3c6cc8c23",1,"2018-10-04 20:33:28+02:00","Zen2: Add Cluster State Applier (#34257)  Adds the
cluster state applier to Coordinator, and adds
tests for cluster state acking.
",991821,9533,261239,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2343","elastic/elasticsearch","026488bcbfd9a2f3a45ae48e8c0708f3d113434b",2,"2018-10-04 14:43:06-07:00","HLRC: ML Adding get datafeed stats API (#34271)  *
HLRC: ML Adding get datafeed stats API    *
addressing PR comments    * fixing field exclusion
filter    * removing unnecessary whitespace
",984337,9499,260294,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2344","elastic/elasticsearch","4dacfa95d2a2e88cec7e9d9d80af5a39542397a8",4,"2018-10-05 02:41:28+03:00","[ML] Allow asynchronous job deletion (#34058)
This changes the delete job API by adding  the
choice to delete a job asynchronously.  The commit
adds a `wait_for_completion` parameter  to the
delete job request. When set to `false`,  the
action returns immediately and the response
contains the task id.    This also changes the
handling of subsequent  delete requests for a job
that is already being  deleted. It now uses the
task framework to check  if the job is being
deleted instead of the cluster  state. This is a
beneficial for it is going to also  be working
once the job configs are moved out of the  cluster
state and into an index. Also, force delete
requests that are waiting for the job to be
deleted  will not proceed with the deletion if the
first task  fails. This will prevent overloading
the cluster. Instead,  the failure is communicated
better via notifications  so that the user may
retry.    Finally, this makes the `deleting`
property of the job  visible (also it was renamed
from `deleted`). This allows  a client to render a
deleting job differently.    Closes #32836
",984355,9500,260364,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2345","elastic/elasticsearch","03da4f6c518af5e2678903d25dc7362ba46b50dd",1,"2018-10-06 07:22:04+01:00","Gather votes from all nodes (#34335)  Today we
accept that some nodes may vote for the wrong
master in an election.  This is mostly fine
because they do end up joining the correct master
in the  end, but the lack of a vote from every
follower may prevent a future desirable
reconfiguration from taking place.    The solution
is to hold another election in a yet-higher term
in order to  collect a complete set of votes.
Elections are somewhat disruptive so we should
think carefully about when this election should
take place. One option is to  wait as late as
possible (on the grounds that it might not ever be
necessary).  This unfortunately makes it harder to
predict how an  apparently-smoothly-running
cluster will react to nodes leaving and joining.
Instead we prefer to perform the election as soon
as possible in the leader's  term, adding ""votes
from all followers"" to the invariants that we
expect to  hold in a stable cluster. The start of
a leader's term is already a somewhat  disrupted
time for the cluster, so performing another
election at this point  does not materially change
the cluster's behaviour.    This change implements
the logic needed to trigger a new election in
order to  satisfy this extra stabilisation
condition.
",991889,9533,261245,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2346","elastic/elasticsearch","8d83688328f17c05ad7a7404a6e4319b9428e477",5,"2018-10-12 14:58:04+01:00","Allow an AuthenticationResult to return metadata
(#34382)  PR #34290 made it impossible to use
thread-context values to pass  authentication
metadata out of a realm. The SAML realm used this
technique to allow the SamlAuthenticateAction to
process the parsed  SAML token, and apply them to
the access token that was generated.    This new
method adds metadata to the AuthenticationResult
itself, and  then the authentication service makes
this result available on the  thread context.
Closes: #34332
",985330,9504,260469,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2347","elastic/elasticsearch","55eaf7a3ff83d032fd4f2263e144113909d1b2bd",1,"2018-10-15 17:20:34+01:00","HLRC: Get SSL Certificates API (#34135)  This
change adds support for the get SSL certificate
API to   the high level rest client.
",985565,9508,260587,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2348","elastic/elasticsearch","0cd03d358140193cc84434d385947e84e0b70607",3,"2018-10-15 20:52:54+01:00","Use RoleRetrievalResult for better caching
(#34197)  Security caches the result of role
lookups and negative lookups are  cached
indefinitely. In the case of transient failures
this leads to a  bad experience as the roles could
truly exist. The CompositeRolesStore  needs to
know if a failure occurred in one of the roles
stores in order  to make the appropriate decision
as it relates to caching. In order to  provide
this information to the CompositeRolesStore, the
return type of  methods to retrieve roles has
changed to a new class,  RoleRetrievalResult. This
class provides the ability to pass back an
exception to the roles store. This exception does
not mean that a  request should be failed but
instead serves as a signal to the roles  store
that missing roles should not be cached and
neither should the  combined role if there are
missing roles.    As part of this, the negative
lookup cache was also changed from an  unbounded
cache to a cache with a configurable limit.
Relates #33205
",985953,9511,260716,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2349","elastic/elasticsearch","a4c302067e6e3a2f8dd021440b50f482177fa106",2,"2018-10-16 03:05:46+01:00","HLRC: Create/Update role mapping API (#34171)  We
added support for role mapper expression DSL in
#33745,  that allows us to build the role mapper
expression used in the  role mapping (as rules for
determining user roles based on what  the boolean
expression resolves to).    This change now adds
support for create/update role mapping  API to the
high-level rest client.
",986260,9514,260816,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2350","elastic/elasticsearch","18aa1c1381b76769ed5ebaaf4b6840aa26301d75",1,"2018-10-17 08:02:04-07:00","add start trial API to HLRC (#33406)  Introduces
client-specific request and response classes that
do not  depend on the server    The `type`
parameter is named `licenseType` in the response
class to be  more descriptive. The parts that make
up the acknowledged-required  response are given
slightly different names than their server-
response  types to be consistent with the naming
in the put license API    Tests do not cover all
cases because the integ test cluster starts up
with a trial license - this will be addressed in a
future commit
",987793,9530,261242,"Andy Bristol","andy.bristol@elastic.co","GitHub","noreply@github.com"
"2351","elastic/elasticsearch","39a61633162248341931e1679113d1fc8f4927fb",1,"2018-10-19 13:46:26+11:00","[HLRC] Add support for Delete role mapping API
(#34531)  Building on expression dsl and create
role mapping API, this  commit adds support for
delete role mapping API to high level client.
",989599,9553,261675,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2352","elastic/elasticsearch","65677296000558f0d848b67b19d5d588110af5bb",2,"2018-10-20 16:01:01-05:00","ingest: processor stats (#34202)  This change
introduces stats per processors. Total, time,
failed,  current are currently supported. All
pipelines will now show all  top level processors
that belong to it. Failure processors are not
displayed, however, the time taken to execute the
failure chain is part  of the stats for the top
level processor.    The processor name is the type
of the processor, ordered as defined in  the
pipeline. If a tag for the processor is found,
then the tag is  appended to the type.    Pipeline
processors will have the pipeline name appended to
the name of  the name of the processors (before
the tag if one exists). If more  then one pipeline
is used to process the document, then each
pipeline  will carry its own stats. The outer most
pipeline will also include the  inner most
pipeline stats.    Conditional processors will
only included in the stats if the condition
evaluates  to true.
",990563,9564,262003,"Jake Landis","jake.landis@elastic.co","GitHub","noreply@github.com"
"2353","elastic/elasticsearch","299d044bfceaf5391cda1bc19f92f8bc2cbf87ae",1,"2018-10-23 16:01:01-04:00","Collapse pipeline aggs into single package
(#34658)  - Restrict visibility of Aggregators and
Factories  - Move PipelineAggregatorBuilders up a
level so it is consistent with  AggregatorBuilders
- Checkstyle line length fixes for a few classes
- Minor odds/ends (swapping to method references,
formatting, etc)
",991791,9569,262096,"Zachary Tong","polyfractal@elastic.co","GitHub","noreply@github.com"
"2354","elastic/elasticsearch","bf4d90a5dc2fe2ee51ec182a166e636d88bf5d05",10,"2018-10-24 14:27:22-04:00","HLRC API for _termvectors (#33447)  * HLRC API for
_termvectors    relates to #27205
",992999,9579,262448,"Mayya Sharipova","mayya.sharipova@elastic.co","GitHub","noreply@github.com"
"2355","elastic/elasticsearch","a39a67cd38981c51c974ea6b1f3291bd7970fe9a",1,"2018-10-26 15:34:48+01:00","[ML] Extract common native process base class
(#34856)  We currently have two different native
processes:  autodetect & normalizer. There are
plans for introducing  a new process. All these
share many things in common.  This commit
refactors the processes to extend an
`AbstractNativeProcess` class that encapsulates
those  commonalities with the purpose of reusing
the code  for new processes in the future.
",994082,9587,262509,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2356","elastic/elasticsearch","a086c665a35af32e60e6d23ab6ca75fcf085b46f",1,"2018-10-26 20:16:44+02:00","HLREST: Add Clear Roles Cache API (#34187)  Adds
support for the Clear Roles Cache API to the High
Level Rest  Client. As part of this a helper
class, NodesResponseHeader, has been  added that
enables parsing the nodes header from responses
that are  node requests.    Relates to #29827
",994548,9593,262696,"Boaz Leskes","b.leskes@gmail.com","Jay Modi","jaymode@users.noreply.github.com"
"2357","elastic/elasticsearch","995bf0ee668282fbde420eaf2eb028af75a74d12",1,"2018-10-30 09:08:12+01:00","Bulk Api support for global parameters (#34528)
Bulk Request in High level rest client should be
consistent with what is  possible in Rest API,
therefore should support global parameters. Global
parameters are passed in URL in Rest API.    Some
parameters are mandatory - index, type - and would
fail validation  if not provided before before the
bulk is executed.  Optional parameters - routing,
pipeline.    The usage of these should be
consistent across sync/async execution,  bulk
processor and BulkRequestBuilder    closes #26026
",996921,9608,263206,"Przemyslaw Gomulka","przemyslaw.gomulka@elastic.co","GitHub","noreply@github.com"
"2358","elastic/elasticsearch","e28509fbfea45bd381708a962ab4bdc04dda1a47",1,"2018-10-31 21:23:20-04:00","Core: Less settings to AbstractComponent (#35140)
Stop passing `Settings` to `AbstractComponent`'s
ctor. This allows us to  stop passing around
`Settings` in a *ton* of places. While this change
touches many files, it touches them all in fairly
small, mechanical  ways, doing a few things per
file:  1. Drop the `super(settings);` line on
everything that extends  `AbstractComponent`.  2.
Drop the `settings` argument to the ctor if it is
no longer used.  3. If the file doesn't use
`logger` then drop `extends  AbstractComponent`
from it.  4. Clean up all compilation failure
caused by the `settings` removal  and drop any now
unused `settings` isntances and method arguments.
I've intentionally *not* removed the `settings`
argument from a few  files:  1. TransportAction
2. AbstractLifecycleComponent  3. BaseRestHandler
These files don't *need* `settings` either, but
this change is large  enough as is.    Relates to
#34488
",998864,9629,263641,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2359","elastic/elasticsearch","2fadec5c3d63a6615b83b2a287a78db1aba7522d",1,"2018-11-01 10:02:24-05:00","ML: Add support for rollup Indexes in Datafeeds
(#34654)  * Adding rollup support for datafeeds
* Fixing tests and adjusting formatting    * minor
formatting chagne    * fixing some syntax and
removing redundancies    * Refactoring and fixing
failing test    * Refactoring, adding paranoid
null check    * Moving rollup into the aggregation
package    * making AggregationToJsonProcessor
package private again    * Addressing test failure
* Fixing validations, chunking    * Addressing
failing test    * rolling back RollupJobCaps
changes    * Adding comment and cleaning up test
* Addressing review comments and test failures
* Moving builder logic into separate methods    *
Addressing PR comments, adding test for rollup
permissions    * Fixing test failure    * Adding
rollup priv check on datafeed put    * Handling
missing index when getting caps    * Fixing unused
import
",999678,9632,263695,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2360","elastic/elasticsearch","574ec6686ed5edfbc9876356d8e8c53aff107289",7,"2018-11-06 14:56:50+11:00","Include realm type in Security Realm setting keys
(#30241)  This moves all Realm settings to an
Affix definition.  However, because different
realm types define different settings
(potentially conflicting settings) this requires
that the realm type  become part of the setting
key.    Thus, we now need to define realm settings
as:        xpack.security.authc.realms:
file.file1:          order: 0
native.native1:          order: 1    - This is a
breaking change to realm config  - This is also a
breaking change to custom security realms
(SecurityExtension)
",1018660,9872,267100,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2361","elastic/elasticsearch","3776de5f202a9248e5a07b20bcd11d3d9bbaf269",2,"2018-11-06 15:26:12+11:00","HLRC: Add InvalidateToken security API (#35114)
This change adds the Invalidate Token API  (DELETE
/_xpack/security/oauth2/token) to the
Elasticsearch  High Level Rest Client.    Relates:
#29827
",1018844,9876,267217,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2362","elastic/elasticsearch","85a8b517bd659e3b036492da4fac6de942e8f053",6,"2018-11-08 18:42:36+02:00","HLRest: refactor put_user to utilize `User` object
(#35188)  This follows #33552 , when the
`_authenticate` API added a new  `User` object for
the API's response. This changes the `put_user`
API to also employ a `User` object in the request.
The User object changed slightly.  A bug with
put_user only putting/updating enabled (but not
disabled)  users has been fixed.
",1022655,9915,268057,"Albert Zaharovits","albert.zaharovits@gmail.com","GitHub","noreply@github.com"
"2363","elastic/elasticsearch","6050deb6f0791f7d2c2534ca13df7779cfdd9521",11,"2018-11-11 17:13:25+02:00","HLRest: model role and privileges (#35128)  The
following ""user privileges"" objects have been
created  on the client side:    *
ApplicationResourcePrivileges  * IndicesPrivileges
* GlobalOperationPrivilege  * GlobalPrivileges
as well as the aggregating `Role` entity.
",1024262,9929,268448,"Albert Zaharovits","albert.zaharovits@gmail.com","GitHub","noreply@github.com"
"2364","elastic/elasticsearch","c346a0f0279e874dd3160c78f0135855be0a3c4a",1,"2018-11-13 16:37:17-05:00","[Rollup] Add `wait_for_completion` option to
StopRollupJob API (#34811)  This adds a
`wait_for_completion` flag which allows the user
to block   the Stop API until the task has
actually moved to a stopped state,   instead of
returning immediately.  If the flag is set, a
`timeout` parameter  can be specified to determine
how long (at max) to block the API  call.  If
unspecified, the timeout is 30s.    If the timeout
is exceeded before the job moves to STOPPED, a
timeout exception is thrown.  Note: this is just
signifying that the API  call itself timed out.
The job will remain in STOPPING and evenutally
flip over to STOPPED in the background.    If the
user asks the API to block, we move over the the
generic  threadpool so that we don't hold up a
networking thread.
",1027015,9964,269387,"Zachary Tong","polyfractal@elastic.co","GitHub","noreply@github.com"
"2365","elastic/elasticsearch","5b7446bb5fbcb8776ae147aafea44763250cc97c",1,"2018-11-14 14:04:30+01:00","Add Delete Privileges API to HLRC (#35454)  This
commit adds the Delete Privileges API to the high
level REST  client.    Related to #29827
",1028044,9974,269760,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2366","elastic/elasticsearch","f7ada9b29b6074d17f8f969171a3fc733877690f",1,"2018-11-15 13:32:45-06:00","Add delayed datacheck to the datafeed job runner
(#35387)  * ML: Adding missing datacheck to
datafeedjob    * Adding client side and docs    *
Making adjustments to validations    * Making
values default to on, having more sensible limits
* Intermittent commit, still need to figure out
interval    * Adjusting delayed data check
interval    * updating docs    * Making parameter
Boolean, so it is nullable    * bumping bwc to 7
before backport    * changing to version current
* moving delayed data check config its own object
* Separation of duties for delayed data detection
* fixing checkstyles    * fixing checkstyles    *
Adjusting default behavior so that null windows
are allowed    * Mentioning the default value    *
Fixing comments, syncing up validations
",1028969,9986,270116,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2367","elastic/elasticsearch","87a8b99724556de7dc5e932c242e7cec0a14a3f9",3,"2018-11-16 13:52:06+11:00","HLRC: Add ""_has_privileges"" API to Security Client
(#35479)  This adds the ""hasPrivileges()"" method
to SecurityClient, including  request, response &
async variant of the method.    Also includes API
documentation.
",1029667,9992,270340,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2368","elastic/elasticsearch","7657e6d274bc4ac48f439db82b1a1336651af7de",1,"2018-11-20 08:15:21-06:00","HLRC ML Add Event To Calendar API (#35704)  *
HLRC: ML Adding Post event to calendar api    *
Fixing tests and serialization    * removing
unused import
",1032116,10014,271153,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2369","elastic/elasticsearch","25f83ae08c5e8ef8c98bc20067fde6ef212c3d59",2,"2018-11-21 16:38:17+02:00","[HLRC] Add support for get application privileges
API (#35556)  This commits adds support for the
Get Application Privileges  API to the HLRC
Relates: #29827
",1035530,10048,272063,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2370","elastic/elasticsearch","8daa854f90b982854ce13a5a61b0fe29eddf40b5",1,"2018-11-26 11:25:07+02:00","[HLRC] Add support for get roles API (#35787)
This commits adds support for the Get Roles API to
the HLRC    Relates: #29827
",1039750,10092,272950,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2371","elastic/elasticsearch","3435fc4613653a159fb8e0353204acfd98a225ca",3,"2018-11-27 15:07:24+11:00","HLRC: Add ability to put user with a password hash
(#35844)  Update PutUserRequest to support
password_hash (see: #35242)    This also updates
the documentation to bring it in line with our
more  recent approach to HLRC docs.
",1041643,10103,273244,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2372","elastic/elasticsearch","3337fa73511151453580a6ec181efdb3b62de080",2,"2018-11-27 14:28:14-05:00","[Monitoring] Make Exporters Async (#35765)  This
changes the exporter code -- most notably the
`http` exporter --  to use async operations
throughout the resource management and bulk
initialization code (the bulk indexing of
monitoring documents was  already async).    As
part of this change, this does change one semi-
core aspect of the  `HttpResource` class in that
it will no longer block all concurrent calls
until the first call completes with
`HttpResource::checkAndPublishIfDirty`.  Now, any
parallel attempts to check the resources will be
skipped until  the first call completes (success
or failure). While this is a technical  change, it
has very little practical impact because the
existing behavior  was either quick success (then
every blocked request processed) or  each request
timed out and failed anyway, thus being
effectively  skipped (and a burden on the system).
",1042659,10109,273350,"Chris Earle","pickypg@users.noreply.github.com","GitHub","noreply@github.com"
"2373","elastic/elasticsearch","c305f9dc03eb089e3f7dc16cd4e3ddd546222360",5,"2018-11-29 08:55:53-07:00","Make keepalive pings bidirectional and optimizable
(#35441)  This is related to #34405 and a follow-
up to #34753. It makes a number  of changes to our
current keepalive pings.    The ping interval
configuration is moved to the ConnectionProfile.
The server channel now responds to pings. This
makes the keepalive  pings bidirectional.    On
the client-side, the pings can now be optimized
away. What this  means is that if the channel has
received a message or sent a message  since the
last pinging round, the ping is not sent for this
round.
",1045506,10142,274346,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2374","elastic/elasticsearch","04ee05f199855b3f0a097db62148f884fe4161bc",1,"2018-11-29 21:34:16+02:00","Fix Watcher NotificationService's secure settings
(#35610)  The NotificationService (base class for
SlackService, HipchatService ...) has both dynamic
cluster settings and SecureSettings and builds the
clients (Account) that are used to comm  with
external services. This commit fixes an important
bug about updating/reloading any  of these
settings (both Secure and dynamic cluster).
Briefly the bug is due to the fact that  both the
secure settings as well as the dynamic node scoped
ones can be updated  independently, but when
constructing the clients some of the settings
might not be visible.
",1045670,10142,274375,"Albert Zaharovits","albert.zaharovits@gmail.com","GitHub","noreply@github.com"
"2375","elastic/elasticsearch","5d684ca47351b54f1ebb2ac5b732d894127ec4bc",1,"2018-12-04 14:39:31+01:00","Combine the execution of an exclusive replica
operation with primary term update (#36116)  This
commit changes how an operation which requires all
index shard   operations permits is executed when
a primary term update is required:   the operation
and the update are combined so that the operation
is   executed after the primary term update under
the same blocking   operation.    Closes #35850
Co-authored-by: Yannick Welsch <yannick@welsch.lu>
",1047220,10157,274790,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2376","elastic/elasticsearch","d2886e1c815cd697024c3ad533e58ef4aaa40751",2,"2018-12-05 12:41:42+00:00","HLRC: execute watch API (#35868)  This change adds
support for the execute watch API in the high
level rest client
",1049513,10176,275209,"Alan Woodward","romseygeek@gmail.com","GitHub","noreply@github.com"
"2377","elastic/elasticsearch","18866c4c0b1ad640f8554dc4b41765a04dcefa04",1,"2018-12-05 19:49:06+01:00","Make hits.total an object in the search response
(#35849)  This commit changes the format of the
`hits.total` in the search response to be an
object with  a `value` and a `relation`. The
`value` indicates the number of hits that match
the query and the  `relation` indicates whether
the number is accurate (in which case the relation
is equals to `eq`)  or a lower bound of the total
(in which case it is equals to `gte`).  This
change also adds a parameter called
`rest_total_hits_as_int` that can be used in the
search APIs to opt out from this change (retrieve
the total hits as a number in the rest response).
Note that currently all search responses are
accurate (`track_total_hits: true`) or they don't
contain  `hits.total` (`track_total_hits: true`).
We'll add a way to get a lower bound of the total
hits in a  follow up (to allow numbers to be
passed to `track_total_hits`).    Relates #33028
",1049768,10177,275241,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2378","elastic/elasticsearch","3f3cde41d39b20b5b4408716db89bd059ef77561",1,"2018-12-06 10:23:15-08:00","Deprecate types in termvector and mtermvector
requests. (#36182)  * Add deprecation warnings to
`Rest*TermVectorsAction`, plus tests in
`Rest*TermVectorsActionTests`.  * Deprecate
relevant methods on the Java HLRC requests/
responses.  * Update documentation (for both the
REST API and Java HLRC).  * For each REST yml
test, create one version without types, and
another legacy version that retains types (called
*_with_types.yml).
",1065501,10284,278170,"Julie Tibshirani","julie.tibshirani@elastic.co","GitHub","noreply@github.com"
"2379","elastic/elasticsearch","c32e4fb83f78e350cc44ad1c616a0af1577de93c",1,"2018-12-07 12:47:09+00:00","[Zen2] Best-effort cluster formation if
unconfigured (#36215)  In real deployments it is
important that clusters are properly configured to
avoid accidentally forming multiple independent
clusters at cluster  bootstrapping time. However
we also expect to be able to unpack Elasticsearch
and start up one or more nodes without any up-
front configuration, and have  them do their best
to find each other and form a cluster after a few
seconds.    This change adds a delayed automatic
bootstrapping process to nodes that start  up with
no relevant settings set to support the desired
out-of-the-box  experience without compromising
safety in properly-configured deployments.
",1065959,10283,278183,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2380","elastic/elasticsearch","ca09936cdf31c40dcf09233638a3d1d9d3fee362",1,"2018-12-07 08:22:21-06:00","HLRC: Get Deprecation Info API (#36279)  This
commit adds the Get Deprecation Info API and
associated  documentation.    Relates #29827
",1066242,10286,278268,"Michael Basnight","mbasnight@gmail.com","GitHub","noreply@github.com"
"2381","elastic/elasticsearch","9d417984bde50608f4c58b76dfbed64e3e2ff17e",1,"2018-12-07 17:23:20+00:00","[Zen2] Add warning if cluster fails to form fast
enough (#35993)  * Add warning if cluster fails to
form fast enough    Today if a leader is not
discovered or elected then nodes are essentially
silent at INFO and above, and log copiously at
DEBUG and below. A short delay  when electing a
leader is not unusual, for instance if other nodes
have not yet  started, but a persistent failure to
elect a leader is a problem worthy of log
messages in the default configuration.    With
this change, while there is no leader each node
outputs a WARN-level log  message every 10 seconds
(by default) indicating as such, describing the
current discovery state and the current quorum(s).
* Add note about whether the discovered nodes form
a quorum or not    * Introduce separate
ClusterFormationFailureHelper    ... and back out
the unnecessary changes elsewhere    * It can be
volatile
",1066678,10288,278347,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2382","elastic/elasticsearch","32c4f99238112fa4b381316c1e73d457956ef040",1,"2018-12-09 16:03:28+11:00","[HLRC] Add support for put privileges API (#35679)
This commit adds support for API to create or
update  application privileges in high-level rest
client.
",1068495,10295,278736,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2383","elastic/elasticsearch","dad6f1c9fe9b25ed3ee2d16c1112a5ef3f5f908a",1,"2018-12-10 09:41:31+02:00","[HLRC] Put Role (#36209)  This commit adds support
for the put role API in the  java high level rest
client.
",1069087,10302,278939,"Albert Zaharovits","albert.zaharovits@gmail.com","GitHub","noreply@github.com"
"2384","elastic/elasticsearch","10938e5135b381c002e300835806f185ac28a9e2",1,"2018-12-10 08:11:57-08:00","[hlrc] add index templates exist API (#36132)
This commit adds support for the index templates
exist API, creating  new client-side request types
for that API and the get index  templates API.
Also adds links in hlrc docs to pages for
supported  index template APIs
",1069313,10304,279088,"Andy Bristol","andy.bristol@elastic.co","GitHub","noreply@github.com"
"2385","elastic/elasticsearch","790f8102e9c808ec1e497f77bb0e93dc5534d346",2,"2018-12-11 11:55:41-07:00","Modify `BigArrays` to take name of circuit breaker
(#36461)  This commit modifies BigArrays to take a
circuit breaker name and  the circuit breaking
service. The default instance of BigArrays that
is passed around everywhere always uses the
request breaker. At the  network level, we want to
be using the inflight request breaker. So this
change will allow that.    Additionally, as this
change moves away from a single instance of
BigArrays, the class is modified to not be a
Releasable anymore.  Releasing big arrays was
always dispatching to the PageCacheRecycler,  so
this change makes the PageCacheRecycler the class
that needs to be  managed and torn-down.
Finally, this commit closes #31435 be making the
serialization of  transport messages use the
inflight request breaker. With this change,  we no
longer push the global BigArrays instnace to the
network level.
",1071051,10315,279429,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2386","elastic/elasticsearch","143f151185c01698d9416de2a530714c40d9b96e",7,"2018-12-12 15:12:49+11:00","HLRC: Implement get-user-privileges API (#36292)
This adds the _security/user/_privileges API to
the High  Level Rest Client.    This also makes
some changes to the Java model for the Role APIs
in order to better accommodate the GetPrivileges
API
",1072207,10325,279658,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2387","elastic/elasticsearch","7dc3d3b78b97c534280c38cff07bf8fd10a83f9f",8,"2018-12-14 12:22:54+01:00","Add sort and collapse info to SearchHits transport
serialization (#36555)  In order for CCS alternate
execution mode (see #32125) to be able to do the
final reduction step on the CCS coordinating node,
we need to serialize additional info in the
transport layer as part of the `SearchHits`,
specifically:    - lucene `SortField[]` which
contains info about the fields that sorting was
performed on and their type, which depends on
mappings (that the CCS node does not know about)
- collapse field (`String`) that field collapsing
was executed on, if requested  - collapse values
(`Object[]`) that field collapsing was based on,
if requested    This info is needed to be able to
reconstruct the `TopFieldDocs` or
`CollapseFieldTopDocs` in the CCS coordinating
node to feed the `mergeTopDocs` method and reduce
multiple search responses received (one per
cluster) into one.    This commit adds such
information to the `SearchHits` class. It's
nullable info that is not serialized through the
REST layer. `SearchPhaseController` sets such info
at the end of the hits reduction phase.
",1074632,10343,280123,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2388","elastic/elasticsearch","6f038997e14b9427399df77f8ff6415fa8cfb67a",1,"2018-12-17 14:45:55+02:00","Watcher accounts constructed lazily (#36656)  This
fixes two bugs about watcher notifications:  *
registering accounts that had only secure settings
was not possible before;  these accounts are very
much practical for Slack and PagerDuty
integrations.  * removes the limitation that, for
an account with both secure and cluster settings,
the admin had to first change/add the secure
settings and only then add the  dependent dynamic
cluster settings. The reverse order would trigger
a  SettingsException for an incomplete account.
The workaround is to lazily instantiate account
objects, hoping that when accounts  are
instantiated all the required settings are in
place. Previously, the approach  was to greedily
validate all the account settings by constructing
the account objects,  even if they would not ever
be used by actions. This made sense in a world
where  all the settings were set by a single API.
But given that accounts have dependent  settings
(that must be used together) that have to be
changed using different APIs  (POST
_nodes/reload_secure_settings and PUT
_cluster/settings), the settings group  would
technically be in an invalid state in between the
calls.  This fix builds account objects, and
validates the settings, when they are  needed by
actions.
",1076009,10353,280024,"Albert Zaharovits","albert.zaharovits@gmail.com","GitHub","noreply@github.com"
"2389","elastic/elasticsearch","e356b8cb958cba03050fa698865c465b3bf77267",1,"2018-12-17 15:22:13+01:00","Add doc's sequence number + primary term to
GetResult and use it for updates (#36680)  This
commit adds the last sequence number and primary
term of the last operation that have  modified a
document to `GetResult` and uses it to power the
Update API.    Relates #36148   Relates #10708
",1076358,10353,280035,"Boaz Leskes","b.leskes@gmail.com","GitHub","noreply@github.com"
"2390","elastic/elasticsearch","7b9ca62174216097493e83d1f127c1098c4f6737",8,"2018-12-18 10:05:50+02:00","Enhance Invalidate Token API (#35388)  This
change:    - Adds functionality to invalidate all
(refresh+access) tokens for all users of a realm
- Adds functionality to invalidate all
(refresh+access)tokens for a user in all realms  -
Adds functionality to invalidate all
(refresh+access) tokens for a user in a specific
realm  - Changes the response format for the
invalidate token API to contain information about
the      number of the invalidated tokens and
possible errors that were encountered.  - Updates
the API Documentation    After back-porting to
6.x, the `created` field will be removed from
master as a field in the   response    Resolves:
#35115  Relates: #34556
",1077707,10358,280165,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2391","elastic/elasticsearch","5f76f39386af17899bd3a495b2f501fb1066241f",1,"2018-12-18 14:35:18+01:00","Rename seq# powered optimistic concurrency control
parameters to ifSeqNo/ifPrimaryTerm  (#36757)
This PR renames the parameters previously
introduce to the following:    ### URL Parameters
```  PUT
twitter/_doc/1?if_seq_no=501&if_primary_term=1  {
""user"" : ""kimchy"",      ""post_date"" :
""2009-11-15T14:12:12"",      ""message"" : ""trying
out Elasticsearch""  }    DELETE
twitter/_doc/1?if_seq_no=501&if_primary_term=1
```    ### Bulk API  ```  POST _bulk  { ""index"" :
{ ""_index"" : ""test"", ""_type"" : ""_doc"", ""_id"" :
""1"", ""if_seq_no"": 501, ""if_primary_term"": 1 } }  {
""field1"" : ""value1"" }  { ""delete"" : { ""_index"" :
""test"", ""_type"" : ""_doc"", ""_id"" : ""2"",
""if_seq_no"": 501, ""if_primary_term"": 1 } }  ```
### Java API  ```  IndexRequest.ifSeqNo(long
seqNo)  IndexRequest.ifPrimaryTerm(long
primaryTerm)  DeleteRequest.ifSeqNo(long seqNo)
DeleteRequest.ifPrimaryTerm(long primaryTerm)  ```
Relates #36148  Relates #10708
",1078157,10362,280294,"Boaz Leskes","b.leskes@gmail.com","GitHub","noreply@github.com"
"2392","elastic/elasticsearch","78f9af19c668886c682d5d1d74f5fb6f2a4c5e77",4,"2018-12-18 16:12:43+02:00","Invalidate Token API enhancements - HLRC (#36362)
* Adds Invalidate Token API enhancements to HLRC
Relates: #35388
",1078460,10362,280310,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2393","elastic/elasticsearch","e294056bbf3ce579c41847d0bbe4a407f9f3f1cd",3,"2018-12-18 17:45:31+00:00","[ML] Merge the Jindex master feature branch
(#36702)  * [ML] Job and datafeed mappings with
index template (#32719)    Index mappings for the
configuration documents    * [ML] Job config
document CRUD operations (#32738)    * [ML]
Datafeed config CRUD operations (#32854)    * [ML]
Change JobManager to work with Job config in index
(#33064)    * [ML] Change Datafeed actions to read
config from the config index (#33273)    * [ML]
Allocate jobs based on JobParams rather than
cluster state config (#33994)    * [ML] Return
missing job error when .ml-config is does not
exist (#34177)    * [ML] Close job in index
(#34217)    * [ML] Adjust finalize job action to
work with documents (#34226)    * [ML] Job in
index: Datafeed node selector (#34218)    * [ML]
Job in Index: Stop and preview datafeed (#34605)
* [ML] Delete job document (#34595)    * [ML]
Convert job data remover to work with index
configs (#34532)    * [ML] Job in index: Get
datafeed and job stats from index (#34645)    *
[ML] Job in Index: Convert get calendar events to
index docs (#34710)    * [ML] Job in index: delete
filter action (#34642)    This changes the delete
filter action to search  for jobs using the filter
to be deleted in the index  rather than the
cluster state.    * [ML] Job in Index: Enable
integ tests (#34851)    Enables the ml integration
tests excluding the rolling upgrade tests and a
lot of fixes to  make the tests pass again.    *
[ML] Reimplement established model memory (#35500)
This is the 7.0 implementation of a master node
service to  keep track of the native process
memory requirement of each ML  job with an
associated native process.    The new ML memory
tracker service works when the whole cluster  is
upgraded to at least version 6.6. For mixed
version clusters  the old mechanism of established
model memory stored on the job  in cluster state
was used. This means that the old (and complex)
code to keep established model memory up to date
on the job object  has been removed in 7.0.
Forward port of #35263    * [ML] Need to wait for
shards to replicate in distributed test (#35541)
Because the cluster was expanded from 1 node to 3
indices would  initially start off with 0
replicas.  If the original node was  killed before
auto-expansion to 1 replica was complete then  the
test would fail because the indices would be
unavailable.    * [ML] DelayedDataCheckConfig
index mappings (#35646)    * [ML] JIndex: Restore
finalize job action (#35939)    * [ML] Replace
Version.CURRENT in streaming functions (#36118)
* [ML] Use 'anomaly-detector' in job config doc
name (#36254)    * [ML] Job In Index: Migrate
config from the clusterstate (#35834)    Migrate
ML configuration from clusterstate to index for
closed jobs  only once all nodes are v6.6.0 or
higher    * [ML] Check groups against job Ids on
update (#36317)    * [ML] Adapt to periodic
persistent task refresh (#36633)    * [ML] Adapt
to periodic persistent task refresh    If https://
github.com/elastic/elasticsearch/pull/36069/files
is  merged then the approach for reallocating ML
persistent tasks  after refreshing job memory
requirements can be simplified.  This change
begins the simplification process.    * Remove
AwaitsFix and implement TODO    * [ML] Default
search size for configs    * Fix
TooManyJobsIT.testMultipleNodes    Two problems:
1. Stack overflow during async iteration when lots
of     jobs on same machine  2. Not effectively
setting search size in all cases    * Use
execute() instead of submit() in MlMemoryTracker
We don't need a Future to wait for completion    *
[ML][TEST] Fix NPE in JobManagerTests    * [ML]
JIindex: Limit the size of bulk migrations
(#36481)    * [ML] Prevent updates and upgrade
tests (#36649)    * [FEATURE][ML] Add cluster
setting that enables/disables config  migration
(#36700)    This commit adds a cluster settings
called `xpack.ml.enable_config_migration`.  The
setting is `true` by default. When set to `false`,
no config migration will  be attempted and non-
migrated resources (e.g. jobs, datafeeds) will be
able  to be updated normally.    Relates #32905
* [ML] Snapshot ml configs before migrating
(#36645)    * [FEATURE][ML] Split in batches and
migrate all jobs and datafeeds (#36716)    Relates
#32905    * SQL: Fix translation of LIKE/RLIKE
keywords (#36672)    * SQL: Fix translation of
LIKE/RLIKE keywords    Refactor Like/RLike
functions to simplify internals and improve query
translation when chained or within a script
context.    Fix #36039  Fix #36584    * Fixing
line length for EnvironmentTests and RecoveryTests
(#36657)    Relates #34884    * Add back one line
removed by mistake regarding java version check
and  COMPAT jvm parameter existence    * Do not
resolve addresses in remote connection info
(#36671)    The remote connection info API leads
to resolving addresses of seed  nodes when
invoked. This is problematic because if a hostname
fails to  resolve, we would not display any remote
connection info. Yet, a  hostname not resolving
can happen across remote clusters, especially in
the modern world of cloud services with
dynamically chaning  IPs. Instead, the remote
connection info API should be providing the
configured seed nodes. This commit changes the
remote connection info to  display the configured
seed nodes, avoiding a hostname resolution. Note
that care was taken to preserve backwards
compatibility with previous  versions that expect
the remote connection info to serialize a
transport  address instead of a string
representing the hostname.    * [Painless] Add
boxed type to boxed type casts for method/return
(#36571)    This adds implicit boxed type to boxed
types casts for non-def types to create asymmetric
casting relative to the def type when calling
methods or returning values. This means that a
user calling a method taking an Integer can call
it with a Byte, Short, etc. legally which matches
the way def works. This creates consistency in the
casting model that did not previously exist.    *
SNAPSHOTS: Adjust BwC Versions in Restore Logic
(#36718)    * Re-enables bwc tests with adjusted
version conditions now that #36397 enables
concurrent snapshots in 6.6+    * ingest: fix
on_failure with Drop processor (#36686)    This
commit allows a document to be dropped when a Drop
processor  is used in the on_failure fork of the
processor chain.    Fixes #36151    * Initialize
startup `CcrRepositories` (#36730)    Currently,
the CcrRepositoryManger only listens for settings
updates  and installs new repositories. It does
not install the repositories that  are in the
initial settings. This commit, modifies the
manager to  install the initial repositories.
Additionally, it modifies the ccr  integration
test to configure the remote leader node at
startup, instead  of using a settings update.    *
[TEST] fix float comparison in
RandomObjects#getExpectedParsedValue    This
commit fixes a test bug introduced with #36597.
This caused some  test failure as stored field
values comparisons would not work when CBOR
xcontent type was used.    Closes #29080    *
[Geo] Integrate Lucene's LatLonShape (BKD Backed
GeoShapes) as default `geo_shape` indexing
approach (#35320)    This commit  exposes lucene's
LatLonShape field as the  default type in
GeoShapeFieldMapper. To use the new   indexing
approach, simply set ""type"" : ""geo_shape"" in   the
mappings without setting any of the strategy,
precision,   tree_levels, or distance_error_pct
parameters. Note the   following when using the
new indexing approach:    * geo_shape query does
not support querying by   MULTIPOINT.  *
LINESTRING and MULTILINESTRING queries do not
yet support WITHIN relation.  * CONTAINS relation
is not yet supported.  The tree, precision,
tree_levels, distance_error_pct,   and points_only
parameters are deprecated.    * TESTS:Debug Log.
IndexStatsIT#testFilterCacheStats    * ingest:
support default pipelines + bulk upserts (#36618)
This commit adds support to enable bulk upserts to
use an index's  default pipeline. Bulk upsert,
doc_as_upsert, and script_as_upsert  are all
supported.    However, bulk script_as_upsert has
slightly surprising behavior since  the pipeline
is executed _before_ the script is evaluated. This
means  that the pipeline only has access the data
found in the upsert field  of the
script_as_upsert. The non-bulk script_as_upsert
(existing behavior)  runs the pipeline _after_ the
script is executed. This commit  does _not_
attempt to consolidate the bulk and non-bulk
behavior for  script_as_upsert.    This commit
also adds additional testing for the non-bulk
behavior,  which remains unchanged with this
commit.    fixes #36219    * Fix duplicate phrase
in shrink/split error message (#36734)    This
commit removes a duplicate ""must be a"" from the
shrink/split error  messages.    * Deprecate types
in get_source and exist_source (#36426)    This
change adds a new untyped endpoint
`{index}/_source/{id}` for both the  GET and the
HEAD methods to get the source of a document or
check for its  existance. It also adds deprecation
warnings to RestGetSourceAction that emit  a
warning when the old deprecated ""type"" parameter
is still used. Also updating  documentation and
tests where appropriate.    Relates to #35190    *
Revert ""[Geo] Integrate Lucene's LatLonShape (BKD
Backed GeoShapes) as default `geo_shape` indexing
approach (#35320)""    This reverts commit
5bc7822562a6eefa4a64743233160cdc9f431adf.    *
Enhance Invalidate Token API (#35388)    This
change:    - Adds functionality to invalidate all
(refresh+access) tokens for all users of a realm
- Adds functionality to invalidate all
(refresh+access)tokens for a user in all realms  -
Adds functionality to invalidate all
(refresh+access) tokens for a user in a specific
realm  - Changes the response format for the
invalidate token API to contain information about
the      number of the invalidated tokens and
possible errors that were encountered.  - Updates
the API Documentation    After back-porting to
6.x, the `created` field will be removed from
master as a field in the   response    Resolves:
#35115  Relates: #34556    * Add raw sort values
to SearchSortValues transport serialization
(#36617)    In order for CCS alternate execution
mode (see #32125) to be able to do the final
reduction step on the CCS coordinating node, we
need to serialize additional info in the transport
layer as part of each `SearchHit`. Sort values are
already present but they are formatted according
to the provided `DocValueFormat` provided. The CCS
node needs to be able to reconstruct the lucene
`FieldDoc` to include in the `TopFieldDocs` and
`CollapseTopFieldDocs` which will feed the
`mergeTopDocs` method used to reduce multiple
search responses (one per cluster) into one.
This commit adds such information to the
`SearchSortValues` and exposes it through a new
getter method added to `SearchHit` for retrieval.
This info is only serialized at transport and
never printed out at REST.    * Watcher: Ensure
all internal search requests count hits (#36697)
In previous commits only the stored toXContent
version of a search  request was using the old
format. However an executed search request was
already disabling hit counts. In 7.0 hit counts
will stay enabled by  default to allow for proper
migration.    Closes #36177    * [TEST] Ensure
shard follow tasks have really stopped.    Relates
to #36696    * Ensure
MapperService#getAllMetaFields elements order is
deterministic (#36739)
MapperService#getAllMetaFields returns an array,
which is created out of  an `ObjectHashSet`. Such
set does not guarantee deterministic hash
ordering. The array returned by its toArray may be
sorted differently  at each run. This caused some
repeatability issues in our tests (see #29080)  as
we pick random fields from the array of possible
metadata fields,  but that won't be repeatable if
the input array is sorted differently at  every
run. Once setting the tests seed, hppc picks that
up and the sorting is  deterministic, but failures
don't repeat with the seed that gets printed out
originally (as a seed was not originally set).
See also https://issues.carrot2.org/projects/HPPC/
issues/HPPC-173.    With this commit, we simply
create a static sorted array that is used for
`getAllMetaFields`. The change is in production
code but really affects  only testing as the only
production usage of this method was to iterate
through all values when parsing fields in the
high-level REST client code.  Anyways, this seems
like a good change as returning an array would
imply  that it's deterministically sorted.    *
Expose Sequence Number based Optimistic
Concurrency Control in the rest layer (#36721)
Relates #36148   Relates #10708    * [ML] Mute
MlDistributedFailureIT
",1083297,10384,281276,"David Kyle","david.kyle@elastic.co","GitHub","noreply@github.com"
"2394","elastic/elasticsearch","1fa105658ef1a1c8dffd8ca4336c2da0f1683656",1,"2018-12-18 11:23:13-07:00","Add CcrRestoreSourceService to track sessions
(#36578)  This commit is related to #36127. It
adds a CcrRestoreSourceService to  track
Engine.IndexCommitRef need for in-process file
restores. When a  follower starts restoring a
shard through the CcrRepository it opens a
session with the leader through the
PutCcrRestoreSessionAction. The  leader responds
to the request by telling the follower what files
it  needs to fetch for a restore. This is not yet
implemented.    Once, the restore is complete, the
follower closes the session with the
DeleteCcrRestoreSessionAction action.
",1084009,10390,281312,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2395","elastic/elasticsearch","7580d9d925d864b25466d693637b3bd3092d44cf",2,"2018-12-24 14:06:50-05:00","Make SourceToParse immutable (#36971)  Today the
routing of a SourceToParse is assigned in a
separate step  after the object is created. We can
easily forget to set the routing.  With this
commit, the routing must be provided in the
constructor of  SourceToParse.    Relates #36921
",1087479,10405,282007,"Nhat Nguyen","nhat.nguyen@elastic.co","GitHub","noreply@github.com"
"2396","elastic/elasticsearch","48b0908fc62a4047c8b254a3c3b52c973019561a",1,"2018-12-27 09:51:24+02:00","Make InternalComposite key comparable  Keys are
compared in BucketSortPipelineAggregation so
making key type (ArrayMap) implement Comparable.
Maps are compared using the entry set's iterator
so ordered maps order is maintain. For each entry
first comparing key then value. Assuming all keys
are strings. When comparing entries' values if
type is not identical and\or type not implementing
Comparable, throwing exception. Not implementing
equals() and hashCode() functions as parent's ones
are sufficient. Tests included.
",1087600,10405,282007,"Itamar Benjamin","ItamarBenjamin@users.noreply.github.com","Jim Ferenczi","jim.ferenczi@elastic.co"
"2397","elastic/elasticsearch","0cae979dfe14274e3d9a277a7ad20872f3c29d26",1,"2018-12-28 13:09:42+02:00","Remove bwc logic for token invalidation (#36893)
- Removes bwc invalidation logic from the
TokenService  - Removes bwc serialization for
InvalidateTokenResponse objects as      old nodes
in supported mixed clusters during upgrade will be
6.7 and      thus will know of the new format  -
Removes the created field from the
TokensInvalidationResult and the
InvalidateTokenResponse as it is no longer useful
in > 7.0
",1087426,10405,281995,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2398","elastic/elasticsearch","51fe20e0c30a422c8527bfba7c0e8ace10ba1ac4",7,"2018-12-28 12:43:25+01:00","Add support for local cluster alias to
SearchRequest (#36997)  With the upcoming cross-
cluster search alternate execution mode, the CCS
node will be able to split a CCS request into
multiple search requests,   one per remote cluster
involved. In order to do that, the CCS node has
to be able to signal to each remote cluster that
such sub-requests are  part of a CCS request. Each
cluster does not know about the other  clusters
involved, and does not know either what alias it
is given in  the CCS node, hence the CCS
coordinating node needs to be able to provide  the
alias as part of the search request so that it is
used as index prefix  in the returned search hits.
The cluster alias is a notion that's already
supported in the search shards  iterator and
search shard target, but it is currently used in
CCS as both   index prefix and connection lookup
key when fanning out to all the shards.  With CCS
alternate execution mode the provided cluster
alias needs to be  used only as index prefix, as
shards are local to each cluster hence no  cluster
alias should be used for connection lookups.
The local cluster alias can be set to the
SearchRequest at the transport layer  only, and
its constructor/getter methods are package
private.    Relates to #32125
",1087601,10406,282045,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2399","elastic/elasticsearch","40a30c6f5f1dfc9ae4251453d5a1f4400daf7767",1,"2019-01-04 00:57:50+02:00","SQL: Preserve original source for each expression
(#36912)  Improve parsing to save the source for
each token alongside the location    of each
Node/Expression for accurate reproducibility of an
expression   name and source    Fix #36894
",1087318,10403,281704,"Costin Leau","costin@users.noreply.github.com","GitHub","noreply@github.com"
"2400","elastic/elasticsearch","21d52f0dab10575b59bfffc9b473cf1b7ea6e6a4",1,"2019-01-04 12:19:31+01:00","Ensure that local cluster alias is never treated
as remote (#37121)  With #36997 we added support
for providing a local cluster alias with a
`SearchRequest`. We intended to make sure that
when provided as part of  a search request, the
cluster alias would never be used for connection
lookups. Yet due to a bug we would still end up
looking up the  connection from the remote ones.
This commit adds a test to make sure that whenever
we set the cluster  alias to the `SearchRequest`
(which can only be done at transport), such  alias
is used as index prefix in the returned hits. No
errors are thrown  despite no remote clusters are
configured indicating that such alias is  never
used for connection look-ups.    Also, we add
explicit support for the empty cluster alias when
printing   out index names through
`RemoteClusterAware#buildRemoteIndexName`.  In
fact we don't want to print out `:index` when the
cluster alias is  set to empty string, but rather
`index`. Yet, the semantic of empty  string is
different compared to `null` as it will still
disable final  reduction. This will be used in CCS
when searching against remote  clusters as well as
the local one, the local one will have empty
prefix  yet it will need to disable final
reduction so that its results will be  properly
merged with the ones coming from the remote
clusters.
",1087578,10411,281825,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2401","elastic/elasticsearch","e38cf1d0dca1776d9659b4c0f3c010ba444642ca",4,"2019-01-04 20:36:49+01:00","Add the ability to set the number of hits to track
accurately (#36357)  In Lucene 8 searches can skip
non-competitive hits if the total hit count is not
requested.  It is also possible to track the
number of hits up to a certain threshold. This is
a trade off to speed up searches while still being
able to know a lower bound of the total hit count.
This change adds the ability to set this threshold
directly in the track_total_hits search option. A
boolean value (true, false) indicates whether the
total hit count should be tracked in the response.
When set as an integer this option allows to
compute a lower bound of the total hits while
preserving the ability to skip non-competitive
hits when enough matches have been collected.
Relates #33028
",1087660,10411,281852,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2402","elastic/elasticsearch","e149b0852e206574faad54ab08f8a61827f73e8d",4,"2019-01-07 16:44:59+01:00","[Close Index API] Add unique UUID to ClusterBlock
(#36775)  This commit adds a unique id to cluster
blocks, so that they can be uniquely   identified
if needed. This is important for the Close Index
API where multiple   concurrent closing requests
can be executed at the same time. By adding a
UUID to the cluster block, we can generate unique
""closing block"" that can   later be verified on
shards and then checked again from the cluster
state   before closing the index. When the
verification on shard is done, the closing   block
is replaced by the regular INDEX_CLOSED_BLOCK
instance.    If something goes wrong, calling the
Open Index API will remove the block.    Related
to #33888
",1089209,10419,282045,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2403","elastic/elasticsearch","1514bbcdde36d2f64c4391ec6874e7d0aa75ab5f",2,"2019-01-08 08:52:12-07:00","Security: propagate auth result to listeners
(#36900)  After #30794, our caching realms limit
each principal to a single auth  attempt at a
time. This prevents hammering of external servers
but can  cause a significant performance hit when
requests need to go through a  realm that takes a
long time to attempt to authenticate in order to
get  to the realm that actually authenticates. In
order to address this,  this change will propagate
failed results to listeners if they use the  same
set of credentials that the authentication attempt
used. This does  prevent these stalled requests
from retrying the authentication attempt  but the
implementation does allow for new requests to
retry the  attempt.
",1088753,10442,282463,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2404","elastic/elasticsearch","ec32e66088c0001b0d3475ef06223de51d48b999",2,"2019-01-08 21:46:41-05:00","Deprecate reference to _type in lookup queries
(#37016)  Relates to #35190
",1089004,10442,282510,"Mayya Sharipova","mayya.sharipova@elastic.co","Julie Tibshirani","julie.tibshirani@elastic.co"
"2405","elastic/elasticsearch","434430506b760257f6d3defd4cc5b6be5be8cc2b",6,"2019-01-10 21:35:19+00:00","Type removal - added deprecation warnings to _bulk
apis (#36549)  Added warnings checks to existing
tests  Added ‚ÄúdefaultTypeIfNull‚Äù to
DocWriteRequest interface so that Bulk requests
can override a null choice of document type with
any global custom choice.  Related to #35190
",1093459,10464,283158,"markharwood","markharwood@gmail.com","GitHub","noreply@github.com"
"2406","elastic/elasticsearch","f4abf9628aa35138f892db93be5a7a3fb3639a5e",1,"2019-01-11 16:06:48+01:00","Mock connections more accurately in
DisruptableMockTransport (#37296)  This commit
moves DisruptableMockTransport to use a more
accurate representation of connection  management,
which allows to use the full connection manager
and does not require mocking out  any behavior.
With this, we can implement restarting nodes in
CoordinatorTests.
",1093881,10466,283220,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2407","elastic/elasticsearch","44a1071018b1563a15548fda14f9abbf11985606",1,"2019-01-12 12:49:48-05:00","Make recovery source partially non-blocking
(#37291)  Today a peer-recovery may run into a
deadlock if the value of
node_concurrent_recoveries is too high. This
happens because the  peer-recovery is executed in
a blocking fashion. This commit attempts  to make
the recovery source partially non-blocking. I will
make three  follow-ups to make it fully non-
blocking: (1) send translog operations,  (2)
primary relocation, (3) send commit files.
Relates #36195
",1094085,10469,283305,"Nhat Nguyen","nhat.nguyen@elastic.co","GitHub","noreply@github.com"
"2408","elastic/elasticsearch","03be4dbaca182a360e0a6cf3aa547739f44f1308",1,"2019-01-12 14:43:19-08:00","Introduce retention lease persistence (#37375)
This commit introduces the persistence of
retention leases by persisting  them in index
commits and recovering them when recovering a
shard from  store.
",1094344,10469,283344,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2409","elastic/elasticsearch","6d99e790b3ee78f99f4810ff79b38488e43a146d",2,"2019-01-16 21:52:17+11:00","Add SSL Configuration Library (#37287)  This
introduces a new ssl-config library that can parse
and validate SSL/TLS settings and files.    It
supports the standard configuration settings as
used in the  Elastic Stack such as
""ssl.verification_mode"" and
""ssl.certificate_authorities"" as well as all file
formats used  in other parts of Elasticsearch
security (such as PEM, JKS,  PKCS#12, PKCS#8, et
al).
",1098340,10521,285106,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2410","elastic/elasticsearch","587034dfa75cf153b22ae95d940a46fdee85dd43",1,"2019-01-17 09:55:36-06:00","Add set_priority action to ILM (#37397)  This
commit adds a set_priority action to the hot,
warm, and cold  phases for an ILM policy. This
action sets the `index.priority`  on the managed
index to allow different priorities between the
hot, warm, and cold recoveries.    This commit
also includes the HLRC and documentation changes.
closes #36905
",1099194,10528,285165,"Jake Landis","jake.landis@elastic.co","GitHub","noreply@github.com"
"2411","elastic/elasticsearch","ff0f5402558b986756ee3a7ccceb7dd6cc514620",3,"2019-01-20 23:19:40+02:00","Permission for restricted indices (#37577)  This
grants the capability to grant privileges over
certain restricted  indices (.security and
.security-6 at the moment).  It also removes the
special status of the superuser role.
IndicesPermission.Group is extended by adding the
`allow_restricted_indices`  boolean flag. By
default the flag is false. When it is toggled, you
acknowledge  that the indices under the scope of
the permission group can cover the  restricted
indices as well. Otherwise, by default, restricted
indices are ignored  when granting privileges,
thus rendering them hidden for authorization
purposes.  This effectively adds a confirmation
""check-box"" for roles that might grant  privileges
to restricted indices.    The ""special status"" of
the superuser role has been removed and coded as
any other role:  ```  new
RoleDescriptor(""superuser"",      new String[] {
""all"" },      new
RoleDescriptor.IndicesPrivileges[] {
RoleDescriptor.IndicesPrivileges.builder()
.indices(""*"")              .privileges(""all"")
.allowRestrictedIndices(true)  // this ----^
.build() },              new
RoleDescriptor.ApplicationResourcePrivileges[] {
RoleDescriptor.ApplicationResourcePrivileges.build
er()                      .application(""*"")
.privileges(""*"")
.resources(""*"")                      .build()
},              null, new String[] { ""*"" },
MetadataUtils.DEFAULT_RESERVED_METADATA,
Collections.emptyMap());  ```  In the context of
the Backup .security work, this allows the
creation of a  ""curator role"" that would permit
listing (get settings) for all indices  (including
the restricted ones). That way the curator role
would be able to   ist and snapshot all indices,
but not read or restore any of them.    Supersedes
#36765  Relates #34454
",1102483,10567,285620,"Albert Zaharovits","albert.zaharovits@gmail.com","GitHub","noreply@github.com"
"2412","elastic/elasticsearch","daa2ec8a605d385a65b9ab3e89d016b3fd0dffe2",7,"2019-01-23 10:40:05+01:00","Switch mapping/aggregations over to java time
(#36363)  This commit moves the aggregation and
mapping code from joda time to  java time. This
includes field mappers, root object mappers,
aggregations with date  histograms, query builders
and a lot of changes within tests.    The cut-over
to java time is a requirement so that we can
support nanoseconds  properly in a future field
mapper.    Relates #27330
",1103727,10567,285636,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2413","elastic/elasticsearch","787acb14b91b7065c4ed80167fb4bdb6cc444c86",2,"2019-01-25 13:45:39+01:00","Track total hits up to 10,000 by default (#37466)
This commit changes the default for the
`track_total_hits` option of the search request
to `10,000`. This means that by default search
requests will accurately track the total hit count
up to `10,000` documents, requests that match more
than this value will set the `""total.relation""`
to `""gte""` (e.g. greater than or equals) and the
`""total.value""` to `10,000` in the search
response.  Scroll queries are not impacted, they
will continue to count the total hits accurately.
The default is set back to `true` (accurate hit
count) if `rest_total_hits_as_int` is set in the
search request.  I choose `10,000` as the default
because that's also the number we use to limit
pagination. This means that users will be able to
know how far they can jump (up to 10,000) even if
the total number of hits is not accurate.
Closes #33028
",1103932,10578,286076,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2414","elastic/elasticsearch","b91d587275cbce37142d46d0f2ef95cdc94ae87e",3,"2019-01-30 12:05:54+01:00","Move SearchHit and SearchHits to Writeable
(#37931)  This allowed to make SearchHits
immutable, while quite a few fields in  SearchHit
have to stay mutable unfortunately.    Relates to
#34389
",1108664,10611,287306,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2415","elastic/elasticsearch","9782aaa1b85b37933d08daa41388a5f47dcf3309",2,"2019-01-30 11:56:24-06:00","ML: Add reason field in JobTaskState (#38029)  *
ML: adding reason to job failure status    *
marking reason as nullable    * Update
AutodetectProcessManager.java
",1108887,10614,287357,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2416","elastic/elasticsearch","6500b0cbd78a0e3968ecb54a33b59a2325059ff9",1,"2019-01-30 13:20:40-05:00","Expose retention leases in shard stats (#37991)
This commit exposes retention leases via shard-
level stats.
",1109079,10617,287455,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2417","elastic/elasticsearch","a070b8acc004740a001bd3b01e6fc6417a9e7919",3,"2019-01-30 19:21:09+01:00","Extract TransportRequestDeduplication from
ShardStateAction (#37870)  * Extracted the logic
for master request duplication so it can be reused
by the snapshotting logic  * Removed custom
listener used by `ShardStateAction` to not leak
these into future users of this class  * Changed
semantics slightly to get rid of redundant
instantiations of the composite listener  *
Relates #37686
",1109080,10619,287488,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2418","elastic/elasticsearch","b11732104fa5a611b5d47bc59efd594e9cbdab89",3,"2019-01-30 20:14:59-05:00","Move watcher to use seq# and primary term for
concurrency control (#37977)  * move watcher to
seq# occ    * top level set    * fix parsing and
missing setters    * share toXContent for
PutResponse and rest end point    * fix redacted
password    * fix username reference    * fix
deactivate-watch.asciidoc have seq no references
* add seq# + term to activate-watch.asciidoc    *
more doc fixes
",1109693,10623,287637,"Boaz Leskes","b.leskes@gmail.com","GitHub","noreply@github.com"
"2419","elastic/elasticsearch","f181e170387ca50727b750605fad51a3e85fed3a",2,"2019-02-01 17:19:19-05:00","Introduce retention leases versioning (#37951)
Because concurrent sync requests from a primary to
its replicas could be  in flight, it can be the
case that an older retention leases collection
arrives and is processed on the replica after a
newer retention leases  collection has arrived and
been processed. Without a defense, in this  case
the replica would overwrite the newer retention
leases with the  older retention leases. This
commit addresses this issue by introducing  a
versioning scheme to retention leases. This
versioning scheme is used  to resolve out-of-order
processing on the replica. We persist this
version into Lucene and restore it on recovery.
The encoding of  retention leases is starting to
get a little ugly. We can consider  addressing
this in a follow-up.
",1113156,10654,288467,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2420","elastic/elasticsearch","9b64558efb71f1564cd97c02e427a52f521cef8c",12,"2019-02-04 15:08:31+01:00","Migrating from joda to java.time. Watcher plugin
(#35809)  part of the migrating joda time work.
Migrating watcher plugin to use JDK's java-time
refers #27330
",1114405,10660,288621,"Przemyslaw Gomulka","przemyslaw.gomulka@elastic.co","GitHub","noreply@github.com"
"2421","elastic/elasticsearch","fe36861ada3e75259ff601a9f6b0e1cd5fbb8afe",6,"2019-02-05 14:21:57+11:00","Add support for API keys to access Elasticsearch
(#38291)  X-Pack security supports built-in
authentication service  `token-service` that
allows access tokens to be used to   access
Elasticsearch without using Basic authentication.
The tokens are generated by `token-service` based
on  OAuth2 spec. The access token is a short-lived
token  (defaults to 20m) and refresh token with a
lifetime of 24 hours,  making them unsuitable for
long-lived or recurring tasks where  the system
might go offline thereby failing refresh of
tokens.    This commit introduces a built-in
authentication service  `api-key-service` that
adds support for long-lived tokens aka API  keys
to access Elasticsearch. The `api-key-service` is
consulted  after `token-service` in the
authentication chain. By default,  if TLS is
enabled then `api-key-service` is also enabled.
The service can be disabled using the
configuration setting.    The API keys:-  - by
default do not have an expiration but expiration
can be    configured where the API keys need to be
expired after a    certain amount of time.  - when
generated will keep authentication information of
the user that     generated them.  - can be
defined with a role describing the privileges for
accessing     Elasticsearch and will be limited by
the role of the user that     generated them  -
can be invalidated via invalidation API  -
information can be retrieved via a get API  - that
have been expired or invalidated will be retained
for 1 week    before being deleted. The expired
API keys remover task handles this.    Following
are the API key management APIs:-  1. Create API
Key - `PUT/POST /_security/api_key`  2. Get API
key(s) - `GET /_security/api_key`  3. Invalidate
API Key(s) `DELETE /_security/api_key`    The API
keys can be used to access Elasticsearch using
`Authorization`  header, where the auth scheme is
`ApiKey` and the credentials, is the   base64
encoding of API key Id and API key separated by a
colon.  Example:-  ```  curl -H ""Authorization:
ApiKey YXBpLWtleS1pZDphcGkta2V5""
http://localhost:9200/_cluster/health  ```
Closes #34383
",1121635,10734,290266,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2422","elastic/elasticsearch","2f6afd290e4a884ea4b653fe4522917eceeb8d39",1,"2019-02-05 16:44:18+01:00","Fix Concurrent Snapshot Ending And Stabilize
Snapshot Finalization (#38368)  * The problem in
#38226 is that in some corner cases multiple calls
to `endSnapshot` were made concurrently, leading
to non-deterministic behavior (`beginSnapshot` was
triggering a repository finalization while one
that was triggered by a `deleteSnapshot` was
already in progress)     * Fixed by:        *
Making all `endSnapshot` calls originate from the
cluster state being in a ""completed"" state (apart
from on short-circuit on initializing an empty
snapshot). This forced putting the failure string
into `SnapshotsInProgress.Entry`.        * Adding
deduplication logic to `endSnapshot`  * Also:    *
Streamlined the init behavior to work the same way
(keep state on the `SnapshotsService` to decide
which snapshot entries are stale)  * closes #38226
",1121880,10737,290299,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2423","elastic/elasticsearch","7ca5495d86093cd4673f7a96f6752406ac82cfda",1,"2019-02-05 13:39:29-07:00","Allow custom authorization with an authorization
engine  (#38358)  For some users, the built in
authorization mechanism does not fit their  needs
and no feature that we offer would allow them to
control the  authorization process to meet their
needs. In order to support this,  a concept of an
AuthorizationEngine is being introduced, which can
be  provided using the security extension
mechanism.    An AuthorizationEngine is
responsible for making the authorization
decisions about a request. The engine is
responsible for knowing how to  authorize and can
be backed by whatever mechanism a user wants. The
default mechanism is one backed by roles to
provide the authorization  decisions. The
AuthorizationEngine will be called by the
AuthorizationService, which handles more of the
internal workings that  apply in general to
authorization within Elasticsearch.    In order to
support external authorization services that would
back an  authorization engine, the entire
authorization process has become  asynchronous,
which also includes all calls to the
AuthorizationEngine.    The use of roles also
leaked out of the AuthorizationService in our
existing code that is not specifically related to
roles so this also  needed to be addressed.
RequestInterceptor instances sometimes used a
role to ensure a user was not attempting to
escalate their privileges.  Addressing this
leakage of roles meant that the RequestInterceptor
execution needed to move within the
AuthorizationService and that
AuthorizationEngines needed to support detection
of whether a user has  more privileges on a name
than another. The second area where roles  leaked
to the user is in the handling of a few privilege
APIs that  could be used to retrieve the user's
privileges or ask if a user has  privileges to
perform an action. To remove the leakage of roles
from  these actions, the AuthorizationService and
AuthorizationEngine gained  methods that enabled
an AuthorizationEngine to return the response for
these APIs.    Ultimately this feature is the work
included in:  #37785  #37495  #37328  #36245
#38137  #38219    Closes #32435
",1122903,10747,290626,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2424","elastic/elasticsearch","abd861bb9191a3e3edd4f92f7d5c586dfa90281d",2,"2019-02-11 20:13:54+01:00","Remove Dead Code + Duplication in o.e.c.routing
(#36678)  * Removed obviously unused
fields+methods  * Inlined public methods that only
had one caller  * Simplified `Optional` chain  *
Simplified some obviously redundant conditions
",1123421,10746,290672,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2425","elastic/elasticsearch","92ef753b56d25215f19098cbce91553fcae74c64",1,"2019-02-19 09:53:36-05:00","Allow retention lease operations under blocks
(#39089)  This commit allows manipulating
retention leases under blocks.
",1131404,10845,291733,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2426","elastic/elasticsearch","3a5d4dcec2ce5a9ae50263891d5f49d24b0ea75b",1,"2019-02-21 14:20:00+01:00","Simplify and Fix Synchronization in
InternalTestCluster (#39168)  * Remove unnecessary
`synchronized` statements  * Make `Predicate`s
constants where possible  * Cleanup some stream
usage  * Make unsafe public methods `synchronized`
* Closes #37965  * Closes #37275  * Closes #37345
",1133508,10859,292175,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2427","elastic/elasticsearch","94be43b26813324f090bb96cd5d5305b48af9dc0",1,"2019-02-26 18:54:38-07:00","Make security tests transport agnostic (#39411)
Currently there are two security tests that
specifically target the  netty security transport.
This PR moves the client authentication tests
into `AbstractSimpleSecurityTransportTestCase` so
that the nio transport  will also be tested.
Additionally the work to build transport
configurations is moved out of  the netty
transport and tested independently.
",1132858,10846,292336,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2428","elastic/elasticsearch","5b7e0de237fb514d14a61a347bc669d4b4adbe56",1,"2019-02-27 09:24:52+02:00","SQL: introduce the columnar option for REST
requests (#39287)  * Add ""columnar"" option for
REST requests (but be lenient for non-""plain""
modes) for json, yaml, smile and cbor formats.  *
Updated documentation
",1132977,10846,292356,"Andrei Stefan","astefan@users.noreply.github.com","GitHub","noreply@github.com"
"2429","elastic/elasticsearch","fe7b215354299d0bb442ad3251dd6dcb5df1e695",1,"2019-02-27 09:18:03+00:00","[ML] Refactoring scheduled event to store instant
instead of zoned time zone (#39380)  The
ScheduledEvent class has never preserved the time
zone so it makes more sense for it to store the
start and  end time using Instant rather than
ZonedDateTime.    Closes #38620
",1132983,10846,292357,"Mehran Koushkebaghi","mehran.k64@gmail.com","David Roberts","dave.roberts@elastic.co"
"2430","elastic/elasticsearch","54cbf1a35f319bf6664076ed6f3e351fef505978",1,"2019-02-28 11:57:20+01:00","Never block on scheduled refresh if a refresh is
running (#39462)  Today we block on the
ReferenceManager in the case of a scheduled
refresh.  Yet if there is a refresh happening
concurrently we might block and create  very
smallish segments. Instead we should just move on
to the next shard  and free up the refresh thread
instead.
",1133366,10848,292381,"Simon Willnauer","simonw@apache.org","GitHub","noreply@github.com"
"2431","elastic/elasticsearch","4bfc6c30af497ae0f1ae25c9f266e0008d29d730",1,"2019-03-04 09:52:23+01:00","Remote private SearchHits.Total class (#39556)
This is now possible as Lucene's `TotalHits`
implements `equals`/`hashcode`,  all the other
methods can be in-lined in `SearchHits` instead,
no need for  a specific wrapper class.
",1135156,10859,292776,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2432","elastic/elasticsearch","3b71a31557e2a9a2a5a7ab6aa77609b03eb3be7e",1,"2019-03-04 15:51:12+01:00","Remove Zen1 (#39466)  Removes all traces of Zen1
from the code base. Some of these commits will
also be backported to  7.0/7.x (#39470) as the
cluster.coordination package was making use of
some things in  discovery.zen and we want to keep
7.x as close as possible to master.
",1129109,10837,291773,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2433","elastic/elasticsearch","4f5ca367d96eab74372507733355ad70aa1af800",6,"2019-03-08 10:43:54-06:00","Remove the index type from internal watcher
indexes (#39761)  This commit removes the ""doc""
type from watcher internal indexes.  The template
still carries the ""_doc"" type since that is needed
for  the internal representation.    This impacts
the .watches, .triggered-watches, and .watch-
history indexes.    External consumers do not need
any changes since all external calls  go through
the _watcher API, and should not interact with the
the .index directly.    Relates #38637
",1132190,10874,292514,"Jake Landis","jake.landis@elastic.co","GitHub","noreply@github.com"
"2434","elastic/elasticsearch","0098c2e5b920ff63f00d2412dd6ec7cafc3101b5",1,"2019-03-12 16:21:48+08:00","Migrate Streamable to writeable for index package
(#37381)  Migrate streamable classes from index
package to Writeable and clean up access modifiers
Related to #34389
",1133122,10878,292551,"Like","like_0903@163.com","Przemyslaw Gomulka","przemyslaw.gomulka@elastic.co"
"2435","elastic/elasticsearch","839237d377094016c9e4ea24922e5d5351ae87eb",5,"2019-03-12 19:26:25+00:00","Only connect to new nodes on new cluster state
(#39629)  Today, when applying new cluster state
we attempt to connect to all of its  nodes as a
blocking part of the application process. This is
the right thing to  do with new nodes, and is a
no-op on any already-connected nodes, but is
questionable on known nodes from which we are
currently disconnected: there is  a risk that we
are partitioned from these nodes so that any
attempt to connect  to them will hang until it
times out. This can dramatically slow down the
application of new cluster states which hinders
the recovery of the cluster  during certain kinds
of partition.    If nodes are disconnected from
the master then it is likely that they are to be
removed as part of a subsequent cluster state
update, so there's no need to try  and reconnect
to them like this. Moreover there is no need to
attempt to  reconnect to disconnected nodes as
part of the cluster state application  process,
because we periodically try and reconnect to any
disconnected nodes,  and handle their
disconnectedness reasonably gracefully in the
meantime.    This commit alters this behaviour to
avoid reconnecting to known nodes during  cluster
state application.    Resolves #29025.
",1133605,10878,292599,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2436","elastic/elasticsearch","b0d77828670ccfaf121f5a83873c3a1be04ecde4",1,"2019-03-13 14:23:42-05:00","[ML] Refactor common utils out of ML plugin to
XPack.Core (#39976)  * [ML] Refactor common utils
out of ML plugin to XPack.Core    * implementing
GET filters with abstract transport    * removing
added rest param    * adjusting how defaults can
be supplied
",1133348,10885,292745,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2437","elastic/elasticsearch","1f62a7aba89c6cef7f7a8aba804eba63ae1ae1e4",2,"2019-03-19 09:47:38+00:00","[ML] Data Frame HLRC start & stop APIs (#40154)
",1134885,10903,293338,"David Kyle","david.kyle@elastic.co","GitHub","noreply@github.com"
"2438","elastic/elasticsearch","a520cc53dc2be904794299c9b00270d9ac9e80d9",3,"2019-03-19 09:13:27-04:00","Always fail engine if delete operation fails
(#40117)  Unlike index operations which can fail
at the document level to  analyzing errors, delete
operations should never fail at the document
level whether soft-deletes is enabled or not. With
this change, we will  always fail the engine if we
fail to apply a delete operation to Lucene.
Closes #33256
",1135612,10908,293475,"Nhat Nguyen","nhat.nguyen@elastic.co","GitHub","noreply@github.com"
"2439","elastic/elasticsearch","d234ef7612086cbbef4719efd89d0dd61d8f371a",1,"2019-03-19 20:17:31+01:00","Add date and date_nanos conversion to the
numeric_type sort option (#40199)  This change
adds an option to convert a `date` field to
nanoseconds resolution   and a `date_nanos` field
to millisecond resolution when sorting.  The
resolution of the sort can be set using the
`numeric_type` option of the  field sort builder.
The conversion is done at the shard level and is
restricted  to dates from 1970 to 2262 for the
nanoseconds resolution in order to avoid  numeric
overflow.
",1135756,10908,293492,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2440","elastic/elasticsearch","357aac806641b3807dcbbc70c33676228a33f627",3,"2019-03-21 10:55:09+02:00","Refactor Token Service (#39808)  This refactoring
is in the context of the work related to moving
security  tokens to a new index. In that regard,
the Token Service has to work with  token
documents stored in any of the two indices, albeit
only as a transient  situation. I reckoned the
added complexity as unmanageable,  hence this
refactoring.    This is incomplete, as it fails to
address the goal of minimizing .security accesses,
but I have stopped because otherwise it would've
become a full blown rewrite  (if not already). I
will follow-up with more targeted PRs.    In
addition to being a true refactoring, some 400
errors moved to 500. Furthermore,  more stringed
validation of various return result, has been
implemented, notably the  one of the token
document creation.
",1134503,10903,292925,"Albert Zaharovits","albert.zaharovits@gmail.com","GitHub","noreply@github.com"
"2441","elastic/elasticsearch","891998866ae847b663f757b12375d23f7990388e",2,"2019-03-27 17:14:02+11:00","Support mustache templates in role mappings
(#39984)  This adds a new `role_templates` field
to role mappings that is an  alternative to the
existing roles field.    These templates are
evaluated at runtime to determine which roles
should be  granted to a user.  For example, it is
possible to specify:        ""role_templates"": [
{ ""template"":{ ""source"": ""_user_{{username}}"" } }
]    which would mean that every user is assigned
to their own role based on  their username.    You
may not specify both roles and role_templates in
the same role  mapping.    This commit adds
support for templates to the role mapping API, the
role  mapping engine, the Java high level rest
client, and Elasticsearch  documentation.    Due
to the lack of caching in our role mapping store,
it is currently  inefficient to use a large number
of templated role mappings. This will be
addressed in a future change.
",1139393,10948,293710,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2442","elastic/elasticsearch","d029a131ba116927a8b005533cb56f1a24e0d9a8",7,"2019-04-04 17:24:41+03:00","Add an OpenID Connect authentication realm
(#40674)  This commit adds an OpenID Connect
authentication realm to  elasticsearch.
Elasticsearch (with the assistance of kibana or
another web component) acts as an OpenID Connect
Relying  Party and supports the Authorization Code
Grant and Implicit  flows as described in
http://ela.st/oidc-spec. It adds support  for
consuming and verifying signed ID Tokens, both RP
initiated and 3rd party initiated Single Sign on
and RP  initiated signle logout.  It also adds an
OpenID Connect Provider in the idp-fixture to  be
used for the associated integration tests.    The
code in this commit has been tracked in a feature
branch  and has been previously reviewed and
approved in :    #37009  #37787  #38474  #38475
#40262
",1148320,11004,294775,"Ioannis Kakavas","ikakavas@protonmail.com","GitHub","noreply@github.com"
"2443","elastic/elasticsearch","45a6ab0bec8848a576aa3e765d52468d8237b5ee",3,"2019-04-05 15:41:06+01:00","Use Writeable for TransportReplAction derivatives
(#40894)  Relates #34389
",1148836,11008,294831,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2444","elastic/elasticsearch","dac6c47aa1064b26cd1d6d16a9d4ea65a0ef51ad",1,"2019-04-16 16:45:00+02:00","Some Minor Cleanups in o.e.snapshots (#40962)  *
Some Minor Cleanups in o.e.snapshots    * Some
minor obvious cleanups that became possible now
tht we're on JDK11  * Removing redundant `Updates`
internal class
",1150975,11026,295499,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2445","elastic/elasticsearch","f48ddd53fd66cfef3032a17023cd9e2f88702af9",13,"2019-04-26 12:32:48-04:00","Use Java 11 collections conveniences everywhere
(#41399)  This commit replaces all applicable uses
with Java 11 collections  convenience methods.
",1154352,11052,296059,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2446","elastic/elasticsearch","b26fe5d212dd49f5862c9ab20057699aa5b8d5c4",4,"2019-04-30 12:01:08+03:00","Security Tokens moved to a new separate index
(#40742)  This commit introduces the `.security-
tokens` and `.security-tokens-7`  alias-index
pair. Because index snapshotting is at the index
level granularity  (ie you cannot snapshot a
subset of an index) snapshoting .`security` had
the undesirable effect of storing ephemeral
security tokens. The changes  herein address this
issue by moving tokens ""seamlessly"" (without user
intervention) to another index, so that a
""Security Backup"" (ie snapshot of  `.security`)
would not be bloated by ephemeral data.
",1157001,11061,296505,"Albert Zaharovits","albert.zaharovits@elastic.co","GitHub","noreply@github.com"
"2447","elastic/elasticsearch","da4899f7860c7cee145a094e71705fb0b12243fd",1,"2019-05-10 09:31:48-05:00","[ML] adding pivot.max_search_page_size option for
setting paging size (#41920)  * [ML] adding
pivot.size option for setting paging size    *
Changing field name to address PR comments    *
fixing ctor usage    * adjust hlrc for field name
change
",1160214,11078,297085,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2448","elastic/elasticsearch","307bc17f05163a553df1aede6dae439d5516dc50",6,"2019-05-20 12:26:33+03:00","Hash token values for storage (#41792)  This
commit changes how access tokens and refresh
tokens are stored  in the tokens index.    Access
token values are now hashed before being stored in
the id  field of the `user_token` and before
becoming part of the token  document id. Refresh
token values are hashed before being stored  in
the token field of the `refresh_token`. The tokens
are hashed  without a salt value since these are
v4 UUID values that have  enough entropy
themselves. Both rainbow table attacks and offline
brute force attacks are impractical.    As a side
effect of this change and in order to support
multiple  concurrent refreshes as introduced in
#39631, upon refreshing an  <access token, refresh
token> pair, the superseding access token  and
refresh tokens values are stored in the superseded
token doc,  encrypted with a key that is derived
from the superseded refresh  token. As such,
subsequent requests to refresh the same token in
the predefined time window will return the same
superseding access  token and refresh token
values, without hitting the tokens index  (as this
only stores hashes of the token values). AES in
GCM  mode is used for encrypting the token values
and the key  derivation from the superseded
refresh token uses a small number  of iterations
as it needs to be quick.    For backwards
compatibility reasons, the new behavior is only
enabled when all nodes in a cluster are in the
required version  so that old nodes can cope with
the token values in a mixed  cluster during a
rolling upgrade.
",1160107,11094,297069,"Ioannis Kakavas","ioannis@elastic.co","GitHub","noreply@github.com"
"2449","elastic/elasticsearch","81f3b5d4c288cee50d4484d77c3259a84b7a9562",5,"2019-05-23 20:18:34+02:00","Improve Close Index Response (#39687)  This
changes the `CloseIndexResponse` so that it
reports closing result  for each index. Shard
failures or exception are also reported per index,
and the global acknowledgment flag is computed
from the index results  only.    The response
looks like:  ```  {    ""acknowledged"" : true,
""shards_acknowledged"" : true,    ""indices"" : {
""docs"" : {        ""closed"" : true      }    }  }
```    The response reports shard failures like:
```  {    ""acknowledged"" : false,
""shards_acknowledged"" : false,    ""indices"" : {
""docs-1"" : {        ""closed"" : true      },
""docs-2"" : {        ""closed"" : false,
""shards"" : {          ""1"" : {
""failures"" : [              {
""shard"" : 1,                ""index"" : ""docs-2"",
""status"" : ""BAD_REQUEST"",                ""reason""
: {                  ""type"" :
""index_closed_exception"",
""reason"" : ""closed"",                  ""index_uuid""
: ""JFmQwr_aSPiZbkAH_KEF7A"",
""index"" : ""docs-2""                }              }
]          }        }      },      ""docs-3"" : {
""closed"" : true      }    }  }  ```    Co-
authored-by: Tanguy Leroux <tlrx.dev@gmail.com>
",1160974,11089,297194,"Tanguy Leroux","tlrx.dev@gmail.com","Nhat Nguyen","nhat.nguyen@elastic.co"
"2450","elastic/elasticsearch","a15f1ee4f64b19670b15a9c1526c7b0b0204ea60",5,"2019-05-23 21:06:47+01:00","[ML] Improve file structure finder timestamp
format determination (#41948)  This change
contains a major refactoring of the timestamp
format determination code used by the ML find file
structure  endpoint.    Previously timestamp
format determination was done separately  for each
piece of text supplied to the timestamp format
finder.  This had the drawback that it was not
possible to distinguish  dd/MM and MM/dd in the
case where both numbers were 12 or less.  In order
to do this sensibly it is best to look across all
the  available timestamps and see if one of the
numbers is greater  than 12 in any of them.  This
necessitates making the timestamp  format finder
an instantiable class that can accumulate evidence
over time.    Another problem with the previous
approach was that it was only  possible to
override the timestamp format to one of a limited
set of timestamp formats.  There was no way out if
a file to be  analysed had a timestamp that was
sane yet not in the supported  set.  This is now
changed to allow any timestamp format that can  be
parsed by a combination of these Java date/time
formats:  yy, yyyy, M, MM, MMM, MMMM, d, dd, EEE,
EEEE, H, HH, h, mm, ss,  a, XX, XXX, zzz
Additionally S letter groups (fractional seconds)
are supported  providing they occur after ss and
separated from the ss by a dot,  comma or colon.
Spacing and punctuation is also permitted with
the exception of the question mark, newline and
carriage return  characters, together with literal
text enclosed in single quotes.    The full list
of changes/improvements in this refactor is:    -
Make TimestampFormatFinder an instantiable class
- Overrides must be specified in Java date/time
format - Joda    format is no longer accepted  -
Joda timestamp formats in outputs are now derived
from the    determined or overridden Java
timestamp formats, not stored    separately  -
Functionality for determining the ""best"" timestamp
format in    a set of lines has been moved from
TextLogFileStructureFinder    to
TimestampFormatFinder, taking advantage of the
fact that    TimestampFormatFinder is now an
instantiable class with state  - The functionality
to quickly rule out some possible Grok    patterns
when looking for timestamp formats has been
changed    from using simple regular expressions
to the much faster    approach of using the Shift-
And method of sub-string search,    but using an
""alphabet"" consisting of just 1 (representing any
digit) and 0 (representing non-digits)  -
Timestamp format overrides are now much more
flexible  - Timestamp format overrides that do not
correspond to a built-in    Grok pattern are
mapped to a %{CUSTOM_TIMESTAMP} Grok pattern
whose definition is included within the date
processor in the    ingest pipeline  - Grok
patterns that correspond to multiple Java
date/time    patterns are now handled better - the
Grok pattern is accepted    as matching broadly,
and the required set of Java date/time    patterns
is built up considering all observed samples  - As
a result of the more flexible acceptance of Grok
patterns,    when looking for the ""best"" timestamp
in a set of lines    timestamps are considered
different if they are preceded by    a different
sequence of punctuation characters (to prevent
timestamps far into some lines being considered
similar to    timestamps near the beginning of
other lines)  - Out-of-the-box Grok patterns that
are considered now include    %{DATE} and
%{DATESTAMP}, which have indeterminate day/month
ordering  - The order of day/month in formats with
indeterminate day/month    order is determined by
considering all observed samples (plus    the
server locale if the observed samples still do not
suggest    an ordering)    Relates #38086  Closes
#35137  Closes #35132
",1162083,11090,297514,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2451","elastic/elasticsearch","053e1543e9c3702cf3c423744ee9db999991bb6a",1,"2019-05-31 11:23:36+01:00","Add option to ObjectParser to consume unknown
fields (#42491)  ObjectParser has two ways of
dealing with unknown fields: ignore them entirely,
or throw an error. Sometimes it can be useful
instead to gather up these unknown  fields and
record them separately, for example as arbitrary
entries in a map.    This commit adds the ability
to specify an unknown field consumer on an
ObjectParser,  called with the field name and
parsed value of each unknown field encountered
during  parsing. The public API of ObjectParser is
largely unchanged, with a single new  constructor
method and interface definition.
",1160714,11084,297147,"Alan Woodward","romseygeek@apache.org","GitHub","noreply@github.com"
"2452","elastic/elasticsearch","43a1dee8a014daa0b714898766b05bb6c1e9b4c1",1,"2019-06-03 08:48:51-05:00","Read the default pipeline for bulk upsert through
an alias (#41963)  This commit allows bulk upserts
to correctly read the default pipeline  for the
concrete index that belongs to an alias.    Bulk
upserts are modeled differently from normal index
requests such that  the index request is a request
inside of the update request. The update  request
(outer) contains the index or alias name is not
part of the (inner)  index request. This commit
adds a secondary check against the update request
(outer) if the index request (inner) does not find
an alias.
",1160146,11082,297083,"Jake Landis","jake.landis@elastic.co","GitHub","noreply@github.com"
"2453","elastic/elasticsearch","eaa3f874b6b657b01405594d761f05254ab2f5f7",3,"2019-06-05 10:55:07-06:00","Add custom metadata to snapshots (#41281)  Adds a
metadata field to snapshots which can be used to
store arbitrary  key-value information. This may
be useful for attaching a description of  why a
snapshot was taken, tagging snapshots to make
categorization  easier, or identifying the source
of automatically-created snapshots.
",1161424,11087,297221,"Gordon Brown","gordon.brown@elastic.co","GitHub","noreply@github.com"
"2454","elastic/elasticsearch","b15d62c3ab5b3766a975f8d4b3878cbde8c2b6c0",1,"2019-06-05 17:22:37-07:00","Remove the transport client (#42538)  This commit
removes the transport client and all remaining
uses in the code.
",1160000,11078,296797,"Ryan Ernst","ryan@iernst.net","GitHub","noreply@github.com"
"2455","elastic/elasticsearch","faffaa9b28fb6d94bfe6572dca37cad4fb2b90d6",2,"2019-06-11 15:50:05+02:00","Add SAS Token Authentication Support to Azure Repo
Plugin (#42982)  * Added setting for SAS token  *
Added support for the token in tests  * Relates
#42117
",1159125,11082,296770,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2456","elastic/elasticsearch","38f3a74dd3dabcf8f227cc77a0c18fb1d3031501",21,"2019-06-13 10:28:41+02:00","Report timing stats as part of the Job stats
response (#42709)
",1160471,11095,297056,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2457","elastic/elasticsearch","9a4ffa3d7ee7c7452f99ff98c226bbeaaca9e9c9",1,"2019-06-18 13:28:22+02:00","Recursive Delete on BlobContainer (#43281)  This
is a prerequisite of #42189:    * Add directory
delete method to blob container specific to each
implementation:    * Some notes on the
implementations:         * AWS + GCS: We can
simply exploit the fact that both AWS and GCS
return blobs lexicographically ordered which
allows us to simply delete in the same order that
we receive the blobs from the listing request. For
AWS this simply required listing without the
delimiter setting (so we get a deep listing) and
for GCS the same behavior is achieved by not using
the directory mode on the listing invocation. The
nice thing about this is, that even for very large
numbers of blobs the memory requirements are now
capped nicely since we go page by page when
deleting.         * For Azure I extended the
parallelization to the listing calls as well and
made it work recursively. I verified that this
works with thread count `1` since we only block
once in the initial thread and then fan out to a
""graph"" of child listeners that never block.
* HDFS and FS are trivial since we have directory
delete methods available for them  * Enhances
third party tests to ensure the new functionality
works (I manually ran them for all cloud
providers)
",1162626,11110,297540,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2458","elastic/elasticsearch","4422c0ead9cd0af561b06313c633da25308379db",7,"2019-06-19 09:42:18+10:00","Add kerberos grant_type to get token in exchange
for Kerberos ticket (#42847)  Kibana wants to
create access_token/refresh_token pair using Token
management APIs in exchange for kerberos tickets.
`client_credentials`  grant_type requires every
user to have
`cluster:admin/xpack/security/token/create`
cluster privilege.    This commit introduces
`_kerberos` grant_type for generating
`access_token`  and `refresh_token` in exchange
for a valid base64 encoded kerberos ticket.  In
addition, `kibana_user` role now has cluster
privilege to create tokens.  This allows Kibana to
create access_token/refresh_token pair in exchange
for  kerberos tickets.    Note:  The lifetime from
the kerberos ticket is not used in ES and so even
after it expires  the access_token/refresh_token
pair will be valid. Care must be taken to
invalidate  such tokens using token management
APIs if required.    Closes #41943
",1162848,11107,297257,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2459","elastic/elasticsearch","4eafad431d838ab19032cda600590e47efc54432",1,"2019-06-19 13:14:51+02:00","Rename AutoDetectResultProcessor* to
AutodetectResultProcessor* for consistency with
other classes where the spelling is ""Autodetect""
(#43359)
",1162855,11107,297248,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2460","elastic/elasticsearch","dc5a560b58d596ae2018c2a605b53cdafd71d9ac",1,"2019-06-19 22:44:22+02:00","Reduce the number of docvalues iterator created in
the global ordinals fielddata (#43091)  Today the
fielddata for global ordinals re-creates docvalues
readers of each segment  when building the
iterator of a single segment. This is required
because the lookup of  global ordinals needs to
access the docvalues's TermsEnum of each segment
to retrieve  the original terms. This also means
that we need to create NxN (where N is the number
of segment in the index) docvalues iterators  each
time we want to collect global ordinal values.
This wasn't an issue in previous versions since
docvalues readers are stateless  before 6.0 so
they are reused on each segment but now that
docvalues are iterators we need to create a new
instance each time  we want to access the values.
In order to avoid creating too many iterators this
change splits  the global ordinals fielddata in
two classes, one that is used to cache a single
instance per directory reader and one  that is
created from the cached instance that can be used
by a single consumer. The latter creates the
TermsEnum of each segment  once and reuse them to
create the segment's iterator. This prevents the
creation of all TermsEnums each time we want to
access  the value of a single segment, hence
reducing the number of docvalues iterator to
create to Nx2 (one iterator and one lookup per
segment).
",1163307,11107,297294,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2461","elastic/elasticsearch","f666ceeb78d802f1fc99335e0837416110225ea5",1,"2019-06-23 23:28:24-07:00","Use transport actions instead of guice for xpack
info (#43449)  The Xpack info API internally
gathers all xpack feature sets by using  guice to
bind many implementations. The info api then
iterates over  these feature sets to gather usage
information for each. However, since  each of
these implementations are in different plugins,
there is no  direct, non-guice way for them to
register the implementations. This  commit removes
the dependence on guice for the info api by having
the  core xpack jar contain an action instance for
each plugin, and the  implementation of those
actions are then registered within each xpack
feature plugin. The info api then iterates over
each of these actions  and calls them with the
NodeClient.
",1164451,11117,297256,"Ryan Ernst","ryan@iernst.net","GitHub","noreply@github.com"
"2462","elastic/elasticsearch","893785a758056bba64eba2bfbe84a82dd6ee1a48",1,"2019-06-24 11:35:46-04:00","Move nio ip filter rule to be a channel handler
(#43507)  Currently nio implements ip filtering at
the channel context level. This  is kind of a hack
as the application logic should be implemented at
the  handler level. This commit moves the ip
filtering into a channel  handler. This requires
adding an indicator to the channel handler to
show when a channel should be closed.
",1164632,11118,297293,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2463","elastic/elasticsearch","5fa36dad0b8503bef3d91173bb342da555445c26",14,"2019-06-25 10:48:27+03:00","[ML] Machine learning data frame analytics
(#43544)  This merges the initial work that adds a
framework for performing  machine learning
analytics on data frames. The feature is currently
experimental  and requires a platinum license.
Note that the original commits can be  found in
the `feature-ml-data-frame-analytics` branch.    A
new set of APIs is added which allows the creation
of data frame analytics  jobs. Configuration
allows specifying different types of analysis to
be performed  on a data frame. At first there is
support for outlier detection.    The APIs are:
- PUT _ml/data_frame/analysis/{id}  - GET
_ml/data_frame/analysis/{id}  - GET
_ml/data_frame/analysis/{id}/_stats  - POST
_ml/data_frame/analysis/{id}/_start  - POST
_ml/data_frame/analysis/{id}/_stop  - DELETE
_ml/data_frame/analysis/{id}    When a data frame
analytics job is started a persistent task is
created and started.  The main steps of the task
are:    1. reindex the source index into the dest
index  2. analyze the data through the
data_frame_analyzer c++ process  3. merge the
results of the process back into the destination
index    In addition, an evaluation API is added
which packages commonly used metrics  that provide
evaluation of various analysis:    - POST
_ml/data_frame/_evaluate
",1175696,11279,299809,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2464","elastic/elasticsearch","3b876159e23a2980ef216acb645f80f3e798718e",2,"2019-06-25 18:08:17+10:00","Make role descriptors optional when creating API
keys (#43481)  This commit changes the
`role_descriptors` field from required  to
optional when creating API key. The default
behavior in .NET ES  client is to omit properties
with `null` value requiring additional
workarounds. The behavior for the API does not
change.  Field names (`id`, `name`) in the
invalidate api keys API documentation have been
corrected where they were wrong.    Closes #42053
",1175718,11279,299809,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2465","elastic/elasticsearch","e689b20eba8a583c0a3a7783e06b00a97cbdee63",2,"2019-06-25 17:29:30+02:00","Add voting-only master node (#43410)  A voting-
only master-eligible node is a node that can
participate in master elections but will not act
as a master in the cluster. In particular, a
voting-only node can help elect another master-
eligible  node as master, and can serve as a
tiebreaker in elections. High availability (HA)
clusters require at  least three master-eligible
nodes, so that if one of the three nodes is down,
then the remaining two  can still elect a master
amongst them-selves. This only requires one of the
two remaining nodes to  have the capability to act
as master, but both need to have voting powers.
This means that one of  the three master-eligible
nodes can be made as voting-only. If this voting-
only node is a dedicated  master, a less powerful
machine or a smaller heap-size can be chosen for
this node. Alternatively, a  voting-only non-
dedicated master node can play the role of the
third master-eligible node, which  allows running
an HA cluster with only two dedicated master
nodes.    Closes #14340    Co-authored-by: David
Turner <david.turner@elastic.co>
",1176365,11291,299941,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2466","elastic/elasticsearch","fd4eb96d1c2ee7091d99b5a5069673de45833801",1,"2019-06-28 15:42:43+02:00","Refactor IndexSearcherWrapper to disallow the
wrapping of IndexSearcher (#43645)  This change
removes the ability to wrap an IndexSearcher in
plugins. The IndexSearcherWrapper is replaced by
an IndexReaderWrapper and allows to wrap the
DirectoryReader only. This simplifies the creation
of the context IndexSearcher that is used on a per
request basis. This change also moves the
optimization that was implemented in the security
index searcher wrapper to the ContextIndexSearcher
that now checks the live docs to determine how the
search should be executed. If the underlying live
docs is a sparse bit set the searcher will compute
the intersection  betweeen the query and the live
docs instead of checking the live docs on every
document that match the query.
",1181180,11330,300424,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2467","elastic/elasticsearch","e094cb0ddac83e1a27a2fb2b70cba77cf04aeefb",7,"2019-07-01 21:38:37+10:00","HLRC changes for kerberos grant type (#43642)  The
TODO from last PR for kerbero grant type was
missed.  This commit adds the changes for kerberos
grant type in HLRC.
",1181964,11335,300590,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2468","elastic/elasticsearch","bb130f554e8908be2d8fbb9bb1185cffed9d5255",1,"2019-07-03 13:57:52+10:00","Use separate BitSet cache in Doc Level Security
(#43669)  Document level security was depending on
the shared  ""BitsetFilterCache"" which (by design)
never expires its entries.    However, when using
DLS queries - particularly templated ones - the
number (and memory usage) of generated bitsets can
be significant.    This change introduces a new
cache specifically for BitSets used in  DLS
queries, that has memory usage constraints and
access time expiry.    The whole cache is
automatically cleared if the role cache is
cleared.  Individual bitsets are cleared when the
corresponding lucene index  reader is closed.
The cache defaults to 50MB, and entries expire if
unused for 7 days.
",1185581,11368,301627,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2469","elastic/elasticsearch","d6f36a8e4fb04c940f46fa633170cc712380713a",5,"2019-07-03 10:59:52+03:00","[ML] Set df-analytics task state to failed when
appropriate (#43880)  This introduces a `failed`
state to which the data frame analytics
persistent task is set to when something
unexpected fails. It could  be the process
crashing, the results processor hitting some
error,  etc. The failure message is then captured
and set on the task state.  From there, it becomes
available via the _stats API as `failure_reason`.
The df-analytics stop API now has a `force`
boolean parameter. This allows  the user to call
it for a failed task in order to reset it to
`stopped` after  we have ensured the failure has
been communicated to the user.    This commit also
adds the analytics version in the persistent task
params as this allows us to prevent tasks to run
on unsuitable nodes in  the future.
",1186171,11380,301774,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2470","elastic/elasticsearch","e63fd536bff08ed575507576b2a0a2e9f71f463b",6,"2019-07-03 11:04:57+02:00","Watcher: Allow to execute actions for each element
in array (#41997)  This adds the ability to
execute an action for each element that occurs  in
an array, for example you could sent a dedicated
slack action for  each search hit returned from a
search.    There is also a limit for the number of
actions executed, which is   hardcoded to 100
right now, to prevent having watches run forever.
The watch history logs each action result and the
total number of actions  the were executed.
Relates #34546
",1186371,11380,301778,"Alexander Reelsen","alexander@reelsen.net","GitHub","noreply@github.com"
"2471","elastic/elasticsearch","1572080a6319113cd9e375935233c7176f6bddd4",9,"2019-07-09 16:07:27+02:00","[ML] Add DatafeedTimingStats to datafeed
GetDatafeedStatsAction.Response (#43045)
",1188061,11390,301668,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2472","elastic/elasticsearch","cbd9d4c259bf5a541bc49f65f7973174a36df449",4,"2019-07-11 00:34:54+03:00","SQL: add pretty printing to JSON format (#43756)
",1189212,11400,301900,"Andrei Stefan","astefan@users.noreply.github.com","GitHub","noreply@github.com"
"2473","elastic/elasticsearch","873e9f93cf6e0549c1807a2b6d13bf7710ef334d",1,"2019-07-11 07:13:13-05:00","[ML] Adds support for
regression.mean_squared_error to eval API (#44140)
* [ML] Adds support for
regression.mean_squared_error to eval API    *
addressing PR comments    * fixing tests
",1189949,11412,302105,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2474","elastic/elasticsearch","a2e0db7783055300de77f3a0e525a21ac2bd7530",5,"2019-07-15 12:04:50-06:00","Add Snapshot Lifecycle Management (#43934)  * Add
SnapshotLifecycleService and related CRUD APIs
This commit adds `SnapshotLifecycleService` as a
new service under the ilm  plugin. This service
handles snapshot lifecycle policies by scheduling
based on  the policies defined schedule.    This
also includes the get, put, and delete APIs for
these policies    Relates to #38461    * Make
scheduledJobIds return an immutable set    * Use
Object.equals for SnapshotLifecyclePolicy    *
Remove unneeded TODO    * Implement
ToXContentFragment on SnapshotLifecyclePolicyItem
* Copy contents of the scheduledJobIds    * Handle
snapshot lifecycle policy updates and deletions
(#40062)    (Note this is a PR against the
`snapshot-lifecycle-management` feature branch)
This adds logic to `SnapshotLifecycleService` to
handle updates and deletes for  snapshot policies.
Policies with incremented versions have the old
policy  cancelled and the new one scheduled.
Deleted policies have their schedules  cancelled
when they are no longer present in the cluster
state metadata.    Relates to #38461    * Take a
snapshot for the policy when the SLM policy is
triggered (#40383)    (This is a PR for the
`snapshot-lifecycle-management` branch)    This
commit fills in `SnapshotLifecycleTask` to
actually perform the  snapshotting when the policy
is triggered. Currently there is no handling of
the  results (other than logging) as that will be
added in subsequent work.    This also adds unit
tests and an integration test that schedules a
policy and  ensures that a snapshot is correctly
taken.    Relates to #38461    * Record most
recent snapshot policy success/failure (#40619)
Keeping a record of the results of the successes
and failures will aid  troubleshooting of policies
and make users more confident that their
snapshots are being taken as expected.    This is
the first step toward writing history in a more
permanent  fashion.    * Validate snapshot
lifecycle policies (#40654)    (This is a PR
against the `snapshot-lifecycle-management`
branch)    With the commit, we now validate the
content of snapshot lifecycle policies when  the
policy is being created or updated. This checks
for the validity of the id,  name, schedule, and
repository. Additionally, cluster state is checked
to ensure  that the repository exists prior to the
lifecycle being added to the cluster  state.
Part of #38461    * Hook SLM into ILM's start and
stop APIs (#40871)    (This pull request is for
the `snapshot-lifecycle-management` branch)
This change allows the existing `/_ilm/stop` and
`/_ilm/start` APIs to also  manage snapshot
lifecycle scheduling. When ILM is stopped all
scheduled jobs are  cancelled.    Relates to
#38461    * Add tests for
SnapshotLifecyclePolicyItem (#40912)    Adds
serialization tests for
SnapshotLifecyclePolicyItem.    * Fix improper
import in build.gradle after master merge    * Add
human readable version of modified date for
snapshot lifecycle policy (#41035)    * Add human
readable version of modified date for snapshot
lifecycle policy    This small change changes it
from:    ```  ...  ""modified_date"": 1554843903242,
...  ```    To    ```  ...  ""modified_date"" :
""2019-04-09T21:05:03.242Z"",
""modified_date_millis"" : 1554843903242,  ...  ```
Including the `""modified_date""` field when the
`?human` field is used.    Relates to #38461    *
Fix test    * Add API to execute SLM policy on
demand (#41038)    This commit adds the ability to
perform a snapshot on demand for a policy. This
can be useful to take a snapshot immediately prior
to performing some sort of  maintenance.
```json  PUT /_ilm/snapshot/<policy>/_execute  ```
And it returns the response with the generated
snapshot name:    ```json  {    ""snapshot_name"" :
""production-
snap-2019.04.09-rfyv3j9qreixkdbnfuw0ug""  }  ```
Note that this does not allow waiting for the
snapshot, and the snapshot could  still fail. It
*does* record this information into the cluster
state similar to  a regularly trigged SLM job.
Relates to #38461    * Add next_execution to SLM
policy metadata (#41221)    * Add next_execution
to SLM policy metadata    This adds the next time
a snapshot lifecycle policy will be executed when
retriving a policy's metadata, for example:
```json  GET /_ilm/snapshot?human  {
""production"" : {      ""version"" : 1,
""modified_date"" : ""2019-04-15T21:16:21.865Z"",
""modified_date_millis"" : 1555362981865,
""policy"" : {        ""name"" : ""<production-
snap-{now/d}>"",        ""schedule"" : ""*/30 * * * *
?"",        ""repository"" : ""repo"",        ""config""
: {          ""indices"" : [            ""foo-*"",
""important""          ],
""ignore_unavailable"" : true,
""include_global_state"" : false        }      },
""next_execution"" : ""2019-04-15T21:16:30.000Z"",
""next_execution_millis"" : 1555362990000    },
""other"" : {      ""version"" : 1,
""modified_date"" : ""2019-04-15T21:12:19.959Z"",
""modified_date_millis"" : 1555362739959,
""policy"" : {        ""name"" : ""<other-
snap-{now/d}>"",        ""schedule"" : ""0 30 2 * *
?"",        ""repository"" : ""repo"",        ""config""
: {          ""indices"" : [            ""other""
],          ""ignore_unavailable"" : false,
""include_global_state"" : true        }      },
""next_execution"" : ""2019-04-16T02:30:00.000Z"",
""next_execution_millis"" : 1555381800000    }  }
```    Relates to #38461    * Fix and enhance
tests    * Figured out how to Cron    * Change SLM
endpoint from /_ilm/* to /_slm/* (#41320)    This
commit changes the endpoint for snapshot lifecycle
management from:    ```  GET
/_ilm/snapshot/<policy>  ```    to:    ```  GET
/_slm/policy/<policy>  ```    It mimics the ILM
path only using `slm` instead of `ilm`.    Relates
to #38461    * Add initial documentation for SLM
(#41510)    * Add initial documentation for SLM
This adds the initial documentation for snapshot
lifecycle management.    It also includes the REST
spec API json files since they're sort of
documentation.    Relates to #38461    * Add
`manage_slm` and `read_slm` roles (#41607)    *
Add `manage_slm` and `read_slm` roles    This adds
two more built in roles -    `manage_slm` which
has permission to perform any of the SLM actions,
as well as  stopping, starting, and retrieving the
operation status of ILM.    `read_slm` which has
permission to retrieve snapshot lifecycle policies
as well  as retrieving the operation status of
ILM.    Relates to #38461    * Add execute to the
test    * Fix ilm -> slm typo in test    * Record
SLM history into an index (#41707)    It is useful
to have a record of the actions that Snapshot
Lifecycle  Management takes, especially for the
purposes of alerting when a  snapshot fails or has
not been taken successfully for a certain amount
of  time.    This adds the infrastructure to
record SLM actions into an index that  can be
queried at leisure, along with a lifecycle policy
so that this  history does not grow without bound.
Additionally,  SLM automatically setting up an
index + lifecycle policy leads to
`index_lifecycle` custom metadata in the cluster
state, which some of  the ML tests don't know how
to deal with due to setting up custom
`NamedXContentRegistry`s.  Watcher would cause the
same problem, but it  is already disabled (for the
same reason).    * High Level Rest Client support
for SLM (#41767)    * High Level Rest Client
support for SLM    This commit add HLRC support
for SLM.    Relates to #38461    * Fill out
documentation tests with tags    * Add more
callouts and asciidoc for HLRC    * Update javadoc
links to real locations    * Add security test
testing SLM cluster privileges (#42678)    * Add
security test testing SLM cluster privileges
This adds a test to `PermissionsIT` that uses the
`manage_slm` and `read_slm`  cluster privileges.
Relates to #38461    * Don't redefine vars    *
Add Getting Started Guide for SLM  (#42878)
This commit adds a basic Getting Started Guide for
SLM.    * Include SLM policy name in Snapshot
metadata (#43132)    Keep track of which SLM
policy in the metadata field of the Snapshots
taken by SLM. This allows users to more easily
understand where the  snapshot came from, and will
enable future SLM features such as  retention
policies.    * Fix compilation after master merge
* [TEST] Move exception wrapping for devious
exception throwing    Fixes an issue where an
exception was created from one line and thrown in
another.    * Fix SLM for the change to
AcknowledgedResponse    * Add Snapshot Lifecycle
Management Package Docs (#43535)    * Fix
compilation for transport actions now that task is
required    * Add a note mentioning the privileges
needed for SLM (#43708)    * Add a note mentioning
the privileges needed for SLM    This adds a note
to the top of the ""getting started with SLM""
documentation mentioning that there are two built-
in privileges to  assist with creating roles for
SLM users and administrators.    Relates to #38461
* Mention that you can create snapshots for
indices you can't read    * Fix REST tests for new
number of cluster privileges    * Mute
testThatNonExistingTemplatesAreAddedImmediately
(#43951)    * Fix SnapshotHistoryStoreTests after
merge    * Remove overridden newResponse functions
that have been removed
",1194974,11471,303117,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2475","elastic/elasticsearch","e2bdd43703364ac86e3f593dec926f73425e67a7",1,"2019-07-16 09:32:31+02:00","Add DatafeedTimingStats.average_search_time_per_bu
cket_ms and
TimingStats.total_bucket_processing_time_ms stats
(#44125)
",1195736,11478,303239,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2476","elastic/elasticsearch","78e5cbbae80650435d1584d62eff42e91317bc50",2,"2019-07-18 15:28:32+02:00","Implement Eventually Consistent Mock Repository
for SnapshotResiliencyTests (#40893)  * Add
eventually consistent mock repository for
reproducing and testing AWS S3 blob store behavior
* Relates #38941
",1197270,11501,303930,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2477","elastic/elasticsearch","9edb0b4d2d60eb7cc8d6b84ebcd4e9da2840b15f",1,"2019-07-18 16:19:49-06:00","Allow empty configuration for SLM policies
(#44465)  * Allow empty configuration for SLM
policies    When putting or updating a snapshot
lifecycle policy it was not possible  to elide the
`config` map. This commit makes the configuration
optional,  the same way that it is when taking a
snapshot.    Relates to #38461    * Add
Objects.requireNonNull for required parts of the
policy
",1198075,11507,303977,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2478","elastic/elasticsearch","a69baf6b7752efb855b7d2b725be07bf2385f898",4,"2019-07-24 09:54:57+02:00","Add CloseIndexResponse to HLRC (#44349)  The
CloseIndexResponse was improved in #39687; this
commit   exposes it in the HLRC.
",1198028,11502,303820,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2479","elastic/elasticsearch","0f03de595696f0e6f0a2d2390d1dda41e3b8f721",22,"2019-07-26 12:19:13+02:00","Implement exponential average search time per hour
statistics. (#44683)
",1200087,11515,304396,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2480","elastic/elasticsearch","f57d67c56cc86f4bca9f950c61d677631747ac96",2,"2019-08-01 11:14:43-04:00","Extract reindexing logic from transport action
(#45024)  This commit extracts the reindexing
logic from the transport action so  that it can be
incorporated into the persistent reindex work
without  requiring the usage of the client.
",1201796,11530,304629,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2481","elastic/elasticsearch","570e406e91742cf385c37688a4996825e5ab5083",4,"2019-08-01 20:19:25+02:00","Stop Passing Around REST Request in Multiple Spots
(#44949)  * Stop Passing Around REST Request in
Multiple Spots    * Motivated by #44564    * We
are currently passing the REST request object
around to a large number of places. This works
fine since we simply copy the full request content
before we handle the rest itself which is
needlessly hard on GC and heap.    * This PR
removes a number of spots where the request is
passed around needlessly. There are many more
spots to optimize in follow-ups to this, but this
one would already enable bypassing the request
copying for some error paths in a follow up.
",1201750,11530,304611,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2482","elastic/elasticsearch","c8977a44d10bd198ef3ded38ffcf2b278f0e3879",1,"2019-08-06 12:12:21+02:00","Reindex share retry between hit sources (#44203)
The client and remote hit sources had each their
own retry mechanism,  which would do the same.
Supporting resiliency we would have to expand  on
the retry mechanisms and as a preparation for
that, the retry  mechanism is now shared such that
each sub class is only responsible for  sending
requests and converting responses/failures to
common format.    Part of #42612
",1204291,11543,305049,"Henning Andersen","33268011+henningandersen@users.noreply.github.com","GitHub","noreply@github.com"
"2483","elastic/elasticsearch","177bd62aba99ae6b1d7f37517c55e4e210732a37",6,"2019-08-07 08:01:42-06:00","Include in-progress snapshot for a policy with get
SLM policy‚Ä¶ (#45245)  This commit adds the
""in_progress"" key to the SLM get policy API,
returning a policy that looks like:    ```json  {
""daily-snapshots"" : {      ""version"" : 1,
""modified_date"" : ""2019-08-05T18:41:48.778Z"",
""modified_date_millis"" : 1565030508778,
""policy"" : {        ""name"" : ""<production-
snap-{now/d}>"",        ""schedule"" : ""0 30 1 * *
?"",        ""repository"" : ""repo"",        ""config""
: {          ""indices"" : [            ""foo-*"",
""important""          ],
""ignore_unavailable"" : true,
""include_global_state"" : false        },
""retention"" : {          ""expire_after"" : ""10m""
}      },      ""last_success"" : {
""snapshot_name"" : ""production-
snap-2019.08.05-oxctmnobqye3luim4uejhg"",
""time_string"" : ""2019-08-05T18:42:23.257Z"",
""time"" : 1565030543257      },
""next_execution"" : ""2019-08-06T01:30:00.000Z"",
""next_execution_millis"" : 1565055000000,
""in_progress"" : {        ""name"" : ""production-
snap-2019.08.05-oxctmnobqye3luim4uejhg"",
""uuid"" : ""t8Idqt6JQxiZrzp0Vt7z6g"",        ""state""
: ""STARTED"",        ""start_time"" :
""2019-08-05T18:42:22.998Z"",
""start_time_millis"" : 1565030542998      }    }  }
```    These are only visible while the snapshot
is being taken (or failed),  since it reads from
the cluster state rather than from the repository
itself.
",1206623,11557,305331,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2484","elastic/elasticsearch","76352da00dd9c5e8d0e4f0a9cd80988b9dfd7ddb",3,"2019-08-08 12:48:16+03:00","Allow empty token endpoint for implicit flow
(#45038)  When using the implicit flow in OpenID
Connect, the  op.token_endpoint_url should not be
mandatory as there is no need  to contact the
token endpoint of the OP.
",1207287,11566,305572,"Ioannis Kakavas","ioannis@elastic.co","GitHub","noreply@github.com"
"2485","elastic/elasticsearch","39142db03fcdedaca16e84db621c87e6ac5355ee",1,"2019-08-10 08:10:53+02:00","Isolate Request in Call-Chain for REST Request
Handling (#45130)  * Follow up to #44949  * Stop
using a special code path for multi-line JSON and
instead handle its detection like that of other
XContent types when creating the request  * Only
leave a single path that holds a reference to the
full REST request     * In the next step we can
move the copying of request content to happen
before the actual request handling and make it
conditional on the handler in question to stop
copying bulk requests as suggested in #44564
",1209516,11583,305933,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2486","elastic/elasticsearch","b44c0281e6cbb74b3b4f50fbb31b61cc1bfb32d5",7,"2019-08-12 13:09:34+10:00","Refactor cluster privileges and cluster permission
(#45265)  The current implementations make it
difficult for  adding new privileges (example: a
cluster privilege which is  more than cluster
action-based and not exposed to the security
administrator). On the high level, we would like
our cluster privilege  either:  - a named cluster
privilege    This corresponds to `cluster` field
from the role descriptor  - or a configurable
cluster privilege    This corresponds to the
`global` field from the role-descriptor and
allows a security administrator to configure them.
Some of the responsibilities like the merging of
action based cluster privileges  are now pushed at
cluster permission level. How to implement the
predicate  (using Automaton) is being now enforced
by cluster permission.    `ClusterPermission`
helps in enforcing the cluster level access either
by  performing checks against cluster action and
optionally against a request.  It is a collection
of one or more permission checks where if any of
the checks  allow access then the permission
allows access to a cluster action.
Implementations of cluster privilege must be able
to provide information  regarding the predicates
to the cluster permission so that can be enforced.
This is enforced by making implementations of
cluster privilege aware of  cluster permission
builder and provide a way to specify how the
permission is  to be built for a given privilege.
This commit renames `ConditionalClusterPrivilege`
to `ConfigurableClusterPrivilege`.
`ConfigurableClusterPrivilege` is a renderable
cluster privilege exposed  as a `global` field in
role descriptor.    Other than this there is a
requirement where we would want to know if a
cluster  permission is implied by another cluster-
permission (`has-privileges`).  This is helpful in
addressing queries related to privileges for a
user.  This is not just simply checking of cluster
permissions since we do not  have access to
runtime information (like request object).  This
refactoring does not try to address those
scenarios.    Relates #44048
",1209311,11587,306010,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2487","elastic/elasticsearch","c1fb929338b8c43f97991e174193f4553fe31deb",4,"2019-08-13 14:15:19+10:00","Add SSL/TLS settings for watcher email (#45272)
This change adds a new SSL context
xpack.notification.email.ssl.*    that supports
the standard SSL configuration settings
(truststore,  verification_mode, etc). This SSL
context is used when configuring  outbound SMTP
properties for watcher email notifications.
Resolves: #30307
",1209558,11588,306017,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2488","elastic/elasticsearch","5efc6f99dcb58b5c61d4cc24cb86f175457d8a33",3,"2019-08-13 15:55:01-04:00","Fix issues with serializing BulkByScrollResponse
(#45357)  Currently there are two issues with
serializing BulkByScrollResponse.  First, when
deserializing from XContent, indexing exceptions
and search  exceptions are switched. Additionally,
search exceptions do no retain  the appropriate
RestStatus code, so you must evaluate the status
code  from the exception. However, the exception
class is not always correctly  retained when
serialized.    This commit adds tests in the
failure case. Additionally, fixes the  swapping of
failure types and adds the rest status code to the
search  failure.
",1210946,11607,306215,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2489","elastic/elasticsearch","aaf0a277203cf4666bbf30364addff2a0261f950",1,"2019-08-20 22:20:18+03:00","[ML] Do not skip rows with missing values for
regression (#45751)  Regression analysis support
missing fields. Even more, it is expected  that
the dependent variable has missing fields to the
part of the  data frame that is not for training.
This commit allows to declare that an analysis
supports missing values.  For such analysis, rows
with missing values are not skipped. Instead,
they are written as normal with empty strings used
for the missing values.    This also contains a
fix to the integration test.    Closes #45425
",1213415,11595,306132,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2490","elastic/elasticsearch","5755d15dbe2b68600e29f0c259dcf5269e8197f5",2,"2019-08-21 11:04:14+02:00","Shorten field names in EstimateMemoryUsageResponse
(#45719)
",1213510,11593,306095,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2491","elastic/elasticsearch","31f6e78acdb8dfc7c042be4ad0bc0bdea003e055",3,"2019-08-22 08:27:38+02:00","Allow the user to specify 'query' in Evaluate Data
Frame request (#45775)
",1215022,11607,306482,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2492","elastic/elasticsearch","fab31abbcc0b52a985a7b3a7ab30a4138f8ec54b",1,"2019-08-22 12:02:19+02:00","Log deprecation warning if
es.transport.cname_in_publish_address property is
specified (#45662)  Follow-up of #45626.  Now we
always output transport.publish_address with CNAME
and log  deprecation warning if
es.transport.cname_in_publish_address property  is
specified.  This commit also adds a test which
will fail once Elasticsearch version is  changed
to 9, to make sure we remove the property when
doing  reversioning.    Closes #39970
",1215279,11608,306516,"Andrey Ershov","andrey.ershov@elastic.co","GitHub","noreply@github.com"
"2493","elastic/elasticsearch","13179b28cc8d4ffd16afda4188943e36e7962aa5",5,"2019-08-25 18:00:33+03:00","Allow Transport Actions to indicate authN realm
(#45767)  This commit allows the Transport Actions
for the SSO realms to  indicate the realm that
should be used to authenticate the  constructed
AuthenticationToken. This is useful in the case
that  many authentication realms of the same type
have been configured  and where the caller of the
API(Kibana or a custom web app) already  know
which realm should be used so there is no need to
iterate all  the realms of the same type.  The
realm parameter is added in the relevant REST APIs
as optional  so as not to introduce any breaking
change.
",1216739,11616,306894,"Ioannis Kakavas","ioannis@elastic.co","GitHub","noreply@github.com"
"2494","elastic/elasticsearch","1a0dddf4ad24b3f2c751a1fe0e024fdbf8754f94",4,"2019-08-26 14:21:42-04:00","Range Field support for Histogram and Date
Histogram aggregations(#45395)   * Add support for
a Range field ValuesSource, including decode logic
for range doc values and exposing RangeType as a
first class enum   * Provide hooks in
ValuesSourceConfig for aggregations to control
ValuesSource class selection on missing & script
values   * Branch aggregator creation in Histogram
and DateHistogram based on ValuesSource class, to
enable specialization based on type.  This is
similar to how Terms aggregator works.   *
Prioritize field type when available for selecting
the ValuesSource class type to use for an
aggregation
",1220452,11647,307396,"Mark Tozzi","mark.tozzi@elastic.co","GitHub","noreply@github.com"
"2495","elastic/elasticsearch","5761b0a79ca2028cf93d43d03094c6a9a1e489e0",16,"2019-08-27 19:48:21+10:00","Add `manage_own_api_key` cluster privilege
(#45897)  The existing privilege model for API
keys with privileges like  `manage_api_key`,
`manage_security` etc. are too permissive and  we
would want finer-grained control over the cluster
privileges  for API keys. Previously APIs created
would also need these  privileges to get its own
information.    This commit adds support for
`manage_own_api_key` cluster privilege  which only
allows api key cluster actions on API keys owned
by the  currently authenticated user. Also adds
support for retrieval of  the API key self-
information when authenticating via API key
without the need for the additional API key
privileges.  To support this privilege, we are
introducing additional  authentication context
along with the request context such that  it can
be used to authorize cluster actions based on the
current  user authentication.    The API key get
and invalidate APIs introduce an `owner` flag
that can be set to true if the API key request
(Get or Invalidate)  is for the API keys owned by
the currently authenticated user only.  In that
case, `realm` and `username` cannot be set as they
are  assumed to be the currently authenticated
ones.    The changes cover HLRC changes,
documentation for the API changes.    Closes
#40031
",1221286,11650,307492,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2496","elastic/elasticsearch","859e38783ddd61d25e7ecb40c5290cc5f5942a9c",4,"2019-08-27 18:48:39+02:00","Watcher max_iterations with foreach action
execution (#45715)  Prior to this commit the
foreach action execution had a hard coded   limit
to 100 iterations. This commit allows the max
number of   iterations to be a configuration
('max_iterations') on the foreach   action. The
default remains 100.
",1221642,11655,307540,"jbonn360","44357004+jbonn360@users.noreply.github.com","Jake Landis","jake.landis@elastic.co"
"2497","elastic/elasticsearch","12a4177690e1d27931c24e2a51adcfd564d876fb",1,"2019-09-02 15:43:51+02:00","Wait for all Rec. to Stop on Node Close (#46178)
* Wait for all Rec. to Stop on Node Close    *
This issue is in the
`RecoverySourceHandler#acquireStore`. If we submit
the store release to the generic threadpool while
it is getting shut down we never complete the
futue we wait on (in the generic pool as well) and
fail to ever release the store potentially.  *
Fixed by waiting for all recoveries to end on node
close so that we aways have a healthy thread pool
here  * Closes #45956
",1222999,11666,307803,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2498","elastic/elasticsearch","94fec109c77819a731562cc6f827dfc3bf86c5b7",2,"2019-09-06 10:47:44+03:00","[ML] Extract DataFrameAnalyticsTask into its own
class (#46402)  This refactors
`DataFrameAnalyticsTask` into its own class.  The
task has quite a lot of functionality now and I
believe it would  make code more readable to have
it live as its own class rather than  an inner
class of the start action class.
",1224036,11675,307960,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2499","elastic/elasticsearch","56aabcdd69b1625bbaa3b53dda2edb7ffbc9c249",13,"2019-09-09 09:55:34-06:00","Add retention to Snapshot Lifecycle Management
(#46407)  This commit adds retention to the
existing Snapshot Lifecycle Management feature
(#38461) as described in #43663. This allows a
user to configure SLM to automatically delete
older snapshots based on a number of criteria.
An example policy would look like:    ```  PUT
/_slm/policy/snapshot-every-day  {    ""schedule"":
""0 30 2 * * ?"",    ""name"": ""<production-
snap-{now/d}>"",    ""repository"":
""my-s3-repository"",    ""config"": {      ""indices"":
[""foo-*"", ""important""]    },    // Newly
configured retention options    ""retention"": {
// Snapshots should be deleted after 14 days
""expire_after"": ""14d"",      // Keep a maximum of
thirty snapshots      ""max_count"": 30,      //
Keep a minimum of the four most recent snapshots
""min_count"": 4    }  }  ```    SLM Retention is
run on a scheduled configurable with the
`slm.retention_schedule` setting, which supports
cron expressions. Deletions are run for a
configurable time bounded by the
`slm.retention_duration` setting, which defaults
to 1 hour.    Included in this work is a new SLM
stats API endpoint available through    ``` json
GET /_slm/stats  ```    That returns statistics
about snapshot taken and deleted, as well as
successful retention runs, failures, and the time
spent deleting snapshots. #45362 has more
information as well as an example of the output.
These stats are also included when retrieving SLM
policies via the API.    * Add base framework for
snapshot retention (#43605)    * Add base
framework for snapshot retention    This adds a
basic `SnapshotRetentionService` and
`SnapshotRetentionTask`  to start as the basis for
SLM's retention implementation.    Relates to
#38461    * Remove extraneous 'public'    * Use a
local var instead of reading class var repeatedly
* Add SnapshotRetentionConfiguration for retention
configuration (#43777)    * Add
SnapshotRetentionConfiguration for retention
configuration    This commit adds the
`SnapshotRetentionConfiguration` class and its
HLRC  counterpart to encapsulate the configuration
for SLM retention.  Currently only a single
parameter is supported as an example (we still
need to discuss the different options we want to
support and their  names) to keep the size of the
PR down. It also does not yet include version
serialization checks  since the original SLM
branch has not yet been merged.    Relates to
#43663    * Fix REST tests    * Fix more
documentation    * Use Objects.equals to avoid NPE
* Put `randomSnapshotLifecyclePolicy` in only one
place    * Occasionally return retention with no
configuration    * Implement
SnapshotRetentionTask's snapshot filtering and
delet‚Ä¶ (#44764)    * Implement
SnapshotRetentionTask's snapshot filtering and
deletion    This commit implements the snapshot
filtering and deletion for
`SnapshotRetentionTask`. Currently only the
expire-after age is used for  determining whether
a snapshot is eligible for deletion.    Relates to
#43663    * Fix deletes running on the wrong
thread    * Handle missing or null policy in snap
metadata differently    * Convert Tuple<String,
List<SnapshotInfo>> to Map<String,
List<SnapshotInfo>>    * Use the
`OriginSettingClient` to work with security,
enhance logging    * Prevent NPE in test by
mocking Client    * Allow empty/missing SLM
retention configuration (#45018)    Semi-related
to #44465, this allows the `""retention""`
configuration map  to be missing.    Relates to
#43663    * Add min_count and max_count as SLM
retention predicates (#44926)    This adds the
configuration options for `min_count` and
`max_count` as  well as the logic for determining
whether a snapshot meets this criteria  to SLM's
retention feature.    These options are optional
and one, two, or all three can be specified  in an
SLM policy.    Relates to #43663    * Time-bound
deletion of snapshots in retention delete function
(#45065)    * Time-bound deletion of snapshots in
retention delete function    With a cluster that
has a large number of snapshots, it's possible
that  snapshot deletion can take a very long time
(especially since deletes  currently have to
happen in a serial fashion). To prevent snapshot
deletion from taking forever in a cluster and
blocking other operations,  this commit adds a
setting to allow configuring a maximum time to
spend  deletion snapshots during retention. This
dynamic setting defaults to 1  hour and is best-
effort, meaning that it doesn't hard stop a
deletion  at an hour mark, but ensures that once
the time has passed, all  subsequent deletions are
deferred until the next retention cycle.
Relates to #43663    * Wow snapshots suuuure can
take a long time.    * Use a LongSupplier instead
of actually sleeping    * Remove TestLogging
annotation    * Remove rate limiting    * Add SLM
metrics gathering and endpoint (#45362)    * Add
SLM metrics gathering and endpoint    This commit
adds the infrastructure to gather metrics about
the different SLM actions that a cluster  takes.
These actions are stored in
`SnapshotLifecycleStats` and perpetuated in
cluster state. The  stats stored include the
number of snapshots taken, failed, deleted, the
number of retention runs,  as well as per-policy
counts for snapshots taken, failed, and deleted.
It also includes the amount  of time spent
deleting snapshots from SLM retention.    This
commit also adds an endpoint for retrieving all
stats (further commits will expose this in the
SLM get-policy API) that looks like:    ```  GET
/_slm/stats  {    ""retention_runs"" : 13,
""retention_failed"" : 0,    ""retention_timed_out"" :
0,    ""retention_deletion_time"" : ""1.4s"",
""retention_deletion_time_millis"" : 1404,
""policy_metrics"" : {      ""daily-snapshots2"" : {
""snapshots_taken"" : 7,        ""snapshots_failed"" :
0,        ""snapshots_deleted"" : 6,
""snapshot_deletion_failures"" : 0      },
""daily-snapshots"" : {        ""snapshots_taken"" :
12,        ""snapshots_failed"" : 0,
""snapshots_deleted"" : 12,
""snapshot_deletion_failures"" : 6      }    },
""total_snapshots_taken"" : 19,
""total_snapshots_failed"" : 0,
""total_snapshots_deleted"" : 18,
""total_snapshot_deletion_failures"" : 6  }  ```
This does not yet include HLRC for this, as this
commit is quite large on its own. That will be
added in a subsequent commit.    Relates to #43663
* Version qualify serialization    * Initialize
counters outside constructor    * Use
computeIfAbsent instead of being too verbose    *
Move part of XContent generation into subclass
* Fix REST action for master merge    * Unused
import    *  Record history of SLM retention
actions (#45513)    This commit records the
deletion of snapshots by the retention component
of SLM into the SLM history index for the purposes
of reviewing operations  taken by SLM and
alerting.    * Retry SLM retention after currently
running snapshot completes (#45802)    * Retry SLM
retention after currently running snapshot
completes    This commit adds a
ClusterStateObserver to wait until the currently
running snapshot is complete before proceeding
with snapshot deletion.  SLM retention waits for
the maximum allowed deletion time for the
snapshot to complete, however, the waiting time is
not factored into  the limit on actual deletions.
Relates to #43663    * Increase timeout waiting
for snapshot completion    * Apply patch    From
https://github.com/original-brownbear/elasticsearc
h/commit/2374316f0d1912c9e1498bece195546a1dc60bce.
patch    * Rename test variables    * [TEST] Be
less strict for stats checking    * Skip SLM
retention if ILM is STOPPING or STOPPED (#45869)
This adds a check to ensure we take no action
during SLM retention if  ILM is currently stopped
or in the process of stopping.    Relates to
#43663    * Check all actions preventing snapshot
delete during retention (#45992)    * Check all
actions preventing snapshot delete during
retention run    Previously we only checked to see
if a snapshot was currently running,  but it turns
out that more things can block snapshot deletion.
This  changes the check to be a check for:    - a
snapshot currently running  - a deletion already
in progress  - a repo cleanup in progress  - a
restore currently running    This was found by CI
where a third party delete in a test caused SLM
retention deletion to throw an exception.
Relates to #43663    * Add unit test for
okayToDeleteSnapshots    * Fix bug where SLM
retention task would be scheduled on every node
* Enhance test logging    * Ignore if snapshot is
already deleted    * Missing import    * Fix
SnapshotRetentionServiceTests    * Expose SLM
policy stats in get SLM policy API (#45989)
This also adds support for the SLM stats endpoint
to the high level rest client.    Retrieving a
policy now looks like:    ```json  {    ""daily-
snapshots"" : {      ""version"": 1,
""modified_date"": ""2019-04-23T01:30:00.000Z"",
""modified_date_millis"": 1556048137314,
""policy"" : {        ""schedule"": ""0 30 1 * * ?"",
""name"": ""<daily-snap-{now/d}>"",
""repository"": ""my_repository"",        ""config"": {
""indices"": [""data-*"", ""important""],
""ignore_unavailable"": false,
""include_global_state"": false        },
""retention"": {}      },      ""stats"": {
""snapshots_taken"": 0,        ""snapshots_failed"":
0,        ""snapshots_deleted"": 0,
""snapshot_deletion_failures"": 0      },
""next_execution"": ""2019-04-24T01:30:00.000Z"",
""next_execution_millis"": 1556048160000    }  }
```    Relates to #43663    * Rewrite
SnapshotLifecycleIT as as ESIntegTestCase (#46356)
* Rewrite SnapshotLifecycleIT as as
ESIntegTestCase    This commit splits
`SnapshotLifecycleIT` into two different tests.
`SnapshotLifecycleRestIT` which includes the tests
that do not require  slow repositories, and
`SLMSnapshotBlockingIntegTests` which is now an
integration test using `MockRepository` to
simulate a snapshot being in  progress.    Relates
to #43663  Resolves #46205    * Add error logging
when exceptions are thrown
",1226616,11696,308375,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2500","elastic/elasticsearch","de17140ca061123fd69bdf27968e080a071793ab",19,"2019-09-15 19:59:21+02:00","[Transform] Rename data frame plugin to transform:
classes in xpack.core (#46644)  rename classes in
xpack.core of transform plugin from ""data frame
transform"" to ""transform""
",1228324,11706,308525,"Hendrik Muhs","hendrik.muhs@elastic.co","GitHub","noreply@github.com"
"2501","elastic/elasticsearch","b0d70f80722bd35ea28d9378511606ae6de54dad",1,"2019-09-19 12:25:46+02:00","[Transform]rename classes in transform plugin
(#46784)  rename classes in transform plugin from
""dataframe transform"" to just ""transform""
",1229464,11709,308760,"Hendrik Muhs","hendrik.muhs@elastic.co","GitHub","noreply@github.com"
"2502","elastic/elasticsearch","7c90801aff398d9b73e4fa24933550d2320a5a4d",19,"2019-09-20 14:22:57+01:00","Remove types from Get/MultiGet (#46587)  This
commit removes types from the ShardGetService, and
propagates this API change  up through the
Transport and Rest actions for Get and MultiGet
Relates to #41059
",1229343,11708,308707,"Alan Woodward","romseygeek@apache.org","GitHub","noreply@github.com"
"2503","elastic/elasticsearch","f11a3c22298452738dd76ff2efb79a67a83fa82e",2,"2019-09-23 17:28:49+02:00","Track Shard Snapshot Generation in CS (#46864)  *
Track Shard Snapshot Generation in CS    Adds
communication of new shard generations from
datanodes to master  and tracking of those
generations in the CS.  This is a preliminary to
#46250
",1229501,11710,308788,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2504","elastic/elasticsearch","02b6ce9ac57e296d47a91dfa5d984df1deec0c5a",1,"2019-09-24 13:39:44+01:00","Improve LeaderCheck rejection messages (#46998)
Today the `LeaderChecker` rejects checks from
nodes that are not in the current  cluster with
the exception message `leader check from unknown
node` which  offers no information about why the
node is unknown. In fact the node must have  been
in the cluster in the recent past, so it might
help guide the user to a  more useful log message
if we describe it as a `removed node` instead of
an  `unknown node`. This commit changes the
exception message like this, and also  tidies up a
few other loose ends in the `LeaderChecker`.
",1229713,11718,308848,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2505","elastic/elasticsearch","7935d88484e0fa4781a2ac37c841395ede8246fe",1,"2019-09-24 10:43:50-04:00","[ML] fix two datafeed flush lockup bugs (#46982)
* [ML] fix two flush lockup bugs    * Addressing
PR comments    * moving debug logging line so it
is only written on success
",1229868,11718,308862,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2506","elastic/elasticsearch","fd3dc4da77aa07c813c2d4afb323200bb6b920eb",12,"2019-09-25 07:38:17+02:00","[Transform] rename data frame transform to
transform for hlrc client (#46933)  rename data
frame transform to transform for hlrc
",1230829,11739,309184,"Hendrik Muhs","hendrik.muhs@elastic.co","GitHub","noreply@github.com"
"2507","elastic/elasticsearch","7a0fdfa6a780f6156bc8e43f1263eab23f8c3160",2,"2019-09-25 09:29:46+02:00","Merge ShardSearchTransportRequest and
ShardSearchLocalRequest (#46996)  This change
merges the `ShardSearchTransportRequest` and
`ShardSearchLocalRequest`  into a single
`ShardSearchRequest` that can be used to create a
SearchContext.    Relates #46523
",1230861,11739,309153,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2508","elastic/elasticsearch","777f4b316087631d9eb08088dc4e667033ce9ee5",4,"2019-09-25 18:56:22+10:00","Validate `query` field when creating roles
(#46275)  In the current implementation, the
validation of the role query  occurs at runtime
when the query is being executed.    This commit
adds validation for the role query when creating a
role  but not for the template query as we do not
have the runtime  information required for
evaluating the template query (eg. authenticated
user's  information). This is similar to the
scripts that we  store but do not evaluate or
parse if they are valid queries or not.    For
validation, the query is evaluated (if not a
template), parsed to build the  QueryBuilder and
verify if the query type is allowed.    Closes
#34252
",1231272,11742,309206,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2509","elastic/elasticsearch","5e1478828b0418fd623548ed6c2f2e0e25dc7a00",1,"2019-09-25 12:07:12+03:00","Handle RelayState in preparing a SAMLAuthN Request
(#46534)  This change allows for the caller of the
`saml/prepare` API to pass  a `relay_state`
parameter that will then be part of the redirect
URL in the response as the `RelayState` query
parameter.    The SAML IdP is required to reflect
back the value of that relay  state when sending a
SAML Response. The caller of the APIs can  then,
when receiving the SAML Response, read and consume
the value  as it see fit.
",1231288,11742,309206,"Ioannis Kakavas","ioannis@elastic.co","GitHub","noreply@github.com"
"2510","elastic/elasticsearch","45278241336652dd23b452270146b5eeaec396dc",1,"2019-09-25 14:24:54-06:00","Wait for snapshot completion in SLM snapshot
invocation (#47051)  * Wait for snapshot
completion in SLM snapshot invocation    This
changes the snapshots internally invoked by SLM to
wait for  completion. This allows us to capture
more snapshotting failure  scenarios.    For
example, previously a snapshot would be created
and then registered  as a ""success"", however, the
snapshot may have been aborted, or it may  have
had a subset of its shards fail. These cases are
now handled by  inspecting the response to the
`CreateSnapshotRequest` and ensuring that  there
are no failures. If any failures are present, the
history store  now stores the action as a failure
instead of a success.    Relates to #38461 and
#43663
",1233144,11760,309544,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2511","elastic/elasticsearch","7daa1be8d2c720c05038360c41210b987eadc1bc",2,"2019-09-27 00:56:27+02:00","Replace SearchContextException with
SearchException (#46965)  This commit removes the
SearchContextException in favor of a simpler
SearchException that doesn't leak the
SearchContext.    Relates #46523
",1232763,11759,309495,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2512","elastic/elasticsearch","6c6b4bfedbb67202943d48bdd16f5bedbf0cb0eb",2,"2019-10-01 10:58:34+02:00","Implement evaluation API for multiclass
classification problem (#47126)
",1234866,11786,309867,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2513","elastic/elasticsearch","f47da1d3fe3ae850c07b746f306a1aa34e3f362c",5,"2019-10-01 20:03:49+03:00","[ML] Restore analytics state if available (#47128)
This commit restores the model state if available
in data  frame analytics jobs.    In addition,
this changes the start API so that a stopped job
can be restarted. As we now store the progress in
the state index  when the task is stopped, we can
use it to determine what state  the job was in
when it got stopped.    Note that in order to be
able to distinguish between a job  that runs for
the first time and another that is restarting,  we
ensure reindexing progress is reported to be at
least 1  for a running task.
",1235961,11798,309973,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2514","elastic/elasticsearch","af4e6ededa341360ebf81ece64bf7200d045643f",1,"2019-10-01 14:18:50-04:00","[ML][Inference] adding ensemble model objects
(#47241)  * [ML][Inference] adding ensemble model
objects    * addressing PR comments    * Update
TreeTests.java    * addressing PR comments    *
fixing test
",1237408,11819,310260,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2515","elastic/elasticsearch","1fc8dd25324fc918e45605fb102ac9049336cf07",1,"2019-10-04 11:46:13+02:00","Implement new analysis type: classification
(#46537)
",1238956,11833,310477,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2516","elastic/elasticsearch","fbd4ec5294db9fc8aae76f30b415f9f427e6e2af",1,"2019-10-04 05:47:07-05:00","Validating monitoring hosts setting while parsing
(#47246)  This commit lifts the validation of the
monitoring hosts setting into  the setting itself,
rather than when the setting is used. This
prevents  a scenario where an invalid value for
the setting is accepted, but then  later fails
while applying a cluster state with the invalid
setting.
",1239081,11833,310476,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2517","elastic/elasticsearch","4e6756fb4d030607206ebe95ff2a980bbc0a1e67",2,"2019-10-04 16:07:49+02:00","Fold InitialSearchPhase into
AbstractSearchAsyncAction (#47182)  Historically,
we have two base classes for search actions that
generally need to fan out to multiple shards and
then move on to the following phase:
InitialSearchPhase and AbstractSearchAsyncAction
that extends it. Practically, every search action
extends the latter, and there are no direct
subclasses of InitialSearchPhase in our codebase.
This commit folds InitialSearchPhase into
AbstractSearchAsyncAction in the attempt of
simplifying things and making the search code
running on the coordinating node easier to reason
about.
",1239171,11835,310503,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2518","elastic/elasticsearch","e99435a7f66b5d91a5db80487f22ac2ca4a71314",3,"2019-10-07 15:28:21+03:00","[ML] Additional outlier detection parameters
(#47600)  Adds the following parameters to
`outlier_detection`:    -
`compute_feature_influence` (boolean): whether to
compute or not     feature influence scores  -
`outlier_fraction` (double): the proportion of the
data set assumed     to be outlying prior to
running outlier detection  -
`standardization_enabled` (boolean): whether to
apply standardization     to the feature values
",1240139,11839,310711,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2519","elastic/elasticsearch","7a622f024f555566ab06176f85b830baf47e61c0",4,"2019-10-07 13:29:12+01:00","Remove types from BulkRequest (#46983)  This
commit removes types entirely from BulkRequest,
both as a global  parameter and as individual
entries on update/index/delete lines.    Relates
to #41059
",1239884,11839,310629,"Alan Woodward","romseygeek@apache.org","GitHub","noreply@github.com"
"2520","elastic/elasticsearch","4aa6a9e6b0097204b0f071792bbf4ebef37d40bd",2,"2019-10-08 17:15:49-06:00","Separate SLM stop/start/status API from ILM
(#47710)  * Separate SLM stop/start/status API
from ILM    This separates a start/stop/status API
for SLM from being tied to ILM's  operation mode.
These APIs look like:    ```  POST /_slm/stop
POST /_slm/start  GET /_slm/status  ```    This
allows administrators to have fine-grained control
over preventing  periodic snapshots and deletions
while performing cluster maintenance.    Relates
to #43663    * Allow going from RUNNING to STOPPED
* Align with the OperationMode rules    * Fix
slmStopping method    * Make
OperationModeUpdateTask constructor private    *
Wipe snapshots better in test
",1241953,11876,310869,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2521","elastic/elasticsearch","4ac25f30161bed6255b3244ab8434d3259573b9c",7,"2019-10-12 16:58:39+11:00","Remove uniqueness constraint for API key name and
make it optional (#47549)  Since we cannot
guarantee the uniqueness of the API key `name`
this commit removes the constraint and makes this
field optional.    Closes #46646
",1244019,11894,310995,"Yogesh Gaikwad","902768+bizybot@users.noreply.github.com","GitHub","noreply@github.com"
"2522","elastic/elasticsearch","e628f35f69bfa833bbdba8e6f1a6cb51a7f8337d",1,"2019-10-13 12:58:05-04:00","Sequence number based replica allocation (#46959)
With this change, shard allocation prefers
allocating replicas on a node   that already has a
copy of the shard that is as close as possible to
the  primary, so that it is as cheap as possible
to bring the new replica in  sync with the
primary. Furthermore, if we find a copy that is
identical  to the primary then we cancel an
ongoing recovery because the new copy  which is
identical to the primary needs no work to recover
as a replica.    We no longer need to perform a
synced flush before performing a rolling   upgrade
or full cluster start with this improvement.
Closes #46318
",1244357,11894,311013,"Nhat Nguyen","nhat.nguyen@elastic.co","GitHub","noreply@github.com"
"2523","elastic/elasticsearch","fd83c18cc1c10f91a19acbeaa15b5dd862a29ca8",1,"2019-10-14 12:13:01+01:00","[ML] Add lazy assignment job config option
(#47726)  This change adds:    - A new option,
allow_lazy_open, to anomaly detection jobs  - A
new option, allow_lazy_start, to data frame
analytics jobs    Both work in the same way: they
allow a job to be  opened/started even if no ML
node exists that can  accommodate the job
immediately. In this situation  the job waits in
the opening/starting state until ML  node capacity
is available. (The starting state for data  frame
analytics jobs is new in this change.)
Additionally, the ML nightly maintenance tasks now
creates audit warnings for ML jobs that are
unassigned.  This means that jobs that cannot be
assigned to an ML  node for a very long time will
show a yellow warning  triangle in the UI.    A
final change is that it is now possible to close a
job  that is not assigned to a node without using
force.  This is because previously jobs that were
open but  not assigned to a node were an
aberration, whereas  after this change they'll be
relatively common.
",1244755,11894,311063,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2524","elastic/elasticsearch","025a0d5e57da43dc39e087163765b0c40c1f165a",2,"2019-10-14 16:44:15+01:00","Remove type from Watcher IndexAction (#47986)
Type information is ignored at index time, so is
no longer required in Watcher. This  commit
removes the deprecated IndexAction constructors
and builders that take types.    Relates to #41059
",1245078,11896,311184,"Alan Woodward","romseygeek@apache.org","GitHub","noreply@github.com"
"2525","elastic/elasticsearch","6531369f11d159896957b75a7eae0b7da214d01a",2,"2019-10-15 09:05:29+01:00","Don't persist type information to translog
(#47229)  We no longer need to store type
information in the translog, given that an index
can only have a single type.    Relates to #41059
",1245159,11899,311324,"Alan Woodward","romseygeek@apache.org","GitHub","noreply@github.com"
"2526","elastic/elasticsearch","f9511f477e5deb2b3801ea6fe6beaa0bcfd60765",1,"2019-10-16 09:00:15-06:00","Add SLM support to xpack usage and info APIs
(#48096)  * Add SLM support to xpack usage and
info APIs    This adds the missing xpack usage and
info information into the  `/_xpack` and
`/_xpack/usage` APIs. The output now looks like:
```  GET /_xpack/usage  {    ...    ""slm"" : {
""available"" : true,      ""enabled"" : true,
""policy_count"" : 1,      ""policy_stats"" : {
""retention_runs"" : 0,        ...      }    }  ```
and    ```  GET /_xpack  {    ...    ""features"" :
{      ...      ""slm"" : {        ""available"" :
true,        ""enabled"" : true      },      ...
}  }  ```    Relates to #43663    * Fix test
expectation    * Fix docs test
",1254511,11995,312652,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2527","elastic/elasticsearch","e16bb9aedef4b71f51cab4fee29a5420e10b491e",1,"2019-10-18 15:43:55+02:00","Quieter logging from the DiskThresholdMonitor
(#48115)  Today if an Elasticsearch node reaches a
disk watermark then it will repeatedly  emit
logging about it, which implies that some action
needs to be taken by the  administrator. This is
misleading. Elasticsearch strives to keep nodes
under  the high watermark, but it is normal to
have a few nodes occasionally exceed  this level.
Nodes may be over the low watermark for an
extended period without  any ill effects.    This
commit enhances the logging emitted by the
`DiskThresholdMonitor` to be  less misleading. The
expected case of hitting the high watermark and
immediately relocating one or more shards that to
bring the node back under the  watermark again is
reduced in severity to `INFO`. Additionally,
`INFO` messages  are not emitted repeatedly.
Fixes #48038
",1255264,12007,312816,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2528","elastic/elasticsearch","c9fea1e449eb80f424c00c4af4db73a3b0d37897",8,"2019-10-21 14:36:31+02:00","Change format of MulticlassConfusionMatrix result
to be more self-explanatory (#48174)
",1255295,12007,312744,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2529","elastic/elasticsearch","8c13cf704b551171d188c872d74189d90a9531b3",2,"2019-10-22 19:26:28+01:00","Track Shard-Snapshot Index Generation at
Repository Root  (#46250)  ### Changes to Root-
Level index-N (RepositoryData)    This change adds
a new field `""shards""` to `RepositoryData` that
contains a mapping of `IndexId` to a `String[]`.
This string array can be accessed by shard id to
get the generation of a shard's shard folder (i.e.
the `N` in the name of the currently valid
`/indices/${indexId}/${shardId}/index-${N}` for
the shard in question).    ### Benefits    This
allows for creating a new snapshot in the shard
without doing any LIST operations on the shard's
folder. In the case of AWS S3, this saves about
1/3 of the cost for updating an empty shard (see
#45736) and removes one out of two remaining
potential issues with eventually consistent blob
stores (see #38941 ... now only the root
`index-${N}` is determined by listing).    Also
and equally if not more important, a number of
possible failure modes on eventually consistent
blob stores like AWS S3 are eliminated by moving
all delete operations to the `master` node and
moving from incremental naming of shard level
index-N to uuid suffixes for these blobs.    ###
Only Master Deletes Blobs    This change moves the
deleting of the previous shard level
`index-${uuid}` blob to the master node instead of
the data node allowing for a safe and consistent
update of the shard's generation in the
`RepositoryData` by first updating
`RepositoryData` and then deleting the now
unreferenced `index-${newUUID}` blob.  __No
deletes are executed on the data nodes at all for
any operation with this change.__    Note also:
Previous issues with hanging data nodes
interfering with master nodes are completely
impossible, even on S3 (see next section for
details).    ### Why Move from index-${N} to
index-${uuid} at the Shard Level    This change
changes the naming of the shard level `index-${N}`
blobs to a uuid suffix `index-${UUID}`. The reason
for this is the fact that writing a new shard-
level `index-` generation blob is not atomic
anymore in its effect. Not only does the blob have
to be written to have an effect, it must also be
referenced by the root level `index-N`
(`RepositoryData`) to become an effective part of
the snapshot repository.  This leads to a problem
if we were to use incrementing names like we did
before. If a blob `index-${N+1}` is written but
due to the node/network/cluster/... crashes the
root level `RepositoryData` has not been updated
then a future operation will determine the shard's
generation to be `N` and try to write a new
`index-${N+1}` to the already existing path.
Updates like that are problematic on S3 for
consistency reasons, but also create numerous
issues when thinking about stuck data nodes.
Previously stuck data nodes that were tasked to
write `index-${N+1}` but got stuck and tried to do
so after some other node had already written
`index-${N+1}` were prevented form doing so
(except for on S3) by us not allowing overwrites
for that blob and thus no corruption could occur.
Were we to continue using incrementing names, we
could not do this. The stuck node scenario would
either allow for overwriting the `N+1` generation
or force us to continue using a `LIST` operation
to figure out the next `N` (which would make this
change pointless).  With uuid naming and moving
all deletes to `master` this becomes a non-issue.
Data nodes write updated shard generation
`index-${uuid}` and `master` makes those
`index-${uuid}` part of the `RepositoryData` that
it deems correct and cleans up all those `index-`
that are unused.    Co-authored-by: Yannick Welsch
<yannick@welsch.lu>  Co-authored-by: Tanguy Leroux
<tlrx.dev@gmail.com>
",1255938,12003,312873,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2530","elastic/elasticsearch","09e9bff14c5a9cd9603d8d0a10a0d65a5faca29c",1,"2019-10-23 15:57:23+02:00","Lucene#asSequentialBits gets the leadCost
backwards. (#48335)  The comment says it needs
random-access, but it passes `Long#MAX_VALUE` as
the  lead cost, which forces sequential access, it
should pass `0` instead. I took  advantage of this
fix to improve the logic to leverage an estimation
of the  number of times that `Bits#get` gets
called to make better decisions.
",1256018,12003,312883,"Adrien Grand","jpountz@gmail.com","GitHub","noreply@github.com"
"2531","elastic/elasticsearch","451a5c0621e537cb73b03ee3a049a8c38b807522",6,"2019-10-28 11:21:21-04:00","[ML][Transforms] add wait_for_checkpoint flag to
stop (#47935)  Adds `wait_for_checkpoint` for
`_stop` API.
",1257325,12007,312980,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2532","elastic/elasticsearch","4c75564bd13eb61d2273cb4621f8b87a71e8ecb9",3,"2019-10-31 09:44:56+01:00","Return consistent source in updates (#48707)
",1257799,12019,312897,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2533","elastic/elasticsearch","c38079d99724da15f1ce5cab5a4c15ef0a263137",1,"2019-10-31 13:02:57-05:00","Prevent deadlock by using separate schedulers
(#48697)  Currently the BulkProcessor class uses a
single scheduler to schedule  flushes and retries.
Functionally these are very different concerns but
can result in a dead lock. Specifically, the
single shared scheduler  can kick off a flush
task, which only finishes it's task when the bulk
that is being flushed finishes. If (for what ever
reason), any items in  that bulk fails it will (by
default) schedule a retry. However, that retry
will never run it's task, since the flush task is
consuming the 1 and  only thread available from
the shared scheduler.    Since the BulkProcessor
is mostly client based code, the client can
provide their own scheduler. As-is the scheduler
would require  at minimum 2 worker threads to
avoid the potential deadlock. Since the  number of
threads is a configuration option in the
scheduler, the code  can not enforce this 2 worker
rule until runtime. For this reason this  commit
splits the single task scheduler into 2
schedulers. This eliminates  the potential for the
flush task to block the retry task and removes
this  deadlock scenario.    This commit also
deprecates the Java APIs that presume a single
scheduler,  and updates any internal code to no
longer use those APIs.    Fixes #47599    Note -
#41451 fixed the general case where a bulk fails
and is retried  that can result in a deadlock.
This fix should address that case as well as  the
case when a bulk failure *from the flush* needs to
be retried.
",1258501,12020,312956,"Jake Landis","jake.landis@elastic.co","GitHub","noreply@github.com"
"2534","elastic/elasticsearch","f96a5ca61cb9fad9ed59357320af20e669348ce7",1,"2019-10-31 17:44:34-04:00","SQL: binary communication implementation for
drivers and the CLI (#48261)  * Introduce
binary_format request parameter (binary.format for
JDBC) to disable binary  communication between
clients (jdbc/odbc) and server.  * for CLI -
""binary"" command line parameter (or -b) is
introduced. Default value is ""true"".  * binary
communication (cbor) is enabled by default  *
disabling request parameter introduced for
debugging purposes only
",1259037,12023,312996,"Andrei Stefan","astefan@users.noreply.github.com","GitHub","noreply@github.com"
"2535","elastic/elasticsearch","e9367ef4be659a616adf8c988ce2acd95354e69b",1,"2019-11-01 12:34:40+02:00","[ML] Prevent fetching multi-field from source
(#48770)  Aggregatable mutli-fields are at the
moment wrongly mapped  as normal doc_value fields
and thus they support fetching from  source.
However, they do not exist in the source. This
results  to failure to extract such fields.
This commit fixes this bug. While a fix could be
worked out  on top of the existing code, it is
evident the extraction logic  has become difficult
to understand and maintain. As we also  want to
deduplicate multi-fields for data frame analytics,
it seemed appropriate to refactor the code to
simplify and  better handle the extraction of
multi-fields.    Relates #48756
",1258987,12034,313016,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2536","elastic/elasticsearch","56731d8fa7eb9775ea4c6386ea3142af9c7398e2",1,"2019-11-01 14:01:11+01:00","[Transform] decouple task and indexer  (#48567)
decouple TransformTask and ClientTransformIndexer.
Interaction between the 2 classes are now moved
into a context class which holds shared
information.    relates #45369
",1259339,12035,313025,"Hendrik Muhs","hendrik.muhs@elastic.co","GitHub","noreply@github.com"
"2537","elastic/elasticsearch","36ee74fa9ec2d1ed0244de1c00d4cddbbdaa2684",2,"2019-11-01 09:23:46-04:00","Do not cancel recovery for copy on broken node
(#48265)  This change fixes a poisonous situation
where an ongoing recovery was  canceled because a
better copy was found on a node that the cluster
had  previously tried allocating the shard to but
failed. The solution is to  keep track of the set
of nodes that an allocation was failed on so that
we can avoid canceling the current recovery for a
copy on failed nodes.    Closes #47974
",1259507,12036,313059,"Nhat Nguyen","nhat.nguyen@elastic.co","GitHub","noreply@github.com"
"2538","elastic/elasticsearch","ee8853fbc148d6648725df99bbdce79ce376ce12",4,"2019-11-11 13:21:18-05:00","[ML] Add new
geo_results.(actual_point|typical_point) fields
for `lat_long` results (#47050)  [ML] Add new
geo_results.(actual_point|typical_point) fields
for `lat_long` results (#47050)    Related PR:
https://github.com/elastic/ml-cpp/pull/809
",1260196,12043,313193,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2539","elastic/elasticsearch","257e45d2177789dfbff3637a135bb9b817ffb9a2",3,"2019-11-12 17:06:58-07:00","Re-read policy phase JSON when using ILM's move-
to-step API (#48827)  When using the move-to-step
API, we should reread the phase JSON from  the
latest version of the ILM policy. This allows a
user to move to the  same step while re-reading
the policy's latest version. For example,  when
changing rollover criteria.    While manually
messing around with some other things I discovered
that  we only reread the policy when using the
retry API, not the move-to-step  API. This commit
changes the move-to-step API to always read the
latest  version of the policy.
",1261062,12047,313463,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2540","elastic/elasticsearch","3e569014d180f969677dd287f8a57e2dbd4e36fb",1,"2019-11-18 03:50:13-05:00","Add docker-compose fixtures for S3 integration
tests (#49107)  Similarly to what has been done
for Azure (#48636) and GCS (#48762),   this
committ removes the existing Ant fixture that
emulates a S3 storage   service in favor of
multiple docker-compose based fixtures.    The
goals here are multiple: be able to reuse a
s3-fixture outside of the   repository-s3 plugin;
allow parallel execution of integration tests;
removes   the existing AmazonS3Fixture that has
evolved in a weird beast in   dedicated, more
maintainable fixtures.    The server side logic
that emulates S3 mostly comes from the latest
HttpHandler made for S3 blob store repository
tests, with additional   features extracted from
the (now removed) AmazonS3Fixture:
authentication checks, session token checks and
improved response   errors. Chunked upload request
support for S3 object has been added   too.
The server side logic of all tests now reside in a
single S3HttpHandler class.    Whereas
AmazonS3Fixture contained logic for basic tests,
session token   tests, EC2 tests or ECS tests, the
S3 fixtures are now dedicated to each   kind of
test. Fixtures are inheriting from each other,
making things easier   to maintain.
",1262055,12062,313760,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2541","elastic/elasticsearch","bbaa1f5fd5dabe7d9e2781f0eade947cbb1223fb",7,"2019-11-20 18:19:31+11:00","Improved diagnostics for TLS trust failures
(#48911)  - Improves HTTP client hostname
verification failure messages  - Adds
""DiagnosticTrustManager"" which logs certificate
information    when trust cannot be established
(hostname failure, CA path failure,    etc)
These diagnostic messages are designed so that
many common TLS  problems can be diagnosed based
solely (or primarily) on the  elasticsearch logs.
These diagnostics can be disabled by setting
xpack.security.ssl.diagnose.trust: false
",1269162,12122,314466,"Tim Vernum","tim@adjective.org","GitHub","noreply@github.com"
"2542","elastic/elasticsearch","d167a7b8a7b80406331e2459cb1947b825c1a3f2",2,"2019-11-21 10:39:23-05:00","[ML][Inference] compressing model definition and
lazy parsing (#49269)  * [ML][Inference]
compressing model definition and lazy parsing    *
addressing PR comments    * adding commons io    *
implementing simplified bounded stream
",1271301,12139,314692,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2543","elastic/elasticsearch","9006926a15435b9637c786748e292630d83784de",1,"2019-11-22 07:31:30-05:00","[ML][Inference][HLRC] GET trained models (#49464)
",1271988,12142,314843,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2544","elastic/elasticsearch","0390ec3627bc237b3e5e6989b148e6e91b8d6775",8,"2019-11-22 20:08:14+02:00","[ML] Explain data frame analytics API (#49455)
This commit replaces the _estimate_memory_usage
API with  a new API, the _explain API.    The API
consolidates information that is useful before
creating a data frame analytics job.    It
includes:    - memory estimation  - field
selection explanation    Memory estimation is
moved here from what was previously  calculated in
the _estimate_memory_usage API.    Field selection
is a new feature that explains to the user
whether each available field was selected to be
included or  not in the analysis. In the case it
was not included, it also  explains the reason
why.
",1272741,12152,314992,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2545","elastic/elasticsearch","7069045cd420ed524914686bd47dade26414c1df",1,"2019-11-22 12:50:02-07:00","Add the simple strategy to cluster settings
(#49414)  This is related to #49067. This commit
adds the simple connection  strategy settings and
strategy mode setting to the cluster settings
registry. With these changes, the simple
connection mode can be used.  Additionally, it
adds validation to ensure that settings cannot be
misconfigured.
",1272992,12152,315013,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2546","elastic/elasticsearch","ba914453beb36f5a492a4c3b12c3d48e6ed57552",2,"2019-11-26 09:26:31-05:00","[ML][Inference][HLRC] add GET _stats (#49562)
",1275010,12170,315555,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2547","elastic/elasticsearch","e2486103340c4a8742ee3bf16fc26d52fcef7c1c",1,"2019-11-28 13:03:54+01:00","Remove ClassInfo interface and BinaryClassInfo
class. (#49649)
",1275387,12168,315557,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2548","elastic/elasticsearch","cab99c036a665f6864dbb38fdf7059b03b0ea767",2,"2019-11-28 14:35:35+01:00","Add a listener to track the progress of a search
request locally (#49471)  This commit adds a
function in NodeClient that allows to track the
progress  of a search request locally. Progress is
tracked through a SearchProgressListener  that
exposes query and fetch responses as well as
partial and final reduces.  This new method can be
used by modules/plugins inside a node in order to
track the  progress of a local search request.
Relates #49091
",1277023,12185,315900,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2549","elastic/elasticsearch","bad07b76f7827a8bfa7922e941eb52fdbb47661d",4,"2019-11-29 14:20:31+02:00","[ML] Add optional source filtering during data
frame reindexing (#49690)  This adds a `_source`
setting under the `source` setting of a data
frame analytics config. The new `_source` is
reusing the structure  of a `FetchSourceContext`
like `analyzed_fields` does. Specifying  includes
and excludes for source allows selecting which
fields  will get reindexed and will be available
in the destination index.    Closes #49531
",1277471,12187,315985,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2550","elastic/elasticsearch","4a078029ed2d7eebe1507ca9bf0a3289df554eb2",6,"2019-12-03 18:55:48-07:00","Scripting: add available languages & contexts API
(#49652)  Adds `GET /_script_language` to support
Kibana dynamic scripting  language selection.
Response contains whether `inline` and/or `stored`
scripts are  enabled as determined by the
`script.allowed_types` settings.    For each
scripting language registered, such as `painless`,
`expression`, `mustache` or custom, available
contexts for the language  are included as
determined by the `script.allowed_contexts`
setting.    Response format:  ```  {
""types_allowed"": [      ""inline"",      ""stored""
],    ""language_contexts"": [      {
""language"": ""expression"",        ""contexts"": [
""aggregation_selector"",          ""aggs""
...        ]      },      {        ""language"":
""painless"",        ""contexts"": [
""aggregation_selector"",          ""aggs"",
""aggs_combine"",          ...        ]      }  ...
]  }  ```    Fixes: #49463
",1278671,12197,316297,"Stuart Tettemer","stu@elastic.co","GitHub","noreply@github.com"
"2551","elastic/elasticsearch","21a09be994653f358c28c900dfa0b0a072172a93",1,"2019-12-06 11:34:25-07:00","Refactor IndexLifecycleRunner to split state
modification (#49891)  This commit refactors the
`IndexLifecycleRunner` to split out and
consolidate the number of methods that change
state from within ILM. It  adds a new class
`IndexLifecycleTransition` that contains a number
of  static methods used to modify ILM's state.
These methods all return new  cluster states
rather than making changes themselves (they can be
thought of as helpers for modifying ILM state).
Rather than having multiple ways to move an index
to a particular step  (like
`moveClusterStateToStep`,
`moveClusterStateToNextStep`,
`moveClusterStateToPreviouslyFailedStep`, etc
(there are others)) this  now consolidates those
into three with (hopefully) useful names:    -
`moveClusterStateToStep`  -
`moveClusterStateToErrorStep`  -
`moveClusterStateToPreviouslyFailedStep`    In the
move, I was also able to consolidate duplicate or
redundant  arguments to these functions. Prior to
this commit there were many calls  that provided
duplicate information (both `IndexMetaData` and
`LifecycleExecutionState` for example) where the
duplicate argument  could be derived from a
previous argument with no problems.    With this
split, `IndexLifecycleRunner` now contains the
methods used to  actually run steps as well as the
methods that kick off cluster state  updates for
state transitions. `IndexLifecycleTransition`
contains only  the helpers for constructing new
states from given scenarios.    This also adds
Javadocs to all methods in both
`IndexLifecycleRunner`  and
`IndexLifecycleTransition` (this accounts for
almost all of the  increase in code lines for this
commit). It also makes all methods be as
restrictive in visibility, to limit the scope of
where they are used.    This refactoring is part
of work towards capturing actions and  transitions
that ILM makes, by consolidating and simplifying
the places  we make state changes, it will make
adding operation auditing easier.
",1278756,12198,316573,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2552","elastic/elasticsearch","dd66fae755d43cd8245e0e2cc6b33037199a7b5d",1,"2019-12-09 08:50:27-05:00","[ML] Use query in cardinality check (#49939)  When
checking the cardinality of a field, the query
should be take into account. The user might know
about some bad data in their index and want to
filter down to the target_field values they care
about.
",1279132,12200,316616,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2553","elastic/elasticsearch","022e5f5e32cd18c128a980e94cf89c45ba8a4ece",2,"2019-12-11 08:50:17+01:00","A few improvements to AnalyticsProcessManager
class that make the code more readable. (#50026)
",1279886,12201,316732,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2554","elastic/elasticsearch","8402ad95f2be603b7d939085723243750356f951",1,"2019-12-17 09:45:52+01:00","Use ClusterState as Consistency Source for
Snapshot Repositories (#49060)  Follow up to
#49729     This change removes falling back to
listing out the repository contents to find the
latest `index-N` in write-mounted blob store
repositories.  This saves 2-3 list operations on
each snapshot create and delete operation. Also it
makes all the snapshot status APIs cheaper (and
faster) by saving one list operation there as well
in many cases.  This removes the resiliency to
concurrent modifications of the repository as a
result and puts a repository in a `corrupted`
state in case loading `RepositoryData` failed from
the assumed generation.
",1281339,12202,316797,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2555","elastic/elasticsearch","74ff50f814a826d8b6c2ef108a170427016d50d6",1,"2019-12-17 13:52:39+01:00","Omit loading IndexMetaData when inspecting shards
(#50214)  Loading shard state information during
shard allocation sometimes runs into a situation
where a  data node does not know yet how to look
up the shard on disk if custom data paths are
used.  The current implementation loads the index
metadata from disk to determine what the custom
data path looks like. This PR removes this
dependency, simplifying the lookup.    Relates
#48701
",1281433,12202,316806,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2556","elastic/elasticsearch","804a5042e7f6e6f3060685cfe801119b3538cf18",1,"2019-12-17 14:02:06+01:00","Optimize composite aggregation based on index
sorting (#48399)  Co-authored-by: Daniel Huang
<danielhuang@tencent.com>    This is a spinoff of
#48130 that generalizes the proposal to allow
early termination with the composite aggregation
when leading sources match a prefix or the entire
index sort specification.  In such case the
composite aggregation can use the index sort
natural order to early terminate the collection
when it reaches a composite key that is greater
than the bottom of the queue.  The optimization is
also applicable when a query other than match_all
is provided. However the optimization is
deactivated for sources that match the index sort
in the following cases:    * Multi-valued source,
in such case early termination is not possible.
* missing_bucket is set to true
",1281719,12202,316848,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2557","elastic/elasticsearch","d2aee62468ae35d5fe95ffc1161a0770148af2e0",2,"2019-12-17 15:20:46+00:00","[ML] Delete unused data frame analytics state
(#50243)  This commit adds removal of unused data
frame analytics state  from the
_delete_expired_data API (and in extend th ML
daily  maintenance task). At the moment the
potential state docs  include the progress
document and state for regression and
classification analyses.
",1281858,12203,316866,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2558","elastic/elasticsearch","e9e6a4a7b45a866c9607ab6382b92d12fc209235",1,"2019-12-18 14:03:41-05:00","[ML][Inference] fix support for nested fields
(#50258)  This fixes support for nested fields
We now support fully nested, fully collapsed, or a
mix of both on inference docs.     ES mappings
allow the `_source` to be any combination of
nested objects + dot delimited fields.   So, we
should do our best to find the best path down the
Map for the desired field.
",1283229,12209,317118,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2559","elastic/elasticsearch","5adbf67c081c32ff3a46d185aa8e17b309ffa0f9",12,"2019-12-18 16:09:59-07:00","Add ILM histore store index (#50287)  * Add ILM
histore store index    This commit adds an ILM
history store that tracks the lifecycle  execution
state as an index progresses through its ILM
policy. ILM  history documents store output
similar to what the ILM explain API  returns.
An example document with ALL fields (not all
documents will have all  fields) would look like:
```json  {    ""@timestamp"": 1203012389,
""policy"": ""my-ilm-policy"",    ""index"":
""index-2019.1.1-000023"",    ""index_age"":123120,
""success"": true,    ""state"": {      ""phase"":
""warm"",      ""action"": ""allocate"",      ""step"":
""ERROR"",      ""failed_step"": ""update-settings"",
""is_auto-retryable_error"": true,
""creation_date"": 12389012039,      ""phase_time"":
12908389120,      ""action_time"": 1283901209,
""step_time"": 123904107140,
""phase_definition"": ""{\""policy\"":\""ilm-history-
ilm-policy\"",\""phase_definition\"":{\""min_age\"":\""0
ms\"",\""actions\"":{\""rollover\"":{\""max_size\"":\""50g
b\"",\""max_age\"":\""30d\""}}},\""version\"":1,\""modifie
d_date_in_millis\"":1576517253463}"",
""step_info"": ""{... etc step info here as json
...}""    },    ""error_details"":
""java.lang.RuntimeException: etc\n\tcaused by:etc
etc etc full stacktrace""  }  ```    These
documents go into the `ilm-history-1-00000N` index
to provide an  audit trail of the operations ILM
has performed.    This history storage is enabled
by default but can be disabled by setting
`index.lifecycle.history_index_enabled` to
`false.`    Resolves #49180
",1284106,12214,317219,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2560","elastic/elasticsearch","f9bcd6c36b90919207b7c49ebbfdd132268f3333",2,"2019-12-20 08:27:33+01:00","[Transform] refactor source and dest validation to
support CCS (#50018)  refactors source and dest
validation, adds support for CCS, makes resolve
work like reindex/search, allow aliased dest index
with a single write index.    fixes #49988  fixes
#49851  relates #43201
",1286148,12224,317485,"Hendrik Muhs","hendrik.muhs@elastic.co","GitHub","noreply@github.com"
"2561","elastic/elasticsearch","e901f90afb59985fd04503fcb3d344cbefc14829",2,"2019-12-20 14:00:21+01:00","Fix accuracy metric (#50310)
",1286587,12224,317546,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2562","elastic/elasticsearch","051718f9b1e1ca957229b01e80d7b79d7e727e14",3,"2020-01-03 17:14:33+02:00","Guard against null geoBoundingBox (#50506)  A geo
box with a top value of Double.NEGATIVE_INFINITY
will yield an empty  xContent which translates to
a null `geoBoundingBox`. This commit marks the
field as `Nullable` and guards against null when
retrieving the `topLeft`  and `bottomRight`
fields.    Fixes https://github.com/elastic/elasti
csearch/issues/50505
",1287361,12233,317787,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2563","elastic/elasticsearch","4ccbd3e3a1af6f9f91fabeabd21c7036d078941e",1,"2020-01-03 11:58:29-05:00","x-content: Support collapsed named objects
(#50564)  This adds support for ""collapsed"" named
object to `ObjectParser`. In  particular, this
supports the sort of xcontent that we use to
specify  significance heuristics. See #25519 and
this example:    ```  GET /_search  {      ""query""
: {          ""terms"" : {""force"" : [ ""British
Transport Police"" ]}      },      ""aggregations"" :
{          ""significant_crime_types"" : {
""significant_terms"" : {                  ""field"" :
""crime_type"",
""mutual_information"" : { <<------- This is the
name                      ""include_negatives"":
true                  }              }          }
}  }  ```    I believe there are a couple of
things that work this way.    I've held off on
moving the actual parsing of the significant
heuristics  to this code to keep the review more
compact. The moving is pretty  mechanical stuff in
the aggs framework.
",1287408,12233,317799,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2564","elastic/elasticsearch","792b5e150bd33406e27db6f97f0ab99a5895bb94",1,"2020-01-07 10:55:17-05:00","Teach ObjectParser a happy pattern (#50691)  We
*very* commonly have object with ctors like:  ```
public Foo(String name)  ```    And then declare a
bunch of setters on the object. Every aggregation
works like this, for example. This change teaches
`ObjectParser` how to  build these aggregations
all on its own, without any help. This'll make  it
much cleaner to parse aggs, and, probably, a bunch
of other things.  It'll let us remove lots of
wrapping. I've used this new power for the  `avg`
aggregation just to prove that it works outside of
a unit test.
",1289794,12262,318229,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2565","elastic/elasticsearch","a0513217dba5d964bf176c8f409baccfbd25359b",1,"2020-01-13 14:10:02+01:00","Move metadata storage to Lucene (#50907)  Today we
split the on-disk cluster metadata across many
files: one file for the metadata of each  index,
plus one file for the global metadata and another
for the manifest. Most metadata updates  only
touch a few of these files, but some must write
them all. If a node holds a large number of
indices then it's possible its disks are not fast
enough to process a complete metadata update
before timing out. In severe cases affecting
master-eligible nodes this can prevent an election
from succeeding.    This commit uses Lucene as a
metadata storage for the cluster state, and is a
squashed version  of the following PRs that were
targeting a feature branch:      * Introduce
Lucene-based metadata persistence (#48733)    This
commit introduces `LucenePersistedState` which
master-eligible nodes  can use to persist the
cluster metadata in a Lucene index rather than in
many separate files.    Relates #48701    * Remove
per-index metadata without assigned shards
(#49234)    Today on master-eligible nodes we
maintain per-index metadata files for every
index. However, we also keep this metadata in the
`LucenePersistedState`, and  only use the per-
index metadata files for importing dangling
indices. However  there is no point in importing a
dangling index without any shard data, so we  do
not need to maintain these extra files any more.
This commit removes per-index metadata files from
nodes which do not hold any  shards of those
indices.    Relates #48701    * Use Lucene
exclusively for metadata storage (#50144)    This
moves metadata persistence to Lucene for all node
types. It also reenables BWC and adds  an
interoperability layer for upgrades from prior
versions.    This commit disables a number of
tests related to dangling indices and command-line
tools.  Those will be addressed in follow-ups.
Relates #48701    * Add command-line tool support
for Lucene-based metadata storage (#50179)    Adds
command-line tool support (unsafe-bootstrap,
detach-cluster, repurpose, & shard  commands) for
the Lucene-based metadata storage.    Relates
#48701    * Use single directory for metadata
(#50639)    Earlier PRs for #48701 introduced a
separate directory for the cluster state. This is
not needed  though, and introduces an additional
unnecessary cognitive burden to the users.    Co-
Authored-By: David Turner
<david.turner@elastic.co>    * Add async dangling
indices support (#50642)    Adds support for
writing out dangling indices in an asynchronous
way. Also provides an option to  avoid writing out
dangling indices at all.    Relates #48701    *
Fold node metadata into new node storage (#50741)
Moves node metadata to uses the new storage
mechanism (see #48701) as the authoritative
source.    * Write CS asynchronously on data-only
nodes (#50782)    Writes cluster states out
asynchronously on data-only nodes. The main reason
for writing out  the cluster state at all is so
that the data-only nodes can snap into a cluster,
that they can do a  bit of bootstrap validation
and so that the shard recovery tools work.
Cluster states that are written asynchronously
have their voting configuration adapted to a non
existing configuration so that these nodes cannot
mistakenly become master even if their node  role
is changed back and forth.    Relates #48701    *
Remove persistent cluster settings tool (#50694)
Adds the elasticsearch-node remove-settings tool
to remove persistent settings from the on  disk
cluster state in case where it contains
incompatible settings that prevent the cluster
from  forming.    Relates #48701    * Make cluster
state writer resilient to disk issues (#50805)
Adds handling to make the cluster state writer
resilient to disk issues. Relates to #48701    *
Omit writing global metadata if no change (#50901)
Uses the same optimization for the new cluster
state storage layer as the old one, writing global
metadata only when changed. Avoids writing out the
global metadata if none of the persistent  fields
changed. Speeds up server:integTest by ~10%.
Relates #48701    * DanglingIndicesIT should
ensure node removed first (#50896)    These tests
occasionally failed because the deletion was
submitted before the  restarting node was removed
from the cluster, causing the deletion not to be
fully acked. This commit fixes this by checking
the restarting node has been  removed from the
cluster.    Co-authored-by: David Turner
<david.turner@elastic.co>
",1295298,12315,319299,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2566","elastic/elasticsearch","d1e8dedf07087d5f6abddc19f11961b2419c92b6",4,"2020-01-13 05:06:30-10:00","EQL: Remove list classes from EqlSearchResponse
(#50870)  Removes unnecessary classes from
EqlSearchResponse that just represent  lists of
other elements.    Relates to #49581
",1294251,12342,319348,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2567","elastic/elasticsearch","f53c9680edd20559aa810e754815f1f6c558d7d6",1,"2020-01-13 13:44:56-07:00","Refresh cached phase policy definition if possible
on new poli‚Ä¶ (#50820)  * Refresh cached phase
policy definition if possible on new policy
There are some cases when updating a policy does
not change the  structure in a significant way. In
these cases, we can reread the  policy definition
for any indices using the updated policy.    This
commit adds this refreshing to the
`TransportPutLifecycleAction`  to allow this. It
allows us to do things like change the
configuration  values for a particular step, even
when on that step (for example,  changing the
rollover criteria while on the `check-rollover-
ready` step).    There are more cases where the
phase definition can be reread that just  the ones
checked here (for example, removing an action that
has already  been passed), and those will be added
in subsequent work.    Relates to #48431
",1296050,12317,319408,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2568","elastic/elasticsearch","fa4869a94b57988912b32a0f755dd1d026eb7066",8,"2020-01-14 02:08:44-05:00","Deprecating kibana_user and
kibana_dashboard_only_user roles (#46456)  This
change adds a new `kibana_admin` role, and
deprecates  the old `kibana_user`
and`kibana_dashboard_only_user`roles.    The
deprecation is implemented via a new reserved
metadata  attribute, which can be consumed from
the API and also triggers  deprecation logging
when used (by a user authenticating to
Elasticsearch).    Some docs have been updated to
avoid references to these  deprecated roles.
Co-authored-by: Tim Vernum <tim@adjective.org>
Co-authored-by: Larry Gregory
<legrego@users.noreply.github.com>
",1296405,12321,319465,"Larry Gregory","larry.gregory@elastic.co","Tim Vernum","tim.vernum@elastic.co"
"2569","elastic/elasticsearch","e349c5eec0975cf751bbe59ad533a9658c12692e",1,"2020-01-14 17:15:00+01:00","Track Snapshot Version in RepositoryData (#50930)
Add tracking of snapshot versions to
RepositoryData to make BwC logic more efficient.
Follow up to #50853
",1297257,12326,319618,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2570","elastic/elasticsearch","f1eb3c3e84f5d6f9cf99775e284fd34df79ebfa4",6,"2020-01-14 11:32:18-05:00","[ML][Inference] Adding classification_weights to
ensemble models (#50874)  * [ML][Inference] Adding
classification_weights to ensemble models
classification_weights are a way to allow models
to  prefer specific classification results over
others  this might be advantageous if
classification value  probabilities are a known
quantity and can improve  model error rates.
",1297680,12330,319729,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2571","elastic/elasticsearch","6573de2ab0ee733c6b82c6cf65bbd219d38761be",1,"2020-01-20 15:05:52+00:00","PutIndexTemplateRequest contains a single mapping
(#50899)  New index templates can only contain a
single mapping, as we no longer support  multiple
types. This commit changes the internal classes
used to represent a  PutIndexTemplateRequest from
holding a map of types to mappings, to instead
holding a single mapping string.    Relates to
#41059
",1298376,12336,319730,"Alan Woodward","romseygeek@apache.org","GitHub","noreply@github.com"
"2572","elastic/elasticsearch","ff6f509c63d9aac3efe959b7f4cf5b7a3e700e60",1,"2020-01-23 14:49:52+00:00","Log when probe succeeds but full connection fails
(#51304)  It is permitted for nodes to accept
transport connections at addresses other  than
their publish address, which allows a good deal of
flexibility when  configuring discovery. However,
it is not unusual for users to misconfigure  nodes
to pick a publish address which is inaccessible to
other nodes. We see  this happen a lot if the
nodes are on different networks separated by a
proxy,  or if the nodes are running in Docker with
the wrong kind of network config.    In this case
we offer no useful feedback to the user unless
they enable  TRACE-level logs. It's particularly
tricky to diagnose because if we test
connectivity between the nodes (using their
discovery addresses) then all will  appear well.
This commit adds a WARN-level log if this kind of
misconfiguration is detected:  the probe
connection has succeeded (to indicate that we are
really talking to a  healthy Elasticsearch node)
but the followup connection attempt fails.    It
also tidies up some loose ends in
`HandshakingTransportAddressConnector`,  removing
some TODOs that need not be completed, and
registering its  accidentally-unregistered timeout
settings.
",1299624,12348,319939,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2573","elastic/elasticsearch","407f9205c5dc776346d858ad20740e35fbed447f",1,"2020-01-23 17:32:51+02:00","[ML] Rename DataFrameAnalyticsIndex to
DestinationIndex (#51353)  As we prepare to
introduce a new index for storing additional
information about data frame analytics jobs (e.g.
intrumentation),  renaming this class to
`DestinationIndex` better captures what it does
and leaves its prior name available for a more
suitable use.
",1299696,12350,319972,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2574","elastic/elasticsearch","1e5f77eb1942e77f09d901961f73184ad1294730",1,"2020-01-27 11:58:51+01:00","Use Consistent ClusterState throughout Snapshot
API Calls (#51464)  We shouldn't be using
potentially changing versions of the cluster state
when answering a snapshot status API call by
calling `SnapshotService#currentSnapshots`
multiple times (each time using
`ClusterService#state` under the hood) but instead
pass down the state from the transport action.
Having these API behave more in a more
deterministic way will make it easier to use them
once parallel repository operations  are
introduced.
",1301775,12423,321409,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2575","elastic/elasticsearch","c117c0cf0a2e1a497c83278cebb7a2da57c2f599",4,"2020-01-27 19:51:39-05:00","Password-protected Keystore Feature Branch PR
(#51123)  * Reload secure settings with password
(#43197)    If a password is not set, we assume an
empty string to be  compatible with previous
behavior.  Only allow the reload to be broadcast
to other nodes if TLS is  enabled for the
transport layer.    * Add passphrase support to
elasticsearch-keystore (#38498)    This change
adds support for keystore passphrases to all
subcommands  of the elasticsearch-keystore cli
tool and adds a subcommand for  changing the
passphrase of an existing keystore.  The work to
read the passphrase in Elasticsearch when
loading, which will be addressed in a different
PR.    Subcommands of elasticsearch-keystore can
handle (open and create)  passphrase protected
keystores    When reading a keystore, a user is
only prompted for a passphrase  only if the
keystore is passphrase protected.    When creating
a keystore, a user is allowed (default behavior)
to create one with an  empty passphrase
Passphrase can be set to be empty when
changing/setting it for an  existing keystore
Relates to: #32691  Supersedes: #37472    *
Restore behavior for force parameter (#44847)
Turns out that the behavior of `-f` for the add
and add-file sub  commands where it would also
forcibly create the keystore if it  didn't exist,
was by design - although undocumented.  This
change restores that behavior auto-creating a
keystore that  is not password protected if the
force flag is used. The force  OptionSpec is moved
to the BaseKeyStoreCommand as we will presumably
want to maintain the same behavior in any other
command that takes  a force option.    *  Handle
pwd protected keystores in all CLI tools  (#45289)
This change ensures that `elasticsearch-setup-
passwords` and  `elasticsearch-saml-metadata` can
handle a password protected
elasticsearch.keystore.  For setup passwords the
user would be prompted to add the  elasticsearch
keystore password upon running the tool. There is
no  option to pass the password as a parameter as
we assume the user is  present in order to enter
the desired passwords for the built-in  users.
For saml-metadata, we prompt for the keystore
password at all times  even though we'd only need
to read something from the keystore when  there is
a signing or encryption configuration.    * Modify
docs for setup passwords and saml metadata cli
(#45797)    Adds a sentence in the documentation
of `elasticsearch-setup-passwords`  and
`elasticsearch-saml-metadata` to describe that
users would be  prompted for the keystore's
password when running these CLI tools,  when the
keystore is password protected.    Co-Authored-By:
Lisa Cawley <lcawley@elastic.co>    *
Elasticsearch keystore passphrase for startup
scripts (#44775)    This commit allows a user to
provide a keystore password on Elasticsearch
startup, but only prompts when the keystore exists
and is encrypted.    The entrypoint in Java code
is standard input. When the Bootstrap class is
checking for secure keystore settings, it checks
whether or not the keystore  is encrypted. If so,
we read one line from standard input and use this
as the  password. For simplicity's sake, we allow
a maximum passphrase length of 128  characters.
(This is an arbitrary limit and could be increased
or eliminated.  It is also enforced in the
keystore tools, so that a user can't create a
password that's too long to enter at startup.)
In order to provide a password on standard input,
we have to account for four  different ways of
starting Elasticsearch: the bash startup script,
the Windows  batch startup script, systemd
startup, and docker startup. We use wrapper
scripts to reduce systemd and docker to the bash
case: in both cases, a  wrapper script can read a
passphrase from the filesystem and pass it to the
bash script.    In order to simplify testing the
need for a passphrase, I have added a  has-passwd
command to the keystore tool. This command can run
silently, and  exit with status 0 when the
keystore has a password. It exits with status 1 if
the keystore doesn't exist or exists and is
unencrypted.    A good deal of the code-change in
this commit has to do with refactoring  packaging
tests to cleanly use the same tests for both the
""archive"" and the  ""package"" cases. This required
not only moving tests around, but also adding
some convenience methods for an abstraction layer
over distribution-specific  commands.    * Adjust
docs for password protected keystore (#45054)
This commit adds relevant parts in the
elasticsearch-keystore  sub-commands reference
docs and in the reload secure settings API  doc.
* Fix failing Keystore Passphrase test for feature
branch (#50154)    One problem with the
passphrase-from-file tests, as written, is that
they would leave a SystemD environment variable
set when they failed,  and this setting would
cause elasticsearch startup to fail for other
tests as well. By using a try-finally, I hope that
these tests will fail  more gracefully.    It
appears that our Fedora and Ubuntu environments
may be configured to  store journald information
under /var rather than under /run, so that it
will persist between boots. Our destructive tests
that read from the  journal need to account for
this in order to avoid trying to limit the  output
we check in tests.    * Run keystore management
tests on docker distros (#50610)    * Add Docker
handling to PackagingTestCase    Keystore tests
need to be able to run in the Docker case. We can
do this  by using a DockerShell instead of a plain
Shell when Docker is running.    * Improve ES
startup check for docker    Previously we were
checking truncated output for the packaged JDK as
an indication that Elasticsearch had started. With
new preliminary  password checks, we might get a
false positive from ES keystore  commands, so we
have to check specifically that the Elasticsearch
class from the Bootstrap package is what's
running.    * Test password-protected keystore
with Docker (#50803)    This commit adds two tests
for the case where we mount a  password-protected
keystore into a Docker container and provide a
password via a Docker environment variable.    We
also fix a logging bug where we were logging the
identifier for an  array of strings rather than
the contents of that array.    * Add documentation
for keystore startup prompting (#50821)    When a
keystore is password-protected, Elasticsearch will
prompt at  startup. This commit adds documentation
for this prompt for the archive,  systemd, and
Docker cases.    Co-authored-by: Lisa Cawley
<lcawley@elastic.co>    * Warn when unable to
upgrade keystore on debian (#51011)    For Red Hat
RPM upgrades, we warn if we can't upgrade the
keystore. This  commit brings the same logic to
the code for Debian packages. See the  posttrans
file for gets executed for RPMs.    * Restore
handling of string input    Adds tests that were
mistakenly removed. One of these tests proved  we
were not handling the the stdin (-x) option
correctly when no  input was added. This commit
restores the original approach of  reading stdin
one char at a time until there is no more (-1, \r,
\n)  instead of using readline() that might return
null    * Apply spotless reformatting    * Use '--
since' flag to get recent journal messages    When
we get Elasticsearch logs from journald, we want
to fetch only log  messages from the last run.
There are two reasons for this. First, if  there
are many logs, we might get a string that's too
large for our  utility methods. Second, when we're
looking for a specific message or  error, we
almost certainly want to look only at messages
from the last  execution.    Previously, we've
been trying to do this by clearing out the
physical  files under the journald process. But
there seems to be some contention  over these
directories: if journald writes a log file in
between when  our deletion command deletes the
file and when it deletes the log  directory, the
deletion will fail.    It seems to me that we
might be able to use journald's ""--since"" flag to
retrieve only log messages from the last run, and
that this might be  less likely to fail due to
race conditions in file deletion.
Unfortunately, it looks as if the ""--since"" flag
has a granularity of  one-second. I've added a
two-second sleep to make sure that there's a
sufficient gap between the test that will read
from journald and the  test before it.    * Use
new journald wrapper pattern    * Update version
added in secure settings request    Co-authored-
by: Lisa Cawley <lcawley@elastic.co>  Co-authored-
by: Ioannis Kakavas <ikakavas@protonmail.com>
",1305922,12482,322170,"William Brafford","william.brafford@elastic.co","GitHub","noreply@github.com"
"2576","elastic/elasticsearch","7cec5f93beec721400566c395c7c0686b249595f",2,"2020-01-31 14:15:13+01:00","Make `date_range` query rounding consistent with
`date` (#50237)  Currently the rounding used in
range queries can behave differently for `date`
and `date_range` as explained in #50009. The
behaviour on `date` fields is   the one we
document in https://www.elastic.co/guide/en/elasti
csearch/reference/current/query-dsl-range-
query.html#range-query-date-math-rounding.   This
change adapts the rounding behaviour for
RangeType.DATE so it uses the  same logic as the
`date` for the `date_range` type.    Closes #50009
",1308143,12485,322442,"Christoph Büscher","cbuescher@posteo.de","GitHub","noreply@github.com"
"2577","elastic/elasticsearch","763480ee129214d3bee345eb808cbe0f1788165d",1,"2020-02-03 07:39:30-08:00","Adding best_compression (#49974)  This commit adds
a `codec` parameter to the ILM `forcemerge`
action. When setting the codec to
`best_compression` ILM will close the index, then
update the codec setting, re-open the index, and
finally perform a force merge.
",1308835,12494,322520,"Sivagurunathan Velayutham","sivadeva.93@gmail.com","GitHub","noreply@github.com"
"2578","elastic/elasticsearch","26b9cf787dfcfb2340fd2dbc98e4c42faf868e40",4,"2020-02-06 20:05:03+01:00","Add Trace Logging of REST Requests (#51684)  Being
able to trace log all REST requests to a node
would make debugging  a number of issues a lot
easier.
",1311976,12527,323065,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2579","elastic/elasticsearch","9fb5c811fc04e13e2b4d010ea98656d4af6207a6",1,"2020-02-11 10:41:17+11:00","Extract class to store Authentication in context
(#52032)  This change extracts the code that
previously existed in the  ""Authentication"" class
that was responsible for reading and writing
authentication objects to/from the ThreadContext.
This is needed to support multiple authentication
objects under  separate keys.    This refactoring
highlighted that there were a large number of
places  where we extracted the Authentication/User
objects from the thread  context, in a variety of
ways. These have been consolidated to rely on  the
SecurityContext object.
",1316259,12571,323455,"Tim Vernum","tim.vernum@elastic.co","GitHub","noreply@github.com"
"2580","elastic/elasticsearch","a304d9a65648199f81e6fdf72f1bee3fdde12a5c",2,"2020-02-11 14:00:06+00:00","Ignore timeouts with single-node discovery
(#52159)  Today we use `cluster.join.timeout` to
prevent nodes from waiting indefinitely  if
joining a faulty master that is too slow to
respond, and  `cluster.publish.timeout` to allow a
faulty master to detect that it is unable  to
publish its cluster state updates in a timely
fashion. If these timeouts  occur then the node
restarts the discovery process in an attempt to
find a  healthier master.    In the special case
of `discovery.type: single-node` there is no point
in  looking for another healthier master since the
single node in the cluster is  all we've got. This
commit suppresses these timeouts and instead lets
the node  wait for joins and publications to
succeed no matter how long this might take.
",1316399,12573,323476,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2581","elastic/elasticsearch","ba9c4fb98702825d33f24dcc5798d2b5d1cc5b96",2,"2020-02-11 15:32:03-05:00","Refactor Percentiles/Ranks aggregation builders
and factories (#51887)  - Consolidates HDR/TDigest
factories into a single factory  - Consolidates
most HDR/TDigest builder into an abstract builder
- Deprecates method(), compression(), numSigFig()
in favor of a new  unified PercentileConfig object
- Disallows setting algo options that don't apply
to current algo    The unified config method
carries both the method and algo-specific
setting. This provides a mechanism to reject
settings that apply  to the wrong algorithm.  For
BWC the old methods are retained  but marked as
deprecated, and can be removed in future versions.
Co-authored-by: Mark Tozzi <mark.tozzi@gmail.com>
",1316745,12575,323613,"Zachary Tong","polyfractal@elastic.co","GitHub","noreply@github.com"
"2582","elastic/elasticsearch","75d83db8c7ff77cb23d0634d24cc340b9666d9d1",1,"2020-02-12 18:01:14-05:00","HLRC support for string_stats (#52163)  This adds
a builder and parsed results for the
`string_stats`  aggregation directly to the high
level rest client. Without this the  HLRC can't
access the `string_stats` API without the elastic
licensed  `analytics` module.    While I'm in
there this adds a few of our usual unit tests and
modernizes the parsing.
",1317748,12583,323899,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2583","elastic/elasticsearch","2c6aa90a3bc4a9860e89097d5f88cf8cdd5a03c8",1,"2020-02-21 18:23:30+11:00","Add support for secondary authentication (#52093)
This change makes it possible to send secondary
authentication  credentials to select endpoints
that need to perform a single action  in the
context of two users.    Typically this need
arises when a server process needs to call an
endpoint that users should not (or might not) have
direct access to,  but some part of that action
must be performed using the logged-in  user's
identity.
",1321740,12626,324694,"Tim Vernum","tim.vernum@elastic.co","GitHub","noreply@github.com"
"2584","elastic/elasticsearch","f83d75d2559fbacc2200b7125c2da73f6c4e8caa",2,"2020-02-21 08:57:45-07:00","Rename assertThrows to prevent naming clash
(#52582)  This commit renames
ElasticsearchAssertions#assertThrows to
assertRequestBuilderThrows and assertFutureThrows
to avoid a  naming clash with JUnit 4.13+ and
static imports of these methods.  Additionally,
these methods have been updated to make use of
expectThrows internally to avoid duplicating the
logic there.    Relates #51787
",1322076,12627,324697,"Jay Modi","jaymode@users.noreply.github.com","GitHub","noreply@github.com"
"2585","elastic/elasticsearch","8830eb6b9a8da0202806791f29f049b764ad19af",2,"2020-02-26 10:25:38+01:00","Generalize how queries on `_index` are handled at
rewrite time (#52486)  #49713 aims at introducing
a new constant_keyword field which, like _index,
always rewrites queries to a MatchAllQueryBuilder
or a MatchNoneQueryBuilder in order to skip shards
in the can_match phase. This change introduces a
new ConstantFieldType marker class that helps get
this functionality with any field and not just
_index.    Since this change refactors rewrites, I
also took it as an opportunity to adrress #49254:
instead of returning the same queries you would
get on a keyword field when a field is unmapped,
queries get rewritten to a
MatchNoDocsQueryBuilder.    This change exposed a
couple bugs, like the fact that the percolator
doesn't rewrite queries at query time, or that the
significant_terms aggregation doesn't rewrite its
inner filter, which I fixed.    Closes #49254
",1324508,12644,325031,"Adrien Grand","jpountz@gmail.com","GitHub","noreply@github.com"
"2586","elastic/elasticsearch","f4223b6a8fa74918a1831c12b6cceab7f5d237f9",1,"2020-02-27 11:14:57-05:00","Add size support to `top_metrics` (#52662)  This
adds support for returning the top ""n"" metrics
instead of just the  very top.    Relates to
#51813
",1325668,12652,325401,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2587","elastic/elasticsearch","d7a63333b5683379cdff2493befcd88ddc70321c",3,"2020-02-27 12:22:35-05:00","[ML] Add indices_options to datafeed config and
update (#52793)  This adds a new configurable
field called `indices_options`. This allows users
to create or update the indices_options used when
a datafeed reads from an index.     This is
necessary for the following use cases:   - Reading
from frozen indices   - Allowing certain indices
in multiple index patterns to not exist yet
These index options are available on datafeed
creation and update. Users may specify them as URL
parameters or within the configuration object.
closes https://github.com/elastic/elasticsearch/is
sues/48056
",1326371,12652,325410,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2588","elastic/elasticsearch","dd331935b31f83024633a6ec84da5be946b4e7d1",1,"2020-02-28 17:35:07+02:00","[ML] Parse and report memory usage for DF
Analytics (#52778)  Adds reporting of memory usage
for data frame analytics jobs.  This commit
introduces a new index pattern `.ml-stats-*` whose
first concrete index will be `.ml-stats-000001`.
This index serves  to store instrumentation
information for those jobs.
",1327107,12661,325471,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2589","elastic/elasticsearch","351c2f9d40951703951e19f95d3c11ac2d12d29c",9,"2020-03-03 16:30:22-07:00","Implement hidden aliases (#52547)  This commit
introduces hidden aliases. These are similar to
hidden  indices, in that they are not visible by
default, unless explicitly  specified by name or
by indicating that hidden indices/aliases are
desired.    The new alias property, `is_hidden` is
implemented similarly to  `is_write_index`, except
that it must be consistent across all indices
with a given alias - that is, all indices with a
given alias must  specify the alias as either
hidden, or all specify it as non-hidden,  either
explicitly or by omitting the `is_hidden`
property.
",1329163,12672,325681,"Gordon Brown","gordon.brown@elastic.co","GitHub","noreply@github.com"
"2590","elastic/elasticsearch","0b38b6a52cddb59a167c5e2eff9e6dd4fd655a24",2,"2020-03-05 15:26:13+11:00","Add read/writeOptionalVLong to StreamInput/Output
(#53145)  The spirit of StreamInput/StreamOutput
is that common I/O patterns should  be handled by
these classes so that the persistence methods in
application classes can be kept short, which
facilitates easy visual  comparison between read
and write methods, and reduces risks of having
serialization issues due to mismatched
implementations.    To this end, this change adds
readOptionalVLong and writeOptionalVLong  methods
to these classes as we have started to build up
cases where  that conditional/null logic has been
implemented directly in the read &  write methods.
",1329106,12671,325763,"Tim Vernum","tim.vernum@elastic.co","GitHub","noreply@github.com"
"2591","elastic/elasticsearch","b2ea32959103b93c03cc487ce475adde792f21e3",2,"2020-03-09 11:59:30-04:00","Harden search context id (#53143)  Using a Long
alone is not strong enough for the id of search
contexts   because we reset the id generator
whenever a data node is restarted.  This can lead
to two issues:    1. Fetch phase can fetch
documents from another index  2. A scroll search
can return documents from another index    This
commit avoids these issues by adding a UUID to
SearchContexId.
",1330844,12681,326009,"Nhat Nguyen","nhat.nguyen@elastic.co","GitHub","noreply@github.com"
"2592","elastic/elasticsearch","9c7b6d191251665f8b38486b21677a4e86f851bd",1,"2020-03-10 10:49:38+01:00","Implement ILM policy for .ml-state* indices
(#52356)
",1330667,12684,326088,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2593","elastic/elasticsearch","146b2a85b42220a5f653a543a5107d8f960464d5",3,"2020-03-10 16:33:15+01:00","Add new x-pack endpoints to track the progress of
a search asynchronously (#49931)  ### High level
view    This change introduces a new API in x-pack
basic that allows to track the progress of a
search.  Users can submit an asynchronous search
through a new endpoint called `_async_search` that
works exactly the same as the `_search` endpoint
but instead of blocking and returning the final
response when available, it returns a response
after a provided `wait_for_completion` time.
````  # Submit an _async_search and waits up to
100ms for a final response  GET my_index_pattern*/
_async_search?wait_for_completion=100ms  {
""aggs"": {      ""date_histogram"": {        ""field"":
""@timestamp"",        ""fixed_interval"": ""1h""      }
}  }  ````    If after 100ms the final response is
not available, a `partial_response` is included in
the body:    ````  {    ""id"":
""9N3J1m4BgyzUDzqgC15b"",    ""version"": 1,
""is_running"": true,    ""is_partial"": true,
""response"": {     ""_shards"": {         ""total"":
100,         ""successful"": 5,         ""failed"": 0
},      ""total_hits"": {        ""value"": 1653433,
""relation"": ""eq""      },      ""aggs"": {        ...
}    }  }  ````    The partial response contains
the total number of requested shards, the number
of shards that successfully returned and the
number of shards that failed.  It also contains
the total hits as well as partial aggregations
computed from the successful shards.  To continue
to monitor the progress of the search users can
call the get `_async_search` API like the
following:    ````  GET _async_search/9N3J1m4BgyzU
DzqgC15b/?wait_for_completion=100ms  ````    That
returns a new response that can contain the same
partial response than the previous call if the
search didn't progress, in such case the returned
`version`  should be the same. If new partial
results are available, the version is incremented
and the `partial_response` contains the updated
progress.  Finally if the response is fully
available while or after waiting for completion,
the `partial_response` is replaced by a `response`
section that contains the usual _search response:
````  {    ""id"": ""9N3J1m4BgyzUDzqgC15b"",
""version"": 10,    ""is_running"": false,
""response"": {       ""is_partial"": false,       ...
}  }  ````    ## Persistency    Asynchronous
search are stored in a restricted index called
`.async-search` if they survive (still running)
after the initial submit. Each request has a keep
alive that defaults to 5 days but this value can
be changed/updated any time:  `````  GET my_index_
pattern*/_async_search?wait_for_completion=100ms&k
eep_alive=10d  `````  The default can be changed
when submitting the search, the example above
raises the default value for the search to `10d`.
`````  GET _async_search/9N3J1m4BgyzUDzqgC15b/?wai
t_for_completion=100ms&keep_alive=10d  `````  The
time to live for a specific search can be extended
when getting the progress/result. In the example
above we extend the keep alive to 10 more days.  A
background service that runs only on the node that
holds the first primary shard of the `async-
search` index is responsible for deleting the
expired results. It runs every hour but the
expiration is also checked by running queries (if
they take longer than the keep_alive) and when
getting a result.    Like a normal `_search`, if
the http channel that is used to submit a request
is closed before getting a response, the search is
automatically cancelled. Note that this behavior
is only for the submit API, subsequent GET
requests will not cancel if they are closed.
## Resiliency    Asynchronous search are not
persistent, if the coordinator node crashes or is
restarted during the search, the asynchronous
search will stop. To know if the search is still
running or not the response contains a field
called `is_running` that indicates if the task is
up or not. It is the responsibility of the user to
resume an asynchronous search that didn't reach a
final response by re-submitting the query. However
final responses and failures are persisted in a
system index that allows  to retrieve a response
even if the task finishes.    ````  DELETE
_async_search/9N3J1m4BgyzUDzqgC15b  ````    The
response is also not stored if the initial submit
action returns a final response. This allows to
not add any overhead to queries that completes
within the initial `wait_for_completion`.    ##
Security    The `.async-search` index is a
restricted index (should be migrated to a system
index in +8.0) that is accessible only through the
async search APIs. These APIs also ensure that
only the user that submitted the initial query can
retrieve or delete the running search. Note that
admins/superusers would still be able to cancel
the search task through the task manager like any
other tasks.    Relates #49091    Co-authored-by:
Luca Cavanna <javanna@users.noreply.github.com>
",1333279,12713,326562,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2594","elastic/elasticsearch","713e931df4c1eaaa28a024b562ff6f2632c72f55",2,"2020-03-10 22:00:32+01:00","Record Force Merges in Live Commit Data (#52694)
* Record Force Merges in live commit data
Prerequisite of #52182. Record force merges in the
live commit data  so two shard states with the
same sequence number that differ only in whether
or not they have been force merged can be
distinguished when creating snapshots.
",1333771,12718,326617,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2595","elastic/elasticsearch","5a32f50d187171954e0612372a2f758dd3629351",6,"2020-03-11 10:33:53+02:00","[ML] Rename data frame analytics
maximum_number_trees to max_trees (#53300)
Deprecates `maximum_number_trees` parameter of
classification and  regression and replaces it
with `max_trees`.
",1333755,12717,326609,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2596","elastic/elasticsearch","ae55e06253aa39e8e242e3e2feceab0e8e18e424",8,"2020-03-12 09:27:25-06:00","Add ComponentTemplate to MetaData (#53290)  * Add
ComponentTemplate to MetaData    This adds a
`ComponentTemplate` datastructure that will be
used as part of #53101 (Index Templates  v2) to
the `MetaData` class. Currently there are no APIs
for interacting with this class, so it will
always be an empty map (other than in tests). This
infrastructure will be built upon to add APIs in
a subsequent commit.    A `ComponentTemplate` is
made up of a `Template`, a version, and a
MetaData.Custom class. The  `Template` contains
similar information to an `IndexTemplateMetaData`
object‚Äî settings, mappings,  and alias
configuration.
",1336342,12740,326982,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2597","elastic/elasticsearch","58340c2dbef564939b59f762eb312404bbba28b8",16,"2020-03-12 18:39:29+00:00","[ML] Adds the class_assignment_objective parameter
to classification (#52763)  Adds a new parameter
for classification that enables choosing whether
to assign labels to  maximise accuracy or to
maximise the minimum class recall.    Fixes
#52427.
",1336492,12740,327005,"Tom Veasey","tveasey@users.noreply.github.com","GitHub","noreply@github.com"
"2598","elastic/elasticsearch","7e0a3c4007376fec594436c703b35ef56e728da7",2,"2020-03-16 13:13:31+02:00","[ML] Extend classification to support multiple
classes (#53539)  * [ML] Extend classification to
support multiple classes    Prepares
classification analysis to support more than just
two classes. It introduces a new parameter to the
process config  which dictates the `num_classes`
to the process. It also  changes the max classes
limit to `30` provisionally.    * We can't test
cardinality is too high in the YML tests anymore
* Extract max number of classes in a constant
",1337694,12746,327105,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2599","elastic/elasticsearch","41e3b4aa905b053c80d52618ca23fa5919ae818e",2,"2020-03-16 21:27:02-04:00","Invoke response handler on failure to send
(#53631)  Today it can happen that a transport
message fails to send (for example,  because a
transport interceptor rejects the request). In
this case, the  response handler is never invoked,
which can lead to necessary cleanups  not being
performed. There are two ways to handle this. One
is to expect  every callsite that sends a message
to try/catch these exceptions and  handle them
appropriately. The other is merely to invoke the
response  handler to handle the exception, which
is already equipped to handle  transport
exceptions.
",1338325,12749,327210,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2600","elastic/elasticsearch","ff94792e41689ecd075c7eae7b73529d1b548346",1,"2020-03-17 10:54:44+01:00","Shortcut query phase using the results of other
shards (#51852)  This commit, built on top of
#51708, allows to modify shard search requests
based on informations collected on other shards.
It is intended to speed up sorted queries on time-
based indices. For queries that are only
interested in the top documents.    This change
will rewrite the shard queries to match none if
the bottom sort value computed in prior shards is
better than all values in the shard.  For queries
that mix top documents and aggregations this
change will reset the size of the top documents to
0 instead of rewriting to match none.  This means
that we don't need to keep a search context open
for this shard since we know in advance that it
doesn't contain any competitive hit.
",1339362,12756,327394,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2601","elastic/elasticsearch","263e525e496498b9a2006675178105cb20114d2c",3,"2020-03-17 10:55:07-06:00","Add REST API for ComponentTemplate CRUD (#53558)
* Add REST API for ComponentTemplate CRUD    This
adds the Put/Get/DeleteComponentTemplate APIs that
allow inserting, retrieving, and removing
ComponentTemplateMetadata into the cluster state
metadata.    These APIs are currently only
available behind a feature flag system property -
`es.itv2_feature_flag_registered`.    Relates to
#53101    Co-authored-by: Elastic Machine
<elasticmachine@users.noreply.github.com>
",1339999,12767,327668,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2602","elastic/elasticsearch","9467dbf1208970b7e8e60d3650b53dc0e6151514",1,"2020-03-18 12:43:15-07:00","Decouple AuditTrailService from AuditTrail
(#53450)  The AuditTrailService has historically
been an AuditTrail itself, acting  as a composite
of the configured audit trails. This commit
removes that  interface from the service and
instead builds a composite delegating
implementation internally. The service now has a
single get() method to  get an AuditTrail
implementation which may be called. If auditing is
not  allowed by the license, an empty noop version
is returned.
",1341656,12775,327856,"Ryan Ernst","ryan@elastic.co","GitHub","noreply@github.com"
"2603","elastic/elasticsearch","dea6b7d67fab8d6db0a4cd4bd6502e56fe73ee27",2,"2020-03-19 20:13:40+01:00","Add async_search.submit API to HLRC (#53592)  This
commit adds a new AsyncSearchClient to the High
Level Rest Client which  initially supporst the
submitAsyncSearch in its blocking and non-blocking
flavour. Also adding client side request and
response objects and parsing code  to parse the
xContent output of the client side
AsyncSearchResponse together  with parsing
roundtrip tests and a simple roundtrip integration
test.    Relates to #49091
",1342718,12793,328252,"Christoph Büscher","cbuescher@posteo.de","GitHub","noreply@github.com"
"2604","elastic/elasticsearch","04aee0abfd173acd01dec21a56379f0f6da5ef33",2,"2020-03-20 10:36:20+02:00","[ML] Data frame analytics analysis stats (#53788)
Adds parsing and indexing of analysis
instrumentation stats.  The latest one is also
returned from the get-stats API.    Note that we
chose to duplicate objects even where they are
currently  similar. There are already ideas on how
these will diverge in the future  and while the
duplication looks ugly at the moment, it is the
option  that offers the highest flexibility.
",1346131,12850,328950,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2605","elastic/elasticsearch","1af04175a19df8d099295b7eca768289d3992f32",3,"2020-03-23 13:42:10+01:00","Async search: remove version from response
(#53960)  The goal of the version field was to
quickly show when you can expect to find something
new in the search response, compared to when
nothing has changed. This can also be done by
looking at the `_shards` section and
`num_reduce_phases` returned with the search
response. In fact when there has been one or more
additional reduction of the results, you can
expect new results in the search response.
Otherwise, the `_shards` section could notify of
additional failures of shards that have completed
the query, but that is not a guarantee that their
results will be exposed (only when the following
partial reduction is performed their results will
be available).    That said this commit clarifies
this in the docs and removes the version field
from the async search response
",1347588,12863,329245,"Luca Cavanna","javanna@users.noreply.github.com","GitHub","noreply@github.com"
"2606","elastic/elasticsearch","87c910b36f886d3e3b83c65270cef7d7aa3aaa5a",5,"2020-03-23 14:24:58+01:00","Better Incrementality for Snapshots of Unchanged
Shards (#52182)  Use sequence numbers and force
merge UUID to determine whether a shard has
changed or not instead before falling back to
comparing files to get incremental snapshots on
primary fail-over.
",1347805,12864,329291,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2607","elastic/elasticsearch","04bd154037172d5c4a09250e1c60beb07d5b5c87",1,"2020-03-23 19:06:32+01:00","Add heuristics to compute pre_filter_shard_size
when unspecified (#53873)  This commit changes the
pre_filter_shard_size default from 128 to
unspecified.  This allows to apply heuristics
based on the request and the target indices when
deciding  whether the can match phase should run
or not. When unspecified, this pr runs the can
match phase  automatically if one of these
conditions is met:    * The request targets more
than 128 shards.    * The request contains read-
only indices.    * The primary sort of the query
targets an indexed field.  Users can opt-out from
this behavior by setting the
`pre_filter_shard_size` to a static value.
Closes #39835
",1347831,12868,329453,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2608","elastic/elasticsearch","756a297ea6d5e8070ebb133723056e6ece18ff9c",1,"2020-03-23 16:53:01-04:00","[ML] adds multi-class feature importance support
(#53803)  Adds multi-class feature importance
calculation.     Feature importance objects are
now mapped as follows  (logistic) Regression:  ```
{     ""feature_name"": ""feature_0"",
""importance"": -1.3  }  ```  Multi-class [class
names are `foo`, `bar`, `baz`]  ```  {
‚Äúfeature_name‚Äù: ‚Äúfeature_0‚Äù,      ‚Äúimportance‚Äù:
2.0, // sum(abs()) of class importances     ‚Äúfoo‚Äù:
1.0,      ‚Äúbar‚Äù: 0.5,      ‚Äúbaz‚Äù: -0.5   },  ```
For users to get the full benefit of aggregating
and searching for feature importance, they should
update their index mapping as follows (before
turning this option on in their pipelines)  ```
""ml.inference.feature_importance"": {
""type"": ""nested"",            ""dynamic"": true,
""properties"": {              ""feature_name"": {
""type"": ""keyword""              },
""importance"": {                ""type"": ""double""
}            }          }  ```  The mapping field
name is as follows  `ml.<inference.target_field>.<
inference.tag>.feature_importance`  if
`inference.tag` is not provided in the processor
definition, it is not part of the field path.
`inference.target_field` is defaulted to
`ml.inference`.  //cc @lcawl ^ Where should we
document this?    If this makes it in for 7.7,
there shouldn't be any feature_importance at
inference BWC worries as 7.7 is the first version
to have it.
",1348293,12869,329518,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2609","elastic/elasticsearch","39785ebdbb276b365027cb4401e68acf029f6463",16,"2020-03-23 23:29:01+02:00","[ML] Data frame analytics data counts (#53998)
This commit instruments data frame analytics  with
stats for the data that are being analyzed.  In
particular, we count training docs, test docs,
and skipped docs.    In order to account docs with
missing values as skipped  docs for analyses that
do not support missing values,  this commit
changes the extractor so that it only ignores
docs with missing values when it collects the data
summary,  which is used to estimate memory usage.
",1348682,12875,329581,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2610","elastic/elasticsearch","c1d8341e6e045ca8f7f39856c3a17b49056df873",18,"2020-03-25 00:35:39+11:00","Add SAML IdP plugin for internal use (#54046)
This change merges the ""feature-internal-idp""
branch into Elasticsearch.    This introduces a
small identity-provider plugin as a child of the
x-pack module.  This allows ES to act as a SAML
IdP, for users who are authenticated against the
Elasticsearch cluster.    This feature is intended
for internal use within Elastic Cloud environments
and is not supported for any other use case. It
falls under an enterprise license tier.    The IdP
is disabled by default.    Co-authored-by: Ioannis
Kakavas <ioannis@elastic.co>
",1356424,12966,330262,"Tim Vernum","tim.vernum@elastic.co","GitHub","noreply@github.com"
"2611","elastic/elasticsearch","ae7da16ed3fa21acd5720933b3fa58f3d09e16aa",2,"2020-03-26 18:56:09+02:00","[ML] DF Analytics should always display
operational stats (#54210)  This commit populates
the _stats API response with sensible ""empty""
`data_counts` and `memory_usage` objects when the
job itself  has not started reporting them.
",1358450,12973,330429,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2612","elastic/elasticsearch","a90c1de8745681356a6516f4f22a8c40f71f6b12",5,"2020-03-26 15:01:07-04:00","Add ValuesSource Registry and associated logic
(#54281)  * Remove ValuesSourceType argument to
ValuesSourceAggregationBuilder (#48638)    *
ValuesSourceRegistry Prototype (#48758)    *
Remove generics from ValuesSource related classes
(#49606)    * fix percentile aggregation tests
(#50712)    * Basic thread safety for
ValuesSourceRegistry (#50340)    * Remove target
value type from ValuesSourceAggregationBuilder
(#49943)    * Cleanup default values source type
(#50992)    * CoreValuesSourceType no longer
implements Writable (#51276)    * Remove genereics
& hard coded ValuesSource references from Matrix
Stats (#51131)    * Put values source types on
fields (#51503)    * Remove VST Any (#51539)    *
Rewire terms agg to use new VS registry (#51182)
Also adds some basic AggTestCases for untested
code  paths (and boilerplate for future tests once
the IT are  converted over)    * Wire Cardinality
aggregation to work with the ValuesSourceRegistry
(#51337)    * Wire Percentiles aggregator into new
VS framework (#51639)    This required a bit of a
refactor to percentiles itself.  Before,  the
Builder would switch on the chosen algo to
generate an  algo-specific factory.  This doesn't
work (or at least, would be  difficult) in the new
VS framework.    This refactor consolidates both
factories together and introduces  a
PercentilesConfig object to act as a standardized
way to pass  algo-specific parameters through the
factory.  This object  is then used when deciding
which kind of aggregator to create    Note:
CoreValuesSourceType.HISTOGRAM still lives in
core, and will  be moved in a subsequent PR.    *
Remove generics and target value type from
MultiVSAB (#51647)    * fix checkstyle after merge
(#52008)    * Plumb ValuesSourceRegistry through
to QuerySearchContext (#51710)    * Convert
RareTerms to new VS registry (#52166)    * Wire up
Value Count (#52225)    * Wire up Max & Min
aggregations (#52219)    * ValuesSource
refactoring: Wire up Sum aggregation (#52571)    *
ValuesSource refactoring: Wire up SigTerms
aggregation (#52590)    * Soft immutability for
VSConfig (#52729)    * Unmute
testSupportedFieldTypes, fix
Percentiles/Ranks/Terms tests (#52734)    Also
fixes Percentiles which was incorrectly specified
to only accept  numeric, but in fact also accepts
Boolean and Date (because those are  numeric on
master - thanks `testSupportedFieldTypes` for
catching it!)    * VS refactoring: Wire up stats
aggregation (#52891)    * ValuesSource
refactoring: Wire up string_stats aggregation
(#52875)    * VS refactoring: Wire up median (MAD)
aggregation (#52945)    * fix valuesourcetype
issue with constant_keyword field (#53041)    this
commit implements `getValuesSourceType` for  the
ConstantKeyword field type.    master was merged
into feature/extensible-values-source  introducing
a new field type that was not implementing
`getValuesSourceType`.    * ValuesSource
refactoring: Wire up Avg aggregation (#52752)    *
Wire PercentileRanks aggregator into new VS
framework  (#51693)    * Add a VSConfig resolver
for aggregations not using the registry (#53038)
* Vs refactor wire up ranges and date ranges
(#52918)    * Wire up geo_bounds aggregation to
ValuesSourceRegistry (#53034)    This commit
updates the geo_bounds aggregation to depend  on
registering itself in the ValuesSourceRegistry
relates #42949.    * VS refactoring: convert
Boxplot to new registry (#53132)    * Wire-up
geotile_grid and geohash_grid to
ValuesSourceRegistry (#53037)    This commit
updates the geo*_grid aggregations to depend  on
registering itself in the ValuesSourceRegistry
relates to the values-source refactoring meta
issue #42949.    * Wire-up geo_centroid agg to
ValuesSourceRegistry (#53040)    This commit
updates the geo_centroid aggregation to depend  on
registering itself in the ValuesSourceRegistry.
relates to the values-source refactoring meta
issue #42949.    * Fix type tests for Missing
aggregation (#53501)    * ValuesSource Refactor:
move histo VSType into XPack module (#53298)    -
Introduces a new API
(`getBareAggregatorRegistrar()`) which allows
plugins to register aggregations against existing
agg definitions defined in Core.  - This moves the
histogram VSType over to XPack where it belongs.
`getHistogramValues()` still remains as a Core
concept  - Moves the histo-specific bits over to
xpack (e.g. the actual aggregator logic). This
requires extra boilerplate since we need to create
a new ""Analytics"" Percentile/Rank aggregators to
deal with the histo field. Doubly-so since
percentiles/ranks are extra boiler-plate'y...
should be much lighter for other aggs    * Wire up
DateHistogram to the ValuesSourceRegistry (#53484)
* Vs refactor parser cleanup (#53198)    Co-
authored-by: Zachary Tong <polyfractal@elastic.co>
Co-authored-by: Zachary Tong <zach@elastic.co>
Co-authored-by: Christos Soulios
<1561376+csoulios@users.noreply.github.com>  Co-
authored-by: Tal Levy <JubBoy333@gmail.com>
",1360342,13003,330949,"Mark Tozzi","mark.tozzi@elastic.co","GitHub","noreply@github.com"
"2613","elastic/elasticsearch","ef45e06027767322a6fa8268be6fed40bbe15752",3,"2020-03-31 02:42:51+11:00","Add wildcard service providers to IdP (#54148)
This adds the ability for the IdP to define
wildcard service  providers in a JSON file within
the ES node's config directory.    If a request is
made for a service provider that has not been
registered, then the set of wildcard services is
consulted. If the  SP entity-id and ACS match one
of the wildcard patterns, then a  dynamic service
provider is defined from the associated mustache
template.
",1362973,13035,331646,"Tim Vernum","tim.vernum@elastic.co","GitHub","noreply@github.com"
"2614","elastic/elasticsearch","95a7eed9aa35f47b228e402508709b5bd6703cf4",95,"2020-03-31 15:52:01-04:00","Rename MetaData to Metadata in all of the places
(#54519)  This is a simple naming change PR, to
fix the fact that ""metadata"" is a  single English
word, and for too long we have not followed
general  naming conventions for it. We are also
not consistent about it, for  example, METADATA
instead of META_DATA if we were trying to be
consistent with MetaData (although METADATA is
correct when considered  in the context of
""metadata""). This was a simple find and replace
across  the code base, only taking a few minutes
to fix this naming issue  forever.
",1364204,13055,332061,"Jason Tedor","jason@tedor.me","GitHub","noreply@github.com"
"2615","elastic/elasticsearch","d556f8792c95f8a1eadb6c8487879ff17484d630",1,"2020-04-01 12:03:36+03:00","Add error message in JSON response (#54389)  When
the SAML authentication is not successful, we
return a SAML  Response with a status that
indicates a failure. This commit adds  an error
message in the REST API response along with the
SAML  Response XML string so that the caller of
the API can identify  that this is an unsuccessful
response without needing to parse the  XML.
",1364239,13055,332063,"Ioannis Kakavas","ioannis@elastic.co","GitHub","noreply@github.com"
"2616","elastic/elasticsearch","f26ab700ba3f906493dc7068afe6e12989f7cf0b",2,"2020-04-01 12:47:06+03:00","Add end to end QA authentication test (#54215)
Use the same ES cluster as both an SP and an IDP
and perform  IDP initiated and SP initiated SSO.
The REST client plays the role  of both the Cloud
UI and Kibana in these flows
",1364394,13056,332070,"Ioannis Kakavas","ioannis@elastic.co","GitHub","noreply@github.com"
"2617","elastic/elasticsearch","ee3d40320aabf6c64003b7669739e04b86e25a56",1,"2020-04-01 11:22:13-04:00","Broadcast cancellation to only nodes have
outstanding child tasks (#54312)  Today when
canceling a task we broadcast ban/unban requests
to all nodes   in the cluster. This strategy does
not scale well for hierarchical  cancellation.
With this change, we will track outstanding child
requests  and broadcast the cancellation to only
nodes that have outstanding child  tasks. This
change also prevents a parent task from sending
child  requests once it got canceled.    Relates
#50990  Supersedes #51157    Co-authored-by: Igor
Motov <igor@motovs.org>  Co-authored-by: Yannick
Welsch <yannick@welsch.lu>
",1365763,13074,332209,"Nhat Nguyen","nhat.nguyen@elastic.co","GitHub","noreply@github.com"
"2618","elastic/elasticsearch","4e1ff31c3c508a05438a4803be0b1fc14f3575dc",1,"2020-04-02 10:34:17-04:00","[ML] add new inference_config field to trained
model config (#54421)  A new field called
`inference_config` is now added to the trained
model config object. This new field allows for
default inference settings from analytics or some
external model builder.     The inference
processor can still override whatever is set as
the default in the trained model config.
",1367183,13093,332419,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2619","elastic/elasticsearch","9f9ade7dcb04c1ffc66e92357f6cd32721dcda38",1,"2020-04-03 09:34:50-06:00","Use V2 index templates during index creation
(#54669)  * Use V2 index templates during index
creation    This commit changes our index creation
code to use (and favor!) V2 index templates during
index  creation. The creation precedence goes like
so, in order of precedence:    - Existing source
`IndexMetadata` - for example, when recovering
from a peer or a shrink/split/clone    where index
templates should not be applied  - A matching V2
index template, if one is found    - When a V2
template is found, all component templates (in the
`composed_of` field) are applied      in the order
that they appear, with the index template having
the 2nd highest precedence (the      create index
request always has the top priority when it comes
to index settings)  - All matching V1 templates
(the old style)    This also adds index template
validation when `PUT`-ing a new v2 index template
(because this was  required) and ensures that all
index and component templates specify *no* top-
level mapping type (it  is automatically added
when the template is added to the cluster state).
This does not yet implement fine-grained component
template merging of mappings, where we favor
merging only a single field's configuration, that
will be done in subsequent work.    This also
keeps the existing hidden index behavior present
for v1 templates, where a hidden index  will match
v2 index templates unless they are global (`*`)
templates.    Relates to #53101
",1369042,13113,332719,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2620","elastic/elasticsearch","c087ee1a72b717518cf6ad9a60c117949368a2f3",1,"2020-04-03 14:09:52-04:00","[ML] Start gathering and storing inference stats
(#53429)  This PR enables stats on inference to be
gathered and stored in the `.ml-stats-*` indices.
Each node + model_id will have its own running
stats document and these will later be summed
together when returning _stats to the user.
`.ml-stats-*` is ILM managed (when possible). So,
at any point the underlying index could change.
This means that a stats document that is read in
and then later updated will actually be a new doc
in a new index. This complicates matters as this
means that having a running knowledge of seq_no
and primary_term is complicated and almost
impossible. This is because we don't know the
latest index name.     We should also strive for
throughput, as this code sits in the middle of an
ingest pipeline (or even a query).
",1369784,13119,332775,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2621","elastic/elasticsearch","f6feb6c2c845aaab31cec4b4047c77c2caf85b89",16,"2020-04-06 15:51:05+02:00","Merge feature/searchable-snapshots branch into
master (#54803)  This commit merges the
searchable-snapshots feature branch into master.
See #54803 for the complete list of squashed
commits.    Co-authored-by: David Turner
<david.turner@elastic.co>  Co-authored-by: Yannick
Welsch <yannick@welsch.lu>  Co-authored-by: Lee
Hinman <dakrone@users.noreply.github.com>  Co-
authored-by: Andrei Dan <andrei.dan@elastic.co>
",1378438,13197,333761,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2622","elastic/elasticsearch","ad8590e190efe5858e9171ee67a4eb592a51b2e5",1,"2020-04-06 18:52:25+02:00","HLRC support for Component Templates APIs (#54635)
* HLRC support for Component Templates    * hlrc
* hlrc    * merge fix    * removed unused import
* checkstyle fixes    * metaData -> metadata    *
move to ClusterClient    * checkstyle fixes    *
checkstyle fixes    * checkstyle fixes    * method
in spec fixed    * PR comments    * PR comments
* PR comments    * unused imports fixed    *
review comment    Co-authored-by: Elastic Machine
<elasticmachine@users.noreply.github.com>
",1379129,13206,333997,"Przemko Robakowski","przemko.robakowski@elastic.co","GitHub","noreply@github.com"
"2623","elastic/elasticsearch","99a6d57aeb3cf11abc38b514f38a96bb1612e357",1,"2020-04-07 09:43:14+01:00","ILM fix retry delete action test (#54809)
Asserting on the failed_step field from the
explainAPI can produce flakiness  because the ILM
state is moved back and forth between the
(failing) step and  the ERROR step (as the
workflow is retry, fail then move to ERROR step,
move back to the (failing) step,  retry, fail,
etc) and the failed_step  information is only
available whilst in the ERROR state.    Unmute
other tests as they were collateral failures  A
read-only index could not be deleted in the
wipeCluster phase and caused  these failures
",1379568,13214,334058,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2624","elastic/elasticsearch","6ae2d5e6b9a493b6960925c7c87f7714843a1d74",1,"2020-04-07 08:04:31-06:00","Only allow retrieving a single index or component
template (#54694)  * Only allow retrieving a
single index or component template    This changes
the Index Template v2 APIs to only allow
retrieving a single ""named"" entity, where the
named entity can be nothing (return everything), a
wildcard (return the ones that match), or the
name of a template.    Relates to #53101    *
Throw exception when resource is not found    Co-
authored-by: Elastic Machine
<elasticmachine@users.noreply.github.com>
",1381047,13226,334176,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2625","elastic/elasticsearch","b8564b01594ef2511b107e5cc3d8258231d8a5da",1,"2020-04-07 14:13:39-04:00","Remove pipline aggs from agg result tree (backport
of #54716)  This removes pipeline aggregators from
the aggregation result tree  except for a single
field used for backwards compatibility with
pre-7.8  versions of Elasticsearch. That field
isn't populated unless we are  serializing to
pre-7.8 Elasticsearch. So, good news! We no longer
build  pipeline aggregators on the data node. Most
of the time.
",1381032,13231,334232,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2626","elastic/elasticsearch","ff6c5ed16616eadfcddd9c95317d370f0d126583",1,"2020-04-08 17:45:06+01:00","ILM add cluster update timeout on step retry
(#54878)  This commits adds a timeout when moving
ILM back on to a failed step. In  case the master
is struggling with processing the cluster update
requests  these ones will expire (as we'll send
them again anyway on the next ILM  loop run)
ILM more descriptive source messages for cluster
updates    Use the configured ILM step master
timeout setting
",1382508,13256,334697,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2627","elastic/elasticsearch","de30a0e18e6ca14110f2b3adcccb204496753c47",2,"2020-04-16 09:35:44+03:00","Fix responses for the token APIs (#54532)  This
commit fixes our behavior regarding the responses
we  return in various cases for the use of token
related APIs.  More concretely:    - In the Get
Token API with the `refresh` grant, when an
invalid  (already deleted, malformed, unknown)
refresh token is used in the  body of the request,
we respond with `400` HTTP status code   and an
`error_description` header with the message ""could
not   refresh the requested token"".  Previously we
would return erroneously return a  `401` with
""token   malformed"" message.    - In the
Invalidate Token API, when using an invalid
(already  deleted, malformed, unknown) access or
refresh token, we respond  with `404` and a body
that shows that no tokens were invalidated:
```     {       ""invalidated_tokens"":0,
""previously_invalidated_tokens"":0,
""error_count"":0     }     ```      The previous
behavior would be to erroneously return   a `400`
or `401` ( depending on the case ).    - In the
Invalidate Token API, when the tokens index
doesn't  exist or is closed, we return `400`
because we assume this is  a user issue either
because they tried to invalidate a token  when
there is no tokens index yet ( i.e. no tokens have
been created yet or the tokens index has been
deleted ) or the  index is closed.     - In the
Invalidate Token API, when the tokens index is
unavailable, we return a `503` status code because
we want to signal to the caller of the API that
the token they   tried to invalidate was not
invalidated and we can't be sure  if it is still
valid or not, and that they should try the request
again.       Resolves: #53323
",1386080,13291,334921,"Ioannis Kakavas","ioannis@elastic.co","GitHub","noreply@github.com"
"2628","elastic/elasticsearch","c5b923afec911c6ae8fc5179e65ae6bf55dcc5f1",1,"2020-04-19 15:16:16+01:00","Make isHidden a primitive when finding v2
templates (#55408)  isHidden was a `Boolean` in
order to treat a special case identified  with V1
templates where if the create index request didn't
specify if  the index should be hidden or not (ie.
isHidden was `null`) but the  index matched a
template that specified the `index.hidden` setting
we  needed to remove the global templates from the
templates we'll apply to  the new index (note:
this is important with V1 templates as inheritance
is supported).    With V2 templates we match only
one template with an index so the  equivalent
check did not need to exist (we added a sanity
check in  https://github.com/elastic/elasticsearch
/pull/55015 where we make sure  we don't apply an
invalid global template - one that specifes the
`index.hidden` setting, but this is a check we
make irrespective of the  user specifying or not
if the index should be hidden)    This commit
makes `isHidden` when matching V2 templates a
boolean  primitive, eliminating the need for the
`null` state to exist. Note that  some methods
which use the matching V2 templates still work
with a  `Boolean` object `isHidden` attribute as
they are also matching the V1  templates. These
methods will pass in `false` instead of `null`
when  finding the V2 templates.
",1390256,13328,335657,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2629","elastic/elasticsearch","b6ab9b30695ecbecb8c05cf70f447643251c9ad1",12,"2020-04-20 10:52:26+02:00","Add GCS support for searchable snapshots (#55403)
Adds ranged read support for GCS repositories in
order to enable searchable snapshot support  for
GCS.    As part of this PR, I've extracted some of
the test infrastructure to make sure that
GoogleCloudStorageBlobContainerRetriesTests and
S3BlobContainerRetriesTests are covering  similar
test (as I saw those diverging in what they cover)
",1390330,13330,335691,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2630","elastic/elasticsearch","05066aecf071ef0f66f99d83a1c95e3c8f11025b",3,"2020-04-20 17:09:29+08:00","Add Bulk stats track the bulk per shard (#52208)
* Add Bulk stats track the bulk sizes per shard
and the time spent on the bulk shard request
(#50536)(#47345)
",1390716,13334,335779,"zhichen","kongshi.yks@alibaba-inc.com","GitHub","noreply@github.com"
"2631","elastic/elasticsearch","8ef209f11982af4cac0567c19ce76bf4a5b799d8",1,"2020-04-20 12:22:25-05:00","Identify backing indices for data streams (#55410)
",1391123,13335,335803,"Dan Hermann","danhermann@users.noreply.github.com","GitHub","noreply@github.com"
"2632","elastic/elasticsearch","2b0900d33ba3f879a235f79414bc51d593accc36",3,"2020-04-21 18:18:18-05:00","Validate REST specs against schema (#55117)  A
JSON schema was recently introduced for the REST
API specification. #54252  This PR introduces a
3rd party validation tool to ensure that the  REST
specification conforms to the schema.    The task
is applied to the 3 projects that contain REST API
specifications.  The plugin wires this task into
the precommit commit task, and should be
considered as part of the public API for the build
tools for any plugin  developer to contribute
their plugin's specification.    An ignore
parameter has been introduced for the task to
allow specific  file to be ignored from the
validation. The ignored files in this PR  will
soon get issues logged and a link so they can be
fixed.    Closes #54314
",1392175,13339,335942,"Jake Landis","jake.landis@elastic.co","GitHub","noreply@github.com"
"2633","elastic/elasticsearch","62b4964f3b25755031a3be06e19e27346d79a324",1,"2020-04-21 16:31:21-07:00","Add method to check if object is generically
writeable in stream (#54936)  When calling scripts
in metric aggregation, the returned metric state
is  passed along to the coordinating node to do
the final reduce. However,  it is possible the
object could contain nested state which is unknown
to  StreamOutput/StreamInput. This would then
result in the node crashing as  exceptions are not
expected in the middle of serialization.    This
commit adds a method to StreamOutput that can
determine if an  object is writeable by the
stream. It uses the same logic  writeGenericValue,
special casing each of the supported collection
types  to recursively determine if each contained
value is itself writeable.    relates #54708
",1392219,13339,335942,"Ryan Ernst","ryan@elastic.co","GitHub","noreply@github.com"
"2634","elastic/elasticsearch","38bc1f9222709e267552742d52e39c6514f8b97f",2,"2020-04-22 11:35:17-04:00","Add InstantiatingObjectParser (#55483)  Introduces
InstantiatingObjectParser which is similar to the
ConstructingObjectParser, but instantiates the
object using its constructor  instead of a builder
function.    Closes #52499
",1393027,13350,336132,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2635","elastic/elasticsearch","7b44743ccc2402d79e347882dc74623e04883488",1,"2020-04-23 10:26:24+02:00","Don't expand default_field in query_string before
required (#55158)  Currently
QueryStringQueryParser already checks if the field
limit is breached  at construction time, which
e.g. leads to errors if the default field is set
to  ""*"" or the default isn't used and there are
more fields than the limit, even if the  query
itself does not use all these fields.  This change
moves this check to happen after query parsing.
QueryStringQueryParser now  keeps track of the
fields that are actually resolved while parsing.
The size of  that set is later used to check
against the limit set by the
`indices.query.bool.max_clause_count` setting.
Closes #53789
",1393466,13350,336156,"Christoph Büscher","cbuescher@posteo.de","GitHub","noreply@github.com"
"2636","elastic/elasticsearch","f07059059d8d920216f2b57be79183c423ba0309",1,"2020-04-23 23:00:34+02:00","Fix (de)serialization of async search failures
(#55688)  The (de)serialization code of the async
search response  cannot handle exceptions that
extend ElasticsearchException (e.g.
ScriptException).  This commit fixes this bug by
serializing the error with the more generic
StreamInput#writeException.
",1393620,13354,336200,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2637","elastic/elasticsearch","1a5845edce1f445c58e094e9a3b6792e21e543b0",4,"2020-04-29 11:27:15+01:00","Add simulate template composition API
_index_template/_simulate_index/{name}  (#55686)
This adds a new api to simulate matching the given
index name against the   index templates in the
system.    The syntax for the new API takes the
following form:    POST
_index_template/_simulate_index/{index_name}  {
""index_patterns"": [""logs-*""],    ""priority"": 15,
""template"": {          ""settings"": {
""number_of_shards"": 3          }         ...     }
}    Where the body is optional, but we support
the entire body used by the  PUT
_index_template/{name} api. When the body is
specified we'll simulate  matching the given index
against a system that'd have the given index
template together with the index templates that
exist in the system.    The response, in both
cases, will return the matching template's
resolved  settings, mappings and aliases, together
with a special field that'll print any
overlapping templates and their corresponding
index patterns.
",1396496,13380,336696,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2638","elastic/elasticsearch","475790c34e0bab95d352132d6be63c4f5b219fb1",2,"2020-04-30 14:24:46+01:00","Add HLRC support for simulate index template api
(#55936)
",1396854,13370,336538,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2639","elastic/elasticsearch","f36ab092eda996c771f1043a0e405b6c7b3fffed",1,"2020-05-04 16:49:11-04:00","Deprecated xpack ""enable"" settings should be no-
ops (#55416)  The following settings are now no-
ops:    * xpack.flattened.enabled  *
xpack.logstash.enabled  * xpack.rollup.enabled  *
xpack.slm.enabled  * xpack.sql.enabled  *
xpack.transform.enabled  * xpack.vectors.enabled
Since these settings no longer need to be checked,
we can remove settings  parameters from a number
of constructors and methods, and do so in this
commit.    We also update documentation to remove
references to these settings.
",1398099,13378,336785,"William Brafford","williamrandolphbrafford@gmail.com","GitHub","noreply@github.com"
"2640","elastic/elasticsearch","33f134f5563dcc0a7f58dd0664f86ecf20b8f911",2,"2020-05-05 11:34:54+02:00","[Transform] add throttling (#56007)  add
throttling to transform, throttling will slow down
search requests by delaying the execution based on
a documents per second metric.     fixes #54862
",1399274,13385,336956,"Hendrik Muhs","hendrik.muhs@elastic.co","GitHub","noreply@github.com"
"2641","elastic/elasticsearch","6bf3834059b3e4bd2cb51cd362027a6b0d9c2c2e",16,"2020-05-05 12:36:05+03:00","[ML] Add loss_function to regression (#56118)
Adds parameters `loss_function` and
`loss_function_parameter`  to regression.
",1399419,13385,336958,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2642","elastic/elasticsearch","ed271a6752f52d2f5198b857128c08c2ee711eab",1,"2020-05-05 09:24:46-06:00","Validate V2 templates more strictly (#56170)  This
commit changes the validation for V2 index and
component templates to re-use the same  validation
that V1 templates used. This includes things like
invalid template names, index patterns,  etc.
This also adds validation that template names do
not contain `*` and index patterns do not contain
`:` (index names can't contain this regardless).
Supercedes #53970  Relates to #53101  Resolves
#43737  Resolves #46045
",1401249,13403,337272,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2643","elastic/elasticsearch","f4022c027e393e9d4d8339a6ba0cc9dba3e9e7cc",1,"2020-05-05 18:06:13+02:00","Remove Snapshot INIT Step (#55918)  With #55773
the snapshot INIT state step has become obsolete.
We can set up the snapshot directly in one single
step to simplify the state machine.    This is a
big help for building concurrent snapshots because
it allows us to establish a deterministic order of
operations between snapshot create and delete
operations since all of their entries now contain
a repository generation. With this change simple
queuing up of snapshot operations can and will be
added in a follow-up.
",1401413,13404,337374,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2644","elastic/elasticsearch","1c3e450c2e0768adf62b89a3e682703b6748a820",1,"2020-05-11 16:09:29-04:00","[Transform] adds geotile_grid support in group_by
(#56514)  This adds support for grouping by geo
points. This uses the agg [geotile_grid](https://w
ww.elastic.co/guide/en/elasticsearch/reference/cur
rent/search-aggregations-bucket-geotilegrid-
aggregation.html).    I am opting to store the
tile results of group_by as a `geo_shape` so that
users can query the results. Additionally, the
shapes could be visualized and filtered in the
kibana maps app.    relates to https://github.com/
elastic/elasticsearch/issues/56121
",1404418,13420,338263,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2645","elastic/elasticsearch","0bf4be7dd7f1f2393d65ddd01f2f052ed6f270d5",1,"2020-05-11 14:49:40-06:00","Share netty event loops between transports
(#46346)  Currently Elasticsearch creates
independent event loop groups for each  transport
(http and internal) transport type. This is
unnecessary and  can lead to contention when
different threads access shared resources  (ex:
allocators). This commit moves to a model where,
by default, the  event loops are shared between
the transports. The previous behavior can  be
attained by specifically setting the http worker
count.
",1404630,13423,338336,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2646","elastic/elasticsearch","ee5a09ea840167566e34c28c8225dc38bc6a7ae8",2,"2020-05-12 15:05:43+03:00","QL: case sensitive support in EQL (#56404)  * *
StartsWith is case sensitive aware  * Added case
sensitivity to EQL configuration  * case_sensitive
parameter can be specified when running queries
(default  is case insensitive)  * Added
STARTS_WITH function to SQL as well    * Add case
sensitive aware queryfolder tests    * Address
reviews    * Address review #2
",1405677,13438,338504,"Andrei Stefan","astefan@users.noreply.github.com","GitHub","noreply@github.com"
"2647","elastic/elasticsearch","7b9df1aa092d21ceebc5730c2d35d4f0f5504d94",1,"2020-05-13 10:11:09+01:00","[ML] Tail the C++ logging pipe before connecting
other pipes (#56632)  Prior to this change the
named pipes that connect the ML C++  processes to
the Elasticsearch JVM were all opened before any
of them were read from or written to.    This
created a problem, where if the C++ process logged
more  messages between opening the log pipe and
opening the last  pipe to be connected than there
was space for in the named  pipe's buffer then the
C++ process would block.  This would  mean it
never got as far as opening the last named pipe,
so  the JVM would never get as far as reading from
the log pipe,  hence a deadlock.    This change
alters the connection order so that the JVM
starts reading from the logging pipe immediately
after opening  it so that if the C++ process logs
messages while opening the  other named pipes they
are captured in a timely manner and  there is no
danger of a deadlock.    Relates #56366
",1405875,13437,338542,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2648","elastic/elasticsearch","954afd94fe859209522a6d63fcb15dd9ef6c9df2",6,"2020-05-13 10:09:38-04:00","Clean up DocValuesIndexFieldData (#56372)
",1407363,13461,338785,"Mark Tozzi","mark.tozzi@elastic.co","GitHub","noreply@github.com"
"2649","elastic/elasticsearch","7501e061cfe2b2455884b651267130976ac90c20",1,"2020-05-18 09:06:24-06:00","Create HttpRequest earlier in pipeline (#56393)
Elasticsearch requires that a HttpRequest
abstraction be implemented  by http modules before
server processing. This abstraction controls when
underlying resources are released. This commit
moves this abstraction to  be created immediately
after content aggregation. This change will
enable follow-up work including moving Cors logic
into the server  package and tracking bytes as
they are aggregated from the network  level.
",1410476,13487,339312,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2650","elastic/elasticsearch","d3ccada06f44f9ee1d37c75a7653001bec11fdb1",2,"2020-05-18 15:11:42-06:00","Add template simulation API for simulating
template composition (#56842)  This adds an API
for simulating template composition with or
without an index template.    It looks like:
```  POST /_index_template/_simulate/my-template
```    To simulate a template named `my-template`
that already exists, or, to simulate a template
that does  not already exist:    ```  POST
/_index_template/_simulate  {    ""index_patterns"":
[""my-index""]    ""composed_of"": [""ct1"", ""ct2""],  }
```    This is related to #55686, which adds an
API to simulate composition based on an index name
(hence  the `_simulate_index` vs `_simulate`).
This commit also adds reference documentation for
both simulation APIs.    Relates to #53101
Resolves #56390  Resolves #56255
",1410745,13491,339412,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2651","elastic/elasticsearch","579ce2f99cb6ef8933aadfadc539278e94362e16",1,"2020-05-26 14:51:13-06:00","Reestablish peer recovery after network errors
(#55274)  Currently a network disruption will fail
a peer recovery. This commit  adds network errors
as retryable actions for the source node.
Additionally, it adds sequence numbers to the
recovery request to  ensure that the requests are
idempotent.    Additionally it adds a reestablish
recovery action. The target node  will attempt to
reestablish an existing recovery after a network
failure. This is necessary to ensure that the
retries occurring on the  source node provide
value in bidirectional failures.
",1411986,13515,339884,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2652","elastic/elasticsearch","4dc32611fcdc4ffc6ad27373103b636ee53941a8",28,"2020-05-27 09:32:10-06:00","Rename template V2 classes to ComposableTemplate
(#57183)  This PR changes the name of the Index
Template V2 classes to ""Composable Templates"", it
also ensures there are no mentions of ""V2"" in the
documentation or error/warning messages. V1
templates are referred to as ""legacy"" templates.
Resolves #56609
",1412176,13512,339895,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2653","elastic/elasticsearch","de687ce09734784b79a5435eeb660e49ab595886",1,"2020-05-28 15:29:46+10:00","Fix smtp.ssl.trust setting for watcher email
(#56090)  The ssl.trust setting for Watcher
provides a list of hostnames that  should be
automatically trusted for SSL hostname
verification. It was  accidentally broken when we
added the full ssl.* settings for email
notifications (see #45272)    This commit corrects
this, so the setting is once again respected,  as
long as none of the other ssl settings are
configured for email  notifications.    Resolves:
#52153
",1412227,13512,339901,"Tim Vernum","tim.vernum@elastic.co","GitHub","noreply@github.com"
"2654","elastic/elasticsearch","398f3044993e744a71ef650fc273d828c911a6f8",1,"2020-05-28 07:33:03-05:00","Fix incorrect log warning when exporting
monitoring via HTTP without authentication
",1412546,13514,339954,"Dan Hermann","danhermann@users.noreply.github.com","GitHub","noreply@github.com"
"2655","elastic/elasticsearch","e50f5d5d869a776b023d3a0febbe221464aaaa45",2,"2020-05-29 14:27:02+02:00","Make AnnotationPersister use bulk requests instead
of indexing individual documents (#57278)
",1413059,13518,340049,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2656","elastic/elasticsearch","7382f446f79e909c1eeb3d0a2aeb75cf0c02325e",5,"2020-05-29 17:00:19-04:00","Fix casting of scaled_float in sorts (#57207)
Previously we'd get a `ClassCastException` when
you tried to use  `numeric_type` on
`scaled_float`. Oops! This cleans up the CCE and
moves  some code around so the casting actually
works.
",1413846,13522,340200,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2657","elastic/elasticsearch","cb857226121737f150c08e9b6135a92f722ce183",1,"2020-06-01 13:14:59-04:00","Clean up Aggregator Supplier Boiler Plate (#57442)
",1413926,13524,340328,"Mark Tozzi","mark.tozzi@elastic.co","GitHub","noreply@github.com"
"2658","elastic/elasticsearch","605b4d0ea98c15d98b1765a95fa8217fb1967b4d",45,"2020-06-05 11:56:15+01:00","[ML] Add per-partition categorization option
(#57683)  This PR adds the initial Java side
changes to enable  use of the per-partition
categorization functionality  added in elastic/ml-
cpp#1293.    There will be a followup change to
complete the work,  as there cannot be any end-to-
end integration tests  until elastic/ml-cpp#1293
is merged, and also  elastic/ml-cpp#1293 does not
implement some of the  more peripheral
functionality, like stop_on_warn and  per-
partition stats documents.    The changes so far
cover REST APIs, results object  formats, HLRC and
docs.
",1415743,13529,340552,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2659","elastic/elasticsearch","bbeda643a62c7e29caf59967538b837ae6d6495b",1,"2020-06-05 13:32:35+01:00","Delete expired data by job (#57337)  Deleting
expired data can take a long time leading to
timeouts if there  are many jobs. Often the
problem is due to a few large jobs which   prevent
the regular maintenance of the remaining jobs.
This change adds  a job_id parameter to the delete
expired data endpoint to help clean up  those
problematic jobs.
",1415798,13529,340556,"David Kyle","david.kyle@elastic.co","GitHub","noreply@github.com"
"2660","elastic/elasticsearch","78fcd0581d2981b48dfac5c63047e7fd14a248e8",1,"2020-06-05 13:03:09-04:00","[ML] inference performance optimizations and
refactor (#57674)  This is a major refactor of the
underlying inference logic.    The main refactor
is now we are separating the model configuration
and   the inference interfaces.     This has the
following benefits:   - we can store extra things
with the model that are not      necessary for
inference (i.e. treenode split information gain)
- we can optimize inference separate from model
serialization and storage.   - The user is
oblivious to the optimizations (other than seeing
the benefits).    A major part of this commit is
removing all inference related methods from the
trained model configurations (ensemble, tree,
etc.) and moving them to a new class.    This new
class satisfies a new interface that is ONLY for
inference.    The optimizations applied currently
are:  - feature maps are flattened once  - feature
extraction only happens once at the highest level
(improves inference + feature importance through
put)  - Only storing what we need for inference +
feature importance on heap
",1416406,13537,340630,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2661","elastic/elasticsearch","37ab35156b581fd41f0577cc03936d3b24d85642",3,"2020-06-05 19:16:41+02:00","Deduplicate Index Metadata in BlobStore (#50278)
This PR introduces two new fields in to
`RepositoryData` (index-N) to track the blob name
of `IndexMetaData` blobs and their content via
setting generations and uuids. This is used to
deduplicate the `IndexMetaData` blobs
(`meta-{uuid}.dat` in the indices folders under
`/indices` so that new metadata for an index is
only written to the repository during a snapshot
if that same metadata can't be found in another
snapshot.  This saves one write per index in the
common case of unchanged metadata thus saving cost
and making snapshot finalization drastically
faster if many indices are being snapshotted at
the same time.    The implementation is mostly
analogous to that for shard generations in #46250
and piggy backs on the BwC mechanism introduced in
that PR (which means this PR needs adjustments if
it doesn't go into `7.6`).     Relates to #45736
as it improves the efficiency of snapshotting
unchanged indices  Relates to #49800 as it has the
potential of loading the index metadata for
multiple snapshots of the same index concurrently
much more efficient speeding up future concurrent
snapshot delete
",1416715,13538,340731,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2662","elastic/elasticsearch","695b242d69f0dc017e732b63737625adb01fe595",1,"2020-06-08 11:09:12+01:00","DataStream creation validation allows for prefixed
indices (#57750)  We want to validate the
DataStreams on creation to make sure the future
backing  indices would not clash with existing
indices in the system (so we can  always rollover
the data stream).  This changes the validation
logic to allow for a DataStream to be created
with a backing index that has a prefix (eg.
`shrink-foo-000001`) even if the  former backing
index (`foo-000001`) exists in the system.  The
new validation logic will look for potential index
conflicts with indices  in the system that have
the counter in the name greater than the data
stream's  generation.    This ensures that the
`DataStream`'s future rollovers are safe because
for a  `DataStream` `foo` of generation 4, we will
look for standalone indices in the  form of
`foo-%06d` with the counter greater than 4 (ie.
validation will fail if  `foo-000006` exists in
the system), but will also allow replacing a
backing index with an index named by prefixing the
backing index it replaces.
",1417033,13539,340796,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2663","elastic/elasticsearch","db09e803ddbdea3dd7f3a03b2e5a7093a1a35805",2,"2020-06-08 17:14:45+02:00","Fix Broken Numeric Shard Generations in
RepositoryData (#57813)  Fix broken numeric shard
generations when reading them from the wire  or
physically from the physical repository.  This
should be the cheapest way to clean up broken
shard generations  in a BwC and safe-to-backport
manner for now. We can potentially  further
optimize this by also not doing the checks on the
generations  based on the versions we see in the
`RepositoryData` but I don't think  it matters
much since we will read `RepositoryData` from
cache in almost  all cases.    Closes #57798
",1417362,13539,340836,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2664","elastic/elasticsearch","d7609c21ee3bf8719265a35394bb8492926b0845",2,"2020-06-11 17:37:48+02:00","Fix refresh behavior in MockDiskUsagesIT (#57926)
Ensures that InternalClusterInfoService's
internally cached stats are refreshed whenever the
shard size or disk usage function (to mock out
disk usage) are overridden.    Closes #57888
",1420244,13552,341290,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2665","elastic/elasticsearch","637f081dc5815e302f59cc69aef4a65389d88260",1,"2020-06-11 18:53:06+02:00","Fix possible NPE on search phase failure (#57952)
When a search phase fails, we release the context
of all successful shards.  Successful shards that
rewrite the request to match none will not create
any context  since #. This change ensures that we
don't try to release a `null` context on these
successful shards.    Closes #57945
",1420382,13552,341291,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2666","elastic/elasticsearch","355958f0a4171d480ce887c1068f1280e1b9b7dc",2,"2020-06-11 17:59:35+01:00","[ML] Add categorizer stats ML result type (#57978)
This type of result will store stats about how
well categorization  is performing.  When per-
partition categorization is in use, separate
documents will be written for every partition so
that it is possible  to see if categorization is
working well for some partitions but not  others.
This PR is a minimal implementation to allow the
C++ side changes to  be made.  More Java side
changes related to per-partition  categorization
will be in followup PRs.  However, even in the
long  term I do not see a major benefit in
introducing dedicated APIs for  querying
categorizer stats.  Like forecast request stats
the  categorizer stats can be read directly from
the job's results alias.
",1421619,13572,341417,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2667","elastic/elasticsearch","9724fa9dc8c49057c9ff2c3a7d25986ff3329d53",1,"2020-06-12 06:25:16-05:00","Resolve index API (#57626)
",1422747,13575,341520,"Dan Hermann","danhermann@users.noreply.github.com","GitHub","noreply@github.com"
"2668","elastic/elasticsearch","69a6a18d8dc3f95001cfe6f55c1451ac616f7e84",3,"2020-06-15 14:08:29-07:00","Add optional description parameter to ingest
processors. (#57906)  This commit adds an optional
field, `description`, to all ingest processors  so
that users can explain the purpose of the specific
processor instance.    Closes #56000.
",1423329,13576,341686,"Tal Levy","JubBoy333@gmail.com","GitHub","noreply@github.com"
"2669","elastic/elasticsearch","f0ece434f53eee5ba55590034d42084f5bf2bdda",1,"2020-06-16 07:20:21-04:00","[ML] fixing tree inference ctor to allow
target_type to be optional (#58132)  The tree
trained model object will set its target_type to
be regression by default.    This updates the
inference object to behave the same way.
",1423471,13576,341686,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2670","elastic/elasticsearch","90c9b95ca04e8be47ee7d31cfc73e4969abd3337",1,"2020-06-17 22:53:53+02:00","Allow index filtering in field capabilities API
(#57276)  * Add index filtering in field
capabilities API    This change allows to use an
`index_filter` in the  field capabilities API.
Indices are filtered from  the response if the
provided query rewrites to `match_none`  on every
shard:    ````  GET metrics-*  {
""index_filter"": {      ""bool"": {        ""must"": [
""range"": {            ""@timestamp"": {
""gt"": ""2019""            }          }        }    }
}  ````    The filtering is done on a best-effort
basis, it uses the can match phase  to rewrite
queries to `match_none` instead of fully executing
the request.  The first shard that can match the
filter is used to create the field  capabilities
response for the entire index.    Closes #56195
",1427606,13631,342935,"Jim Ferenczi","jim.ferenczi@elastic.co","GitHub","noreply@github.com"
"2671","elastic/elasticsearch","b305454e23528094d7abdf5287f2309752a18b75",2,"2020-06-18 10:05:14+02:00","Add new flag to check whether alias exists on
remove (#58100)  This allows doing true CAS
operations on aliases, making sure that an alias
is actually properly  moved from a given source
index onto a given target index. This is useful to
ensure that an  alias is actually moved from a
given index to another one, and not just added to
another index.
",1427664,13631,342940,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2672","elastic/elasticsearch","6d31e685a902d65c5f6faec8bcc4e4d73f754093",2,"2020-06-18 16:30:38+02:00","Delete auto-generated annotations when model
snapshot is reverted (#58240)
",1427805,13632,342987,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2673","elastic/elasticsearch","a43ff95f2d09edb24b3e6a564cb212ac542a0e3c",1,"2020-06-18 17:18:43-04:00","[ML] calculate cache misses for inference and
return in stats (#58252)  When a local model is
constructed, the cache hit miss count is
incremented.    When a user calls _stats, we will
include the sum cache hit miss count across ALL
nodes. This statistic is important to in comparing
against the inference_count. If the cache hit miss
count is near the inference_count it indicates
that the cache is overburdened, or inappropriately
configured.
",1428809,13630,342920,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2674","elastic/elasticsearch","63922dfcbdb37663859e9946d764e29392cb26d4",8,"2020-06-23 11:24:23+02:00","Save Shard ID Serializations in Bulk Requests
(#56209)  Just like #56094 but for the request
side.  Removes a lot of redundant `ShardId`
instances from bulk shard requests as well as
stops serializing index names when they're not
needed because they're not different from what is
in the shard id.    Even ignoring the index name
serialization savings here, this change saves one
`ShardId` instance per bulk shard request at
least. This means it saves approximately:    * 8
bytes for the `ShardId` object (itself + one
field)     * + another 4 bytes for the `int` in
the `ShardId`  * 16 bytes (two fields + the
instance itself + the padding) for the `Index`
object     * + 30 bytes for the `Index` uuid
string     * + all the bytes in the index name
string    => 60+ bytes per bulk request item saved
on heap and over the wire
",1429649,13632,343005,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2675","elastic/elasticsearch","e99d287fbb14de458aff47baf961a52a47542c32",2,"2020-06-23 09:26:54-04:00","Add Variable Width Histogram Aggregation (#42035)
Implements a new histogram aggregation called
`variable_width_histogram` which  dynamically
determines bucket intervals based on document
groupings. These  groups are determined by running
a one-pass clustering algorithm on each shard  and
then reducing each shard's clusters using an
agglomerative  clustering algorithm.    This PR
addresses #9572.    The shard-level clustering is
done in one pass to minimize memory overhead. The
algorithm was lightly inspired by  [this paper](ht
tps://ieeexplore.ieee.org/abstract/document/119838
7). It fetches  a small number of documents to
sample the data and determine initial clusters.
Subsequent documents are then placed into one of
these clusters, or a new one  if they are an
outlier. This algorithm is described in more
details in the  aggregation's docs.    At reduce
time, a  [hierarchical agglomerative clustering](h
ttps://en.wikipedia.org/wiki/Hierarchical_clusteri
ng)  algorithm inspired by [this
paper](https://arxiv.org/abs/1802.00304)
continually merges the closest buckets from all
shards (based on their  centroids) until the
target number of buckets is reached.    The final
values produced by this aggregation are
approximate. Each bucket's  min value is used as
its key in the histogram. Furthermore, buckets are
merged  based on their centroids and not their
bounds. So it is possible that adjacent  buckets
will overlap after reduction. Because each
bucket's key is its min,  this overlap is not
shown in the final histogram. However, when such
overlap  occurs, we set the key of the bucket with
the larger centroid to the midpoint  between its
minimum and the smaller bucket‚Äôs maximum:
`min[large] = (min[large] + max[small]) / 2`. This
heuristic is expected to  increases the accuracy
of the clustering.    Nodes are unable to share
centroids during the shard-level clustering phase.
In  the future, resolving https://github.com/elast
ic/elasticsearch/issues/50863  would let us solve
this issue.     It doesn‚Äôt make sense for this
aggregation to support the `min_doc_count`
parameter, since clusters are determined
dynamically. The `order` parameter is  not
supported here to keep this large PR from becoming
too complex.
",1431424,13643,343545,"James Dorfman","jamesdorfman@users.noreply.github.com","GitHub","noreply@github.com"
"2676","elastic/elasticsearch","2f3ea22c6984c802bec9f45c1c805818bfd39f98",1,"2020-06-23 10:09:10-04:00","Small VS config cleanup (#58294)
",1431425,13643,343546,"Mark Tozzi","mark.tozzi@elastic.co","GitHub","noreply@github.com"
"2677","elastic/elasticsearch","2a454be6ed3e3a98d8ee692f803cd241e54eca58",1,"2020-06-23 15:16:18+01:00","[ML] Fix wire serialization for flush
acknowledgements (#58413)  There was a discrepancy
in the implementation of flush  acknowledgements:
most of the class was designed on the  basis that
the ""last finalized bucket time"" could be null
but the wire serialization assumed that it was
never  null.  This works because, the C++ sends
zero ""last  finalized bucket time"" when it is not
known or not  relevant.  But then the Java code
will print that to  XContent as it is assuming
null represents not known or  not relevant.
This change corrects the discrepancies.
Internally within  the class null represents not
known or not relevant, but  this is translated
from/to 0 for communications from the  C++ and old
nodes that have the bug.    Additionally I
switched from Date to Instant for this  class and
made the member variables final to modernise it  a
bit.
",1431455,13643,343557,"David Roberts","dave.roberts@elastic.co","GitHub","noreply@github.com"
"2678","elastic/elasticsearch","6a7b56ac92f0fec2ebcc6e653106f3a2f2ebde05",1,"2020-06-24 15:54:43+02:00","Cleaner Handling of Snapshot Related null Custom
Values in CS (#58382)  Add the ability to get a
custom value while specifying a default and use it
throughout the  codebase to get rid of the `null`
edge case and shorten the code a little.
",1432372,13654,343583,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2679","elastic/elasticsearch","91cc417aba84fce2b9b8a42794ee2411708b6c71",1,"2020-06-24 11:25:26-07:00","Simplify mapping validation for resizing indices.
(#58510)  When creating a target index from a
source index, we don't allow for target  mappings
to be specified. This PR simplifies the check that
the target mappings  are empty.    This refactor
will help when implementing composable template
merging, since we  no longer need to resolve +
check the target mappings when creating an index
from a template.
",1432395,13654,344195,"Julie Tibshirani","julie.tibshirani@elastic.co","GitHub","noreply@github.com"
"2680","elastic/elasticsearch","9f5bb7f962fee79b3a6d3d8ea993df1e1f7ac6cd",1,"2020-06-25 16:09:30+03:00","[ML] Change inference default field name to
<dep_var>_prediction (#58538)  This changes the
default value for the results field of inference
applied on models that are trained via a data
frame analytics job.  Previously, the results
field default was `predicted_value`. This  commit
makes it the same as in the training job itself.
The new  default field is
`<dependent_variable>_prediction`. Apart from
making inference consistent with the training job
the model came  from, it is helpful to preserve
the dependent variable name  by default as it
provides some context to the user that may  avoid
confusion as to which model results came from.
",1432907,13659,344322,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2681","elastic/elasticsearch","fd3de809f592a7ff5c7008a71b2a341284aed0c6",1,"2020-06-25 11:17:12-04:00","[ML] make waiting for renormalization optional for
internally flushing job (#58537)  When flushing,
datafeeds only need the guaruntee that the latest
bucket has been handled.    But, in addition to
this, the typical call to flush waits for
renormalization to complete. For large jobs, this
can take a fair bit of time (even longer than a
bucket length). This causes unnecessary delays in
handling data.    This commit adds a new internal
only flag that allows datafeeds (and forecasting)
to skip waiting on renormalization.    closes
#58395
",1433385,13662,344387,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2682","elastic/elasticsearch","2e85723eeeea8c806109caf75d31f827d0a1e668",4,"2020-06-25 14:05:13-04:00","Fix two scripted_metric bugs (#58547)  Fixes two
bugs introduced by #57627:  1. We were not
properly letting go of memory from the request
breaker     when the aggregation finished.  2. We
no longer supported totally arbitrary stuff
produced by the init     script because we
*assumed* that it'd be ok to run the script once
and clone its results. Sadly, cloning can't clone
*anything* that the     init script can make, like
`String` arrays. This runs the init script
once for every new bucket so we don't need to
clone.
",1433525,13662,344395,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2683","elastic/elasticsearch","b01322e55f67fdcdd7103afae31c829791e2ec38",2,"2020-06-26 11:53:57+02:00","Allows SparseFileTracker to progressively execute
listeners during Gap processing (#58477)  Today
SparseFileTracker allows to wait for a range to
become available   before executing a given
listener. In the case of searchable snapshot,
we'd like to be able to wait for a large range to
be filled (ie, downloaded   and written to disk)
while being able to execute the listener as soon
as   a smaller range is available.    This pull
request is an extract from #58164 which introduces
a   ProgressListenableActionFuture that is used
internally by   SparseFileTracker. The progressive
listenable future allows to register   listeners
attached to SparseFileTracker.Gap so that they are
executed   once the Gap is completed (with success
or failure) or as soon as the   Gap progress
reaches a given progress value. This progress
value is   defined when the tracker.waitForRange()
method is called; this method   has been modified
to accept a range and another listener's range to
operate on.
",1434133,13666,344486,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2684","elastic/elasticsearch","96853df6af01ac83b6626ed608e7dec53ba72dc2",5,"2020-06-27 12:04:39+03:00","[ML] Rename increased_memory_estimate_bytes
(#58614)  ... to memory_reestimate_bytes in DF
Analytics  memory usage.    Relates #58588
",1434884,13677,344608,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2685","elastic/elasticsearch","e9661558e748582c26e7581e085901fdc82406c2",3,"2020-06-29 10:28:11+10:00","Support handling LogoutResponse from SAML idP
(#56316)  SAML idP sends back a LogoutResponse at
the end of the logout workflow. It can be sent via
either HTTP-Redirect binding or HTTP-POST binding.
Currently, the HTTP-Redirect request is simply
ignored by Kibana and never reaches ES. It does
not cause any obvious issue and the workflow is
completed normally from user's perspective.    The
HTTP-POST request results in a 404 error because
POST request is not accepted by Kibana's logout
end-point. This causes a non-trivial issue because
it renders an error page in user's browser. In
addition, some resources do not seem to be fully
cleaned up due to the error, e.g. the username
will be pre-filled when trying to login again
after the 404 error.    This PR solves both of the
above issues from ES side with a new
/_security/saml/complete_logout end-point. Changes
are still needed on Kibana side to relay the
messages.
",1435344,13688,344684,"Yang Wang","yang.wang@elastic.co","GitHub","noreply@github.com"
"2686","elastic/elasticsearch","3953de4c9885f085874b1e844b3e1c98a5c6a417",1,"2020-06-29 09:26:31+02:00","Introduce DataFrameAnalyticsConfig update API
(#58302)
",1437170,13707,345076,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2687","elastic/elasticsearch","676893a2632fa922fe33f170ef7730062c3792da",1,"2020-06-29 15:00:40-07:00","Merge mappings for composable index templates
(#58521)  This PR implements recursive mapping
merging for composable index templates.    When
creating an index, we perform the following:  *
Add each component template mapping in order,
merging each one in after the  last.  * Merge in
the index template mappings (if present).  * Merge
in the mappings on the index request itself (if
present).    Some principles:  * All 'structural'
changes are disallowed (but everything else is
fine). An  object mapper can never be changed
between `type: object` and `type: nested`. A
field mapper can never be changed to an object
mapper, and vice versa.  * Generally, each section
is merged recursively. This includes `object`
mappings, as well as root options like
`dynamic_templates` and `meta`. Once we  reach
'leaf components' like field definitions, they
always overwrite an  existing one instead of being
merged.    Relates to #53101.
",1437412,13709,345036,"Julie Tibshirani","julie.tibshirani@elastic.co","GitHub","noreply@github.com"
"2688","elastic/elasticsearch","5e345e115bbd62294a37fc647b5aa7a041cc7390",5,"2020-06-30 09:33:15+02:00","Add index block api (#58094)  Adds an API for
putting an index block in place, which also
ensures for write blocks that, once successfully
returning to  the user, all shards of the index
are properly accounting for the block, for example
that all in-flight writes to an index have  been
completed after adding the write block.    This
API allows coordinating more complex workflows,
where it is crucial that an index is no longer
receiving writes after  the API completes, useful
for example when marking an index as read-only
during an upgrade in order to reindex its
documents.
",1438368,13717,345306,"Yannick Welsch","yannick@welsch.lu","GitHub","noreply@github.com"
"2689","elastic/elasticsearch","dfa06240fc9d6f38d657c2f3fc132507f633d08a",2,"2020-06-30 13:06:15+02:00","Implement MSLE (MeanSquaredLogarithmicError)
evaluation metric for regression analysis (#58684)
",1438790,13723,345399,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2690","elastic/elasticsearch","83d6589b2ae4a4f8deb384cfebeda63cc2024846",1,"2020-07-01 08:04:45+01:00","Account for remaining recovery in disk allocator
(#58029)  Today the disk-based shard allocator
accounts for incoming shards by  subtracting the
estimated size of the incoming shard from the free
space on the  node. This is an overly conservative
estimate if the incoming shard has almost
finished its recovery since in that case it is
already consuming most of the  disk space it
needs.    This change adds to the shard stats a
measure of how much larger each store is  expected
to grow, computed from the ongoing recovery, and
uses this to account  for the disk usage of
incoming shards more accurately.
",1440700,13732,345543,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2691","elastic/elasticsearch","7daed3b8af5fce3b62e5f9fd9aae0b0b712d72d7",2,"2020-07-02 14:33:02+01:00","Pipeline Inference Aggregation (#58193)  Adds a
pipeline aggregation that loads a model and
performs inference on the   input aggregation
results.
",1442921,13758,345834,"David Kyle","david.kyle@elastic.co","GitHub","noreply@github.com"
"2692","elastic/elasticsearch","843c512e78212b0ba8ee106451af56ffb5e83d0c",2,"2020-07-02 16:19:27+02:00","Rename regression evaluation metrics to make the
names consistent with loss functions (#58887)
",1442830,13757,345799,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2693","elastic/elasticsearch","3ab3f48bd23f1e3ad2183bbc01f039090e793f3d",2,"2020-07-02 14:13:35-06:00","Add rolling upgrade tests for component and
composable templates (#58867)  This adds rolling
upgrade tests that component and composable
templates can be read from older  versions of the
cluster.    Relates to #58643
",1443429,13758,345836,"Lee Hinman","dakrone@users.noreply.github.com","GitHub","noreply@github.com"
"2694","elastic/elasticsearch","2217705a7ce821fa9ddfb44e4079320d098cb8cb",1,"2020-07-06 03:02:25+03:00","Map only specific type of OIDC Claims (#58524)
This commit changes our behavior in 2 ways:    -
When mapping claims to user properties (
principal, email, groups,  name), we only handle
string and array of string type. Previously  we
would fail to recognize an array of other types
and that would  cause failures when trying to cast
to String.  - When adding unmapped claims to the
user metadata, we only handle  string, number,
boolean and arrays of these. Previously, we would
fail to recognize an array of other types and that
would cause  failures when attempting to process
role mappings.    For user properties that are
inherently single valued, like
principal(username) we continue to support arrays
of strings where  we select the first one in case
this is being depended on by users  but we plan on
removing this leniency in the next major release.
",1445629,13769,346108,"Ioannis Kakavas","ioannis@elastic.co","GitHub","noreply@github.com"
"2695","elastic/elasticsearch","ea5df51b910bbfe41c914b12bfa1854648262573",1,"2020-07-06 18:31:08-04:00","Improve cardinality measure used to build aggs
(#56533)  This makes a `parentCardinality`
available to every `Aggregator`'s ctor  so it can
make intelligent choices about how it collects
bucket values.  This replaces
`collectsFromSingleBucket` and is similar to it
but:  1. It supports `NONE`, `ONE`, and `MANY`
values and is generally     extensible if we
decide we can use more precise counts.  2. It is
more accurate. `collectsFromSingleBucket` assumed
that all     sub-aggregations live under multi-
bucket aggregations. This is     normally true but
`parentCardinality` is properly carried forward
for single bucket aggregations like `filter` and
for multi-bucket     aggregations configured in
single-bucket for like `range` with a     single
range.    While I was touching every aggregation I
renamed `doCreateInternal` to  `createMapped`
because that seemed like a much better name and it
was  right there, next to the change I was already
making.    Relates to #56487
",1445985,13772,346318,"Nik Everett","nik9000@gmail.com","GitHub","noreply@github.com"
"2696","elastic/elasticsearch","793750e0992ca6b80a4921313185c050bb6936f6",2,"2020-07-07 11:14:25+02:00","Add the possibility to inject a custom
RecoveryState factory to IndexStorePlugin
implementations (#59038)  Add a custom factory for
recovery state into IndexStorePlugin that  allows
different implementors to provide its own
RecoveryState  implementation.
",1446279,13776,346351,"Francisco Fernández Castaño","francisco.fernandez.castano@gmail.com","GitHub","noreply@github.com"
"2697","elastic/elasticsearch","ef4cdb0303fd4578250073eea4c47e9737186fe3",1,"2020-07-07 15:51:26+05:18","Remove nodes with read-only filesystems (#52680)
Today we do not allow a node to start if its
filesystem is readonly, but  it is possible for a
filesystem to become readonly while the node is
running. We don't currently have any
infrastructure in place to make  sure that
Elasticsearch behaves well if this happens. A node
that cannot  write to disk may be poisonous to the
rest of the cluster.    With this commit we
periodically verify that nodes' filesystems are
writable. If a node fails these writability checks
then it is removed  from the cluster and prevented
from re-joining until the checks start  passing
again.    Closes #45286
",1447144,13781,346485,"Bukhtawar Khan","bukhtawar7152@gmail.com","GitHub","noreply@github.com"
"2698","elastic/elasticsearch","0d9c98a82353b088c782b6a04c44844e66137054",10,"2020-07-07 17:52:40+01:00","GET data stream API returns additional information
(#59128)  This adds the data stream's index
template, the configured ILM policy  (if any) and
the health status of the data stream to the GET
_data_stream  response.    Restoring a data stream
from a snapshot could install a data stream that
doesn't match any composable templates. This also
makes the `template`   field in the `GET
_data_stream` response optional.
",1447307,13781,346497,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2699","elastic/elasticsearch","cb6b05d12b97dd61da9f09d5b76fe19d4afef62f",1,"2020-07-08 09:41:47+02:00","Fix the timestamp field of a data stream to
@timestamp (#59076)  The commit makes the
following changes:  * The timestamp field of a
data stream definition in a composable    index
template can only be set to '@timestamp'.  *
Removed custom data stream timestamp field
validation and reuse the validation from
`TimestampFieldMapper` and    instead only check
that the _timestamp field mapping has been defined
on a backing index of a data stream.  * Moved code
that injects _timestamp meta field mapping from `M
etadataCreateIndexService#applyCreateIndexRequestW
ithV2Template58956(...)` method    to `MetadataInd
exTemplateService#collectMappings(...)` method.  *
Fixed a bug (#58956) that cases timestamp field
validation to be performed    for each template
and instead of the final mappings that is created.
* only apply _timestamp meta field if index is
created as part of a data stream or data stream
rollover,  this fixes a docs test, where a regular
index creation matches (logs-*) with a template
with a data stream definition.    Relates to
#58642  Relates to #53100  Closes #58956  Closes
#58583
",1447555,13782,346515,"Martijn van Groningen","martijn.v.groningen@gmail.com","GitHub","noreply@github.com"
"2700","elastic/elasticsearch","91c21b1ce646a52ffad44141247d7bcb558d2642",2,"2020-07-09 07:59:01-04:00","[ML] Perform test inference on java (#58877)
Since we are able to load the inference model  and
perform inference in java, we no longer need  to
rely on the analytics process to be performing
test inference on the docs that were not used for
training. The benefit is that we do not need to
send test docs and fit them in memory of the c++
process.    Co-authored-by: Dimitris Athanasiou
<dimitris@elastic.co>
",1449558,13799,346931,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2701","elastic/elasticsearch","da0249f6c2d4dd270e666efb76f6ea22af08143c",15,"2020-07-09 16:31:26+03:00","[ML] Data frame analytics max_num_threads setting
(#59254)  This adds a setting to data frame
analytics jobs called  `max_number_threads`. The
setting expects a positive integer.  When used the
user specifies the max number of threads that may
be used by the analysis. Note that the actual
number of threads  used is limited by the number
of processors on the node where  the job is
assigned. Also, the process may use a couple more
threads  for operational functionality that is not
the analysis itself.    This setting may also be
updated for a stopped job.    More threads may
reduce the time it takes to complete the job at
the cost  of using more CPU.
",1449886,13801,346961,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2702","elastic/elasticsearch","d333dacb4abb14a58b36f3108521547ee374a06a",20,"2020-07-10 15:19:08+02:00","Enable Fully Concurrent Snapshot Operations
(#56911)  Enables fully concurrent snapshot
operations:  * Snapshot create- and delete
operations can be started in any order  * Delete
operations wait for snapshot finalization to
finish, are batched as much as possible to improve
efficiency and once enqueued in the cluster state
prevent new snapshots from starting on data nodes
until executed     * We could be even more
concurrent here in a follow-up by interleaving
deletes and snapshots on a per-shard level. I
decided not to do this for now since it seemed not
worth the added complexity yet. Due to
batching+deduplicating of deletes the pain of
having a delete stuck behind a long -running
snapshot seemed manageable (dropped client
connections + resulting retries don't cause issues
due to deduplication of delete jobs, batching of
deletes allows enqueuing more and more deletes
even if a snapshot blocks for a long time that
will all be executed in essentially constant time
(due to bulk snapshot deletion, deleting multiple
snapshots is mostly about as fast as deleting a
single one))  * Snapshot creation is completely
concurrent across shards, but per shard snapshots
are linearized for each repository as are snapshot
finalizations    See updated JavaDoc and added
test cases for more details and illustration on
the functionality.    Some notes:    The queuing
of snapshot finalizations and deletes and the
related locking/synchronization is a little
awkward in this version but can be much simplified
with some refactoring.  The problem is that
snapshot finalizations resolve their listeners on
the `SNAPSHOT` pool while deletes resolve the
listener on the master update thread. With some
refactoring both of these could be moved to the
master update thread, effectively removing the
need for any synchronization around the
`SnapshotService` state. I didn't do this
refactoring here because it's a fairly large
change and not necessary for the functionality but
plan to do so in a follow-up.    This change
allows for completely removing any trickery around
synchronizing deletes and snapshots from SLM and
100% does away with SLM errors from collisions
between deletes and snapshots.    Snapshotting a
single index in parallel to a long running full
backup will execute without having to wait for the
long running backup as required by the ILM/SLM use
case of moving indices to ""snapshot tier"".
Finalizations are linearized but ordered according
to which snapshot saw all of its shards complete
first
",1450672,13796,347176,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2703","elastic/elasticsearch","b87bb86d88dc6031adfae7fc7d64969ba978215b",16,"2020-07-13 11:37:46-05:00","Adding indexing pressure stats to node stats API
(#59247)  We have recently added internal metrics
to monitor the amount of  indexing occurring on a
node. These metrics introduce back pressure to
indexing when memory utilization is too high. This
commit exposes these  stats through the node stats
API.
",1452752,13805,347332,"Tim Brooks","tim@uncontended.net","GitHub","noreply@github.com"
"2704","elastic/elasticsearch","dc91a3007007f16d7cd6d7045222ed545bee4f50",2,"2020-07-13 14:20:36-04:00","Move getPointReaderOrNull into AggregatorBase
(#58769)
",1453000,13811,347408,"Mark Tozzi","mark.tozzi@elastic.co","GitHub","noreply@github.com"
"2705","elastic/elasticsearch","0af410ad0b686af21f9a5cff25ceff2b56bf4863",6,"2020-07-13 16:43:11-04:00","Adds hard_bounds to histogram aggregations
(#59175)  * Adds hard_bounds to histogram
aggregations    Adds a hard_bounds parameter to
explicitly limit the buckets that a histogram  can
generate. This is especially useful in case of
open ended ranges that can  produce a very large
number of buckets.    Co-authored-by: Mark Tozzi
<mark.tozzi@gmail.com>
",1453463,13814,347522,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2706","elastic/elasticsearch","c0fc9d02724533fc022d3944c2d09044e9ac1af7",2,"2020-07-14 15:02:44+10:00","Allow null name when deserialising API key
document (#59485)  API keys can be created without
names using grant API key action. This is
considered as a bug (#59484). Since the feature
has already been released, we need to accomodate
existing keys that are created with null names.
This PR relaxes the parser logic so that a null
name is accepted.
",1453763,13817,347579,"Yang Wang","yang.wang@elastic.co","GitHub","noreply@github.com"
"2707","elastic/elasticsearch","4e72f43d62edfe52a934367ce9809b5efbcdb531",2,"2020-07-14 09:19:00+01:00","Composable templates: add a default mapping for
@timestamp (#59244)  This adds a low precendece
mapping for the `@timestamp` field with  type
`date`.  This will aid with the bootstrapping of
data streams as a timestamp  mapping can be
omitted when nanos precision is not needed.
",1453912,13817,347587,"Andrei Dan","andrei.dan@elastic.co","GitHub","noreply@github.com"
"2708","elastic/elasticsearch","3ab04457007ead28f6bda75f6094329e22f46dba",1,"2020-07-15 09:58:01+02:00","Use a dedicated thread pool for searchable
snapshot cache prewarming (#59313)  Since #58728
writing operations on searchable snapshot
directory cache files   are executed in an
asynchronous manner using a dedicated thread pool.
The   thread pool used is searchable_snapshots
which has been created to execute   prewarming
tasks.    Reusing the same thread pool wasn't a
good idea as it can lead to deadlock   situations.
One of these situation arose in a test failure
where the thread pool   was full of prewarming
tasks, all waiting for a cache file to be
accessible, while   the cache file was being
evicted by the cache service. But such an eviction
can only be processed when all read/write
operations on the cache file are   completed and
in this case the deadlock occurred because the
cache file was   actively being read by a
concurrent search which also won the privilege to
write the range of bytes in cache... and this
writing operation could never have   been
completed because of the prewarming tasks making
no progress and   filling up the thread pool.
This commit renames the searchable_snapshots
thread pool to
searchable_snapshots_cache_fetch_async. Assertions
are added to assert   that cache writes are
executed using this thread pool and to assert that
read   on cached index inputs are executed using a
different thread pool to avoid   potential
deadlock situations.    This commit also adds a
searchable_snapshots_cache_prewarming that is
used to execute prewarming tasks. It also converts
the existing cache prewarming   test into a more
complte integration test that creates multiple
searchable   snapshot indices concurrently with
randomized thread pool sizes, and verifies   that
all files have been correctly prewarmed.
",1457160,13841,348158,"Tanguy Leroux","tlrx.dev@gmail.com","GitHub","noreply@github.com"
"2709","elastic/elasticsearch","45ac012262a5fe2a1a44db6bbba3cea7e70bb42c",2,"2020-07-15 13:26:51+02:00","Cleanup some Serialization Code around Snapshots
(#59532)  A number of obvious possible
simplifications that also improve efficiency  in
some cases (better empty collection handling and
size hint use).  Also, added a shortcut for
writing and reading immutable open maps that  can
be used to dry up additional spots.
",1457281,13847,347993,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2710","elastic/elasticsearch","78d59c3e0d27e74b5eed9ce32b416790570a26d2",2,"2020-07-15 15:04:02+01:00","Validate snapshot UUID during restore (#59601)
Today when mounting a searchable snapshot we
obtain the snapshot/index  UUIDs and then assume
that these are the UUIDs used during the
subsequent restore. If you concurrently delete the
snapshot and replace  it with one with the same
name then this assumption is violated, with
chaotic consequences.    This commit introduces a
check that ensures that the snapshot UUID does
not change during the mount process. If the
snapshot remains in place  then the index UUID
necessarily does not change either.    Relates
#50999
",1457505,13848,348032,"David Turner","david.turner@elastic.co","GitHub","noreply@github.com"
"2711","elastic/elasticsearch","f72b893fd313810c4d6bf98585d64bc41958b976",10,"2020-07-17 08:45:46-04:00","Adding new `require_alias` option to indexing
requests (#58917)  This commit adds the
`require_alias` flag to requests that create new
documents.    This flag, when `true` prevents the
request from automatically creating an index.
Instead, the destination of the request MUST be an
alias.    When the flag is not set, or `false`,
the behavior defaults to the
`action.auto_create_index` settings.    This is
useful when an alias is required instead of a
concrete index.    closes https://github.com/elast
ic/elasticsearch/issues/55267
",1458129,13851,348138,"Benjamin Trent","ben.w.trent@gmail.com","GitHub","noreply@github.com"
"2712","elastic/elasticsearch","2a12dcf2e02bf287c0a1a03503f53d53ae086167",1,"2020-07-21 14:27:57+02:00","Rename binary_soft_classification evaluation to
outlier_detection (#59951)
",1457542,13854,348107,"Przemysław Witek","przemyslaw.witek@elastic.co","GitHub","noreply@github.com"
"2713","elastic/elasticsearch","785a91c1e3f9880f1d31a6665b1bb48f188df2d6",1,"2020-07-22 23:41:48+02:00","Optimize some Spots around Closing Resources
(#60049)  The single element `close` calls go
through a very inefficient path that includes
creating  a one element list.  `releaseOnce` is
only with a single non-null input in production in
two spots so no need for  varargs and any
complexity here.  `ReleasableBytesStreamOutput`
does not require any `releaseOnce` wrapping
because we already have  that kind of logic
implemented in
`org.elasticsearch.common.util.AbstractArray`
(which we were  wrapping here) already.
",1458066,13857,348211,"Armin Braun","me@obrown.io","GitHub","noreply@github.com"
"2714","elastic/elasticsearch","7bc6ba32b38843b4636084b590368f8c44e16162",8,"2020-07-27 12:22:02+03:00","[ML] DFA result processor should only skip rows
and model chunks on cancel (#60113)  When the job
is force-closed or shutting down due to a fatal
error we clean  up all cancellable job operations.
This includes cancelling the results processor.
However, this means that we might not persist
objects that are written from the  process like
stats, memory usage, etc.    In hindsight, we do
not gain from cancelling the results processor in
its  entirety. It makes more sense to skip row
results and model chunks but keep  stats and
instrumentation about the job as the latter may
contain useful information  to understand what
happened to the job.
",1458126,13862,348374,"Dimitris Athanasiou","dimitris@elastic.co","GitHub","noreply@github.com"
"2715","elastic/elasticsearch","20c5f7edffd5c613aabbc25b94c7e07a4a06dc3e",12,"2020-07-27 14:45:02-04:00","Add aggregation list to node info (#60074)  Adds a
full list of supported aggregations to the node
info API. This list  will be used in transform
tests and telemetry mapping tests that will be
added  as follow-up PRs.    Fixes #59774
",1458637,13871,348770,"Igor Motov","igor@motovs.org","GitHub","noreply@github.com"
"2716","elastic/elasticsearch","8a89d95372a910255479d0b05cd1f3f46e333c77",10,"2020-07-27 13:25:55-07:00","Add search `fields` parameter to support high-
level field retrieval. (#60100)  This feature adds
a new `fields` parameter to the search request,
which  consults both the document `_source` and
the mappings to fetch fields in a  consistent way.
The PR merges the `field-retrieval` feature
branch.    Addresses #49028 and #55363.
",1460161,13879,349094,"Julie Tibshirani","julie.tibshirani@elastic.co","GitHub","noreply@github.com"
"2717","eclipse-vertx/vert.x","9d7a1a2fcdd38a27ca2cab2952366dd783a7dfd4",37,"2015-10-26 23:04:28+01:00","annotate api with @Nullable
",51088,562,27573,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2718","eclipse-vertx/vert.x","febdc5b3608552580452312c49fa73f1ea69212d",4,"2016-02-19 21:41:08+01:00","Allow to plug a Context exception handler - fixes
#1216
",53713,582,28720,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2719","eclipse-vertx/vert.x","1cf160bd980bea09bcbcad282863c455e5a2bbff",2,"2016-02-08 17:15:12+01:00","Basic tests
",54658,588,28905,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2720","eclipse-vertx/vert.x","8d984f5dd9ceb207fb2bb043f46ae6f301b5e0c8",1,"2016-02-11 21:20:36+01:00","Upload handler
",54795,590,28955,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2721","eclipse-vertx/vert.x","2dd42947057250e7508ca159ba1d0c2ac23d4724",1,"2016-02-12 10:58:40+01:00","Factor request bodyHandler code as default
HttpServerRequest interface
",54857,590,28955,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2722","eclipse-vertx/vert.x","af09a7b4424afc897225bf6f61443ac76ad15ceb",3,"2016-02-19 11:51:51+01:00","Request header improvements
",55962,595,29137,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2723","eclipse-vertx/vert.x","d6673cbb94682fad353028e61b2c4e80b17eaaaa",1,"2016-03-05 10:06:44+01:00","Client push promise
",57977,602,29399,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2724","eclipse-vertx/vert.x","dbbe89663a556e924753043053e8d6fdb1fdfe6a",2,"2016-03-06 14:23:51+01:00","HttpConnection goaway / shutdown / close cleanups
",58370,605,29488,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2725","eclipse-vertx/vert.x","71f09e9154de1b4464e50fd45e4d03bb88a97699",1,"2016-03-14 09:38:25+01:00","Start implementation of NetSocket tunneling in
HTTP2
",59127,608,29581,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2726","eclipse-vertx/vert.x","0d404c7d48c738b6c87e2051ad2deeaac00f9173",1,"2016-03-14 18:44:56+01:00","Make http2 connection extend ConnectionBase
",59326,609,29546,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2727","eclipse-vertx/vert.x","ff45c875691ef734e228b99f2ea41ab35526cb6c",1,"2016-03-30 08:16:22+02:00","Add support for connection ping, some protocols
can use it (like grpc)
",61422,618,30372,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2728","eclipse-vertx/vert.x","4d39bd169b9ae28b43b78d3e97176f701f887af5",2,"2017-02-20 17:49:24+01:00","Add support for websocket text framing.  The
writeTextMessage method can be used to write a
single large text message as multiple websocket
frames.  The binaryMessageHandler or
textMessageHandler will receive multi-frame
messages as a single re-assembled buffer or
string.  The maximum size of re-assembled messages
can be specified with the maxWebsocketMessageSize
http option on both the server and client side.
Messages that are too large to re-assemble are
dropped and the exception handler is invoked with
an IllegalStateException.  Issue #1807 Signed-off-
by: rmelick <rmelick@cs.hmc.edu>
",73501,674,33922,"rmelick","rmelick@cs.hmc.edu","Julien Viet","julien@julienviet.com"
"2729","eclipse-vertx/vert.x","becb6e3afc3187ceff63267c776b256d0e415674",2,"2017-03-02 22:35:37+01:00","Rollback closeHandler change and new
HttpServerResponse endHandler to be notified when
the HttpServerResponse is disposed - fixes #1840
",73431,650,32855,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2730","eclipse-vertx/vert.x","e3eebd20db348ce2f0a875836562266eec3f5ee0",3,"2017-05-17 16:06:07+02:00","Move common code in Http1xConnectionBase and make
Http1xConnectionBase implement HttpConnection
interface
",77509,675,34060,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2731","eclipse-vertx/vert.x","f40b49894bc2abe18292e5e212feba0c21a6fb4e",1,"2017-08-30 21:59:02-05:00","Fix websocket ping response and add api methods to
handle ping-pong and adjust HttpConnection
ping/pong to align with websocket api.  Fixes
https://github.com/vert-x3/issues/issues/290
Signed-off-by: Devyn Goetsch
<devynmichellegoetsch@gmail.com>
",80282,692,34968,"Devyn Goetsch","devynmichellegoetsch@gmail.com","Devyn Goetsch","devynmichellegoetsch@gmail.com"
"2732","eclipse-vertx/vert.x","50d5faf359a8193d5790aefb8269b896d9fc2feb",3,"2018-03-31 11:03:46+02:00","Implement properly h2c upgrade - fixes #2362
",84579,700,32946,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2733","eclipse-vertx/vert.x","cd86a49d8fe623475e9b2b7dfff46e899854f2b1",1,"2018-11-04 12:16:11+01:00","Added a FakeStream that is useful for testing
purposes when a stream is needed (e.g testing
adapters)
",85485,671,27559,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2734","eclipse-vertx/vert.x","645f6d4d41e0301155501b1e287ac49d6e60573b",4,"2019-04-22 22:20:05+02:00","Add WriteStream asynchronous write and end methods
",89855,704,28953,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2735","eclipse-vertx/vert.x","d9cf8c016e088d755ebee070b33e05535623f361",15,"2019-06-13 16:40:05+02:00","Json Pointer implementation (#2898)  * Added Json
Pointer implementation    Signed-off-by:
slinkydeveloper <francescoguard@gmail.com>    *
Fixed docs typo    Signed-off-by: slinkydeveloper
<francescoguard@gmail.com>    * Added tracedQuery
to JsonPointer    Signed-off-by: slinkydeveloper
<francescoguard@gmail.com>    * Moved Json Pointer
docs and applied some changes from code review
Signed-off-by: slinkydeveloper
<francescoguard@gmail.com>    * Renamed build in
toString() and buildURI in toURI()    Signed-off-
by: slinkydeveloper <francescoguard@gmail.com>
* Did some doc changes    Signed-off-by:
slinkydeveloper <francescoguard@gmail.com>    *
Reworked the JsonPointer Javadoc    Signed-off-by:
slinkydeveloper <francescoguard@gmail.com>    *
Added JsonPointer#append(JsonPointer)    Signed-
off-by: slinkydeveloper <francescoguard@gmail.com>
* Removed generics    Signed-off-by:
slinkydeveloper <francescoguard@gmail.com>
",90878,726,29035,"Francesco Guardiani","francescoguard@gmail.com","Julien Viet","julien@julienviet.com"
"2736","eclipse-vertx/vert.x","a490f9b20aacf8b09a98cb2db51084214be0138b",7,"2019-03-18 15:09:13+01:00","Vert.x Core futurisation - this closes #2998
",91633,727,29492,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2737","eclipse-vertx/vert.x","27ad7bde6787da71c81ed69fe92caedffd30fd2d",7,"2019-07-31 14:23:21+02:00","HttpServer cookie support - see #3050
",92682,737,29771,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2738","eclipse-vertx/vert.x","37b437da9862cd14e774bdf9ab96e47a772cd674",4,"2019-10-29 21:14:09+01:00","Avoid using Promise.promise for DatagramSocket
",94050,739,30146,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2739","eclipse-vertx/vert.x","7fc8a7a93a52be4172d862c90322b5d2d2e3c0cd",14,"2019-11-17 11:34:14+01:00","Annotate EventBus body parameters with Nullable -
see #3199
",94180,740,30167,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2740","eclipse-vertx/vert.x","4f23ce260d0ba86283c5669b8e6f4e094805cd23",3,"2019-12-02 12:24:55+01:00","The `VertxHandler` does not handle anymore the
dispatch to the Vertx Context and instead the
connection has full control on the dispatch to the
application allowing each protocol to perform
application dispatch according to its concurrency.
Support worker contexts in the HTTP server
implementation for the HTTP/2 protocol: the
implementation uses message passing between the
connection event loop and the HTTP streams when
the stream are delivered on a worker context,
otherwise this will be a simple method call.
Metrics and tracing are now always reported from
the IO thread in all cases.  This fixes #3216 .
",94208,740,30205,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2741","eclipse-vertx/vert.x","3eb8e765cfeb455e96b010835321cb02126cbb93",3,"2019-12-04 14:41:19+01:00","Rename HttpServerRequestImpl ->
Http1xServerRequest and HttpServerResponseImpl ->
Http1xServerResponse
",94356,740,30213,"Julien Viet","julien@julienviet.com","Julien Viet","julien@julienviet.com"
"2742","eclipse-vertx/vert.x","9f741c80cc93e837df9bd417cbbc5f0ecde7fa51",2,"2020-04-11 23:12:10+03:00","Fixes #3368  Signed-off-by: Dimitris Zenios
<dimitris.zenios@gmail.com>
",96607,762,30980,"Dimitris Zenios","dimitris.zenios@gmail.com","Julien Viet","julien@julienviet.com"
"2743","eclipse-vertx/vert.x","8377be65e4cfa25e809eab3860186fe2dc590127",1,"2020-07-07 00:02:22+01:00","Add getSameSite, isHttpOnly and isSecure to Cookie
interface  Signed-off-by: Caleb Browne
<caleb@ploceus.co.uk>
",97531,784,31319,"Caleb Browne","caleb@ploceus.co.uk","Julien Viet","julien@julienviet.com"
"2744","halo-dev/halo","6577d062dc051778e3b658881712225916e982c7",24,"2019-02-19 21:59:53+08:00","Accomplish AbstractCrudService
",6239,137,4846,"johnniang","1340692778@qq.com","johnniang","1340692778@qq.com"
"2745","halo-dev/halo","f2c6ab43f0a10d23fd1f55e52568d3f160b8fe49",2,"2019-02-20 11:01:17+08:00","Refactor OptionsService
",6244,138,4662,"johnniang","1340692778@qq.com","johnniang","1340692778@qq.com"
"2746","halo-dev/halo","b66637a6c85c89db836344f15726dacaf1e3a8f3",2,"2019-02-20 18:01:15+08:00","Change method name from getNullableById to
getByIdOfNullable in CrudService
",6041,137,4669,"johnniang","1340692778@qq.com","johnniang","1340692778@qq.com"
"2747","halo-dev/halo","7a1c3234d9d796df75d405dd788db6be4d8ac232",11,"2019-03-04 13:30:20+08:00","Add BeanUtils, abstract input converter and output
converter
",6415,146,5039,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2748","halo-dev/halo","faa616d9928aefa25f05804585155826cf34741a",3,"2019-03-08 18:13:02+08:00","Add swagger support
",6848,157,5154,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2749","halo-dev/halo","d49a21501d4ebfe437f1c8b75859db5fef2a5dcd",2,"2019-03-11 16:51:21+08:00","Refactor InputConverter and OutputConverter
",7105,165,5201,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2750","halo-dev/halo","f7b90652ba8b07703d723671d5f1eee082d97eb4",10,"2019-03-14 21:33:06+08:00","Add security module
",3303,144,2525,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2751","halo-dev/halo","5771b42c251f727529e13386556fe7ed800dd20b",6,"2019-03-18 21:16:19+08:00","Add custom temporary store support
",4047,155,2839,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2752","halo-dev/halo","b547e0720bc959cdc7114e610173ec4c7898755e",33,"2019-03-18 21:36:43+08:00","Complete user login
",4162,157,3024,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2753","halo-dev/halo","68aa139670279e944ffa2b26e0f8004da816afad",5,"2019-03-18 22:02:43+08:00","Complate admin login service method
",4310,160,3257,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2754","halo-dev/halo","66a0bbac26e63135907539349a5262056acfc1c8",6,"2019-03-19 11:43:57+08:00","Deprecated JsonResult
",4331,160,3290,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2755","halo-dev/halo","6a823ddcde8fd652e303fed2aa18da26b6aad39d",14,"2019-03-19 23:16:14+08:00","Complete pageByStatus api
",4489,162,3415,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2756","halo-dev/halo","72a0e5e25501a8cbe7b3e7b1fff216a78318c539",5,"2019-03-20 23:28:44+08:00","Complete TagController#createTag api
",4786,174,3443,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2757","halo-dev/halo","2f15a34520fccb0668f69ddf2c95a9eddce1068a",2,"2019-03-21 10:55:11+08:00","Refactor CommonResultControllerAdvice
",4802,174,3448,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2758","halo-dev/halo","72eca3a5b5d23d5b25879dfe683489430c821058",3,"2019-03-21 14:42:39+08:00","Complete category tree view api
",5082,182,3625,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2759","halo-dev/halo","8d120e79273fe7fb3697165455766f750545e268",2,"2019-03-21 15:19:40+08:00","Complete category creation and enhance category
tree view api
",5134,183,3661,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2760","halo-dev/halo","f0651f8c37017bfb566581d2d641b4b7faaa4c5b",3,"2019-03-21 19:26:05+08:00","Complete post creation api
",5276,184,3729,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2761","halo-dev/halo","fc4beb24472d39a80e863a9df2558297a8076dc3",1,"2019-03-21 20:48:42+08:00","Create ContentTagController
",5326,185,3787,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2762","halo-dev/halo","f27f4f883351619079dfcecb93d957d1086d5e46",2,"2019-03-21 22:11:15+08:00","Enhance post creation api
",5478,187,3899,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2763","halo-dev/halo","7935ccd728874fe8b9037db58e35ead3967cd07f",14,"2019-03-21 23:47:52+08:00","Complete post getting api
",5608,188,3983,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2764","halo-dev/halo","1721bb4e15b5b3df9e664ad89965cfba428c22fa",26,"2019-03-22 11:11:24+08:00","Complete post removing api
",5675,189,4048,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2765","halo-dev/halo","a07bddcb7a42587c57f1a2c50e4c8dd93f486424",1,"2019-03-23 00:00:18+08:00","Abstract PostRepository for Post, Page and Journal
entities
",5954,203,4145,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2766","halo-dev/halo","ee2bc1c5ed1ced912fc713ece81acbcc6134a43c",2,"2019-03-25 13:18:09+08:00","Refactor BlogProperties enum
",6036,203,4200,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2767","halo-dev/halo","157689b0c295b6d204be326cc4f380a2e1a63ea8",4,"2019-03-26 11:08:04+08:00","Complete password update api and refactor user
create api
",6150,204,4165,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2768","halo-dev/halo","17e68daf7604e515d5ce80f57f5cf8a0ce337286",6,"2019-03-26 20:32:02+08:00","Complete file upload locally
",6409,213,4344,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2769","halo-dev/halo","e042d83baf509be075451b37da4813adfa80dd78",2,"2019-03-26 23:00:31+08:00","Refactor BlogProperties
",6430,214,4360,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2770","halo-dev/halo","3c56b60b958a15acf9e7600edb75f4c9e45ec41f",5,"2019-03-27 00:40:40+08:00","Complete uploadQnYun service
",6526,216,4405,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2771","halo-dev/halo","88e0bc3099a78e54014124053d5fab0f0cf37790",2,"2019-03-27 11:09:46+08:00","Build FileHandler basic structure
",6645,222,4467,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2772","halo-dev/halo","5e60db381905bdc0d810275c2368a365604df197",4,"2019-03-27 11:22:38+08:00","Replace FileService with FileHandlers
",6647,222,4448,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2773","halo-dev/halo","e48e0de6a432ea95ed525c795665a60efcae0686",12,"2019-03-27 13:28:58+08:00","Refactor FileHandler
",6755,222,4495,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2774","halo-dev/halo","b6f1a29951474f033db0aa66b26ee635503b397b",1,"2019-03-27 19:19:54+08:00","Complete local file deletion service
",6835,224,4524,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2775","halo-dev/halo","c37b6dd4f81e7865663e887096abb056e8ea816e",6,"2019-03-27 19:37:22+08:00","Complete attachment deletion permanently service
",6849,224,4547,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2776","halo-dev/halo","42032e3b784792d3705786daa4624435f0108460",15,"2019-03-28 00:03:48+08:00","Complete AdminAuthenticationFilter
",6737,230,4639,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2777","halo-dev/halo","68b78b9267f6a0d8d03ec9560bf928d30779c9c4",6,"2019-03-28 14:21:42+08:00","Refactor CacheStore
",6875,234,4691,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2778","halo-dev/halo","58bf3c1d2ac078ca2777672180e1e6408a6049ed",8,"2019-03-28 15:24:26+08:00","Add putIfAbsent method in CacheStore
",6880,234,4729,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2779","halo-dev/halo","11f28f11daf84f75b80dc3d29980a96d770beff3",2,"2019-03-28 19:52:16+08:00","Complete CacheLock support
",6986,238,4801,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2780","halo-dev/halo","ac4d50c7854f4384ade033f66e8d828b4384757a",2,"2019-03-29 00:33:22+08:00","Refactor ValidationUtils
",7006,238,4833,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2781","halo-dev/halo","fd593936344805cbc20d566ad726fcef3ae5e49f",4,"2019-03-29 15:08:38+08:00","Format error tip for banning
",7085,237,4847,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2782","halo-dev/halo","22d04a554bceb13b34175e46b0599846be873e50",1,"2019-03-29 21:39:35+08:00","Complete Smms file handler
",7228,238,4891,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2783","halo-dev/halo","3c70b83c1daa84bca087c7b4affb571e72579c41",4,"2019-04-02 17:43:27+08:00","Complete ArchiveController#listYearArchives
",7629,251,4926,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2784","halo-dev/halo","717e5b25b47c933ea7ddcdffeff01c526609daa9",1,"2019-04-03 02:11:19+08:00","Complete cc.ryanc.halo.web.controller.portal.api.T
agController.listPostsBy api
",7800,253,4990,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2785","halo-dev/halo","c2361bbae00063095b55cac02badba0be9d3427a",1,"2019-04-03 09:59:09+08:00","Complete cc.ryanc.halo.web.controller.portal.api.U
serController#getProfile
",7821,254,5007,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2786","halo-dev/halo","f36f101f08d6ee9780055f1ddd684f7ad8166160",4,"2019-04-03 11:40:45+08:00","Complete link creation api
",7949,256,5048,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2787","halo-dev/halo","65d42a1bdb2506fd521c1cfa4d0bfe7a1f87dc78",3,"2019-04-03 17:20:50+08:00","Complete menu creation api
",8127,262,5106,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2788","halo-dev/halo","c42203ac20a0e79a121d2b97ebc4cdc0d63e4d03",3,"2019-04-07 17:49:32+08:00","Êèê‰æõÂà†Èô§‰∏ªÈ¢òÁöÑÊé•Âè£
",8498,264,5192,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2789","halo-dev/halo","8860a3270e5bb56f6ee3a00b8a9db74b80c4520b",1,"2019-04-07 21:49:08+08:00","ËèúÂçïÊîØÊåÅÂ§öÁ∫ß
",8543,265,5233,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2790","halo-dev/halo","d35b6e7da32b9f1570caa81215d000fc7e19afb4",2,"2019-04-08 19:12:30+08:00","Refactor controllers and HaloConst
",8595,266,5279,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2791","halo-dev/halo","f87dc413e391d3e8bcbe77f66133eff06f4fab29",4,"2019-04-08 23:37:00+08:00","Remove source column of Option entity
",8631,269,5261,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2792","halo-dev/halo","468a0323b48978210c9e4430f26b6eef308c7820",1,"2019-04-09 01:18:52+08:00","Refactor and beauty codes
",8640,267,5305,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2793","halo-dev/halo","e098e44d58153e9bc852fe9565d884a32bca67a6",3,"2019-04-09 10:18:39+08:00","Enhance ThemeService
",8656,267,5325,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2794","halo-dev/halo","67409cb7929727452ce87c8490a9acc1c9b5a073",3,"2019-04-09 13:57:24+08:00","Refactor ThemeService
",8661,267,5300,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2795","halo-dev/halo","1b249de99e1b1feeaa87d3003f9475085c109fe2",2,"2019-04-09 19:49:00+08:00","Complete copy folder from jar file
",8713,269,5320,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2796","halo-dev/halo","a68431b09fc559ef380dfb3fd965e034c945b44a",12,"2019-04-09 20:44:26+08:00","Complete theme setting api
",8800,269,5352,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2797","halo-dev/halo","b8fd0e4841cea43fe183724deac138e335bd9d88",1,"2019-04-09 22:06:46+08:00","Add screenshots and isActivated into
ThemeProperties
",8849,269,5382,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2798","halo-dev/halo","8054b8f714b010fa705a3b7621acf507afef3a66",6,"2019-04-10 11:12:15+08:00","Complete yaml conversion test
",9129,272,5433,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2799","halo-dev/halo","e84025e9e3fff6e4c20d3dc911d23eb4633743db",2,"2019-04-10 11:53:22+08:00","Complete yaml theme configuration resolver
",9166,277,5503,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2800","halo-dev/halo","901a6a0456bccb069f2f415b8c8b3b677a3cefc8",3,"2019-04-10 11:58:40+08:00","Change Tab to Group
",9166,277,5503,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2801","halo-dev/halo","4b486ae0994e5395c649250e2e70c3fc1021720d",2,"2019-04-10 12:48:21+08:00","Perfect theme configuration resolve
",9195,278,5529,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2802","halo-dev/halo","3d8579cb139e54f4024e468aca5c6665365620af",4,"2019-04-10 16:52:40+08:00","Complete post query api
",9249,279,5560,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2803","halo-dev/halo","cad85c0bc77548b1163191eeee6b0f7a0deacdba",3,"2019-04-10 17:42:16+08:00","Extract pageListVoBy to convertToListVo in
PostService
",9257,279,5572,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2804","halo-dev/halo","dda7225b2dd847ca54d3523fd721beb549af737e",4,"2019-04-11 23:42:24+08:00","Refactor theme configuration and theme property
resolvers
",9318,283,5601,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2805","halo-dev/halo","001d9f88856e4a4f84c1ff158660997e79d512c4",2,"2019-04-16 20:01:20+08:00","Complates upload theme api.
",9371,283,5629,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2806","halo-dev/halo","54b4f9da6819274d854ddcfcbb1162946c45cc16",3,"2019-04-17 00:41:40+08:00","Refactor authentication filter
",9379,284,5638,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2807","halo-dev/halo","76b33100278bc4cf338e50f81257c3cd6a52a556",2,"2019-04-18 23:32:44+08:00","Add a common theme addition service
",9424,285,5679,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2808","halo-dev/halo","4a2ac0bf29a5466866b86b30064034eff1d2b743",2,"2019-04-19 00:47:58+08:00","Support attachment search.
",9425,286,5666,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2809","halo-dev/halo","3d17e0f786e2d7bc649c30ac10c417d36da4172e",6,"2019-04-19 08:31:05+08:00","Perfect FileUtils
",9499,286,5708,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2810","halo-dev/halo","ef417a2c14a49a063e5e69d54dfad57f36a12ca3",7,"2019-04-19 09:36:20+08:00","Add some useful features to FileUtils
",9532,286,5756,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2811","halo-dev/halo","5b59a8ab50d5a000af40f99ac96498b1d4e02a1d",4,"2019-04-19 13:57:28+08:00","Complete theme fetching feature
",9703,290,5845,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2812","halo-dev/halo","feeecc30b26d9696e451d1cd1d845f3ec6e6571f",2,"2019-04-20 16:10:27+08:00","Fix theme render build error
",9735,291,5861,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2813","halo-dev/halo","175739dbd417774319e61dfe97f1e2ac50e8e9da",2,"2019-04-20 21:20:25+08:00","Fix theme activation bug
",9802,293,5886,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2814","halo-dev/halo","5a7b02c4aa74be956118b3e49a2f8709abab226d",3,"2019-04-21 00:52:43+08:00","Convert theme setting with type
",9886,294,5918,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2815","halo-dev/halo","2292db3c598db173230e3b4151fe77badc948cec",1,"2019-04-21 11:41:31+08:00","Refactor content feed part
",9908,295,5944,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2816","halo-dev/halo","6fa03b0f211dcd556ad56f762d6efbc45b251afe",2,"2019-04-21 15:35:16+08:00","Complate category page and tag page.
",10094,297,6001,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2817","halo-dev/halo","4c2eaa1266d36becfad22918de0b646746a58943",3,"2019-04-21 15:55:31+08:00","Complete search controller.
",10151,298,6029,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2818","halo-dev/halo","27a8460ce1755df0ab3d3df520addc285e599c3a",3,"2019-04-21 22:52:32+08:00","Complete event queue publishing
",10368,303,6043,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2819","halo-dev/halo","36c8a21af4ff25c3a31d4e5466a35f9aeab79b5d",14,"2019-04-23 17:49:40+08:00","Rename output dto to dto
",10459,304,6113,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2820","halo-dev/halo","a5b016ef19f032a8f3f2f0ffae58b676d0c82999",6,"2019-04-23 18:39:03+08:00","Add category post count support
",10523,306,6141,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2821","halo-dev/halo","b2af6dcc0aa4a79ffbde9e6b3d1c7555b7138979",2,"2019-04-23 21:34:04+08:00","Complete structure of mailing on comment
",10613,312,6216,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2822","halo-dev/halo","1c9f561f2286316a19347fcdda4e44e950a54ffd",2,"2019-04-24 11:04:02+08:00","Refactor comment creation
",10616,313,6227,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2823","halo-dev/halo","02b6878aec171722c9153769ab88dbbb593e4a7e",1,"2019-04-24 14:36:20+08:00","Change options.yaml to settings.yaml.
",10649,320,6268,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2824","halo-dev/halo","e77d5449d0bbb6302b0f3171c900b060601ba269",27,"2019-04-24 21:39:11+08:00","Refactor repo, service related comment
",10986,335,6413,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2825","halo-dev/halo","06ad1bf82f90fc5df64e4449c2c3608cad510021",18,"2019-04-24 22:25:55+08:00","Refactor post repository
",10974,333,6448,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2826","halo-dev/halo","4a46132ffe25f10a2d3742909c6d876b79a364ea",20,"2019-04-24 23:14:44+08:00","Refactor post service
",11005,336,6500,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2827","halo-dev/halo","4695868fa7b742a4e5665dbfa0602834d07cb332",4,"2019-04-24 23:31:04+08:00","Refactor visit event
",11040,339,6491,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2828","halo-dev/halo","4819a9824f179cbf3c6e2022034b9f8b9891668a",2,"2019-04-25 02:21:46+08:00","Complete option default value and type feature
",11235,342,6544,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2829","halo-dev/halo","25a8d663dbe5aad7969e7f41cb9b0c5a20a9783f",6,"2019-04-25 10:57:15+08:00","Complete list latest journals and journal creation
api
",11330,344,6577,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2830","halo-dev/halo","f5ebfbe8dcfc2d0a5f8b0d24b332d783f3bf37db",4,"2019-04-25 11:26:57+08:00","Complete get journal page api
",11360,344,6601,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2831","halo-dev/halo","5f6a8ba79069478c7b5ca0451b94b3f4ee4ddcd5",9,"2019-04-25 14:03:36+08:00","Refactor journal entity, repository, service and
controller
",11364,344,6602,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2832","halo-dev/halo","388a37adfe6688f9c74d14af0e4c6cd759c31487",4,"2019-04-25 19:58:08+08:00","Enhance InputConverter
",11429,346,6637,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2833","halo-dev/halo","ef2c2b2759f31e4a0b8e9109e86465c1b8e67c06",2,"2019-04-25 19:59:19+08:00","Refactor related comment services
",11486,351,6667,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2834","halo-dev/halo","c9bfd11cd5320d6788b9545f41994d52175b5caa",1,"2019-04-25 20:10:07+08:00","Complete journal comment list api
",11499,350,6662,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2835","halo-dev/halo","c3985cf9c53d7da4106f6ba4199b940b976c55b6",4,"2019-04-25 20:34:02+08:00","Rename comment to post comment
",11488,350,6662,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2836","halo-dev/halo","64397753be01fbf1035815a1d2ae742d8d6cf7e5",16,"2019-04-25 22:02:40+08:00","Refactor post service and controller
",11571,353,6631,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2837","halo-dev/halo","16476f5a9bf79a8f454d428e1f70c9e137bc2e33",2,"2019-04-25 22:09:05+08:00","Refactor sheet service and contorller
",11561,353,6624,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2838","halo-dev/halo","da5240584320a34b7035afb43073c8d96c8a4a14",2,"2019-04-25 22:18:57+08:00","Remove useless post dtos
",11493,347,6584,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2839","halo-dev/halo","f541d470de00602c9bf5ed35f14c140aed1c40db",9,"2019-04-25 22:39:50+08:00","Change gallery to photo.
",11495,347,6584,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2840","halo-dev/halo","d7aebebf18bc10d07bd5ecf0c1ab71a7c1b9418b",4,"2019-04-25 23:13:13+08:00","Complete journal comment list api
",11591,349,6598,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2841","halo-dev/halo","1fd99967b59edfc25bac4aadf5da52d210d40b80",2,"2019-04-26 10:05:39+08:00","Refactor category dto conversion
",11809,353,6614,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2842","halo-dev/halo","72a2a0647bf956967495760b1a212f789619610e",4,"2019-04-26 10:13:27+08:00","Refactor tag dto conversion
",11821,353,6615,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2843","halo-dev/halo","c438d99d4783ec1070c2ee554c7d020ece8ee6fe",2,"2019-04-26 17:09:27+08:00","Complete migration handler
",12162,360,6702,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2844","halo-dev/halo","6f35efe90fbe762e2678f01e8fa7c0287dfb3f34",5,"2019-04-26 22:58:27+08:00","Support journal search.
",12191,361,6729,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2845","halo-dev/halo","0ded87246a690461b0764bb26ff74f90f741592f",3,"2019-04-28 15:17:11+08:00","Refactor user param
",12256,364,6743,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2846","halo-dev/halo","c0b3f8972714a3c36774e6077db85a18c565f3de",8,"2019-04-28 20:07:18+08:00","Enhance migration
",12299,364,6724,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2847","halo-dev/halo","0dbe543cff275dcbd7e2f9c59c64b06f7f016910",3,"2019-04-28 22:51:58+08:00","Refactor pageVosBy in BaseCommentService
",12296,363,6733,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2848","halo-dev/halo","63d072776ef24801d424c8adc25cb0a54071653c",2,"2019-04-29 00:45:03+08:00","Complete user update event
",12310,364,6765,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2849","halo-dev/halo","26c0192517dd95157ed0eba9d64569ac27036f25",12,"2019-04-29 02:59:17+08:00","Refactor option service
",12419,369,6795,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2850","halo-dev/halo","e580f4fa96ad523aa4de886ab4a8cc821b469e1d",2,"2019-04-29 10:48:25+08:00","Refactor partial AdminController
",12502,372,6852,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2851","halo-dev/halo","7c6708d5f40ce8ab1eca2328d25e20eea2751d6e",12,"2019-04-29 13:52:23+08:00","Complete token authentication
",12572,373,6888,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2852","halo-dev/halo","34e13f35c09a63373ed98ece6709b5fe13b665f0",1,"2019-04-29 16:19:13+08:00","Refactor PostTagDirective.
",12625,374,6903,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2853","halo-dev/halo","6ed9a927ac1ef8557e6121b22c295e87161d7811",2,"2019-04-29 17:06:14+08:00","Add add method in DateUtils
",12679,375,6910,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2854","halo-dev/halo","f5701691fb22d9f07c85c0ce2095ef2df89acc41",4,"2019-04-29 18:19:40+08:00","Complete refresh token logic
",12723,375,6926,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2855","halo-dev/halo","c06df35be944d3dc7bb3d03e752cc0ee25def85d",1,"2019-04-30 18:14:39+08:00","Refactor installation procedure
",12736,376,6939,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2856","halo-dev/halo","4c8d38ae0727e931008d20b39f10c1818c1eace8",5,"2019-05-01 21:45:40+08:00","Fix migration logical bug
",12796,376,6951,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2857","halo-dev/halo","cbabebff68c92af74be5740ae0414d9b901c2d5a",2,"2019-05-04 10:28:18+08:00","Refactor paging latest comments
",12832,376,6964,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2858","halo-dev/halo","8930f9d0d23056e3fe64432f1ae0c93e35bd2af8",2,"2019-05-04 10:35:34+08:00","Refactor some theme services
",12833,376,6966,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2859","halo-dev/halo","2a503d8550955e114a269265e96c591b73829c6a",1,"2019-05-04 23:54:39+08:00","Refactor AdminController.java.
",12815,376,6945,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2860","halo-dev/halo","f7d16e06a37ba8e1df0438116e53bba46663eb5c",4,"2019-05-06 17:01:59+08:00","Complete api authentication
",12920,378,6975,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2861","halo-dev/halo","d16a1f8de6b36ba88cebec95c4b00c8aa9b4757a",1,"2019-05-06 22:47:42+08:00","Remove resolved TODO tasks
",12947,377,6954,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2862","halo-dev/halo","0a3717e3940ae07dae1d9c83adf13b0870566bc9",1,"2019-05-07 00:01:15+08:00","Complate CommentEventListener.
",13011,377,6953,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2863","halo-dev/halo","8adf79432cc447130131bf317afba3adeee63d0e",2,"2019-05-07 09:51:17+08:00","Remove deprecated option methods
",13010,377,6952,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2864","halo-dev/halo","9d3f409fb67fc990a5b7ce6855088c6b651f696c",4,"2019-05-10 11:28:27+08:00","Fix fatal error while twice installations
",13035,375,6953,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2865","halo-dev/halo","384ada38d137b2d95f70163f48b0e6e007c2a6a4",1,"2019-05-11 23:59:36+08:00","Fix issue(#153)
",13038,375,6963,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2866","halo-dev/halo","2dcdcdc080008c6c1ee8792e6395be473e088ca2",4,"2019-05-14 23:42:21+08:00","Complete page top comments service
",13064,377,6959,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2867","halo-dev/halo","3ac59e2d294d500015d4a21a7c2cf25d285f8dbb",1,"2019-05-14 23:47:06+08:00","Fix page top comments bug
",13066,377,6968,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2868","halo-dev/halo","2e77999d200e58438cb76b1400be264eaaa1f0fb",11,"2019-05-16 00:16:43+08:00","Complete comment children list service
",13090,377,7001,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2869","halo-dev/halo","94ffcfa90ce53fbf933be8d0548a57c9b0e84c23",2,"2019-05-16 23:45:55+08:00","Refactor post create and update.
",13089,377,7002,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2870","halo-dev/halo","d61a4e5c9f5dd4dcd15759e4a862f0976d438511",4,"2019-05-17 09:43:36+08:00","Log sheet control.
",13109,377,7014,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2871","halo-dev/halo","30955e598f2799f0b4059bafb24b6537e3217ebd",1,"2019-05-20 22:36:41+08:00","Complete issue(#156)
",13181,378,7041,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2872","halo-dev/halo","b70bc9fe9e68e76f96d792c79db1858fa9780a8c",2,"2019-05-20 22:55:43+08:00","Change ctx to context.
",13199,378,7057,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2873","halo-dev/halo","93f146c2c178285fcc48bc6274cf3441f31a57ea",8,"2019-05-24 00:01:40+08:00","Support post and sheet export.
",13327,381,7097,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2874","halo-dev/halo","ee299d684c7792651a1d6de386451aba9e72e099",4,"2019-05-26 16:47:25+08:00","Complete markdown import service.
",13463,382,7169,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2875","halo-dev/halo","c0546440355e51429d9c8a5d1ddb09afe0f78f79",4,"2019-05-30 03:07:03+08:00","Enhance filter ip address service
",13521,382,7200,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2876","halo-dev/halo","084902c719b1201f83de1ea86ceb3ea3f02e3c1b",2,"2019-05-29 23:40:49+08:00","Support import post.
",13582,383,7213,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2877","halo-dev/halo","bf6b11eb2e15fff8322434629169a921410540ec",1,"2019-05-30 14:34:11+08:00","Fix NPE when importing markdown files
",13584,383,7213,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2878","halo-dev/halo","0c8955dfcf33e4dbeaf390180438e3b259519a3e",5,"2019-05-30 23:06:59+08:00","Complete theme updating
",13685,384,7246,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2879","halo-dev/halo","9b92867ea38b3d891ec48e916d581e993097edb7",2,"2019-06-03 13:47:25+08:00","Fix issue#177
",13701,385,7155,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2880","halo-dev/halo","46954ec610a27bf0145cf37bbd42e5246eb14a2d",1,"2019-06-07 10:50:08+08:00","Fix #185 Desensitize the old password while
logging
",13757,385,7163,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2881","halo-dev/halo","5b2591b5c33d1c2d93bc5c2116ac08470d38d0e7",2,"2019-06-10 20:02:58+08:00","Refactor runtime mode conversion
",13860,387,7185,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2882","halo-dev/halo","cad37f5f814ba7858847a699f71c65e2cfef3dad",2,"2019-06-12 20:40:20+08:00","Fix #198 failed to delete theme folder
",13867,388,7177,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2883","halo-dev/halo","000d1ff1f2f2a214e57c70d21df5195c911839fa",7,"2019-06-13 00:07:10+08:00","Complete halo admin updation feature
",13950,388,7202,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2884","halo-dev/halo","fffc1c9c7fbfb1f9b7a4dbb4bcaa9de72a6f19fe",2,"2019-06-18 21:48:15+08:00","Refactor common error render again
",14069,392,7233,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2885","halo-dev/halo","d42e4c2599f68bcf7ef05f3ffa9f0bca63df04db",2,"2019-06-30 12:52:34+08:00","Fixed #196
",14170,392,7166,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2886","halo-dev/halo","e67061cf74516846e09d53961220cb62541e4af1",17,"2019-07-09 20:25:14+08:00","Fixed the problem of not adding post status when
querying posts by category or tag.
",14314,393,7238,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2887","halo-dev/halo","12846a4c5db916cf14f8c57c2c47993614a8ef94",2,"2019-07-10 01:42:00+08:00","Fixed remove menu error.
",14326,393,7244,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2888","halo-dev/halo","b759380f758163e745b2884a2946e25c6b588f76",2,"2019-07-14 10:52:12+08:00","Set default parent id when delete category.
",14353,393,7264,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2889","halo-dev/halo","8e420914aa2420b922815e33474f3379c4e948c1",2,"2019-07-29 20:36:44+08:00","Add tags and categories for returning as content
post api requests
",14605,397,7351,"johnniang","johnniang@riseup.net","johnniang","johnniang@riseup.net"
"2890","halo-dev/halo","557b2865503c66c5866fba79d41d9eafba92c73d",9,"2019-08-04 16:42:59+08:00","Completed meta service.
",14803,412,7502,"ikaisec","ikaisec@gmail.com","ikaisec","ikaisec@gmail.com"
"2891","halo-dev/halo","912427d15919f827f9493c1ac077d823533151f7",8,"2019-08-17 17:11:10+08:00","Create api for update comment.
",14879,413,7541,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2892","halo-dev/halo","648becf1116327d4e8ba728ab519ae7f3e1769c6",2,"2019-08-22 22:03:48+08:00","Support update theme from new theme package.
",14913,413,7580,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2893","halo-dev/halo","46b10fb342044bca98842b31799212c2ca5223c6",3,"2019-08-28 08:04:54+08:00","Support menu team.
",14994,415,7626,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2894","halo-dev/halo","62975bfd6a78c06408d59bc6a376049d5c2e8a14",3,"2019-08-30 00:21:22+08:00","Optimize option saving
",15002,415,7636,"johnniang","johnniang@foxmail.com","johnniang","johnniang@foxmail.com"
"2895","halo-dev/halo","042e5af43d8499e699c96d0058cfce92e08122f1",4,"2019-09-05 17:10:17+08:00","Completed #208
",15139,418,7674,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2896","halo-dev/halo","65647104532609c86e72bc95cedb0e1b5ead6757",6,"2019-09-06 12:35:23+08:00","Create pageBy for journal service.
",15234,418,7718,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2897","halo-dev/halo","85013b9b1ec0f0668e8c0005b42186e409ecd518",7,"2019-09-11 20:50:23+08:00","Update readme.
",15335,418,7756,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2898","halo-dev/halo","7b8fc496046b73c32a020ca3030cc10b17b2d78f",33,"2019-10-19 20:02:28+08:00","Update dependencies.
",15378,419,7857,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2899","halo-dev/halo","fff323ee2c76264d8d36bb131a9d57045277ea5e",7,"2019-10-29 20:33:35+08:00","Refactor migrate api.
",16075,427,8032,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2900","halo-dev/halo","54e17acfc01295fd77ec5f5ddaba700677305592",1,"2019-11-12 20:13:51+08:00","solved #361
",16117,428,8057,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2901","halo-dev/halo","a041409ff7c0f87ad64237b440603eb1121eb36e",3,"2019-11-17 23:00:50+08:00","Accomplish zip utility
",16287,428,8106,"johnniang","johnniang@foxmail.com","johnniang","johnniang@foxmail.com"
"2902","halo-dev/halo","c7d88b1d1fe913b3c9cd6671c0d94843728c4bfa",4,"2019-11-18 02:37:36+08:00","Accomplish backup listing and deletion
",16394,429,8166,"johnniang","johnniang@foxmail.com","johnniang","johnniang@foxmail.com"
"2903","halo-dev/halo","cd2c3a17b37c2a71d96342fee5ee7ab05eed8d66",1,"2019-11-18 12:55:32+08:00","feat: unified formatted slug.
",16410,429,8172,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2904","halo-dev/halo","192890b5f2894418ae3d51a3ab6722e053309d38",6,"2019-11-29 21:53:36+08:00","feat: refactor PostTagDirective.
",16509,429,8248,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2905","halo-dev/halo","2153998a3276cf738f671f62f486e15b622cdb9e",16,"2019-11-30 01:29:01+08:00","Secure backup file downloading
",16612,429,8288,"johnniang","johnniang@foxmail.com","johnniang","johnniang@foxmail.com"
"2906","halo-dev/halo","c643e204f80f0b9118c6ff6eff0196c9f805c692",2,"2019-11-30 21:10:42+08:00","feat: add treeByTeam tag for menu.
",16694,429,8316,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2907","halo-dev/halo","7cc3c787cb742c13a813ca1372f17c4ab8b53b41",4,"2019-12-01 18:35:53+08:00","feat: support post metas
",16822,430,8348,"guqing","1484563614@qq.com","guqing","1484563614@qq.com"
"2908","halo-dev/halo","3676a77be2f18b1233c0eceaa059ba4ec5b7d78d",2,"2019-12-02 22:59:41+08:00","feat: create list_view for option api.
",16920,433,8456,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2909","halo-dev/halo","2ebea696a54bc89cffe0835690075441c46ac6d2",3,"2019-12-02 23:15:31+08:00","Add api: delete attachments permanently in batch
",16935,433,8462,"johnniang","johnniang@foxmail.com","johnniang","johnniang@foxmail.com"
"2910","halo-dev/halo","bc06a49651098dfeb20ee90a35bb719d34545f9d",8,"2019-12-03 12:35:23+08:00","feat: add some api for option.
",16960,433,8473,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2911","halo-dev/halo","040091194150699f9250e99c05079cd3e51ba1c9",2,"2019-12-07 20:37:40+08:00","feat: support preset post meta field.
",17081,437,8525,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2912","halo-dev/halo","bc411484d69cf06e2e047a3e0043e32bee3beb8d",12,"2019-12-10 13:04:10+08:00","feat: support sheet meta.
",17163,439,8562,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2913","halo-dev/halo","bd2eebf1cde45de7aa4416dfd063d22ef84b9afd",19,"2019-12-11 23:10:01+08:00","Add base post services
",17258,440,8591,"johnniang","johnniang@foxmail.com","johnniang","johnniang@foxmail.com"
"2914","halo-dev/halo","a55b469ae4e5cac8546734dd413d8f639a0d221b",2,"2019-12-11 23:14:12+08:00","feat: support remove in batch api for post.
",17271,440,8596,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2915","halo-dev/halo","f36f8aed8a6a80834f3196a77b704fcd86566dca",2,"2019-12-12 13:28:26+08:00","feat: support remove in batch api for comment.
",17286,440,8604,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2916","halo-dev/halo","68512988d0d21be157dc6bd4f292f0d48de36b2a",3,"2019-12-12 13:52:40+08:00","feat: add update status in batch api for post.
",17308,441,8617,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2917","halo-dev/halo","30eacdb3428fe1d6328cccddc5fa332e65c9db50",3,"2019-12-12 14:34:12+08:00","feat: add update status in batch api for comment.
",17337,442,8630,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2918","halo-dev/halo","6c677c94ef411009067edd6820c07da465c30fdf",2,"2019-12-12 15:14:05+08:00","feat: #424
",17356,442,8657,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2919","halo-dev/halo","26da4bd3c71f5e4ea4695767e5d16ba8543efa03",11,"2019-12-16 17:45:13+08:00","fix: sm.ms upload handler.
",17413,440,8686,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2920","halo-dev/halo","2b75762b764310120f9825abd6f2e57b54e2202d",2,"2019-12-18 17:41:15+08:00","feat: completed static storage api.
",17635,445,8755,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2921","halo-dev/halo","f5d957edc160a43ab6c3becc6352b26fe9557c53",2,"2019-12-19 17:49:07+08:00","refactor: refactor post preview and private post
view.
",17712,445,8760,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2922","halo-dev/halo","6941cd4c32de7b2dfa2466b501f3b9953937cbd9",1,"2019-12-20 22:06:03+08:00","feat: support markdown for journal.
",17764,445,8781,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2923","halo-dev/halo","f3763e80fc295f695f81500d6655e6dedcc77640",4,"2019-12-25 22:51:54+08:00","feat: support generate static pages.
",18220,448,8962,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2924","halo-dev/halo","83e87553b74697e862bd9a937c815900145e9b33",5,"2019-12-26 14:21:49+08:00","feat: add static deploy handlers.
",18447,457,9102,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2925","halo-dev/halo","c37f36f61edfad131008a9c6520387e32b32aa74",4,"2019-12-26 20:17:03+08:00","feat: support deploy static page in netlify.
",18561,457,9112,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2926","halo-dev/halo","305d9075310cb5312bd523f2f3e9f22790026b3c",13,"2019-12-28 21:57:51+08:00","feat: support replace url method.
",18619,457,9154,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2927","halo-dev/halo","eed14995aa2b49e3a62c6c0e843c343088557666",3,"2019-12-29 18:35:13+08:00","feat: add data process apis.
",18713,460,9186,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2928","halo-dev/halo","b9c2daa49bb08c0a09968082abb2b56ac9d3cd4f",14,"2019-12-29 20:45:18+08:00","fix: child comments could not be deleted.
",17814,445,8846,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2929","halo-dev/halo","79e66cd3c0da8a7c6f0d83f646409028ba20a306",3,"2020-01-01 21:24:28+08:00","style: add some comment.
",17850,443,9006,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2930","halo-dev/halo","d3ef9c4a7a909c281c3a15a574e7211b758afc9b",2,"2020-01-01 22:42:50+08:00","pref: remove useless code.
",17847,443,9017,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2931","halo-dev/halo","0ce380072e4f34f40dd23328d70cf2c8ce005883",2,"2020-01-02 23:52:52+08:00","fix:repeated updates of visits and private article
visits abnorm‚Ä¶ (#463)
",17885,443,8956,"Evan Wang","37762337+wangming2674@users.noreply.github.com","Ryan Wang","i@ryanc.cc"
"2932","halo-dev/halo","13ab09b79961ecb796b363afcc7a114aca0db24b",6,"2020-01-07 18:46:19+08:00","feat: custom permalink.
",18862,461,9403,"ruibaby","i@ryanc.cc","ruibaby","i@ryanc.cc"
"2933","halo-dev/halo","89086dd345d11ca5434df889af68edebbb22e630",4,"2020-01-16 18:00:33+08:00","fix: #489  * Update FUNDING.yml    * merge from
master    * feat: update page default sort &&
update the pre and next of posts    * feat:
adapter dev branch    * Feat: update
getAdjacentPosts return && update post ftl    *
fix: revert gradle-wrapper.jar    Co-authored-by:
Ryan Wang <i@ryanc.cc>  Co-authored-by: Jiahuan
Shen <shenjiahuan1999@hotmail.com>  Co-authored-
by: John Niang <johnniang@riseup.net>  Co-
authored-by: weiwensangsang
<weiwensangsang@users.noreply.github.com>  Co-
authored-by: Lei XinXin
<40338580+NGLSL@users.noreply.github.com>  Co-
authored-by: ÂØíÂ±± <ms915818993@163.com>  Co-
authored-by: IJKZEN <ijkzen@outlook.com>
",19432,472,9567,"leozhou","492753662@qq.com","Ryan Wang","i@ryanc.cc"
"2934","halo-dev/halo","078e3b3013a7c74d618eba375986e7f2fadcbaa1",3,"2020-02-11 19:57:07+08:00","Remove temp token mechanism
",19838,490,9787,"johnniang","johnniang@foxmail.com","johnniang","johnniang@foxmail.com"
"2935","halo-dev/halo","118aaf8ddc5b86119f841880f5f39d719343ddf9",7,"2020-02-12 21:10:00+08:00","Create one-time token mechanism
",19973,494,9852,"johnniang","johnniang@foxmail.com","johnniang","johnniang@foxmail.com"
"2936","halo-dev/halo","b7b11e2c8f061903c7fc571356b5f2eba839e522",16,"2020-02-21 21:21:28+08:00","Refactor email service and  remove oh-my-email
dependency (#584)  * Refactor email service    *
Remove oh-my-email dependency    * Add mail
dependency    * Provide connection test with email
server    * Enable send message asynchronously
* Make more friendly information.
",20284,501,9993,"John Niang","johnniang@riseup.net","GitHub","noreply@github.com"
"2937","halo-dev/halo","8f36a5d1240dc2dc5c82d3c9b0a211bda09d2dc3",2,"2020-02-23 23:34:20+08:00","fix: #549 (#587)  * fix: #549    * style: change
normalizeImageUrl to normalizeUrl.
",20298,501,9999,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2938","halo-dev/halo","c224b68fbcf1d3996154c4af9b9abf61b27ebbdb",2,"2020-02-24 23:42:54+08:00","feat: supports setting the post path type and path
suffix. (#563)  * feat: build full path for
category and tag.    * feat: build full path for
post.    * feat: build full path for sheet.    *
feat: build full path for post.    * feat: change
post url for rss sitemap pages.    * feat: support
set links/photos/journal page prefix.    * feat:
support set internal sheet's title.    * refactor:
build full path method.    * refactor: archives
post full path.    * feat: support
nextPageFullPath and prePageFullPath variable in
pageable pages.    * Update
CommentEventListener.java    * feat: make rss
formats more standard.    * feat: add some useful
freemarker variable.    * feat: add some useful
freemarker variable.    * feat: add some useful
freemarker variable.    * refactor: preview post
and password post.
",20678,501,10058,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2939","halo-dev/halo","e8db12a93dbab4e49bbff1ed136cc25357d4504d",2,"2020-02-25 00:24:51+08:00","Enable code style check available (#590)  * Add
check style plugin and remove halo code style    *
Reformat codes for whole project    * Resolve
conflicts due to provided checkstyle.xml
",20701,500,10049,"John Niang","johnniang@riseup.net","GitHub","noreply@github.com"
"2940","halo-dev/halo","f4a4d5f25005b4288d231a395025b307d00dd062",2,"2020-02-25 16:08:59+08:00","feat: #586 (#595)
",20727,500,10073,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2941","halo-dev/halo","136b1fb3b9cb1935313ed60a98f27d58b7f8abaf",50,"2020-02-25 19:44:30+08:00","refactor: change url field to slug in post. (#597)
",20750,500,10081,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2942","halo-dev/halo","949a3da3de2735ced9fc98db1105b966eaacacf0",3,"2020-02-27 16:23:22+08:00","refactor: installation data. (#600)
",20787,500,10082,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2943","halo-dev/halo","b23755a56856fd9043b216ec2007054678296bc2",2,"2020-03-01 13:52:27+08:00","feat: support paging of archive pages. (#608)  *
feat: support paging of archive pages.    * fix:
test case.
",20880,501,10118,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2944","halo-dev/halo","d82f3847c269f97aeccfaa14013c8f456f04030d",1,"2020-03-04 20:03:08+08:00","feat: support meta_keywords and meta_description
in every page. (#612)
",20939,500,10163,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2945","halo-dev/halo","fd251a472469dbe7fb47094c36af1476f3dd17c6",4,"2020-03-08 11:25:44+08:00","refactor: pagination tag. (#625)
",21051,503,10190,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2946","halo-dev/halo","a563c493e0c7a842c73ac67319fff766ceb1904c",10,"2020-03-11 13:49:37+08:00","refactor: metas variable. (#632)  * refactor:
metas variable.    * refactor: metas variable.
",21030,503,10181,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2947","halo-dev/halo","4bc8ad44daaed74ee484d37a0e0a5249c40eaaa0",2,"2020-03-17 13:14:15+08:00","feat: add data export and import api. (#672)  *
feat: add data export and import api.    *
refactor: data export and import api.
",20762,503,10139,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2948","halo-dev/halo","a77ebed29916eb71307ac9defedcf595c05e4412",13,"2020-03-17 20:22:51+08:00","refactor: backup service. (#687)  * refactor:
backup service.    * fix: test case error.
",20840,503,10164,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2949","halo-dev/halo","a70780c5df62b5da93a329dfa5c8bd41124e3020",12,"2020-03-18 21:44:46+08:00","style: code. (#692)
",20799,500,10298,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2950","halo-dev/halo","40f510f37192ae095832b8dbdb3175669629104c",1,"2020-03-20 20:34:51+08:00","refactor: independent sheet. (#697)
",20782,500,10294,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2951","halo-dev/halo","bc75275815e85ec261b1c499ef4761bb83f98efe",1,"2020-03-24 22:48:58+08:00","feat: provide static mapping feature (#710)  *
Provide static mapping feature    * feat: filter
inner mapping for static storage.
",20847,502,10315,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2952","halo-dev/halo","3a45b7a5ed101c76e13907b0017c7c48613f22a4",12,"2020-04-04 19:41:22+08:00","Support MFA-TOTP Auth (#745)  * add tfa utils  *
MFA check api completed  * adminController add
loginPreCheck api  * halo-admin test  * checkstyle
* add unit test  * reset MFA
",21406,510,10912,"bear","mx@rmbz.net","GitHub","noreply@github.com"
"2953","halo-dev/halo","4197ca33d81d78d112198d3089fa07b377d5420a",5,"2020-05-11 22:25:08+08:00","feat: Support Rename and Edit Staitc Files (#573)
(#819)  * Add rename API    * Add save API    *
Add unit test for rename API    * Fix an
indentation    * Add a space before '{'    * Add a
Param and some invalid checks    * Change comments
* Change test annotation    * Delete impl test
unit    * Add directory traversal check for static
file operations    Co-authored-by: Rokita
<35868425+Ruukita@users.noreply.github.com>
",21756,514,11019,"Yqhg8Nt4tuu","35868425+Holldean@users.noreply.github.com","GitHub","noreply@github.com"
"2954","halo-dev/halo","ecc97c207f5a9b9d27771bcc8a88a12360e3dd08",7,"2020-05-15 11:40:02+08:00","chore: remove useless code and dependencies.
(#845)  * chore: remove useless code and
dependencies.    * Update build.gradle
",20886,498,10734,"Ryan Wang","i@ryanc.cc","GitHub","noreply@github.com"
"2955","halo-dev/halo","ccea5ed6c3f349c4f1af038570e3c448f764c76b",59,"2020-06-08 10:26:32+08:00","Refactor theme sacn (#869)  * Provide theme
collector    * Refactor theme property scan    *
Refactor ThemePropertyScanner    * Rectify return
type    * Change activated theme fetch strategy
* Refactor theme service    * Reformat unexpected
codes    * Remove unused imports    Co-authored-
by: johnniang <johnniang@fastmail.com>
",21055,504,10780,"John Niang","johnniang@riseup.net","GitHub","noreply@github.com"
"2956","halo-dev/halo","2b99bd599fd20161fd5a5c9a021291ea5ea7fe2b",20,"2020-07-02 23:34:47+08:00","Fix issue #515 & #592 (#835)  * add release access
and branch access(#515)    * add release and
branch access(#515)    * always update to latest
release(#515)    * #515    * #515    * add
testcases(#515)    * fix 515    * fix 515    *
deal with connection refused    * disable disk
operation related test    * fix #592    * fix #515
& #592    * mockito test    * ignored network
related test    * resolve conflict
",21562,507,10876,"BigBang019","46477713+BigBang019@users.noreply.github.com","GitHub","noreply@github.com"
"2957","halo-dev/halo","8734e99445e2d12cf251c44dd74e0b2e30134c60",3,"2020-07-09 01:08:21+08:00","perfect: Link random order display,listByRandom
and listTeamsByRandom. (#952)
",21469,507,10987,"coortop","49756728+coortop@users.noreply.github.com","GitHub","noreply@github.com"
"2958","halo-dev/halo","7a71c85862fcc066a07de853205166535234f6c3",3,"2020-07-14 00:15:16+08:00","Add iterable objects validation (#970)
",21604,509,11019,"John Niang","johnniang@riseup.net","GitHub","noreply@github.com"
"2959","halo-dev/halo","50b19f8d3af259b0a24f5e6e761fdadac39e2231",10,"2020-07-14 00:57:24+08:00","pref: make some unnecessary error detail hide
(#962)
",21606,509,11019,"John Niang","johnniang@riseup.net","GitHub","noreply@github.com"
"2960","google/guava","dc5915eb1072c61ff2c3c704af4ae36b25f97b6c",2,"2009-09-15 19:50:59+00:00","Initial code dump: version 9.09.15    git-svn-id:
https://guava-libraries.googlecode.com/svn/trunk@2
8138a162-5c33-11de-8abc-d1c337b90d21
",4751,65,5609,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2961","google/guava","b492c5570480e6fa1162757ccec9012174dd662f",161,"2010-01-05 01:33:33+00:00","Copy in the Google Collections 1.0-final sources,
unmodified. Next step: refresh them with newer
versions.    git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@6
8138a162-5c33-11de-8abc-d1c337b90d21
",17051,196,17753,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2962","google/guava","bbab2ce3c162b244119bdc22a990d7b75fdef0af",13,"2010-01-05 05:07:47+00:00","ARGHGH, guess I was in the wrong directory when
submitting... amateurs...     git-svn-id:
https://guava-libraries.googlecode.com/svn/trunk@9
8138a162-5c33-11de-8abc-d1c337b90d21
",17608,200,18630,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2963","google/guava","ee071f342edd0f5240dc2667a11e717a3a9395e6",55,"2010-04-08 23:35:12+00:00","Huge new source dump for source release 3, which
will also become our first binary release shortly.
git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@12
8138a162-5c33-11de-8abc-d1c337b90d21
",18736,214,19470,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2964","google/guava","7ce09488d186e4f085046fb8d60578726ec429de",7,"2010-04-23 20:13:16+00:00","Big code drop in prep for cutting r04 next week.
Brand new MapMaker implementation (expiration
works way, way better).   Initial @Beta release:
Itera*s.get(3-arg)   Files.createParentDirs
ForwardingListenableFuture   ThreadFactoryBuilder
Initial release skipping @Beta:   Sets.powerSet
ForwardingBlockingQueue    Exiting @Beta:
Charsets   Objects.toStringHelper
Objects.firstNonNull   Strings
Suppliers.memoizeWithExpiration   Throwables
(except 2 methods)   ComparisonChain
ByteArrayData{In,Out}put   {In,Out}putSupplier
ForwardingFuture   UncheckedTimeoutException
Various miscellaneous improvements.    git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@25
8138a162-5c33-11de-8abc-d1c337b90d21
",38440,440,38954,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2965","google/guava","e031f621718dcd7a1baab0ba539e7495c23a735c",6,"2010-05-12 00:16:53+00:00","Source and javadoc update; this will likely be
r05. New: com.google.common.net! Fixed: MapMaker
bug (expired entries were appearing in collection
views)     git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@31
8138a162-5c33-11de-8abc-d1c337b90d21
",41631,459,40216,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2966","google/guava","5e083b830a3893f74e75acaf4eec50068b6e3b39",1,"2010-06-04 18:29:29+00:00","Updates.    git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@43
8138a162-5c33-11de-8abc-d1c337b90d21
",22578,237,20542,"dbentley@google.com","dbentley@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","dbentley@google.com","dbentley@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2967","google/guava","97963a74d9102aefc1613738cc7c218fee2e03f8",1,"2010-07-27 20:45:37+00:00","Latest code dump.  Revision created by MOE tool
push_codebase. MOE_MIGRATION=   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@68
8138a162-5c33-11de-8abc-d1c337b90d21
",22944,239,20826,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2968","google/guava","c4ec873e2c33a5c059d3a173587c7715f4deae1f",40,"2010-08-05 00:38:25+00:00","GWT serialization stuff. Add Table classes. Minor
cleanups.  Revision created by MOE tool
push_codebase. MOE_MIGRATION=87009   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@74
8138a162-5c33-11de-8abc-d1c337b90d21
",32328,359,28699,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2969","google/guava","c74890efa59b8254d879c37803ddc888b75c3ad5",5,"2010-08-31 23:46:58+00:00","Next batch of pent-up fixes.  Visible changes: -
Add ImmutableSortedSet.copyOf(Collection) which is
safe for concurrent   modification. - Make
ImmutableSet.copyOf(Collection) public. - Various
Futures javadoc improvements (also use <V> and <X>
over <T> and <E>). - Revamp javadoc for Function,
Predicate and related classes. Highlight the
issue about consistency with equals, as this
problem has been noticed with   utilities like
Sets.filter() (issue 363).  Less-visible changes:
- Add a few missing @Nullable annoations. - In
Iterables.concat impl, create an
Iterator<Iterator> directly rather than via
transform().  Revision created by MOE tool
push_codebase. MOE_MIGRATION=   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@97
8138a162-5c33-11de-8abc-d1c337b90d21
",32624,361,29152,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2970","google/guava","5cffe4f4d1dd5a647bc34fb29e62a16e9321a833",4,"2010-09-03 15:30:30+00:00","Recognize hosts like ""www.nhs.uk"" as valid (since
they are). This is probably not the final word on
this problem.  Revision created by MOE tool
push_codebase. MOE_MIGRATION=206002   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@109
8138a162-5c33-11de-8abc-d1c337b90d21
",33015,363,29515,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2971","google/guava","3291ead520514ebaa8bd19f65074aaa9a93cdd7f",3,"2010-09-08 17:38:13+00:00","Update ToStringHelper to do what users expect with
Class<?> objects.  This addresses bug 381.  Add
ImmutableList.reverse().  Revision created by MOE
tool push_codebase. MOE_MIGRATION=211340   git-
svn-id: https://guava-
libraries.googlecode.com/svn/trunk@111
8138a162-5c33-11de-8abc-d1c337b90d21
",33205,364,29732,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2972","google/guava","e899c1158b140d6b1dc845dbc16ab9bb04747a2c",11,"2010-09-14 15:31:51+00:00","Provide default implementations of methods as
protected methods in
Forwarding{Collection,List,Set}.  Add
Lists.reverse() (@Beta).  Rework
ImmutableSortedMap to be backed by an
ImmutableList.  Minor internal style fixes.
Revision created by MOE tool push_codebase.
MOE_MIGRATION=218295   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@113
8138a162-5c33-11de-8abc-d1c337b90d21
",33516,365,30090,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2973","google/guava","4583e8bd8b7eac0e3fbef41d341d57ef5a925c5d",21,"2010-09-14 20:41:19+00:00","Lists.charactersOf(CharSequence)  Fix
RegularImmutableSortedSet.containsAll to handle
sets with the same comparator, but different
element types.  Ordering needed @Nullables on a
few methods (issue 346).  Revision created by MOE
tool push_codebase. MOE_MIGRATION=219055   git-
svn-id: https://guava-
libraries.googlecode.com/svn/trunk@115
8138a162-5c33-11de-8abc-d1c337b90d21
",33623,365,30108,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2974","google/guava","9fc278e12300128c14757877fe81a7d0d47808d1",4,"2010-09-14 23:15:15+00:00","Provide default implementations for various
methods for ForwardingMultiset.  Fix issue 411,
NPE in Equivalences.nullAwareEquals().hash(null).
Minor style fixes.  Revision created by MOE tool
push_codebase. MOE_MIGRATION=216777   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@116
8138a162-5c33-11de-8abc-d1c337b90d21
",33753,366,30289,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2975","google/guava","e3bc0703d0a123ab5d3d2edf4124a14c8b3ba235",2,"2010-09-22 16:40:23+00:00","Forward get call on chained future to underlying
input future.  Provide default implementations of
many methods for ForwardingSortedSet.  Improved
documentation and standardClear method for
ForwardingMultiset.   Revision created by MOE tool
push_codebase. MOE_MIGRATION=240546   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@125
8138a162-5c33-11de-8abc-d1c337b90d21
",33896,368,30484,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2976","google/guava","9773a7573adcb2baf9459966ae9a8fddb47327e4",8,"2010-09-22 18:53:27+00:00","Provide default implementations for various
methods in ForwardingMap and ForwardingSortedMap.
Specify in Interners javadoc that they don't
consume permgen, which is one of the advantages of
using them (for strings).  Revision created by MOE
tool push_codebase. MOE_MIGRATION=237923   git-
svn-id: https://guava-
libraries.googlecode.com/svn/trunk@126
8138a162-5c33-11de-8abc-d1c337b90d21
",34166,368,30758,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2977","google/guava","6ccbb455a8549c95eca3469a165fe02c72b6bc91",2,"2010-10-12 20:43:03+00:00","Batch of 18 days' worth of changes, which I should
be itemizing (sorry).    git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@136
8138a162-5c33-11de-8abc-d1c337b90d21
",34703,379,31369,"kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","kevinb@google.com","kevinb@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2978","google/guava","39fbaad1df64ba579bc41031dfbde99e5f4ba1d4",1,"2011-02-08 16:20:05+00:00","- added Equivalences.pairwise() -       cleanup
failed MapMaker computes with invalidateValue
instead of racy removeEntry -       detect
recursive MapMaker computation and fail fast
rather than silently deadlocking -       send
MapMaker notifications after unlocking related to
computaiton   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@198
8138a162-5c33-11de-8abc-d1c337b90d21
",35692,379,32338,"fry@google.com","fry@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","fry@google.com","fry@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2979","google/guava","036ebbac7132b8ae7156a7939d77578f668b3c35",1,"2011-03-19 03:38:17+00:00","- Make AbstractService's Futures implement
ListenableFuture by reimplementing the custom
Transition class on top of
AbstractListenableFuture. - Remove
asciiHtmlEscaper, replaced with
Html.htmlContentEscaper. - Make Service.start()
and stop() return a ListenableFuture. - Eliminate
the distinction between Range and DiscreteRange
and move operations that used to live in
DiscreteRange into ContiguousSet. - Preserve
strict/lenient validation when deriving IDN
instances from other IDN instances. No test
changes yet; wanted to get feedback on the
approach first. - Add a deprecated version of
Ranges.integers() and Ranges.longs() to
temporarily fix builds. - MapMaker:         -
containsValue should fail on collected key
- refine expiration javadocs         - structure
all reads similarly, documenting more assumptions
- more white-box tests - Use constants in
UriEscapers instead of PercentEscaper, deprecating
the latter. - Make Javadoc (and occasionally
FindBugs) happier. - Rename package.html files to
package-info.html, which are preferred as for JDK
5 (see `man javadoc`). - Avoid stack overflow. -
Make InternetDomainName lenient validation a
little less lenient. - Remove all usages of
Ranges.longs() and Ranges.integers().  Revision
created by MOE tool push_codebase.
MOE_MIGRATION=946   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@262
8138a162-5c33-11de-8abc-d1c337b90d21
",37484,383,32892,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2980","google/guava","e918d249a188f3ca45879729b764b9cbed379205",1,"2011-04-12 18:23:44+00:00","sync new changes  Revision created by MOE tool
push_codebase. MOE_MIGRATION=1357   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@301
8138a162-5c33-11de-8abc-d1c337b90d21
",37642,384,33100,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2981","google/guava","8bd124ef4b414552fcdc6ba7a52aa677c60f6fee",2,"2011-04-22 14:35:06+00:00","new Beta additions for r10  Revision created by
MOE tool push_codebase. MOE_MIGRATION=1530   git-
svn-id: https://guava-
libraries.googlecode.com/svn/trunk@343
8138a162-5c33-11de-8abc-d1c337b90d21
",38282,392,33806,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2982","google/guava","ef80c224861e3a676e2b6545a68781053b549ed5",6,"2011-05-06 11:09:21+00:00","Turn Equivalence to abstract class.  Revision
created by MOE tool push_codebase.
MOE_MIGRATION=1777   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@389
8138a162-5c33-11de-8abc-d1c337b90d21
",39142,401,34496,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2983","google/guava","a6339e3b12f563a1c1129b9fafc87a830a17b493",2,"2011-05-11 22:23:22+00:00","Add Functions.forSupplier(Supplier).  Revision
created by MOE tool push_codebase.
MOE_MIGRATION=1834   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@395
8138a162-5c33-11de-8abc-d1c337b90d21
",39249,399,34500,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2984","google/guava","6981740800b04aa5df81f3d80ae561953e7b1e56",4,"2011-05-11 22:24:42+00:00","Improvements to Optional: or/or/orNull methods.
Revision created by MOE tool push_codebase.
MOE_MIGRATION=1835   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@396
8138a162-5c33-11de-8abc-d1c337b90d21
",39286,399,34508,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2985","google/guava","177a182b35f8dfcf9cbeea8f5c7c912285e33458",1,"2011-05-25 02:02:31+00:00","Warnings cleanup.  Revision created by MOE tool
push_codebase. MOE_MIGRATION=2005   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@430
8138a162-5c33-11de-8abc-d1c337b90d21
",40045,413,35418,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2986","google/guava","816331252820d2b52cf1ac22fd2b1180ae6f59ee",4,"2011-05-31 12:54:16+00:00","Another warnings cleanup  Revision created by MOE
tool push_codebase. MOE_MIGRATION=2088   git-svn-
id: https://guava-
libraries.googlecode.com/svn/trunk@438
8138a162-5c33-11de-8abc-d1c337b90d21
",40074,415,35488,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2987","google/guava","2f4cae379dcc3db3437b78046b1ad0513a52791f",1,"2011-06-22 14:14:59+00:00","Add skeleton ElementSet and EntrySet
implementations to Multisets  Revision created by
MOE tool push_codebase. MOE_MIGRATION=2353   git-
svn-id: https://guava-
libraries.googlecode.com/svn/trunk@480
8138a162-5c33-11de-8abc-d1c337b90d21
",40339,416,36031,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2988","google/guava","580538910fac252b1d308d8ac6d2bf08e774673f",1,"2011-06-22 15:20:41+00:00","Refactor Maps.valuesImpl, entrySetImpl, and
keySetImpl into skeleton abstract classes
Revision created by MOE tool push_codebase.
MOE_MIGRATION=2355   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@482
8138a162-5c33-11de-8abc-d1c337b90d21
",40253,416,36034,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2989","google/guava","d1cd105198f2e40eb43ceed869edf294e0a6d726",4,"2011-06-22 16:44:52+00:00","Refactor ImmutableMultiset so that all of its
implementation details are in
RegularImmutableMultiset.  Revision created by MOE
tool push_codebase. MOE_MIGRATION=2358   git-svn-
id: https://guava-
libraries.googlecode.com/svn/trunk@485
8138a162-5c33-11de-8abc-d1c337b90d21
",40144,418,35952,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2990","google/guava","9413cf4a7bb88c5464a5a00deb853d0931c7d267",5,"2011-06-24 23:27:37+00:00","TreeBasedTable.row() returns a SortedMap  Revision
created by MOE tool push_codebase.
MOE_MIGRATION=2395   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@495
8138a162-5c33-11de-8abc-d1c337b90d21
",40289,419,35971,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2991","google/guava","d54d130fb1cbdc405e78adfc65339b8a3b6f26b4",6,"2011-06-30 21:01:24+00:00","Add Keys, Values, and Entries skeleton
implementations to Multimaps.  Revision created by
MOE tool push_codebase. MOE_MIGRATION=2470   git-
svn-id: https://guava-
libraries.googlecode.com/svn/trunk@512
8138a162-5c33-11de-8abc-d1c337b90d21
",43159,424,36985,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2992","google/guava","8fefc2db7942c08628b1a17d7680209ca650c18c",1,"2011-07-06 17:34:57+00:00","Some findbugs annotating  Revision created by MOE
tool push_codebase. MOE_MIGRATION=2492   git-svn-
id: https://guava-
libraries.googlecode.com/svn/trunk@515
8138a162-5c33-11de-8abc-d1c337b90d21
",43191,424,36981,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2993","google/guava","a7493e579b9d4febd01bbc2f856fa1186280acce",6,"2011-07-11 22:42:46+00:00","Promotes ContiguousSet to part of the public Range
api.  Revision created by MOE tool push_codebase.
MOE_MIGRATION=2549   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@523
8138a162-5c33-11de-8abc-d1c337b90d21
",43377,427,37143,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2994","google/guava","b6b9d05351c32cb9d8f52227c4ce6cdc52749ef7",1,"2011-07-25 16:20:08+00:00","release Atomics  Revision created by MOE tool
push_codebase. MOE_MIGRATION=2704   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@551
8138a162-5c33-11de-8abc-d1c337b90d21
",43757,440,38077,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2995","google/guava","bf3b770ff9f808b4b773ebe1961ea6ba1bab2cdc",11,"2011-07-27 19:44:50+00:00","Some additional release 10 tweaking.   Revision
created by MOE tool push_codebase.
MOE_MIGRATION=2743   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@565
8138a162-5c33-11de-8abc-d1c337b90d21
",44807,451,38944,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2996","google/guava","13ac2cd2e2deeee5d43255885076ee56853793ee",1,"2011-07-27 20:18:47+00:00","Add BSTRangeOps and GeneralRange.  GeneralRange is
a package-private implementation of an interval
with any desired comparator, and BSTRangeOps
provides operations on ranges within binary search
trees.  Revision created by MOE tool
push_codebase. MOE_MIGRATION=2746   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@568
8138a162-5c33-11de-8abc-d1c337b90d21
",45034,453,39012,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2997","google/guava","de78035826ac131e562d025a87d61fdb36c648ae",5,"2011-07-27 22:15:25+00:00","move EquivalenceWrapper to Equivalence.Wrapper
Revision created by MOE tool push_codebase.
MOE_MIGRATION=2754   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@576
8138a162-5c33-11de-8abc-d1c337b90d21
",45204,454,39063,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2998","google/guava","2b6570d8a552fcfdbff387de51bb59d764e6eaf4",1,"2011-07-27 22:17:12+00:00","- document immutablility of PatternFilenameFilter
- PatternFilenameFilter implements FileFilter -
FileBackedOutputStream javadoc fix   Revision
created by MOE tool push_codebase.
MOE_MIGRATION=2755   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@577
8138a162-5c33-11de-8abc-d1c337b90d21
",45205,454,39065,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"2999","google/guava","91868c0f611e7e122738585cc9086cabff994488",3,"2011-08-01 17:57:53+00:00","Add protected equivalentImpl() and hashImpl() to
Equivalence.  Revision created by MOE tool
push_codebase. MOE_MIGRATION=2843   git-svn-id:
https://guava-
libraries.googlecode.com/svn/trunk@592
8138a162-5c33-11de-8abc-d1c337b90d21
",45345,454,39150,"guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21","guava.mirrorbot@gmail.com","guava.mirrorbot@gmail.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"3000","google/guava","0ae2d4fe60720233283579aea8c325bde5d60a6f",1,"2011-08-12 12:51:04+00:00","massive manual sync   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@640
8138a162-5c33-11de-8abc-d1c337b90d21
",54695,600,44414,"fry@google.com","fry@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","fry@google.com","fry@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"3001","google/guava","4fbef9f220a86423f6ebc131c06bac5c3bb5e731",5,"2011-08-15 21:23:49+00:00","manual sync   git-svn-id: https://guava-
libraries.googlecode.com/svn/trunk@642
8138a162-5c33-11de-8abc-d1c337b90d21
",54826,602,44495,"fry@google.com","fry@google.com@8138a162-5c33-11de-8abc-d1c337b90d21","fry@google.com","fry@google.com@8138a162-5c33-11de-8abc-d1c337b90d21"
"3002","google/guava","5560bc10e7472f94e8f50831eb0907a35628e725",2,"2011-08-17 11:14:44-04:00","manual git sync
",55852,611,45078,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3003","google/guava","6923b5fac0feb7005429d0b24be93b91685f9637",1,"2011-08-18 10:23:09-04:00","manual sync
",55912,611,45003,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3004","google/guava","956d3d3a40c6148de35957b1d0d4d8b268ba1ee6",22,"2011-08-29 18:55:45-04:00","manual sync
",98212,867,53356,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3005","google/guava","7d537203053ef3fdd18dbf0a4f3273e44bc977c4",1,"2011-09-16 13:52:50-04:00","Move SortedMaps.difference to Maps
",99118,876,54329,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3006","google/guava","ad738e396e084c7068bcb17d21a169ba08bb1209",15,"2011-09-16 14:02:47-04:00","Allow nulls in GeneralRange.
",99136,876,54329,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3007","google/guava","550c8c54f190cc722c46b0b9ddd7b3dc0e58e8e3",1,"2011-09-19 21:47:09-04:00","Drop in SortedTreeMultiset in place of
TreeMultiset.
",99523,873,54256,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3008","google/guava","b00fc801c438f40a9f116a2f85517944ae601f07",8,"2011-10-03 10:34:54-04:00","A round of promotions/deletions/updates for Guava
11.0. Try to minimize use of MOE: magic somewhat.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=24279246
",104342,900,55745,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3009","google/guava","8124eb561b979c5d4300f5694f8871d1d7a5619e",3,"2011-10-13 10:51:28-04:00","Initial release of the escapers into Guava.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=24623640
",107586,932,58225,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3010","google/guava","1435b80485acc907e218d53068f41ff6dd95f8fa",42,"2011-10-14 10:10:48-04:00","Run common.testing tests under GWT GWT-enable a
few other classes that are trivial to GWT-enable.
Open-source the common.testing tests.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=24640713
",108568,940,58501,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3011","google/guava","99091e882f9c6985315f9498b2125af9141af431",7,"2011-10-24 09:28:06-04:00","Introduce Tables.unmodifiable(RowSorted)Table.
From Louis: http://codereview.appspot.com/5266049/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=24846124
",109713,942,58862,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3012","google/guava","77f56b0a3f6b34790c0ffe9830cbf591ff0c5752",13,"2011-10-24 09:29:42-04:00","rename CustomConcurrentHashMap to
MapMakerInternalMap rename LocalCacheAsMap to
LocalCacheInternalMap ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=24846402
",109713,942,58862,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3013","google/guava","75ac5fd70fb316fcdcf9428a5d763d8db4fbe744",28,"2011-10-24 09:31:14-04:00","move LocalCache into LocalCacheInternalMap, then
rename LocalCacheInternalMap to LocalCache
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=24848838
",109708,941,58842,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3014","google/guava","aac333b616c49840a060f600fed3a8db49251167",4,"2011-10-26 09:38:33-04:00","add Cache.getIfPresent, Cache.put, and
CacheBuilder.build() ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=24936790
",109936,942,58895,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3015","google/guava","b89023cb0d117432817e081fce8ea19bb3d758ff",1,"2011-11-08 08:16:04-05:00","have CacheLoader.reload return ListenableFuture
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=25264832
",112512,954,59889,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3016","google/guava","d8d8ef522d14a8fb2c6494ca19834d88197f41d2",2,"2011-11-09 10:04:53-05:00","Change the implementation of
AbstractFuture.Sync#complete to guarantee that the
future is complete before exiting, even if the
current thread is not the thread actually
completing the future.  This guarantee helps with
problems such as rpcFinished completing without
the future actually being in the done() state.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=25297462
",112547,954,59911,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3017","google/guava","03b79658d4d2591bf76e9377081c16906c77fe0b",1,"2011-12-05 14:43:39-05:00","trigger refresh on Cache.getIfPresent
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=25908678
",113725,960,60577,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3018","google/guava","883202c1ea5bfb52914cc1546ff38a4716c08dde",1,"2012-01-23 10:48:19-05:00","AbstractLinkedIterator ->
AbstractSequentialIterator. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=26926853
",115210,969,60464,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3019","google/guava","3e82ff72b19d4230eba795b2760036eb18dfd4ff",1,"2012-01-30 17:17:07-05:00","Make Optional GWT serializable. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=27120368
",115225,973,60409,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3020","google/guava","222448cb98d9f53819d8f36c1e36d4c4b3ee7cbd",1,"2012-02-21 09:00:55-05:00","Remove obsolete TODO from CharMatcher. Annotate
the return type of Function#apply as @Nullable.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=27671585
",117456,991,61685,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3021","google/guava","2daad4cb6bdd1ba3ae36f4bdab8fd4dbb7cf78a7",1,"2012-02-21 15:34:37-05:00","Release MediaType into Guava as @Beta.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=27598067
",118493,994,61980,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3022","google/guava","17f6cb8aa782944d63d33232153cab4a417004d9",2,"2012-02-23 16:29:53-05:00","Extracted part of NullPointerTester and Stub into
NullValues; Added code to call default constructor
if all else failed;  Some potential
incompatibility from previous version: 1. Use
ImmutableList.of() in place of
Collections.emptyList(), ImmutableSet.of() in
place of Collections.emptySet(). I don't
anticipate issues here. 2. Use
ImmutableSortedSet.of() in place of new TreeSet().
mutable -> immutable. 3. Use a Comparator that
always returns 0, instead of reverseOrder() which
requires T extends Comparable.  If this sounds
reasonable, I'll send it through global TAP queue
to make sure it doesn't break builds.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=27791649
",120094,1026,63851,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3023","google/guava","8395dcbd9c9860508c9c16a7db3c07945ca346d7",7,"2012-03-02 13:58:52-05:00","- new @Beta classes for Guava 12.0 - @Beta
graduations for Guava 12.0 - remove classes
scheduled for removal in Guava 12.0 -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=28043743
",119690,997,62262,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3024","google/guava","707f3a276d4ea8e9d53621d137febb00cd2128da",1,"2012-03-05 19:28:06-05:00","Simplify ImmutableList and its implementations.
From Louis: http://codereview.appspot.com/5731051/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=28109145
",119609,997,62249,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3025","google/guava","bd3d46ff61aab113bac98311b77c1d5f6ce1334e",1,"2012-03-08 14:24:23-05:00","Simplify ImmutableMap, providing skeleton
implementations of each view. From Louis:
http://codereview.appspot.com/5753064/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=28206736
",119342,999,62306,"Charles Fry","fry@google.com","Charles Fry","fry@google.com"
"3026","google/guava","9eed06311194b0060c42ea9662cc6d3cb76e6a43",2,"2012-03-14 17:39:12-04:00","don't unnesessarily constrain type of getIfPresent
and getAllPresent parameters ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=28374192
",120334,1003,62950,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3027","google/guava","f4cdd87a6103131b1faaa6531ee3650dd790d47e",11,"2012-03-16 18:08:51-04:00","Add superclass safety check in getSupertype(),
added @Beta and @since to TypeToken and
Reflection. reflect needs no GWT compatibility, so
there seems to be no BUILD dark magic to do?
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=28428778
",122953,1015,63476,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3028","google/guava","d72c700e82a8aa728569ff7182aac5b63978f83f",3,"2012-03-27 13:53:14-04:00","Fix GWT behavior of ""opportunistic"" ImmutableList
subclasses. The ""standard"" ImmutableLists were
fine, but Lists.charactersOf() and
TransformedImmutableList were broken. Under Java,
they inherited working implementations of their
methods; under GWT, they inherited versions that
forwarded to an empty ""delegate"" collection. I've
overridden all forwarding methods in the GWT
emulation in order to avoid this. I've also added
tests for charactersOf(), which reveal that GWT
String/StringBuilder doesn't perform index checks,
so I've added manual checks.
TransformedImmutableList could probably stand to
have some tests, too, but at least it will be
exercised indirectly through the asList() views
implemented atop it in Louis's coming CL, which is
in fact what revealed these problems.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=28741879
",124378,1029,64251,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3029","google/guava","11ca41e98e8930d8a6506a08678439bc10666706",3,"2012-03-27 15:32:45-04:00","Changed NullPointerTester to test inherited
methods.  We only cover inherited methods from
superclasses of the same package. This is because
we don't want to step into classes the author
doesn't own.  For example, one may inherit from
AbstractList, even though AbstractList#equals()
doesn't use @Nullable.  While for classes of the
same package, we consider moving a method from
subclass to superclass a refactoring with no
behavioral change. We don't want to silently lose
coverage just because of a ""extract to superclass""
refactoring.  Also, remove @GoogleInternal from
getPackageName. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=28743194
",124346,1029,64194,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3030","google/guava","77eed532e9313671b16449facccbb3938cc9ecff",3,"2012-04-04 16:49:10-04:00","Make FindBugs marginally happier. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=28982197
",124558,1033,64425,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3031","google/guava","75225d640fa4d95f602a1b6060e37ec9ef4d8373",2,"2012-04-10 13:54:35-05:00","Improve ImmutableCollection.asList(), making more
asList views delegate contains() queries to the
backing collection. From Louis:
http://codereview.appspot.com/5785044/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=29041788
",124904,1037,64531,"Gregory Kick","gak@google.com","Gregory Kick","gak@google.com"
"3032","google/guava","97f00f81899c0faf6e63f45a92715f9797ab5b82",2,"2012-04-13 12:28:54-05:00","Open-source RangeSet/RangeMap classes so that
Louis can rebase his
http://code.google.com/r/wassermanlouis-guava/sour
ce/detail?r=fb106087948b2c0da9f5f6ed610d2df3ebb024
0a&name=rangemap on top of them. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=29159225
",125843,1046,65152,"Gregory Kick","gak@google.com","Gregory Kick","gak@google.com"
"3033","google/guava","24dbee52488621b0529ed0caa0b7128c050f32da",15,"2012-04-23 11:15:21-04:00","Rewrite TreeMultiset in terms of a traditional AVL
tree, significantly increasing speed and reducing
allocation. From Louis:
http://codereview.appspot.com/5700055/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=29480735
",124809,1025,64331,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3034","google/guava","548f8698683cb282d8a8d5f5a140af63562cc740",4,"2012-04-23 16:33:46-04:00","Minor simplifications to the ArrayTable
implementation. From Louis:
http://codereview.appspot.com/6057048/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=29492178
",124803,1025,64331,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3035","google/guava","fc5979f45d14e21d61c52f2adf9d292d2d605dc4",7,"2012-04-27 13:06:02-04:00","Cleanup grab bag: - Findbugs warnings - compiler
warnings (cast, generic array, unchecked) -
Javadoc warnings - unnecessary @Beta tags for
package-private classes - unnecessary
Platform.newArray(Class, int) indirection - Guava
copyrights - exception message typo -
DerivedGenerator documentation - parameterized
instanceof - import sorting in files already
changed ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=29598347
",125332,1029,64688,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3036","google/guava","4e65ce73450ce04a77f6c03757de26210bf7622f",11,"2012-05-08 11:05:05-04:00","More assorted cleanup: - reenable Multiset
NullPointerTester tests - fix @Nullable
annotations and add checkNotNull as necessary to
get them to pass - remove email addresses from
@author tags - update explanation of why we can't
use Arrays.copyOfRange - remove completed TODO
from fuzzyEquals - fix out-of-date
AbstractMapBasedMultiset comment -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=29718341
",126268,1045,65088,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3037","google/guava","a36dbdaa5863d986cba3f68ceee27e9715490ccc",9,"2012-05-08 11:09:13-04:00","Optimize DenseImmutableTable so that it doesn't
rebuild rows and columns on the fly. From Louis:
http://codereview.appspot.com/6066046/  Plus,
actually run ImmutableTable tests under GWT
(oops). ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=29719445
",126577,1061,65434,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3038","google/guava","3a0ce24946eeb83239615dea83011672ccbd6c5c",2,"2012-05-08 12:37:25-04:00","Issue 972: Ordering.allEqual(). From Emily:
http://codereview.appspot.com/6061053/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=29799363
",126752,1066,65563,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3039","google/guava","80fa49a2680e9e7331e959ad9ec8b85337584f7f",3,"2012-06-11 13:49:22-04:00","Changed TypeToken.getTypes().rawTypes() to not
rely on getGeneric*() methods, to work around the
GenericSignatureFromatError.  As a side bonus,
classes() won't pay the cost of traversing the
entire type hierarchy. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=30823174
",129379,1101,66823,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3040","google/guava","c888c6bbb226998980f3fe84587f1f0606578c88",3,"2012-06-11 13:50:02-04:00","Reimplement LinkedHashMultimap with a custom,
memory-efficient implementation. From Louis:
http://codereview.appspot.com/6250063/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=30828656
",129718,1101,66807,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3041","google/guava","5c2ee466c3d270bf498e352c081bad27f074344b",3,"2012-06-12 09:49:41-04:00","Add @Nullable annotations to computing map/cache
implementations to satisfy Findbugs. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=30931750
",129781,1102,66848,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3042","google/guava","18fb2a20cfc43d5e17b93fd2e683aeda468abf84",5,"2012-06-19 12:28:05-04:00","Open source lots of Caliper benchmarks!
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=31147973
",134358,1139,67932,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3043","google/guava","1fff815a61e85ea84ab45b353a15058320c6ba9f",3,"2012-06-19 15:26:50-04:00","Implement Maps.asMap(Set, Function) view.  From
Louis. (http://codereview.appspot.com/6304066/)
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=31179035
",134585,1139,67976,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3044","google/guava","36d07cffd58bc09fe7caff77dd1ea7d3dc64bf45",1,"2012-06-20 18:47:23-04:00","Graduate Sets.filter (SortedSet overload) from
@Beta. Graduate Maps.filter* (SortedMap overloads)
from @Beta. Graduate Multimaps.filter* from @Beta.
Release CycleDetectingLockFactory as @Beta.
Release UnsignedLong_CustomFieldSerializer to make
UnsignedLong GWT-serializable in Guava.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=31229567
",136656,1148,69514,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3045","google/guava","cdc0a08dc8f4b65b1a0597ce7c3cd1b3ef96c969",7,"2012-06-22 10:31:03-04:00","Delete Navigable* and Navigable*Test. Move
transformEntries and transformValues
implementations into Maps. Move
synchronizedNavigable* implementations into
Synchronized. Move unmodifiableNavigable* tests
into MapsTests/SetsTests. Also, open-source
synchronizedNavigable{Set,Map} tests.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=31268670
",137075,1148,69297,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3046","google/guava","8634dfafb850b8150c14de0fc9c24cfcd05093cc",1,"2012-06-22 16:00:08-04:00","Explicitly test that NullPointerTester uses null
as a default for @Nullable parameters.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=31300698
",137100,1148,69323,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3047","google/guava","7eec09ede5fa6ccdb1cb19558833c6857b037171",1,"2012-07-02 12:37:51-04:00","Introduce an immutable object to encapsulate the
mutable state of AbstractService.  This will allow
us to perform state queries (isRunning,
failureCause, state()) without grabbing a lock.
Also, rewrap the file to 100 lines.  It was
already a little inconsistent and i own the blame
on the whole file by this point anyway.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=31521820
",137787,1153,69620,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3048","google/guava","81abc0864e77e320c47d16b7da00097c6c87c677",1,"2012-07-25 13:49:29-04:00","Fix Findbugs warnings. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=32228105
",137784,1147,69403,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3049","google/guava","dfc51048f5493eb483f323bb427eef3d76e4685f",1,"2012-07-27 15:44:46-04:00","Changes implementation of emulated CacheBuilder
and instead emulated LocalCache. Features added
include recordStats, expireAfterAccess, ticker,
and removalListener. RefreshAfterWrite was
implemented but removed due to reliance on
reload() and returned futures. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=32318049
",140430,1166,70386,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3050","google/guava","5fe4eb68ef980694d8cbbeb34a6914c05696cee7",1,"2012-08-07 14:29:07-04:00","A few small cleanups to BloomFilter. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=32612086
",141834,1170,71008,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3051","google/guava","85cc9fd3ab8fff110d00436778ad3aeb6cfb21da",2,"2012-08-09 17:54:24-04:00","Adds Queues.synchronizedQueue (@Beta)
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=32690991
",142221,1175,71181,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3052","google/guava","4135d369da714b34a293f52bbe81ca28eaab3423",1,"2012-08-13 16:30:41-04:00","Use object equality instead of reference equality
for the Funnel in BloomFilter.equals().
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=32766357
",142440,1175,71255,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3053","google/guava","963e8a39ace0e027d2544a5c19c8ca75ee3334c6",2,"2012-08-13 16:59:26-04:00","Add tryParse implementation for Doubles and
Floats.  From Louis:
http://codereview.appspot.com/6354088/
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=32829265
",143135,1177,71766,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3054","google/guava","b84265625c1f685c855cca2458ee99f418f2845d",2,"2012-08-29 18:01:57-04:00","Graduate labs.reflect.Invokable and
labs.reflect.Parameter. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=33397919
",145258,1195,72423,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3055","google/guava","9e56171b52b8a6019f488974dfef05603903ee21",2,"2012-08-31 11:09:54-04:00","Changed NullPointerTester to use Invokable
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=33440442
",145325,1195,72423,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3056","google/guava","6e54496483e64309430a0d54cbf24d9440e77bb3",2,"2012-09-07 16:18:29-04:00","Added AbstractPackageSanityTests to apply
automated sanity tests for an entire package.
Yaks I needed to shave: - move a piece of reusable
code from NullPointerTester into a new DummyProxy
class. - Added a few new default values to
ArbitraryInstances. (I'm thinking to change the
default value of numbers to 1, in a separate CL)
Added PackageSanityTests to common.reflect and
common.testing, as dogfooding. Had to add some
@Nullable and missing checkNotNull() as a result.
Since APST is classpath sensitive, there are a lot
of top-level class fixture files in the
packagesanity package and each test case
corresponds to a single java_test rule. That makes
the CL more daunting than it actually is.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=33660554
",146465,1204,72870,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3057","google/guava","d8f98873aa2449c056dc1b145e35e898d128e544",1,"2012-09-18 20:03:28-04:00","Eliminate EmptyImmutableMap, using
ImmutableBiMap.of() everywhere instead.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34006338
",146618,1202,72864,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3058","google/guava","b59f363f5a3d8ce18637f4ad1b53a559ad2c5643",2,"2012-09-18 20:07:54-04:00","Refactor RangeSet into an interface and an
abstract skeleton ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34047917
",146644,1203,72876,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3059","google/guava","4ab9205558043640770fa5888c56ff3e639903df",23,"2012-09-20 14:20:35-04:00","Added testEquals() to AbstractPackageSanityTests.
Extracted some of the code into a new
ClassSanityTester class.  Also added utility to
test factory classes such as Predicates, for
example:  new ClassSanityTester().forAllPublicStat
icMethods(Predicates.class)
.testEqualsAndSerialiable();  This cannot be
performed by package sanity tests because there is
no reliable pattern to tell that a class is a
factory class (using plural is tricky in i18n if
not anything else). But I think adding a simple
test to PredicatesTest for Predicates is already a
lot easier.  Added javadoc to explain which case
are covered by these automated sanity tests and
which aren't.  Added ItemReporter to
RelationshipTester and EqualsTester so that the
error message can be customized. The default
""group i, item j"" message is useless for automated
test, since user didn't explicitly create the
equality groups and the group numbers and item
numbers are meaningless to users. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34054176
",147365,1207,73185,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3060","google/guava","a3df035531ff51546466335635e72500a7a95348",1,"2012-09-24 13:06:25-04:00","Makes FreshValueGenerator more friendly to
collection types especially immutable collection
types. This reduces false positives and also
reduces the need to set sample instances for
collection types. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34163462
",148158,1207,73242,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3061","google/guava","cc5366d288560046ba808761a70b8844db0f4115",15,"2012-09-24 18:14:07-04:00","Applied package sanity test to common/collect. Had
to add publicApiOnly() because there are a lot of
package-private classes that should either not be
tested (the shim classes) or are already covered
by another test, like the various *ContiguousSet
classes covered by ContiguousSetTest.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34235956
",148571,1208,73320,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3062","google/guava","86aa9f060deed8a128608e1b16e25a8e188aba7e",1,"2012-09-26 13:40:39-04:00","Implement Sets.cartesianProduct to iterate in
lexicographical order.  In the process,
Lists.cartesianProduct has been implemented on a
package-private basis. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34279184
",148691,1209,73599,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3063","google/guava","835a7397fabb05a764a8008f4151c97f821a29ef",1,"2012-09-27 12:15:16-04:00","Implement ImmutableEnumMap ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34322860
",148849,1213,73711,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3064","google/guava","783fca80052b1be76ca83150f982eeabfbc821f8",3,"2012-09-28 17:33:03-04:00","Replace SingletonImmutableMap with
SingletonImmutableBiMap ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34396548
",148893,1213,73715,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3065","google/guava","79821ec75ca4f431331acbd10b095ed0d38e52f8",3,"2012-10-02 13:12:29-04:00","Applied package sanity test to common.cache. I had
to add some checkNotNull() to LocalCache and
CacheLoader, based on my understanding of the
javadoc. Though it does change the contract: some
didn't throw NPE on null, some threw
UncheckedExecutionException. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34462784
",149291,1219,73869,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3066","google/guava","0896afdf582d0dc281f8419f24c1faa4916c010b",2,"2012-10-02 13:13:18-04:00","Changed ClassSanityTester to not to attempt to
instantiate the class if no instance method needs
to be tested for nulls. This avoids unnecessary
test failures for classes that don't need null
check after all. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34466316
",149313,1219,73869,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3067","google/guava","54c7c7039143abfd983c4a30b70d37c714d0d715",2,"2012-10-02 18:04:32-04:00","Applied package sanity tests to common.eventbus
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34501606
",149686,1221,74163,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3068","google/guava","9880403b7b975f377fa4f550ed3239a7cc7b6aa7",4,"2012-10-02 18:06:25-04:00","Applied package sanity tests to common.io
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34502521
",149729,1222,74182,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3069","google/guava","e6c7968848997ad1e4ed64db0fd8d22e276b16b8",7,"2012-10-02 18:08:11-04:00","Applied package sanity tests to common.math
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34503919
",149898,1224,74222,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3070","google/guava","567ba59e507379edffd48e29b0de52bd8e79e378",1,"2012-10-03 11:56:52-04:00","A few miscellaneous changes. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34536148
",150118,1229,74373,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3071","google/guava","7d27d54759407ece6af40e20658066f4bf90bc30",1,"2012-10-04 11:32:22-04:00","Make ListenableFutureTask non-final but not
subclassable externally. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34552583
",150132,1229,74381,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3072","google/guava","dbf40d91e623fd213fb2ea1b6c34910908a923c6",2,"2012-10-04 11:33:04-04:00","Add equals/hashCode to Suppliers, and tests.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34552771
",150155,1229,74382,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3073","google/guava","419a8d3fa864f78997eaba0b25627e6d894f9339",14,"2012-10-05 16:36:20-04:00","Applied package sanity tests to
common.util.concurrent  Tested: [] -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34588014
",150275,1231,74463,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3074","google/guava","62dbc59f8ddc0ab9d29be7637f650452605da26c",1,"2012-10-09 11:25:51-04:00","Implement DescendingImmutableSortedSet, a skeleton
implementation of
ImmutableSortedSet.descendingSet(). -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=34936379
",150345,1230,74461,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3075","google/guava","ec36ee10cd3b2e9d30b851de9ad8c98cbf194150",3,"2012-10-09 18:22:09-04:00","Miscellaneous cleanup. - Fixed Findbugs @Nullable
problems. - Fixed Javadoc warnings. - Fixed
Unsigned* doc copypasta, and generally made it
more consistent. - Documented exceptions in
Uninterruptibles. - Used NPT.setDefault instead of
an checkNotNull call for newEnumSet. - Added
Abstract*Service explicit constructors and docs. -
Fixed <p><b>Note</b></p> in SourceCodeEscapers. -
Fixed ""to be be"" in cartesianProduct. - Fixed }}
in RetryingCallable doc. - Fixed weird indent on
call to createTestSuite. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=35230825
",150390,1231,74484,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3076","google/guava","70087c1ce633f5339d709c3ad6335dc37274edd9",1,"2012-10-12 12:45:26-04:00","Added null tests against return values of
MoreExecutors and Futures  Tested: []
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=35282579
",150474,1231,74486,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3077","google/guava","72a25f66b25db2c957bf8f287c2e54baf418d514",23,"2012-10-12 13:03:36-04:00","Rewrite HashBiMap to share entries between the
forward and backward maps, yielding ~38% savings
on memory.  This imposes a small performance hit
in the case of duplicate keys or values -- at most
one addition traversal of a hash table bucket --
but no more. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=35322418
",150873,1232,74516,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3078","google/guava","b0cbbf5aa492b86d67963e3be730164ad8857536",2,"2012-10-22 15:49:26-04:00","Migrate BiMap-filtering methods out of Labs.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=35880650
",151891,1243,74933,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3079","google/guava","59dbf4eaf7dcf4c07cb6d876c1d7c12e6ef8ba6a",2,"2012-10-23 19:13:57-04:00","Guava issue 1012: Sets.filter for NavigableSet
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=35956146
",152128,1245,75023,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3080","google/guava","85d2e6894a747bbcc39ac5feaecec89226446499",8,"2012-10-26 16:12:57-04:00","Migrate IRangeMap into RangeMap's position.  CL
automatically created by: replace_string  \
RangeMap.create\\\(\\\) \ TreeRangeMap.create\(\)
Tested: reviewed submit queues -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=36518602
",152713,1249,75191,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3081","google/guava","6fb125be7d839839562d3e9a19c8dc40d6e54265",1,"2012-10-26 16:19:19-04:00","Make TreeMultiset.elementSet() return a
NavigableSet (albeit not in GWT).  Dependent on
cl/36499908. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=36545396
",153407,1252,75405,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3082","google/guava","ba9aa6be61a9de6096a0d571ae9fde97e57d539a",1,"2012-10-26 16:23:10-04:00","Add RangeMap.getEntry method.  This appears to be
needed by https://cs.[]/#[]/java/com/google/net/se
curity/[]proxy/ProxyConfigFile.java&l=583 .
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=36676148
",153456,1252,75417,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3083","google/guava","b76ffbeab2394774f8e0efc13205b38f63d1513e",1,"2012-10-26 16:24:13-04:00","Add Closer as package-private in common.io.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=36681931
",153820,1254,75587,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3084","google/guava","043e4f75cc56f564a0d0ca3345176e637de8469e",1,"2012-11-09 11:06:51-05:00","Implement ImmutableRangeSet.asSet(DiscreteDomain).
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38034818
",154508,1258,75784,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3085","google/guava","f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d",3,"2012-11-09 11:43:50-05:00","Return a NavigableSet from TreeMultimap.get
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38054420
",155408,1260,76099,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3086","google/guava","6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd",1,"2012-11-09 11:56:47-05:00","Make TreeMultimap.asMap() and keySet() return
NavigableMap/NavigableSet, falling back to
SortedMap/SortedSet on GWT. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38143211
",155672,1261,76125,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3087","google/guava","c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b",1,"2012-11-09 12:00:09-05:00","Rewrite ImmutableBiMap to save ~35% on memory
consumption, following the ideas of our HashBiMap
rewrite.  This should not have significant
performance impact, as the implementation is
essentially identical -- save that entry objects
are shared between the forward and backward maps.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38148097
",155819,1261,76125,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3088","google/guava","017a5145ed8eaeac92ce997c679061b129f06ef4",1,"2012-11-09 12:43:47-05:00","Add Maps.filter{Keys,Values,Entries}(NavigableMap,
Predicate), since we added
Sets.filter(NavigableSet, Predicate).
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38357323
",156667,1264,76480,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3089","google/guava","f0859c91b3e7740ba0423198d9c44ac9df72824a",1,"2012-11-09 12:46:43-05:00","Changed Invokable to always return the source-view
of parameters, even for non-static inner class
constructors. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38361864
",156801,1264,76485,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3090","google/guava","c61612cdab133e819a311f488f4df5b732d22631",2,"2012-11-09 16:39:24-05:00","Add ByteSource, ByteSink, CharSource and CharSink
abstract classes and factory methods for creating
various implementations of them.  These classes
are intended to replace the InputSupplier and
OutputSupplier interfaces, providing advantages
such as: no generics, a more consistent interface
that reduces the need for static methods, and
better discoverability.  This helps pave the way
for JDK7 by making it extremely easy to provide
the same features for the new file APIs (Path)
that we currently provide for Files, etc. All it
will require is adding new factory methods to
create Sources and Sinks wrapping a Path.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38458933
",158638,1292,77537,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3091","google/guava","da4ca2f9535ccf93454ad7dc75165651f1c7e2c6",1,"2012-11-15 13:10:53-05:00","Add useful toString() for BaseEncoding
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38649483
",158756,1291,77531,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3092","google/guava","5b96fd5a6377e0d0a01b2f2da39196882043e62c",9,"2012-11-15 13:46:21-05:00","Refactor AbstractMultimap into a separate
AbstractMultimap and AbstractMapBasedMultimap.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38726867
",158768,1292,77556,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3093","google/guava","a45095a38959a46331f3bdcb18ec37fec835e4f4",3,"2012-11-15 14:10:28-05:00","Implement Multisets.filter(Multiset, Predicate)
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=38740003
",158882,1292,77617,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3094","google/guava","35fbd05c6f9d09db66b98285b00b77bccd3fc468",5,"2012-11-28 13:20:04-05:00","Add subRangeMap to the RangeMap interface, and an
implementation for TreeRangeMap. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=39377500
",159424,1292,77772,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3095","google/guava","2eabf213074afc5b2483c687598e6a3762c0ec5f",8,"2012-11-29 12:37:08-05:00","Rewrite Multimaps.filter implementations,
factoring out a significantly more efficient
Multimaps.filterKeys implementation in the
process. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=39394883
",159425,1295,77827,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3096","google/guava","6136894f7de5e93cfc355dd25f8174c2abc363f7",2,"2012-12-06 09:43:00-05:00","New implementation of Objects.ToStringHelper:  -
More efficient, doesn't create a list of temporary
holders. - Some javadoc improvements. - New
benchmark. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=39701659
",159620,1298,78232,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3097","google/guava","39b6a72246fcde454321b03823f4981f6394a63f",13,"2012-12-13 16:04:51-05:00","Rewrite TreeRangeSet.complement() to be
implemented in the same way as TreeRangeSet itself
-- as a NavigableMap<Cut<C>, Range<C>> mapping
lower bounds to ranges.  This is a prelude to
implementing TreeRangeSet.subRangeSet, which --
itself implemented as a NavigableMap<Cut<C>,
Range<C>> -- will be chainable with complement()
operations. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=39984398
",160030,1304,78401,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3098","google/guava","ca36f308785f8a9780a10ea48a76bd026b202fa9",5,"2012-12-13 16:05:39-05:00","Add subRangeSet to the RangeSet interface, and add
the TreeRangeSet implementation. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=40028620
",160323,1304,78420,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3099","google/guava","75085833f67d07b9dcc071e0703cb1027e6c0b28",2,"2012-12-20 17:08:53-05:00","Take steps to fix Cache.refresh race condition.
Specifically, do a racy check outside the lock to
see if the value is already being refreshed, and
do an optional check inside the lock to eliminate
the race condition entirely. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=40301328
",160563,1307,78652,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3100","google/guava","9ede30c33a1ad7e79b54a601a79af53526a40d4f",1,"2013-01-03 16:08:07-05:00","Changed ClassSanityTester.testEquals() to check
against use of == on objects. We assume that the
implementations should call equals()  Tested: []
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=40349360
",160842,1309,78742,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3101","google/guava","f237e1e015fecb13e34739858300508dac235117",1,"2013-01-03 16:23:59-05:00","Write a more compact ImmutableTable
implementation.  Instead of maintaining explicit
Cell objects and an ImmutableSet<Cell> cellSet
implementation, we keep iteration-ordered pointers
into the main lookup structures to avoid keeping
two hash tables for the same data. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=40531451
",160894,1307,78667,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3102","google/guava","d8a45836174deafb860c0bba74faa673ba3c5ca0",1,"2013-01-11 11:20:35-05:00","Added javadoc to ClassSanityTester about a pattern
to test builder equality. Added
invokable.setAccessible(true) to allow public
factories of non-public classes to be tested.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=40993798
",160984,1307,78738,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3103","google/guava","8485330b17d5cd0b93fbb2f1429c09bf2a4155ab",2,"2013-01-12 18:32:51-05:00","Trim lots of unused and redundant code.  In
particular,  * refactor hash table size
computations into one place * use Maps.safeGet and
friends where appropriate * eliminate code
duplication between the two skeleton
implementations of NavigableMap.descendingMap()
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=41052812
",160503,1306,78726,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3104","google/guava","f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc",1,"2013-01-16 14:13:15-05:00","Minor simplifications to Multimaps. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=41184579
",160576,1309,78920,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3105","google/guava","b99b83e93dd3f0a448db8f0284c14b0ae759d85b",2,"2013-01-16 14:16:26-05:00","Split off Multimaps.filterXXX overloads for
SetMultimap (and filterKeys(ListMultimap)).
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=41190071
",160633,1313,79307,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3106","google/guava","f8a94b9999e42a2eb1431948ebb57ab8533eaaa5",6,"2013-01-23 14:30:15-08:00","Simplify and organize various Map implementations.
Specifically:  * factor out Hashing.smearedHash *
organize the CompactHash collections'
implementations better * use consistent error
messages for ImmutableMap and subclasses when
rejecting duplicate elements ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=41539237
",160708,1321,79646,"Christian Gruber","google.com","Christian Gruber","google.com"
"3107","google/guava","c65fdbc3f931b34da5d7261609ad88bbefb7afd4",4,"2013-02-04 13:03:45-05:00","Conservatively simplify Tables and ImmutableTable
implementations. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=41963659
",160976,1323,79715,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3108","google/guava","9129e5e50020f84c7a859726b42ce211d2e37e5f",1,"2013-02-04 13:05:16-05:00","Miscellaneous documentation fixes and internal
cleanups. - Remove potentially misleading ""it
cannot be started/stopped more than once"" from
Stopwatch exception messages. - Fix TreeTraverser
ASCII art. - Remove inaccurate @GwtCompatible
annotation from FeatureUtil. - Fix mistaken
duplicate words (""the the,"" etc.). - Strip *all*
of benchmark running instructions from
CharMatcherBenchmark, and preemptively strip
instructions from internal escapers benchmarks. -
Remove test <echo> from ant section of pom.xml. -
Add @Nullable to StandardBaseEncoding's other
constructor's paddingChar parameter. - Remove
stale comment from Futures. (UninterruptibleFuture
is long dead.) - Update name of Truth GWT module.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=42036409
",160974,1323,79710,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3109","google/guava","a37ebc6eb5f242ccfa90cc11eef369979e932685",2,"2013-02-07 10:22:56-05:00","Use specialized entry types for ImmutableMap, and
use these in the builders to avoid redundant
copying of entries. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=42095809
",161026,1323,79711,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3110","google/guava","f69200fa67f143bc9fbe4bbdb36650e6aa57a8fc",1,"2013-02-11 14:30:28-05:00","Make ImmutableMultimap.values().contains()
redirect to ImmutableMultimap.containsValue, which
for e.g. ImmutableSetMultimap takes O(#keys) time,
instead of the old implementation, which takes
O(#entries) time. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=42243991
",161076,1323,79709,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3111","google/guava","e66c84b101f674401ffd4c5264b15a980f48e749",5,"2013-02-18 16:16:00-05:00","Open source some more benchmarks. The Monitor
benchmarks were left as internal when the class
was migrated from Labs. My guess is that that was
nothing more than ""Caliper benchmarks can't be
open-sourced yet."" I notice that earlier CLs
didn't open-source them, either. My guess is that
that's just because they were excluded from the
BUILD rule entirely and not merely marked with
@GoogleInternal. My guess is that the same is true
of the EventBus benchmark. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=42749026
",161846,1331,80691,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3112","google/guava","45db748d4c1ac8cd1215256ebbf3a1d645461cef",2,"2013-02-21 17:16:19-05:00","Make ExecutionList smaller and faster by using a
manual queue instead of a LinkedList.  With these
changes: * An empty/executed ExecutionList is now
half the size (20 vs. 40 bytes), it is also
smaller after execution as well. * The new
ExecutionList takes 16 fewer bytes per listener
added also there is only 1 object allocated
instead of 2.  Also, if the list has already been
executed there is no longer any allocation in add.
* There were also performance gains between 0 and
20% across the 4 benchmarks I wrote. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=42915090
",162156,1332,80657,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3113","google/guava","cb54c20bedf257f2eeec7e9f61105b2585ab0752",2,"2013-03-01 12:09:06-05:00","More simplification and refactoring of common code
in common.collect. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=43236585
",161667,1323,80514,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3114","google/guava","252e992199fdb7735e6303b289c7afde4fb2d797",11,"2013-03-01 12:11:46-05:00","Add AbstractTable, a skeleton implementation-
agnostic Table implementation, and factor out code
in common between Table implementations.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=43250483
",161472,1324,80524,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3115","google/guava","155728d070ac6f2d2ca22644f5c5affea72d7feb",5,"2013-03-01 12:13:31-05:00","Simplify filter() implementations in
common.collect ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=43252637
",161400,1324,80521,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3116","google/guava","e17ee922de0d2285ff8bf8212823c33d8589512d",1,"2013-03-01 12:16:02-05:00","Simplify and deoptimize LinkedListMultimap
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=43258188
",161182,1324,80481,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3117","google/guava","1a3a560da39ad9c737af0d22df34ce7e42817546",2,"2013-03-02 18:12:35-08:00","Eliminate nondeterminism in memory consumption
tests by forcing lazily computed views of the
empty immutable collections. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=43298195
",161457,1324,80510,"Christian Gruber","cgruber@google.com","Christian Gruber","cgruber@google.com"
"3118","google/guava","c8a3113091ba181971969da60898439e18812b6b",2,"2013-03-14 15:01:28-04:00","Add Funnels.stringFunnel(Charset) overload.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=43908416
",162575,1336,81083,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3119","google/guava","b9fb572927249d885c631ceba20a2198da53de3d",1,"2013-03-18 11:12:02-04:00","Modify recordStats to not accept a value in same
manner as setWeakKey ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=44016270
",162583,1336,81087,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3120","google/guava","09997a5005a53577084dd70da30e46bdf608d0a1",3,"2013-03-27 16:27:36-04:00","Nullability fixes. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=44514905
",163029,1338,81276,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3121","google/guava","cf569f9cdea18b258aade8a268603fa6113cb184",1,"2013-04-13 11:53:23-07:00","Closer.register supports null closeable
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=45058002
",163370,1340,81464,"Louis Wasserman","lowasser@google.com","Louis Wasserman","lowasser@google.com"
"3122","google/guava","542600dcff42f6846f662ac3a946348a7cf8ed3c",1,"2013-05-17 14:19:07-07:00","Override ImmutableBiMap.containsValue() to use the
O(1) implementation, as per Guava bug 1416.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=46744049
",210861,1621,88831,"Louis Wasserman","lowasser@google.com","Louis Wasserman","lowasser@google.com"
"3123","google/guava","7f1c522ef811e207367e974bf1c93e327e9b4dfb",3,"2013-05-17 14:20:41-07:00","Implement Object#equals() and #hashCode() for
stateful HashFunctions. Add tests to verify the
behavior. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=46751376
",210950,1621,88833,"Louis Wasserman","lowasser@google.com","Louis Wasserman","lowasser@google.com"
"3124","google/guava","1feb7a1a7bc73ca4b23ce576559775ffb8ff364c",2,"2013-05-21 17:35:16-04:00","Add the TestSuiteBuilder for Multimap.values(),
and fix Multimaps.filterXXX to pass those tests
properly. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=46945446
",210670,1625,88988,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3125","google/guava","292320335ac395b15352881bb4f5f3a0e6d3e43b",3,"2013-05-28 01:07:33-04:00","Preserve SortedSet-ness of value collections
across serialization. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=47106820
",206128,1635,88741,"Kurt Kluever","kak@google.com","Kurt Kluever","kak@google.com"
"3126","google/guava","230c68caf4e520c7de21facbdea55d5b9945cdd8",2,"2013-06-13 15:39:28-04:00","Annotate safeContains and safeRemove parameter as
@Nullable. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=47980950
",202405,1639,88695,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3127","google/guava","d34814fd4e8f13c1c78603bc620b251313ba10e9",1,"2013-06-13 17:37:49-04:00","Annotate FutureCallback.onSuccess parameter as
@Nullable. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=47989392
",202406,1639,88695,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3128","google/guava","1feb507ee7bc2febd26ab8af061c19741c72d01d",3,"2013-06-25 20:15:59-04:00","Migrate the remaining Multimap.values() tests from
AbstractMultimap to MultimapTestSuiteBuilder, and
delete AbstractMultimapTest, which no longer
contains any tests. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=48537940
",202214,1635,88504,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3129","google/guava","721f17976199f1636e86447370b2caa96a226a39",1,"2013-06-28 13:04:18-04:00","Fix low-hanging rawtypes warnings for
common.collect. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=48684234
",202709,1634,88523,"Kurt Kluever","kak@google.com","Colin Decker","cgdecker@google.com"
"3130","google/guava","35df6e874f188730e5f16441607999715615760a",1,"2013-07-09 12:14:34-04:00","Open source Hashing#sipHash24() and
Hashing#sipHash24(long, long). -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=49085958
",202921,1638,88680,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3131","google/guava","952d4e85528e725a9e9851d4b262f4c9e1037d8d",2,"2013-07-17 16:58:13-04:00","Add Queues.synchronizedDeque(Deque<E>).
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=49514053
",203256,1639,88716,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3132","google/guava","9e513787c859c6ea922574ef30c66f17eb9158f1",1,"2013-07-29 18:58:04-04:00","Elements of Sets.powerSet should support
contains() in O(1). ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=50069151
",202856,1638,88633,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3133","google/guava","da7157938e5ff11b46f9ffe713ee4dd96eb6a786",1,"2013-08-09 17:21:04-04:00","Move hashCode() implementation into abstract
parent class instead of subclasses. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=50632699
",203006,1639,88727,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3134","google/guava","af79a1939d2900ecaae92a5538760369eaa60b9b",1,"2013-09-18 14:57:58-04:00","Change all the reference to event handler to event
subscriber. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=52404442
",203704,1643,89030,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3135","google/guava","fc8c61cf703155f85b00b30cd11fc11b53947953",1,"2013-10-25 17:54:19-04:00","Warnings-related cleanup to c.g.c.base and its
tests. Ruthlessly standardizing the comment we use
so these can potentially be replaced with string
constants one day. In some cases I have actually
removed unjustified suppressions. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=55637082
",204140,1647,89278,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3136","google/guava","75fda2a9fea9e3415c661e8688332c24ffddc940",9,"2013-12-18 14:27:53-05:00","Open source Converter and friends in Guava 16.0
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=58300985
",205541,1651,89774,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3137","google/guava","4d75431608106c4e7a25bff35e22d2474ed30689",2,"2013-12-18 14:32:00-05:00","Make CaseFormat.converterTo(),
Enums.stringConverter(), and Maps.asConverter()
return serializable converters with reasonable
equals(), hashCode(), and toString()
representations.  Weakly deprecate
Enums.valueOfFunction(). ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=58359600
",205703,1651,89778,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3138","google/guava","4ab391e4924ef436da8e3d1363bc5d57e3b75514",1,"2013-12-30 13:58:16-05:00","Converter.from(forwardFunction, backwardFunction).
This will be essential in JDK 8. It's probably not
that useful before then, but... why not?
(Converter.from is Google-internal currently, but
we've accidentally released the implementation.
We'll strip it out later.)  Sneak in a few javadoc
tweaks. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=58786360
",206396,1661,90294,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3139","google/guava","e7887ccb996ac5d36bc22714671767e80a24a5a8",10,"2013-12-30 14:13:55-05:00","Small Converter cleanups: -move all @annotations
to individual lines -fix some @Nullable
annotations ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=58824450
",206426,1661,90252,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3140","google/guava","f6f3aab8605bd368ef37ce82298d8896a358f669",2,"2014-02-06 16:40:51-05:00","Add closeQuietly(InputStream) and
closeQuietly(Reader). ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=61085980
",206856,1664,90528,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3141","google/guava","4061b1a8ce5b668b076bb0877091e1c4322ee539",2,"2014-03-13 11:29:20-04:00","Open source base.Verify in Guava 17.0
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=62936772
",207278,1668,90790,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3142","google/guava","6c2d78402229cc267bddb26f174078d1353337d0",1,"2014-04-09 18:52:51-04:00","- For a Collection<T> parameter that we don't know
how to generate, fail the test. Previously, we
would sometimes generate a Collection<String>,
since the value is usually used only for equals()
and hashCode() testing. (All this also applies to
most other JDK and Guava collection types.)
http://code.google.com/p/guava-
libraries/issues/detail?id=1665 - For Optional
parameters, generate Optional.absent() before
generating any Optional.of(...) instances. -
Deprecate setSampleInstances in favor of
setDistinctValues. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=64661899
",208525,1678,91181,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3143","google/guava","be016c7ff468c6bdb347f8d4104c50846b18a821",2,"2014-05-23 16:04:02-04:00","Release FutureCallbackTest to Guava. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=67707789
",209143,1683,91442,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3144","google/guava","39534cb20b1ae63e5a516ceacd9ba71fddeaa8c5",2,"2014-06-18 18:27:48-04:00","Open source base.MoreObjects and add appropriate
@since tags. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=69310042
",209379,1684,91792,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3145","google/guava","4232450e7bb7c46c08868f699323db3e787507c8",2,"2014-06-29 18:48:51-07:00","Use @Nullable on public *methods* consistently for
Guava classes of common.base (plus StringUtil,
given how erratic its null-friendliness is). Of
course, nothing is *proving* that these are
correct or complete (and probably nothing short of
moving to full JSR308ness can?). -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=70026461
",208960,1684,91286,"Christian Edward Gruber","cgruber@google.com","Christian Edward Gruber","cgruber@google.com"
"3146","google/guava","0f91c0fe460a9a753d7040a5691c38cee31dad92",2,"2014-07-07 17:25:55-04:00","Open-source tests for Monitor (which is already
open-sourced as part of guava) by removing
@GoogleInternal, removing the dependence on
TearDownTestCase, and also open-sourcing the
helper class TestThread. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=70653606
",209335,1686,91504,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3147","google/guava","7c85e1303b7a506d500652d608329adf5dd90813",2,"2014-08-05 16:38:02-04:00","Major refactoring of EventBus, in preparation for
further changes.  - Make an Executor a property of
all EventBuses, not just AsyncEventBus. A normal
EventBus uses a direct Executor by default.
Executors are stored per-subscriber. - Pull out
the event dispatch strategy into a Dispatcher
class. This handles how events are queued (or not)
as they're posted. EventBus and AsyncEventBus each
use strategies that should match their old
behavior exactly. - Pull out the subscriber
registration code into a SubscriberRegistry class.
At the same time, switch back to using a
ConcurrentMap<Class<?>,
CopyOnWriteArraySet<Subscriber>> to store
subscribers in order to allow lightweight, copy-
free immutable snapshots of all subscribers to an
event. - Rename EventSubscriber to Subscriber and
make some changes to it. Move most code related to
actually invoking a subscriber method to it. -
Expose the EventBus's identifier. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=72652483
",209790,1691,91699,"Colin Decker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3148","google/guava","e7f902c768e974552f954a1a55970d6ef39dc6fb",2,"2014-09-15 08:26:48-07:00","Fixed a FreshValueGenerator bug that causes
failure in generating fresh values recursively
when there are finite number of distinct values
provided by user.  The fix is to make sure the
""freshness"" AtomicInteger is only incremented at
the end of generating a fresh value for user code.
Recursive generation of values for nested types
(such as generating the K and V for a Map<K, V>)
doesn't increment the freshness.  This ensures
that for finite set of distinct values, we don't
ever skip distinct value.  Along the way, the
special casing for Optional had to be changed. So
I just spent extra effort supporting an @Empty
annotation that can be used to generate ""empty""
value for any arbitrary type.  Originally, I tried
to return empty collections. But some existing
tests failed because the classes don't always like
being injected with empty collections or maps
(they may have a precondition check to reject
empty collection).  So @Empty is only applied to
Optional, Range and ConcurrentMap. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=75542159
",210322,1693,92000,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3149","google/guava","a25328617843ad6faf88fdd20634a68d8b8267b8",2,"2014-09-18 15:19:06-07:00","Make ImmutableCollection.contains abstract, and
fix some embarrassing oversights of where it
should have been overridden. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=75849013
",210324,1693,91985,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3150","google/guava","af3f8d18044ae5854deaa16fd534731490b49d97",9,"2014-10-16 16:28:50-07:00","This CL fixes null annotations in
com.google.common.primitives  The annotations on
the tryParse() methods are inconsistent. Many of
them don't have @Nullable annotations. This is
problematic, because: a) the method can return
null; and b) the package itself is annotated with
@ParametersAreNonnullByDefault. This causes
Eclipse to display dead code warnings when
checking the return value from these methods.
I've included the @CheckForNull annotation, since
I saw you guys using it already. Technically, this
isn't required and @Nullable by itself should be
fine. But it doesn't hurt to have both. Also
Eclipse doesn't understand @CheckForNull.  I also
threw in a few @Nullable on equals() methods that
were missing. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=77896210
",210590,1693,92148,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3151","google/guava","7ac551423cddb0c81f1307e3b101c0b41cf34883",3,"2014-11-17 11:30:25-08:00","Add a constructor to VerifyException to permit a
cause to provided alongside a message.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=80128106
",210710,1693,92145,"hamptos","hamptos@google.com","Colin Decker","cgdecker@google.com"
"3152","google/guava","353ae349a24fb6c9b3e233ca03e4012761c7f3d8",6,"2014-11-21 14:10:57-08:00","Rewrite AbstractFuture to fix the following issues
1. set,setException and cancel are all potentially
blocking methods 2. using
AbstractQueuedSynchronizer is overkill for a
future 3. the lack of a setFuture method leads to
a lot of repetitive code 4. abstract future is fat
5. timed get() calls will always succeed if the
future is done when the blocked thread wakes up,
even if the deadline has passed.  The approach is
to directly implement the interface using Unsafe
and LockSupport.  ExecutionListBenchmark is
written to essentially generate as much thread
contention as possible... im not sure how useful
it is.  Also, the more i try to run multithreaded
(micro) caliper benchmarks the less confident i am
that any of the data is reliable.  The main point
is that the future is definitely much smaller and
also faster in most scenarios. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=80505365
",211574,1696,92472,"lukes","lukes@google.com","Chris Povirk","cpovirk@google.com"
"3153","google/guava","81b23cdc840018da4fc07ccfcd55c78391f44df0",1,"2014-12-04 08:43:33-08:00","use Map<File, ResourceInfo> instead of Map<URI,
ResourceInfo> to work around the problem mentioned
in https://github.com/google/guava/issues/1899
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=81339582
",211588,1695,92454,"benyu","benyu@google.com","Chris Povirk","cpovirk@google.com"
"3154","google/guava","a70f009926809b9a37ebbc16ebbc9cf71030be11",1,"2014-12-04 14:01:30-08:00","Skip unnecessary presizing. ------------- Created
by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=81367572
",211593,1695,92452,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3155","google/guava","99d2816f0a099430f28b69639e9f6f5aae388812",1,"2014-12-23 14:14:24-08:00","Create TrustedListenableFutureTask so that our
listener executor services can produce futures
compatible with the new setFuture optimization.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=82743827
",212063,1698,92616,"lukes","lukes@google.com","Chris Povirk","cpovirk@google.com"
"3156","google/guava","9b446af7093a8dcc6cea883a10fa1e9cbc63966f",1,"2015-01-20 08:58:08-08:00","Improve invalid character exceptions from
BaseEncoding  Fixes
https://github.com/google/guava/issues/1947
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=84345586
",213546,1716,93273,"yetanothernerd","yetanothernerd@google.com","Colin Decker","cgdecker@google.com"
"3157","google/guava","6b76b9276557db9d9472f8a869cc819c70cfb3cb",1,"2015-01-22 10:42:57-08:00","Annotate AsyncFunction parameter as @Nullable.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=84545868
",213546,1716,93277,"cpovirk","cpovirk@google.com","Colin Decker","cgdecker@google.com"
"3158","google/guava","966f3b23cbf9c8e568f681f62436836530f1453f",7,"2015-01-29 14:05:14-08:00","Add lazyStackTrace. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=85099500
",214972,1730,93925,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3159","google/guava","3e47a32fe38b0e36f6c3a614a146916914c922e9",1,"2015-02-12 07:59:03-08:00","Add Futures.catching{,Async} to replace
Futures.withFallback. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=86180055
",215975,1736,94729,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3160","google/guava","b547d033e5c3e8958242c8d01de491ceac19c126",6,"2015-02-16 04:47:25-08:00","Optimize BaseEncoding's encode method by using an
implementation without streams -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=86425194
",216557,1737,95062,"yetanothernerd","yetanothernerd@google.com","Colin Decker","cgdecker@google.com"
"3161","google/guava","1338bd10ca989840886868227e609da903424321",2,"2015-02-17 09:20:24-08:00","Make immediateFailedFuture and
immediateCancelledFuture trusted futures.
https://github.com/google/guava/issues/1961
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=86499614
",216499,1737,95086,"lukes","lukes@google.com","Colin Decker","cgdecker@google.com"
"3162","google/guava","d812ccf2c25d82a23619ec6bb377d58ce8882e28",6,"2015-02-26 16:42:10-08:00","Add missing @Nullable annotations to Table and
BiMap ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=87297784
",216700,1738,95227,"kak","kak@google.com","Chris Povirk","cpovirk@google.com"
"3163","google/guava","c1e0e671a775886c16ddfab543711f002460b538",3,"2015-03-23 10:54:24-07:00","Eliminate boxing in RegularImmutableMultiset by
inlining the hash table implementation.  This is
primarily intended as an optimization for
Android's sake, but is expected to have net
performance benefit in all environments, just at
the expense of code complexity. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89315361
",216701,1737,95205,"lowasser","lowasser@google.com","Colin Decker","cgdecker@google.com"
"3164","google/guava","7af428ed5883d5237849d44a76d8ec0f41c10080",4,"2015-03-23 11:31:17-07:00","Simplify the ImmutableMapEntry shared code by
making the base ImmutableMapEntry class terminal
and sharing the subclasses for non-terminal nodes
in the hash table. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89319446
",216636,1737,95207,"lowasser","lowasser@google.com","Colin Decker","cgdecker@google.com"
"3165","google/guava","cdcd91f198719d87c71d4079494acdf7ca321133",1,"2015-03-26 12:35:47-07:00","Eliminate EmptyImmutableSet, replacing it with a
RegularImmutableSet with a null hash table.
Related:
https://github.com/google/guava/issues/1268
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89625833
",216799,1735,95066,"lowasser","lowasser@google.com","Colin Decker","cgdecker@google.com"
"3166","google/guava","e7e0abefddbb35c60ef73e96df197db90c707db2",1,"2015-03-27 11:27:20-07:00","Eliminate EmptyImmutableSortedSet, while we're at
it. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89712042
",216655,1729,94934,"lowasser","lowasser@google.com","Colin Decker","cgdecker@google.com"
"3167","google/guava","07a06bccf9cac98feafc6c279840e866c6bb9ba8",3,"2015-04-02 13:57:18-07:00","Add RandomAccess implementations for
Lists.{equals,indexOf,lastIndexOf}Impl, to
eliminate allocation of the iterator.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=90193421
",216540,1722,94827,"lowasser","lowasser@google.com","Colin Decker","cgdecker@google.com"
"3168","google/guava","34724451a106e1d5eab3af20e566f7fbbd8b08ae",4,"2015-04-07 13:21:45-07:00","Make
CacheLoader.UnsupportedLoadingOperationException
and RemovalNotification's constructor public.
Both may be needed for custom Cache
implementations. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=90540168
",216554,1723,94865,"cgdecker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3169","google/guava","b52c926ad08f04f2d5c95e313cffaac6a9c28d9c",1,"2015-05-21 09:06:22-07:00","Make TestLogHandler GWT-compatible.  GWT doesn't
have synchronizedList, so I switched to
|synchronized|. The small performance difference
shouldn't matter much. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=94193122
",216788,1726,95113,"cpovirk","cpovirk@google.com","Colin Decker","cgdecker@google.com"
"3170","google/guava","b1bec6df36b82498ce1dc9c91dd5567d074a7808",3,"2015-06-01 15:41:59-07:00","Some enhancements for Futures.transform and
Futures.catching  * extract a template method and
2 subclasses from CatchingFuture and
ChainingListenableFuture.  This will allow us to
eliminate asAsyncFunction() and 2 allocations per
transform  * make CatchingFuture implement
Runnable and save a Runnable allocation  * have
CatchingFuture/ChainingListenableFuture clear all
their fields on cancel, which should prevent
pinning the transformers  * have
rejectionPropagatingRunnable short circuit for
directExecutor() which should save 2 allocations
for users who prefer to pass directExecutor()
explicitly  * have Futures.catching use the
rejected execution exception logic when it makes
sense  https://github.com/google/guava/issues/1995
https://github.com/google/guava/issues/2013
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=94954378
",219729,1732,95425,"lukes","lukes@google.com","Chris Povirk","cpovirk@google.com"
"3171","google/guava","27cb14f4d64cdffaae08190d7514e41dafabe42a",1,"2015-06-03 13:18:05-07:00","Rename AbstractCatchingFuture.running to
""inputFuture."" This matches
AbstractChainingFuture. The ""running"" name was
more appropriate in the days that it used to
sometimes contain the fallback future. That was
necessary for cancellation at the time, but now
that's handled by our use of setFuture().
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95134862
",219703,1732,95422,"cpovirk","cpovirk@google.com","Colin Decker","cgdecker@google.com"
"3172","google/guava","5bab9e837cf273250aa26702204f139fdcfd9e7a",3,"2015-06-30 16:04:44-07:00","Use key insertion order in HashBiMap.  This bumps
memory consumption back up to equal a pair of
HashMaps; the shared entries in both directions
are just enough to pay for the linked list.  On
the other hand, we're not actually allocating any
additional objects, so this shouldn't be a
significant loss for Android. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=97273863
",220657,1736,95466,"Chris Povirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3173","google/guava","15284f71149325e6f389512cf5ba946031ea835f",1,"2015-07-08 08:28:41-07:00","Eagerly check for an appropriate exceptionClass
constructor during calls to Futures.getChecked.
This way, callers that pass a bad exceptionClass
find out unconditionally instead of only when
their Future fails.  We hope for bad
exceptionClass parameters to soon be caught at
compile time: [] API Review: https://docs.google.c
om/document/d/1hUeO_1OJY_xIAHN089p5d9as1uX4M62MBlb
kiLyiJbk/edit  To keep performance acceptable,
cache a set of classes with appropriate
constructors. Use ClassValue, which was introduced
in JDK7. Do the compatibility dance, including
making Animal Sniffer happy by annotating the
class that uses ClassValue. That requires updating
Animal Sniffer to a version that respects the
annotation in more places, perhaps related to
http://jira.codehaus.org/browse/MANIMALSNIFFER-29
I've also updated the Animal Sniffer signatures on
the theory that newer is probably better, although
there is no apparent no impact on Guava.  The cost
of the eager check is performance in the success
case: What used to take ~1.6ns will now take
~3.2ns. This is likely to be swamped by the actual
work being done and by other overhead (like
threads). (This was discussed and approved in API
Review.) The ClassValue implementation is faster
than the fallback version, particularly in the
unlikely case in which users call getChecked()
with many different kinds of exception types.  []
run --run_under=perflab javatests/com/google/commo
n/util/concurrent:FuturesGetCheckedBenchmark -- -i
runtime -DexceptionType=CHECKED
-DotherEntriesInDataStructure=0,12 -Dvalidator=NON
_CACHING_WITHOUT_CONSTRUCTOR_CHECK,CLASS_VALUE,WEA
K_SET https://caliper.[].com/runs/1b73aa59-83d1-42
9d-9ff4-e40cd8f4637a#r:scenario.benchmarkSpec.para
meters.otherEntriesInDataStructure,scenario.benchm
arkSpec.parameters.validator&c:scenario.benchmarkS
pec.parameters.result  Finally, take the
opportunity to start on splitting up Futures.java
and FuturesTest.java:
https://github.com/google/guava/issues/2091
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=97776570
",221065,1738,95882,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3174","google/guava","31fc19200207ccadc45328037d8a2a62b617c029",2,"2015-07-23 02:00:34-07:00","Introduce tryParse function to Longs which accepts
radix parameter. This makes it consistent to Ints
which support this function as well. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=98915993
",221160,1737,95913,"bul","bul@google.com","Colin Decker","cgdecker@google.com"
"3175","google/guava","0fa6eac941722326e776f000089d4065b66354ae",1,"2015-08-03 14:24:09-07:00","Update FluentIterable to explain its relationship
with Stream. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=99760803
",221495,1741,96143,"kevinb","kevinb@google.com","Chris Povirk","cpovirk@google.com"
"3176","google/guava","c115c594de2f63bc710260cfadbe44b3b0e6ba25",2,"2015-09-25 11:08:16-07:00","Disable cancellation causes by default and make
them enableable via a system property.  Also,
remove protected from newCancellationCause.  I'll
eliminate in a followup. ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=103957793
",223053,1746,96566,"lukes","lukes@google.com","Chris Povirk","cpovirk@google.com"
"3177","google/guava","1667927759ca66835d3154c99d25fa4799e507d6",3,"2015-09-28 08:14:29-07:00","Move many implementations out of Futures.java
(https://github.com/google/guava/issues/2091).
Mostly I've moved them to new classes, but I've
also moved rejectionPropagatingExecutor to
MoreExecutors (unmodified except for a new null
check).  This also revealed that the GWT copy-
pasted catching/catchingAsync code was missing use
of rejectionPropagatingExecutor. This is now
fixed.  Also, reformat the moved code.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=104101156
",223055,1752,96561,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3178","google/guava","b01e8df8a7ffdcd3d52c960aadb044fefaafc8ba",1,"2015-09-29 12:40:30-07:00","Fixes to FluentIterable: -add from(E[] elements)
(unmodifiable) -open source of() -open source
of(E, E...) -soon-to-deprecate of(E[])
(modifiable) ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=104226690
",223167,1752,96600,"kak","kak@google.com","Chris Povirk","cpovirk@google.com"
"3179","google/guava","0a686a644ca5cefb9e7bf4a38b34bf4ede9e75aa",4,"2015-11-30 13:30:59-08:00","Ensure the correct removal notification is
published.  Fixes #2101.  Pull request #2122.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=109009756
",186042,1564,81426,"Ben Manes","ben.manes@gmail.com","Chris Povirk","cpovirk@google.com"
"3180","google/guava","621ce7fe1057d8b826093037c58b35bfa4fa6368",1,"2015-12-11 10:44:20-08:00","Open source com.google.common.graph into Guava.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=110008126
",190180,1597,83307,"kak","kak@google.com","Colin Decker","cgdecker@google.com"
"3181","google/guava","2fa06edd823eaa29cb6a5af3e98f296ec1ec0356",2,"2015-12-11 11:35:30-08:00","Prepare Stats et al and Quantiles for beta release
in Guava 20.0. ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=110013555
",193328,1613,84872,"peteg","peteg@google.com","Colin Decker","cgdecker@google.com"
"3182","google/guava","4940d982c1309f1c93a294d20c5018c7000ede43",3,"2015-12-14 15:30:58-08:00","Add LocalCache.getOrDefault implementation.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=110199123
",193631,1615,85040,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3183","google/guava","ad68d5fd2a538672b2a625a8a481e4d6f1930622",2,"2016-01-20 15:34:22-08:00","Shuffling from internal-only change. -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=112626786
",194711,1619,85310,"kak","kak@google.com","Chris Povirk","cpovirk@google.com"
"3184","google/guava","1ef638f369964c1d1f56bd0ae588535c6abd99a4",87,"2016-02-01 12:57:12-08:00","Add overloads to the
Preconditions.check(NotNull|State|Argument)
varargs methods to avoid varargs and boxing
overhead in the case of 1-2 template parameters.
In order to avoid autoboxing and numeric
conversions we need to support all primitive
types.  API review: https://docs.google.com/docume
nt/d/1EJ0dqFIagdOCJZQkrNGgzhnIS-4lSEYi0_GQeUlKJBE/
edit ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=113559037
",195899,1618,86557,"lukes","lukes@google.com","Chris Povirk","cpovirk@google.com"
"3185","google/guava","f6da31136af15dd324d56d253bc17c5b9afe9759",1,"2016-02-23 14:06:21-08:00","Add @CheckReturnValue to Multiset and friends.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=115381146
",196049,1622,84145,"kak","kak@google.com","Chris Povirk","cpovirk@google.com"
"3186","google/guava","892e323fca32945cdfb25395ca6e346dd0fffa5b",27,"2016-02-29 11:54:00-08:00","Add overloads to Preconditions
checkState,checkArgument and checkNotNull to avoid
boxing and varargs for the most common parameter
combinations.  This adds primitive overloads for
all combinations of Object,char,int and long up to
2 parameters and Object only overloads up to 4
parameters.  This covers 92-98% of formatting
calls based on an analysis of googles codebase.
This change is fully binary compatible but only
mostly source compatible.  It is possible that
this cl will call some Preconditions calls to
become ambiguous with respect to overload
resolution.  For example this call  void
foo(Boolean condition, short s) {
checkState(condition, ""%s"", s); }  will fail to
compile with this change.  There are two simple
changes to the invocation that will resolve the
ambiguity.  'condition' can be explicitly unboxed,
or 's' can be explicitly boxed.  We believe that
such situations will be incredibly rare.  See the
JLS 15.12.2 for full information on overload
resolution: https://docs.oracle.com/javase/specs/j
ls/se7/html/jls-15.html#jls-15.12.2 -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=115881707
",196806,1622,84587,"lukes","lukes@google.com","Chris Povirk","cpovirk@google.com"
"3187","google/guava","c1c5dae45283129c67eb7d5d2b5b90eff4c92c4c",1,"2016-04-09 18:26:18-07:00","Graph.java: break out mutation- and edge-specific
methods into subinterfaces: * Network.java: edge-
specific methods (extends Graph) *
MutableGraph.java: mutation methods for Graph
(extends Graph) * MutableNetwork.java: mutation
methods for Network (extends Network) Graph<N, E>
becomes Graph<N>.  Consequential changes: * adding
various new Network-specific classes
(NetworkBuilder, AbstractNetwork, etc.) * adapted
Graph-specific classes to remove edge-related code
Note: Graph does not currently support parallel
edges.  Motivations: * Make graphs without
explicit, first-class edge objects available. *
Remove mutation methods from the top-level
interfaces so that Graph/Network objects supplied
as their parameters don't (contractually) support
modifications.  (And so that the slightly
differing signatures for Graph and Network
mutation methods don't cause user confusion.)
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=119461180
",196627,1635,85102,"jrtom","jrtom@google.com","Chris Povirk","cpovirk@google.com"
"3188","google/guava","e6003692500352e1ba59eee5c93bc21acb3f46c0",1,"2016-04-19 10:49:04-07:00","Stop using exceptions as flow control in
isUriInetAddress().  This causes processes to use
more memory (Object[]s) than they ought to due to
filling in stack traces for the exception.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=120245586
",196736,1636,85115,"rckenned","rckenned@google.com","Chris Povirk","cpovirk@google.com"
"3189","google/guava","1de67afcb295c771fb00a98281c6becf74926e76",1,"2016-04-26 13:03:24-07:00","Predicates.subtypeOf, a correctly-named duplicate
of Predicates.assignableFrom. Deprecate the
latter. Add javadoc.
https://github.com/google/guava/issues/1444
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=120843247
",195776,1640,84883,"kevinb","kevinb@google.com","Chris Povirk","cpovirk@google.com"
"3190","google/guava","7037b865b955e0bbe697e735ed62d644d3a6ff01",1,"2016-05-23 14:33:33-07:00","Add a fallback in Ordering.leastOf to ensure the
worst case of the quickselect component is bounded
to O(k log k). ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=123038053
",196001,1642,85064,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3191","google/guava","681566ebd5f060433f9dfc5324d84b0454ce4fdb",1,"2016-06-04 01:08:14-07:00","Support owner type subtype relationship in
TypeToken.isSubtypeOf() and TypeToken.getSubtype()
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=124038295
",196273,1644,85149,"benyu","benyu@google.com","Chris Povirk","cpovirk@google.com"
"3192","google/guava","d573ee9196951825eb574551322c5b9a2c23b61c",1,"2016-06-07 11:31:55-07:00","Add some missing @Nullable annotations to
InetAddresses. Use static imports for
Preconditions. ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=124267108
",196290,1644,85145,"kak","kak@google.com","Chris Povirk","cpovirk@google.com"
"3193","google/guava","ce340b320b78e7c3c758ece0a56ae17dd8e09a09",2,"2016-06-08 15:29:12-07:00","*Builder, graph classes: support element ordering
using a new ElementOrder class.  MemoryTester: add
accessors for bytesPerElement and
constantOverhead. ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=124401032
",196540,1646,85315,"jrtom","jrtom@google.com","Chris Povirk","cpovirk@google.com"
"3194","google/guava","f941b2d560f71d98c07c049d0a22cdf2f443f5b7",6,"2016-07-06 18:57:56-07:00","An optimization for Graphs and Networks, inspired
by Michael. Introduce ""MapIteratorCache"" and
""MapRetrievalCache"". MapIteratorCache is extremely
light-weight and optimizes the follow case:  for
(N node : graph.nodes()) {   graph.foo(node); }
while MapRetrievalCache is slightly heavier and
additionally optimizes the following cases:
graph.foo(node); graph.bar(node);  OR
graph.foo(node1); graph.foo(node2);
graph.bar(node1); graph.bar(node2); -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=126763076
",196705,1649,85428,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3195","google/guava","501e3353f543e2cb3e0f147ec1329dbc7c7a6f3e",1,"2016-07-13 17:53:29-07:00","Update edgesConnecting().size() and
edgesConnecting().isEmpty() to be more efficient
for Networks with parallel edges. In particular,
take advantage of the cached successor multisets.
Currently the methods are always O(D). This will
also be O(D) if successors hasn't been invoked,
but will be O(1) for future calls. For example,
with something like:  edgesConnecting(n1,
n2).size() edgesConnecting(n1, n3).size()
edgesConnecting(n1, n4).size() ...  All calls
after the first will be O(1), as it invokes
successors(n1). This makes it so that, if someone
has a dense graph with O(N^2) edges, calling
edgesConnecting().size() or
edgesConnecting().isEmpty() on every pair of nodes
is O(N^2) (i.e. amortized O(1)) rather than (N^3).
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=127381761
",196097,1647,85301,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3196","google/guava","1b2cb0589e53da75777f857d526327dfbf0f2890",2,"2016-07-26 08:25:37-07:00","Super source Strings#isNullOrEmpty to improve JS
performance.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=128473677
",196129,1650,85296,"nanj","nanj@google.com","Chris Povirk","cpovirk@google.com"
"3197","google/guava","5803c43d7e79b969b12fb61ed423dbb07fddfc6c",26,"2016-08-01 08:07:52-07:00","Redesign of MapMakerInternalMap with the
motivation of saving a lot of memory by not
wastefully having stuff that's unneeded. The
algorithm (the j.u.concurrent.ConcurrentHashMap-
inspired segments of hash tables) is untouched.
Memory usage of MapMakerInternalMap is important
because it's used under the covers by
Interners#newWeakInterner.  The problems the new
design fixes ---------------------------------
There are four relevant cases of
MapMakerInternalMap, one for each combination of
weak/strong keys and weak/strong values. The old
code implemented all of these exactly the same,
from a memory layout perspective. For example, in
the worst-case of strong-keys-strong-values,
there's the following waste (all numbers assume
64-bit jvm with Xmx < 32G), in decreasing order of
severity:  * per-entry: 16 bytes for the
StrongReference object * per-segment: 32 bytes for
the ReferenceQueue object for the values, 32 bytes
for the ReferenceQueue for keys, 8 bytes for the
storing the references to both of those). * per-
map: 8 bytes for storing the references to
keyStrength and valueStrength, 4 bytes for storing
the reference to valueEquivalence (just comes from
valueStrength).  For maps with strong values,
there's also the minor issue that a new
StrongReference wrapper is created whenever the
value of a key is changed. This puts unnecessary,
albeit probably not that much, pressure on the GC.
The approach ------------  We want to get rid of
the above waste but we don't want to sacrifice any
type safetey. Here's how we do this:  * We
introduce four different entry implementations and
four corresponding Segment implementations (for
each key & value strength pair). These
implementations have optimal memory usage wrt the
waste discussed above. * We introduce a base
InternalEntry interface, parameterized on its own
implementation (i.e. CRTP - https://en.wikipedia.o
rg/wiki/Curiously_recurring_template_pattern).
This is so the Segment implementation can be
generic in the actual Entry type and still be type
safe). * We introduce a base Segment class,
parameterized on its own subclass (CRTP) as well
as on the type of the InternalEntry
implementation. The latter is so that the Segment
implementations know how to safely efficiently
handle the corresponding InternalEntry
implementations. * And, tying it all together, we
introduce a InternalEntryHelper class,
parameterized on the InternalEntry implementation
type. Specific InternalEntryHelper implementations
know how to safely and efficiently deal with the
corresponding InternalEntry and Segment
implementations. * Each of the four
InternalEntryHelper implementation classes are
singletons (they have no state!). The
MapMakerInternalMap has a reference to the
specific InternalEntryHelper implementation it
needs - this is the _only_ overhead of our
approach.  The existing MapMakerInternalMap tests
unfortunately poke around into the internals in a
hacky and unsafe manner. To continue to support
this, we have XXXForTesting methods that do casts
and call into the type-safe methods alluded to
above.  Results -------  Guava's memory benchmark
tl;dr: StrongKeysStrongVals (size = 1M) -> 28.3%
memory savings WeakKeysStrongVals (size = 1M) ->
24.8% memory savings StrongKeysWeakVals (size =
any) -> 48 bytes per-map memory savings
WeakKeysWeakVals (size = any) -> no change  Future
Work -----------  The same design optimization
could be applied to LocalCache.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=128986019
",196494,1650,85284,"nharmata","nharmata@google.com","Chris Povirk","cpovirk@google.com"
"3198","google/guava","2febb986da9ae9755dc0ead50c7890480ee87a97",1,"2016-08-15 14:51:46-07:00","Move GraphProperties.isCyclic() to Graphs, delete
the GraphProperties class. Rename method to
hasCycle(), because isCyclic() implies that it
might be O(1). Also to be consistent if we ever
add other ""has"" methods (e.g. hasSelfLoop(),
hasTriangleSubgraph(), etc.).  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=130327382
",197022,1660,85706,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3199","google/guava","6e62ae569837d8d2fc9d51c3ac6eddf0468f9143",1,"2016-08-15 15:07:41-07:00","Define equality for Graphs so that a Graph never
equals a ValueGraph. This allows ValueGraphs to
have the expected behavior when you query
valueGraphA.equals(valueGraphB) (i.e. values are
taken into account as well).  Since ValueGraph now
defines its own equals/hashcode, add
AbstractValueGraph to facilitate clients getting
this behavior.  Add ValueGraph versions of
copyOf() and inducedSubgraph().  Add a package-
private ForwardingGraph class for the non-value
graph classes (ConfigurableMutableGraph,
ImmutableGraph) to use.  Rename
AbstractConfigurable* classes to Configurable*
(and make non-abstract).  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=130329432
",197125,1661,85778,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3200","google/guava","ec6f0cffe68e0736c04783b61f980f1271064dd9",2,"2016-08-17 12:45:16-07:00","Make equals/hashcode methods in
AbstractGraph/Network final, since changing the
behavior of these while still implementing the
interface is incorrect.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=130551324
",197140,1659,85698,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3201","google/guava","22936fd61d4ea05644acec71317003812f3f907b",2,"2016-08-17 12:47:57-07:00","Rename SimpleEdgesConnecting to EdgesConnecting to
be consistent with our naming pattern for
NetworkConnections (*NetworkConnections and
*MultiNetworkConnections).  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=130551638
",197137,1659,85708,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3202","google/guava","eb62df758064852a95a8095b4d3b2ff61a225cd4",2,"2016-08-18 10:20:50-07:00","Optimize directed graphs to consume less memory,
at the cost of additional code complexity. Some
very rough benchmarks also seem to indicate this
has slightly faster runtime. I suspect this is due
to improved cache performance/locality when using
a single Map.  Memory: Directed mutable graphs
consume less memory across the board, with graphs
of small degree benefiting the most (memory
consumption around 75% of previous). Directed
immutable graph memory consumption is more of a
wash - going down slightly for graphs of small
degree and up for graphs of large degree.
Runtime: Adding a few million edges seems to be
about 10% faster.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=130653738
",197455,1659,85775,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3203","google/guava","484e083653bef124948c449edc56195323b8d00a",11,"2016-08-23 09:15:07-07:00","Add @Nullable annotations.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=131061728
",197864,1661,85708,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3204","google/guava","192c4b1c1dfbae11a3b4705f135ede409faf3426",4,"2016-07-31 08:33:13-07:00","Add some missing @Nullable annotations.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=132065891
",198155,1662,85801,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3205","google/guava","58986e98ddc00501be697faef89c8ac454b94ac5",4,"2016-09-30 04:41:10-07:00","Apply a handful of automated ""returns @Nullable""
suggestions.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=134770298
",197541,1657,85650,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3206","google/guava","73e382fa877f80994817a136b0adcc4365ccd904",32,"2016-11-03 12:04:47-07:00","Release Java 8 changes to Guava.  (Note: This will
break the public Guava GWT tests. We'll come back
to fix them.)  Fixes
https://github.com/google/guava/issues/2585,
https://github.com/google/guava/issues/2479,
https://github.com/google/guava/issues/2029, and
probably various other issues :)  Also relevant:
https://github.com/google/guava/issues/2591
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=138100073
",201713,1678,86959,"cgdecker","cgdecker@google.com","Colin Decker","cgdecker@google.com"
"3207","google/guava","f81aa2d4ebdd92d2594989eabce878b60327e8a4",7,"2016-12-06 11:29:55-08:00","Annotate Multimap with @CompatibleWith annotations
to enforce type-compatibility with keys and values
as appropriate.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=141203238
",201787,1679,87056,"glorioso","glorioso@google.com","Chris Povirk","cpovirk@google.com"
"3208","google/guava","17b120d7ec6fb29abf8f128ce270c0c647661e7b",2,"2016-12-12 08:35:44-08:00","Remove unneeded JSNI from Objects.equals
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=141768910
",201819,1679,87103,"goktug","goktug@google.com","Ron Shapiro","ronshapiro@google.com"
"3209","google/guava","d4c3c2da7ecaf514c649b836470b6f7d86009c34",12,"2016-12-15 11:12:36-08:00","Annotate Table and Multiset with @CompatibleWith
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=142164308
",202162,1679,87241,"glorioso","glorioso@google.com","Chris Povirk","cpovirk@google.com"
"3210","google/guava","d0dc9ce896df6299de427063fa69bd348937ef1f",1,"2017-01-17 20:02:14-08:00","Now that ValueGraph no longer extends Graph,
change all the common.graph interfaces to handle
equals()/hashCode() ""normally"". Deprecate
Graphs.equivalent().  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=144788407
",202656,1682,87539,"jasexton","jasexton@google.com","Chris Povirk","cpovirk@google.com"
"3211","google/guava","e3f9ba6a707b03559910bceffb74244ac9a8db13",17,"2017-01-19 10:50:14-08:00","Finally add Tables.synchronizedTable, which has
seemed to continually fall through the cracks...
Fixes https://github.com/google/guava/issues/1297
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=144981241
",202869,1685,87581,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3212","google/guava","5090ad5976b8d1641511a62d91cc43716f02e808",2,"2017-03-28 17:11:18-07:00","ImmutableIntArray initial version.  Next steps: -
serializable - gwt, android - add java8-specific
methods - adopt - clone to
Immutable{Long,Double}Array after it seems to
stabilize  []  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=151519883
",204851,1696,88584,"kevinb","kevinb@google.com","Chris Povirk","cpovirk@google.com"
"3213","google/guava","de8d63f55ce4db93b33025aa4ac6a5823c8c3e57",3,"2017-03-29 09:01:35-07:00","Methods that take a node as parameter now take
type N instead of Object.  []  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=151580804
",204839,1696,88590,"jnyman","jnyman@google.com","Chris Povirk","cpovirk@google.com"
"3214","google/guava","38e537e6ed6e9e9a1908a68300c7d18327bc5bc5",1,"2017-04-24 09:49:42-07:00","ImmutableLongArray. Regenerated the int-based
classes using it as the model.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154059885
",382091,3076,170363,"kevinb","kevinb@google.com","Chris Povirk","cpovirk@google.com"
"3215","google/guava","cd8fb02a9c762707e5b7bbc22507dc8569efe430",6,"2017-04-27 11:49:28-07:00","Provide specializations of MapMakerInternalMap's
internal data structures, notably InternalEntry,
for the case where the value type is a singleton.
This is Interners's exact use case.  This CL is a
pure refactor that results in a strict memory win.
No public apis are changed.  I am very happy that
my design made this refactor very easy :)  There
are the following Interners use cases: -
Interners#newStrongInterner -
Interners#newWeakInterner and the following
relevant jvm flags: - -XX:+UseCompressedOops -
-XX:-UseCompressedOops  Of the four combinations
of interner type and pointer size, the most
important use case is probably
Interners#newWeakInterner, since users tend to put
lots of stuff in weak interners. On a 64-bit jvm
with +UseCompressedOops, there's actually no win
because of the way the current object alignment
for WeakKeyStrongValueEntry works out. However,
the current object alignment works out unfavorably
on a jvm with -UseCompressedOops, and so this CL
gives a sizeable win there.  The CL also gives
very large savings for
Interners#newStrongInterner, but I reckon that use
case isn't too important.  Summary of results:
------------------- StrongInternerImpl w/
+UseCompressedOops --> 19.8% savings
WeakInternerImpl w/ +UseCompressedOops -->
0.00016% savings StrongInternerImpl w/
-UseCompressedOops --> 12.3% savings
WeakInternerImpl w/ -UseCompressedOops --> 9.0%%
savings  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=154450505
",382382,3076,170411,"nharmata","nharmata@google.com","Chris Povirk","cpovirk@google.com"
"3216","google/guava","8f7bbd4c73f72b504d79c9c7fc5cb75396483de1",1,"2017-05-02 13:37:41-07:00","ImmutableDoubleArray  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154872857
",383707,3081,170893,"kevinb","kevinb@google.com","Chris Povirk","cpovirk@google.com"
"3217","google/guava","6092a4a8b1087f92d0c3169b9e96d53c54ca95c4",1,"2017-05-02 14:34:41-07:00","Make BloomFilter concurrent.  Original pull
request by Val Markovic at
https://github.com/google/guava/pull/2761
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=154881019
",384383,3089,171541,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3218","google/guava","a8e515863adcb5de5d698e0a4fc1382fa2afbc4a",2,"2017-05-23 15:51:17-07:00","Reduce allocation in Iterators.concat.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=156923366
",385024,3083,171281,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3219","google/guava","a35860eadb4400f069e306ccd76f1a19ecfb3ba1",1,"2017-05-24 16:04:54-07:00","common.graph classes: clean up documentation,
change Object references to generic type
indicators where possible in the internal
implementation classes (this was already done for
the public APIs).  Rename internal ""oppositeNode""
to ""adjacentNode"" for consistency with the
external API.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=157050755
",385052,3083,171277,"jrtom","jrtom@google.com","Chris Povirk","cpovirk@google.com"
"3220","google/guava","304c634d977127085b49f174fd1aafefd09b2bf5",1,"2017-06-12 17:30:34-07:00","Add toString() to some Future subclasses.  I opted
for CANCELLED rather than CANCELED to match
isCancelled().  Example toString: com.google.commo
n.util.concurrent.AbstractFutureTest$11@1ae369b7[s
tatus=PENDING, info=[setFuture=[com.google.common.
util.concurrent.AbstractFutureTest$10@6fffcba5[sta
tus=PENDING, info=[cause=[Someday...]]]]]]
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=158789362
",386256,3102,172484,"clm","clm@google.com","Chris Povirk","cpovirk@google.com"
"3221","google/guava","240a807d3d1cbcad99481ede9530af0cdfadf47c",2,"2017-06-21 14:57:06-07:00","Network.java: fork edgeConnecting() for
java7/Android: * current/.../Network.java now
provides   java.util.Optional<E> edgeConnecting(N,
N)   E edgeConnectingOrNull(N, N) *
java7/.../Network.java now provides   E
edgeConnectingOrNull(N, N)  Neither current/ nor
java7/ use common.base.Optional in external APIs
any more.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=159748595
",387076,3104,172607,"jrtom","jrtom@google.com","Chris Povirk","cpovirk@google.com"
"3222","google/guava","654a2bb847f80eb08bc47e6fbf021fd099ba0ac4",1,"2017-07-05 17:26:43-07:00","Open up pendingToString()  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=161027032
",387715,3106,172830,"clm","clm@google.com","Chris Povirk","cpovirk@google.com"
"3223","google/guava","66b3e26aadf5ec82808a0965b2a894addb0970e9",2,"2017-07-12 16:46:12-07:00","ValueGraph.java: restore edgeValueOrNull() to
edgeValueOrDefault().  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=161738013
",387775,3106,172918,"jrtom","jrtom@google.com","Chris Povirk","cpovirk@google.com"
"3224","google/guava","4a6ce819542d5fe440bd5d13956bb4e46084325c",2,"2017-07-13 13:35:55-07:00","common.graph: create (package-protected)
ForwardingValueGraph and ForwardingNetwork
classes, and use those (and ForwardingGraph) to
simplify the implementation of the Transposed*
inner classes in Graphs.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=161856111
",388007,3110,173042,"jrtom","jrtom@google.com","Chris Povirk","cpovirk@google.com"
"3225","google/guava","cf1478062f646ec0d7e1d96f8ab52e7194b50ce8",2,"2017-07-20 12:20:56-07:00","Fix interruption leak in submitAsync and
whenAllComplete().callAsync().  There are two bugs
in the handling of TrustedListenableFutureTask:
1. Returning an future that was cancelled with
interruption calls setFuture(), which then calls
interruptTask() on the output future - this then
calls InterruptibleTask.interruptTask(), which
happily interrupts the thread that
directExecutor.execute() was called on.  2. The
thread that InterruptibleTask runs on is
referenced forever, and CombinedFuture nulls out
its reference to InterruptibleTask in afterDone()
- which is called after interruptTask. This means
that if the setFuture() path is taken, then
cancel(true) is called, the thread that called the
callable will be interrupted, even after
InterruptTask.run() has returned.  If we've ever
seen spurious InterruptedExceptions in production,
this could be a cause -
whenAllComplete().callAsync(callable,
executor).cancel(true) can interrupt whatever
thread callable was called on, even long after
call() returns. If that thread is part of a pool
(which it probably always would be), then this
would interrupt whatever unlucky task happened to
be running on that pool thread later.  This CL
adds earlier nulling out of the InterruptibleTask
in TrustedListenableFutureTask, as well as makes
InterruptibleTask robust to having interruptTask
called after runInterruptibly has returned. To
avoid tasks interrupting themselves when they call
setFuture of an interrupted and cancelled future,
a new method allows subclasses to end the
interruption window early - this should also
somewhat reduce the race of directExecutor()
listeners being interrupted.  Additionally, by
splitting CombinedFuture.setValue() into 2
methods, this CL fixes the equivalent of
https://github.com/google/guava/issues/2254 for
Futures.whenAllSucceed/whenAllComplete.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=162649353
",389052,3114,173326,"clm","clm@google.com","Chris Povirk","cpovirk@google.com"
"3226","google/guava","b89a6586f5da3a943e4b412bd61cc6bc199f451f",4,"2017-09-11 10:37:06-07:00","Rewrite EnumMultiset to be directly backed by an
E[] and an int[], avoiding allocation of boxing
objects.  It turns out that copying the enum
constants array allocates less, requires less
code, and avoids boxing overhead.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=168250122
",389802,3113,173300,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3227","google/guava","52047f9d898bbb4bfb4e2c8b63c63be51be28c45",1,"2017-07-27 10:01:18-07:00","Add @GoogleInternal propagateCancellation to
Futures.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=169256636
",391007,3117,174116,"chrisn","chrisn@google.com","Chris Povirk","cpovirk@google.com"
"3228","google/guava","631696beffc2f8f216b3fb0da32605c472935504",38,"2017-09-19 13:33:30-07:00","Add the same overloads that Preconditions has in
Verify.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=169291293
",391903,3117,174636,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3229","google/guava","2927518ac86e8ed1d09038fb2b03c86c894ea5ca",2,"2017-10-05 14:52:05-07:00","Handle InheritableThreadLocals correctly on Java
9.  The internal Finalizer class is used by
FinalizableReferenceQueue. In order to avoid
holding a reference to the ClassLoader that loaded
the class, it is necessary to avoid inheriting any
ThreadLocals in the thread running the Finalizer
code. Previously, we did this with a nasty hack
accessing a private field in Thread. Although that
field still exists in Java 9, private accesses
like these are not allowed by default. This
particularly access is also not needed on Java 9,
since there is now a Thread constructor with a
boolean parameter that says whether to inherit
ThreadLocals. So we use that constructor if it is
present, in preference to the field access.  Fixes
https://github.com/google/guava/issues/2723.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=171212577
",392341,3118,175059,"emcmanus","emcmanus@google.com","Chris Povirk","cpovirk@google.com"
"3230","google/guava","fc992745150d95544fec68b9c6e89b5c3bc44b15",1,"2017-11-15 13:24:54-08:00","Annotate Cache with @CompatibleWith  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=175870941
",394244,3127,176064,"glorioso","glorioso@google.com","Chris Povirk","cpovirk@google.com"
"3231","google/guava","328481cb8b86f97f25e051fe16ad3f2f3b988dce",4,"2017-11-16 12:15:05-08:00","Import Map.Entry almost everywhere.  Qualified
types make @Nullable annotations more complicated:
If we're using a type annotation, the ""@Nullable""
has to come between ""Map."" and ""Entry"" rather than
before the whole thing. That means diffs between
the mainline, presuming that it supports type
annotations, and the backport, presuming that it
doesn't. It's not entirely clear that that's how
things will work out, but I can't experiment until
I fix the problem, and I figure I might as well
submit the fix, given that I think we generally
like doing this, at least with Multiset.Entry
isn't in play? But it's not very hard to handle
the problem as it comes up, either, if this CL is
too much.  (Naturally, the same problem will exist
for other types. But this CL fixes the most common
problem.)  RELNOTES=n/a  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=175999659
",394271,3127,176064,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3232","google/guava","102f65c81e7eb2d8831b8d9ceb157ac20ce3329b",2,"2017-11-28 10:30:58-08:00","Add missing @Nullable annotation to
ForwardingSortedSet.unsafeCompare(Object, Object).
RELNOTES=n/a. GOOGLE:  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177182100
",394303,3127,176103,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3233","google/guava","6f390415c441e464779f668f66ab9074e4bc5e3b",2,"2017-11-28 12:02:05-08:00","Add missing @Nullable to Preconditions.
RELNOTES=n/a.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=177196458
",394303,3127,176103,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3234","google/guava","d6e0b581cdb14fc86778e02c5e96c49a6385f429",2,"2017-11-29 20:16:21-08:00","Add missing @Nullable to Finalizer.  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=177402717
",394307,3127,176103,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3235","google/guava","d06014f7567bad25ce6f9c1ad382f7b2e5e89961",1,"2017-11-30 14:55:12-08:00","Add missing @Nullable to the fields in
ImmutableSet.java  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177512477
",394311,3129,176061,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3236","google/guava","b2b942a96a5f05788cdafe40679d5f2db422e1a7",3,"2017-12-01 07:22:44-08:00","Add @Nullable to MoreObjects.  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=177589042
",394323,3129,176065,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3237","google/guava","8b4789c403e9f4e6554852228c5a701a098040ef",5,"2017-12-04 08:05:53-08:00","I tripped and rewrote HashBiMap in the fully
compact form, with no redundant code or storage,
like I had assumed was too much work.  Memory
consumption effects: Unsized: 52 bytes/entry vs.
64 for server-side implementation vs. 74 for
CompactHash* implementation Sized: 40 bytes/entry
vs. 64 for server-side implementation vs. 56 for
CompactHash* implementation  (NB: I did not
include storage of hash codes, as included in the
other implementations.  If we wanted that it'd add
another 8 bytes/entry sized, and probably 12
bytes/entry unsized.)  Effects on
HashBiMapProGuard: 17833 bytes vs. 30172 bytes for
server-side implementation vs. 31159 bytes for
CompactHash* implementation 13 classes vs. 29
classes for server-side implementation vs. 27
classes for CompactHash* implementation 99 methods
vs. 132 methods for server-side implementation vs.
173 methods for CompactHash* implementation
RELNOTES=Rewrites Java 7 HashBiMap, and fixes some
bugs in both versions.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177814345
",394800,3129,176128,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3238","google/guava","2d0957c2bf1ee888f02119e84d824be8393c6145",82,"2017-12-04 18:48:08-08:00","Recognize @NullableDecl in NullPointerTester and
friends.  Also, migrate common.testing to itself
be annotated with @NullableDecl, rather than
@Nullable. I could claim that I did this as a
small-scale test, but honestly I just didn't feel
like pulling the ""real"" changes of this CL out
from the @NullableDecl migrations already present
in my client :)  []  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=177902265
",403545,3129,169794,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3239","google/guava","6f22af40e1526b8c194e9e36d457bcd37680c6a3",1372,"2017-12-07 11:58:43-08:00","Migrate from jsr305 @Nullable to Checker Framework
@NullableDecl. []  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=178274875
",403683,3129,169800,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3240","google/guava","1edf17d8c84a5c15372b82ab29bc7168d4289a96",4,"2017-12-13 09:50:56-08:00","Add missing @Nullable to Shorts.ShortArrayAsList.
RELNOTES=n/a.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=178915723
",403710,3132,169856,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3241","google/guava","2f6e034d896fbd219f52fa47a8d5afd49cb0220c",4,"2017-12-13 15:08:47-08:00","Switch from @Nullable to @NullableDecl.
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=178964631
",403964,3132,169872,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3242","google/guava","c6a2cf04045b3b6852ecc925d0bfd76d77d8936b",1,"2017-12-15 07:29:59-08:00","Add missing @NullableDecl to
OrderedPermutationIterator.nextPermutation
RELNOTES=n/a.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=179190829
",403966,3132,169874,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3243","google/guava","d49a375f71427bf97eed9a31b575f62e24324e6d",17,"2017-12-15 16:30:25-08:00","Make CompactHash data structures package-private
in external Guava.  (Before we didn't expose them
at all externally.  This is so they can be used in
multimap guts in Android.)  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=179254514
",406338,3148,170836,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3244","google/guava","d181e111ada75de243598c2522e725905adcdcc3",2,"2017-12-18 16:43:47-08:00","Use maps directly in ImmutableMultimap.Builder,
instead of delegating to a mutable multimap.
Effects on ImmutableListMultimapProGuard: 135061
bytes => 80938 bytes 122 classes => 74 classes 963
methods => 546 methods  Effects on
ImmutableSetMultimapProGuard: 147668 bytes =>
102365 bytes 131 classes => 91 classes 1024
methods => 693 methods  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=179487542
",406407,3148,170848,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3245","google/guava","b3b74c0ddbd8dbd9e4307661143de574adb3400f",4,"2017-12-19 11:00:06-08:00","Add missing @NullableDecl on fields in google
common base.  RELNOTES=n/a.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179576682
",406459,3148,170848,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3246","google/guava","ce4bc9bc7b9ae10e2da1ba8c4ade01a69be6f608",1,"2017-12-20 10:54:14-08:00","Add missing @NullableDecl on the fields ""instance""
in Suppliers.  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179706506
",406480,3148,170896,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3247","google/guava","01cfa0b47c2e57029f8d0f7772cdbbb843ec733f",1,"2017-12-20 12:36:04-08:00","Add missing @Nullable annotations on the fields in
the reflect package.  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179720129
",406482,3148,170896,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3248","google/guava","b8e50369243a9ff4603c81328e0c1dc0d626db50",6,"2017-12-21 15:23:58-08:00","Add missing nullness annotations to the fields in
the concurrent package in guava.  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=179866024
",406506,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3249","google/guava","7146b1752454252110bf0f8b414524102462d664",1,"2017-12-22 08:23:23-08:00","Add missing nullness annotations on the fields in
the hash package in guava.  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=179928714
",406508,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3250","google/guava","ac0503b50d25eb3ec2c8e459d24d9664d70664ef",2,"2017-12-22 08:27:10-08:00","Add missing nullness annotations on the fields in
the base package in guava.  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=179929002
",406508,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3251","google/guava","3cc099880dd4183e5fade1ea9524968b2e4e95b0",4,"2017-12-22 08:27:57-08:00","Add mising nullness annotations to the fields in
the io package in guava.  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=179929055
",406516,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3252","google/guava","96294be6f728d3d88a67cc125cca18e32cd99b2e",8,"2017-12-22 12:41:39-08:00","Add missing nullable annotations on the fields in
the cache package.  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179953330
",406528,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3253","google/guava","d0383634dc3c6eb93e31797f13058c5eb331e3dd",2,"2017-12-27 13:18:45-08:00","Push down AbstractMapBasedMultimap.wrapCollection
logic into subtypes.  Effects on
ArrayListMultimapProGuard: 80560 bytes => 62399
bytes 73 classes => 57 classes 575 methods => 426
methods  Effects on HashMultimapProGuard: 91236
bytes => 64797 bytes 80 classes => 57 classes 646
methods => 432 methods  Effects on
LinkedHashMultimapProGuard: 101181 bytes => 74790
bytes 87 classes => 64 classes 720 methods => 507
methods  RELNOTES=n/a  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180216298
",406714,3148,170900,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3254","google/guava","699e66a65dfc803988ddb06998415cd80e9430cf",4,"2017-12-27 13:32:03-08:00","Add @NullableDecl to the fields of TreeMultiset
RELNOTES=n/a.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180217049
",406716,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3255","google/guava","63c0965408de1d39c3a336d2fe6cfb910dc7054b",1,"2017-12-27 13:59:36-08:00","Add @NullableDecl on the field in
TopKSelector.java  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180218819
",406722,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3256","google/guava","56b1cc77ee8f1005f2979bb603981adf5cc05f87",1,"2017-12-27 14:00:32-08:00","Add @NullableDecl on the field in TreeBasedTable.
RELNOTES=n/a.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180218874
",406722,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3257","google/guava","8721f2cfc5a55b7b1608d04d11e531ee72cbf216",3,"2017-12-27 14:07:10-08:00","Add @Nullable on the field in Tables.java
RELNOTES=n/a.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180219605
",406724,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3258","google/guava","5cd74d28a2994554e01cbc33501a13e3ffd09e04",1,"2017-12-27 14:07:39-08:00","Add nullness annotations on the fields in
StandardTable.java  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180219638
",406726,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3259","google/guava","a84923fdb4def9b8c7fd0777d0b66954d91eb2db",2,"2017-12-27 18:48:24-08:00","Add nullness annotations on the fields in
Maps.java  RELNOTES=n/a.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180235376
",406734,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3260","google/guava","99730a15a616b841902ae58a55241e7e1392a80f",3,"2017-12-27 18:51:59-08:00","Add nullness annotations on the fields in
MapMakerInternalMap.java.  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180235523
",406738,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3261","google/guava","9f592b5eaf405c6e886465077755efe609bba1b8",3,"2017-12-27 18:52:09-08:00","Add nullness annotations on the fields in
Lists.java  RELNOTES=n/a.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180235531
",406738,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3262","google/guava","2a045c839c0de9b72d746eed334a267e8879019c",15,"2017-12-28 10:48:58-08:00","Add nullness annotations on the fields in
LinkedListMultimap.java  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180280622
",406738,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3263","google/guava","dab6c597fce2e59f280642bfbe0044f83eb0947f",2,"2018-01-02 11:02:10-08:00","Add nullness annotations on the fields in
ImmutableEntry.java  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180566933
",406682,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3264","google/guava","b6492022b5122cf3f73820d1cc4ce78794558541",4,"2018-01-02 12:15:57-08:00","Add nullness annotations on the fields in
LinkedHashMultimap.java  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180576953
",406682,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3265","google/guava","6824c4d104836e6de387eecf9f3da87ecd57c0d7",2,"2018-01-02 13:30:36-08:00","Add nullness annotations on the fields in
Iterators.java  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180585443
",406682,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3266","google/guava","fff4c80b01b5ff66dcb4e4141666b3b5faebc6b9",4,"2018-01-02 14:16:24-08:00","Add nullness anntations on the field in
AbstractMapBasedMultimap.java  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180591831
",406742,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3267","google/guava","f3fe08a62b99c75dfa107949af399888fb2fa944",1,"2018-01-02 14:18:12-08:00","Add nullness annotations on the fields in Cut.java
RELNOTES=n/a.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180592138
",406742,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3268","google/guava","78cdd38f9731cb27a968fb333275f53c4e79d6ef",1,"2018-01-02 14:39:06-08:00","Add nullness annotations on the field in
AbstractSequentialIterator.java  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180595106
",406746,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3269","google/guava","342e38bc8402d81d536ae1e5461aa6b70f55a107",2,"2018-01-02 14:39:44-08:00","Add nullness annotations on the fields in
HashBiMap.java  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180595157
",406752,3148,170900,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3270","google/guava","002f4bd6008580b4549a424cb279109f2ae4c13d",2,"2018-01-03 11:58:50-08:00","Add nullness on the fields in AbstractBiMap.java
RELNOTES=n/a.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180700096
",406762,3148,170901,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3271","google/guava","d07879cc68d09e76d832582e135692f2ad9becc0",3,"2018-01-03 14:30:17-08:00","Add nullness annotations on the field in
AbstractMapBasedMultimap.java  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180718989
",406809,3148,170909,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3272","google/guava","b2ab1f0a0bf3849085f55acbd01e3768f995aeb7",3,"2018-01-05 09:21:25-08:00","Add nullness annotations on the fields in
LinkedHashMultimap.java  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180936351
",406811,3148,170909,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3273","google/guava","e467252e0db647f1086188ab1093c6fe3294e2ab",2,"2018-01-05 09:25:43-08:00","Add nullness annotations on the fields in
TreeMultiset.java  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180936791
",406811,3148,170909,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3274","google/guava","0be2e30fc0911f2915e1f0ab623d1311ecaac175",2,"2018-01-05 09:28:41-08:00","Add nullness annotations on the field in
ConcurrentHashMultiset.java  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180937110
",406811,3148,170909,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3275","google/guava","8025c8e4fdab14b930fffda9d47aa20fec98aa5f",1,"2018-01-05 09:31:47-08:00","Add nullness annotations on the fields in
StandardTable.java  RELNOTES=n/a.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180937460
",406813,3148,170909,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3276","google/guava","13c2a0b00d4c354dc9406f0d0601bb7aad44e2c7",1,"2018-01-05 09:34:33-08:00","Add nullness annotations on the fields in
MinMaxPriorityQueue.java  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180937758
",406819,3148,170909,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3277","google/guava","419467f34db1a7b57dccd7c225381c1e068c157a",2,"2018-01-05 09:38:43-08:00","Add nullness annotations on the fields in
TreeBasedTable.java  RELNOTES=n/a  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180938258
",406821,3148,170909,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3278","google/guava","992116b28a806a1655a3849b4584eb265d6c2c96",1,"2018-01-05 09:43:33-08:00","Add nullness annotations on the field in
LinkedListMultimap.java  RELNOTES=n/a.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180938849
",406821,3148,170909,"cnsun","cnsun@google.com","Chris Povirk","cpovirk@google.com"
"3279","google/guava","078b85f0c64040c337f297e7e99187f642a92d88",9,"2018-01-08 13:31:25-08:00","Overhaul Android {Hash,LinkedHash}Multiset to
operate much more directly on ObjectCountHashMap,
eliminating many unnecessary classes, allocations,
and even calls to hashCode on the elements.
Effects on HashMultisetProGuard: 25422 bytes =>
20198 bytes 20 classes => 16 classes 163 methods
=> 123 methods  Effects on
LinkedHashMultisetProGuard: 31438 bytes => 21635
bytes 27 classes => 17 classes 197 methods => 141
methods  Effects on ArrayListMultimapProGuard:
58474 bytes => 57991 bytes 54 classes => 53
classes 408 methods => 409 methods  Effects on
HashMultimapProGuard: 60759 bytes => 60277 bytes
54 classes => 53 classes 414 methods => 415
methods  Effects on LinkedHashMultimapProGuard:
70757 bytes => 70274 bytes 61 classes => 60
classes 489 methods => 490 methods  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=181210213
",406772,3147,170835,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3280","google/guava","ce73003d8420a091fd36ca2c7c23deb6437e4fe1",2,"2018-01-16 12:11:23-08:00","Code cleanup.  Fixes #3032  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=182092218
",408002,3147,170939,"shahab","shahab.kondri@gmail.com","Chris Povirk","cpovirk@google.com"
"3281","google/guava","831db2b231dbe0b970ffb37f7fed96ea16d60967",1,"2018-01-17 14:46:45-08:00","Improve allocation behavior of
ImmutableMultiset.Builder.addAll(Multiset).
Effects on ImmutableMultisetProGuard: 33905 bytes
=> 34170 bytes 29 classes => 29 classes 236
methods => 241 methods  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=182273415
",408154,3147,170954,"lowasser","lowasser@google.com","Chris Povirk","cpovirk@google.com"
"3282","google/guava","f7d5b0f6de5568c1901b5fb0fd442330518535c9",1,"2018-01-18 06:57:16-08:00","Remove AbstractMultiset's default O(n) (or worse)
implementations of size(), count(), and clear().
As part of the cleanup: - make
TreeMultiset.clear() (in the normal case) O(n)
rather than something worse (due to rebalancing) -
make AbstractMapBasedMultiset stop allocating its
entrySet() and an entrySet().iterator() during
construction - make TreeMultiset.clear() (in the
normal case), StandardConcurrentMultimap.clear()
and several Multiset view implementations' clear()
methods avoid allocating Entry objects  Maybe it
makes sense to have such default implementations
in AbstractMap, a public type accessible to end
users who might really want a quick and dirty Map.
But AbstractMultiset is package-private, and we'd
probably rather be explicit about when we're
choosing an O(n) implementation.  Also, rename
Multisets.sizeImpl to linearTimeSizeImpl.  Effects
on ArrayListMultimapProGuard: 58546 bytes => 58285
bytes 54 classes => 54 classes 409 methods => 406
methods  Effects on HashMultimapProGuard: 60833
bytes => 60572 bytes 54 classes => 54 classes 415
methods => 412 methods  Effects on
HashMultisetProGuard: 21990 bytes => 21685 bytes
17 classes => 17 classes 150 methods => 147
methods  Effects on LinkedHashMultimapProGuard:
70828 bytes => 70567 bytes 61 classes => 61
classes 490 methods => 487 methods  Effects on
LinkedHashMultisetProGuard: 26100 bytes => 25794
bytes 21 classes => 21 classes 172 methods => 169
methods  RELNOTES=n/a  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=182364268
",408178,3147,170968,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3283","google/guava","38d2f3296b722e7d84a01d31037e31fade13951c",2,"2018-03-23 14:53:26-07:00","Supersource nullToEmpty and emptyToNull in
Strings.java to native JS.  This allows us to
improve performance in docs/xplat code that uses
those methods.  RELNOTES=GWT: Supersource
`Strings.nullToEmpty()` and
`Strings.emptyToNull()`  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=190278952
",410285,3161,171689,"yuxiaotan","yuxiaotan@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3284","google/guava","436d4769bde6cf1928ebef10c8fc8d99b9747c31",1,"2018-05-03 09:29:59-07:00","Fix a few formatting nits  RELNOTES=N/A
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=195263207
",410495,3161,171785,"cushon","cushon@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3285","google/guava","0a2258e6691a22aa7ff2604871b520d44bbac01f",146,"2018-05-08 10:48:52-07:00","Use the type annotation version of @Nullable in
the Java 8 branch  RELNOTES=Use the type
annotation version of @Nullable in the Java 8
branch  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=195842620
",410453,3161,171821,"cushon","cushon@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3286","google/guava","9b4a9dbe4cc44abf5ef8dd915acfffcf00f7c28c",24,"2018-05-14 10:45:40-07:00","Move type annotations immediately before the type
they apply to  Fixes #3145  RELNOTES=N/A
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=196531789
",410315,3161,171819,"Michael Ernst","mernst@cs.washington.edu","Ron Shapiro","shapiro.rd@gmail.com"
"3287","google/guava","7fe1702aeacff37ad4a7aca5d82ac9958e46e639",4,"2018-05-14 16:27:18-07:00","Introduce Strings.lenientFormat(), copied from
Preconditions.format(). Rewrote documentation but
the method body remains unchanged.
RELNOTES=Introduce `Strings.lenientFormat()`,
copied from `Preconditions.format()`.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=196586088
",410397,3161,171887,"diamondm","diamondm@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3288","google/guava","b3a48123f3d7eb9dd9b08ae7354a925ba2138103",2,"2018-05-22 10:53:18-07:00","Suppress exceptions raised from argument's
toString methods during lenient formatting.
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=197588491
",410386,3161,171869,"diamondm","diamondm@google.com","Chris Povirk","cpovirk@google.com"
"3289","google/guava","7975a2f0e678a8e57aacbfd79338b9a5f9481207",2,"2018-07-09 09:11:45-07:00","Add @Nullable to AbstractSequentialIterator's
computeNext() method return value so that []
doesn't complain  RELNOTES=n/a  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=203775669
",410618,3160,171851,"ilevit","ilevit@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3290","google/guava","e662c3db029d6a6f58052b6d88436ecb89cda348",2,"2018-08-13 13:58:24-07:00","Add information about thread wakeup or scheduling
delays to TimeoutExceptions thrown from guava
futures.  RELNOTES=n/a  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=208538024
",411282,3168,171523,"clm","clm@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3291","google/guava","b62d52926b904a8def90fd427acad53d79fa0e9f",2,"2018-09-11 14:04:55-07:00","Introduce listenablefuture and failureaccess
artifacts, plus InternalFutureFailureAccess.
(taken over from CL 210155310 to add Maven setup)
It provides a direct access to the cause of any
failures, so we can avoid unnecessary allocation
of an exception.  Design discussion: https://docs.
google.com/document/d/1_RVTtztq5pqrhs0srvJWHMI7PT1
tA71--iaauV2l5UA/edit  RELNOTES=Created separate
`listenablefuture` and `failureaccess` artifacts,
the latter containing the new
`InternalFutureFailureAccess`. For more details
about `listenablefuture`, see [this announcement](
https://groups.google.com/d/topic/guava-
announce/Km82fZG68Sw).  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=212516713
",411955,3171,171876,"cpovirk","cpovirk@google.com","Chris Povirk","beigetangerine@gmail.com"
"3292","google/guava","af3ee1c5986005e4fdeec6e3430d8d63316bee6b",16,"2018-10-25 11:48:10-07:00","common.graph: adding new EndpointPair-accepting
overloads.  RELNOTES=common.graph: added overloads
to methods accepting pairs of nodes to also accept
EndpointPair; changed behavior of
*Graph.edges().contains() to allow undirected
graphs to accept ordered EndpointPairs.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=218724287
",412882,3171,172285,"jrtom","jrtom@google.com","Colin Decker","cgdecker@google.com"
"3293","google/guava","a890c444e55973384d1370b56afe1a02e7db9c3c",91,"2019-02-14 08:48:16-08:00","Annotate checkNotNull's input and output as
@NonNull.  We don't want to go down the road of
annotating most things @NonNull, as we eventually
want to use tools that assume that that's the
default. However, it's pretty weird for
checkNotNull() to return a @Nullable value in the
minds of some tools, so let's annotate just that
method and see how it goes.  RELNOTES=Annotated
`checkNotNull`'s input and output as `@NonNull`.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=233963788
",413401,3168,172500,"cpovirk","cpovirk@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3294","google/guava","8d76ceb557d1fc9551f00dd4713670806c7f4732",3,"2019-03-21 12:09:55-07:00","Use byte[]/short[]/int[] for hashtable depending
on size  The hashtable is stored as an Object and
cast to the correct type using instanceof checks.
Memory: byte[] sizes (2-89): 12-41% better
(average: 32% better) short[] sizes (90-22937):
20-29% better (average: 24% better) int[] sizes
(22938+): unchanged  Runtime on a Pixel 2:
createAndPopulate: 9% better to 6% worse (average:
4.3% better) get: 1% better to 8% worse (average:
3.5% worse) iterateWithKeySetAndGet: 9% better to
13% worse (average: 3.2% worse)
iterateWithEntrySet: unchanged (doesn't use
hashtable)  Effects on ImmutableMapProGuard: 59105
bytes => 60369 bytes (+2.1%) 21 classes => 21
classes (0%) 200 methods => 201 methods (+0.5%)
Effects on ImmutableBiMapProGuard: 68893 bytes =>
70235 bytes (+1.9%) 25 classes => 25 classes (0%)
232 methods => 233 methods (+0.4%)  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=239644823
",413568,3151,172469,"noackjr","noackjr@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3295","google/guava","62527509110d379f3cb5182b10552bd9aa506f5c",4,"2019-05-30 14:47:19-07:00","Migrate Correspondence subclasses to instead call
Correspondence.from.  This makes the code shorter,
and the subclassing approach is deprecated.  Open-
source note: Correspondence.from was added to
Truth 0.43. (So was Correspondence.transforming,
which I'm using occasionally instead.)
Correspondence.formattingDiffsUsing was added in
Truth 0.44.  END_PUBLIC  []  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=250766819
",413284,3144,172776,"cpovirk","cpovirk@google.com","Chris Povirk","cpovirk@google.com"
"3296","google/guava","41253a22cef1f3708665375eb3a1f09921a8354d",5,"2019-06-24 02:32:04-07:00","Add more @Nullables to variadic parameter lists.
RELNOTES=Add more @Nullables to variadic parameter
lists.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=254718073
",413296,3144,173027,"ghm","ghm@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3297","google/guava","48c42b214820089390c03646f1581dbe56df88a9",5,"2019-07-02 17:35:19-07:00","Add RangeMap#merge, analogous to Map#merge.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=256273536
",413558,3144,173125,"davidmandle","davidmandle@google.com","Ron Shapiro","shapiro.rd@gmail.com"
"3298","google/guava","ddd4a49fb760ccccc7903305f68310f4f9a90587",4,"2019-08-05 10:21:14-07:00","Fix an issue where the InputStream returned by
BaseEncoding.decodingStream(Reader) could fail to
throw DecodingException while decoding an invalid
string.  This was caused by the default behavior
of InputStream.read(byte[], int, int), which
swallows any IOException thrown by any call to the
single-byte read() method other than the first. To
fix it, just override that method with an
implementation that does not swallow any
exceptions.  Fixes
https://github.com/google/guava/issues/3542
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=261712883
",413640,3144,173175,"cgdecker","cgdecker@google.com","David P. Baker","dpb@google.com"
"3299","google/guava","5d20c304e39ca8a920bdfc207a29a75dd0eb8867",1,"2019-08-13 13:54:28-07:00","Fix https://github.com/google/guava/issues/3156 by
implementing a proper
`CollectSpliterators.flatMapTo{Int,Long,Double}`.
Also, modify the existing
`CollectSpliterators.flatMap` to accept `null`
from its `function` by treating it as an empty
`Stream`, like `Stream.flatMap` does. Add tests
for this behavior.  To test that the new methods
also accept `null` through both their
`{Int,Long,Double}Consumer` APIs and their
`Consumer` APIs, add `of{Int,Long,Double}` methods
to `SpliteratorTester`. They test the given
`Spliterator.of{Int,Long,Double}` through both
APIs.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=263208125
",413995,3144,173270,"cpovirk","cpovirk@google.com","David P. Baker","dpb@google.com"
"3300","google/guava","bbc26e180ba06dc45daa1aa6a3d56fd14594bb0e",12,"2019-08-29 06:57:47-07:00","Release the input futures as soon as we submit the
combiner task. But really, redo how we release
resources in general.  This is a followup to CL
265489523, which ""only"" released the input futures
as soon as the combiner task finished running
(which had often happened even before that CL but
hadn't if the combiner returned a Future that was
still pending). That CL was good enough for
practical purposes, but I wanted to better
understand how we release resources.  This CL
standardizes on AggregateFuture.releaseResources()
as the way to null out all fields[*], merging
logic from releaseResources(),
releaseResourcesAfterFailure(), and
AsyncCallableInterruptibleTask.setValue(...). As
part of that, it merges AggregateFuture and
AggregateFutureState/RunningState into a single
object.  [*] OK, except seenExceptions, which gets
its own handling. As a bonus, I believe that this
CL clears seenExceptions earlier than it used to
be cleared in the CombinedFuture case.
Specifically, it clears it when all inputs are
done, rather than when the combiner task has
finished running.  It turns out that blindly
nulling out fields is too aggressive, so we need
to be careful in 2 cases:  1.
CombinedFuture.releaseResources() can't null out
`task` until the future is done or the task is
done running. That's because it may need to
interrupt the task. To handle this, I don't null
out `task` in releaseResources() unless isDone().
To ensure that `task` still gets nulled out as
soon as it's done running, I null it out directly
in afterRanInterruptibly(). (OK, this is another
exception to my claim that releaseResources()
handles nulling out ""all"" fields....)  2. Even if
the output future is done, processCompleted()
sometimes needs access to the original futures in
order to see whether any of them failed. To handle
this, I store them in the listener and pass them
through to processCompleted() (when necessary).
The changes to prod code are net negative in line
count, at least ignoring the added comments. I've
also added a couple tests, only one of which
passed before this CL. And I think the model for
when fields are nulled out is overall clearer
after this CL. So hopefully this CL is a step
forward, despite the complexity of the changes and
the remaining complexity in the code. (I also
included a few unrelated simplifications, like not
bothering to check collectsValues before calling
collectOneValue(...).)  (Aside: This CL's
releaseResources() is like our proposed
afterCommit() API but different. First,
releaseResources() may be called even before set()
or setAsync() in the CombinedFuture case. Second,
CombinedFuture may rely on the fact that it's
called twice in some cases: It's called once when
all inputs complete, but it doesn't null out
`task`, and then it can be called again if the
output is cancelled, at which point it *does* null
out `task`. But that probably doesn't matter too
much because the task was probably handed to an
executor in the meantime, so CombinedFuture is
unlikely to hold the final reference to it.
Anyway, for more discussion of afterCommit(), see
https://github.com/google/guava/issues/2886)  []
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=266130757
",414321,3147,173526,"cpovirk","cpovirk@google.com","Kurt Alfred Kluever","kak@google.com"
"3301","google/guava","950026cc80d35705dbc882b9ded7f5ad41f8b15b",4,"2019-09-06 12:52:43-07:00","Combine ImmediateSuccessfulFuture into
ImmediateFuture.  ImmediateFuture used to have
other implementations, but we switched those to
extend TrustedFuture instead.  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=267654247
",414313,3147,173534,"cpovirk","cpovirk@google.com","Colin Decker","cgdecker@gmail.com"
"3302","google/guava","0e94fb5bb8a6c3a4084854c87335d2e6fa20a97e",12,"2019-10-08 12:54:22-07:00","Address TSAN errors:  1. Suppress safe racy init
in AbstractMultiset and HashBiMap. All the classes
that are stored in the newly annotated fields have
only final fields (except HashBiMap.Inverse, which
inherits AbstractBiMap's keySet and values fields,
which are themselves @LazyInit), so they are safe
to read racily.  2. Mark some graph ""cache"" fields
as volatile. These fields are an optimization:
When the user accesses an entry through iteration
(and sometimes through get(...)), the graph stores
the entry in a field. That way, if the user then
queries it again (such as to look up the value
associated with a key during iteration), the graph
doesn't have to perform a potentially mildly
expensive lookup. But this caching isn't
implemented in a thread-safe way. It *ought* to be
safe to initialize a graph in one thread, safely
publish it, and then read it concurrently from
other threads. But because of the racy reads of
the cached entry fields, I don't think this is
guaranteed to be safe.  RELNOTES=`graph`: Fixed
data race.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=273585560
",414851,3151,173839,"cpovirk","cpovirk@google.com","Nick Glorioso","nick@nickglorioso.com"
"3303","google/guava","c81c0368048d0d7ae0c34ab307a9fcf0c0e2be47",31,"2019-10-22 10:30:49-07:00","Use int[] for entries and byte[]/short[]/int[] for
hashtable  The entries array containing the hash
and next index was reduced from a long[] to int[].
This is achieved by storing only the bits of the
hash not covered by the hashtable mask; the bits
covered by the hashtable mask are implied-by and
can be inferred-from the hashtable bucket index.
By ensuring that next pointers are always less
than or equal to the hashtable mask, everything
needed can be packed into an int[]. Inferring the
missing hash bits from the hashtable bucket index
is only required for rehashing (the hashtable
bucket chains must be walked) and is the source of
the slowdown for unsized instances.  The hashtable
is created as a byte[]/short[]/int[] based on
size, stored as an Object, and cast to the correct
type using instanceof checks.  Android performance
impact varies but stays within +/-15% (average: 3%
better). JVM performance impact generally stays
within +/-15% but unsized instances are up to 42%
worse (average: 5% worse).  CompactHashSet Android
memory usage: byte[] sizes (1-255): 14-48% better
(average: 43% better) short[] sizes (256-65535):
24-40% better (average: 38% better) int[] sizes
(65536+): 0-25% better (average: 22% better)
CompactHashMap Android memory usage: byte[] sizes
(1-255): 10-40% better (average: 34% better)
short[] sizes (255-65535): 19-33% better (average:
31% better) int[] sizes (65536+): 0-20% better
(average: 18% better)  Effects on
CompactHashSetProGuard: 12817 bytes => 14189 bytes
(+11%) 3 classes => 3 classes (0%) 39 methods =>
44 methods (+13%)  Effects on
CompactHashMapProGuard: 19133 bytes => 21883 bytes
(+14%) 11 classes => 11 classes (0%) 75 methods =>
83 methods (+11%)  RELNOTES=n/a  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=276093555
",415275,3155,174153,"noackjr","noackjr@google.com","Colin Decker","cgdecker@gmail.com"
"3304","google/guava","c22d8dd6432cde97a2b2c671cf1585443b20c0cd",4,"2019-11-27 03:35:38-08:00","Support incidentEdgeOrder for directed Graphs
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=282737558
",416123,3159,174498,"jnyman","jnyman@google.com","Nick Glorioso","nick@nickglorioso.com"
"3305","google/guava","0b2aacf4fd74b67e919463936209a119b654e3af",2,"2019-11-27 08:54:09-08:00","Make incidentEdges() return edges in insertion
order  RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=282777947
",416275,3161,174546,"jnyman","jnyman@google.com","Nick Glorioso","nick@nickglorioso.com"
"3306","google/guava","c15cd8040f5d802b396c39911a11eb2a12c4b3a4",4,"2019-12-17 13:17:39-08:00","Use Error Prone's @GuardedBy enforcement to make
sure that mutable state is appropriately
synchronized.  RELNOTES=n/a  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=286044036
",416795,3157,174462,"glorioso","glorioso@google.com","Kurt Alfred Kluever","kak@google.com"
"3307","google/guava","78b54f8250067837828e9b7235d7db6f8d728a24",51,"2019-12-20 10:44:57-08:00","Make Compact(Linked)HashMap fall back to a
java.util.LinkedHashMap if hash flooding is
detected, just as the immutable collections do.
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=286604248
",416815,3159,174499,"lowasser","lowasser@google.com","Chris Povirk","beigetangerine@gmail.com"
"3308","google/guava","32003c2deafd98c272413c0de17c60d01a6672a8",1,"2019-12-23 11:58:55-08:00","Correct @Nullable and use Ints.constrainToRange()
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=286925184
",416829,3159,174521,"noackjr","noackjr@google.com","Chris Povirk","beigetangerine@gmail.com"
"3309","google/guava","66c2f795f2cbc90e104dde9d73ceb484b184b34b",1,"2020-01-21 08:20:55-08:00","Write type annotations on types, not on
declarations  Fixes #3774  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=290747030
",417277,3161,174668,"Michael Ernst","mernst@cs.washington.edu","travis-ci","travis@travis-ci.org"
"3310","google/guava","c892d5699bc640c78e6b35413c68932dbbcfe327",2,"2020-02-10 18:28:17-08:00","Add missing @Nullable.  RELNOTES=n/a
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=294351502
",417359,3162,174708,"rensiyuan","rensiyuan@google.com","Chris Povirk","beigetangerine@gmail.com"
"3311","google/guava","18cdc775081924cfeec87bfe5ff3547ed81784f6",10,"2020-02-13 03:40:08-08:00","Rename 'ConfigurableX' to 'StandardX' for
[Value]Graph, which better captures what these
implementations represent.  Note that this work
was already started in the past with the abstract
StandardGraph tests.  RELNOTES=n/a  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=294879089
",417359,3162,174708,"jnyman","jnyman@google.com","Kurt Alfred Kluever","kak@google.com"
"3312","google/guava","7f6c9654209df8dfa6377422738dc0ab11394509",28,"2020-02-25 14:29:32-08:00","Make Compact(Linked)HashSet fall back to a
java.util.LinkedHashSet if hash flooding is
detected, just as the immutable collections do.
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=297204164
",417720,3162,174724,"lowasser","lowasser@google.com","Chris Povirk","beigetangerine@gmail.com"
"3313","google/guava","b21d5719e6a0ce6f4e2f71eec09bf55908ede062",4,"2020-02-27 08:25:18-08:00","Rename 'ConfigurableX' to 'StandardX' for Network,
which better captures what these implementations
represent.  Note that this work was already done
for [Value]Graph.  RELNOTES=n/a  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=297602755
",417743,3162,174718,"jnyman","jnyman@google.com","Chris Povirk","beigetangerine@gmail.com"
"3314","google/guava","a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d",4,"2020-03-02 10:38:48-08:00","Make nullWriter().append(...) (both overloads)
accept a null CharSequence.  The docs of Writer
are misleading:  """""" An invocation of this method
of the form out.append(csq) behaves in exactly the
same way as the invocation
out.write(csq.toString()) """""" https://docs.oracle.
com/javase/7/docs/api/java/io/Writer.html#append%2
8java.lang.CharSequence%29  But that's not true,
as the docs go on to say:  """""" csq - The character
sequence to append. If csq is null, then the four
characters ""null"" are appended to this writer. """"""
Accepting null in the 2-arg method is arguably
even weirder, but at least the docs call it out
more prominently: https://docs.oracle.com/javase/7
/docs/api/java/io/Writer.html#append%28java.lang.C
harSequence,%20int,%20int%29  Credit to the
Checker Framework for identifying this bug.
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=298388993
",417759,3162,174718,"cpovirk","cpovirk@google.com","Colin Decker","cgdecker@gmail.com"
"3315","google/guava","559e1ac1359e8d5dc0941aa72691698185d65407",265,"2020-03-02 11:15:23-08:00","Migrate from @MonotonicNonNull to @Nullable.  The
features of @MonotonicNonNull don't buy us
anything in our use case, since we check the
fields for null on every access, anyway.  And
@MonotonicNonNull is likely not to be available in
the set of nullness annotations we adopt.  https:/
/checkerframework.org/api/org/checkerframework/che
cker/nullness/qual/MonotonicNonNull.html
RELNOTES=n/a  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=298398523
",417701,3162,174720,"cpovirk","cpovirk@google.com","Nick Glorioso","nick@nickglorioso.com"
"3316","google/guava","bc7248bcb0a987e18cf7a4e7ef92ed458086f4b0",4,"2020-04-23 10:19:59-07:00","Fix GitHub #3873 by reimplementing
Cartesian{Set,List}.contains.  RELNOTES=Fixed
#3873.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=308079008
",418179,3169,174884,"lowasser","lowasser@google.com","David P. Baker","dpb@google.com"
"3317","google/guava","958186c07127f1cd9bb9ba82da99da75745766df",8,"2020-06-08 15:23:01-07:00","Add Comparators.min/max  RELNOTES=`collect`: Added
two-element min and max methods to Comparators.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=315365436
",419126,3171,175336,"chrisn","chrisn@google.com","Kurt Alfred Kluever","kak@google.com"
"3318","google/guava","0ad38b88bd92319508ebc0b28bab5be1fbf1891f",2,"2020-06-23 06:58:15-07:00","Fix memory leak in SingletonImmutableBiMap which
would appear in transpiled J2ObjC code.  The
@RetainedWith annotation can not be used on both
sides of the retain-cycle. The
RegularImmutableBiMap does not have this problem,
because it uses Inverse inner class. This CL
applies similar trick in SingletonImmutableBiMap,
although without additional inner class.
RELNOTES=Update SingletonImmutableBiMap to avoid
retain-cycle in transpiled Obj-C code.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=317856944
",419967,3171,175622,"micapolos","micapolos@google.com","Kurt Alfred Kluever","kak@google.com"
"3319","google/guava","32f2d770f7117015385083ec6e755336ddf18f21",2,"2020-07-13 16:56:16-07:00","Make breadth-first iterators consume the successor
iterators lazily, and refactor to  cut about 150
lines of code.  RELNOTES=Lazier
Traverser#breadthFirst().  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=321062203
",420217,3176,175803,"benyu","benyu@google.com","David P. Baker","dpb@google.com"
"3320","google/ExoPlayer","cadce0ef3f539a36dd8257189301538c050c5964",1,"2017-03-15 20:23:51-07:00","Add @Nullable annotation for an optional field in
CacheDataSource's constructor.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=150278031
",53741,504,27286,"adrianv","adrianv@google.com","Oliver Woodman","olly@google.com"
"3321","google/ExoPlayer","0e6ef0edf69862e6c2ad4d4824b65bd331aa6145",2,"2017-03-23 11:08:11-07:00","Add Sonic library for audio speed adjustment.  Add
methods to ExoPlayer for setting/getting the
playback speed, using SonicAudioProcessor.  Remove
PlaybackParams support, as the AudioTrack
timestamp does not work reliably on Marshmallow.
The platform also uses Sonic and performance
should be comparable between the Java and native
versions on recent Android runtimes.  In a later
change, SonicAudioProcessor will be made public so
it can be used in conjunction with other
processors.  Issue: #26  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=151027121
",54667,510,27634,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3322","google/ExoPlayer","e7a4c28ddeb6649745823a385cd0ee7cb208f19c",8,"2017-03-28 05:55:12-07:00","Fix missing NonNull annotations for overriding
methods  If the super method has the annotation on
an argument, then the overriding method should
have it too.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=151440313
",55057,511,27768,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3323","google/ExoPlayer","9737046e53e1db976e77bfaa53e7901170b14e38",2,"2017-05-26 04:48:11-07:00","Parse SupplementalProperty elements in DASH
adaptation sets  This will be used to merge
adaptation sets that are marked for seamless
switching into single TrackGroups in
DashMediaSource.  Issue: #2431  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=157209358
",59302,529,29464,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3324","google/ExoPlayer","e4617567a3ce23980319d79e961e5043343edf4e",2,"2017-06-13 07:26:53-07:00","Rename DefaultTrackOutput to SampleQueue
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=158842843
",59935,532,29909,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3325","google/ExoPlayer","317a9944997d3bfaccb1deae1ac50acb2b8bf1e4",3,"2017-06-20 02:52:55-07:00","Add type to DrmInitData.SchemeData  At the moment,
only CENC-defined scheme types are known values.
This will allow having more information about the
encryption scheme through the format, which in
turn will allow more informed decisions on format
support.  Issue:#1661 Issue:#1989 Issue:#2089
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=159538907
",60065,532,30001,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3326","google/ExoPlayer","8d74ba4850df39c8ef8cb26e4d3b5b8bbf96be38",1,"2017-06-20 06:32:12-07:00","Add support for cbc1 encryption scheme
Issue:#1661 Issue:#1989 Issue:#2089  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159553419
",60097,532,30016,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3327","google/ExoPlayer","b0a873df258c1f1f81f37622ec03746c6ec509b0",5,"2017-06-25 15:16:11+01:00","Clean up okhttp datasource.
",60588,536,30300,"Oliver Woodman","olly@olly-macbookpro1.roam.corp.google.com","Oliver Woodman","olly@olly-macbookpro1.roam.corp.google.com"
"3328","google/ExoPlayer","4180b9656d46f26cdf62bb2e4d03cd068d569af5",4,"2017-07-06 10:39:00-07:00","Show played ad groups  By default played ad groups
are shown faded out. This helps the user know
whether they will see an ad when they seek to a
given position.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=161098491
",62041,551,31033,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3329","google/ExoPlayer","f77e96bca8ca43746ab67fac3e735fd6b7b4df98",3,"2017-07-18 01:47:59-07:00","Allow to extend FakeDataSource.  Extensions can
perform additional actions whenever data is read
(e.g. sleeping to simulate bandwidth
restrictions).  Additionally, the factory class
can also be overwritten and allows to set the
FakeDataSet later in case it is not available
right away.  Moreover, this class now also uses a
transfer listener similar to all real data
sources.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=162326000
",63242,564,31855,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3330","google/ExoPlayer","4f5ac9e04f192ebacc425754e494a9f380a1b79f",2,"2017-07-18 10:04:10-07:00","Extract Player interface from ExoPlayer  This is
the first step towards facilitating Cast
integration to ExoPlayer.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=162366198
",63377,567,31956,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3331","google/ExoPlayer","8d56f904a068583eed2a387811edcd3643004424",2,"2017-07-20 05:44:21-07:00","make MediaSessionConnector depend only to the
Player interface  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=162604746
",63388,567,32043,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3332","google/ExoPlayer","84d19c464b04e0dc54a133ed5f56fdfb04ed8266",1,"2017-07-27 07:20:41-07:00","Add support for AAC-LATM in transport streams
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=163337073
",64103,571,32513,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3333","google/ExoPlayer","cf6534ea5b50855488f78011d5907ef84101acc8",3,"2017-08-14 08:31:59-07:00","SegmentDownloader loadManifest cleanup.  -
HlsDownloader.loadManifest (previously called
getHlsPlaylist)   suppressed errors for the
offline case, where-as the DashUtil   equivalent
method did not. This change makes them consistent
and moves both other to use ParsingLoadable. -
Enable GZIP for manifest loads in both cases. -
Use Uri rather than String to represent Uris.
Previously the   strings were parsed into Uris
quite deep in the code, which   isn't ideal if the
parsing fails; you'd probably prefer the   error
to occur early at the top level.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165181398
",64857,577,32916,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3334","google/ExoPlayer","8e45bd27df2b37be2b3ac9cfda3774698e497a0a",17,"2017-08-16 07:29:11-07:00","Add nullable annotations to Renderer constructors
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=165437929
",65301,582,33093,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3335","google/ExoPlayer","04d76fa8fc3f997580c38ef1965dd8e6a58a7f29",3,"2017-08-17 07:41:10-07:00","Allow easier ExoPlayer/Cast integration  This CL
adds the fundamental pieces for ExoPlayer/Cast
integration and includes a demo app to showcase
this functionality. However, media queues should
be supported in the first release of this
extension.  Issue:#2283  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165576892
",66099,590,33391,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3336","google/ExoPlayer","8e67837afec166c1a965a9f5d01815e2503ae828",2,"2017-08-18 09:46:31-07:00","Adding conservative @Nullable annotations to
Exoplayer v2 Cache + CacheSpan  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165715928
",66142,592,33442,"mansfieldmark","mansfieldmark@google.com","Oliver Woodman","olly@google.com"
"3337","google/ExoPlayer","01f481984437ce94bed16e71131d0ba084a2b70c",1,"2017-08-25 07:43:15-07:00","Introduce MediaSessionConnector.CommandReceiver
interface and add TimelineQueueEditor.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=166475351
",67498,607,34202,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3338","google/ExoPlayer","44dc3c3ab3ed599145fff5cf0986ee30880396fe",2,"2017-08-29 08:49:51-07:00","Make all renderers DRM aware  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=166852758
",67860,608,34329,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3339","google/ExoPlayer","55e928f75acb78107b1defb702e08aa6f3aa42e5",1,"2017-08-29 08:50:17-07:00","Make LeanbackPlayerAdapter use a ControlDispatcher
+ Misc cleanup  1. Make LeanbackPlayerAdapter use
a ControlDispatcher. This    allows apps to
suppress control events in some circumstances,
and is in-line with our mobile controls. 2. Misc
simplifications and cleanup to
LeanbackPlayerAdapter.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=166852816
",67879,610,34373,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3340","google/ExoPlayer","ca2bfbc56ea91169e2abdb56170340cf28e8e9f7",2,"2017-04-07 12:10:08+01:00","DashManifestParser: Move schemeType up to
DrmInitData  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=167171407
",68396,610,34414,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3341","google/ExoPlayer","6314a0ec82343ee79075e7f8794a69471599b019",1,"2017-09-20 05:38:24-07:00","Add support for Widevine encrypted HLS  This
includes both cbcs and cenc. Will only work for
streams that require a single pssh.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=169382884
",69983,619,35109,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3342","google/ExoPlayer","9c7950f342a9312ea2354df60cf3cdb84efd432c",3,"2017-09-28 00:56:03-07:00","Add AudioSink interface and use it from audio
renderers  This change allows applications to
provide custom AudioSinks, which could be based on
android.media.AudioTrack like AudioTrackAudioSink,
or could be completely custom.  The refactoring is
mostly mechanical and shouldn't result in any
functionality changes.  Some
android.media.AudioTrack-specific details have to
appear in the AudioSink interface so this change
modifies the javadoc on the AudioTrack (now
AudioSink) to note that some methods will have no
effect.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=170311083
",69981,620,35126,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3343","google/ExoPlayer","f9249d23eac4d9143f99f2fe5066b93fc96ceb88",5,"2017-10-17 07:33:19-07:00","Add an extractor flag for ignoring edit lists
Issue: #3358  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=172464053
",71001,622,35668,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3344","google/ExoPlayer","d02e1df4b42edaaaae171c0677730bec677fdc58",1,"2017-10-27 19:22:59+01:00","Clean up VideoFrameReleaseTimeHelper
",71572,628,35913,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3345","google/ExoPlayer","3171c86bdbd65970e3f5f5ce536f1dfc215b8a84",3,"2017-11-08 09:35:11-08:00","Supports Out-of-band, in MPD EventStream.  MPD
file may include multiple EventStreams in its
Periods, which contains Events that the
application may need to handle/respond to. This
change adds support for parsing the
EventStream/Event nodes from MPD file, and
exposing these EventStreams as a metadata sample
stream that application can respond in a similar
way to other metadata events.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=175017697
",72276,634,36315,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3346","google/ExoPlayer","75acfc7957fd9ce2c9a7774266688c83de5c3a10",2,"2017-11-20 04:22:12-08:00","Move media clock handling to its own class.  This
class implements MediaClock itself and handles the
switching between renderer and standalone media
clock.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=176340615
",73581,641,37378,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3347","google/ExoPlayer","36255c42cf66c7be10ec2a4336cda22e094c7bf7",2,"2017-11-24 05:37:49-08:00","Test setPlaybackParameters before preparation
completes  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=176837939
",74271,645,37679,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3348","google/ExoPlayer","c4385c738f12986702cf94ff6330ae2768bdae7b",4,"2017-11-24 08:30:53-08:00","Temporarily fix flakiness of
testPlayEmptyTimeline.  Fixed by explicitly
waiting for the timeline update. This shouldn't be
necessary and will be removed as soon as the
correct order of events can be guaranteed
(timeline change -> state change ->
onSeekProcessed).  The waiting for the timeline
update is implemented by introducing the feature
that the test runner also waits until the action
schedule has finished before stopping the test.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=176848540
",74313,645,37707,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3349","google/ExoPlayer","3afdb24f25d7a224e5963384d0955e3393548527",1,"2017-11-29 09:23:57-08:00","Add support for outputing Emsg messages to a
sideloaded track output.  Currently
FragmentedMp4Extractor only parses and outputs
emsg messages if the flag FLAG_ENABLE_EMSG_TRACK
is set (when there's a metadata renderer that
handles emsg messages). Since there are emsg
messages that only targets the player, which we
want to handle independently from
MetadateRenderer, this CL adds the ability for
FragmentedMp4Extractor to output emsg messages to
an additional TrackOutput if provided,
independently from FLAG_ENABLED_EMSG_TRACK.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=177318983
",74900,645,37935,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3350","google/ExoPlayer","fbccdf594a589abd01d0b0e6fc5dca7229b66b8f",2,"2017-12-04 01:18:58-08:00","Use AdaptiveMediaSourceEventListener for
ExtractorMediaSource  This is a step towards
harmonizing the MediaSource Builders and
(potentially) providing MediaSource factories.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=177783157
",75325,647,38076,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3351","google/ExoPlayer","a155edc5685d8ebe6c15724dfe843a0652693d80",1,"2017-12-05 05:19:48-08:00","Hide subtitles when switching player in
SimpleExoPlayerView  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=177941993
",75637,649,38147,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3352","google/ExoPlayer","a7b11ecb17acb3dbd28b9158a13c9cab0f95efb1",1,"2017-12-06 10:33:23-08:00","Add missing Nullable annotation  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178117289
",76209,650,38260,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3353","google/ExoPlayer","2b0b39ca3898ec71a8aa7b29386f789b3fff26fb",3,"2017-12-08 06:14:14-08:00","Public API for setting seek parameters  Issue:
#2882  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=178370038
",76275,651,38332,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3354","google/ExoPlayer","e419154b86b0aad7ccd0cdcdda8db25d935fedb8",7,"2017-12-08 07:57:06-08:00","Make DashMediaSource.Builder a factory for
DashMediaSources  This is in preparation for
supporting non-extractor MediaSources for ads in
AdsMediaSource.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=178377627
",76298,651,38337,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3355","google/ExoPlayer","8947950b5277fbeb01cf4cafa070bb7db1da094e",6,"2017-12-08 08:32:46-08:00","Make SsMediaSource.Builder a factory for
SsMediaSources  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=178380856
",76315,651,38341,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3356","google/ExoPlayer","8c7fe8a258e88fa513c4a1a88a4fe70c65eec2d4",2,"2017-12-11 05:23:00-08:00","Make ExtractorMediaSource.Builder a factory for
ExtractorMediaSources  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178605481
",76332,651,38325,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3357","google/ExoPlayer","e2bba1567e55eea81552a8810949d78f6d0b71db",3,"2017-12-12 09:03:15-08:00","Add Builder for ImaAdsLoader and allow early
requestAds  Also fix propagation of ad errors that
occur when no player is attached.  Issue: #3548
Issue: #3556  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=178767997
",76526,651,38393,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3358","google/ExoPlayer","a5cd0b87bc504593771b14926f02e84c71d9b490",6,"2017-12-13 08:32:28-08:00","Update SingleSampleMediaSource with
factory/listener changes  - Convert the Builder
into a Factory - Have it use
MediaSourceEventListener - Also made some misc
related fixes to other sources  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178906521
",76772,651,38413,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3359","google/ExoPlayer","c6529344db8128314ff77980bf66275fa743cb27",1,"2017-12-22 05:37:39-08:00","Introduce Handler interface allowing to switch to
other Handlers.  Especially this removes the need
for the Clock interface to directly implement
Handler methods. Instead, we have a separate
Handler interface and the FakeClock is able to
construct such a Handler.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179918255
",78151,654,38718,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3360","google/ExoPlayer","22f8ee37d429e9ed0304da00d507035d7e7ef887",1,"2018-01-02 07:12:25-08:00","Clean-up of player message handling.  Some
readability fixes for PlayerMessage and the
handling in ExoPlayerImplInternal.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180544294
",77809,653,38691,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3361","google/ExoPlayer","0821f578e8ca51fda23b9cddf901ed1f594bd493",1,"2018-01-02 10:04:24-08:00","Remove HandlerWrapper.Factory  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180558741
",77805,653,38688,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3362","google/ExoPlayer","8e8e53c42d7a63ee5f6703d86902ebb102c10af5",1,"2018-01-03 09:18:11-08:00","Add support for Dolby TrueHD passthrough  Issue:
#2147  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=180678595
",77952,653,38683,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3363","google/ExoPlayer","1fc250a9f3c877bb2704096c7848f9687bc15847",1,"2018-01-10 02:51:40-08:00","Make CacheUtil documentation clearer  Also fixed
some other Cache related javadoc.  Issue: #3374
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=181440687
",78253,653,38928,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3364","google/ExoPlayer","6749623cd127f15c014dcf21ade1349fe436ef60",3,"2018-01-16 04:09:09-08:00","Handle DASH `emsg' events targeting player.  For
live streaming, there are several types of DASH
`emsg' events that directly target the player.
These events can signal whether the manifest is
expired, or the live streaming has ended, and
should be handle directly within the player.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=182034591
",79071,657,39112,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3365","google/ExoPlayer","c577d9d35191b11b46ec215be4812b96accd06a0",6,"2018-01-18 06:59:30-08:00","Let SimpleExoPlayerView/LeanbackPlayerAdapter bind
with any Player  Also sanitize naming
(PlayerView/PlayerControlView).  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=182364487
",79308,660,39182,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3366","google/ExoPlayer","029c95832cea5a4ac81b1afb75b764595e7338d2",1,"2018-01-18 08:20:35-08:00","Add queue abstraction to ExoPlayerImplInternal.
This gets rid of the manual tracking of this queue
with reading, playing, and loading period holders.
Still keeping these names for queue access
methods.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=182378944
",79366,660,39222,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3367","google/ExoPlayer","4828f275c7177a486fa1518b6242ac962741cb87",5,"2018-01-19 02:10:57-08:00","Make play button behave differently in IDLE and
ENDED states  - In IDLE, the button will now call
a preparer. This allows   removal of the separate
retry button from the demo app. - In ENDED, the
button will seek back to the default position
and play. - Behavior is made consistent with
LeanbackPlayerAdapter.  Issue: #3689
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=182506855
",79465,661,39273,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3368","google/ExoPlayer","8716c0ee32a6c5399d8f2e6b3e4f14563bb14c7f",3,"2018-01-24 06:17:18-08:00","Implement a best-effort DRM session acquisition
approach  Try to delay failure for as long as
possible. That is, propagate DRM session failures
only after an encrypted buffer arrives or clear
sample playback without session is not allowed.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=183076348
",80512,669,39558,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3369","google/ExoPlayer","de8d402aa616597f858602e41032c0032663e41b",1,"2018-01-26 08:08:19-08:00","Merge MediaPeriodInfoSequence into
MediaPeriodQueue  MediaPeriodInfoSequence has
functionality for determining what MediaPeriod
should be loaded next. Move this into the queue as
an initial step towards moving logic concerning
updating the queue of media periods out of
ExoPlayerImplInternal.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=183391114
",80902,673,39724,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3370","google/ExoPlayer","91c52a473007f60f3d1b8df8dc9d78a46b5c7e30",2,"2018-01-29 01:29:57-08:00","Suppress logging for BufferLengthLogAction  It's
really spammy. Decided not to document tag as also
being nullable in case we ever use it for anything
else in the base action class.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=183632944
",80904,673,39725,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3371","google/ExoPlayer","1f6d161d4d33f2d31d456bc701965b472370cdf6",1,"2018-01-29 04:50:15-08:00","Fix proguard configurations  1. When we try and
load something via reflection and find the
class, always throw rather than failing silently
if we    subsequently fail to instantiate an
instance. This is    indicative of a broken
proguard setup, and failing silently    makes it
hard to spot. 2. Add library/core proguard
configuration to ensure extension    renderer
constructors that we access via reflection are
kept. 3. Add demos/main proguard configuration to
ensure ImaAdsLoader    constructor that we access
via reflection is kept. 4. Added IMA proguard file
to hopefully fix #3723, although I    wasn't
actually able to reproduce the issue.  Issue:
#3723  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=183648187
",80955,672,39728,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3372","google/ExoPlayer","2f932bfaf7c31746945a997a852a213a7b7b1d81",1,"2018-01-31 15:20:41-08:00","Clean up message naming in EPII  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=184056034
",81294,673,39764,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3373","google/ExoPlayer","b3da82dc1c9bfb0c5de78e3b001b38fe55098977",1,"2018-01-24 02:54:44-08:00","Open source DownloadService, DownloadManager and
related classes  Issue: #2643  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=184844484
",83818,694,40681,"eguven","eguven@google.com","Andrew Lewis","andrewlewis@google.com"
"3374","google/ExoPlayer","901dd19e3e494aba8a24c1ccfbe800636209d97a",1,"2018-02-05 05:15:40-08:00","Fix media period queue updating for ads  Resolve
the media period for ad playback when resolving a
subsequent period and when receiving a timeline
where the playing period in range (but wasn't
before).  Fix the seek position calculation when a
current ad must be skipped and is followed by
another ad.  Check MediaPeriodInfos match when
checking MediaPeriodHolders, to handle cases where
a future ad should no longer be played. This may
involve playing two content media periods
consecutively.  Issue: #3584  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=184514558
",83910,694,40710,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3375","google/ExoPlayer","b9f9232b9dcfed32b403328f13307c9a47dd9589",2,"2018-02-14 00:41:53-08:00","Release Extractors on the loading thread
Releasing the player released the internal
playback thread once renderers were released.
Releasing a MediaPeriod queued a
Loader.ReleaseTask on the loading thread which
would post back to the playback thread. If the
playback thread had been quit by the time this
happened, the release task wouldn't be run.
Release on the loading thread instead of the
playback thread. This avoids needing to block
releasing the player until the loading threads
have ended, and ensures that release tasks will
run eventually. As part of this change,
ExtractorMediaPeriod's call to Extractor.release
will now run on the loading thread (which means
that all Extractor methods are called on that
thread) and other cleanup in ReleaseCallback will
run on the loading thread instead of the playback
thread.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=185651320
",84521,695,40721,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@rodete-desktop-imager.corp.google.com"
"3376","google/ExoPlayer","55f2b093406e33e773be1071bfa95f105ee77766",1,"2018-02-14 05:31:02-08:00","Use stable order for subtitle buffers with
identical timestamps  Issue: #3782  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=185673731
",84590,694,40746,"olly","olly@google.com","Oliver Woodman","olly@rodete-desktop-imager.corp.google.com"
"3377","google/ExoPlayer","73b6b20fa3e93a3787682b381786a93fb4c98fdb",2,"2018-03-01 10:49:07-08:00","Improve decoder retention logic.  1. Allow
retaining a decoder without any reconfiguration,
in addition    to retaining with reconfiguration
(and not retaining) 2. Fix retention logic for
video decoders to take into account changing
ColorInfo 3. Allow retention of audio decoders
when possible  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=187500285
",86012,702,41042,"olly","olly@google.com","Andrew Lewis","andrewlewis@google.com"
"3378","google/ExoPlayer","3eaab9e2abe8f3e96f132f9bb01c1de0d48487ab",4,"2018-03-05 06:17:14-08:00","Group arguments in MediaSourceEventListener.
There is a large number of repeated arguments in
the callback methods of MediaSourceEventListener.
Grouping them into load related data and media
related data allows to significantly reduce the
amount of boiler plate code and also simplifies
future extensions of either set of data.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=187857252
",85973,703,41087,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3379","google/ExoPlayer","afd11de57dcc7ec01c9c42401ae28234e717b4d3",2,"2018-03-08 10:31:27-08:00","add a PlayerNotificationManager to post media
style notifications.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=188352116
",87060,710,41598,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3380","google/ExoPlayer","4f5663632859e986077d5fcf2ac98314b19d7a4b",3,"2018-03-13 02:45:33-07:00","Add window index and media period id to media
source event listener events.  This allows to
distinguish between media source events of multi-
window and multi-period media sources. In this
change, only media sources currently reporting
events are changed. Proper support in composite
sources will be added in a later change.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=188847366
",87202,711,41661,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3381","google/ExoPlayer","42d7a319cd4569a93bcf43d73015e315637e144a",1,"2018-03-15 03:31:37-07:00","Match codecs starting with ""mp4a"" to different
Audio MimeTypes  Currently, we are treating all
codecs starting with ""mp4a"" as AAC. However, some
codec strings starting with ""mp4a"" are not AAC
format, as should be treated differently.  GitHub:
#3779  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=189163517
",87529,712,41732,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3382","google/ExoPlayer","c7c9a1e9e4805387348aa7aee6eeafff3378cb74",6,"2018-03-15 10:20:46-07:00","Send media source events for fake media sources.
This allows to test sending events when using fake
media sources. The FakeMediaSource now simulates a
manifest load when being prepared. And the
FakeMediaPeriod simulates a media load when being
prepared.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=189205285
",87817,712,41794,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3383","google/ExoPlayer","371f3acea87f6685ee65173ae30cbba5f2b6dd6b",1,"2018-03-19 03:44:07-07:00","Prevent multiple instances of SimpleCache in the
same folder  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=189562865
",87910,713,41835,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3384","google/ExoPlayer","e3a90a44b7988547033128082b57b9bc753a63fb",2,"2018-03-19 06:33:02-07:00","Support media source events for composite media
sources.  This is achieved by automatically
registering a listener for child sources in
compositions. The composite media source has the
chance to correct the reported window index and
media period id in the MediaLoadData of the
events.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=189575414
",88176,713,41883,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3385","google/ExoPlayer","c9d827fa2cfe1fc7017690ac7b13c7ac607c5832",1,"2018-03-20 10:37:21-07:00","Poll the audio timestamp more frequently at the
start of playback  Add logic to poll
AudioTimestamp at different rates depending on
when playback starts and how the audio timestamp
advances.  This fixes a pause about 500 ms after
starting playback that occurs on some devices and
also makes our polling interval match the
recommendations of the AudioTrack documentation.
Issue: #3830 Issue: #3841  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=189765200
",88295,714,41982,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3386","google/ExoPlayer","eb84b144bf5279ac58e9590f8b68040e6557c7df",15,"2018-03-26 05:26:09-07:00","Move window index and media period id out of
MediaLoadData again.  This gives the
MediaSourceEventListener API a consistent look
when new methods are added which only have a
window index and media period id.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=190450270
",88625,716,42063,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3387","google/ExoPlayer","3cbe91a3b0b31ac5b7a9a206e3378f87d662678b",2,"2018-03-26 09:50:11-07:00","Pass DrmSessionManager through SimpleExoPlayer.
This will allow SimpleExoPlayer to auto-register
its own listener before the drm session manager is
used to set-up the renderers.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=190478174
",88791,716,42116,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3388","google/ExoPlayer","a71a87af5c5c54498e6160ffa00ca26abe604be6",2,"2018-03-28 07:18:17-07:00","Amend WaitForTimelineChange action to allow
waiting for arbitrary timeline.  In some
situations, the timeline can't be specified
because it is created internally by the media
source under test. If the test still needs to wait
for a timeline update, this change allows to do
that by specifying an expected timeline of null.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=190768386
",89558,718,42349,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3389","google/ExoPlayer","78ff4af6a7e298207b437a87177f542d10e70708",9,"2018-03-29 01:30:11-07:00","Clean up AudioProcessor implementations  - Ensure
that no memory is used by audio processors that
are always inactive, by   only allocating in
flush() if active. If data was already allocated
but a   processor becomes inactive we assume that
the allocation may be needed in   future so do not
remove it (e.g., in the case of
ResamplingAudioProcessor). - Make
SilenceSkippingAudioProcessor set up its buffers
in flush(), and clarify   that it is always
necessary to call flush() if configure() returns
true. - Make reset() reset all state for all
processors. - Use @Nullable state or empty arrays
for inactive audio processor buffers. -
Miscellaneous style/consistency cleanup.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=190895783
",89612,718,42335,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3390","google/ExoPlayer","09cf92771376a235599272ed65308d74a642ccca",1,"2018-03-29 03:12:37-07:00","Make constructor in EventDispatcher public.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=190907004
",89623,718,42335,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3391","google/ExoPlayer","e3eddc4d2023d828ef380d17dda89826d9d20423",1,"2018-04-04 07:01:58-07:00","Apply new playback parameters only once drained
Previously the SonicAudioProcessor and
SilenceSkippingAudioProcessor would track their
pending playback parameters and only apply them in
flush(). Having the values only take effect once
flushed made the processors a bit more difficult
to use, especially because the value returned by
isActive wouldn't update immediately.  Make
DefaultAudioSink only set the new speed/pitch/skip
silence setting after the audio processors have
drained. This means it's no longer necessary to
keep track of pending parameter values and also
fixes a bug where initial playback parameters
weren't applied because the audio processors
weren't flushed while uninitialized before
DefaultAudioSink called isActive() on them.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=191586727
",89999,718,42441,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3392","google/ExoPlayer","6ea79c8a4e072e1c95b1dffd50c3c9f3a2050c55",2,"2018-04-05 00:44:45-07:00","Fix usage of 'samples' vs 'frames' for gapless
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=191704629
",90011,718,42441,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3393","google/ExoPlayer","f25c7a859a96a71184d09de9700e09869f4f3452",8,"2018-04-05 04:54:11-07:00","Add analytics listener interface and default data
collector.  The data collector keeps track of
active media periods to assign each event to the
correct media period and/or window. This
information, together with other information like
playback position and buffered duration, is then
forwarded with the event to all registered
listeners.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=191726408
",90668,721,42921,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3394","google/ExoPlayer","6b82d1c2bdf7464845d7f31250f87313154ced50",8,"2018-04-05 07:21:18-07:00","Add setters to MediaSource factories for custom
window tag.  This field (formerly ""id"") is almost
impossible to use so far. Having setters in the
factories allows to specify custom tags for all
media sources.  Also added a
ExoPlayer.getCurrentTag() method to retrieve the
tag of the currently playing media source in a
convenient way.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=191738754
",90912,721,42973,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3395","google/ExoPlayer","60aecdf3b306ac2bea2befbffbfb576c87ccca48",2,"2018-04-09 02:24:57-07:00","Expose setExtraAdGroupMarkers on PlayerView
Issue: #4097  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=192100000
",90989,721,42992,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3396","google/ExoPlayer","d4a03d3b36fff530c5420e4d2e34133ad9c03840",1,"2018-04-09 02:32:05-07:00","Remove some superfluous ""custom""s.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=192100852
",90990,721,42991,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3397","google/ExoPlayer","c54b195a2961c6610513d57173406e479e39dd41",1,"2018-04-09 05:44:09-07:00","Allow applications to access codec capabilities
Issue: #3820  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=192115208
",91013,721,43006,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3398","google/ExoPlayer","986095a4a33859d6059b265f16954996dfdbcec3",2,"2018-04-09 08:06:01-07:00","Support FLAC files with ID3 headers.  Support
parsing ID3 tags at the beginning of FLAC files,
even though FLAC spec does not require this.
GitHub: #4055.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=192127929
",91197,723,43065,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3399","google/ExoPlayer","3568dca3b10e8fe0809866d3c7fad4e42c4f00a3",1,"2018-04-10 02:49:27-07:00","Make tests use DefaultTrackSelector  Issue: #3915
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=192259167
",91197,723,43063,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3400","google/ExoPlayer","b4a3385a6fa3feaf032ac2121c4bdeec40e34c34",4,"2018-04-13 02:59:00-07:00","Auto-register analytics collector in
SimpleExoPlayer.  This automatically registers and
deregisters an analytics collector in
SimpleExoPlayer. Doing this also allows to write
integration tests checking whether the reported
window indices and media period ids are correct.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=192742299
",92237,725,43143,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3401","google/ExoPlayer","a8e16f3cfe42a55842ab54a768581c00cd070f2b",1,"2018-04-17 02:02:27-07:00","Simplify DownloadService notification requirements
This makes DownloadService easier to use in
general and when only single notification is used
for all downloads.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=193165982
",92413,726,43213,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3402","google/ExoPlayer","d4aceef8a8bdc868c9d8d2b82c597ab7057cca3a",1,"2018-04-18 12:41:15-07:00","Add getPlaybackError to Player/ExoPlayer interface
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=193400443
",92420,726,43219,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3403","google/ExoPlayer","2b367759cf15f9d73058d918e1fa2cf8b86c9ea6",1,"2018-04-19 08:25:49-07:00","Allow overriding skipping/scaling with custom
AudioProcessors  Issue: #3142  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=193519029
",92594,726,43275,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3404","google/ExoPlayer","117dd6f33f806dfc0a2fb2753a66c402050d9254",1,"2018-04-19 09:49:56-07:00","Mark optional parameters @Nullable  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=193530582
",92596,726,43275,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3405","google/ExoPlayer","9de4e5d7ac032f16d4dc5e6e38d0cbca2f589880",1,"2018-04-20 07:41:18-07:00","Make MediaDescriptionAdapter the last argument  If
the caller wants to pass an anonymous inner class
for the media description adapter, this results in
slightly more readable code.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=193666444
",93133,728,43330,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3406","google/ExoPlayer","5926e20105ac0fd4d1529f605b4e86526e411ed5",1,"2018-04-23 04:48:28-07:00","Use the codec MIME type for configuration  This
may differ from the format MIME type for
audio/eac3-joc.  Issue: #4165  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=193906521
",93188,728,43352,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3407","google/ExoPlayer","ddd603a1ee30dc0ca463f1c29379a25cf30a5413",1,"2018-04-23 10:06:07-07:00","Add DownloadService constructor for notification
channel  Also move NotificationUtil from the UI
module to the core module.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=193941401
",93369,728,43447,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3408","google/ExoPlayer","f7c5e475a7c8db3699f21d121337ccd7f14904b8",13,"2018-04-23 11:04:39-07:00","Prevent native crash in raw decoder  Playback will
still fail if an input sample is larger than 32K,
but will now fail gracefully.  Issue: #4057
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=193951955
",93490,728,43471,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3409","google/ExoPlayer","ddef32c9e2f8d754d46af58566229f179bb00bc8",1,"2018-04-25 04:38:57-07:00","Support multiple EXT-X-MAP tags  Issue:#4182
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=194223312
",93565,728,43453,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3410","google/ExoPlayer","d1fdc518fb9a407e09c3ddad23864dfd5b6a3bbf",2,"2018-04-30 04:54:11-07:00","Use AnalyticsListener in EventLogger.  This
replaces the existing listeners and provides some
additional meta data for each event.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=194770421
",94093,732,43522,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3411","google/ExoPlayer","c8ec77ef96fdf8ac5ee4e267046f5a4a7f7059ee",1,"2018-04-30 12:39:17-07:00","Make MediaSessionConnector use getPlaybackError
It's no longer necessary to stash a reference to
the error yourself. This also correctly handles
the case where setPlayer is called with a player
that's already in an error state.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=194828387
",94111,732,43501,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3412","google/ExoPlayer","59c620c23cb816567ec90755a7ca4a21c13bf6f8",4,"2018-05-01 04:17:01-07:00","Clean up offline notifications  - It's much
cleaner to split completed/error notification
methods. - Make error notification show the
content title in the demo app.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=194920507
",94131,732,43508,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3413","google/ExoPlayer","7799e8fd5e057c536e890fd78e9bc7ef96723ae4",75,"2018-05-02 08:47:52-07:00","Add dependency on nullness annotations and add
missing annotations for DASH.  This includes only
the (hopefully) non-debatable changes for the DASH
module and all needed changes for call into the
core library.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=195097791
",94116,732,43416,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3414","google/ExoPlayer","b23eabd93963fd2e70847e0911a036f0123a9538",10,"2018-05-02 22:32:16-07:00","Add error and buffering views to PlayerView
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=195203362
",94180,732,43442,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3415","google/ExoPlayer","2a06e0020141660ba777c7edc4f824c75f42f515",2,"2018-05-04 09:26:06-07:00","Expose ad load errors via MediaSourceEventListener
The old event listener on AdsMediaSource is
deprecated, in favor of reporting in the normal
way (via MediaSourceEventListener).  Add
AdLoadException with information on what ad/ads
failed to load.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=195426144
",94297,732,43510,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3416","google/ExoPlayer","416d6c9eebc7d2d944e1dd3c4104be07d5d06a95",1,"2018-05-04 18:02:27-07:00","Move download helpers into core library  Also
convert them to exposing periods and track groups,
like regular MediaSources do. This gets us much
closer to being able to use standard track
selection components during offline
initialization. The helper is responsible for
reverse mapping selected tracks onto physical
streams when generating the download action. This
is trivial except for the HLS case, which is a
TODO for now.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=195500826
",94476,738,43664,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3417","google/ExoPlayer","81c37698807c9be6e001ca1dcc1d619c9d60f54a",35,"2018-05-09 03:28:00-07:00","Add missing @Nullable to equals implementations.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=195947382
",94616,738,43716,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3418","google/ExoPlayer","0fce0a0bcbe36cfb5e8bb3c557b6d0e867e2447e",8,"2018-05-11 04:33:34-07:00","Refactor DummySurfaceThread, move code to generate
SurfaceTexture to new class  This makes way for
reusing EGLSurfaceTexture in other places, such as
metadata and frame retriever.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=196240576
",94717,739,43789,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3419","google/ExoPlayer","b3c3717007b36ad2162c20b3dae39d6983ea1856",4,"2018-05-14 07:43:36-07:00","Prevent NPE in PlayerNotificationManager.  The app
can set the player to null while messages from the
player are still in flight. This may cause NPEs.
Issue:#4238  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=196504077
",94735,739,43814,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3420","google/ExoPlayer","972304f16b0f5aba21439785b4c9e2b831e364f6",1,"2018-05-16 05:58:42-07:00","Supports seeking for FLAC files without a
SEEKTABLE.  Currently, ExoPlayer only supports
seeking for FLAC files with a SEEKTABLE. This CL
adds support seeking for cases when the FLAC files
do not have a SEEKTABLE by searching for
individual frames within the file using binary
search.  Github: #1088.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=196816398
",95367,742,43990,"hoangtc","hoangtc@google.com","Andrew Lewis","andrewlewis@google.com"
"3421","google/ExoPlayer","e23392a4fe8e5fea44790c60e79c817a2f4d66e7",2,"2018-05-16 10:34:38-07:00","Update views when a new track name provider is set
Also update TrackSelectionView with nullness
annotations.  Issue: #4263  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=196849706
",95372,742,43996,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3422","google/ExoPlayer","2b9c31a14f177bbfd6c190726dcb5d3fcb75f17b",6,"2018-05-18 05:48:48-07:00","Add MediaSource and DataSource to inject playback
nonce into URLs.  A new playback nonce is created
for each playback of the same item. Thus we need
to inject the nonce dynamically into the data
source factory.  This CL adds the DataSource which
does the actual insertion into the request URLs
and a MediaSource which listens to new media
periods, to request the nonce and to configure the
data source factory for this media period to use
this nonce.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=197134217
",95645,742,44040,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3423","google/ExoPlayer","7b855e45e60a2932105c1ffbf091c937cf3b7679",1,"2018-05-21 10:34:40-07:00","Enable HLS sample queues as soon as possible.
Currently, the sample queues are lazily enabled
when they are first read from. This causes
problems when the player tries to discard buffer
and the HlsSampleStreamWrapper assumes the sample
queue is disabled even though it's actually
enabled but hasn't been read from.  This change
moves setting the sample queue index of the sample
stream back into HlsSampleStreamWrapper. It
enables the sample queues at track selection if
the queues are already built, or immediately after
they have been built for chunkless preparation.
Issue:#4241  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=197415741
",95695,742,44036,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3424","google/ExoPlayer","a98d8fedfabf1a31e932357387afcbc31927d262",3,"2018-05-23 08:43:39-07:00","Fix nullness errors in at least one file per
module to be able to use test.  Some
module/extensions couldn't use the static test so
far because all files needed to be put on the
blacklist. To ensure the test it set up for all
modules, this fixes at least one file for each of
the modules.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=197731449
",95712,742,44037,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3425","google/ExoPlayer","0cb34dcd1ccb5b9534b47030de495e7b5bf5e9d6",2,"2018-05-23 08:53:08-07:00","Add SurfaceCapturer base class, and provide the
first implementation  Use PixelCopy API for the
first SurfaceCapturer implementation. This
supports devices from API 24+.  Github: #3609.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=197732711
",95750,743,44094,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3426","google/ExoPlayer","69b4aa9e36b854ee34a2b104d9569ab7d0767ea7",1,"2018-05-31 09:52:18-07:00","Explicitly null out LoadTask.callback on release
As highlighted by the ref'd issue, we can end up
with memory leaks if Loadable.load implementations
take a long time to return upon cancelation. This
change cuts off one of the two problematic
reference chains.  This doesn't do much about the
ref'd issue, since there's a second reference
chain that's much harder to deal with:
Thread->LoadTask->loadable. But since it's easy
just to cut this one off, I figure it makes sense
to do so.  Issue: #4249  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=198735386
",95881,743,44101,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3427","google/ExoPlayer","7f866b2a070712e75bfeac873c05a2f9c7ce340e",1,"2018-06-01 02:22:31-07:00","Extract HlsPlaylistTracker interface  This allows
injection of custom implementations and
configuration of DefaultHlsPlaylistTracker without
modifying the HlsMediaSource interface.
Issue:#2844  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=198846607
",95978,744,44144,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3428","google/ExoPlayer","b6113763b436d8b2c7d1ceae96ced562726db982",2,"2018-06-01 04:30:33-07:00","Allow lazy preparation of child source in a
concatenation.  This adds an optional parameter to
ConcatenatingMediaSource to prepare child sources
only lazily when are needed. This is helpful for
long playlists of media sources with manifests to
prevent a lot of simultaneous manifest loads.
Issue:#3972  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=198855676
",96036,744,44142,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3429","google/ExoPlayer","007d3c61bd5e98d4f28ed25bd0c169e993f0c99b",1,"2018-06-04 03:00:35-07:00","Allow setting player lazily in AnalyticsCollector.
This helps to use the AnalyticsCollector without
SimpleExoPlayer. Currently, that may be
problematic, if the contructor needs the player,
but in order to create the player, one already
needs the AnalyticsCollector as a listener for the
renderers.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=199105012
",96240,745,44207,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3430","google/ExoPlayer","bdaea799f1ab991081c990f2f2c1f213bfb04de6",1,"2018-06-04 05:47:51-07:00","Fix variable name  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=199120421
",96239,745,44207,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3431","google/ExoPlayer","a5820b7535048cde26928fdc7f4868d7c1ead225",3,"2018-06-04 09:24:05-07:00","Explicitly null MediaPeriod callbacks on release
If a MediaPeriod uses a Loadable, then there are
typically reference chains of the form:  LoadingTh
read[GCroot]->Loadable->MediaPeriod->Player  Where
the player is the MediaPeriod callback. When the
player is released, this reference chain prevents
the player from being GC'd until Loadable
cancellation completes, which may not always be
fast. This in turn will typically prevent the
application's activity from being GC'd, since
it'll normally be registered as a listener on the
player (directly or indirectly via something like
a view).  This change mitigates the issue by
removing references that the MediaPeriod holds
back to the player. The MediaPeriod will still not
be eligible for GC, but the player and application
activity will be, which in most cases will be most
of the leak (in terms of size).  Issue: #4249
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=199143646
",96253,745,44228,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3432","google/ExoPlayer","841ce9df71f6b8ea15f582262e7d848a42699cf3",22,"2018-06-05 02:30:25-07:00","Fix track selection nullability issues.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=199266768
",96294,745,44222,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3433","google/ExoPlayer","1773708fe454b222cfd88f63145e71fac1e485b0",1,"2018-06-05 06:20:30-07:00","Allow passing BandwidthMeter to TrackSelector and
TrackSelection.Factory.  This enabled the player
to specify the bandwidth meter after the track
selector and the track selection factory have been
created.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=199286400
",96460,746,44254,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3434","google/ExoPlayer","cad3de91c92d835e3a438b39897115e992478196",5,"2018-06-06 10:34:21-07:00","Add utility methods for network type and country.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=199487948
",96597,745,44307,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3435","google/ExoPlayer","9f20683a6c9f40c252472e1f83ee1efa5dbe53b8",6,"2018-06-07 02:41:21-07:00","Factor out Handler creation in construtor to
prevent warning suppression.  Using new
Handler(this) in a constructor potentially leaks
an uninitialized object. This is mostly not a
problem because we don't use the Handler within
the constructor. Added a Util method to keep the
warning suppression local.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=199605377
",96612,745,44326,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3436","google/ExoPlayer","48193e2901bf4860d7b2a62645f122de157fc1ea",1,"2018-06-07 06:45:03-07:00","Add QoE field reporter for formats.  This reports
video and audio format selections. See [] for spec
details.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=199627176
",96675,745,44336,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3437","google/ExoPlayer","4bbc93b0228eda41d8960947eed176346b9cd323",1,"2018-06-07 09:06:17-07:00","Add license server URL to SchemeData  Allows
DrmInitData to carry a license server URL when the
media declares one.  Issue:#3393  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=199643743
",96696,745,44348,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3438","google/ExoPlayer","f02788af4b409f4940f810179ac81945a4e7dd2a",1,"2018-06-08 04:45:57-07:00","Add support for registering custom MIME types
Also add a few missing MP4 object types.  Issue:
#4264  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=199778373
",96664,743,44333,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3439","google/ExoPlayer","877c6965c34e542f4dc8f4162f29ff685f0e01e5",2,"2018-06-11 09:59:56-07:00","Correctly report type of ParsingLoadable.  The
helper method only reported DATA_TYPE_UNKNOWN even
if the actual type is known.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=200067296
",96751,743,44358,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3440","google/ExoPlayer","7b10e637e762e02ae930ecd57055e4c993024777",24,"2018-06-12 02:29:25-07:00","Support mu-law and A-law PCM with ffmpeg  Issue:
#4360  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=200186465
",96841,743,44360,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3441","google/ExoPlayer","a75b5fb6a9225a87b89c3779b1d55f8ec7c2c062",1,"2018-06-20 01:38:42-07:00","Pass through all ID3 internal data from udta  Also
switch from using a CommentFrame to a new
InternalFrame type for ID3 data stored with ID
'----', to distinguish internal data from actual
ID3 comments.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=201315254
",96969,744,44379,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3442","google/ExoPlayer","62ee13b11dcfaa504d9cab782662bcf8afcf7578",1,"2018-06-20 07:37:25-07:00","allow apps to set custom metadata  []
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=201350930
",97089,744,44426,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3443","google/ExoPlayer","ddda4a026dd882b44b079c8d7434967799431982",1,"2018-06-22 03:49:56-07:00","Add AudioComponent to the Player interface  This
will make it possible for ImaAdsLoader to access
the player volume when used with SimpleExoPlayer.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=201664189
",97198,744,44433,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3444","google/ExoPlayer","fcc0bd403ff2c9d0abe7f4b7503398e4e4636e06",4,"2018-06-22 04:03:15-07:00","Report uri and response headers of chunks.  Both
values are helpful for event reporting, but are
only available while the data source is open.
Similar to bytesLoaded, they need to be reported
through the Chunk.  Issue:#2054 Issue:#4361
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=201664907
",97254,745,44476,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3445","google/ExoPlayer","f2ce0d898193fd482590643cef6ca57646e4ee9d",4,"2018-06-27 04:21:37-07:00","Make RepresentationHolder immutable.  This allows
to use it as a snapshot of the representation.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=202287466
",97510,746,44660,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3446","google/ExoPlayer","4e35d1a47b5057fdcc6fd137c1b26cf61397dd82",3,"2018-06-27 12:35:43-07:00","MediaSession extension: Allow setting of custom
errors.  Add methods
setCustomErrorMessage(@Nullable CharSequence
message) and setCustomErrorMessage(@Nullable
CharSequence message, int code) to
MediaSessionConnector to report errors to the
MediaSession which are not player errors.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=202352083
",97856,748,44781,"borrelli","borrelli@google.com","Oliver Woodman","olly@google.com"
"3447","google/ExoPlayer","824c0b20a58f16f936bdd633db3dcc9eef8a8e65",1,"2018-06-29 06:31:45-07:00","Add supports for Seeking in AMR format using a
constant bitrate seekmap.  - Extract
ConstantBitrateSeeker from Mp3 package into a more
general ConstantBitrateSeekMap. - Use this seekmap
to implement seeking for AMR format.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=202638183
",98427,750,44797,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3448","google/ExoPlayer","98afaa60d05a1ac9645acf774ca222d68cc84f20",1,"2018-06-29 07:29:02-07:00","Forward TransferListener to media sources.  In the
future, this allows to register the BandwidthMeter
(managed by the player) as a listener to all media
transfers related to this media source.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=202643946
",98508,750,44805,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3449","google/ExoPlayer","6f6c72266ee7cd3c82cef3a45b8c66ce0935d83f",1,"2018-06-29 08:20:55-07:00","Add addTransferListener method to DataSource and
provide BaseDataSource.  The new method allows to
add transfer listeners (e.g. the BandwidthMeter)
after the data source has been created. To
simplify the implementation for subclasses, this
change also introduces a BaseDataSource which
handles the list of listeners and the listener
registration.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=202649563
",98610,752,44869,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3450","google/ExoPlayer","985160a47dd4186ab53b7f83953aea6a8e17dbbf",31,"2018-07-03 03:44:00-07:00","Use BaseDataSource for all internal leaf data
sources.  This allows all leaf data sources (i.e.
ones which do not forward the requests to other
data sources) to accept multiple listeners.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=203097587
",98792,753,44916,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3451","google/ExoPlayer","0b631b05c2fef9321a0cc36716f2606a74908500",4,"2018-07-04 00:57:19-07:00","Optionally fall back to other decoders if init
fails  Codec initialization may fail in creation,
configuration or when start()ing the codec. If
codec initialization fails, there may be other
codecs available that could handle the same
format, but currently ExoPlayer can only try to
use the first listed codec for the input format
and gives up if it fails to initialize.  This
change implements support for optionally falling
back to alternative decoders if initialization
fails. MediaCodecSelector can now return a list of
decoders to try in priority order, and use the
Format when choosing a codec. With the default
implementation, the codecs and order come from
MediaCodecList, and matches the order used
internally by MediaCodec.createDecoderByType
(which implements the same kind of fallback though
only to the creation step, without
configuring/starting the codec).  This feature is
useful for apps that want to play several videos
concurrently on devices that have software
decoders (like OMX.google.h264.decoder), as the
new behavior allows new codecs to be created when
no hardware-accelerated decoders are available.
The list of available codecs is queried when
initializing the codec after a format change that
requires a new codec to be instantiated. When a
decoder fails to initialize it is removed from the
list of available decoders and won't be tried
again until the next format change (or until the
renderer is disabled).  Note: this change does not
affect the renderer capabilities API, as when
checking format support we don't know which codec
will be used.  Issue: #273  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=203242285
",99020,754,44977,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3452","google/ExoPlayer","264bed06f253bc10b2c16c03c3416699e1f0569c",19,"2018-07-05 04:17:22-07:00","Forward addTransferListener for all wrapping data
sources.  This allows to register a listener on an
outer wrapping data source which receives data
transfer events from the wrapped source.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=203358981
",99446,756,45052,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3453","google/ExoPlayer","2c00be1aa3ee9ca5049ea094d231faa2570352ae",1,"2018-07-06 09:16:31-07:00","Add workaround for unmatched track indices in tkhd
and tfhd.  If there is only one track, we can
assume that both boxes refer to the same track
even if the track indices don't match.
Issue:#4083  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=203485872
",99470,756,45073,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3454","google/ExoPlayer","c3df64f1027aba05e9aebd43be1ca204c88e251e",1,"2018-07-10 08:25:17-07:00","Extend TransferListener with
onTransferInitializing and additional parameters.
This allows more fine-grained analysis of
transfers.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=203950327
",99602,756,45118,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3455","google/ExoPlayer","05a31dfd2439eb625de80d0b3ab194b6fbdd283c",1,"2018-07-12 16:08:11+01:00","Format cleanup
",100710,761,45324,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3456","google/ExoPlayer","a26bb350eec38c512571a862cde02a37642111af",1,"2018-07-12 08:16:13-07:00","Add IMA and FLAC tests to the codebase
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=204302135
",101330,768,45460,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3457","google/ExoPlayer","7b2da629ea553aa4b72867b27a13bda2e15efaac",1,"2018-07-16 05:59:01-07:00","Make it possible to disable DownloadService
notifications  Issue: #4389  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=204728270
",101529,769,45584,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3458","google/ExoPlayer","59b18a52d27c9335ce66c98fa3428b5885e16054",2,"2018-07-17 06:45:18-07:00","Make passing BandwidthMeter to TrackSelector and
TrackSelection non-optional.  This was only needed
temporatily until we could ensure that the player
always provides a BandwidthMeter.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=204903640
",101794,769,45638,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3459","google/ExoPlayer","ffdc17d0e05e92796eef6aedba58d4dcbc53e7bf",29,"2018-07-24 02:30:23-07:00","Remove generic type parameter from
TransferListener.  All known instances use
DataSource as generic type and thus code can be
simplified by removing the generic type
altogether.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=205798542
",102960,777,46243,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3460","google/ExoPlayer","138b222457015bbe416de83c2aef24816c18c0de",4,"2018-07-24 03:14:15-07:00","Prevent dummy period id in ExoPlayerImplInternal
from leaking into actual use.  While the timeline
is empty, we keep a dummy MediaPeriodId in
PlaybackInfo with a period index of 0. We leak
this MediaPeriodId in actual use in these
situations:  1. When issuing an
IllegalSeekPosition after preparation. The
timeline becomes     non-empty, but the media
period id stays at its dummy value.  2. When re-
adding sources to a previously empty timeline. The
dummy period id     is used as the start position
for the new non-empty timeline.  This change
makes:  - the constructor of PlaybackInfo using
those dummy values more explicit  - prevents the
issues above by using the correct default position
in the new    non-empty timeline for the above
mentioned cases.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=205803006
",103033,777,46264,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3461","google/ExoPlayer","340d846d9b12877def389bcfd7c272bc7a104b7d",84,"2018-07-24 06:01:10-07:00","Remove some files from the nullness blacklist
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=205816544
",103091,777,46247,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3462","google/ExoPlayer","14216ef53b3dd6fd2907b6bd52965526cafbc70d",11,"2018-07-25 04:08:18-07:00","Nullness fixes for emsg and id3 metadata classes
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=205972857
",103494,777,46238,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3463","google/ExoPlayer","d810352f2c225965aa8211868f74f59a6e0d637f",1,"2018-07-25 10:17:21-07:00","Refactor FlacBinarySearchSeeker.  Rewrite
FlacBinarySearchSeeker and extract out the core
binary search algorithm into BinarySearchSeeker
class so it can be re-used for other formats.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=206012900
",103652,778,46392,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3464","google/ExoPlayer","5da703a588702f381da15cf606f0495d5c1e20e1",6,"2018-07-25 11:06:28-07:00","Fix some nullness warnings in audio classes
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=206021873
",103654,778,46392,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3465","google/ExoPlayer","217247f113dc6cd88f02acd9a46654a48aa7468c",3,"2018-07-26 01:16:43-07:00","Remove naming assumption for passthrough decoders
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=206119357
",103661,778,46399,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3466","google/ExoPlayer","49ef1f3f8ca4c840ad31a62dd1db695ac8c170e3",5,"2018-07-26 07:01:48-07:00","Fix nullness warnings in Util and Assertions, and
provide own castNonNull.  Using our own no-op
castNonNull prevents linking into
checkerframeworks library.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=206152148
",103677,778,46404,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3467","google/ExoPlayer","d3c2cb2aa4fc803d9e854b42158e77fe73defc2e",1,"2018-07-27 02:19:53-07:00","Update remaining DataSource's with new
addTransferListener method.  The new method allows
to add TransferListeners after the DataSource has
been created. Most implementations just forward to
their wrapped upstream DataSource. Implementation
which directly read data implement BaseDataSource
instead.  Also removes the temporary default no-op
implementation in DataSource.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=206289986
",103283,777,46393,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3468","google/ExoPlayer","656c2172ddf6feedeb0bf7b012329ad8342b6fa9",2,"2018-07-27 09:25:27-07:00","Fix event reporting for merging and looping media
sources.  The looping media source doesn't convert
the media period id to the externally visible
media period id. And the merging media source
reports media period creations multiple times
which will break listeners assuming a media period
with a specific id will only be created once.
Also amend the doc for MediaSource.createPeriod to
reflect that media periods created in parallel do
not actually have the same id.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=206327241
",103220,777,46379,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3469","google/ExoPlayer","ded2b2eb2afda996ae25180d1eed1d7cbc236ee0",1,"2018-07-31 00:54:38-07:00","Allow outputting audio to a WAV file  Add
TeeAudioProcessor that doesn't modify the input
audio but writes it to an AudioBufferSink, and
WavFileAudioBufferSink for writing audio to a .wav
file.  This is intended to be used for diagnostics
and debugging.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=206717458
",103438,780,46473,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3470","google/ExoPlayer","5715960304f421feb8dae3671f66a74ff6e40cb6",4,"2018-08-01 02:19:18-07:00","Add Context to SimpleExoPlayer factory methods
This is needed for implementing (optional) support
for audio focus handling in a later change.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=206899837
",104011,783,46585,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3471","google/ExoPlayer","45c1e9eef3dac7b04a064b1eb8c6f3a3305bdeae",3,"2018-08-01 04:32:11-07:00","Add missing Nullable annotation
Player.EventListener.onTimelineChanged  Issue:
#4593  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=206911927
",104014,783,46585,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3472","google/ExoPlayer","d458b90cc7c414acd95f103aab78883984ad1984",2,"2018-08-01 07:40:25-07:00","Parameterize load error handling in
ExtractorMediaSource  Issue:#2844 Issue:#3370
Issue:#2981  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=206927295
",104080,783,46617,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3473","google/ExoPlayer","cc2a8bb85456d813db0fa290504c5009c68b4508",2,"2018-08-01 11:41:59-07:00","Fix encryption data extraction when default values
should be used  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=206963956
",104087,783,46616,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3474","google/ExoPlayer","f549cf5635fd921402c2aabe54750660e765fd03",1,"2018-08-03 01:35:17-07:00","Fix Aes128DataSourceTest portability issue  For
background on why doing this works, see below. I
don't want to change how we get our Cipher
instance in non-test code, since PKCS7 always
works on Android. It's only when the tests are
running on a non-Android host machine that they
can fail. An alternative would be to make it an
androidTest, but androidTests are slow.  ------
Background:  ""While Java considers PKCS5 and PKCS7
padding to be the ""same"" (and one should always
use the string ""AES/CBC/PKCS5Padding"" because
""AES/CBC/PKCS7Padding"" will cause
NoSuchAlgorithmException to be thrown when
initializing an AES block cipher using the Java
crypto API), I consider this a gross misnaming in
the Java platform because the pure technical
definitions of these paddings are not the same.""
Ref:
https://stackoverflow.com/questions/10193567/java-
security-nosuchalgorithmexceptioncannot-find-any-
provider-supporting-aes-e  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=207234518
",104154,783,46628,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3475","google/ExoPlayer","b3b835676688fb293b5010264e47524277e6fe4b",4,"2018-08-03 03:25:03-07:00","Fix DefaultTimeBar accessibility class name  See h
ttps://support.google.com/accessibility/android/an
swer/7661305.  Also fix/suppress nullability
warnings.  Issue: #4611  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=207245115
",104160,783,46631,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3476","google/ExoPlayer","c3d8ad2488496999970d559c758d595410a62cbe",1,"2018-08-06 02:02:48-07:00","Add supports for Seeking in ADTS format using a
constant bitrate seekmap.  - Use
ConstantBitrateSeeker to implement seeking for
ADTS format. Since most ADTS streams are VBR, we
use the average bitrate of the first 1000 frames
as the average bit rate.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=207509651
",104606,784,46764,"hoangtc","hoangtc@google.com","Oliver Woodman","olly@google.com"
"3477","google/ExoPlayer","18d2a2ea2ad4e82961325735e665ba938572d3b6",2,"2018-08-06 04:50:41-07:00","Use LoadErrorHandlingPolicy in
SingleSampleMediaSource  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=207525746
",104759,785,46789,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3478","google/ExoPlayer","829f55e9cd0b24430ccf3864b06040aba6416b72",1,"2018-08-07 06:47:32-07:00","Make AudioCapabilities constructor public
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=207707035
",105107,788,46917,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3479","google/ExoPlayer","af507efb2adbeecde3c58120ae75183594f7ad6a",3,"2018-08-07 07:42:34-07:00","Deprecate/remove DataSource constructors that
accept listeners  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=207713478
",105211,788,47011,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3480","google/ExoPlayer","d3686cf8a2fe4e959ed4e900bda5927b9eec5a88",3,"2018-08-07 13:29:33-07:00","Updating DefaultHttpDataSource to allow for http
methods other than GET and POST, as specified by
DataSpec.httpMethod.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=207769779
",105320,788,47041,"sammon","sammon@google.com","Oliver Woodman","olly@google.com"
"3481","google/ExoPlayer","eda408dc09d4168e87e133adbaf2588e18aa5144",1,"2018-08-08 02:58:32-07:00","Move inflate method to Util class  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=207857927
",105346,788,47053,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3482","google/ExoPlayer","9db0dbc0e9ffb83fd4dcb2ebfa9d77f935834f57",3,"2018-08-09 07:33:04-07:00","Allow SimpleExoPlayer to handle audio focus  Add
automatic audio focus handling to SimpleExoPlayer.
Audio focus handling is an opt-in feature that can
be requested by passing the system's AudioManager
and an AudioFocusConfiguration to
SimpleExoPlayer.setAudioFocusConfiguration.  When
audio focus is being managed by SimpleExoPlayer,
the player will transparently handle pausing
playback during AUDIOFOCUS_LOSS_TRANSIENT, as well
as lowering playback volume during
AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=208045732
",105690,788,47160,"borrelli","borrelli@google.com","Oliver Woodman","olly@google.com"
"3483","google/ExoPlayer","d399c00f9e49be9e74f6c74321692e03816da13f",10,"2018-08-09 12:40:23-07:00","Add support for multiple alternative EXT-X-KEY in
HLS  Also add support for parsing PlayReady DRM
information  Issue:#4180  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=208094290
",105808,788,47175,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3484","google/ExoPlayer","32035e1bf38cba4474373504a5e5b549bb35c50d",6,"2018-08-13 05:50:58-07:00","Fix NPE in ExtractorMediaPeriod  Also turn on
nullity checks for ExtractorMediaPeriod.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=208467644
",105893,788,47188,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3485","google/ExoPlayer","8854aa415fbc39def3dfbd9c97d3a25812305999",1,"2018-08-14 01:45:25-07:00","Add support for setting auxiliary audio effects
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=208611493
",105970,789,47246,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3486","google/ExoPlayer","80f5b7e7b2743e6b51b1f9b2b2d4343c7f57cbeb",1,"2018-08-15 03:25:40-07:00","Check CodecProfileLevels for audio decoders
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=208796064
",106032,789,47270,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3487","google/ExoPlayer","32bd69d4b273869056f384fa81e0c685d38a80ce",4,"2018-08-16 17:02:08+01:00","Cleanup recent merged pull requests
",106093,789,47332,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3488","google/ExoPlayer","4530944ed7e689727aab9efc87f481aa5867b55e",6,"2018-08-16 09:42:45-07:00","Rework HlsPlaylist attribute inheritance  The
reason for the change is that variable
substititution requires master playlist variable
definitions at the moment of parsing.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=208997963
",106131,790,47376,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3489","google/ExoPlayer","b58f6940ebdfd966d6679beb2d9c985ce473fd7d",5,"2018-08-17 12:57:54-07:00","Add VideoFrameMetadataListener  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=209193233
",105943,793,47476,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3490","google/ExoPlayer","d51b98dd1f6290504b4be9d86d71e70ebe217513",1,"2018-08-20 09:24:58-07:00","Replace period index with uid in MediaPeriodId.
The MediaPeriodId with index is only properly
defined together with a timeline containing the
index. Changing it to the period uid allows to use
the MediaPeriodId independent of the corresponding
timeline.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=209430257
",106129,795,47508,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3491","google/ExoPlayer","8927993b0315887914c2b20101bebc8ca7614713",1,"2018-08-22 03:41:18-07:00","Prevent a Demo app NPE on Android TV  The options
menu is not available on Android TV, which
triggers a null pointer exception whenever a
sample is chosen.  This CL is a temporary fix
until we rework the UI to not use an options menu.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=209742076
",106110,794,47481,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3492","google/ExoPlayer","02a8964fe286133bc002b7145c5dd54caab13ffe",8,"2018-08-22 06:08:55-07:00","Support VR180 videos  If available parse and use
spherical metadata:
https://github.com/google/spatial-
media/blob/master/docs/spherical-video-v2-rfc.md
RELNOTES=true  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=209754080
",106488,798,47620,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3493","google/ExoPlayer","9ccbb5bd6d7825021668a41fe1845ebcc0170cf6",4,"2018-08-22 06:51:42-07:00","Add some missing Nullable annotations  Also remove
NonNull, since we assume NonNull by default.
Except where explicitly overriding a method with
NonNull annotated args, in which case we're still
expected to use it.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=209758204
",106487,798,47620,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3494","google/ExoPlayer","74e2384fb6e129e273f955616ad31aa127f505d4",6,"2018-08-23 02:00:37-07:00","Add response headers to LoadEventInfo.  The
response headers of the last load are available
from the loading source when creating media source
events and can be easily forwarded.  Issue:#4361
Issue:#4615  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=209900693
",106593,798,47791,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3495","google/ExoPlayer","3f70454cc2fdd80de30a40f55534322e94500092",2,"2018-08-23 03:19:30-07:00","Fix controller ui toggling when using
SphericalSurfaceView  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=209909845
",106624,799,47815,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3496","google/ExoPlayer","24d04a26e43972629182b9676677d404c073d92d",3,"2018-08-23 10:27:24-07:00","Add support for variable substition in HLS
Issue:#4422  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=209958623
",106774,799,47825,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3497","google/ExoPlayer","38f2f352f9bbed34c77d8d7a8197f64d0de6d6e8",3,"2018-08-24 03:31:11-07:00","Move playback tests off deprecated APIs
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=210077548
",106763,799,47821,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3498","google/ExoPlayer","0da7f6ca08d88d07ab5600cb3d38b85058329a57",1,"2018-08-24 04:44:53-07:00","Use EventLogger in ExoHostedTest  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=210082909
",106727,799,47824,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3499","google/ExoPlayer","a429f4819efedcf970853b578eda7959c03ea22f",2,"2018-08-28 07:28:41-07:00","Use camera motion metadata to stabilize 360 videos
RELNOTES=true  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=210537375
",107174,803,47932,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3500","google/ExoPlayer","6b9e1824ad067636e1f85eb262670e8ec8a5bac1",2,"2018-08-28 09:19:19-07:00","Extend updateSelectedTrack method with additional
information.  This provides the list of currently
buffered media chunks and iterators over the
potential next chunks to the track selection.
Having these two parameters enables more advanced
decision logic based on this data.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=210551812
",107316,803,47953,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3501","google/ExoPlayer","13889c911665e306d3a6e438d8413df632e92295",3,"2018-08-28 09:19:35-07:00","Pass multiple PSSH boxes to Widevine CDM
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=210551848
",107332,803,47979,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3502","google/ExoPlayer","d308fff88d6f23aa2244885190bfdcecf03ca8c9",12,"2018-08-29 06:46:34-07:00","Restructure media period queue tracker in
AnalyticsCollector.  The current structure tries
to associate events to media periods and windows
based on the reported values and the current
timeline. However the reported EventTime may not
always be consistent in case the timeline doesn't
contain windows or media periods yet or not
anymore.  The recent changes to MediaPeriodId
allow to use it as a unique identifer for media
periods independent of the timeline. This enables
more accurate tracking of the media period queue
and prevents reporting events with inconsistent
data.  Issue:#4492 Issue:#4634  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=210713120
",107357,803,47994,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3503","google/ExoPlayer","5335b258de8b2bec4d6bf84288323fc4d200183b",2,"2018-08-31 07:44:12-07:00","Make SceneRenderer implement
VideoFrameMetadataListener and
CameraMotionListener  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=211084127
",107612,804,48039,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3504","google/ExoPlayer","1a800973083c840ae58f7636144d5067d537176b",2,"2018-09-10 03:50:17-07:00","Fix NPE in FrameworkMediaDrm.  Currently causing
GTS tests to fail.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=212244198
",108057,805,48116,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3505","google/ExoPlayer","bf0a7937e20d9e545bb7847688e7e69766411fa9",8,"2018-09-10 09:03:55-07:00","Fix util nullness warnings.  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=212276150
",108065,805,48113,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3506","google/ExoPlayer","6c3c71b5545f74ff6541491fb296d22d4c832b20",1,"2018-09-11 04:54:00-07:00","Fix SampleQueue splicing when sampleOffsetUs != 0
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=212432661
",108136,805,48124,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3507","google/ExoPlayer","a5a7e988e32b307e757de8915d91678f62740a1e",1,"2018-09-12 04:51:51-07:00","Clip DASH periods to their durations  Issue: #4185
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=212619419
",108281,805,48168,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3508","google/ExoPlayer","b17d49ed27304abf94e641135cd4a0102c7ad2fa",4,"2018-09-12 08:33:29-07:00","Add nullness annotations to a few more files
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=212644046
",108292,805,48169,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3509","google/ExoPlayer","1284f9ea4dee579d59410fdfd39b3e737062d35c",13,"2018-09-14 07:40:03-07:00","Add Nullable to message payload.  Not having this
annotation may cause Kotlin implementations to
fail.  Issue:#4802  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=212980643
",108310,805,48184,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3510","google/ExoPlayer","c18ee3f96d9bedaa8c3f08d5a8377c4d25e85df4",7,"2018-09-17 06:32:49-07:00","Add some missing @Nullable to public API to
improve Kotlin compatiblity.  Kotlin will throw
NPE whenever a method returns null or an interface
is called with a null parameter and the respective
values are not marked as @Nullable.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=213262886
",108316,805,48171,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3511","google/ExoPlayer","585806de24ebc72934c55c9e965592d0d581b7b3",2,"2018-09-17 09:02:11-07:00","Clarify doc of components which only allow a main
thread player.  ExoPlayer can be run on a
background thread, but some components (UI and
IMA) only support players on the main thread. This
adds some documentation and assertions for that.
To simplify assertions, this also moves the
getApplicationLooper method from ExoPlayer to
Player.  Issue:#4439  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=213280359
",108339,805,48188,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3512","google/ExoPlayer","e25b7d2148caabe0db75d541662eb99df3ed8080",4,"2018-09-18 02:59:33-07:00","Add wrapper for Log messages to allow settig the
log level.  Currently there is no way to disable
(or reduce) the logcat output generated by
ExoPlayer.  Issue:#4665  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=213421072
",108395,806,48234,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3513","google/ExoPlayer","1726f9e5fea7f39d7915b61f82dc7ecce8ca88b9",2,"2018-09-18 13:11:11-07:00","Don't notify drop frames when
maxDroppedFramesToNotify < 1  With default of
value set to -1, every single dropped frame is
reported because of expression: if (droppedFrames
>= maxDroppedFramesToNotify) {
maybeNotifyDroppedFrames(); }  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=213502573
",108493,806,48265,"sharjeel","sharjeel@google.com","Oliver Woodman","olly@google.com"
"3514","google/ExoPlayer","b07eef6d440740163c09a6cc9f5a68d2d9e0b689",32,"2018-09-19 10:27:11-07:00","Fix drm nullability warnings.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=213650027
",108560,806,48267,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3515","google/ExoPlayer","03fe503f1c4744848a1a2a68950b96d81c2f845c",2,"2018-09-20 09:48:44-07:00","Propagate output format in tunneling mode  From
API 23 this uses the timed format queue. Before
API 23 the format is notified as soon as the
buffer is queued.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=213830729
",108685,806,48298,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3516","google/ExoPlayer","5d5b641c1dec222eb4e504391fc021c35d73f6fd",1,"2018-09-28 13:33:23-07:00","Extend physical display size workaround for ATVs
Extend Sony workaround up to and including Oreo.
Due to a platform issue the Display API couldn't
report 1080p UI and 4k SurfaceView support until
Oreo. Since Oreo it is still common for devices to
misreport their display sizes via Display, so this
change switches to using system properties up to
and including Pie.  On Pie treble may prevent
writing sys.display-size so check for
vendor.display-size instead.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=214987203
",109431,811,48615,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3517","google/ExoPlayer","d97d289b6b3d2021bdb0340c47083079453bc2f0",2,"2018-10-01 05:45:24-07:00","Clarify and improve TrackSelection .enable() and
.disable() calls.  These two methods are meant to
indicate to the track selection that it's started
or stopped being used. This is helpful to schedule
background tasks related to track selection (e.g.
register network change listeners etc.). This
intention is not clearly stated in the method
docs.  Also, all track selections of all
prebuffered periods stay enabled in parallel at
the moment. As the whole purpose of these methods
is to know whether dynamic updates via
updateSelectedTrack may happen, it's better to
only enable track selections of the current
loading media period. That's similar to how we
always forward the loading track selections to the
LoadControl.  This change:  1. Improves the
JavaDoc of TrackSelection.  2. Disables track
selections if loading moves to another period.  3.
Reenables track selection if loading moves back to
a previous period.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=215199987
",109450,811,48621,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3518","google/ExoPlayer","90ca3716aabb38a813e68c56cd2d416368256b9e",8,"2018-10-01 06:44:49-07:00","Improve MediaPeriodHolder documentation and member
access.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=215205796
",109475,811,48713,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3519","google/ExoPlayer","a8b851ce34e2932172bce0bae3b71e176ceb3929",1,"2018-10-02 05:52:56-07:00","Add BasePlayer to avoid code duplication for
common convenience methods.  A lot of methods just
forward to other methods and there is no
conceivable way a player should implement it
another way. Moving these methods to a base player
class allows to remove duplicated code across our
player implementations.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=215374192
",110209,814,48847,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3520","google/ExoPlayer","4386d5d4660d26965f99de1b6247dff7f2215c11",1,"2018-10-02 09:41:59-07:00","Replace DefaultBandwidthMeter with
CountryAndNetworkTypeBandwidthMeter.  This removes
the experimental bandwidth meter and uses it as
the new default.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=215404065
",110104,814,48813,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3521","google/ExoPlayer","9f8c22d7195d55eccca6a1d9b35cef23a3d3dce8",21,"2018-10-03 03:45:00-07:00","Make it possible to use CacheKeyFactory with
CacheDataSourceFactory and
DownloaderConstructorHelper  ------------- Created
by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=215541062
",110172,814,48833,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3522","google/ExoPlayer","645f08af73f4e69fa42a5256e64c11ae504ae2b8",1,"2018-10-03 06:04:16-07:00","Prevent binding to DownloadService
DownloadService isn't designed to be bound.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=215552423
",110172,814,48834,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3523","google/ExoPlayer","7849a5eb52a434883a0c0d33f0b9a9ab20067679",1,"2018-10-03 22:19:13+01:00","Subrip cleanup
",110296,814,48851,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3524","google/ExoPlayer","bfd67992f41a7c5698700322e712544432b23bc2",1,"2018-10-15 12:37:44-07:00","Add ExoPlayer.setForegroundMode  Issue: #2826
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=217189082
",110605,814,49013,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3525","google/ExoPlayer","ee02c6789a6a404a935fb4f23fdffa7d6bd62d9e",2,"2018-10-15 19:44:39-07:00","Support seeking based on MLLT metadata  Issue:
#3241  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=217252254
",110806,817,49080,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3526","google/ExoPlayer","cfcbd2114ba43a7a906577981e383a264d437929",2,"2018-10-21 13:54:07+09:00","Allow setting the ad UI elements to be rendered in
ImaAdsLoader
",110839,817,49086,"ogaclejapan","ogaclejapan@gmail.com","ogaclejapan","ogaclejapan@gmail.com"
"3527","google/ExoPlayer","8c5703e9313db0dde1b37563a1c8c56e0fae2a40",2,"2018-10-23 16:25:40+02:00","Provide http status message to
InvalidResponseCodeException  When response code
alone is not enough to distinguish error
responses, the http status message is helpful.
",110815,817,49075,"Patrik Åkerfeldt","patrik.akerfeldt@gmail.com","Patrik Åkerfeldt","patrik.akerfeldt@gmail.com"
"3528","google/ExoPlayer","5de17b9adc0971b79a6e07bf1d5f980c40427ca6",1,"2018-10-29 06:43:56-07:00","Add support for playing spherical videos on
Daydream  RELNOTES=true  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=219119888
",111439,823,49365,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3529","google/ExoPlayer","4824f352de137f84638289f612f631f08ee7fa39",3,"2018-10-29 07:37:23-07:00","Decouple input format and codec format  This paves
the way to cleanly fix the first two issues listed
in [] onDisabled will null inputFormat, but
nulling of codecFormat will remain tied to the
codec being released.  Issue: #2826  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=219125458
",111449,823,49365,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3530","google/ExoPlayer","1094da2b61a05cacef7036ce1bb81c698bab90f8",1,"2018-10-31 02:42:14-07:00","Fix player state transitions for postroll ads
Before this change, the player state would be
STATE_ENDED then STATE_BUFFERING (when the
postroll ad was marked as played) then STATE_ENDED
again.  Queueing a final content media period with
start point equal to the content duration after a
postroll ensures that the player state doesn't
change to STATE_ENDED transiently.  Switch from
using C.TIME_END_OF_SOURCE to C.TIME_UNSET for
media periods that should not have an end point
and are not followed by an ad.  Content media
periods before postrolls have end position
C.TIME_END_OF_SOURCE. If the postroll ad loads,
its content position is set to the content
duration, which should be known at the point of
loading the postroll, then a final 'empty' content
media period with start position equal to its
duration is queued. If the postroll fails to load,
this empty content media period is queued up
directly after the preceding content media period.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=219443683
",112012,824,49481,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3531","google/ExoPlayer","5f6c907c652c70f44869a7a7e7f70573fc88d89c",3,"2018-10-31 04:58:25-07:00","Reset DefaultBandwidthMeter on network type change
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=219454931
",112136,824,49499,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3532","google/ExoPlayer","2dfe7a7ad6a784482b8de094c41b7815a09444b8",1,"2018-10-31 20:37:59+00:00","Misc fixes / stylistic consistency changes for
merged pull requests
",112585,828,49599,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3533","google/ExoPlayer","a442c72814bc798f0d1f18886cea824e3029fa62",1,"2018-10-31 20:40:57+00:00","Fix nullability
",112586,828,49599,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3534","google/ExoPlayer","91d9fbd95d5acfdf2e74685141b199f7d97c9e68",4,"2018-11-08 04:24:59-08:00","pass the notification listener to the constructor
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=220616166
",113554,834,49859,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3535","google/ExoPlayer","063f5704cd80a733bf770375d8fbf402a6c5d958",1,"2018-11-09 10:14:58-08:00","Simplify MediaSessionConnector  - Make
MediaSessionConnector use a ControlDispatcher and
add setControlDispatcher,
setFastForwardIncrementMs and setRewindIncrementMs
methods. This brings it in line   with our other
UI components, including PlayerControlView and
PlayerNotificationManager. - Collapsed
DefaultPlaybackController into
MediaSessionConnector, since I'm not   sure
there's a legitimate alternative implementation
(note ControlDispatcher does   provide some
equivalent functionality e.g. to modify calls
being made on the   player). - Pass the Player and
ControlDispatcher to command receivers and custom
actions,   so they don't need their own
references.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=220822082
",113601,833,49849,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3536","google/ExoPlayer","eb6859e436b5ef7735b83d3e38b94b6826c97c7e",2,"2018-11-12 04:24:51-08:00","Align navigation implementation across UI
components  This change also paves the way for
splitting out functionality into a utility class.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=221070262
",113660,833,49848,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3537","google/ExoPlayer","9ca019b8f808a38fea3a467cff200ff7ebf876ce",2,"2018-11-12 05:18:03-08:00","PlaybackNotificationManager should show play
button in ENDED state  - This brings it in line
with PlayerControlView. The play action is
displayed instead, and pressing it seeks to the
default position of the current window. - Do the
same for MediaSessionConnector - Add support for
PlaybackPreparer consistent with PlayerControlView
Issue: #5072  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=221076008
",113695,833,49860,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3538","google/ExoPlayer","76eb06d6f2e6cd3fe605878bb3880b87ec1c9c7e",7,"2018-11-14 06:58:42-08:00","Add Timeline to nullness check  This allows client
code to run nullability checks.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=221437215
",113709,833,49884,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3539","google/ExoPlayer","c096e156b1c167e615f717e790682c6817995853",2,"2018-11-16 15:47:03-08:00","Interpret single-item audio stream edit lists as
audio padding specification.  Use the information
to strip out padding from decoded audio streams.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=221865861
",113739,833,49909,"mdoucleff","mdoucleff@google.com","Oliver Woodman","olly@google.com"
"3540","google/ExoPlayer","edff52ba5f5dad51a868ea57011a22f1ce47528d",2,"2018-11-20 03:36:02-08:00","Add buffer size based adaptive track selection.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=222221294
",114018,834,50051,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3541","google/ExoPlayer","6ebb6124bbcc8645f8e7bae4905a6439a1b3ad33",4,"2018-11-20 09:33:47-08:00","Offline refactor step 1a - Make DownloadAction
concrete  1. Pull up all subclasses of
DownloadAction into DownloadAction 2. Add
DownloaderFactory for Downloader instantiation,
and DefaultDownloaderFactory    to replace the
instantiation logic being removed from the
DownloadAction    subclasses.  This change will
upgrade existing action files gracefully (i.e. it
does not lose compatibility with the existing
offline implementation, other than some minor
breaking changes to the API).  TODOs:  1. Move
test methods from the XDownloadActionTest classes
into DownloadActionTest.    This will be done in a
subsequent CL. There's a lot of consolidation that
can    be done here, including de-duplicating some
of the test code added in this CL. 2. Look at
merging DownloaderConstructorHelper into
DefaultDownloaderFactory. 3. Use customCacheKey in
DASH/HLS/SS Downloaders, for completeness.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=222258983
",114026,833,49959,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3542","google/ExoPlayer","fe41f17c387b7c18a818c8cf2a1ebcdfbd36836a",1,"2018-11-23 11:46:24+00:00","Move listener invocation classes to BasePlayer
PiperOrigin-RevId: 222609579
",113822,831,49959,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3543","google/ExoPlayer","30e753ea1df77fb64caf48484cc2aee830374a7b",2,"2018-11-26 13:21:02+00:00","Provide Cronet request and response data for
subclasses.  Subclasses may want to analyze, log
and react to the Cronet-specific connection data.
Issue:#5134 PiperOrigin-RevId: 222809441
",113893,831,49971,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3544","google/ExoPlayer","681919269042e93efaed9a74c118799127e05ab5",3,"2018-11-27 11:11:22+00:00","Clean up CacheDataSourceTest  PiperOrigin-RevId:
222965111
",113759,830,49912,"olly","olly@google.com","Andrew Lewis","andrewlewis@google.com"
"3545","google/ExoPlayer","8a359bb1fb6d63f80a98e497f2c778eee568a8d7",13,"2018-12-03 15:17:36+01:00","feat(MediaSource): client code can get the tag of
a MediaSource
",113880,830,49899,"GiuseppePiscopo","GiuseppePiscopo@users.noreply.github.com","GiuseppePiscopo","GiuseppePiscopo@users.noreply.github.com"
"3546","google/ExoPlayer","a11a8716ef0560fcd2d714a5d74978d036c99694",1,"2018-12-03 18:24:38+01:00","feat(MediaSource): provide getTag default
implementation
",113881,830,49899,"GiuseppePiscopo","GiuseppePiscopo@users.noreply.github.com","GiuseppePiscopo","GiuseppePiscopo@users.noreply.github.com"
"3547","google/ExoPlayer","9f1e32f11292bdab5414c0874917a7466e2d2fdf",2,"2018-12-03 14:21:09+00:00","Add experimental flag to
AdaptiveTrackSelection.Factory to block fixed
track bandwidth  This option to block bandwidth
already exists on the AdaptiveTrackSelection
itself but it's not currently possible to forward
the total fixed track bandwidth automatically.
PiperOrigin-RevId: 223785139
",113857,830,49905,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3548","google/ExoPlayer","8de149eb78f58b67892292920acfec6c72a56f40",3,"2018-12-03 20:07:01+00:00","Use custom cache key factory for removal as well
as downloading  Issue #5013  PiperOrigin-RevId:
223838303
",113884,829,49874,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3549","google/ExoPlayer","8a566fb330918eb029a05fe8b558f4045358f15b",1,"2018-12-04 14:16:20+00:00","Converge DownloadHelper implementations.  Moving
most of the logic to the base DownloaderHelper
helps to implement track selection for downloading
in a single place instead of multiple places.
PiperOrigin-RevId: 223964869
",113836,829,49895,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3550","google/ExoPlayer","976a21f1392d92746f8c2f8377372b4dc00f709b",1,"2018-12-04 17:30:08+00:00","Add no-op defaults to
Video(Audio)RendererEventListener.  This is in
line with how Player.EventListener and
AnalyticsListener methods are defined and helps to
only implement the callbacks needed.  PiperOrigin-
RevId: 223991262
",113837,829,49896,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3551","google/ExoPlayer","5776bed190ef7792fb3553db6e78a4e4119f3840",2,"2018-12-06 10:54:45+00:00","TrackSelection.Factory clean-up.  We currently
have two factory methods where it is completely
unclear which one needs to be overridden.  This
change deprecates the old one, adds a Util method
to easily map back from the new to the old
behaviour, and updates all implementations of the
now deprecated method in our code.  PiperOrigin-
RevId: 224303560
",113970,829,49928,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3552","google/ExoPlayer","c48b77d1ec614872128a3420660242202f78cce1",2,"2018-12-06 13:48:09+00:00","Use media source tag in dummy timeline.  This is
now possible as it's directly accessible from the
media source.  Issue:#5177 Issue:#5155
PiperOrigin-RevId: 224321917
",113971,829,49941,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3553","google/ExoPlayer","22948f2eda7b7cfb8ac4ff413b9a0cfe0d2aa0a9",4,"2018-12-07 16:22:00+00:00","Use TrackSelector in DownloadHelper.  This adds
the basic track selection capabilties (including
tests). The new capabilities are not exposed yet
through the DownloadHelper implementations and
there will also be more helper methods (e.g. to
select multiple audio lanuages at once).
PiperOrigin-RevId: 224518477
",114544,830,50057,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3554","google/ExoPlayer","defbd046753fd90d7b9dd700f1bdb0b3621c027c",1,"2018-12-11 17:13:57+00:00","Update StartDownloadDialogHelper to use
TrackSelectionView.  This is now possible as the
download helper uses a track selector.
PiperOrigin-RevId: 225014517
",115020,832,50222,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3555","google/ExoPlayer","9c4258fef94f853b728232c57863cab041b7ba97",6,"2018-12-13 16:17:14+00:00","Clarify that the shutter can prevent flicker
PiperOrigin-RevId: 225374071
",115093,831,50203,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3556","google/ExoPlayer","845f54a46741a19e086b5c83b7497ea6d2ee50ad",10,"2018-12-13 17:26:01+00:00","Remove Cache.[get|set]ContentLength  Problem:
There is nothing in the Cache interface that
enforces that these methods are implemented by
reading/writing content metadata, however our own
code (CacheDataSource) relies on this property
since it mixes use of [get|set]ContentLength and
use of metadata. Using metadata is the right
approach because it minimizes the number of index
writes (e.g. it allows the redirect URI and the
content length to be committed by a single write).
Solution: Remove [get|set]ContentLength, which are
redundant anyway, and use metadata everywhere.
Also expose the keys being used through the public
API; there's no particular reason why they
shouldn't be. We previously had an API for getting
and setting content length, but no API for getting
and setting redirect uri. PiperOrigin-RevId:
225383211
",115126,830,50199,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3557","google/ExoPlayer","173ddd6ee70a241f1b1251d4ec0172eb386fa06a",3,"2018-12-14 11:16:33+00:00","Add simplified adaptive media source stream key
filter to factory classes.  This change only
simplifies the API by using the ManifestParser
internally.  PiperOrigin-RevId: 225516193
",115167,831,50241,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3558","google/ExoPlayer","1a3d735bc33ccc4f6c6227f33eb4812f5e162ebc",1,"2018-12-14 16:03:42+00:00","Add assertion helper to verify
MediaSource/TrackGroups/TrackSelection/StreamKey
cycle.  This is useful to write integration tests
for MediaSources which check that the stream keys
returned by getStreamKeys are compatible with the
respective manifest parser.  PiperOrigin-RevId:
225542606
",115475,832,50278,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3559","google/ExoPlayer","d5e53d11f7dafedb94209a82fcf6c85c7399a962",13,"2018-12-17 10:48:01+00:00","Add Player.MetadataComponent for completeness
PiperOrigin-RevId: 225795581
",115532,832,50303,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3560","google/ExoPlayer","fa82004fa3423021a25149bce5f2a50e884ab804",14,"2018-12-14 15:42:57+00:00","Merge pull request #5066 from
szaboa:feature/1583_support_png_ttml  PiperOrigin-
RevId: 225531695
",110989,813,48806,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3561","google/ExoPlayer","803b878a8aeaa3fa2ed3d53077bad55a572269a2",1,"2019-01-03 09:36:35+00:00","Use Handler instead of ExoPlayer messages in
ConcatenatingMediaSource  ExoPlayer methods must
not be called from any thread besides the
specified app thread. Therefore we shouldn't use
them here. Using a regular Handler instead is
fully equivalent.  Issue:#5240 PiperOrigin-RevId:
227650489
",116411,841,50527,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3562","google/ExoPlayer","e4ad90efd0b111e1239e2dfadc2a8ae06794dddc",5,"2019-01-03 14:54:22+00:00","Set Player separately in AdsLoader interface.
Passing the player through MediaSource.prepare is
only needed for the AdsLoader and complicates
other usages of MediaSource. Providing the player
directly to the AdsLoader is also in line with the
usage pattern of PlayerView and other components.
Also rename methods to start/stop to better
reflect their usage.  PiperOrigin-RevId: 227682112
",116492,842,50565,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3563","google/ExoPlayer","d834eeab6fcd68e63bbdd89aa2e029055ee37b10",10,"2019-01-03 21:01:12+00:00","Set MediaSessionConnector components separately
Also support preparation without a player, in line
with PlayerView.  PiperOrigin-RevId: 227735260
",116510,842,50557,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3564","google/ExoPlayer","ed1f41db1bc960109dafeb434e313dd91546cf44",8,"2019-01-04 08:27:21+00:00","Parse frame rate from 'mdta' metadata
PiperOrigin-RevId: 227813461
",116735,844,50618,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3565","google/ExoPlayer","e8a7cb25460aa91bf2471a8a839908ebdb984608",4,"2019-01-04 17:56:10+00:00","Remove player and isTopLevelSource parameters from
MediaSource.prepare.  They are not longer needed
anywhere, are error-prone (because of threading
requirements), and complicate testing and using
MediaSources without a player.  PiperOrigin-RevId:
227871157
",116686,844,50627,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3566","google/ExoPlayer","8c47b02083a13617f882d27d398d6b99a5aab12a",1,"2019-01-07 17:30:11+00:00","Reduce number of calls to File.length()  Calls to
File.length() can be O(N) where N is the number of
files in the containing folder. This is believed
to be true for at least FAT32. Repeated calls for
the same file tend to be faster, presumably due to
caching in the file system, however are still
surprisingly expensive. Hence minimizing the
number of calls is preferable.  Issue: #4253
PiperOrigin-RevId: 228179921
",116731,844,50635,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3567","google/ExoPlayer","2d30d66746242018a3aff0f239048e93c34ecc0f",8,"2019-01-11 18:39:27+00:00","Fix release of DRM sessions  There were some edge
cases in which we'd forget to release DRM
sessions. For example if we read a format and
acquired a pendingDrmSession (in
onInputFormatChanged), then immediately read
another format and overwrote pendingDrmSession,
we'd forget to release the one that's been
overwritten.  This change hopefully makes release
much clearer. We keep a list of all drm sessions
we're currently holding. Whenever we update either
drmSession or pendingDrmSession, we release any
other sessions that are in the list.  PiperOrigin-
RevId: 228905465
",117488,848,50846,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3568","google/ExoPlayer","1f03093dc52c7e5ddd22ad9675d4037ea9a0aa92",1,"2019-01-11 19:02:00+00:00","DRM: Pass sessionId rather than MediaCrypto
ExoMediaCrypto.requiresSecureDecoderComponent() is
removed, and FrameworkMediaCrypto.forceAllowInsecu
reDecoderComponents is made public to allow
determining whether a secure decoder is required
to be implemented in MediaCodecRenderer.
PiperOrigin-RevId: 228909771
",117492,848,50840,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3569","google/ExoPlayer","9ab08bbe5df406e3812acbf9c1980fc52f0262e0",2,"2019-01-14 23:02:03+00:00","Fix DRM protected SmoothStreaming with subtitles
Issue: #5378 PiperOrigin-RevId: 229261658
",117525,848,50856,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3570","google/ExoPlayer","ec77f737eece3c07f001261249b539fcf341251b",2,"2019-01-16 14:03:07+00:00","Make DownloadManager watch requirements directly
PiperOrigin-RevId: 229544734
",117632,848,50893,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3571","google/ExoPlayer","ac86d3b5f6bb44b68d673c7a06e4a34bf0202f3c",14,"2019-01-17 17:08:52+00:00","Add missing @Nullable to SimpleExoPlayer fields
and methods.  Issue:#5402 PiperOrigin-RevId:
229758525
",117858,850,50985,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3572","google/ExoPlayer","642a0275d84b060f11e19122dca69498a1792a25",1,"2019-01-24 15:26:59+00:00","Propagate ExoCast errors receiver from the
receiver app  PiperOrigin-RevId: 230717561
",117870,855,51164,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3573","google/ExoPlayer","9779f2c358913a947e02bd19aa7c423d677e5c28",2,"2019-01-29 12:57:37+00:00","Add DashMediaPeriod getStreamKeys implementation
and test.  PiperOrigin-RevId: 231385518
",118209,856,51217,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3574","google/ExoPlayer","0a8ae74217f04e981786ea6b74192a0488e6ddb4",6,"2019-01-29 12:58:28+00:00","Update DownloadHelper to use MediaSource and
MediaPeriod directly.  This requires to prepare
the media source and the periods in a small helper
similar to the metadata retriever. It also gets
rid of the need to have abstract protected methods
to load the manifest, to extract the track groups
and to convert to stream keys, as this can now be
handled by the media period.  PiperOrigin-RevId:
231385590
",118431,857,51232,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3575","google/ExoPlayer","71d77d7fa07521ee37436423d8fd28004e995bbf",7,"2019-01-29 12:58:45+00:00","Remove DownloadHelper subclasses and use static
methods instead.  The subclasses only call
specific constructor combinations and can easily
replaced by static methods.  PiperOrigin-RevId:
231385606
",118488,856,51220,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3576","google/ExoPlayer","45433869e5069019fc48c69589c14331d889bd60",16,"2019-01-29 13:14:39+00:00","Rename ExtractorMediaSource to
ProgressiveMediaSource  It better describes what
the class does. More importantly, we've had
inconsistent class names since we added offline
support, for which we added ProgressiveDownloader
(""ExtractorDownloader"" doesn't make any sense). We
could really do with aligning the names for
clarity.  (Sorry)  PiperOrigin-RevId: 231387268
",118683,857,51309,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3577","google/ExoPlayer","2bd12c2270c6d5e335e01cd25f0391fecdc3228e",5,"2019-01-30 17:32:03+00:00","Move DefaultTrackSelector.Parameters out of
DefaultTrackSelector  Including ParametersBuilder
and TrackSelectionOverride.  PiperOrigin-RevId:
231609249
",119148,858,51372,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3578","google/ExoPlayer","503c17d2ed9003562f0dd73716b7aace8970e0a5",4,"2019-01-31 12:39:14+00:00","Add constraint based track selection for ExoCast
PiperOrigin-RevId: 231764284
",119148,858,51373,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3579","google/ExoPlayer","fb99c26426b2f5b82b8528f52f6890c7ed2ef23b",1,"2019-02-04 16:48:34+00:00","Implement CacheContentIndex storage switching
This change enables transitioning to/from
different Storage implementations, to allow
experimentally enabling (and if necessary,
disabling) SQLiteStorage. All that's left to do is
the final wiring to turn it on  PiperOrigin-RevId:
232304458
",119220,858,51389,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3580","google/ExoPlayer","7a4cf96f4a91a51c42a83e0ba70eed6a2d5d9199",14,"2019-02-04 17:40:01+00:00","Improve housekeeping of ConcatenatingMediaSource
callbacks.  When calling releaseSource(), all
pending messages will be removed. That means that
all action-on-completion callbacks which are
somewhere in flight are just dropped without being
called. This change adds code to keep track of the
current state of each callback to allow all of
them being called when the source is released.
Issue:#5464 PiperOrigin-RevId: 232312528
",119292,858,51396,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3581","google/ExoPlayer","67be9e77834c0dc9d2b5d462c01c2f39718c8817",1,"2019-02-04 19:35:06+00:00","Merge #5462: Making easier to set the
playClearSampleWithoutKeys to renderers  Imported
from GitHub PR
https://github.com/google/ExoPlayer/pull/5462
Pull request for the following issue: #5421 Merge
d9d88b079c4ca0533a836b2715a65b924babbb89 into
a73819162751116acd3863cf5473b0ff78fac805
PiperOrigin-RevId: 232335113
",119371,858,51440,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3582","google/ExoPlayer","e3981ec48404ee440dd4ac2cd53ee90e0785300a",7,"2019-02-05 17:45:39+00:00","Fix notifications to avoid flicker on KitKat  On
KitKat you need to reuse the same notification
builder when generating a notification that's
intended to replace a previous one. See:  https://
stackoverflow.com/questions/6406730/updating-an-
ongoing-notification-quietly  PiperOrigin-RevId:
232503682
",119639,861,51537,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3583","google/ExoPlayer","ebfbb4f915d5dce884e31c4f7685fb9bbf25c552",2,"2019-02-05 19:05:59+00:00","Hide progress bar for end state download
notifications  Now we're reusing the builder, it's
necessary to set maxProgress back to 0 to avoid
the progress bar appearing for end state
notifications.  PiperOrigin-RevId: 232520007
",119655,861,51535,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3584","google/ExoPlayer","bdc87a4fc7fc07ca4446c790a644f5d60e42109d",1,"2019-02-06 14:26:02+00:00","API and plumbing for indexing file metadata
(length + timestamp)  When SimpleCache uses a
CacheFileMetadataIndex, it will be able to avoid
querying file.length() and renaming files, both of
which are expensive operations on some file
systems.  PiperOrigin-RevId: 232664255
",119733,863,51616,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3585","google/ExoPlayer","434b5a30293cb7701ea35c25b1c7302fe3b8ce89",9,"2019-02-08 16:27:47+00:00","Enable use of database storage in
CachedContentIndex  It's not yet enabled in the
SimpleCache layer, however, so this is a no-op
change.  PiperOrigin-RevId: 233064490
",119806,862,51565,"olly","olly@google.com","Andrew Lewis","andrewlewis@google.com"
"3586","google/ExoPlayer","9b6caf9edaa873d2b2b77a8b449e36325273124c",1,"2019-02-08 16:45:00+00:00","Merge #5438: Dolby Vision  Imported from GitHub PR
https://github.com/google/ExoPlayer/pull/5438
Plus the following changes: - Only support profile
5 (handling other profiles requires   backward-
compatibility changes in the renderer which are
left for a later   change.) - Only add KEY_PROFILE
to the codec configuration MediaFormat for Dolby
Vision. - In MediaCodecUtil support all DV
profiles that Android has constants for. This
includes ones that are ""not supported for new
applications"". Since we don't   extract these
profiles, this is currently only for the benefit
of custom   extractors. - Misc code style fixes
and reordering for consistency.  Merge
37878b975c2bc082b0568e21cbe62bfcef97c10d into
67be9e77834c0dc9d2b5d462c01c2f39718c8817
PiperOrigin-RevId: 233066799
",119930,863,51598,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3587","google/ExoPlayer","ef139b2e31c921b7111000a171054594256c19dc",3,"2019-02-08 17:54:27+00:00","Add an overlay FrameLayout for ad UI  This will be
used instead of the current overlay FrameLayout
(which apps can interact with directly).
PiperOrigin-RevId: 233077175
",119690,861,51485,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3588","google/ExoPlayer","abb53d7ce707476e5ab22fa990070bc8d7b2179f",4,"2019-02-11 10:01:34+00:00","Support multiple overrides in TrackSelectionView
and factor out Builder.  Supporting multiple
overrides allows to select tracks from multiple
groups, if enabled. As more options are added, the
creation of the dialog is moved to a separate
builder class.  PiperOrigin-RevId: 233366282
",120046,863,51663,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3589","google/ExoPlayer","56944caa2167b045f361e6fb86d40570c95e5cc0",1,"2019-02-11 14:07:13+00:00","Allow registration of control overlays for ad
viewability  Switch from passing an ad UI
ViewGroup to passing an object that can also
provide information about controls overlays.  Also
switch to using a dedicated overlay for ads
instead of the overlay frame layout, which apps
have easy access to.  PiperOrigin-RevId: 233393500
",120091,863,51691,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3590","google/ExoPlayer","6d461f5b25fc09dea43b28e1e42d5754a7ed6910",5,"2019-02-11 17:19:36+00:00","Fix PlayerNotificationManager lint error
builder.mActions is marked as
@RestrictTo(LIBRARY_GROUP). We'll just have to put
up with notification flicker on KitKat if the
actions change.  PiperOrigin-RevId: 233420076
",120201,868,51783,"olly","olly@google.com","Andrew Lewis","andrewlewis@google.com"
"3591","google/ExoPlayer","1dd36ae391447613d9fb67cc514c1fb59ffbbe5a",7,"2019-02-12 12:20:46+00:00","Add TrackSelectionDialog (with swipe tabs) to demo
app.  PiperOrigin-RevId: 233582549
",120314,869,51847,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3592","google/ExoPlayer","ca67c0c2e5eea2a5ef4aa4025d67716515d66efa",1,"2019-02-13 10:05:09+00:00","Extend TrackSelectionDialog for usage in
PlayerActivity.  We need additional initial
selection settings and a configurable title. The
update logic for the track selection parameters
moved to a static helper method in
TrackSelectionDialog.  PiperOrigin-RevId:
233713788
",120144,867,51835,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3593","google/ExoPlayer","31911ca54a13b0003d6cf902b95c2ed445afa930",1,"2019-02-14 22:45:35+00:00","Drain audio processors on reconfiguration
Previously we would get a new AudioTrack and flush
all audio processors if any AudioProcessor needed
to be flushed on reconfiguration. This was
problematic for the case of TrimmingAudioProcessor
because it could become active or inactive due to
transitioning to a period with gapless metadata or
without it (we don't keep it active all the time
because it is wasteful to populate its end buffer
for content that is not gapless).  This change
handles the case where we don't need an AudioTrack
but AudioProcessors do need to be flushed. In this
case we drain all the audio processors when next
handling data then switch to the new
configuration.  This avoids truncation when period
transitions change whether TrimmingAudioProcessor
is active but don't require a new AudioTrack, and
is also a step towards draining the AudioTrack
when transitioning between periods if we do need a
new AudioTrack.  To do this, it needs to be
possible to drain any pending output data from an
AudioProcessor after it's configured to a new
format, so this change makes sure AudioProcessors
allow calling playToEndOfStream and getOutput
after reconfiguration and before flush.
PiperOrigin-RevId: 234033552
",120162,869,51899,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3594","google/ExoPlayer","8982da4b7502cddc4946a0acfe62de3986ee36c0",5,"2019-02-15 11:09:16+00:00","Support encrypted initialization segment  Defined
in RFC 8216 Section 4.3.2.5.  Issue:#5441
PiperOrigin-RevId: 234114119
",120211,869,51907,"aquilescanta","aquilescanta@google.com","Andrew Lewis","andrewlewis@google.com"
"3595","google/ExoPlayer","eae09c67e7bad6e1314523c337748ffc86e38e8a",1,"2019-02-15 13:48:10+00:00","Release download helper if new download track
selection is started.  PiperOrigin-RevId:
234128521
",120220,869,51907,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3596","google/ExoPlayer","c6195dbbaf6909e48e212fd4e15a3b23022daa8a",2,"2019-02-15 16:55:17+00:00","Handle recreation of TrackSelectionView instances.
TrackSelectionView requires an initialization with
a call to init(...). That's why we shouldn't let
the view retain its view hierarchy automatically
as the views won't be backed by data if restored.
Instead add a listener which lets the containing
activity/fragment save and restore the state if
needed.  PiperOrigin-RevId: 234152491
",120231,869,51928,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3597","google/ExoPlayer","0622afe170d3e9d3803572cb81e84dad975de121",12,"2019-02-18 21:24:24+00:00","Migrate to androidx  Issue: #5489 PiperOrigin-
RevId: 234507428  Add missing annotation
dependency  Issue: #5489 PiperOrigin-RevId:
234566177
",120331,869,51996,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3598","google/ExoPlayer","44e23fabe694d3c2d8606de17e2e32dfb8bb6da2",2,"2019-02-19 11:15:16+00:00","let apps intercept/handle media button events by
using a MediaButtonEventHandler  Issue #5179
PiperOrigin-RevId: 234571837
",120348,869,52016,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3599","google/ExoPlayer","2685b8bd9029ae5b02e12db288300d5ce6d5edb0",1,"2019-02-19 21:28:40+00:00","Support multiple instances of database features  -
Use Cache UID for CacheContentIndex and
CacheFileMetadataIndex. This   enables SD card
swapping for a single device. - I'm hopeful of
finding a way to get the Cache UID to
DefaultDownloadIndex   so we can do the same
there.  PiperOrigin-RevId: 234662753
",120331,869,51970,"olly","olly@google.com","Andrew Lewis","andrewlewis@google.com"
"3600","google/ExoPlayer","e502672b89dc53ad90da570cf98f027442cd2c1b",2,"2019-02-20 12:30:42+00:00","Encapsulate the key cache in HlsChunkSource
PiperOrigin-RevId: 234773649
",120337,869,51972,"aquilescanta","aquilescanta@google.com","Andrew Lewis","andrewlewis@google.com"
"3601","google/ExoPlayer","3e03e71cf96679c9307bbe212d69909138c3f698",5,"2019-02-22 15:27:28+00:00","Start enabling database based SimpleCache indexing
- Expose constructor (package private for now, for
tests only) - Add some tests for cache
initialization - Add some TODOs for handling
initialization failure  PiperOrigin-RevId:
235188386
",120377,869,52014,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3602","google/ExoPlayer","0bb123aa4c9cc1c0dc94ef2ba3d326658e2c53d1",1,"2019-02-28 15:31:09+00:00","TrackSelectionView: Use same ""isAdaptive"" logic in
updateViews and onClick.  We currently do not show
check boxes if the renderer does not support
adaptive switches between tracks in one group.
However, we assume check boxes in the onClick
method.  Use same logic for both methods to be
consistent.  PiperOrigin-RevId: 236118372
",120467,869,52012,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3603","google/ExoPlayer","3eeb3acb3b50676bedbfd4cdcb631d15ec7b9f91",1,"2019-02-28 15:33:17+00:00","Remove nullness suppressions.  These were added in
an internal clean-up and are better fixed than
suppressed.  PiperOrigin-RevId: 236118715
",120459,869,52005,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3604","google/ExoPlayer","ab5dae64b9caf51752a095d2f8fbdd6f0e618a59",1,"2019-03-06 14:51:03+00:00","Make sure we handle SQLiteException and other IO
errors properly  SQLiteException is a runtime
exception, which makes it easy to forget to handle
it. This change converts SQLiteExceptions into a
checked exception, which is then handled
appropriately.  PiperOrigin-RevId: 237038793
",120592,870,52053,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3605","google/ExoPlayer","a8d8f610ba486a0b6db5150fd63dacf60683172b",1,"2019-03-06 16:20:57+00:00","Add SimpleCache deletion functionality  This is
needed now that index data may be stored outside
of the cache directory.  PiperOrigin-RevId:
237051112
",120650,870,52082,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3606","google/ExoPlayer","d7c2519a5dbfac421ff24770785ad4097eed5033",12,"2019-03-07 00:09:11+02:00","Fixes according to the code review
",120496,869,51974,"Arnold Szabo","szaboaarnold@gmail.com","Arnold Szabo","szaboaarnold@gmail.com"
"3607","google/ExoPlayer","3e4c15aa15410828753cfbf40f01d2847c9c7286",1,"2019-03-18 11:03:43+00:00","Add methods to DefaultDownloadIndex to set manual
stop reason and not met requirements  PiperOrigin-
RevId: 238960156
",121071,872,52069,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3608","google/ExoPlayer","77d597de5f1565419ec9ec7ada0633379b15b1b3",6,"2019-03-22 19:41:25+00:00","Parse CHARACTERISTICS attribute for EXT-X-MEDIA
tags  PiperOrigin-RevId: 239844963
",121349,872,52145,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3609","google/ExoPlayer","afd9014b823a3ff194a6f410cefe4bed53280693",2,"2019-03-25 10:10:27+00:00","Ignore AC-3 tracks with fscod=3.  3 (""11"") is the
reserved code for fscod in AC3. The spec says that
""If the reserved code is indicated, the decoder
should not attempt to decode audio and should
mute.""  We currently throw an exception as we try
to access an array with an invalid index. Now
ignoring the track instead by invalidating the
format.  Issue:#5638 PiperOrigin-RevId: 240106255
",121807,876,52315,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3610","google/ExoPlayer","b0bb6ec8a5b5ba0e4645244fa517830264f66b80",2,"2019-03-25 11:35:44+00:00","Allow to set selection reason and data when
specifying an override.  It's currently very
difficult to actually set a reason for track
selection triggered by a SelectionOverride. It
would require creating a new custom
TrackSelection.Factory where the reason gets
injected somehow before the override is specified
on the player.  Simplify this whole procedure by
allowing to set the reason directly and forward
this reason to all fixed selections created based
on this override.  PiperOrigin-RevId: 240114942
",121886,876,52341,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3611","google/ExoPlayer","679b628326ab128bc03ea15f6c157da76b2132a2",1,"2019-03-25 16:03:33+00:00","Add experimental option for multiple parallel
adaptive track selections.  If enabled,
DefaultTrackSelector returns multiple groups with
more than one track. AdaptiveTrackSelection then
decides on the order in which the tracks are
changed such that the BandwidthProvider for each
selection can figure out the allocated bandwidth.
PiperOrigin-RevId: 240150206
",122025,876,52395,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3612","google/ExoPlayer","07e3509dd9e4fbf2077a8cf3222efe68b73d00c2",1,"2019-03-26 13:11:55+00:00","Support providing all keys via EXT-X-SESSION-KEY
tags  PiperOrigin-RevId: 240333415
",122236,876,52473,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3613","google/ExoPlayer","e3a8429ee299c2aea275e587c6286b0bdf894745",4,"2019-03-26 20:49:36+00:00","More faithfully parse content of HLS master
playlists  - Split HlsUrl into Rendition and
Variant - Add Rendition/Variant specific
information to the new types  Issue: #5596
PiperOrigin-RevId: 240419763
",122277,876,52492,"olly","olly@google.com","Toni","tonihei@google.com"
"3614","google/ExoPlayer","6e6df6a2f014956b8c8b2e877e3e6335e2d2ec5b",1,"2019-03-27 15:42:31+00:00","Improve DownloadService notification documentation
The one functional change here is to require
subclasses to implement getForegroundNotification.
It seems easier and less error prone to force
developers to implement it than it does to
document the cases in which they need to override
it (which is most cases).  PiperOrigin-RevId:
240566737
",122183,876,52529,"olly","olly@google.com","Toni","tonihei@google.com"
"3615","google/ExoPlayer","0810fe9159fe4d11e18b8513007c6415aed85533",3,"2019-03-27 20:08:24+00:00","Remove ""variant"" terminology from HlsChunkSource
HlsChunkSource may also be downloading segments
from demuxed renditions, which are not variants.
PiperOrigin-RevId: 240625139
",122246,876,52554,"olly","olly@google.com","Toni","tonihei@google.com"
"3616","google/ExoPlayer","e8cf67c0cdf17fe0ee2c96b76b12e84a31962d5b",2,"2019-03-28 14:58:49+00:00","Allow simplified custom adaptive track selection
factories.  Custom factories currently need to
copy most of the code in the
AdaptiveTrackSelection.Factory to make use of the
same functionality. Simplify this by allowing to
overwrite the factory.  PiperOrigin-RevId:
240773271
",122173,876,52536,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3617","google/ExoPlayer","2623b4b3820251409d0bf17f8fe64923864087dd",4,"2019-03-29 13:13:24+00:00","Pre-resolve HlsUrl urls  This is to make it
possible to use equality of HlsUrl.url fields to
determine whether two HlsUrls point at the same
media playlist. This doesn't work currently
because it's possible to mix absolute and relative
urls, which will not be equal until after the
relative url is resolved against the playlist
baseUrl.  Issue: #5596 Issue: #2600 PiperOrigin-
RevId: 240966503
",122188,876,52532,"olly","olly@google.com","Toni","tonihei@google.com"
"3618","google/ExoPlayer","99f89132c219b52b991b4614322fa7af6208c906",10,"2019-03-29 13:48:17+00:00","Remove HlsUrl and introduce
HlsMasterPlaylist.mediaPlaylistUrls  - This
removes the need for Variant and Rendition to have
a common   base class, allowing the url field to
be marked as @Nullable in   Rendition but not in
Variant. - The addition of mediaPlaylistUrls is
needed for the new StreamKey   indexing for HLS.
It's also convenient in a couple of places (e.g.
HlsDownloader), where a list of all media playlist
URLs is needed. - Lots of places where HlsUrl was
passed only needed the actual   URL (not the
Format, which is the other piece of HlsUrl).
Passing   just the URL is a little simpler, and
resolves some of the naming   confusion.  Issue:
#5596 Issue: #2600 PiperOrigin-RevId: 240970466
",122229,876,52526,"olly","olly@google.com","Toni","tonihei@google.com"
"3619","google/ExoPlayer","592b5eafee3613646f0a8e6bfffd3eec6beef5a4",5,"2019-03-31 23:40:58+01:00","Support multiple CC channels in DASH  Issue: #5656
PiperOrigin-RevId: 241235377
",122287,876,52523,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3620","google/ExoPlayer","5fd4fddfacd5af99fb39c47f220e85742deefb6b",2,"2019-04-01 15:45:02+01:00","Use system Locale language to select audio track.
If no track matches the preferred language or no
preferred language is provided, use the system
Locale language as the next decision criterion.
PiperOrigin-RevId: 241322703
",122382,876,52552,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3621","google/ExoPlayer","7c265dfb3a1d485ab794823f3e2a7344b20b5a47",3,"2019-04-02 17:36:52+01:00","Detect external surround sound on Amazon devices
PiperOrigin-RevId: 241544595
",122487,876,52567,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3622","google/ExoPlayer","346c72c00e3af146f5f445fc18cad61eeec82e72",2,"2019-04-05 11:12:56+01:00","Move PriorityTaskManager from DefaultLoadControl
to SimpleExoPlayer.  The priority task manager
only needs to listen to loading state changes and
is independent of the rest of DefaultLoadControl.
This also fixes problems where the player stops
loading without consultin the LoadControl.
PiperOrigin-RevId: 242098374
",122422,877,52635,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3623","google/ExoPlayer","401e20d9c8caf5f96e4ff2651cd14f46f1c35517",4,"2019-04-08 14:46:02+01:00","Signal fallback via renderer constructor  Remove
MediaCodecSelector.DEFAULT_WITH_FALLBACK, as codec
selectors will need to be able to return a list of
decoder infos even when not using fallback in a
later change. Instead signal that fallback should
be used via a renderer constructor.  Fallback is
always disabled for audio.  PiperOrigin-RevId:
242454172
",122612,877,52685,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3624","google/ExoPlayer","8688bd2d8885c381853938325b800b26663a6821",4,"2019-04-10 11:37:56+01:00","Rename DownloadState to Download  PiperOrigin-
RevId: 242839480
",122333,878,52640,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3625","google/ExoPlayer","53934c13b2800cdcc49c7f3df5005b0a9b3d7943",1,"2019-04-12 02:12:55+01:00","Select non-primary tunneling decoder  Issue: #3100
Issue: #5547 PiperOrigin-RevId: 243181217
",122549,878,52666,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3626","google/ExoPlayer","936bc244b64f8c9f7ad11f07858b36275ad8d6d1",14,"2019-04-12 11:53:38+01:00","Add an HLS metadata entry sublcass to populate HLS
track formats  Include information to facilitate
adaptive track selection in HLS.  PiperOrigin-
RevId: 243238232
",122671,879,52731,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3627","google/ExoPlayer","9ddd39c1c06d57f233de731bd4153ec35283e3d7",7,"2019-04-15 16:54:03+01:00","Add the HlsMetadataEntry from the Master playlist
to the Hls tracks  PiperOrigin-RevId: 243624081
",122615,878,52733,"aquilescanta","aquilescanta@google.com","AquilesCanta","santiagoseifert@gmail.com"
"3628","google/ExoPlayer","7b84a1ead7fb487a957ca8d029c38ca57ff77ceb",4,"2019-04-15 17:11:03+01:00","DownloadManager.getCurrentDownloads: Return list
instead of array  - Allows enforcing immutability,
which in a future CL will allow   avoiding
allocating a new array/list on every call. - Also
some left over doc cleanup from the DownloadState
rename.  PiperOrigin-RevId: 243627352
",122624,878,52733,"olly","olly@google.com","AquilesCanta","santiagoseifert@gmail.com"
"3629","google/ExoPlayer","9c759a867b51d1fb4e95f7169646c71256679247",2,"2019-04-15 18:09:22+01:00","Prepare SimpleCache for 2.10.0 release  - Expose
constructors that take DatabaseProvider. Deprecate
those   that do not. - Expose Cache.getUid. This
will likely be used for naming of the   tables
accessed by DefaultDownloadIndex .  PiperOrigin-
RevId: 243637786
",122757,878,52748,"olly","olly@google.com","AquilesCanta","santiagoseifert@gmail.com"
"3630","google/ExoPlayer","5856e75781c5f4edc209ffb29ddec90b81f598bd",7,"2019-04-16 15:55:27+01:00","Rename DownloadAction to DownloadRequest
PiperOrigin-RevId: 243806888
",122778,878,52752,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3631","google/ExoPlayer","0be4bee25f2fd89c8a8b1f9efd3eca351dcc769a",3,"2019-04-16 15:57:24+01:00","Add ""setCustomErrorMessage"" override that allows
including an extras bundle with a custom error.
PiperOrigin-RevId: 243807109
",122785,878,52759,"borrelli","borrelli@google.com","Oliver Woodman","olly@google.com"
"3632","google/ExoPlayer","ee08e7dcac508af05c9cc9ab6663df34299264a7",1,"2019-04-16 16:26:09+01:00","Fix key and accessibility scrubbing  Issue: #5767
PiperOrigin-RevId: 243811443
",122797,878,52759,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3633","google/ExoPlayer","e290f883d1ede6523b00854c3fdf439b0e4b851f",3,"2019-04-17 16:59:11+01:00","Disable cache span touching for offline  Currently
SimpleCache will touch cache spans whenever it
reads from them. With legacy SimpleCache setups
this involves a potentially expensive file rename.
With new SimpleCache setups it involves a more
efficient but still non-free database write.  For
offline use cases, and more generally any use case
where the eviction policy doesn't use last access
timestamps, touching is not useful. This change
allows the evictor to specify whether it needs
cache spans to be touched or not. SimpleCache will
only touch spans if the evictor requires it.
Note: There is a potential change in behavior in
cases where a cache uses an evictor that doesn't
need cache spans to be touched, but then later
switches to an evictor that does. The new evictor
may temporarily make sub-optimal eviction
decisions as a result. I think this is a very fair
trade-off, since this scenario is unlikely to
occur much, if at all, in practice, and even if it
does occur the result isn't that bad. PiperOrigin-
RevId: 244005682
",122679,878,52745,"olly","olly@google.com","Andrew Lewis","andrewlewis@google.com"
"3634","google/ExoPlayer","82af6899a0903cb6638ff1776cbcd7e2b89521c2",2,"2019-04-18 18:26:00+01:00","Rename manualStopReason to stopReason
PiperOrigin-RevId: 244210737
",122831,878,52776,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3635","google/ExoPlayer","82061e9afbc660aaf788578e76d69cab1ddc52c1",4,"2019-04-18 21:02:48+01:00","Improve progress reporting logic  - Listener based
reporting of progress allows the content length
to be persisted into the download index (and
notified via a   download state change) as soon as
it's available. - Moved contentLength back into
Download proper. It should only   ever change
once, so I'm not sure it belongs in the mutable
part   of Download. - Made a DownloadProgress
class, for naming sanity.  PiperOrigin-RevId:
244242487
",122881,879,52803,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3636","google/ExoPlayer","748a29e8f5ddf808d8da43f284b1c6227aa77e87",1,"2019-04-18 23:44:58+01:00","Further improve DownloadService action names &
methods  - We had buildAddRequest and
sendNewDownload. Converged to   buildAddDownload
and sendAddDownload. - Also fixed a few more
inconsistencies, and brought the   action
constants into line as well.  PiperOrigin-RevId:
244274041
",122870,879,52801,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3637","google/ExoPlayer","03313fb5e29a92dfa4a3c6de5ca88ca8459a8204",1,"2019-04-23 17:09:05+01:00","Add option to add entries in an ActionFile to
DownloadIndex as completed  PiperOrigin-RevId:
244864742
",122939,879,52795,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3638","google/ExoPlayer","3382c74488196f5b5977dfa545f142d6ac30f120",1,"2019-04-26 10:25:21+01:00","Allow content id to be set in
DownloadHelper.getDownloadRequest  PiperOrigin-
RevId: 245388082
",123084,880,52857,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3639","google/ExoPlayer","2b0b6e1b2e52357d0c905901787d65f0302ab9ed",1,"2019-04-26 13:53:58+01:00","Move DownloadManager internal logic into isolated
inner class  There are no logic changes here. It's
just moving code around and removing the
""internal"" part of names where no longer required.
PiperOrigin-RevId: 245407238
",123158,880,52887,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3640","google/ExoPlayer","1fb128df36f9c2a8ecbac5de319bd4cfa5b56f6a",7,"2019-04-29 10:31:36+01:00","Move playback session manager to core library.
This allows to use the session management
capabilities for other analytics purposes.
PiperOrigin-RevId: 245710588
",124233,883,53043,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3641","google/ExoPlayer","eed5d957d87d44cb9c716f1a4c80f39ad2a6a442",5,"2019-05-01 19:19:02+01:00","Rework DownloadManager to fix remaining TODOs  -
Removed DownloadInternal and its sometimes-out-of-
sync   duplicate state - Fixed downloads being in
STOPPED rather than QUEUED state   when the
manager is paused - Fixed setMaxParallelDownloads
to start/stop downloads if   necessary when the
value changes - Fixed isWaitingForRequirements
PiperOrigin-RevId: 246164845
",124261,883,53081,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3642","google/ExoPlayer","5992699d91406e8e1d289e565f95a15e3b40a11b",4,"2019-05-02 10:37:31+01:00","Post-submit fixes for https://github.com/google/Ex
oPlayer/commit/eed5d957d87d44cb9c716f1a4c80f39ad2a
6a442.  One wrong return value, a useless
assignment, unusual visibility of private class
fields and some nullability issues.  PiperOrigin-
RevId: 246282995
",124216,883,53081,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3643","google/ExoPlayer","a849f43e6d8b64bbc816cdb93444b96e22ae4c28",1,"2019-05-13 15:56:23+01:00","Work around broken raw audio decoder on Oppo R9
Issue: #5782 PiperOrigin-RevId: 247934223
",124417,883,53124,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3644","google/ExoPlayer","50c9ae0efcbfe79df40c1d12b91c3f8def938062",2,"2019-05-13 19:17:00+01:00","Assume that encrypted content requires secure
decoders in renderer support checks  Issue:#5568
PiperOrigin-RevId: 247973411
",124388,883,53115,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3645","google/ExoPlayer","8edce41ff3537a91075070b6e8e8e9f62a2cb1c8",2,"2019-05-15 17:50:50+01:00","Add simpler HttpDataSource constructors
PiperOrigin-RevId: 248350557
",124404,883,53131,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3646","google/ExoPlayer","4ca670bed3534aa7c925a7575e6fb7cf70d7fc64",4,"2019-05-15 19:13:34+01:00","Use MediaSourceFactory interface to simplify
DownloadHelper  PiperOrigin-RevId: 248367983
",124411,884,53129,"eguven","eguven@google.com","Oliver Woodman","olly@google.com"
"3647","google/ExoPlayer","bfeec25b2a4579e18f0d9ffe02ec2ad273790638",2,"2019-05-17 18:34:07+01:00","Add SilenceMediaSource  Issue: #5735 PiperOrigin-
RevId: 248745617
",124649,886,53196,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3648","google/ExoPlayer","a4586355402075736f1b2ac91aea7ca11f257537",2,"2019-05-20 17:48:15+01:00","Add ProgressUpdateListener  Issue: #5834
PiperOrigin-RevId: 249067445
",124660,886,53208,"bachinger","bachinger@google.com","Toni","tonihei@google.com"
"3649","google/ExoPlayer","9aeaf2dbb098e58c9350b6f9014d53ce98b6d6b1",1,"2019-05-21 13:50:28+01:00","Add ResolvingDataSource for just-in-time
resolution of DataSpecs.  Issue:#5779 PiperOrigin-
RevId: 249234058
",124723,887,53258,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3650","google/ExoPlayer","37fc1d879d6728debd2685ea21167704c7dbcfb1",4,"2019-05-21 16:05:56+01:00","Propagate attributes to DefaultTimeBar  Issue:
#5765 PiperOrigin-RevId: 249251150
",124735,887,53258,"olly","olly@google.com","Toni","tonihei@google.com"
"3651","google/ExoPlayer","a727acd29280969a7c11b3ee5db73257a11e5970",3,"2019-05-21 18:14:38+01:00","Remove nullness test blacklist for RTMP extension
PiperOrigin-RevId: 249274122
",124737,887,53258,"olly","olly@google.com","Toni","tonihei@google.com"
"3652","google/ExoPlayer","52888ab55b6bc8c8ebe8f6723937efe27c9a6a4d",3,"2019-05-21 18:21:42+01:00","Remove CronetEngineWrapper from nullness test
blacklist  PiperOrigin-RevId: 249275623
",124740,887,53258,"olly","olly@google.com","Toni","tonihei@google.com"
"3653","google/ExoPlayer","d836957138ba56db4d6459dbe87210ce24d97166",6,"2019-05-22 11:43:37+01:00","Remove some DataSource implementations from
nullness blacklist  PiperOrigin-RevId: 249419193
",124656,887,53131,"olly","olly@google.com","Toni","tonihei@google.com"
"3654","google/ExoPlayer","10ee7d8e861132a0d937ebf585a437ff491cf1b4",16,"2019-05-22 13:40:12+01:00","Remove more classes from nullness blacklist
PiperOrigin-RevId: 249431027
",124682,887,53132,"olly","olly@google.com","Toni","tonihei@google.com"
"3655","google/ExoPlayer","f74d2294be0160fe1391b420a4e357c2dce5baf7",12,"2019-05-22 13:47:59+01:00","Remove media-session extension nullness blacklist
PiperOrigin-RevId: 249431620
",124705,887,53132,"olly","olly@google.com","Toni","tonihei@google.com"
"3656","google/ExoPlayer","118218cc73efecb62d1ae3be39a490eaca5edd5c",13,"2019-05-22 13:55:46+01:00","Remove cronet extension nullness blacklist
PiperOrigin-RevId: 249432337
",124721,887,53134,"olly","olly@google.com","Toni","tonihei@google.com"
"3657","google/ExoPlayer","8d329fb41f19cb9303f90158c6b84ced1af955d3",1,"2019-05-23 13:24:01+01:00","Move DefaultDrmSession resource acquisition to
acquire  PiperOrigin-RevId: 249624318
",124731,887,53134,"aquilescanta","aquilescanta@google.com","Toni","tonihei@google.com"
"3658","google/ExoPlayer","14c46bc4062ebc2cf45f96138dc8a5e36bf41da5",17,"2019-05-23 14:59:17+01:00","Remove contentTypePredicate from DataSource
constructors  The only known use case for
contentTypePredicate is to catch the case when a
paywall web page is returned via a DataSource,
rather than the data that was being requested.
These days streaming providers should be using
HTTPS, where this problem does not exist. Devices
have also gotten a lot better at showing their own
notifications when paywalls are detected, which
largely mitigates the need for the app to show a
more optimal error message or redirect the user to
a browser.  It therefore makes sense to
deprioritize this feature. In particular by
removing the arg from constructors, where nearly
all applications are probably passing null.
PiperOrigin-RevId: 249634594
",124856,887,53215,"olly","olly@google.com","Toni","tonihei@google.com"
"3659","google/ExoPlayer","3e990a3d24e28eeaefd57f7e5bfb5b3522f05adb",38,"2019-05-23 16:54:45+01:00","Fix nullness warning for MediaSource/MediaPeriod
classes.  PiperOrigin-RevId: 249652301
",124899,887,53215,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3660","google/ExoPlayer","47cc567dcaf26bf9ee673e0346317dc15a80ac1e",1,"2019-05-28 15:33:57+01:00","Add reference counting to DrmSession  This CL
should not introduce any functional changes.
PiperOrigin-RevId: 250277165
",124947,887,53220,"aquilescanta","aquilescanta@google.com","Toni","tonihei@google.com"
"3661","google/ExoPlayer","90325c699e735bcd80b92ed6d7386ce75585f8b8",6,"2019-05-28 17:40:50+01:00","Allow enabling decoder fallback in
DefaultRenderersFactory  Also allow enabling
decoder fallback with MediaCodecAudioRenderer.
Issue: #5942 PiperOrigin-RevId: 250301422
",125092,887,53258,"andrewlewis","andrewlewis@google.com","Toni","tonihei@google.com"
"3662","google/ExoPlayer","77595da1592836bd988d3a6f9bba473701e30456",5,"2019-05-30 13:01:33+01:00","Add initial PlaybackStats listener version.  This
version includes all playback state related
metrics and the general listener set-up.
PiperOrigin-RevId: 250668729
",125778,888,53577,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3663","google/ExoPlayer","fd1179aaa14b4973ba335fe001ac0224678f6b02",4,"2019-05-30 13:02:01+01:00","Add remaining PlaybackStatsListener metrics.  This
adds all the non-playback-state metrics, like
format, error, bandwidth and renderer performance
metrics.  PiperOrigin-RevId: 250668854
",126277,888,53762,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3664","google/ExoPlayer","9ca6f60c3a1cd1642ee3e3a8e579184c6228cb07",1,"2019-06-03 23:35:34+01:00","Preserve postBody in CacheDataSource when reading
from upstream. Set appropriate Content-Type when
posting clientAbrState proto in post body.
PiperOrigin-RevId: 251322860
",126301,888,53764,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3665","google/ExoPlayer","28ee05f657c2051f6128fb0e35c859431570a5fd",1,"2019-06-14 08:24:31+02:00","Support for UDP data source
",126604,890,53807,"arodriguez","arodriguez@arantia.com","arodriguez","arodriguez@arantia.com"
"3666","google/ExoPlayer","3bff79f56f5c2f80f225f626b86166034300017d",12,"2019-06-07 16:35:56+01:00","Wrap MediaCodec exceptions in DecoderException and
report as renderer error.  We currently report
MediaCodec exceptions as unexpected exceptions
instead of as renderer error. All such exceptions
are now wrapped in a new DecoderException to allow
adding more details to the exception.
PiperOrigin-RevId: 252054486
",126941,890,53878,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3667","google/ExoPlayer","cc337a3e2d42118acfa32bd33eff0b7d207605ca",5,"2019-06-07 23:09:13+01:00","Update nullness annotations.  PiperOrigin-RevId:
252127811
",126944,890,53876,"olly","olly@google.com","Toni","tonihei@google.com"
"3668","google/ExoPlayer","04524a688ded24b108abc574360f1902e077860c",2,"2019-06-15 15:59:57+02:00","Add convenience constructors for notification
channel descriptions
",127024,890,53963,"Tim Balsfulland","timbalsfulland@gmail.com","Tim Balsfulland","timbalsfulland@gmail.com"
"3669","google/ExoPlayer","1266d5967be77af9f0be5636d10eea940e983b43",6,"2019-06-17 09:56:50+01:00","Fix all FIXME comments.  These are mostly
nullability issues.  PiperOrigin-RevId: 253537068
",126969,890,53886,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3670","google/ExoPlayer","4e504bc485cfaef7b56deb7da6f7a33ce12b494b",5,"2019-06-26 11:49:08+01:00","Rename DeferredMediaPeriod to MaskingMediaPeriod.
This better reflects its usage and fits into our
general naming pattern.  PiperOrigin-RevId:
255157159
",131144,905,54685,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3671","google/ExoPlayer","2a765f6b5a51144a171e5e2bfcb93f95ad638330",12,"2019-06-27 17:03:54+01:00","Visibility clean-up: Don't extend visibility of
protected methods in overrides.  PiperOrigin-
RevId: 255412493
",131024,904,54609,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3672","google/ExoPlayer","244c202c5667600e1e6613da426f01018ceb20a4",1,"2019-06-27 19:26:56+01:00","Fix hidden API warnings from Metalava
PiperOrigin-RevId: 255442455
",131032,904,54607,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3673","google/ExoPlayer","7408b4355a990f9a450815ddea9c62945ea9543a",16,"2019-07-02 15:33:50+01:00","Add DRM format support checks for MediaSource
provided DRM  PiperOrigin-RevId: 256161522
",127224,888,53848,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3674","google/ExoPlayer","7964e51e0e46bd89f81c9f4b7ad75221ea24d8a4",10,"2019-07-02 19:15:08+01:00","Remove more classes from nullness blacklist
PiperOrigin-RevId: 256202135
",127245,888,53846,"olly","olly@google.com","Toni","tonihei@google.com"
"3675","google/ExoPlayer","4c2f211e28b33bd2b60aeb7cd25f8c01f78e4401",9,"2019-07-02 20:14:38+01:00","Remove Flac and Opus renderers from nullness
blacklist  PiperOrigin-RevId: 256213895
",127264,888,53846,"olly","olly@google.com","Toni","tonihei@google.com"
"3676","google/ExoPlayer","0145edb60d218a939d869f0dbab0ab7fc0a34477",5,"2019-07-03 15:07:55+01:00","Move MediaSource masking code into separate class.
The masking logic for unprepared MediaSources is
currently part of ConcatanatingMediaSource. Moving
it to its own class nicely separates the code
responsibilities and allows reuse.  PiperOrigin-
RevId: 256360904
",127305,889,53872,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3677","google/ExoPlayer","1060c767fcb491780095a02f670f8e76850a885c",3,"2019-07-04 11:23:52+01:00","Simplify FlacExtractor (step toward enabling
nullness checking)  - Inline some unnecessarily
split out helper methods - Clear ExtractorInput
from FlacDecoderJni data after usage - Clean up
exception handling for StreamInfo decode failures
PiperOrigin-RevId: 256524955
",127306,889,53873,"olly","olly@google.com","Toni","tonihei@google.com"
"3678","google/ExoPlayer","0f364dfffc0c9af03316f473edd2ee49b7f20a2b",5,"2019-07-04 11:38:48+01:00","Remove FlacExtractor from nullness blacklist
PiperOrigin-RevId: 256526365
",127337,889,53877,"olly","olly@google.com","Toni","tonihei@google.com"
"3679","google/ExoPlayer","924cfac96657c70c1c97cfd906952af62d6a8160",8,"2019-07-04 20:02:20+01:00","Remove more low hanging fruit from nullness
blacklist  PiperOrigin-RevId: 256573352
",127358,889,53878,"olly","olly@google.com","Toni","tonihei@google.com"
"3680","google/ExoPlayer","fbb76243bdd4c910a1bf2ca725d50cb0269033b4",2,"2019-07-04 20:02:32+01:00","Clean up DRM post requests  - Explicitly specify
HTTP_METHOD_POST (previously this was   implicit
as a result of the body data being non-null) - Use
null when there's no body data (it's converted to
null inside of the DataSpec constructor anyway)
PiperOrigin-RevId: 256573384
",127359,889,53878,"olly","olly@google.com","Toni","tonihei@google.com"
"3681","google/ExoPlayer","e852ff1dfa1cc1b2339773c47d406c7506507040",11,"2019-07-05 17:07:38+01:00","Add Nullable annotations to CastPlayer
PiperOrigin-RevId: 256680382
",127374,889,53879,"olly","olly@google.com","Toni","tonihei@google.com"
"3682","google/ExoPlayer","ecd88c71d2ee5beb08a553091a418fb2e442b87b",9,"2019-07-06 11:09:36+01:00","Remove some UI classes from nullness blacklist
PiperOrigin-RevId: 256751627
",127381,889,53880,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3683","google/ExoPlayer","4b776ffe4264a93be7266c50fecc03f87db4d18b",2,"2019-07-10 20:29:18+05:18","Refactor FlacStreamInfo to FlacStreamMetadata
",127559,892,53955,"Venkatarama NG. Avadhani","venkatarama.avadhani@ittiam.com","Venkatarama NG. Avadhani","venkatarama.avadhani@ittiam.com"
"3684","google/ExoPlayer","49a2e5a5cba54c6f0099d5ba7df91059cc99a833",5,"2019-07-10 09:52:53+01:00","add manifest to Timeline.Window  - Remove manifest
argument from callbacks of Player.EventListener
and   SourceInfoRefreshListener. Instead make it
accessible through   Player.getCurrentManifest()
and Timeline.Window.manifest. - Fix all
MediaSource implementation to include the manifest
in the   Timeline instead of passing it to the
SourceInfoRefreshListener. - Refactor
ExoPlayerTestRunner, FakeTimeline, FakeMediaSource
to   reflect these changes and make tests pass.
PiperOrigin-RevId: 257359662
",127352,889,53888,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3685","google/ExoPlayer","91750b80098a0c721bbc45158912737517f80c69",3,"2019-07-11 11:16:54+01:00","Plumb DrmSessionManager into DashMediaSource
PiperOrigin-RevId: 257576791
",127421,889,53908,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3686","google/ExoPlayer","b9ab0cf137495eba377311c1b7dc572b78797a01",1,"2019-07-11 17:38:31+01:00","Plumb DrmSessionManager into SsMediaSource
PiperOrigin-RevId: 257624043
",127460,889,53919,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3687","google/ExoPlayer","df81bd6a682289ec7781cea2249353f6a71bceab",1,"2019-07-12 08:55:08+01:00","Make ExtractorMediaSource a CompositeMediaSource
instead of just wrapping.  It's easy to forget to
forward methods when using basic wrapping. For
example, ExtractorMediaSource.addEventListener is
currently a no-op because it's not forwarded.
PiperOrigin-RevId: 257757556
",127608,892,53972,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3688","google/ExoPlayer","510f1883b055b042425555378cdf7302decf88b1",3,"2019-07-12 12:01:18+01:00","Plumb DrmSessionManager into
ProgressiveMediaSource  PiperOrigin-RevId:
257777513
",127640,892,53980,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3689","google/ExoPlayer","3fe0b1a6fee8e7631caa5a6f84306396ee6999ad",2,"2019-07-12 18:32:58+01:00","Rename SourceInfoRefreshListener to
MediaSourceCaller.  This better reflects its usage
as a caller identifier and not just a listener.
PiperOrigin-RevId: 257827188
",127636,892,53972,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3690","google/ExoPlayer","01376443b36f70c1fe377e4898959dfa34f6024a",1,"2019-07-16 16:39:23+01:00","Add MediaSource.enable/disable.  These methods
helps to indicate that a media source isn't used
to create new periods in the immediate term and
thus limited resources can be released.
PiperOrigin-RevId: 258373069
",127715,892,54014,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3691","google/ExoPlayer","421f6e0303d324010a7e2c32c6b5fa9fe36987be",1,"2019-07-18 18:37:55+01:00","Add AV1 HDR profile recognition  Recognize
AV1ProfileMain10HDR when getting codec profile and
level.  PiperOrigin-RevId: 258799457
",128109,892,54060,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3692","google/ExoPlayer","3a53543a9af343e23d34af6fdfa551d9baf05464",4,"2019-07-22 19:27:05+01:00","Move HLS DrmInitData adjustment to the writing
side  + Emulates what's done for ID3 stripping. +
Also avoid a copy if fields will not change
because of the   copy.  PiperOrigin-RevId:
259369101
",128149,892,54079,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3693","google/ExoPlayer","e84d88e90f62d1755317cd692496bac58c5b07d3",3,"2019-07-24 11:05:27+01:00","Simplify and improve text selection logic.  This
changes the logic in the following ways:  - If no
preferred language is matched, prefer better
scores for the selected    audio language.  - If a
preferred language is matched, always prefer the
better match    irrespective of default or forced
flags.  - If a preferred language score and the
isForced flag is the same, prefer    tracks with a
better selected audio language match.
PiperOrigin-RevId: 259707430
",128111,892,54076,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3694","google/ExoPlayer","59331c3c887ce8d42b76aa2e1c46106028f862dc",1,"2019-07-24 15:34:07+01:00","Report mediaPeriodCreated/Released in
MaskingMediaSource.  Creating a period in
MaskingMediaSource may result in delayed event
reporting depending on when the actual period gets
created. To avoid event reporting inaccuracies,
report the mediaPeriodCreated and
mediaPeriodReleased events directly.  Issue:#5407
PiperOrigin-RevId: 259737170
",128129,892,54073,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3695","google/ExoPlayer","074307dd4c4a591dd851afe3a7ce315505585ffc",1,"2019-07-24 15:34:29+01:00","Improve knowledge of last playing period in
AnalyticsCollector.  We keep track of the last
publicly known playing period to report it as part
of events happening after the period has been
released.  In cases where a period briefly becomes
the playing one and is released immediately
afterwards, we currently don't save it as the
""last known playing one"". Improve that by saving
an explicit reference.  Issue:#5407 PiperOrigin-
RevId: 259737218
",128130,892,54073,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3696","google/ExoPlayer","596be3b71ba1e37fe02dd82b13d3042d97711ff9",15,"2019-07-25 22:32:04+01:00","Cast: Simplify MediaItem/Sample to a single
MediaItem class  PiperOrigin-RevId: 260021990
",128067,892,54037,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3697","google/ExoPlayer","bba0a27cb6fda742e29ef31aa5b52889076fb181",3,"2019-07-14 16:24:00+01:00","Merge pull request #6151 from ittiam-
systems:bug-5527  PiperOrigin-RevId: 257668797
",124222,886,53243,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3698","google/ExoPlayer","ea64ecf2c40854deed3120d2fb38b68f67ec516d",1,"2019-07-29 14:12:42+05:18","Parse Picture Metadata in FLAC
",128212,894,54084,"Venkatarama NG. Avadhani","venkatarama.avadhani@ittiam.com","Venkatarama NG. Avadhani","venkatarama.avadhani@ittiam.com"
"3699","google/ExoPlayer","846e0666dfe3de143668fcbfe932a14995893763",4,"2019-07-29 11:06:24+01:00","Restructure updatePeriods code for better
readability.  Moved update of reading and playing
periods in their own respective method. This is a
no-op change.  PiperOrigin-RevId: 260463668
",128090,892,54032,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3700","google/ExoPlayer","d77d661e5283cb3ae55cbc2f29098e2f964e30b5",1,"2019-07-29 13:41:48+01:00","Default viewport constraints to match primary
display  PiperOrigin-RevId: 260479923
",128157,892,54067,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3701","google/ExoPlayer","06f94815050b9f9e990c7c9d3d7b7eb0bbebecc1",2,"2019-07-29 17:41:04+01:00","Support different drm schemes in playlists in the
demo app  This CL changes PlayerActivity's
VIEW_LIST action intent contract: Each media item
configuration is provided by indexing the entries.
For example, the URI of the first item is passed
as ""uri_0"", the second one is ""uri_1"", etc.
Optionally, the extra parameters, like the
extensions, are passed as ""extension_1"", where the
intent extras with matching indices, refer to the
same media sample.  The VIEW action's contract
remains unchanged.  PiperOrigin-RevId: 260518118
",128222,893,54086,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3702","google/ExoPlayer","46855884f583f95680e5928a0613ce494d08be58",3,"2019-07-29 20:22:00+01:00","Fix samples' text in Cast demo app  PiperOrigin-
RevId: 260553467
",128246,895,54123,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3703","google/ExoPlayer","8be78d47ac5eeac8ae7b21abbe6e61c8f887f10e",1,"2019-07-29 20:26:53+01:00","Cast: Add JSON serialization/deserialization for
MediaItem  This will allow the Cast extension to
reconstruct MediaItems from MediaQueueItems
obtained from the receiver's queue.  PiperOrigin-
RevId: 260554381
",128348,896,54146,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3704","google/ExoPlayer","561949a2251b6fc8c96f36771328c0a5e43fe4e2",4,"2019-08-01 09:45:57+01:00","Remove AnalyticsCollector.Factory.  This factory
was only needed in the past when we didn't have
AnalyticsCollector.setPlayer. Code becomes easier
to use without this factory.  PiperOrigin-RevId:
261081860
",128415,899,54199,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3705","google/ExoPlayer","42d3ca273ba94c85169f8a6697a8e9282a4a5737",1,"2019-08-01 18:39:20+01:00","Propagate non-standard MIME type aliases  Issue:
#5938 PiperOrigin-RevId: 261150349
",128676,901,54246,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3706","google/ExoPlayer","309d043ceeb9d1adb392ebebf12f7e300b45780c",1,"2019-08-01 20:37:19+01:00","Merge pull request #6239 from ittiam-
systems:vorbis-picture-parse  PiperOrigin-RevId:
261087432
",124586,888,53340,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3707","google/ExoPlayer","591bd6e46a0c10138fe0ea466c42378c030fbc89",7,"2019-08-06 10:34:15+01:00","Fix UI module API nullability annotations and make
non-null-by-default.  PiperOrigin-RevId: 261872025
",128757,915,54481,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3708","google/ExoPlayer","b0330edc0b83105a034b95cb9dca096a2ed1e1c6",29,"2019-08-06 12:46:39+01:00","Fix some Android Studio nullness warning created
by new @NonNullApi.  PiperOrigin-RevId: 261888086
",128798,915,54469,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3709","google/ExoPlayer","a9b93d7ec2b30450c1f15dbf1b1abefd0c8cb705",12,"2019-08-06 15:34:36+01:00","Fix some remaining extension API nullability
issues.  PiperOrigin-RevId: 261910303
",128818,915,54469,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3710","google/ExoPlayer","074b6f8ebd14371ccfa699fadacb8b15dcdc1b57",98,"2019-08-07 14:36:57+01:00","Fix DASH module API nullability issues and add
package-level non-null-by-default  PiperOrigin-
RevId: 262123595
",128909,918,54585,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3711","google/ExoPlayer","58d4fd93dd07d9ad7af8b76eed111be5550bb0d1",14,"2019-08-07 14:42:47+01:00","Fix HLS module API nullability issues and add
package-level non-null-by-default  PiperOrigin-
RevId: 262124441
",128927,921,54628,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3712","google/ExoPlayer","70b912c23e445ce89aa8932a88ad7d149fcd52d2",4,"2019-08-08 09:22:26+01:00","Fix API nullability of remaining extensions and
mark them as non-null-by-default  PiperOrigin-
RevId: 262303610
",128913,922,54638,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3713","google/ExoPlayer","313bd109517351e758f5c0a0085b9d780a459e6e",28,"2019-08-08 09:44:58+01:00","Fix SS module API nullability issues and add
package-level non-null-by-default  PiperOrigin-
RevId: 262306255
",128954,925,54683,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3714","google/ExoPlayer","4e50682fa79a7c0aaf47bb27c02abe4222375dba",2,"2019-08-12 18:18:12-07:00","Support negative value of the @r attrbute of S in
SegmentTimeline element
",128963,925,54685,"sr1990","sr1990003@gmail.com","sanil","sr1990003@gmail.com"
"3715","google/ExoPlayer","5fcc4de1fd10f597936582e3a3459ba4ef3fb434",7,"2019-08-12 12:56:50+01:00","Add SimpleDecoder video base renderer  This
renderer will be extended by both vp9 and av1
renderers.  PiperOrigin-RevId: 262900391
",129045,926,54754,"sofijajvc","sofijajvc@google.com","Andrew Lewis","andrewlewis@google.com"
"3716","google/ExoPlayer","860aa2f952468b777cb691e45da8f7cbc8700398",5,"2019-08-13 11:25:54+01:00","Remove video decoder buffers from nullness
blacklist  PiperOrigin-RevId: 263104935
",129051,926,54755,"sofijajvc","sofijajvc@google.com","Andrew Lewis","andrewlewis@google.com"
"3717","google/ExoPlayer","0e33123938368b6606d1d55496e6b746465a42f6",38,"2019-08-13 15:45:43+01:00","Turn on non-null-by-default for some core library
packages.  And add missing some missing
annotations to the publicly visible API of these
packages.  PiperOrigin-RevId: 263134804
",129120,938,54931,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3718","google/ExoPlayer","81a290f1ee7c36144de53215e7be974664526f28",2,"2019-08-14 10:48:18+01:00","Add internal method for format support
PiperOrigin-RevId: 263312721
",129123,938,54939,"sofijajvc","sofijajvc@google.com","Andrew Lewis","andrewlewis@google.com"
"3719","google/ExoPlayer","a572fb3f22d73c60ce5ab3eaa7db9dd1e3356dcb",8,"2019-08-14 12:37:44+01:00","Add a metadata argument to Format factory methods
used in HLS  Required for propagation of
HlsMetadataEntry's in chunkless preparation.
PiperOrigin-RevId: 263324345
",129140,938,54942,"aquilescanta","aquilescanta@google.com","Andrew Lewis","andrewlewis@google.com"
"3720","google/ExoPlayer","cd4571161ae2bbe97788a2bf8ba51ed0580d407d",1,"2019-08-14 14:41:40+01:00","Add builders for SimpleExoPlayer and ExoPlayer.
The current ExoPlayerFactory is growing too big
and usage becomes increasingly complicated because
it's not possible to set individual components
without specifying many other defaults.  Adding
new builder classes makes building easier and more
future-proof.  PiperOrigin-RevId: 263339078
",129312,938,54962,"tonihei","tonihei@google.com","Andrew Lewis","andrewlewis@google.com"
"3721","google/ExoPlayer","4b75d3338e01b809c4ac7928deef9e572153203f",1,"2019-08-14 18:46:12+01:00","Expand FakeSampleStream to allow specifying a
single sample  I removed the buffer.flip() call
because it seems incompatible with the way
MetadataRenderer deals with the Stream - it calls
flip() itself on line 126. Tests fail with flip()
here, and pass without it...  PiperOrigin-RevId:
263381799
",128476,934,54781,"ibaker","ibaker@google.com","Andrew Lewis","andrewlewis@google.com"
"3722","google/ExoPlayer","567d078e9e0082a721751588607868d74a9c528c",2,"2019-08-15 12:00:30+01:00","Fix createDecoder method declaration  PiperOrigin-
RevId: 263534628
",128488,934,54834,"sofijajvc","sofijajvc@google.com","Andrew Lewis","andrewlewis@google.com"
"3723","google/ExoPlayer","ebb72e358f8bc6dd3fa39d3e7bce46269641074c",5,"2019-08-15 12:09:48+01:00","Support unwrapping nested Metadata messages in
MetadataRenderer  Initially this supports ID3-in-
EMSG, but can also be used to support SCTE35-in-
EMSG too.  PiperOrigin-RevId: 263535925
",128633,935,54875,"ibaker","ibaker@google.com","Andrew Lewis","andrewlewis@google.com"
"3724","google/ExoPlayer","3198b9efacd8d6c2e0dd2607f067ee16b1d57ba5",1,"2019-08-19 18:07:56-07:00","Support negative value of the @r attrbute of S in
SegmentTimeline element
",128964,925,54685,"sr1990","sr1990003@gmail.com","sanil","sr1990003@gmail.com"
"3725","google/ExoPlayer","f0aae7aee5db46c2386128cdd5fe49f31f3a5389",4,"2019-08-21 12:47:45+01:00","Support out-of-band HDR10+ metadata for VP9
Extract supplemental data from block additions in
WebM/Matroska.  Allow storing supplemental data
alongside samples in the SampleQueue and write it
as a separate field in DecoderInputBuffers.
Handle supplemental data in the VP9 extension by
propagating it to the output buffer.  Handle
supplemental data for HDR10+ in
MediaCodecVideoRenderer by passing it to
MediaCodec.setParameters, if supported by the
component.  PiperOrigin-RevId: 264582805
",128810,935,54908,"andrewlewis","andrewlewis@google.com","Toni","tonihei@google.com"
"3726","google/ExoPlayer","29af6899feebdb4e348cd50ea5eb595af059771a",3,"2019-08-23 10:18:26+01:00","Move playback error into PlaybackInfo.  The error
is closely related to the playback state IDLE and
should be updated in sync with the state to
prevent unexpected event ordering and/or keeping
the error after re-preparation.  Issue:#5407
PiperOrigin-RevId: 265014630
",128876,935,54920,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3727","google/ExoPlayer","d1084f27284d44e8ad1652e33df9f1fae335ad9e",1,"2019-08-23 16:57:14+01:00","Do not compare bitrates of audio tracks with
different languages.  The last selection criteria
is the audio bitrate to prefer higher-quality
streams. We shouldn't apply this criterium though
if the languages of the tracks are different.
Issue:#6335 PiperOrigin-RevId: 265064756
",128920,935,54926,"tonihei","tonihei@google.com","Toni","tonihei@google.com"
"3728","google/ExoPlayer","ce37b7eea20c7af2db20486a604d8985d13f7233",2,"2019-08-23 18:48:14+01:00","Add HTTP request parameters (headers) to DataSpec.
Adds HTTP request parameters in DataSpec. Keeps
DataSpec behavior to be immutable as before.
PiperOrigin-RevId: 265087782
",129036,936,54955,"christosts","christosts@google.com","Oliver Woodman","olly@google.com"
"3729","google/ExoPlayer","48555550d7fcf6953f2382466818c74092b26355",4,"2019-08-30 10:17:02+01:00","Surface MediaCodecInfo methods added in Android Q
- Surface information provided by methods
isHardwareAccelerated,   isSoftwareOnly and
isVendor added in Android Q in MediaCodecInfo
class. - Estimate this information based on the
codec name for earlier API   levels.  Issue:#5839
PiperOrigin-RevId: 266334850
",129119,936,54997,"kimvde","kimvde@google.com","Oliver Woodman","olly@google.com"
"3730","google/ExoPlayer","494b6f6f3bcc854ab4d224c426b5d6b3546623e8",1,"2019-09-02 14:35:44+01:00","Re-use local variable in replacement of
unnecessary indirections  PiperOrigin-RevId:
266772364
",129225,937,55042,"aquilescanta","aquilescanta@google.com","Toni","tonihei@google.com"
"3731","google/ExoPlayer","64829a0373b73870f52549ede17197abfa860b72",1,"2019-09-02 21:29:09+01:00","Calculate loadDurationMs in DefaultDrmSession key
and provisioning requests  PiperOrigin-RevId:
266812110
",129246,937,55041,"aquilescanta","aquilescanta@google.com","Toni","tonihei@google.com"
"3732","google/ExoPlayer","2866b2b3e4d1f0161a7d7f7b39562b75cae897aa",5,"2019-09-06 13:12:16+01:00","Make renderers ignore drmInitData if the
MediaSource provides a DrmSession  Will allows to
use a DrmSession for clear periods.  Issue:#4867
PiperOrigin-RevId: 267576982
",129556,938,55130,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3733","google/ExoPlayer","e21467f653ed5d0bc1cbdeab59d571be9f33630f",2,"2019-09-09 13:58:59+01:00","Fix Dolby Vision fallback to AVC and HEVC
PiperOrigin-RevId: 267979637
",129571,938,55133,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3734","google/ExoPlayer","143d7d6cca549e408ad60ce66aedf4ba933d8a08",2,"2019-09-11 19:04:45+01:00","Implement acquirePlaceholderSession in
DefaultDrmSessionManager  Issue:#4867 PiperOrigin-
RevId: 268497377
",129664,938,55169,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3735","google/ExoPlayer","56302731559b25521ae24412a64596415c2ed1d9",5,"2019-09-16 13:56:27+01:00","Add DummyExoMediaDrm  Allows streamlining the way
we handle unsupported DRM. In general, either:  *
The device does not support the CDM. For example,
phones don't support   PlayReady. * The device
does not support the protection scheme. For
example, API < 25   devices do not support AES-
CBC.  Currently we handle both cases differently.
A dummy ExoMediaDrm will allow the existence of
dummy DefaultDrmSessionManagers.  PiperOrigin-
RevId: 269315687
",129838,939,55274,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3736","google/ExoPlayer","26e293070e3f55fdb59331c6cf5caf1cadce3210",2,"2019-09-10 17:43:21+01:00","Merge pull request #6158 from xirac:dev-v2
PiperOrigin-RevId: 268240722
",125110,889,53507,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3737","google/ExoPlayer","3b22db33ba944df6829b1eff328efb0cd25e1678",3,"2019-09-17 17:20:11+01:00","add top-level playlist API to ExoPlayer  Public
design doc: https://docs.google.com/document/d/11h
0S91KI5TB3NNZUtsCzg0S7r6nyTnF_tDZZAtmY93g  Issue:
#6161 PiperOrigin-RevId: 269584512
",131767,941,55606,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3738","google/ExoPlayer","216f74ecc78612d06759c6009d28ef6a6b6ff516",1,"2019-09-20 19:42:17+01:00","avoid unexpected state changes with certain
playlist states  With the internal playlist some
new situation may happen that were not possible
before:  - handlePlaylistInfoRefreshed in EPII
called in IDLE state - handlePlaylistInfoRefreshed
in EPII called in ENDED state with an empty
playlist - seeks in ENDED state with an empty
playlist  PiperOrigin-RevId: 270316681
",132088,941,55722,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3739","google/ExoPlayer","258fff422ac02c9b046fac995dfd1e983ba1bfd4",2,"2019-09-21 20:34:15+01:00","Publish SurfaceControl demo  Issue: #677 Issue:
#5428 PiperOrigin-RevId: 270466031
",132316,942,55746,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3740","google/ExoPlayer","5695bae9d8fde5e156fd38fa552e266c5611c71f",2,"2019-09-23 14:27:35+01:00","Remove DataSpec.FLAG_ALLOW_ICY_METADATA  Remove
the flag DataSpec.FLAG_ALLOW_ICY_METADATA.
Instead, set the header
IcyHeaders.REQUEST_HEADER_ENABLE_METADATA_NAME in
the DataSpec httpRequestHeaders.  BUG:134034248
PiperOrigin-RevId: 270662676
",132378,942,55771,"christosts","christosts@google.com","Oliver Woodman","olly@google.com"
"3741","google/ExoPlayer","c2bab7a7455467d6c2166871d04fe2f28f0143a8",1,"2019-09-25 16:18:30+01:00","Introduce ExoMediaDrm.Provider into
DefaultDrmSessionManager  Issue:#4721 PiperOrigin-
RevId: 271127127
",130225,940,55322,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3742","google/ExoPlayer","d632cb86c13edc398bcd0400a5bee0e3f6bad808",2,"2019-09-26 20:21:51+01:00","Make multisession work well with placeholder
session  Issue:#4867 PiperOrigin-RevId: 271404942
",130245,940,55341,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3743","google/ExoPlayer","22c3be75ea9c07b8c7e076041f6c1634d029ebba",1,"2019-09-27 15:45:55+01:00","Extract vpx code used for GL rendering to common
classes  This will be used by both vp9 and av1
Exoplayer extensions.  PiperOrigin-RevId:
271568429
",130258,940,55359,"sofijajvc","sofijajvc@google.com","Oliver Woodman","olly@google.com"
"3744","google/ExoPlayer","f0723a27b7a1aee99c03c1da9cba16f7bffeba6d",1,"2019-09-30 16:07:44+01:00","Move HLS mapped track picking into a separate
method  This helps reduce the amount of nesting in
HlsSampleStreamWrapper.track()  PiperOrigin-RevId:
271983779
",130324,940,55441,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3745","google/ExoPlayer","dd4f9bcaae74cf50d9d10b8bd4d3cb729d7dc51d",8,"2019-09-30 17:30:14+01:00","Add Timeline.Window.isLive  This flag is currently
merged into Window.isDynamic, which isn't always
true because 1. A window can be dynamic for other
reasons (e.g. when the duration is still missing).
2. A live stream can be become non-dynamic when it
ends.  Issue:#2668 Issue:#5973 PiperOrigin-RevId:
271999378
",130475,940,55468,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3746","google/ExoPlayer","f5873b8f00d339c9c8dabc6cdaeb4a58d8486010",2,"2019-10-01 11:57:31+01:00","WakeLock handling  Created the WakeLockManager for
use in SimpleExoPlayer. Added a setter in
SimpleExoPlayer to adjust this functionality.
Issue:#5846 PiperOrigin-RevId: 272176998
",130535,941,55529,"samrobinson","samrobinson@google.com","Oliver Woodman","olly@google.com"
"3747","google/ExoPlayer","03ba1c9a2fdc22f1b129288af53758429c93b5d0",2,"2019-10-03 13:50:17+08:00","return null if Seek Table is not supported.
proguard in flac-extension
",129224,937,55042,"wingyippp","wingyip1988@gmail.com","wingyippp","wingyip1988@gmail.com"
"3748","google/ExoPlayer","8f3a363dd24a25ce97396d2a7c619862e3e39633",4,"2019-10-04 18:05:52+01:00","Add OpenGL support to av1 extension:
Libgav1VideoRenderer  Move reusable code from
LibvpxVideoRenderer to SimpleDecoderVideoRenderer.
Pass outputBuffer to renderOutputBuffer method
instead of keeping the reference in the renderer.
PiperOrigin-RevId: 272899549
",130620,941,55546,"sofijajvc","sofijajvc@google.com","Oliver Woodman","olly@google.com"
"3749","google/ExoPlayer","48bfb37e93e23436f33330faf285470e1e3d5d4f",8,"2019-10-07 16:26:14+01:00","Fix surfacedemo nullness issues  PiperOrigin-
RevId: 273296545
",130651,941,55552,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3750","google/ExoPlayer","b052ea9bed269a61681387bf73a7eb7a126cc60f",3,"2019-10-07 16:30:04+01:00","Parse Label elements for adaptation sets  Issue:
#6297 PiperOrigin-RevId: 273297284
",130729,941,55569,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3751","google/ExoPlayer","70abbb9689b21553ab2447a75715f8cbd19779a8",9,"2019-10-09 10:36:58+01:00","Add test AV1 video to demo app  PiperOrigin-RevId:
273706425
",130858,944,55743,"sofijajvc","sofijajvc@google.com","Ian Baker","ibaker@google.com"
"3752","google/ExoPlayer","60566721d4b173eb767a083d5e91e71fd3b46c0c",4,"2019-10-10 13:10:41+01:00","Enable ID3-in-EMSG for HLS streams  This supports
both chunkless & traditional preparation
PiperOrigin-RevId: 273938344
",131067,945,55807,"ibaker","ibaker@google.com","Ian Baker","ibaker@google.com"
"3753","google/ExoPlayer","a268e1b63fd3430e586f153598741e8e30eb5820",1,"2019-10-11 11:29:58+01:00","Test audio focus denial  - Verifies that
playWhenReady doesn't become true if audio focus
is denied. - Also verifies there's no suppression
reason in this case, because   the denial is
permanent rather than temporary.  PiperOrigin-
RevId: 274141099
",131130,945,55831,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3754","google/ExoPlayer","674e92e1ee87c8951b8c829ed7748a1e7fad3a8a",1,"2019-10-11 12:36:49+01:00","provide content description for the player view to
make show/hide controls accessible  PiperOrigin-
RevId: 274148026
",131161,945,55836,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3755","google/ExoPlayer","4ae79105ded962c3c5f476a70db0cc71c3e8d701",2,"2019-10-11 14:39:23+01:00","Make FileDataSourceFactory an inner class  This is
a proof of concept for cleanup we should do for
all of our DataSource implementations as we move
toward stabilizing parts of the API.  - Move all
XDataSourceFactory classes to be inner classes. -
Remove chained constructors for XDataSourceFactory
classes. Keep   required args going through
constructors. Use setters for the   rest. - Not
applicable in this case, but we probably want to
deprecate   all but the no-arg method for
instantiating eac XDataSource   instance (with the
all-arg method kept but with the intention   of
making it package private).  PiperOrigin-RevId:
274162076
",131170,945,55840,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3756","google/ExoPlayer","1c66010b4a6edd99fb3b392b5e7efb30aa2c8ff3",3,"2019-10-11 15:37:57+01:00","Add MediaFormat on video frame metadata listener
This is useful for apps that want to access HDR
metadata that MediaCodec puts in its output
format.  PiperOrigin-RevId: 274169985
",131185,945,55843,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3757","google/ExoPlayer","6ebcac3883ef2a65e5432a71003af187bfc308b6",2,"2019-10-14 10:46:27+01:00","Remove DefaultHlsExtractorFactory from null-
checking blacklist  PiperOrigin-RevId: 274537528
",131187,945,55850,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3758","google/ExoPlayer","498a23e328c9d14a338f2d660f7201622f087d48",12,"2019-10-14 11:32:49+01:00","Add null-checker annotations to
HlsSampleStreamWrapper  PiperOrigin-RevId:
274545728
",131197,945,55850,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3759","google/ExoPlayer","eb677eb4b9feb2f5cae8cf2b0d3ab1ee57d26207",1,"2019-10-14 11:33:44+01:00","Add a Util.nullSafeArrayAppend and use it in
HlsSampleStreamWrapper  I could do this with
nullSafeArrayConcat but this saves allocating a
throw-away single-element array.  PiperOrigin-
RevId: 274545815
",131201,945,55857,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3760","google/ExoPlayer","e670b1d0f6aa6f70d622c9a474a25115e83c85f4",15,"2019-10-14 14:26:57+01:00","Remove HlsMediaChunk from null-checking blacklist
PiperOrigin-RevId: 274566133
",131226,945,55863,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3761","google/ExoPlayer","ce6252151af38ce1c428601af5bd0239d5fee305",1,"2019-10-14 16:36:42+01:00","disable download button for live content in demo
app  PiperOrigin-RevId: 274585052
",131246,945,55863,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3762","google/ExoPlayer","0ba91811d146e14b6bb814d15c8bb3e09011aa79",4,"2019-10-15 12:46:22+01:00","Break the inheritance of
FullSegmentEncryptionKeyCache  Use composition
instead.  This makes the null-handling more
explicit & complete (previous implementation tried
to prevent null values, but didn't override all
mutation methods e.g. replace(), putIfAbsent()
etc.)  PiperOrigin-RevId: 274778513
",131256,945,55884,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3763","google/ExoPlayer","fc95d07a941c011862b94e19dfa9aee869198f6e",6,"2019-10-15 14:12:30+01:00","Remove HlsChunkSource from null-checking blacklist
PiperOrigin-RevId: 274789337
",131273,945,55887,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3764","google/ExoPlayer","a95f0643b94fd248a8afd3b2c61ad12a9d22746c",1,"2019-10-15 14:44:26+01:00","Set isLive flag in CastTimeline based on
MediaInfo.  Issue:#2668 PiperOrigin-RevId:
274793644
",131287,945,55895,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3765","google/ExoPlayer","e63d3b4b618ad593945dc9491fe6a7e915ab4112",2,"2019-10-16 10:25:59+01:00","Add
HlsSampleStreamWrapper#assertPreparationComplete
This gives a clear way to ensure all the
preparation-related @MonotonicNonNull fields have
been set to something.  PiperOrigin-RevId:
274988280
",131238,945,55888,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3766","google/ExoPlayer","0d5b3c0fa4e7cdfa15c7f1fa3463b8550ac94c5d",4,"2019-10-16 17:49:23+01:00","Remove HlsMasterPlaylist from null-checking
blacklist  PiperOrigin-RevId: 275052534
",131277,946,55919,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3767","google/ExoPlayer","1317851535d46f0cdcbb0da44bfd0ca07dc53f58",3,"2019-10-18 11:20:20+01:00","Remove HLS WebVttExtractor from null-checking
blacklist  The null-checker wasn't clever enough
to understand the while-loop was safe so I
switched it to a for.  PiperOrigin-RevId:
275440464
",133803,948,56354,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3768","google/ExoPlayer","b7f335c715823a39f2070df4c5b49ef0d9d48d1a",2,"2019-10-18 11:21:42+01:00","Remove HlsSampleStreamWrapper from the null
checking blacklist  PiperOrigin-RevId: 275440589
",133809,948,56355,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3769","google/ExoPlayer","694ccf424bac5c1a22950c63baf4315576ba9329",1,"2019-10-18 16:30:20+01:00","Added an ICY header workaround for unseekable MP3
streams.  Issue:#6537 PiperOrigin-RevId: 275477266
",133829,949,56374,"samrobinson","samrobinson@google.com","Oliver Woodman","olly@google.com"
"3770","google/ExoPlayer","a0843d0e2f416310c59e6a3f6f58ee49dea8685f",1,"2019-10-21 17:51:45+01:00","Guard playWhenReady masking against regular status
updates  PiperOrigin-RevId: 275863101
",130690,940,55715,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3771","google/ExoPlayer","51e4f7b260a0eb77dec7abc830f216f582cb674e",1,"2019-10-22 10:30:09+01:00","Fix supplemental data handling with dropped frames
PiperOrigin-RevId: 276024935
",130773,942,55754,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3772","google/ExoPlayer","101746934f34af67637ae123dd07202d3826acb4",5,"2019-10-22 12:03:21+01:00","Guard repeatMode masking against regular status
updates  PiperOrigin-RevId: 276035838
",130778,942,55757,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3773","google/ExoPlayer","881fcf829a392813e1c6668d45c86e8d79d48566",32,"2019-10-23 23:38:46+01:00","Add some missing @Nullable to Format  PiperOrigin-
RevId: 276366002
",130789,942,55755,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3774","google/ExoPlayer","ac722a7a683bcce9fc48ec6547e857631ee0c79f",3,"2019-10-25 13:26:50+01:00","Remove HlsPlaylistParser from null-checking
blacklist  PiperOrigin-RevId: 276671167
",130839,942,55760,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3775","google/ExoPlayer","7277df3547943ba53f03f7d5a05f400bf10ce673",5,"2019-10-28 11:44:23+00:00","Remove @NonNull where it's implied by @NonNullApi
Also remove it from all tests, these aren't
covered by the null-checker  Covered by the
following package-info.java files: -
j/c/g/a/exoplayer2/ext/mediasession/package-
info.java - j/c/g/a/exoplayer2/package-info.java -
j/c/g/a/exoplayer2/offline/package-info.java -
j/c/g/a/exoplayer2/video/package-info.java -
j/c/g/a/exoplayer2/ui/package-info.java
PiperOrigin-RevId: 277038916
",130933,941,55730,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3776","google/ExoPlayer","87c30c0ba821e0184361a294eb8f59d67f905305",1,"2019-10-28 14:37:59+00:00","Change HlsPlaylistParser.LineIterator#next()
Update it to throw if hasNext() is false, to match
Java's Iterator interface.  This also simplifies
the null-checking annotations required
PiperOrigin-RevId: 277059766
",131018,942,55756,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3777","google/ExoPlayer","817772fcbd0716405e3d9a095d1ecd59c8bfce56",9,"2019-10-28 16:13:11+00:00","Add uncontroversial HLS nullness annotations  This
helps get HlsMediaPeriod off the blacklist.
PiperOrigin-RevId: 277076633
",131019,942,55757,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3778","google/ExoPlayer","aeefb79a86519a1539f503fb5ac2b3f0c7760ba7",21,"2019-10-30 09:11:06+00:00","Fix MediaCodecUtil nullability annotations
PiperOrigin-RevId: 277462799
",131043,942,55758,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3779","google/ExoPlayer","b3f94e3768577abfa365fcea88cbd04f5f2a1827",1,"2019-10-30 16:39:14+00:00","Update WebvttCue to use defaults from the spec
Cue's UNSET and null values should be used when
the source data doesn't specify *and* the spec
doesn't provide a clear default. In the WebVTT
case, the defaults are clear, so we use them
explicitly.  PiperOrigin-RevId: 277522899
",131108,942,55803,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3780","google/ExoPlayer","d29d45261713d3622995446e6f1249fb17376b8a",1,"2019-10-30 16:41:21+00:00","Switch (Mp4)WebvttDecoderTest to use Truth's
Expect  This means multiple failures are all
logged, instead of the test stopping when the
first assertion fails. Makes tests like this with
lots of independent assertions much easier to work
with.  I limited the expect to a single
assertCues() call, otherwise the error message
gets very long and is hard to read, but I still
think this is an improvement.  PiperOrigin-RevId:
277523300
",131123,942,55801,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3781","google/ExoPlayer","f55083ab48c785aa9801f8d8bde1bd5a1d8ccd50",1,"2019-10-31 15:49:27+00:00","Minor DRM documentation tweaks  PiperOrigin-RevId:
277729887
",131351,942,55834,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3782","google/ExoPlayer","656556b82845acc6d4d4afc796e9ce477c31e1ab",14,"2019-11-01 10:13:01+00:00","Clean up naming for GLSurfaceViews  PiperOrigin-
RevId: 277896757
",131420,942,55855,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3783","google/ExoPlayer","b972fd1f27d8ca657796423c0c9bc7cda07dd5aa",2,"2019-11-01 12:36:23+00:00","Remove WebvttCue from null-checking blacklist
PiperOrigin-RevId: 277910909
",131423,942,55857,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3784","google/ExoPlayer","2139973e2c83cf930e80769da194e2f3f058d45b",1,"2019-11-01 13:30:21+00:00","Remove WebvttParserUtil from null-checking
blacklist  PiperOrigin-RevId: 277916279
",131419,942,55857,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3785","google/ExoPlayer","129efa2ebf56776512d0d70d116c9884a1b66743",9,"2019-11-01 13:32:20+00:00","Remove WebvttCssStyle from null-checking blacklist
PiperOrigin-RevId: 277916508
",131427,942,55858,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3786","google/ExoPlayer","616f4774e1e8dbcbf753c18b6448b0d9d824b4e2",4,"2019-11-01 13:33:20+00:00","Remove WebvttCueParser from null-checking
blacklist  PiperOrigin-RevId: 277916639
",131443,942,55858,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3787","google/ExoPlayer","07e93c15f9278f0e6ac72efcb18421915a21f622",6,"2019-11-01 15:02:55+00:00","Add support for subtitle files in the demo app
issue:#5523 PiperOrigin-RevId: 277927555
",131520,943,55874,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3788","google/ExoPlayer","7e070683a38c96e2f55a305650765e300d8a6121",3,"2019-11-02 03:46:19+00:00","Expose getMetrics() in ExoV1 and ExoV2
FrameworkMediaDrm classes.  PiperOrigin-RevId:
278054214
",131546,946,55926,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3789","google/ExoPlayer","6286491621b3162b66f4e95481486244f815a4b3",10,"2019-11-07 17:50:18+00:00","Remove SubtitlePainter from null-checking
blacklist  PiperOrigin-RevId: 279107241
",132607,948,56188,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3790","google/ExoPlayer","abe0330f39f6c3c98f5e2024dee4e640827a0a9e",2,"2019-11-12 11:38:30+00:00","Add a track type argument to
DrmSessionManager.acquirePlaceholderSession
Issue:#4867 PiperOrigin-RevId: 279928345
",132710,948,56260,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3791","google/ExoPlayer","69e51505e46d56b8d2e565bb3b1e4198abc30f47",1,"2019-11-12 15:32:57+00:00","use getPeriodByUid when searching for subsequent
period of seek timeline  Issue: #6641 PiperOrigin-
RevId: 279963739
",132758,948,56268,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3792","google/ExoPlayer","7ca77c6002d36e621202ca484407647bbb336c6d",2,"2019-11-13 07:41:04+00:00","Make DrmSession acquire/release consistent with
ExoMediaDrm  This aligns the method naming and
Javadoc. The only remaining inconsistency I can
see is that the initial reference count for
DrmSession is 0 rather than 1. Unfortunately I
think it's not trivial to get these aligned,
because DefaultDrmSessionManager relies on being
able to do something between instantiation and the
DrmSession starting to open the session. In
practice this doesn't really matter, since
DrmSessions will be obtained via the manager,
which does increment thee reference count to 1 to
be consistent with how ExoMediaDrm acquisition
works.  PiperOrigin-RevId: 280136574
",132759,948,56273,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3793","google/ExoPlayer","bee62948131d8f1fe92fae720c9b6f07aba97048",18,"2019-11-13 09:31:07+00:00","Add clear methods for
VideoDecoderOutputBufferRenderer  Also add some
missing Nullable annotations.  PiperOrigin-RevId:
280150512
",132778,948,56280,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3794","google/ExoPlayer","51711a0c97e6ed012356951591ef07135ef2a20b",2,"2019-11-13 13:08:08+00:00","Fix MediaDrm leaks in OfflineLicenseHelper
PiperOrigin-RevId: 280176216
",132802,948,56278,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3795","google/ExoPlayer","8c848a2a53cf955d813df827ee6512501c127886",3,"2019-11-18 12:07:59+00:00","Remove option to disable loop filter for VP9
PiperOrigin-RevId: 281039634
",131565,947,56080,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3796","google/ExoPlayer","7f19b8850659b0fe0bf27f255a1e71c7e8230f1d",5,"2019-11-18 13:42:57+00:00","Make some listener methods default  PiperOrigin-
RevId: 281050034
",131518,947,56062,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3797","google/ExoPlayer","da9c985cce3e61190e4a2276b9e171a33831b66b",1,"2019-11-18 13:50:01+00:00","Fix byte order for HDR10+ static metadata  The
implementation of writing HDR10+ static metadata
assumed that the application would use default
(big endian) byte order for this metadata but
MediaCodec expects the order to match the
specification CTA-861.3.  PiperOrigin-RevId:
281050806
",131519,947,56062,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3798","google/ExoPlayer","8c3e6663d3213a1d5e5549666b35b63ec0e4f6cd",2,"2019-11-18 14:00:00+00:00","Clean up non-trivial track selection deprecation
PiperOrigin-RevId: 281051893
",131524,947,56057,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3799","google/ExoPlayer","d99b2c35091ab15cf0dead94b8f151bd8f0e73b3",3,"2019-11-18 16:56:52+00:00","Cleanup key request parameters  - Make NonNull,
which is already the case when using the manager
builder. - Better document
PLAYREADY_CUSTOM_DATA_KEY, now that
newPlayReadyInstance   is no more.  PiperOrigin-
RevId: 281079288
",131527,947,56068,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3800","google/ExoPlayer","b5d993536164e961962e89bb6cc94e140505bec5",4,"2019-11-18 17:32:48+00:00","Deprecate public renderer constructors that take a
DrmSessionManager  PiperOrigin-RevId: 281086336
",131607,947,56136,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3801","google/ExoPlayer","cc520a670ed8d7e571c845bf6a1f1410a3e0bd39",2,"2019-11-21 16:50:24+00:00","Simplify playback of clear samples without keys  -
Move property to DrmSession; it feels like a more
natural place   for it to go (and provides greater
flexibility). - Change flags to a boolean.
PiperOrigin-RevId: 281758729
",131628,947,56186,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3802","google/ExoPlayer","d30b0285a3136165d12ff8fd89bb585fac5f385f",1,"2019-11-26 09:10:39+00:00","Fix audio processor draining for reconfiguration
When transitioning to a new stream in a different
format, the audio processors are reconfigured.
After this, they are drained and then flushed so
that they are ready to handle data in updated
formats for the new stream.  Before this change,
some audio processors made the assumption that
after reconfiguration no more input would be
queued in their old input format, but this
assumption is not correct: during draining more
input may be queued. Fix this behavior so that the
new configuration is not referred to while
draining and only becomes active once flushed.
Issue: #6601 PiperOrigin-RevId: 282515359
",131558,947,56163,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3803","google/ExoPlayer","8e44e3b795667ad4792d3db9bfcd23d80a158e44",2,"2019-12-02 11:42:56+00:00","Remove LibvpxVideoRenderer from nullness blacklist
PiperOrigin-RevId: 283310946
",131563,947,56163,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3804","google/ExoPlayer","78e72abbc47d9d2c005b49e5b17f13e415cca99c",6,"2019-12-02 13:10:01+00:00","Remove row VP9 multi-threading option
PiperOrigin-RevId: 283319944
",131552,947,56160,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3805","google/ExoPlayer","b296b8d80744667ab502d729fda605f7e027f5e8",40,"2019-12-02 13:58:12+00:00","Remove nullness blacklist for UI module
PiperOrigin-RevId: 283324784
",131583,947,56178,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3806","google/ExoPlayer","ab1d54d0acaadfa8b020ccf5a5bc3b32e6b2d716",5,"2019-12-04 09:59:01+00:00","Merge pull request #6696 from
phhusson:fix/nullable-selection-override
PiperOrigin-RevId: 283347700
",131599,947,56178,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3807","google/ExoPlayer","92566323da68addfd64c2103d236e444a25b2d9b",20,"2019-12-02 18:24:59+00:00","Remove some more core classes from nullness
blacklist  PiperOrigin-RevId: 283366568
",131626,947,56173,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3808","google/ExoPlayer","9e238eb6d365e76b20e39147aeae5091ea4451ee",4,"2019-12-03 16:05:27+00:00","MediaSessionConnector: Support
ACTION_SET_CAPTIONING_ENABLED  PiperOrigin-RevId:
283546707
",131655,947,56173,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3809","google/ExoPlayer","5171a4bf5ed152fff38f8734eef46579035e7e29",2,"2019-12-03 17:42:48+00:00","reduce number of notification updates  Issue:
#6657 PiperOrigin-RevId: 283563218
",131670,947,56175,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3810","google/ExoPlayer","6a354bb29fc4c0cc8a13888fb6de2de721da3ba4",10,"2019-12-05 10:19:27+00:00","Merge pull request #6595 from szaboa:dev-v2-ssa-
position  PiperOrigin-RevId: 283722376
",132175,949,56303,"Ian Baker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3811","google/ExoPlayer","7d7c37b3248678826b3274574e863486ea1af93f",6,"2019-12-04 14:28:18+00:00","Add NonNull annotations to metadata packages  Also
remove MetadataRenderer and SpliceInfoDecoder from
the nullness blacklist  PiperOrigin-RevId:
283744417
",132201,955,56424,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3812","google/ExoPlayer","e97b8347eb190f12191c5b97d1c086326387f9bb",15,"2019-12-04 15:41:41+00:00","Add IntDefs for renderer capabilities.  This
simplifies documentation and adds compiler checks
that the correct values are used.  PiperOrigin-
RevId: 283754163
",132336,955,56463,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3813","google/ExoPlayer","cab05cb71de25a3af36048d91c47c61f9c2c0f17",2,"2019-12-04 20:29:56+00:00","Two minor nullability fixes  PiperOrigin-RevId:
283810554
",132336,955,56464,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3814","google/ExoPlayer","e10a78e6b7a2ccfe8d21d460b08fcfdf5fec4100",46,"2019-12-05 13:02:01+00:00","Add NonNull annotations to text packages
PiperOrigin-RevId: 283951181
",132398,960,56521,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3815","google/ExoPlayer","1e609e245b6510d7cac637632ead936c5fb62dc9",5,"2019-12-05 14:59:42+00:00","Add format and renderer support to renderer
exceptions.  This makes the exception easier to
interpret and helps with debugging of externally
reported issues.  PiperOrigin-RevId: 283965317
",132451,960,56558,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3816","google/ExoPlayer","5bead4acbbe46ee382c61a830af02b6fb687eedd",1,"2019-12-10 11:26:41+00:00","Make DefaultTimeBar exclude itself for gestures
Issue: #6685 PiperOrigin-RevId: 284736041
",132577,961,56601,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3817","google/ExoPlayer","5d2ca02c5a628f33a01fa7501cd762b6ed165dc1",3,"2019-12-18 18:09:42+00:00","Unwrap all nested IntDef values  This seems to
work with R8 but interact badly with ProGuard.
issue:#6771 PiperOrigin-RevId: 286215262
",132645,960,56609,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3818","google/ExoPlayer","b7bc1fee9f39362039efd3465a0e34a0920f1ebe",2,"2019-12-20 10:23:27+00:00","Add missing @Nullable to
MediaCodecAudioRenderer.getMediaClock  Without
this @Nullable, potential subclasses can't
override the method to return null if they don't
want to use the renderer as a media clock.
Issue:#6792 PiperOrigin-RevId: 286545736
",132647,960,56609,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3819","google/ExoPlayer","dcebf93ab4f7b8746e2a1025f8dee93bcf0e303e",1,"2019-11-18 17:16:45+00:00","Add Java FLAC extractor  Seeking, live streams
support and exposure of vorbis and ID3 data are
not part of this commit.  Issue: #6406
PiperOrigin-RevId: 281083332
",133126,965,56956,"kimvde","kimvde@google.com","Oliver Woodman","olly@google.com"
"3820","google/ExoPlayer","f09f62da4f541ca4de90e9adf95b9c5c1a53d3a2",8,"2019-11-20 17:40:03+00:00","Expose metadata in FLAC extractor  PiperOrigin-
RevId: 281538423
",132333,965,56973,"kimvde","kimvde@google.com","Oliver Woodman","olly@google.com"
"3821","google/ExoPlayer","630992d05ba9957653b9eff372b0966a01be529b",1,"2019-12-03 15:51:44+00:00","Allow no output frame holder BinarySearchSeeker
PiperOrigin-RevId: 283544187
",132341,965,56963,"kimvde","kimvde@google.com","Oliver Woodman","olly@google.com"
"3822","google/ExoPlayer","9974670cc7ed0c908d3a5507424a0af6d04c7eb5",3,"2019-12-04 19:18:56+00:00","Make DownloadHelper pass DrmSessionManager to
MediaSources  PiperOrigin-RevId: 283795201
",132386,965,56978,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3823","google/ExoPlayer","14897fb6dfffe7c99fb9150d4bcf5e89b3057303",2,"2019-12-04 19:21:55+00:00","Invert the ownership scheme between SampleQueue
and SampleMetadataQueue  Saves around 200 lines of
code. High level overview: - Rename SampleQueue to
SampleDataQueue. - Rename SampleMetadataQueue to
SampleQueue.  This CL should not introduce
behavior changes. The only significant changes in
synchronization should be: + Add synchronized
keyword to isReady.   - Seems to be necessary. +
Add synchronized keyword to
SampleQueue.sampleMetadata.   - Before this
change, SampleQueue.sampleMetadata could acquire
the     SampleMetadataQueue lock three times in a
single method call.  Other miscellaneous
improvements: + Put all private methods at the
bottom. + Move release() to the right category.
PiperOrigin-RevId: 283795844
",132391,965,56816,"aquilescanta","aquilescanta@google.com","Oliver Woodman","olly@google.com"
"3824","google/ExoPlayer","54413c26d423e0fa8adc868d12bb62e3fb54a84d",7,"2019-12-06 14:07:28+00:00","Make metadata field nullable in FlacStreamMetadata
This makes the format metadata null (instead of an
empty Metadata object) when it is not provided,
and is therefore consistent with the other
extractors behavior.  PiperOrigin-RevId: 284171148
",132418,965,56813,"kimvde","kimvde@google.com","Oliver Woodman","olly@google.com"
"3825","google/ExoPlayer","910bd8bdc5a5bc6d250365a47a0a7d6992731009",1,"2019-12-10 19:40:26+00:00","Implement binary search seeking for FLAC extractor
PiperOrigin-RevId: 284814594
",132692,966,56881,"kimvde","kimvde@google.com","Oliver Woodman","olly@google.com"
"3826","google/ExoPlayer","5737815ee8a3d7a8f2669525218335989f6097e7",2,"2019-12-13 13:56:26+00:00","Remove API version dependency of
Util.normalizeLanguageCode  We previously used
Locale.fromLanguageTag and then toLanguageTag to
automatically filter out invalid tags and to
replace deprecated tags. However, this only works
for API 21+.  This change does no longer rely on
the platform methods and instead:  1. Keeps
invalid tags as they are. This may help if
developers rely on     non-spec-complaint language
tags (for example, #6681).  2. Adds a list of
deprcated tags and their modern replacements to
our code  3. Normalizes some short codes that have
been superseded by macrolanguage codes by
their macrolanguage equivalent.  Issue:#6681
PiperOrigin-RevId: 285384841
",132868,969,56977,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3827","google/ExoPlayer","18cdd8ece20ba28f41e8f6f8919587e9d5874847",8,"2019-12-13 14:26:40+00:00","Add ISO-8859-1 awareness to IcyDecoder  Also
change IcyInfo.rawMetatadata from String to byte[]
ICY doesn't specify the character encoding, and
there are streams not using UTF-8 (issue:#6753).
It seems the default of at least one server is
ISO-8859-1 so let's support that as a fallback: ht
tps://github.com/savonet/liquidsoap/issues/411#iss
uecomment-288759200  Also update IcyDecoder to
skip strings it doesn't recognise at all instead
of decoding invalid characters.  The feed from
issue:#6753 now decodes accents correctly:
EventLogger:   ICY: title=""D Pai - Le temps de la
rentr√©e"", url=""null"" PiperOrigin-RevId: 285388522
",132931,969,56984,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3828","google/ExoPlayer","bf9f49a91bdba6a2ddc28d88c6e87e699e965411",4,"2019-12-16 18:29:27+00:00","Implement seeking from seektable in FLAC extractor
PiperOrigin-RevId: 285799995
",133061,970,57046,"kimvde","kimvde@google.com","Oliver Woodman","olly@google.com"
"3829","google/ExoPlayer","3bce2138c162c18e1a4aa15476200ad711e8946b",1,"2019-12-20 20:23:02+00:00","Fix handling of network transitions in
RequirementsWatcher  Issue: #6733 PiperOrigin-
RevId: 286621715
",133337,972,57085,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3830","google/ExoPlayer","7fd0b1d8723d02f3fddd7f7c73fd85d7d55c55e8",1,"2020-01-02 12:02:41+00:00","Fix handling of E-AC-3 streams with AC-3 frames
Issue: #6602 PiperOrigin-RevId: 287816831
",133340,972,57077,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3831","google/ExoPlayer","97be06529cdd57b973ec2de31a6c5c62db99123a",1,"2020-01-03 16:59:05+00:00","Use MIME types rather than PCM encodings for ALAW
and MLAW  PiperOrigin-RevId: 287999703
",133522,972,57191,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3832","google/ExoPlayer","1f85cd9afecaa90ad723f3c29be8ef3faf952e8a",4,"2020-01-06 14:51:34+00:00","Remove WavExtractor from the nullness blacklist
PiperOrigin-RevId: 288292488
",134032,974,57254,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3833","google/ExoPlayer","4e767faa1c7981e3359c44af77449d216edea059",1,"2020-01-09 10:13:25+00:00","Fix extension FLAC decoder to correctly handle
non-16-bit depths  PiperOrigin-RevId: 288860159
",133975,973,57256,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3834","google/ExoPlayer","ca11e56fe6693941c4617033342b70f71aa1a8dc",5,"2020-01-10 15:48:09+00:00","Add tests to validate FLAC decoder output
PiperOrigin-RevId: 289091494
",134214,975,57315,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3835","google/ExoPlayer","4e4a415d6c79184238ba7f5a67e8f431bb2dea02",1,"2020-01-13 13:49:08+00:00","DownloadService: No-op cleanup  Issue: #6798
PiperOrigin-RevId: 289424582
",134265,975,57335,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3836","google/ExoPlayer","771aa32825fbaf9a36859699e94eba2ff2d46e1d",1,"2020-01-14 16:36:16+00:00","Use customCacheKey in
DownloadHelper.createMediaSource  Issue: #6870
PiperOrigin-RevId: 289658261
",134267,975,57335,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3837","google/ExoPlayer","5bdcb5fd562fdbc8703fe833827587412bd5cc52",1,"2020-01-15 14:09:06+00:00","DASH: Output Format before InitializationChunk
load completes  This optimization allows a
ChunkSampleStream to output track formats as soon
as they're parsed during an InitializationChunk
load, rather than waiting until after the
InitializationChunk load is completed.  In DASH
VOD, a single InitializationChunk typically loads
the moov and sidx atoms in that order. Hence for
long form content where the sidx is a non-trivial
size, this may result in the track formats being
output a non-negligible period of time sooner than
was previously the case. This allows downstream
renderers to start codec initialization sooner,
potentially decreasing startup latency.  For a
single test stream on a fast & stable network,
this pretty consistently reduced elapsed time
until both audio and video codecs have been
initialized from ~0.5s to ~0.3 seconds on a Galaxy
S8. For 5 test runs without and with these
patches, the eventTime logged by EventLogger for
the second decoder init were:  Without (secs):
0.47 0.47 0.45 0.48 0.46 With (secs)   : 0.32 0.33
0.34 0.31 0.40  PiperOrigin-RevId: 289845089
",134272,975,57343,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3838","google/ExoPlayer","c269ffe1e6e812c6c49cb788b83c862a11191a74",1,"2020-01-16 13:52:37+00:00","Merge pull request #6603 from TiVo:fix-tunneling-
stuck-release  PiperOrigin-RevId: 290041295
",134349,975,57358,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3839","google/ExoPlayer","dfa4d55f5028bd7efb1acdd7dbc0fe5630609037",2,"2020-01-16 13:49:25+00:00","Fix DownloadService resumption  -
DownloadManagerHelper now passes all downloads to
the   DownloadService when the service is attached
(and once   the downloads are known). The service
then starts the   foreground notification updater
if necessary. This fixes   the ref'd issue. -
Don't call getScheduler() if the service is
background   only. This was already documented to
be the case on the   DownloadService constructor.
- If the service is started in the foreground on
SDK level   26 and higher, satisfy the condition
to move the service   to the foreground in
onStartCommand rather than in stop().   It's much
more obviously correct, and should produce the
same end result.  Issue: #6798 PiperOrigin-RevId:
290050024
",134367,975,57387,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3840","google/ExoPlayer","0ac22d340130e6ea5b4b32bb4595ca46f079559a",1,"2020-01-16 16:09:28+00:00","Start service in foreground if allowed  This fixes
an issue where a DownloadService implementation
that allows foreground but doesn't provide a
scheduler would not be restarted in the case that
it was still in memory but classed as idle by the
platform.  It also speeds up service restart in
the case that a scheduler is provided.  Issue:
#6798 PiperOrigin-RevId: 290068960
",134404,975,57385,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3841","google/ExoPlayer","f146bad4393a44e3cae4e50600c62c9c4f430d55",1,"2020-01-16 20:11:20+00:00","HLS: Fix slow seeking into long MP3 segments
Issue: #6155 PiperOrigin-RevId: 290117324
",134473,975,57428,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3842","google/ExoPlayer","850aef4f67ab3a6a5a77f49c0356f5d3dda41513",2,"2020-01-30 11:14:55+00:00","SampleQueue: Let subclasses easily invalidate
format adjustment  This is a nice-regardless
improvement to SampleQueue, which will likely to
used to fix the referenced issue. It makes it
possible for SampleQueue subclasses to support
dynamic changes to format adjustment in a non-
hacky way.  Issue: #6903 PiperOrigin-RevId:
292314720
",134590,976,57479,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3843","google/ExoPlayer","fd88115728c58f2eff732fab36ee2ca97ea35b98",20,"2020-01-30 12:37:28+00:00","HLS: Fix key rotation  Passing EXT-X-KEY
DrmInitData through the FragmentedMp4Extractor
doesn't work for streams with key rotation,
because an extractor instance is used for multiple
segments, but is only passed the EXT-X-KEY
DrmInitData corresponding to the first segment.
This change removes passing DrmInitData through
the extractor, and instead passes it via
FormatAdjustingSampleQueue. This is in-line with
how manifest DrmInitData is handled during DASH
playbacks.  Issue: #6903 PiperOrigin-RevId:
292323429
",134607,976,57499,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3844","google/ExoPlayer","ee2ad943d78e4fbb6508c92fece43401373dc4e3",9,"2020-01-30 21:44:55+00:00","annotate nullabilty of CommandReceiver  Issue:
#6938 PiperOrigin-RevId: 292415853
",134608,976,57499,"bachinger","bachinger@google.com","Oliver Woodman","olly@google.com"
"3845","google/ExoPlayer","45cb55ce097e7d7140a1ae6a6e791d5a630dfdb4",1,"2020-01-31 15:36:08+00:00","Lock down SampleQueue to reasonable extension
points  PiperOrigin-RevId: 292542298
",134614,976,57497,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3846","google/ExoPlayer","b7c5f5cde6373ba6fff3107130d9341278a779c4",2,"2020-02-03 11:04:33+00:00","Avoid unnecessary decoder instantiations on key
rotation  Issue: #6903 PiperOrigin-RevId:
292884280
",134632,976,57509,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3847","google/ExoPlayer","646e690d9f0e72b5a603438421aef322aaa0e3d4",17,"2020-02-06 10:36:36+00:00","Add GL demo app  Demonstrates rendering to a
GLSurfaceView while applying a GL shader.  Issue:
#6920 PiperOrigin-RevId: 293551724
",135218,979,57653,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3848","google/ExoPlayer","d93b57c0099a8231ac658006830044bd65857d2a",2,"2020-02-17 14:23:06+00:00","Zero out trailing bytes in CryptoInfo.iv
CryptoInfo.iv length is always 16. When the actual
initialization vector is shorter, zero out the
trailing bytes.  Issue: #6982 PiperOrigin-RevId:
295575845
",135277,979,57675,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3849","google/ExoPlayer","1818921a20b673f1d45f70659e8f27d4b0dc885b",1,"2020-02-19 11:09:53+00:00","Catch-and-log all subtitle decode errors
issue:#6885 PiperOrigin-RevId: 295931197
",135292,979,57681,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3850","google/ExoPlayer","c3f9f0e5fec9735d36dcc83afc8faf03325121d7",7,"2020-02-25 21:24:27+00:00","Merge pull request #7010 from
dbrain:fix_nullability  PiperOrigin-RevId:
297187116
",135293,979,57682,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3851","google/ExoPlayer","b2849fde3d6cab091fcf10608ef93a26870fc45e",8,"2020-03-11 16:27:36+00:00","Merge pull request #7057 from
Chimerapps:dash_assetidentifier  PiperOrigin-
RevId: 300313753
",135310,979,57694,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3852","google/ExoPlayer","a39715d3235f406bbb044ed87ba00b0818f0e40f",8,"2020-03-20 12:17:32+00:00","Improve logging  - Make sure logging of
UnknownHostException indicates the failure reason
- Indent stack traces inside event blocks in
EventLogger - Don't log media URLs  PiperOrigin-
RevId: 302007601
",135351,979,57725,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3853","google/ExoPlayer","b67d79d77585738939cc82020d50641fbe08d88a",2,"2020-03-23 02:16:49+00:00","Request storage permission if missing
PiperOrigin-RevId: 302345647
",135371,979,57727,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3854","google/ExoPlayer","d18292c9c9a998157ca38b8730fa22fb936ecbb8",1,"2020-03-23 18:03:04+00:00","Allow missing hours in SubRip (.srt) subtitle
timecodes  Add a test for this case, and extend
the existing tests to ensure the hour is parsed
when it's present.  issue:#7122 PiperOrigin-RevId:
302472213
",135389,979,57729,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3855","google/ExoPlayer","a038346ecc6f3d8a30b0a955fb25f8092919adad",2,"2020-03-25 12:50:03+00:00","Resample float audio to 16-bit by default to
enable audio processing  This is less confusing
than having audio processing functionality (e.g.,
playback speed adjustment) just ""not work"" for
some pieces of media.  If this change is merged, I
will update #6749 to also track making
DefaultAudioSink intelligently enable/disable
float output depending on how the audio processors
are configured.  Issue: #7134 PiperOrigin-RevId:
302871568
",135408,979,57747,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3856","google/ExoPlayer","c9f28086db2ce93db78e62159c49248621cbd40a",1,"2020-03-26 18:17:57+00:00","Make milliseconds optional in SubRip (SRT)
subtitles  issue:#7122 PiperOrigin-RevId:
303154493
",135412,979,57747,"ibaker","ibaker@google.com","Oliver Woodman","olly@google.com"
"3857","google/ExoPlayer","a9cbbf91c3e5104741845284a4fa9e6b5103f2c4",1,"2020-03-27 16:45:09+00:00","Skip aliases of other codecs  - They are always
listed with their canonical names - Considering
aliases means that blacklisting a decoder can end
up   not actually blacklisting it, since it may
still be accessible   via an alias. It also means
that our decoder fallback logic can   end up
falling back to a decoder that we've already
tried!  PiperOrigin-RevId: 303348297
",135418,979,57748,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3858","google/ExoPlayer","94ca84ff296813d6c1cdebd78a5a24ae2f578de5",2,"2020-03-30 14:59:57+01:00","Allow developers to specify CharSequence for
Notification strings  CharSequence is used by
Notification builders and allows to set Spannable
text. It's the base interface of the String class,
so apps wouldn't be break after the update.
PiperOrigin-RevId: 303731890
",135432,979,57761,"jaewan","jaewan@google.com","Oliver Woodman","olly@google.com"
"3859","google/ExoPlayer","fea0acd41a111cfa96d844bf6f183717b13c0c40",2,"2020-03-30 16:38:15+01:00","Fix PlaybackStatsListener behavior when not
keeping history  issue:#7160 PiperOrigin-RevId:
303747338
",135479,980,57777,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3860","google/ExoPlayer","83c2ca59025604d7940806a3d26bf4614a4a2041",2,"2020-02-27 16:06:22+00:00","Add `WifiLock` management to `SimpleExoPlayer`.
Issue:#6914 PiperOrigin-RevId: 297598910
",135566,981,57868,"samrobinson","samrobinson@google.com","Oliver Woodman","olly@google.com"
"3861","google/ExoPlayer","3c0e617837d84cf7647db37afdbc0c2b9d47af65",1,"2020-03-09 13:14:02+00:00","Merge AudioFocusManager methods to simplify
control flow.  handlePrepare/Stop/SetPlayReady can
be merged together as they all handle changes to
the desires state of the player.  Also, simplify
parts of the control flow by not mixing code that
determines if audio focus needs to be handled with
code that actually acquires or abandons the focus.
PiperOrigin-RevId: 299824857
",135519,981,57865,"tonihei","tonihei@google.com","Oliver Woodman","olly@google.com"
"3862","google/ExoPlayer","49858b82f24ea67373024c2ac71213ee44e2552b",4,"2020-04-07 13:38:53+01:00","Merge pull request #7184 from TiVo:p-subtitle-
format-from-codecs  PiperOrigin-RevId: 305137114
",135572,981,57869,"Oliver Woodman","olly@google.com","Oliver Woodman","olly@google.com"
"3863","google/ExoPlayer","f696a56b56e924a16a494e8e9788ed9178f203f1",1,"2020-04-07 12:45:18+01:00","Audio focus: Restore full volume if focus is
abandoned when ducked  If we're in the ducked
state and updateAudioFocus is called with a new
state for which focus is no longer required, we
should restore the player back to full volume.
Issue: #7182 PiperOrigin-RevId: 305232155
",135610,981,57875,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3864","google/ExoPlayer","48081dd073e97e792b8a8859340a01f25edcaf6b",8,"2020-04-15 15:47:10+01:00","Parse trick-play role flags from DASH manifests
Issue: #6054 PiperOrigin-RevId: 306641689
",135726,981,57881,"olly","olly@google.com","Oliver Woodman","ollywoodman@gmail.com"
"3865","google/ExoPlayer","4dc1d317c3381ce6d5103f5bfca6940527cc1c5c",1,"2020-04-16 10:29:57+01:00","Fix TeeAudioProcessor sink configuration
TeeAudioProcessor needs to configure its sink when
it is initially set up.  PiperOrigin-RevId:
306808871
",135757,982,57897,"andrewlewis","andrewlewis@google.com","Oliver Woodman","ollywoodman@gmail.com"
"3866","google/ExoPlayer","aea9f8e550f701478c5f0121fc6f51bb409de557",2,"2020-04-17 10:44:42+01:00","Merge pull request #7245 from Clement-
Jean:silence-media-source-factory  PiperOrigin-
RevId: 307010600
",135777,982,57913,"bachinger","bachinger@google.com","Oliver Woodman","ollywoodman@gmail.com"
"3867","google/ExoPlayer","ad36f649654db90bded9f8d150a128f69653b5b4",2,"2020-04-20 13:28:27+01:00","Merge pull request #7210 from
nebyan:CacheKeyFactoryNotUsed  PiperOrigin-RevId:
307045655
",135764,982,57912,"Oliver Woodman","olly@google.com","Oliver Woodman","ollywoodman@gmail.com"
"3868","google/ExoPlayer","e6b5e6eb6ee5797c6a5b9b962c1516eb388a375e",4,"2020-04-19 17:12:26+01:00","Merge trick play tracks into main track groups
Issue: #6054 PiperOrigin-RevId: 307285068
",135912,982,57946,"olly","olly@google.com","Oliver Woodman","ollywoodman@gmail.com"
"3869","google/ExoPlayer","e7e74afbff7eb35ef31d37c23c41c86ad4e31467",6,"2020-04-20 11:15:53+01:00","Fix AdsMediaSource child sources not being
released  Also add unit tests for AdsMediaSource.
PiperOrigin-RevId: 307365492
",136235,984,57988,"andrewlewis","andrewlewis@google.com","Oliver Woodman","ollywoodman@gmail.com"
"3870","google/ExoPlayer","49e5e66033c497fdd26c756d97c94b595ec35eb6",1,"2020-04-24 13:32:05+01:00","Fix NPE when reading from a SampleQueue from a
loading thread  Issue: #7273 PiperOrigin-RevId:
308238035
",136283,984,57991,"aquilescanta","aquilescanta@google.com","Oliver Woodman","ollywoodman@gmail.com"
"3871","google/ExoPlayer","f116f298125fa852c172a47b4cd29544f112d2a1",2,"2020-05-13 10:06:56+01:00","Prevent leaking of the Thread.interrupt flag to
other LoadTasks  PiperOrigin-RevId: 311290214
",136534,986,58114,"olly","olly@google.com","Andrew Lewis","andrewlewis@google.com"
"3872","google/ExoPlayer","68059070f4069ccec06f9ab21e780f46e299ebb7",11,"2020-04-22 16:33:42+01:00","Add missing nullable annotations  The
MediaSessionConnector gets a Bundle passed to the
MediaSession.Callback from the framework which can
be null. This needs to be properly annotated with
@Nullable.  Issue: #7234 PiperOrigin-RevId:
307822764
",136605,986,58109,"bachinger","bachinger@google.com","Andrew Lewis","andrewlewis@google.com"
"3873","google/ExoPlayer","4e6fe31ee1aebabb8ab8503d25ed495e389ec35a",1,"2020-01-30 19:30:48+00:00","Merge pull request #6724 from
nnoury:fix/subtitles-outline-color  PiperOrigin-
RevId: 292316767
",136652,986,58126,"Oliver Woodman","olly@google.com","Andrew Lewis","andrewlewis@google.com"
"3874","google/ExoPlayer","03be1551a7926cbb64dbf4925c0e5ede2542efee",1,"2020-05-29 20:53:06+01:00","Clean up player event handling  This change is
similar to
e8293b92d877bd6e5a00606358db610d6fb7a4d6 but
without relying on new player events that haven't
been released yet, to make it easier to merge
changes related to ImaAdsLoader on top.
",136656,986,58123,"Andrew Lewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3875","google/ExoPlayer","de03e389c0927d1e1b76c13b556533048a3daf88",5,"2020-04-29 08:52:01+01:00","Enable nullness checking for the IMA extension
adPlaybackState is now non-null, and the
uninitialized case is covered by a new boolean
hasAdPlaybackState. Position progress updates are
now non-null and initialized with IMA's
VIDEO_TIME_NOT_READY constant.  Also fix some misc
code issues: - Remove empty branch for
SmoothStreaming (Android Studio warns about this).
- Tidy onTimelineChanged and
onPositionDiscontinuity and the methods they call
to improve naming. - Remove logging for IMA events
after release, as these methods are expected to
be called in the current IMA SDK behavior.
PiperOrigin-RevId: 308977116
",136454,982,58070,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3876","google/ExoPlayer","3b99a84dae94cf90e5335f05b22c77bed9440127",6,"2020-05-05 10:09:01+01:00","Migrate to new IMA preloading APIs  issue:#6429
PiperOrigin-RevId: 309906760
",136494,982,58065,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3877","google/ExoPlayer","51b2a0f7a9db5fd8b0cc2ca8dd58a5da9e6e6aae",1,"2020-05-15 16:00:00+01:00","Add support for timing out ad preloading  Detect
stuck buffering cases in ImaAdsLoader, and discard
the ad group after a timeout. This is intended to
make the IMA extension more robust in the case
where an ad group unexpectedly doesn't load.  The
timing out behavior is enabled by default but apps
can choose to retain the old behavior by setting
an unset timeout on ImaAdsLoader.Builder.
PiperOrigin-RevId: 311729798
",136578,982,58093,"andrewlewis","andrewlewis@google.com","Andrew Lewis","andrewlewis@google.com"
"3878","google/ExoPlayer","145754618d3a5f3aa88dd7b7fba47803b19c61d5",3,"2020-01-13 14:52:14+00:00","Simplify keeping track of current id in
DefaultPlaybackSessionManager  We currently have a
currentMediaPeriodId and an activeSessionId that
are more or less tracking the same thing unless
the current media period isn't ""active"" yet.
Simplify this logic by using a single
currentSessionId field and the respective isActive
flag of this session. Also move all session
creation and activation code in the same method to
make it easier to reason about the code.  This
change also fixes a subtle bug where events after
a seek to a new window are not ignored as they
should.  PiperOrigin-RevId: 289432181
",136739,982,58117,"tonihei","tonihei@google.com","tonihei","tonihei@google.com"
"3879","google/ExoPlayer","1347a2200f1d0e07ddd1a6bf01dc575903e6688a",2,"2020-06-04 13:15:51+01:00","Fix more cases of downloads not being resumed
Issue: #7453 PiperOrigin-RevId: 314710328
",136782,982,58138,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3880","google/ExoPlayer","46d29b25c9bec032440d545de1494f18815cc00a",1,"2020-06-05 15:37:49+01:00","Reintroduce isConnected check for download
requirements  PiperOrigin-RevId: 314925639
",136784,982,58138,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3881","google/ExoPlayer","80f4197e0fc0a673f873a47eaaadfa4c58b181d7",1,"2020-06-09 16:31:30+01:00","Separate ads rendering and AdsManager init  In a
later change it will be necessary to be able to
destroy the ads manager if all ads are skipped
while creating ads rendering settings. This change
prepares for doing that by not having the ads
manager passed into the method (so the caller can
null or initialize it).  PiperOrigin-RevId:
315488830
",136891,982,58140,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3882","google/ExoPlayer","e5ec8e6b474cd7e00719fdf986f2ec655bc5a866",1,"2020-06-09 18:37:00+01:00","Prevent shutter closing for within-window seeks to
unprepared periods  Issue: #5507 PiperOrigin-
RevId: 315512207
",136912,982,58144,"olly","olly@google.com","Oliver Woodman","olly@google.com"
"3883","google/ExoPlayer","e261b8d0ef8e0d35b3f4ec2d936ba08ce8a6d151",7,"2020-06-11 11:17:43+01:00","Allow skipping the ad before the start position
PiperOrigin-RevId: 315867160
",137088,982,58161,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3884","google/ExoPlayer","5fd287b340ba2c1e81c234831e6bda9347c0f644",2,"2020-06-17 07:57:27+01:00","Move IMA SDK callbacks into inner class  The
release() method was added in the recent IMA API
changes for preloading and now 'collides' with the
ExoPlayer AdsLoader release method. This led to
all ads completing being treated as a call to
completely release the ads loader, which meant
that the ad playback state was not updated on
resuming after all ads had completed, which in
turn led to playback getting stuck buffering on
returning from the background after all ads
played.  Move the IMA callbacks into an inner
class to avoid this.  Issue: #7508 PiperOrigin-
RevId: 316834561
",137161,983,58196,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3885","google/ExoPlayer","49951d4f8755245a8c8f8914cdc440ac7e9663be",1,"2020-06-17 14:08:29+01:00","Workaround unexpected discard of preloaded ad
After an ad pod coming up has preloaded, if the
user seeks before it plays we get pauseAd/stopAd
called for that ad pod. Also, the ad will not load
again. Work around this unexpected behavior by
handling pauseAd/stopAd and discarding the ad.  In
future, it's likely that the IMA SDK will stop
calling those methods, and will loadAd again for
the preloaded ad that was unexpectedly discarded.
This change should be compatible with that,
because the ad won't be discarded any more due to
not calling stopAd.  Issue: #7492 PiperOrigin-
RevId: 316873699
",137170,983,58197,"andrewlewis","andrewlewis@google.com","Oliver Woodman","olly@google.com"
"3886","skylot/jadx","6951d0e6462cefdd97b01a28fd2ad0998a8649ab",3,"2014-11-03 15:13:27+03:00","core: use NotNull and Nullable annotations
",22913,390,792,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3887","skylot/jadx","5e722c6827dd3b001239e3fb030dbe41a9279bac",2,"2014-11-29 16:49:16+03:00","fix issues reported by coverity
",24189,409,841,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3888","skylot/jadx","90fb95e785943a4fafed8d8d0dbf218c1a55e969",5,"2014-12-27 20:17:03+03:00","core: check arguments for field arithmetic
operations (fix #40)
",26639,418,886,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3889","skylot/jadx","aa691af664bd4355e9e39dd9e2691806c34cfcdd",2,"2015-01-07 12:14:40+03:00","core: replace resources ids with names from
'.arsc' file
",28141,442,1013,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3890","skylot/jadx","141398aeac446748446fbe1a451b1d4419ff9132",1,"2015-01-26 22:28:07+03:00","core: replace 'move' instruction instead argument
inline
",28420,446,1024,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3891","skylot/jadx","99d9814083fd32454b36bb2cf531f97011a4c867",1,"2015-02-07 17:55:57+03:00","don't use concatenation in logger, fix other small
code style issues
",28421,446,1024,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3892","skylot/jadx","1b98be0b0a723b131c24735c3b6031c101ebc7b9",2,"2015-02-17 14:48:42+03:00","core: fix array type for new-array instruction
(fix #50)
",29033,458,1095,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3893","skylot/jadx","46d3992b41ab05bfd4d85039d87fe15c0d1b053f",2,"2015-02-22 16:43:19+03:00","core: fix 'finally' extract (fix #53 and #54)
",29482,461,1105,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3894","skylot/jadx","a532287ddfeccffe1213e7a67473bc385b22fbd0",2,"2015-02-21 13:01:19+03:00","core: refactor deobfuscator
",29892,466,1077,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3895","skylot/jadx","f87bf3f14da340e3bebff4de76dcea37c23c2bde",1,"2015-04-05 15:51:50+03:00","core: fix class renaming by source file info
",29104,473,1080,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3896","skylot/jadx","129a7c39afda3bad995e681a0637d7b6d15ff0e1",2,"2015-05-31 17:11:46+03:00","gui: add log viewer
",30089,490,1102,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3897","skylot/jadx","b2f0f02541ca1f8e16211691cfed3a3bf92345be",1,"2015-06-26 21:30:51+03:00","core: fix incorrectly removed 'return' in 'switch'
block (fix #70)
",30296,494,1110,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3898","skylot/jadx","a684118dbbd0981baa210fb040145398577c8abf",2,"2015-07-01 23:01:54+03:00","core: move field initialization from constructors
if possible (#71)
",30689,499,1116,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3899","skylot/jadx","bd4d4f49fff46492601bc7fe663c52089873218a",1,"2015-07-13 22:26:26+03:00","gui: add full text search (#74)
",30821,502,1117,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3900","skylot/jadx","2d8d4164830631d3125575f055b417c5addaa22f",2,"2015-07-26 17:19:08+03:00","core: add cache for JavaNodes, fix definition
annotations
",30940,503,1121,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3901","skylot/jadx","bc73010d4eaa484dfc8081bf2cbd1215871b70ea",6,"2015-07-26 18:06:26+03:00","gui: add find usage feature, run decompilation and
index jobs in background (#74, #75)
",31748,513,1124,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3902","skylot/jadx","43592c3e49aec3c1c94aa588d5db3b35efc0d960",2,"2015-08-09 12:29:33+03:00","gui: improve memory usage (#79)  - don't use
suffix tree in search - decrease default working
threads count (only 1 for background jobs) - use
string refs for store only one code string without
duplicates - use cache for creating UI nodes -
allow to disable autostart for background jobs
(decompilation and index)
",32075,519,1129,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3903","skylot/jadx","d55969bc652c1b34421441e400f429795e3976a0",1,"2015-09-05 20:55:37+03:00","core: fix some 'try/catch/finally' cases
",32405,521,1147,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3904","skylot/jadx","5f302238ad7c003812773d087fe1c245d4e17455",4,"2016-03-13 12:43:24+03:00","core: allow to disable constant dereference (#106)
",33115,530,1154,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3905","skylot/jadx","e733c91783af25ea79615c126de40a543048d0de",4,"2016-03-26 17:19:54+03:00","gui: support images view/unpack
",33325,534,1157,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3906","skylot/jadx","b2f41e95bfce73936b4d316917c95977daf6e1a4",2,"2016-03-27 15:28:06+03:00","core: export as android gradle project
",33555,537,1165,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3907","skylot/jadx","f53fc03c6ca6b06ce0235b15c5dd9bdb5b5a9f05",1,"2018-01-15 23:24:12+03:00","core: use dynamic check for filesystem case-
sensitivity (#158)
",34111,542,1219,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3908","skylot/jadx","fc4dcd2db5d9ea5e0bbb392f00fa547d75a24111",3,"2018-01-18 23:21:36+03:00","core: prevent some null crash on resource decoding
",34142,542,1222,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3909","skylot/jadx","32f94b463f674ca5d7a1f7f7de58a13060d2be16",2,"2018-02-07 21:20:05+03:00","core: add code lines for while loop
",34136,544,1232,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3910","skylot/jadx","948f9456f502b48d5a10476544abb5ab6ef63ec6",1,"2018-02-10 21:32:51+03:00","core: change jadx args api for easier processing
and validation
",34144,546,1231,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3911","skylot/jadx","6fb1c8d3b9d0071f6191c1fd47796c9f7ecdbccc",1,"2018-02-17 23:23:03+03:00","gui: don't decode resources on file open
",34323,548,1235,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3912","skylot/jadx","b29223c5b6a91d49d4fe055dceb7090ec101e91f",3,"2018-04-14 13:22:18+03:00","core: fix enum processing order, remove
synchronization (#257)
",34466,549,1272,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3913","skylot/jadx","a3b961e72f159b4b610608d5365eb2175b315d87",5,"2018-04-22 20:18:33+03:00","core: fix method deobfuscation (#241)
",34533,550,1269,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3914","skylot/jadx","7562ec9e1a3c6525321383586a1cb2c4fadf3877",2,"2018-05-26 19:58:35+03:00","tests: add base test class for simplified apk
debugging
",35569,554,1538,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3915","skylot/jadx","4e2e5aa9757feb72d12639c5567200c1495d8c69",1,"2018-06-19 23:12:53+03:00","gui: fix colors to match system theme, add editor
theme selector (#297)
",35984,559,1560,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3916","skylot/jadx","dda49f15018585422b1609784bfccf8643588f27",1,"2018-06-21 16:50:36+03:00","core: fix enum reconstruction (#272)
",35991,559,1560,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3917","skylot/jadx","9752ec2655b77e6d54158593d8ced1bf8cc486c9",2,"2018-07-21 23:55:20+03:00","core: fix duplicate regions creation (#314)
",36389,566,1566,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3918","skylot/jadx","6e358d3eabdf94b91a345ae193004ff506e0b997",12,"2018-07-28 22:07:39+03:00","core: use own immutable list
",36538,567,1570,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3919","skylot/jadx","6cb14a1c50029819e02634977b9ba78c14b7b5ff",1,"2018-08-16 22:55:30+03:00","core: use flag for mark 'this' register
",36555,567,1570,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3920","skylot/jadx","dc578f98e771cffdab3db87bdeb6d34b9566670b",2,"2018-08-21 17:10:20+08:00","Fix deobfuscation issue
",36729,569,1573,"Donlon","idonlon@hotmail.com","Donlon","idonlon@hotmail.com"
"3921","skylot/jadx","0c041120f679d59e6ef15554014cb818a074803e",1,"2018-08-20 22:18:00+03:00","core: show all decompilation errors in code
comments (#313)
",36907,574,1592,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3922","skylot/jadx","f6f883b9d121250d18572734c8831c76e284a161",1,"2018-09-08 13:56:33+03:00","fix: change resource fields generations in R class
(#308)
",37006,574,1601,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3923","skylot/jadx","a3464d71846439b33fee1fa2d59fbce911d6909b",2,"2018-10-28 18:24:09+03:00","fix(gui): make link for full class names (#378)
",37167,579,1618,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3924","skylot/jadx","21e11c1d47d955d6316295f67736d4b6a89114b0",5,"2018-08-05 23:29:49+03:00","fix: implement new type inference approach
",38026,598,1718,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3925","skylot/jadx","4e990ae2b055fcb70c084ff6d721353262546535",1,"2019-01-16 19:03:47+03:00","fix: safe SSA variables replacement in filled new
array instruction (#399)
",38524,608,1766,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3926","skylot/jadx","aec986447ed3c90acc54d888f155275d882a66b0",4,"2019-01-19 16:28:25+03:00","fix: support multi-exception catch blocks (#421)
",37900,591,1714,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3927","skylot/jadx","9b091b7c08e558f6d8c46ece32dd137031c029ea",4,"2019-01-13 18:35:25+03:00","fix: reimplement variable declaration visitor
",39256,619,1854,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3928","skylot/jadx","4ce5cc84924c90ec3d216495a72ebb9c130eef1f",6,"2019-01-24 19:58:41+03:00","fix: use multi-variable type search algorithm if
type propagation is failed
",39924,628,1893,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3929","skylot/jadx","c8923950891280575e395e5d89e04305d8ac580b",1,"2019-02-04 16:27:46+03:00","fix: redone finally extract
",39673,628,1878,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3930","skylot/jadx","bcadc282073dee9d48eae1e3096ca55a1fd94862",1,"2019-02-17 19:01:03+03:00","fix(gui): use system font as default instead
bundled Hack (#442, #445)
",38204,598,1780,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3931","skylot/jadx","389caf182590010f5ffcd07aaef1983bee962103",1,"2019-02-17 17:42:55+03:00","fix: improve filled array detection
",40021,636,1931,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3932","skylot/jadx","28d348b3645473b39ead83575423bccc8736b838",1,"2019-02-22 17:25:33+03:00","fix: additional checks for synthetic methods
remove, rename and inline (#452)
",38419,601,1796,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3933","skylot/jadx","3de04cb638d1d9ed6531abb6cb26ad78d1a64fb2",2,"2019-02-27 19:06:42+03:00","refactor: use flags to mark registers with
immutable type
",40432,640,1957,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3934","skylot/jadx","6116a750226c18176840702026973dc804d907fa",2,"2019-03-12 20:27:25+03:00","fix: rename R fields using resource names (#465)
",38433,601,1795,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3935","skylot/jadx","7654661b776c76abcb97915b46b9d1ace41c7fc9",1,"2019-03-15 22:12:03+03:00","fix: inline desugared lambda classes (#467)
",38458,601,1796,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3936","skylot/jadx","f72abb2867ff6831a809ef58a9ca39409e594186",1,"2019-03-22 16:10:30+03:00","test: add test methods for load and check classes
from smali files
",39147,605,1838,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3937","skylot/jadx","29d3ce15a8a2dcf2e5cb5c383d20a90a910d672e",2,"2019-03-24 16:59:55+03:00","fix: rename parameters in annotations (#504)
",39978,622,1862,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3938","skylot/jadx","336d6ce189650c28f588385fc56bafe2cd0504e0",1,"2019-04-23 20:59:33+03:00","fix(gui): use same font loader as code viewer
(#584)
",44089,701,2105,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3939","skylot/jadx","e1dfb4ee59745e6fa2e389fe99625ab96841a099",1,"2019-04-29 15:08:28+02:00","fix: byte to number without cast (#596) (PR #638)
",44357,706,2105,"Ahmed Ashour","asashour@yahoo.com","skylot","skylot@gmail.com"
"3940","skylot/jadx","f846df5371cb380a6f4a103c38aad82acfa26465",2,"2019-05-03 18:04:08+03:00","fix: rename field if collide with any root package
(#647)
",44401,707,2209,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3941","skylot/jadx","7ac0b9f57c4c8d88d6655546a4953a124ff77373",11,"2019-05-05 21:58:08+03:00","fix: redone class alias processing (#532)
",44490,710,2232,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3942","skylot/jadx","4b73d24d4bcf3d76d7e86153fd701d0268f48789",2,"2019-05-06 19:58:13+02:00","fix(gui): separate SearchBar for Java and Smali
code areas (PR #653)
",44622,714,2264,"Jan S","jpstotz@users.noreply.github.com","skylot","skylot@gmail.com"
"3943","skylot/jadx","fef3e55c5524c59c65987abe35477bf8df34d56d",1,"2019-05-10 20:06:54+02:00","feat(gui): select a class to open via command-line
(PR #658)
",44671,714,2274,"Jan S","jpstotz@users.noreply.github.com","skylot","skylot@gmail.com"
"3944","skylot/jadx","31a02a70a0469fd881c5de646b7f10c96a516803",1,"2019-05-10 22:36:07+03:00","fix: rename class if all chars not printable
(#622)
",44763,715,2281,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3945","skylot/jadx","2383c401056f956e8af552f5f7a93d1afa8cce88",1,"2019-05-15 19:00:13+03:00","fix: correct arg replace in PHI instruction (#462)
",44851,717,2307,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3946","skylot/jadx","84b9f11120ab752927da79512baea8220679fc00",1,"2019-05-16 13:07:00+03:00","fix: improve errors handling
",44883,717,2311,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3947","skylot/jadx","98e4c4b48d3db795646f8ba6281f9db83f549a53",1,"2019-05-16 21:10:57+03:00","fix: merge new-array and fill-array-data with move
between (#462)
",44991,720,2336,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3948","skylot/jadx","6c61ce52a3010ab09c78087f571f69cc96ced2ec",1,"2019-05-23 22:42:25+03:00","fix: handle cases with SSA variable used in
several PHI's (#667)
",45063,722,2337,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3949","skylot/jadx","f0f5c2689690c83d3d3e34a2a8acd3bffb30ed65",1,"2019-05-24 17:28:01+03:00","fix: store condition blocks in 'if' region for
correct blocks list (#669)
",45074,722,2341,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3950","skylot/jadx","ed385e8cf1dd431a5892cffa5babfea20aaecb41",2,"2019-06-18 16:06:56+03:00","feat: output decompilation results in json format
(#676)
",45708,735,2346,"skylot","skylot@gmail.com","GitHub","noreply@github.com"
"3951","skylot/jadx","ed8c6626317844f0804876269e30ce998e14df7a",1,"2019-07-06 18:37:34+03:00","fix: add generic types propagation (#695)
",46355,745,2454,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3952","skylot/jadx","a530371b6fddfc228090fd299fbd826f85ee7a62",2,"2019-07-11 20:07:14+03:00","fix: improve StringBuilder elimination (#704)
",46516,749,2456,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3953","skylot/jadx","49e234d9f8ca12bad656762df27d76c3f30cb4fe",1,"2019-07-12 23:12:07+03:00","fix: improve finally extraction
",46599,751,2483,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3954","skylot/jadx","aad2d24c589c49749410315d859412f6a8c62b16",3,"2019-07-16 19:44:48+03:00","fix: unbind unused ssa variable after ternary
conversion (#708)
",46712,753,2522,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3955","skylot/jadx","7fd959e6e388526d7a053eecc9ffbd20f0311a0d",1,"2019-07-17 22:53:00+03:00","refactor: improve variables handling in
instruction wrapping
",46778,754,2529,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3956","skylot/jadx","3bc9671905162f0ded4fe249dde7e0032fd9e98c",1,"2019-07-18 20:56:40+03:00","perf(gui): speed up line numbers rendering (#714)
",46760,754,2528,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3957","skylot/jadx","c8df26f227bb9d102225e19c9330da074116f219",11,"2019-07-18 22:58:54+03:00","feat(gui): add class links for AndroidManifest.xml
and other minor fixes
",46822,755,2530,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3958","skylot/jadx","c8de7b97ddbd0becb8a70fa27be487842b3dee27",1,"2019-07-21 19:45:22+03:00","fix: instead commenting move constructor call to
the top (#704)
",46770,755,2537,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3959","skylot/jadx","ab97084058245992e909131348516cee8393513c",2,"2019-07-25 15:10:14+03:00","refactor: move passes list to root node
",47097,759,2563,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3960","skylot/jadx","1e6b30343c5309eae3070f101c63763f8066ecf5",1,"2019-07-27 22:55:37+03:00","fix: several improvements for multi-variable type
search (#720)
",47206,761,2581,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3961","skylot/jadx","a17f9136dd495df4c9bd301b3297153e5d166b98",5,"2019-08-01 20:59:46+03:00","refactor: enable class unloading after code
generation
",47540,768,2620,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3962","skylot/jadx","c0194d025d2a946abc2630bbe0abc54535395d78",2,"2019-08-03 14:26:25+03:00","refactor: fix misuse of immutable type flag
",47585,769,2621,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3963","skylot/jadx","bc7a74842025341df264caee6166e78d750bb7b8",1,"2019-08-08 12:59:03+03:00","feat(cli): add options for change log level (#735)
",47644,770,2623,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3964","skylot/jadx","7bc01dcfa89d4b7130c879db531972182b76df89",2,"2019-08-11 19:39:05+03:00","fix(gui): ignore mouse click on empty space in
tree (#737)
",47650,770,2623,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3965","skylot/jadx","ff5f6fca3c0b2dd47755288153d90140148d451f",2,"2019-08-11 22:03:47+03:00","fix(gui): fix ""Go to declaration"" and ""Find usage""
menu actions
",47661,772,2621,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3966","skylot/jadx","a71bb7a532254ac4431b2cd5fd1ea544ada43943",6,"2019-08-12 10:32:38+01:00","fix(gui): yet another fix for broken find usage
action
",47681,772,2621,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3967","skylot/jadx","1cbaad3ec982032de96a4a7f34033634cf2b7ca0",3,"2019-08-25 19:23:40+01:00","fix: make correct class members loading in jadx
api (#742)
",48011,777,2627,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3968","skylot/jadx","db892adf343c03cfc19325df014732dae2d14c63",1,"2019-08-27 16:34:43+01:00","fix: don't run class process from visitors to
avoid deadlock (#743)
",48011,777,2626,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3969","skylot/jadx","bae36f9720a31d105f0c88a2e855823bbb249519",2,"2019-10-30 21:01:00+00:00","fix: merge const block before return (#699)
",48211,781,2653,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3970","skylot/jadx","87504dd2cc306fae3dab43d89539d2d4ea6ce39e",2,"2019-11-24 20:33:55+03:00","refactor: additional checks for ssa vars and
registers
",48544,787,2674,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3971","skylot/jadx","d1a6841c20d8880068bcce6bc71d9ccbe146403e",1,"2019-11-30 19:31:34+03:00","fix: inline assign in complex conditions (#699)
",48597,787,2683,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3972","skylot/jadx","78eed8629cbe63702061c1292b01f975294f7b5d",4,"2019-12-10 21:41:57+03:00","feat(gui): reopened tabs on file reload (PR #793
#792)  * Add getRealFullName() to ClassNode and
JavaClass and searchJavaClassByRealName() to
JadxWrapper    Those methods is like getFullName()
and searchJavaClassByClassName(), but for class
names without aliases.  It is necessary for
renaming classes/methods/fields.    * MainWindow:
Try to restore open tabs on deobfuscation toggle
Restore open tabs if possible when user toggles
deobfuscation mode.  Try to scroll to the position
before toggling deobfuscation mode (may be not
exact cause of the comments).
",48636,787,2687,"Soul Trace","S-trace@list.ru","skylot","skylot@gmail.com"
"3973","skylot/jadx","e3055b95f6cb108f0a836f31bdd16658c527f67b",2,"2019-12-10 22:08:27+03:00","feat(gui): support for renaming methods, classes
and fields (PR #794 #791)  * Add getRealFullName()
to ClassNode and JavaClass and
searchJavaClassByRealName() to JadxWrapper
Those methods is like getFullName() and
searchJavaClassByClassName(), but for class names
without aliases.  It is necessary for renaming
classes/methods/fields.    * core: Make
getFieldNode(), getMethodNode() and getRoot()
public    This is necessary for renaming
functionality    * jadx-gui: Add Rename popup menu
entry (renames classes, methods and fields)    It
allows user to rename classes, methods and fields.
It updates deobfuscation map and reload file.
This may be suboptimal, and maybe some
RenameVisitor should be added.  Deobfuscation
should be enabled in order to allow this.
",48841,789,2687,"Soul Trace","S-trace@list.ru","skylot","skylot@gmail.com"
"3974","skylot/jadx","7f8d03d1927b95565938a4e2089f4cbed3417979",1,"2019-12-21 07:34:40+00:00","style: fix some sonar and compiler warnings
",48990,793,2710,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3975","skylot/jadx","9ab003df4cb817d94e2cedb542c8d86833216827",3,"2019-12-21 16:04:16+00:00","feat(gui): map back and forward mouse keys for
navigation (#807)
",49063,794,2712,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3976","skylot/jadx","9c88f70740b7e8b326534afada316720f48a38a8",1,"2019-12-22 15:45:11+00:00","fix(gui): load file in background thread and show
progress indicator
",49233,796,2720,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3977","skylot/jadx","55eb86d2d56f2b4ef98cb94f8bec26ed490c5aa2",1,"2019-12-27 18:52:28+00:00","fix(gui): search class with --select-class also by
not deobfuscated names
",49333,798,2720,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3978","skylot/jadx","02213802c5b3d7ea586feb21fc57126c1f7512da",1,"2019-12-28 08:42:39+00:00","fix: make correct replacement for synthetic
constructor (#808)
",49346,799,2732,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3979","skylot/jadx","531650c9f2f7dfc9021906f89a8eb22f582400a1",1,"2020-01-02 22:26:33+03:00","refactor: allow to change temp dir using system
property JADX_TMP_DIR
",49429,800,2734,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3980","skylot/jadx","62ca30bbc61d51e062bd90cf74472a7596c4051e",3,"2020-01-19 11:12:23+00:00","fix: additional patterns to restore enum classes
(#830)
",49679,804,2738,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3981","skylot/jadx","2107da2e1a1041a0b508b30fa5e3a41bec22b2de",7,"2020-01-21 18:11:34+03:00","fix: improve 'out' block detection in switch
(#826)
",49798,804,2745,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3982","skylot/jadx","492a3f69287bd475bd9a99baad70997973d586a6",1,"2020-02-02 17:08:29+03:00","feat(deobf): add classname parsing for Kotlin
metadata (PR #842, #758)
",49936,807,2768,"Yaroslav Yadrov","yaroslav.yadrov@gmail.com","GitHub","noreply@github.com"
"3983","skylot/jadx","5502d93cd57075c2fd810d38d80d040c39c674ee",1,"2020-02-04 18:45:27+00:00","fix: additional checks before insert move to help
type inference (#843)
",49948,807,2768,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3984","skylot/jadx","dea7714ef3207b0f7e0e434d82998dbf20ae7e18",20,"2020-01-29 16:39:38+03:00","feat: add methods information from standard
library, improve generics and varargs restore
(#836)
",50838,819,2804,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3985","skylot/jadx","2f780da305fdd2528c744d1188095152011f8084",4,"2020-03-16 20:30:37+00:00","fix: remove enum methods after instructions check
(#884)
",51130,823,2873,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3986","skylot/jadx","dbd00d5a8b2a2d02138009012c9360280e2c4448",1,"2020-03-22 12:00:36+00:00","refactor: use instance methods for error and
warning notifications
",51213,826,2881,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3987","skylot/jadx","e09e933f9ca719c05d647367198878ddc70f02ac",2,"2020-03-22 12:11:58+00:00","fix: additional checks for class signature
",51239,827,2890,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3988","skylot/jadx","4dc4aa122b0f156be71278d532687e6c5f43da41",6,"2020-04-26 18:25:49+01:00","fix: don't duplicate result arg with instruction
copy (breaks SSA variable assign)
",51463,830,2916,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3989","skylot/jadx","a7f315f596c6850c680711282e519f91b8ca5468",1,"2020-04-26 20:36:27+01:00","fix: split CONST used in PHI to help type
inference (#900)
",51530,831,2937,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3990","skylot/jadx","7f5092c0d59604dca757f76afaa748fa1af41628",1,"2020-04-27 22:10:21+01:00","fix: redone shadowed fields handling (#897)
",51640,831,2915,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3991","skylot/jadx","f3cd4e38d764de87e8848425c653b717cfd3d487",1,"2020-05-03 18:16:59+01:00","fix: check enum constructor content before
removing (#922)
",51751,834,2925,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3992","skylot/jadx","45b73046309a2e40728a1a82a74551ef43295795",2,"2020-05-08 19:53:20+01:00","fix: workaround for link clicks in RSyntaxTextArea
(#929)
",51791,834,2924,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3993","skylot/jadx","e22474e0a70609d311a0abde4da7048979ef515b",1,"2020-05-09 15:38:18+01:00","fix: inline move instructions to help process
constructors (#927)
",51900,836,2941,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3994","skylot/jadx","0692464b85f29c762064612e2ea5208238d23a33",2,"2020-05-11 20:42:06+01:00","fix: mark override methods and fix return type
(#913)
",52266,842,2950,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3995","skylot/jadx","85760cc844be7b7092cf8be37be8b9759ab31d8d",1,"2020-05-12 17:17:22+01:00","fix: replace type variables in arrays (#913)
",52305,843,2950,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3996","skylot/jadx","0d69e0ac971f53fd89dd15db16d7c5dd21c7fbb5",47,"2020-04-29 17:24:44+01:00","refactor: use own dex parser instead deprecated dx
lib
",55019,903,2954,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3997","skylot/jadx","d720179debbb27c7deadbfcb231bcade9176f966",1,"2020-05-21 21:56:58+01:00","fix: collect class usage and fix class access
modifiers (#729)
",55107,903,2954,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3998","skylot/jadx","15776c4ce30be9ab262b035a36402ce25facfe3f",1,"2020-05-24 20:30:39+01:00","fix: make class public if some method going to be
inlined (#729)
",55233,907,3000,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"3999","skylot/jadx","6192ced214dc05f6848ca786d2d38a900f717bbe",2,"2020-06-01 19:59:28+01:00","fix: improve type inference of type variables in
method invoke (#913)
",55424,910,3010,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"4000","skylot/jadx","65553c156cd0edbf5c75770e76de621984891255",1,"2020-06-06 18:36:12+01:00","fix: restore android R class (#947) (regression)
",55433,910,3009,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"4001","skylot/jadx","0f808d5c607411973f0839874a6eb16cfd8508b9",1,"2020-07-20 09:12:03+01:00","fix: resolve char literal incorrect print as
string (#856)
",55488,911,3033,"Skylot","skylot@gmail.com","Skylot","skylot@gmail.com"
"4002","square/retrofit","3c963a4a470194961e98952b2b51b8b29901d9e5",66,"2017-05-08 09:36:26-04:00","Add JSR 305 nullability annotations.
",13288,185,3883,"Jake Wharton","jw@squareup.com","Jake Wharton","jw@squareup.com"
"4003","square/retrofit","e985d5522462cdd759267b32e7f5212acef9580c",2,"2017-05-11 14:23:18-04:00","Add converters which facilitate the use of
Optional.  Both Java 8 and Guava are supported,
just like in the adapters.  This is especially
useful in the use of RxJava 2 as it does not allow
null values in the stream. This means a return
type declaration of Single<BodyType> might result
in an NPE should a converter deserialize the
response body into null. By adding one of these
delegating converters before your normal
converter, it allows you to use
Single<Optional<BodyType>> to support this case.
",13458,195,4015,"Jake Wharton","jw@squareup.com","Jake Wharton","jw@squareup.com"
"4004","square/retrofit","395f1a7069761f6e9a0ac3dccf8c5aed1a54cc67",2,"2017-05-25 13:14:14-04:00","Add some missing nullable annotations.
",14200,202,4123,"Jake Wharton","jw@squareup.com","Jake Wharton","jw@squareup.com"
"4005","square/retrofit","9d48466db40d5a89289cdc6d3b86e401f87d4445",3,"2018-01-14 23:20:43-05:00","Initial JAXB converter factory. (#2609)  We
probably want to add options to make it strict, or
to change the defaults  and make it strict by
default and optionally lenient.    We can do that
in follow-up. This works.
https://github.com/square/retrofit/issues/2277
",14912,216,4352,"Jesse Wilson","jesse@swank.ca","GitHub","noreply@github.com"
"4006","square/retrofit","ed5ef7cc86ebad6cbd7ecad74ab77d59d23e93b3",1,"2018-02-17 22:33:33-05:00","More accurately name call adapter list field.
(#2664)
",15057,218,4384,"Jake Wharton","jakewharton@gmail.com","Jesse Wilson","jesse@swank.ca"
"4007","square/retrofit","0b56d38c45c5e07cb99f883b0b93343bb3fba9bd",2,"2018-03-07 08:02:28-05:00","Small tweaks while doing other work. (#2685)  *
Add missing nullability annotations.    * Inline
single-use utility methods.    * Remove redundant
throws.    * Inline method only called once.
",15052,218,4384,"Jake Wharton","jakewharton@gmail.com","Jesse Wilson","jesse@swank.ca"
"4008","square/retrofit","329a9fda122f29a40f49482d421f260bf148ee83",1,"2018-03-27 09:33:32-05:00","Ability to add Http status code to
Response.success (#2715)
",15084,218,4388,"Josh Kleven","joshkleven09@gmail.com","Jake Wharton","jakewharton@gmail.com"
"4009","square/retrofit","ce787ed52be1eb881e5375aaf14100c1800e4037",2,"2018-03-31 18:27:53-07:00","Add support for creating failed test call
instances with any exception.
",15121,218,4397,"Warren Smith","warrens@uber.com","Jake Wharton","jakew@google.com"
"4010","square/retrofit","f3bf724467cbd07127d26953bfc6f7e9b724b6ba",1,"2018-06-16 01:20:43-04:00","Consolidate exception formatters in one place
",15189,220,4431,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4011","square/retrofit","6cd571919f7a2a6e8f138bdd593e7ab3d174bb21",1,"2018-09-19 00:31:32-07:00","Move CompletableFuture support into Retrofit core.
",15553,225,4533,"Eric Cochran","eric@nightlynexus.com","Eric Cochran","eric@nightlynexus.com"
"4012","square/retrofit","5bcf32637e0644aaa59c82ad989df2be5ef00e71",1,"2018-09-23 20:03:51-07:00","Move Optional support into Retrofit core.
",15784,230,4646,"Eric Cochran","eric@nightlynexus.com","Eric Cochran","eric@nightlynexus.com"
"4013","square/retrofit","05019fc4bcd9bcdc4d1d0b458c8a159b7a73b2fb",30,"2018-10-05 21:42:12-04:00","Replace @ParametersAreNonnullByDefault with
@EverythingIsNonNull
",15775,231,4629,"Jesse Wilson","jwilson@squareup.com","Jesse Wilson","jwilson@squareup.com"
"4014","square/retrofit","f1524cd7c74dd3ca11154f6d3fcc0db5044d8a4e",5,"2018-11-16 16:03:11-05:00","Add some missing Nullable annotations
",15990,233,4679,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4015","square/retrofit","a604fe1181bda241d8f0a5e07c96d7c432b44dfb",10,"2018-11-16 16:11:47-05:00","Add some missing Nullable annotations
",15991,233,4679,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4016","square/retrofit","484971b4e0c41a8c40e168f50d32259da8051ada",1,"2019-01-22 15:10:39-05:00","Mark HttpException.response() as nullable  If the
exception was serialized this value is not
retained.
",16165,236,4699,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4017","square/retrofit","4a831735be45ed5b0aa55ea1d70b4c23d2301b4f",2,"2019-02-15 09:33:42-05:00","Add parameter annotation @Tag for setting request
tags
",16276,238,4762,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4018","square/retrofit","b761518aa174c7b0512b73f2fe70e2e908f24081",4,"2018-09-11 18:28:21-04:00","Add first-party Kotlin coroutine suspend support
",16304,238,4765,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4019","square/retrofit","05560b7a910eb4b705fb2d81732e48c883544309",2,"2019-02-28 15:04:48-05:00","Add annotation for skipping the callback executor
",16429,239,4804,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4020","square/retrofit","47ebf3e63e13986738fa4f6e54ddba26b38bf181",1,"2019-02-28 21:53:39-05:00","Back suspend methods with the CallAdapter for
Call.  This allows the regular mechanism of
composition of behavior without explicitly needing
to model suspending functions in the API.
",16460,240,4823,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4021","square/retrofit","239cd2f227dc47d268bfec91b97f2dfd2958eee2",4,"2019-02-28 16:32:46-05:00","Add some missing @Nullable annotations to Utils
",16460,240,4823,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4022","square/retrofit","cb998173485b21af3c60abf3f64010b8a6b55559",4,"2019-02-28 16:47:29-05:00","Add more obviously missing @Nullable annotations
",16462,240,4823,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4023","square/retrofit","a7755ea446804b1c1d27480679d10e682b121141",1,"2019-04-09 10:02:42-07:00","Support okhttp3.Headers for HeadersMap parameters.
",16540,240,4824,"Eric Cochran","eric@nightlynexus.com","Eric Cochran","eric@nightlynexus.com"
"4024","square/retrofit","8c487d45e733318297042201bd10059d14dbd31c",4,"2019-06-23 21:34:05-04:00","Update to Java 8 and OkHttp 3.14
",16423,240,4780,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4025","square/retrofit","1ec98c2364b497278c34f04a49236cde9de7b178",1,"2019-12-16 20:35:21-05:00","Add coroutine support to BehaviorDelegate
",16526,240,4797,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4026","square/retrofit","38ec905ee01dce0b69eb27a5a92aa1a85c767723",1,"2020-03-11 17:04:56-04:00","Deduplicate ListenableFuture subtype
",16534,240,4797,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4027","square/retrofit","a0700b862aaeb724c8684c8e7eb2382a90b358fe",1,"2020-02-20 19:00:34-07:00","Add Java 14+ support for default methods  The bug
which required the reflective use of a hidden
constructor is fixed in Java 14 and the normal
lookup can just be used. Moreover, that private
constructor is no longer even available.
",16536,240,4799,"Thomas May","tmay@clearwateranalytics.com","Jake Wharton","jakew@google.com"
"4028","square/retrofit","34f6a7fdc2f359d05a32f3262825563fc10929b4",2,"2020-04-17 22:43:23-04:00","Add Android integration tests
",19046,243,4903,"Jake Wharton","jakew@google.com","Jake Wharton","jakew@google.com"
"4029","square/retrofit","f68ceb45ac44878dfac7dc4d5f61b6de86b83659",5,"2020-02-24 14:52:32+01:00","Added RxJava3 adapter
",21991,281,5548,"Michiel Vermeersch","mv@unmatched.eu","Jake Wharton","jakewharton@gmail.com"
"4030","openzipkin/zipkin","5447701a00214ec7fefc97690cb8aa048822c244",1,"2015-11-04 12:25:56-08:00","Updates to upstream 1.21.1
",2803,44,867,"Adrian Cole","acole@pivotal.io","Adrian Cole","acole@pivotal.io"
"4031","openzipkin/zipkin","068d0f0f668384987741f077f81a119ac095ee29",4,"2015-11-12 21:11:02-08:00","Updates to Spring Boot 1.3 and upstream 1.25  *
Adds duration and lookback queries * Added docs
for all core datatypes * Uses ""on duplicate key
update"" to merge late arriving span metadata *
Adds gzip compression of api traffic * Adds clock
skew adjustment
",3311,52,1340,"Adrian Cole","acole@pivotal.io","Adrian Cole","acole@pivotal.io"
"4032","openzipkin/zipkin","20e50337c463b3d8f8029dcd7c9f00c157864b20",1,"2016-03-23 16:07:13+08:00","Adds AsyncSpanStore: an SPI to adapt to async
composition libraries  This adds a callback-driven
AsyncSpanStore, which can be used to build futures
or other async constructs. This isn't intended to
be used directly by users. Rather, it is an SPI
used to intermediate between libraries that can
drift, such as Guava or RxJava.
",7827,128,3309,"Adrian Cole","acole@pivotal.io","Adrian Cole","acole@pivotal.io"
"4033","openzipkin/zipkin","4c612fabdd876e618fee2b8ea49247bcef396bbb",4,"2016-04-03 20:00:18+08:00","Adds StorageComponent, an object graph for storage
interfaces  This add `StorageComponent`, which
centralizes how storage plugins provide interfaces
to consumers such as zipkin-server. This also re-
organizes transports similarly, though not yet
exposing `TransportComponent`.  A key feature of
this is lazy instantiation. This prevents
transient conditions such as Cassandra being down
from crashing bootstrap.
",9053,164,3827,"Adrian Cole","acole@pivotal.io","Adrian Cole","acole@pivotal.io"
"4034","openzipkin/zipkin","1f402e0b3566c460ec26838b4837c45c0ca6402f",1,"2016-05-06 20:02:14+08:00","Moves to consistent builder pattern
",11407,189,4372,"Adrian Cole","acole@pivotal.io","Adrian Cole","acole@pivotal.io"
"4035","openzipkin/zipkin","e389f6adf53abf61fa3fd2a68816ac7d22586efa",1,"2016-05-17 22:03:41+08:00","Extracts auto-configuration modules from zipkin-
server  This decouples zipkin-server from ui,
storage and collector modules. While there remains
an optional dependency, this is only a mechanism
to include these modules in the fat jar.  To do
this, it uses the AutoConfigure technique from
Spring Boot, notably registering a manifest for
each component to export.  To completely decouple,
some work was needed. Particularly health check
registration needed to become more generic, and
occur at the very end of the application bootstrap
so as to not interfere with initialization.
Finally, this clears up a long-standing confusion
where we named a storage component jdbc,
eventhough we only test it with mysql and all the
flags are named mysql. This settles on mysql as
for example PostgreSQL would likely need different
syntax.
",11631,193,4489,"Adrian Cole","acole@pivotal.io","Adrian Cole","acole@pivotal.io"
"4036","openzipkin/zipkin","f0eabc049aaedead7bfe73d6b79f30f9a55e825b",2,"2017-08-06 22:35:10+08:00","Adds Elasticsearch 6.x support using Span2 model
(#1674)  This adds Elasticsearch 6.x support via
single-type indexes:    * zipkin:span-2017-08-05 -
span2 (single endpoint) format  *
zipkin:dependency-2017-08-05 - dependency links in
existing format    This indexing model will be
available in the next minor release of  Zipkin,
particularly for Elasticsearch 2.4+. If you aren't
running  Elasticsearch 2.4+, yet. Please upgrade.
Those wishing to experiment with this format
before the next minor  release can set
`ES_EXPERIMENTAL_SPAN2=true` to use this style
now.  When set, writes will use the above scheme,
but both the former and new  indexes will be read.
",28303,338,9082,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4037","openzipkin/zipkin","6e32e74ab01c4759018806f85c862596c516d264",10,"2017-08-23 17:01:54+08:00","Organizes v2 classes into corresponding internal
packages (#1702)
",28762,347,9205,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4038","openzipkin/zipkin","65e7db8921d7c2b2a7421a1be1d7e85c224b4f21",1,"2017-08-24 20:20:17+08:00","Removes old nullable annotation and fixes problems
caught with analyzer (#1703)  This can't break
anything at runtime because the nullable
annotation  removed was source retention. This
makes Intellij Nullable analysis  possible.
",28885,386,9709,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4039","openzipkin/zipkin","53726596685f6f1de8059e79d1927b3282cff5cb",2,"2017-08-30 08:49:37+08:00","Adds v2 SpanStore and a bridging adapter to v1
(#1709)  This adds SpanStore which returns Call
objects as opposed to replicating  signatures for
synchronous and asynchronous invocations. Unlike
before,  this does not support ""adjustments""
rather assumes they happen at a  layer above
storage. This decision refines the storage query
api to the  following:    ```java
Call<List<List<Span>>> getTraces(QueryRequest
request);    Call<List<Span>> getTrace(long
traceIdHigh, long traceIdLow);
Call<List<String>> getServiceNames();
Call<List<String>> getSpanNames(String
serviceName);    Call<List<DependencyLink>>
getDependencies(long endTs, long lookback);  ```
A later change might replace the getTrace call
with a hex string  parameter.
",30024,400,10137,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4040","openzipkin/zipkin","13b24a87ec7952892b0441954fa8ddc9f0b958c1",2,"2017-08-30 16:27:48+08:00","Backfills query-related tests (#1714)
",30077,400,10137,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4041","openzipkin/zipkin","8a33b2a6d3ce87cf3a43785b991bc6456965735b",5,"2017-09-02 12:48:04+08:00","Changes v2 IDs and IPs to validated Strings
(#1721)
",31405,410,10465,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4042","openzipkin/zipkin","2fe5142e08b4d74bd38da4ff5837e969777755da",4,"2017-09-08 08:10:32+02:00","Decouples v2 types from v1 types, in preparation
of a new package (#1726)  This moves all the code
needed for v2 types into zipkin.internal.v2
without any references to code outside the
package. To reduce  duplication, ""v1"" code can
reference v2 types (as they need to in order  to
covert for example). Once this is in, we can
consider refactoring out  a v2 module.
",31613,420,10628,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4043","openzipkin/zipkin","f895b832db6f9658f05edc084d6afa55dfaf34ac",1,"2017-09-09 07:55:24+02:00","Teaches the v2 tree how to encode v1 format
(#1728)  The zipkin v2 library is intended to be
used by itself in tracers. Since  tracers cannot
control the span transport, it likely will need to
write  the old (historical) json format for at
least months. To avoid requiring  dual versions of
jars to accomplish this, we add an encoder that
writes  json v1 format given a v2 span.    Note:
we don't decode as the library problem is easier
to manage on the  server side. For example,
zipkin-server will need both versions of the  jars
for things like collection for a while.
",32017,424,10684,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4044","openzipkin/zipkin","5c8a17620674ada895acf05038bfdb209924a47d",3,"2017-09-10 21:46:59+02:00","Extracts v2 library
",32184,429,10873,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4045","openzipkin/zipkin","4e923c30e575e8529e5254ba2f8409020e7c58f1",4,"2017-09-11 09:23:24+02:00","Extracts v2 native Elasticsearch Storage component
",32318,430,10895,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4046","openzipkin/zipkin","754bab4b64da829181526de209d0cad7f89b33da",7,"2017-10-09 11:36:56+11:00","Refactor `zipkin.storage.cassandra3` to
`zipkin2.storage.cassandra3`
",32754,399,10546,"mck","mick@thelastpickle.com","Adrian Cole","adriancole@users.noreply.github.com"
"4047","openzipkin/zipkin","eed3c5b00f58543034a116d7072dc62f4c19319b",11,"2017-10-27 17:20:00+08:00","Removes guava async composition as conflicts with
spark  This extracts out calls in efforts to make
the overall flow inside Cassandra easier to read
and the commands themselves easier to debug.
",33547,415,10785,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4048","openzipkin/zipkin","de80609598db48e96460573672280e89237562d5",1,"2017-11-10 14:57:41+08:00","Adds bracing with ‚ñë to ensure no accidental
substring match
",33528,415,10810,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4049","openzipkin/zipkin","5bb25f55ce59061602c0e982dedb6cf3da1e3d87",2,"2017-11-14 17:52:11+08:00","Fixes accidental hot partition with empty service
name  In porting over the all-services query, I
accidentally created a piping hot partition. This
re-instates code similar to what we had in the old
schema, except that we can avoid an all-service
fan out in more cases.
",33557,415,10832,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4050","openzipkin/zipkin","7e6cfdda11fd6990aadcff542141efa080eae340",13,"2018-01-12 14:09:14+08:00","Makes zipkin2 model objects final with
serialization impl (#1880)  Kryo doesn't work with
auto-value. This makes a default implementation
of serialization of top-level types use our json
codec (which is  more efficient than java's
default).
",34874,419,10947,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4051","openzipkin/zipkin","853ca12419b5dc8be8bf02805f13534cb224f066",1,"2018-01-23 16:16:26+08:00","Adds ability to disable search for in-memory ES
and cassandra v2 storage (#1876)
",35418,426,11086,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4052","openzipkin/zipkin","cc34b20d583962441beec84a459334dbdc5a481c",2,"2018-04-16 22:13:04+08:00","Adds Endpoint IP address bytes accessors  This
adds `Endpoint.ipv4Bytes()` and
`Endpoint.ipv6Bytes()` needed to prevent excess
overhead marshaling into byte arrays. It is
efficient to do this once, as endpoint IPs are
most often shared (local endpoint) for all spans.
Even in the case of remote endpoint, these are
often parsed from `Inet6Address` objects who
already have a byte array reference.  This will be
used in proto3 and possibly in a future
retrofitted v1 thrift encoder.
",35453,435,11263,"Adrian Cole","acole@pivotal.io","Adrian Cole","acole@pivotal.io"
"4053","openzipkin/zipkin","9b1f5295b2bd9715f4c3ded4fd18fdd710b563c9",8,"2018-05-25 11:50:47+09:00","Removes auto-value dependency and maven metadata
from core jar (#2062)  This removes the auto-value
dependency from the zipkin2 core jar as  we only
use it in a couple places now. This prevents a
version problem  where new versions require a hard
dependency. It also reduces the  number of classes
and the size (orders of tens of kilobytes
uncompressed).    By default, the maven plugin
includes a copy of the pom file, which can  be a
kilobyte or more of text. This excludes it in
favor of normal  download location.
",37292,448,11590,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4054","openzipkin/zipkin","8a6ae58ff09c7b227b8cdf403b0950e5b137edf2",8,"2018-05-30 12:24:16+08:00","Adds V1 conversion library  This allows us to port
old storage to zipkin2 packaged code while still
being able to read v1 structs.  Note: this
intentionally ignores unsupported Binary
Annotation types such as I64. In doing so, the
code is less difficult to maintain.
",40551,470,12140,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4055","openzipkin/zipkin","39972495b009b0a3c7c84a3a93efc79eb1b82033",1,"2018-06-04 22:31:34+08:00","Migrates legacy cassandra code to v2 apis
",41312,482,12252,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4056","openzipkin/zipkin","230277363f35b6f2972dc9a2f5de1a69b8d45561",1,"2018-06-06 20:57:31+08:00","Extracts common logic
",41324,484,12254,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4057","openzipkin/zipkin","8f99f3cf44cbcdc678b9ae845d501ba2fc2422a4",1,"2018-06-11 07:50:21+08:00","Migrates zipkin-junit to zipkin2 packages dropping
http read apis  The read apis for zipkin's query
interface are not required in a unit test, as you
can just access the rule to query for dependencies
or traces you sent. Restricting this functionality
dramatically reduces the maintenance surface area.
See #2047
",39945,452,11829,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4058","openzipkin/zipkin","55094d356fb3c93026eca50079d1b7e9d34e5987",1,"2018-06-11 12:40:25+08:00","Skip incomplete mysql rows instead of NPE
",40050,453,11844,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4059","openzipkin/zipkin","f77668a2baa8c3aa23610421dc697158dfb4c111",1,"2018-07-15 10:46:31+08:00","Corrects edge case conversion code around v1
address annotations
",28083,342,7877,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4060","openzipkin/zipkin","82b28cca99baa39f371db5d485eb0a569345db9c",4,"2018-11-17 17:24:09+08:00","Adds internal type to merge spans in a trace
together (#2246)  This merges spans that have the
same identity together for the purpose  of display
or aggregation. This works around instrumentation
that  accidentally or purposefully send spans in
pieces.
",28703,345,7945,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4061","openzipkin/zipkin","4a8a55f227cc54ccb997b43d584d77b671b425fa",3,"2018-11-22 22:37:46+07:00","Migrates java aggregation code to v2 format
(#2268)
",28862,347,8033,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4062","openzipkin/zipkin","4afa5d8f25195e9d2fa77b78e679d2ebb73d265d",5,"2018-12-03 09:09:07+08:00","Removes some redundant code and allocations in
SpanNode
",28867,347,8035,"Adrian Cole","acole@pivotal.io","Adrian Cole","adriancole@users.noreply.github.com"
"4063","openzipkin/zipkin","8e4ada890c1b4f0f21babaf1a2315af128aeb4f4",1,"2019-01-07 13:40:11+08:00","Adds delay limiter for autocomplete tags (#2341)
",29955,362,8289,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4064","openzipkin/zipkin","b8646142fa15c8c5f47ff2a2a48dc663c7bb65b3",26,"2019-04-14 17:15:45+09:00","De-conflate local from remote service names
(#2484)  Especially mentioned in #1794, local and
remote service names are undeniably serving
different use cases, yet currently conflated in
the api.    /services -> only local serviceNames
/remoteServices?serviceName=X -> new: only remote
serviceNames for auto-complete
/spans?remoteServiceName=X -> new: to restore
functionality @llinder mentioned
",32005,384,8723,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4065","openzipkin/zipkin","f419eae55434db22825649515aa9499b05523014",27,"2019-05-09 23:54:43+09:00","Ports the scribe collector to armeria (#2563)
",29964,346,9254,"Anuraag Agrawal","anuraaga@gmail.com","Adrian Cole","adriancole@users.noreply.github.com"
"4066","openzipkin/zipkin","560f7056fb379759c10d3837b17865f52910a6f9",1,"2019-05-11 19:12:04+08:00","Adds cheap string encoding for IpV4 path used in
protobuf (#2584)  * Adds cheap string encoding for
IpV4 path used in protobuf    Commonly, we parse
protobuf, but write json. This implies reading
bytes  and encoding IP literals. This improves
performance of IpV4 address  encoding and tries to
pay for the extra bytecode by removing some.    *
copy/pasta
",30937,355,9493,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4067","openzipkin/zipkin","feb151f2f9e5a1a10020c8c7eb5c6129112663da",7,"2019-05-15 14:21:45+08:00","Makes SpanBytesDecoder work on ByteBuffer (#2589)
* Makes SpanBytesDecoder work on ByteBuffer
Internally, this also covers InputStream.    This
was easier (though not easy) due to splitting how
we handle  encoding from decoding.
Incidentally, the jar size of zipkin is smaller
still vs the last  release.    Fixes #2435    *
whoops forgot the important parts    * de-
optimizes for thrift in order to increase clarity
* bug    * Adds json comparison benchmarks    *
just review feedback    * mah endian    * less
code    * bench
",31407,361,9621,"Adrian Cole","adriancole@users.noreply.github.com","Anuraag Agrawal","anuraaga@gmail.com"
"4068","openzipkin/zipkin","fc8cc19a78d01c472b4b79412f378a43f179b772",1,"2019-07-14 09:06:42+09:00","Migrates Elasticsearch storage from okhttp to
armeria (#2653)
",32224,368,8555,"Anuraag Agrawal","anuraaga@gmail.com","Adrian Cole","adriancole@users.noreply.github.com"
"4069","openzipkin/zipkin","d985e932aa8b700b82c39859adbc4b3ef2c0ca1b",5,"2019-07-19 19:56:37+09:00","Migrate from moshi/okio to jackson (#2688)
",35040,410,9265,"Anuraag Agrawal","anuraaga@gmail.com","Adrian Cole","adriancole@users.noreply.github.com"
"4070","openzipkin/zipkin","68412118cf8df493bb0e54beb223120663e5ce22",3,"2019-08-06 21:09:05+12:00","Instruments when STORAGE_THROTTLE_ENABLED=true
(#2735)
",35523,425,9622,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4071","openzipkin/zipkin","909ee5ff1421c752b611f2ed8817c3297751f3f8",2,"2019-08-10 10:37:37+08:00","Updates to latest armeria (#2743)
",35633,426,9672,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4072","openzipkin/zipkin","275a74ba95255d0753a7af4040b133e28497c9f1",3,"2019-08-31 16:04:37+09:00","Add an integrated benchmark runner. (#2786)  * Add
integrated benchmarks to make it simpler to run
storage benchmarks.    * Fix    * Finish    *
Remove unneeded dep.    * License    * println
* Zipkin always in a container    * license-for-
main    * Cleanups    * Untested    * Tested    *
src/test    * Finish    * Document Windows(?)
gotcha    * Stop containers again
",36179,431,9824,"Anuraag Agrawal","anuraaga@gmail.com","GitHub","noreply@github.com"
"4073","openzipkin/zipkin","a762a03f59e61d396cc335cd7202076390a19712",1,"2019-09-13 12:58:31+08:00","Upgrades versions to latest and tweaks ES
InitialEndpointSupplier (#2799)  Notable, the
latest Armeria update allows us to focus
Elasticsearch  `InitialEndpointSupplier` code on
parsing as opposed to composition.
",35952,430,9749,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4074","openzipkin/zipkin","d2ebec72639b685ae2a35c296c4872cb5328a88f",1,"2019-09-23 09:11:39+00:00","Directly implements the /info endpoint and cleans
up prometheus config (#2814)  Before, we directly
implemented prometheus, but still left actuator
on.  This prevents redundant booting of that.
This also directly implements the /info and
/actuator/info endpoints  with tests to show the
content is correct.
",36487,440,9949,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4075","openzipkin/zipkin","00bab807d36ffe01b3964ecf8271e5ef4a129de4",1,"2019-09-24 08:41:06+05:18","Decouples health and metrics controllers,
backfills tests for health (#2819)  Before, we had
health and metrics code mixed in the same
controller.  This decouples that and ensures not
only that health json is pretty by  default, but
that it is also verified. For example, we had an
encoding  bug on an error path we didn't notice.
",36590,443,9986,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4076","openzipkin/zipkin","753f619199a806311af4b67ca11630c1516c48d0",1,"2020-03-06 22:13:22+09:00","Add benchmark for XRay UDP. (#3010)  * Add
benchmark for XRay UDP.    * foo
",36960,451,10210,"Anuraag Agrawal","anuraaga@gmail.com","GitHub","noreply@github.com"
"4077","openzipkin/zipkin","e3e4832dd4e9f3737c612db7128b3a7f5c56d01f",2,"2020-04-14 09:10:22+08:00","Adds Dynamic elasticsearch credentials file
(#3050)  Load elasticsearch credentials from a
properties file in a fixed rate interval. There
are two parameters to control it:
ES_CREDENTIALS_FILE: An absolute path of the file.
ES_CREDENTIALS_REFRESH_INTERVAL: Refresh interval
in      seconds.
",37203,455,10298,"Gao Hongtao","hanahmily@gmail.com","GitHub","noreply@github.com"
"4078","openzipkin/zipkin","d3eb7f1221d3b75241f6934f228c5cb4624c01b4",1,"2020-06-04 08:29:17+08:00","Updates build to JDK 14 and addresses latest
errorprone warnings (#3103)
",37323,457,10335,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4079","openzipkin/zipkin","854fe8c689eef3071c14fa4e6b33943fbab5cd8a",6,"2020-07-04 15:40:49+08:00","Removes guava dep in preparation of Datastax
Driver 4.x (#3134)  We only needed guava for
Cassandra. Removing it here makes migration
easier.    Note: there's still a guava left in
cassandra-v1 which is too complex to undo  in this
PR (Table and Cache apis).
",37299,460,10382,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4080","openzipkin/zipkin","7bd40d01e7ddc416c8689426b822ad2c980e61c1",5,"2020-07-12 19:58:03+08:00","Refactors Cassandra v1 indexing code and fixes
some glitches (#3137)  This change performs more
cleanups in preparation of the move to Datastax
Java Driver 4, mostly consolidation in nature:
* Fixes bug when drop-down choices were added when
span data wasn't indexed  * Uses less auto-value
by choosing Map.Entry for pair/tuple data  *
Simplify index state management by giving each
indexer a separate cache  * Moves index clash test
to CassandraSpanConsumerTest  * Adds a bunch of
comments explaining loop logic of
CassandraSpanConsumer  * Removes guava dep (except
ListenableFuture)
",37382,459,10414,"Adrian Cole","adriancole@users.noreply.github.com","GitHub","noreply@github.com"
"4081","dbeaver/dbeaver","b07f5c27ce9d3ae78c61d174c77aea0b823c1505",54,"2013-12-21 13:18:43+00:00","Nullable/NotNull annotations
",131131,1780,53202,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4082","dbeaver/dbeaver","1af5bff466390841297eedbfb353ff56c876d1cb",3,"2013-12-21 17:11:00+00:00","Oracle constraints reading fix
",131139,1780,53202,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4083","dbeaver/dbeaver","15d2afd6efdc66fcb6c46fc02a03e177b17d37d5",50,"2013-12-28 13:08:56+00:00","Null/NotNull anno, npe checks
",131475,1785,53325,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4084","dbeaver/dbeaver","b475065570501fab7c0c903a1b5b037cb90edefc",1,"2014-01-02 10:24:37+00:00","SOCKS proxy config+authentication
",131543,1785,53345,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4085","dbeaver/dbeaver","562c13288c94ee9761df535397a6bae36d73ebca",1,"2014-01-02 21:31:07+00:00","RSV hovering fix
",131574,1785,53345,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4086","dbeaver/dbeaver","19dde8f32f84c96397972cb6fab214d92fc323e7",1,"2014-01-04 14:07:01+00:00","RSV theme colors configuration
",131587,1785,53363,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4087","dbeaver/dbeaver","d9a53e647113ae0ca7145c7aa4f4e0b66bba1163",1,"2014-01-04 14:58:18+00:00","Result set UI config
",131625,1785,53363,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4088","dbeaver/dbeaver","00375ebb492676521b0a7ca307fd1a960540dadd",88,"2014-01-06 17:51:37+00:00","Annotations, npe fixes. RSV multitab ui fixes
",131949,1786,53380,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4089","dbeaver/dbeaver","260c59b398d3cb60ed6621371046452db6a29ac2",9,"2014-01-12 11:05:52+00:00","Connection dialog refactoring
",131958,1786,53371,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4090","dbeaver/dbeaver","39a312d42d2058c976b58f804410d4d620c351e2",10,"2014-01-12 14:56:26+00:00","Connection dialog refactoring + network handlers
config UI
",131946,1785,53350,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4091","dbeaver/dbeaver","6ab0793a3bf0f4c059edae6a52e0a4f393ef4325",1,"2014-01-13 16:17:38+00:00","Shell commands UI refactored
",131897,1785,53348,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4092","dbeaver/dbeaver","0c432d6a8a372622946c7e29ab606f533537f6bd",2,"2014-01-18 12:14:03+00:00","Connection double click behavior configuration
",131965,1785,53341,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4093","dbeaver/dbeaver","c8b9e01edc019fa2b01faa796abd2e504212f6db",5,"2014-01-21 16:56:28+00:00","Minor SQL editor code cleanups
",131988,1785,53337,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4094","dbeaver/dbeaver","1f5ecd41f7888c1e805bd00bae5ac544c91b7772",6,"2014-01-22 16:57:17+00:00","SQL auto-complete fix. Annotations
",132034,1785,53335,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4095","dbeaver/dbeaver","9d79faa276e5c16182b418851deba5dd7ed5e068",4,"2014-01-23 06:36:19+00:00","SQL dialect model
",132158,1788,53409,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4096","dbeaver/dbeaver","7080393209d0fcfefcc418df27a41ea06b37611c",5,"2014-01-23 07:18:16+00:00","SQL syntax model refactoring
",132131,1786,53335,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4097","dbeaver/dbeaver","92e87a7b00667bbb099f642c4e3b7d28c0272677",15,"2014-01-24 08:27:15+00:00","Oracle-style comments support
",132267,1788,53382,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4098","dbeaver/dbeaver","01176850f8acce12c3252277adefdba539b18bac",4,"2014-01-25 09:52:36+00:00","Server output reader API. Oracle DBMS OUT
",132414,1790,53375,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4099","dbeaver/dbeaver","d16edf5b5fc8aaf489ebb5b278377063c74680dc",2,"2014-01-25 14:50:00+00:00","Active object connection preset
",132492,1790,53377,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4100","dbeaver/dbeaver","872f9a07fb9141a6d72c867b629ec61fd8d1016b",25,"2014-01-26 20:21:01+00:00","SQLite metadata reading fix. ERD layout fix
",132672,1791,53406,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4101","dbeaver/dbeaver","bdf629fbc067ffd7f83d1c670280283b11b365d4",92,"2014-01-26 20:47:09+00:00","SQLite metadata reading fix. Annotations
",132889,1791,53407,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4102","dbeaver/dbeaver","9f3bb8ce3139fd4ddfb0708cec541ac2c027eeaf",3,"2014-01-27 19:47:00+00:00","MySQL truncate SQL editor fix
",133083,1795,53497,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4103","dbeaver/dbeaver","53073aa94faec6d50100d2baf9f2515fe9583640",1,"2014-01-27 21:06:42+00:00","MySQL maintenance tools
",133129,1795,53497,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4104","dbeaver/dbeaver","c0d82ab28db731133cc3066cd7df1566e1b8cb6e",1,"2014-02-01 09:34:37+00:00","Oracle tools (analyse & gather stats)
",133735,1806,53722,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4105","dbeaver/dbeaver","6d9ee382a5558c24cc72beeeb8e0f77746bb95dc",2,"2014-02-16 11:40:29+00:00","SQL string escape (dialect dependent)
",133901,1812,54093,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4106","dbeaver/dbeaver","6150a46d02f78adb6823a0460df1d067c6597646",5,"2014-02-17 19:05:46+00:00","SQL export format
",133901,1813,54117,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4107","dbeaver/dbeaver","3417916e2d413e4025786ed5756a393870c8979d",7,"2014-02-28 10:28:14+00:00","Grid refactoring
",133839,1814,54049,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4108","dbeaver/dbeaver","2858cb5168497b8028c5d3621959177906cb6e6c",3,"2014-02-28 11:17:20+00:00","Grid refactoring
",133713,1813,53901,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4109","dbeaver/dbeaver","fa277e2fa48701034550a3d3858c02b306df3175",4,"2014-03-02 14:54:42+00:00","Grid refactoring
",133739,1812,53848,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4110","dbeaver/dbeaver","65d85e406135e9eca45e27fe4ce8687e441cb882",2,"2014-03-15 10:51:00+00:00","RSV/grid redesign
",133140,1802,53986,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4111","dbeaver/dbeaver","73ca4103f43695e0d5aea15086c7ffbce60077ae",2,"2014-03-15 12:46:09+00:00","Value forat performance
",133143,1802,53980,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4112","dbeaver/dbeaver","62a4f4d0b79746044f2e59d5760b3ac329fa6808",1,"2014-03-16 07:38:50+00:00","Fix: copy to clipboard, delete rows
",133202,1802,53936,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4113","dbeaver/dbeaver","212b4879f14a24673ddba96c33219d1fc2c4c318",9,"2014-03-19 05:09:06+00:00","Annotations, code cleanup
",133389,1802,53333,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4114","dbeaver/dbeaver","26ede412d155cd2de4814479e41e59386feb93e4",4,"2014-03-19 05:55:29+00:00","Grid columns refactoring. Annotations
",133336,1802,53294,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4115","dbeaver/dbeaver","e8d7ed8f8bf5a24ce34c814fee6e3fcca28016e0",3,"2014-03-19 06:03:48+00:00","Numbers parse improved
",133370,1802,53294,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4116","dbeaver/dbeaver","a1682d50d159d92847356e8f0efe42ce2acd100c",4,"2014-03-20 08:19:07+00:00","Grid refactoring
",133071,1800,52861,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4117","dbeaver/dbeaver","afeb0f55172db449d7b2c49b903197b6bf08cd32",2,"2014-03-21 06:06:09+00:00","Preview panel fix. Structured grid
",133108,1800,52781,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4118","dbeaver/dbeaver","9330bba5890d5c2474aad379924841573d8374fb",9,"2014-03-21 08:22:38+00:00","RSV refactoring
",133147,1800,52781,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4119","dbeaver/dbeaver","d067ef48c4178e521ac17df52741f8c8ade7f4ae",7,"2014-03-21 08:30:41+00:00","Use single label provider in grid
",133108,1800,52781,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4120","dbeaver/dbeaver","eed728041af0011a631a11c9a8f67844512787c1",11,"2014-03-21 10:40:21+00:00","RSV Nested attributes
",133193,1801,52798,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4121","dbeaver/dbeaver","9809d31eec25b05d8b7179ba02294cbeea9f5707",35,"2014-03-23 11:50:00+00:00","Nested attributes reading
",133397,1802,52810,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4122","dbeaver/dbeaver","14feae7fcb8aa5fcfc889a18facb63e8b8b07eaf",1,"2014-03-23 14:22:41+00:00","Nested attributes ordering
",133353,1801,52769,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4123","dbeaver/dbeaver","314f7cceb48655de83a61e1d6c457ecee843445d",2,"2014-03-24 20:44:39+00:00","Temp project init fixed
",133345,1801,52774,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4124","dbeaver/dbeaver","b1d995afc8c217819fc1ac0d981e030947b941e1",1,"2014-03-25 21:18:57+00:00","Use model col/row in RSV (instead of GridPos)
",133396,1801,52775,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4125","dbeaver/dbeaver","b963baa662b7ed51792d55e665222d50976ebb06",6,"2014-03-26 15:24:30+00:00","Annotations
",133422,1801,52774,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4126","dbeaver/dbeaver","6fd0a26462b6b865f78cf33b2681d14121d9d66d",2,"2014-03-27 14:23:53+00:00","Struct values render/edit improved
",133470,1801,52784,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4127","dbeaver/dbeaver","e52cecef9c5174c5b20b8f511f5c7b4fcfb1d1d1",1,"2014-03-28 08:51:46+00:00","Read-only checking fix
",133506,1801,52799,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4128","dbeaver/dbeaver","556c14830dc83c265e6ae7c55c6861ce512a612e",1,"2014-03-29 12:03:04+00:00","Rows expand/collapse
",133527,1801,52775,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4129","dbeaver/dbeaver","3220229d1075076f43acf82e3d04e42abf022a0f",2,"2014-03-29 14:28:28+00:00","Grid rendering
",133492,1800,52702,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4130","dbeaver/dbeaver","cd80d329e7f4d5c60b031f40d81eb97d0c849b5e",11,"2014-03-29 16:05:43+00:00","Row expan/collapse implementation
",133563,1801,52724,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4131","dbeaver/dbeaver","68776d1f918f06cb191d3eb27808b9196a54a845",6,"2014-03-31 15:47:38+00:00","Data manipulation fix (for complex attrs)
",133589,1801,52781,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4132","dbeaver/dbeaver","3a0a0e01b2424c653fe63d44b9d7f69ccd75de38",4,"2014-03-31 19:11:24+00:00","Update structs
",133622,1801,52766,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4133","dbeaver/dbeaver","d59aecef8f7d7075b277046e9f5560c41cafa8de",1,"2014-03-31 20:15:30+00:00","Struct value handler fix
",133641,1801,52770,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4134","dbeaver/dbeaver","96f4977168e08f9cb6ebd5041b0d4c9ba7279495",2,"2014-04-01 18:00:54+00:00","Links
",133784,1802,52786,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4135","dbeaver/dbeaver","68af2dbb68038e8a5bdccf70f73b6a2e3a6a6b8c",1,"2014-04-03 06:14:54+00:00","Grid renderers
",133703,1802,52711,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4136","dbeaver/dbeaver","927d92fff9cefa97772f30c813daae9394f4c946",12,"2014-04-03 19:09:14+00:00","RSV links navigation
",133787,1802,52704,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4137","dbeaver/dbeaver","f6c9e4cc36be99d79cb688dcf8756fc4ce201350",2,"2014-04-03 19:50:22+00:00","RSV filter refactoring
",133805,1802,52704,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4138","dbeaver/dbeaver","e3798390cf7836d43173f5a958a3856304eee5a4",12,"2014-04-03 21:15:04+00:00","RSV fk navigation + referrers model refactoring
",133864,1802,52707,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4139","dbeaver/dbeaver","960088c935c05e7a3440bdc8abb4977785349b1b",4,"2014-04-04 12:24:17+00:00","RSV navigation & filters. All SQL generation moved
to SQL utils
",133976,1803,52735,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4140","dbeaver/dbeaver","d257dcd1a76eabefbb7318b2fc6c2241d0c7cdee",1,"2014-04-04 21:10:24+00:00","Filter value editor
",134115,1804,52740,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4141","dbeaver/dbeaver","c0e96de10cfb36c0c71f0d7d4f7e94cb03b8d46b",14,"2014-04-05 11:01:25+00:00","Remove standard history navigation. RSV top
toolbar
",134096,1803,52744,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4142","dbeaver/dbeaver","89d8398f738065c0e38ccde4ddd928ba55b1f978",1,"2014-04-05 13:34:28+00:00","History navigation
",134128,1803,52746,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4143","dbeaver/dbeaver","9b49b668271798a3a32577c4b7c4a2e6459ca653",1,"2014-04-06 13:49:12+00:00","Struct values edit fix. Entity editor toolbar
simplified
",134367,1805,52711,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4144","dbeaver/dbeaver","d1dd9edb32340f093b9339ee352176ca2624e99b",2,"2014-04-07 20:45:56+00:00","Navigator columns sort
",134796,1806,52717,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4145","dbeaver/dbeaver","7188293e27b126f99cfc8494ba181e46a619e04c",10,"2014-04-08 19:38:55+00:00","Resultset row/controller model refactoring
",134730,1806,52690,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4146","dbeaver/dbeaver","661ad5a1a4d1cddba094cf0745b0110258b5a246",3,"2014-04-08 19:48:39+00:00","Bindings utilities
",134735,1806,52690,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4147","dbeaver/dbeaver","e8db226e7f29e20e998f9955c6b8d4965195f033",7,"2014-04-10 19:40:34+00:00","DBD complex types refactoring
",134816,1807,52713,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4148","dbeaver/dbeaver","a06c1d84377103ce60d12a46d7c78af6beea1f91",5,"2014-04-12 08:52:34+00:00","Arrays support in record mode
",134865,1809,52731,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4149","dbeaver/dbeaver","16061560d5278def146dc96e4aeba557a5ae0e7c",8,"2014-04-12 17:28:44+00:00","Grid model/controller refactoring. Value preview
fix
",134870,1809,52727,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4150","dbeaver/dbeaver","f293645094e009c9b126ea7e8b7aff5ecd481ca9",1,"2014-04-12 19:51:12+00:00","Binding model refactoring
",134866,1809,52731,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4151","dbeaver/dbeaver","0c94d3bde19aa1f1061fb57a2526d96730cb280c",6,"2014-04-12 20:37:31+00:00","DBC meta model refactoring (move DBS refs to
bindings)
",134863,1809,52741,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4152","dbeaver/dbeaver","26643c7644dfc945cb5e00aaa5d2238d1bb766cb",10,"2014-04-13 07:50:44+00:00","DBC meta model refactoring (move DBS refs to
bindings)
",134789,1809,52727,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4153","dbeaver/dbeaver","dc46d18e2153a287659ef868e82fb42da62ebe8a",7,"2014-04-13 08:07:46+00:00","Object list control fix (default columns for empty
lists)
",134803,1809,52727,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4154","dbeaver/dbeaver","8bdd2eecfa2a43445951d9df9d56e8129461432f",3,"2014-04-13 09:49:23+00:00","Use plain bindings where possible
",134801,1809,52730,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4155","dbeaver/dbeaver","5ec68759fcccfdf59d758f090656b918f271f227",8,"2014-04-13 14:03:54+00:00","Collection types support (Oracle)
",134906,1809,52748,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4156","dbeaver/dbeaver","83918f6f70edccadc62d2dc574ec6f1ddb3a3eea",2,"2014-04-14 06:51:15+00:00","Collection types support
",134887,1807,52684,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4157","dbeaver/dbeaver","5cc89072a95bfb021367bf5937841d1f7fc475b0",15,"2014-04-14 19:51:24+00:00","Attribute binding model
",134947,1809,52777,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4158","dbeaver/dbeaver","5eda768db4ba5f64a3ac1114219598fc3a326bde",6,"2014-04-14 19:59:16+00:00","Attribute binding model
",134973,1809,52776,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4159","dbeaver/dbeaver","9dacf352798dcaca967ad2e09cc10fef02b99a95",10,"2014-04-14 20:39:27+00:00","Collections bindings
",135134,1810,52816,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4160","dbeaver/dbeaver","90f2dcd93fc670ddb3251e613ee4980dad1797a6",13,"2014-04-14 21:40:01+00:00","Collections bindings
",135076,1809,52791,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4161","dbeaver/dbeaver","ead709fd71458139e54dae43e681558ab73b56d7",26,"2014-04-18 17:54:09+00:00","Minor fixes
",135172,1809,52789,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4162","dbeaver/dbeaver","1337b0783597c33560bec773325df5663c290498",94,"2014-04-20 08:43:02+00:00","Filters toolbar. Annotations
",135375,1809,52790,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4163","dbeaver/dbeaver","b3a815b8939a1f4576a44a30f501b282e3321bd0",3,"2014-06-08 12:42:53+00:00","Cassandra data model
",135659,1809,52817,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4164","dbeaver/dbeaver","4924870e66bb909079e058c0f8b1af5ef08ec444",9,"2014-06-12 12:25:09+00:00","Value handlers model
",135745,1811,52864,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4165","dbeaver/dbeaver","73e73f1366f1983894af76e5652c8e3e84137e4c",4,"2014-06-12 14:25:13+00:00","Value handlers/editors model
",135826,1816,52972,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4166","dbeaver/dbeaver","388a22d08142a5d47103684173b3360f3722c8bc",3,"2014-06-12 16:44:36+00:00","Number value editor
",135851,1819,53035,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4167","dbeaver/dbeaver","1c733fa73e039e862192350b37000f55d1c64860",3,"2014-06-13 09:17:24+00:00","Value editors model. Object opening fix. Do not
instantiate persisted editor inputs if they are
not connected to db.
",135910,1822,53100,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4168","dbeaver/dbeaver","7df53159d502bbc4656e9bb154041ee2ec24f52a",4,"2014-06-13 15:48:50+00:00","Cassandra data update + value handlers. Execution
batch refactoring.
",135934,1823,53123,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4169","dbeaver/dbeaver","0ce33a8226be7ebe843f25d4fdeedca9034a9297",7,"2014-06-20 09:55:16+00:00","Mongo data read. Cas fixes
",136112,1825,53181,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4170","dbeaver/dbeaver","eddfa447ff54396aa0f5c1bae2d26cc8402883b5",1,"2014-06-21 21:21:14+00:00","Dynamic maps metainfo extraction. Mongo value
handlers fix Mongo db version read.
",136245,1826,53207,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4171","dbeaver/dbeaver","c61e01d3553ec0bcb52482e6a7c7ec8637e721ea",2,"2014-06-28 17:50:54+00:00","RSV metadata change checking improved
",136427,1826,53219,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4172","dbeaver/dbeaver","47dff69bde530525cbf28137e11fb17bf1404885",9,"2014-06-29 20:35:16+00:00","Mongo unique index & attr
",136458,1826,53219,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4173","dbeaver/dbeaver","ad37455fb924830ba4bb1a2168121848880a5697",1,"2014-08-28 10:59:24+00:00","Generic meta model refactoring. FireBird
procedures source code
",137049,1833,53425,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4174","dbeaver/dbeaver","e461cf8fdf1317361ca454c2c5fe671ed160f439",1,"2014-09-16 12:43:38+00:00","Disposed data source problem fix
",137232,1836,53467,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4175","dbeaver/dbeaver","1d3150160d4f046ccbc5e804e8fbea08ea9da4cc",1,"2014-09-20 06:39:46+00:00","SQK query model refactoring + semantic analysis
",137261,1836,53467,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4176","dbeaver/dbeaver","80a48f7ebf18553187741f9b5c4a287e8d85b00b",1,"2014-11-05 12:02:54+00:00","SQL query parse fix
",137449,1838,53518,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4177","dbeaver/dbeaver","a53a5858d14275b1957d042c61eb17544202037d",4,"2014-11-26 08:03:38+00:00","DBC resultset refactoring. Data searcher API.
",137971,1844,53671,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4178","dbeaver/dbeaver","55e57c7ccba9bee60df51412e9e2f9122c2e2fb0",1,"2014-11-27 18:16:33+00:00","Data searcher implementation
",138180,1847,53718,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4179","dbeaver/dbeaver","5063c17c32e9cf6fdb1855d0493efb4df79986fd",3,"2014-11-29 16:05:23+00:00","Full-text search results UI
",138312,1847,53688,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4180","dbeaver/dbeaver","6505dad56c0039c2dde59a90f692a5394c49a579",7,"2015-01-17 21:28:40+00:00","Data manipulation fix (use IS NULL)
",138632,1853,53752,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4181","dbeaver/dbeaver","b71562e65b324b56f9dc01b3488bec779fe6b43f",2,"2015-02-05 05:38:18+00:00","No explicit NULLs in inserts
",138737,1853,53784,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4182","dbeaver/dbeaver","4785432c8557b6da56f65f67fecb1403a8b907f9",2,"2015-02-05 22:20:55+00:00","Multi query results + results UI
",138754,1853,53761,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4183","dbeaver/dbeaver","1e7a4ca24c02022911ef41eb3a07f3bc109e7bc9",3,"2015-02-26 17:45:04+00:00","RSV refactoring, model annotations
",138949,1856,54040,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4184","dbeaver/dbeaver","d817d9e9d8cef0f577523b0a2d7c82b77ff91409",7,"2015-02-26 17:53:51+00:00","singleSource detect fix
",138959,1856,54040,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4185","dbeaver/dbeaver","fdcd7a2fa4ef0386546ae4b4fbf82caccc69fbba",3,"2015-02-26 19:15:27+00:00","RSV metadata refactoring (get rid of dummy
classes)
",138941,1855,54008,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4186","dbeaver/dbeaver","796a607e9446ed69ae708613d33f73185e2a0d54",1,"2015-03-01 21:28:46+00:00","RSV/spreadsheet refactoring
",138831,1855,54002,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4187","dbeaver/dbeaver","fed26a5ff0be509945712e00b6f7ba468ba76e53",1,"2015-03-05 19:04:06+00:00","Flat folders UI
",138820,1854,54080,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4188","dbeaver/dbeaver","50b1107a62a097e6a296f446db0b7b1fbece4ce7",9,"2015-03-11 14:39:01+00:00","Annotations
",139069,1857,54173,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4189","dbeaver/dbeaver","fdaea42000e6939f283e0997283cb159e8eb4ff6",2,"2015-03-11 17:56:04+00:00","RSV cleanup
",139072,1857,54176,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4190","dbeaver/dbeaver","ccdc33a07c8ae4267768b7939d3b79051893dcf2",1,"2015-03-16 22:24:07+00:00","DBC uses zero-based attribute indexes
",139106,1861,54281,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4191","dbeaver/dbeaver","37c95b472c60ea46e7845f05735141c8ea349fd1",5,"2015-03-17 20:25:30+00:00","Data type model refactoring
",139140,1863,54362,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4192","dbeaver/dbeaver","39125e374eb4d3d059711d6c118ab02c77215175",2,"2015-03-19 17:28:57+00:00","RSV refactoring
",139150,1863,54366,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4193","dbeaver/dbeaver","42f6d0c9a28b57b6eadd09c01f5466d051608215",6,"2015-03-19 17:48:30+00:00","RSV refactoring
",139166,1863,54366,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4194","dbeaver/dbeaver","33da72611e8471d6a212c7f76a41d6c953313381",1,"2015-03-20 09:46:02+00:00","RSV/spreadsheet refactoring
",139213,1864,54388,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4195","dbeaver/dbeaver","6d4a5aa6b00b9da3a70c8be1dc7c01aeb4d8c006",26,"2015-03-20 13:32:17+00:00","RSV/spreadsheet refactoring
",139246,1863,54373,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4196","dbeaver/dbeaver","c1564c152da70b1d9ea7ddfd37f7a004b367923b",6,"2015-03-20 14:16:28+00:00","RSV context menu refactoring
",139252,1863,54375,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4197","dbeaver/dbeaver","31c63e764cf9f73f08eee3d0a542383e12a7c898",26,"2015-03-21 10:07:06+00:00","RSV refactoring. Presentations support
",139470,1865,54449,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4198","dbeaver/dbeaver","bec6c14e4788175e217ced5245035245782d8960",7,"2015-03-22 10:32:16+00:00","Presentations support
",139610,1866,54480,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4199","dbeaver/dbeaver","cf914ff7138697dfc53300ae57998373d38bb5e0",5,"2015-03-22 16:31:18+00:00","Plain-text presentation
",139713,1867,54502,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4200","dbeaver/dbeaver","95093af2eae3b1fd5850cd91c57260c01cec9921",13,"2015-03-22 20:43:13+00:00","RSV refactoring
",139711,1867,54500,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4201","dbeaver/dbeaver","d2b683c34839cae5b26cb22164eda438a2282243",1,"2015-03-23 09:21:45+00:00","Editable presentations. Plain text ui
",139784,1868,54558,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4202","dbeaver/dbeaver","6d1bd99e18cfd5a48df00dc06aba32e993cf284a",4,"2015-03-30 20:42:34+00:00","Document model
",136182,1823,53416,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4203","dbeaver/dbeaver","090f8235a3879166cf987e7e3f487d30719b10f5",8,"2015-04-01 17:36:23+00:00","Transform object names when analyse query single
source
",136212,1823,53422,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4204","dbeaver/dbeaver","e89c7c5c54811e62d5bcb7d0f29b5d162f8d382f",1,"2015-04-01 21:39:06+00:00","Document model
",136238,1823,53415,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4205","dbeaver/dbeaver","98f5c32d65e07811ab54fad965138ab71046bfd9",1,"2015-04-02 15:44:46+00:00","JSON presentation renderer
",136276,1823,53435,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4206","dbeaver/dbeaver","f920446a4bd03b6dcb74e2e0f3c22dd67d452bc7",2,"2015-04-03 07:29:23+00:00","Abstract presentation. Document presentation
current row
",136282,1824,53456,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4207","dbeaver/dbeaver","3825d4be0913ec90ba0094f2d25586f31a12c319",1,"2015-04-03 08:06:01+00:00","Document scrolling
",136294,1824,53463,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4208","dbeaver/dbeaver","72f92b8ca15f9b9e98ff0bdcffc489705dfe2806",1,"2015-04-04 12:42:29+00:00","Spread sheet refresh fix - fixed cell editor for
new rows
",136292,1824,53462,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4209","dbeaver/dbeaver","891d99f97ae136c919c75f7bf1ec4170ce3761bd",3,"2015-04-07 14:43:08+00:00","Datasource jobs refactoring
",136367,1827,53552,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4210","dbeaver/dbeaver","01f47db0b5cf16e79bd69c9245a8cf3a45ff0d8a",1,"2015-04-07 15:42:46+00:00","Data source jobs refactoring + value controllers
refactoring
",136382,1827,53570,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4211","dbeaver/dbeaver","a4faa983344cb053ab8e0376accea401c17e08e1",1,"2015-04-09 08:39:54+00:00","SQL editor refactoring. DataSource
connect/disconnect validation added
",136394,1826,53566,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4212","dbeaver/dbeaver","a78d3fead13641aaea0490426241bc380e08f948",2,"2015-04-10 08:17:37+00:00","Query transformers refactoring. MySQL fetchAll
fixed (use streamed resultset)
",136527,1827,53586,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4213","dbeaver/dbeaver","af50f15b656071da2ca816ccc7a087ceb58bcb03",1,"2015-04-11 17:03:24+00:00","Document model refactoring
",136559,1828,53608,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4214","dbeaver/dbeaver","3922a328447b9e2b3013f40e9c9afe27c8e96d9f",2,"2015-04-12 10:38:47+00:00","Document model refactoring
",136584,1829,53625,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4215","dbeaver/dbeaver","6aa6d4d0b04b5ce21ef277f9e99b08896d226f46",2,"2015-04-14 06:25:28+00:00","LIMIT fix
",136589,1829,53625,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4216","dbeaver/dbeaver","fe5c985bab8d6c95901220c3ec8d9f9b65c9ea21",1,"2015-04-17 08:22:36+00:00","SQL transformations fix. RSV presentations
contributions refactoring (toolbar)
",136682,1829,53638,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4217","dbeaver/dbeaver","a86ee36ac4bddc5e69080efe17319b67d373762d",1,"2015-04-21 19:30:17+00:00","Resource nodes fix
",136746,1829,53600,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4218","dbeaver/dbeaver","8d588217ab2a3674bfd5a3a3eee70b7653a9b783",10,"2015-05-13 16:39:21+00:00","Datetime editor redesign. Nanoseconds support
",136758,1832,52242,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4219","dbeaver/dbeaver","96877500453cda712905166c0c27014d8ba02f84",10,"2015-05-25 16:39:36+00:00","Use execution contexts wherever it is possible
",136799,1831,52245,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4220","dbeaver/dbeaver","edadae072b4b9210af1302e513919781a5b69b27",6,"2015-06-05 17:07:00+00:00","JDBC API validation
",137005,1830,52167,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4221","dbeaver/dbeaver","e40d641840ad81fff3d70b4c27e44168ced951f1",7,"2015-06-06 21:49:39+00:00","Preference store model
",137161,1832,52086,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4222","dbeaver/dbeaver","09a7a1a5e2b3fe8e8d99903fe5f05e15401c5f74",3,"2015-06-21 08:28:46+00:00","Error editor input fixed.
",137189,1832,52087,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4223","dbeaver/dbeaver","423c467c4fbf7879b604ed6bde60f12d446c0f77",2,"2015-06-23 13:15:59+00:00","Document model (draft)
",137313,1837,52181,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4224","dbeaver/dbeaver","f2c94ba7fc3fad2dc0cdd753ab526f0299894b6c",16,"2015-06-23 20:33:39+00:00","Images model refactoring
",137340,1841,52254,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4225","dbeaver/dbeaver","a9f690885cd5cf82e64fc23452dc0099012d3b48",2,"2015-06-24 09:07:55+00:00","Preference store usage redesign (get rid of jface)
",137466,1842,52253,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4226","dbeaver/dbeaver","8917513d5371f0c9f61313d8e13dfe12888dc764",20,"2015-06-24 13:06:45+00:00","Value handlers refactring
",137564,1843,52322,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4227","dbeaver/dbeaver","192c4d926abe8c52c03e59e67c4f5736dc4275bb",1,"2015-06-24 13:13:11+00:00","Value handlers refactoring
",137597,1844,52344,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4228","dbeaver/dbeaver","00754e8429cccc40a1e153a736b9f2da05c03d1c",14,"2015-06-24 15:21:48+00:00","Value managers extracted from value handlers
",137648,1856,52609,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4229","dbeaver/dbeaver","33a430b2caad5524a191daacce3810a9bf6dad0d",3,"2015-06-24 18:47:20+00:00","Value handlers code cleanup. UI callbacks model.
Utils refactoring.
",137695,1857,52637,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4230","dbeaver/dbeaver","779aa4e86fa034ed51dacecfd015d61936775154",2,"2015-06-25 08:21:19+00:00","Misc model refactorings
",137645,1856,52611,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4231","dbeaver/dbeaver","5f1159de74af0ce3c7c5b9af9305c86556f0cee9",1,"2015-06-25 10:19:24+00:00","JDBC context init fixed (set auto-commit and txn
level)
",137635,1856,52608,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4232","dbeaver/dbeaver","49d1f794c97eefd4b42c097ce60692d7eac291ec",5,"2015-06-25 12:30:29+00:00","Connection configuration refactoring
",137705,1857,52634,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4233","dbeaver/dbeaver","3c1d5faabfd04d028855c36e1e087b3d34998e86",2,"2015-06-25 15:13:35+00:00","Execution context refactoring
",137894,1859,52682,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4234","dbeaver/dbeaver","8deb5502e2cd071cbcb7534b5a8d69813a3f2ec9",2,"2015-06-27 16:12:15+00:00","Hierarchical ds providers
",138062,1861,52726,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4235","dbeaver/dbeaver","2ca8ee792e9debd67c8ed918e24209b0e935c2ef",1,"2015-06-27 17:30:34+00:00","Misc fixes
",138074,1861,52721,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4236","dbeaver/dbeaver","03ee428bbc69de3d027f8eb68040615a76b66cc8",1,"2015-06-28 15:30:52+00:00","Stored procedure execution
",138830,1863,52760,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4237","dbeaver/dbeaver","dd3e953ef4da3fe70fd274e11bfd767d858d8994",1,"2015-06-30 14:20:00+00:00","Runtime refactoring
",138882,1863,52768,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4238","dbeaver/dbeaver","41decd8a02fc6c17f5eeb874dd3dd949fae47e60",1,"2015-06-30 20:02:37+00:00","SQL model refactoring
",138943,1865,52805,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4239","dbeaver/dbeaver","5879593f44c6a11dd22c0c56f1e2ee4f45ece200",4,"2015-07-01 13:03:30+00:00","Model refactoring
",139022,1868,52849,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4240","dbeaver/dbeaver","dbb198d90886eccda11038aeccccafa38a3640c8",2,"2015-07-01 13:31:24+00:00","Utils refactoring
",139030,1870,52891,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4241","dbeaver/dbeaver","36a4943063ae5a5d2b114f7852f192bb5a75eb9c",2,"2015-07-02 21:23:35+00:00","Model bundle
",139262,1873,53070,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4242","dbeaver/dbeaver","54ff1635859fc483849cc860e205b7385d1fb092",1,"2015-07-15 17:22:52+00:00","Default value handler detection improved. Object
values binding fixed
",139350,1875,53004,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4243","dbeaver/dbeaver","96442b8069aff071383fe64454a5066706bc2815",1,"2015-07-16 15:44:45+00:00","Value handlers refactoring.
",139373,1876,53032,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4244","dbeaver/dbeaver","f7ee96a6d97d076c1f5b4294b41c2d21a3d89d8c",7,"2015-07-16 20:38:12+00:00","Value handlers refactoring
",139409,1876,53038,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4245","dbeaver/dbeaver","02e562997b2e18583f256672351e2718b8d25152",5,"2015-07-20 16:14:53+00:00","Generic sequences model
",139488,1878,53078,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4246","dbeaver/dbeaver","a0f3457f04ecff3c8c7af7b2fc6dda216dc12988",187,"2015-07-20 16:56:41+00:00","PostgreSQL sequences. DBSObject annotations
",139841,1878,53078,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4247","dbeaver/dbeaver","e4ec31224b35a9b69d8f1c5ae99b0fe7dd8b6ed8",76,"2015-07-20 19:54:39+00:00","Annotations.  Node list control fix
",139992,1880,53121,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4248","dbeaver/dbeaver","6f465146b5e386ed96cbc230414ded1121d73814",6,"2015-07-20 21:27:00+00:00","Parameter type->kind
",140015,1880,53132,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4249","dbeaver/dbeaver","a9a41ae5b60f275167ed87e7d908d1b2ddc487f0",5,"2015-07-20 21:35:19+00:00","Parameters model refactoring
",140036,1880,53132,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4250","dbeaver/dbeaver","a95fd77e170e0d02cf6dc83aad6c70e751d4be35",1,"2015-07-20 21:50:00+00:00","Parameters model refactoring
",140048,1880,53132,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4251","dbeaver/dbeaver","d2ab558a5103dbf3afb3b94ac7f81904793115c2",2,"2015-07-20 22:53:56+00:00","Documents model
",140095,1880,53147,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4252","dbeaver/dbeaver","e97af93b27a3af4ad450074e6a98da5b6762975c",15,"2015-07-21 13:12:42+00:00","Value handler annotations. Content types support
",140144,1880,53163,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4253","dbeaver/dbeaver","55ed1ee8eb255e144ea4ca8d0fd83c09a7dbec92",2,"2015-07-21 14:43:32+00:00","Documents model
",140253,1881,53192,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4254","dbeaver/dbeaver","675666de84204da919c84a93fe605024caa073a7",7,"2015-07-21 18:25:32+00:00","XML documents
",140336,1882,53216,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4255","dbeaver/dbeaver","5f842c470cf075b5381bc14b7ab50af09937a20e",1,"2015-07-21 22:01:16+00:00","LOB editors fixed. Oracle XML tables edit support.
",140383,1882,53195,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4256","dbeaver/dbeaver","bd4a78caa12f1646b95a1a8794d183ababbf58df",1,"2015-07-26 17:40:17+00:00","Use job instead of progress service.
",140531,1884,53266,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4257","dbeaver/dbeaver","fe228b0c5c3a66dc885cfad0f62b84721d130668",1,"2015-07-26 19:31:37+00:00","Remove direct class references in object filters
(replace with class names)
",140498,1883,53249,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4258","dbeaver/dbeaver","ea5f94b917de6564ccc98d19f7b4d4dc72079dff",146,"2015-07-28 09:32:05+00:00","Objects cache refactoring
",140545,1883,53249,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4259","dbeaver/dbeaver","688002b4b4a9f62dfcd6707a869db5a279aef4a8",3,"2015-08-18 17:46:10+00:00","Statement warnings & server output
",140721,1884,53312,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4260","dbeaver/dbeaver","06d5ef6f544c3fde26746d40f42b7ef18a5c3e7e",5,"2015-08-18 21:12:01+00:00","SQL query error positioning
",140780,1884,53319,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4261","dbeaver/dbeaver","0e053f93ea4f5225a00bdbe7f1022aad47eb690f",1,"2015-09-01 13:25:14+00:00","DS info/dialect always not null. Property reading
errors handling fix.
",139910,1873,52931,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4262","dbeaver/dbeaver","78da31799ee558c932b757b0cbb2a351c2cb46ba",1,"2015-09-02 15:41:09+00:00","Maven model. Exceptions handle UI fix - messages
with error class
",140052,1874,52952,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4263","dbeaver/dbeaver","6422df6a08ce316f4103c6f2ea3281aeb1d478ed",1,"2015-09-12 15:49:01+00:00","Driver files download wizard
",140631,1880,53108,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4264","dbeaver/dbeaver","d8db2561b5ead13d5d696733278455cfca4c9af4",4,"2015-09-29 21:11:49+00:00","Maven dependencies model
",141075,1885,53247,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4265","dbeaver/dbeaver","78e6cf3d9fe2830de051be2e56fd1e1a47c771bd",1,"2015-09-29 21:31:41+00:00","Registry refactoring
",141076,1885,53215,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4266","dbeaver/dbeaver","35ce6678d664738e462ab88d651163efbddc7525",2,"2015-09-29 21:57:28+00:00","Registry refactoring
",141038,1884,53194,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4267","dbeaver/dbeaver","17db21af82989d5de51e3598b08022367ab6ff5e",1,"2015-09-30 09:37:09+00:00","Download dialog refactoring
",141081,1885,53210,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4268","dbeaver/dbeaver","3767192affb5b78eff1159d43725fdf4a8094b65",2,"2015-10-01 09:00:29+00:00","Embedded database create
",141158,1885,53214,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4269","dbeaver/dbeaver","8adca1e71718427a39292133ea79a318b3f7bdee",8,"2015-10-06 21:40:46+00:00","Driver libraries model
",140741,1889,53263,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4270","dbeaver/dbeaver","4173132176621a88def22d5c6c34d6a87da60a95",3,"2015-10-08 10:47:12+00:00","Maven model & ui
",140910,1890,53346,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4271","dbeaver/dbeaver","066e22543e191d71047743642510ea1af065692f",1,"2015-10-08 11:54:48+00:00","Maven model & ui
",140945,1890,53344,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4272","dbeaver/dbeaver","509fbcd64521971f499bc4c3d46a1d63e451cc88",5,"2015-10-09 12:45:55+00:00","HBase model
",141148,1890,53350,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4273","dbeaver/dbeaver","2a3ccd84e0d209322516777c9d9252aee0703525",15,"2015-10-11 07:40:58+00:00","Dependencies model
",141301,1892,53402,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4274","dbeaver/dbeaver","17316ce5ba98aa8010449e09ecab95ae3b8e309f",1,"2015-10-11 18:29:55+00:00","Dependencies model
",141967,1898,53646,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4275","dbeaver/dbeaver","a1785602995959c2b1ff0c7327f40a7ee3026bb7",3,"2015-10-12 20:32:26+00:00","Maven model refactoring
",141815,1897,53637,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4276","dbeaver/dbeaver","0c089ad5ddc10b3dfc73aac2029415055127a420",5,"2015-10-14 12:29:07+00:00","Dependencies resolution
",141966,1899,53677,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4277","dbeaver/dbeaver","9cf5bf2bb71d32128f6822c7106ca8296f518c2e",1,"2015-10-15 07:53:51+00:00","Dependency resolutin (repositories)
",142077,1900,53749,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4278","dbeaver/dbeaver","5a64c29e16532f7a7b6ac188100962b3cd177774",10,"2015-10-15 17:24:28+00:00","Get rid of driver context
",141898,1898,53822,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4279","dbeaver/dbeaver","dacd822ebceed8ba1886db73a0b459db366cc497",37,"2015-10-17 11:09:23+00:00","Maven classifiers support. Driver editor fix.
Maria driver dependencies fix
",142034,1899,53710,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4280","dbeaver/dbeaver","dd82944aa12930fd21dee80061f05c3a6352f3fc",4,"2015-10-17 19:22:36+00:00","Version change
",142192,1899,53693,"jurgen","serge-rider@users.noreply.github.com","jurgen","serge-rider@users.noreply.github.com"
"4281","dbeaver/dbeaver","3c2e9facbd3a1832188512a22c1d75e839538d40",1,"2015-10-23 16:47:02+03:00","Data export in JSON
",142308,1901,53670,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4282","dbeaver/dbeaver","fd05707f272533f62385b28ba4e7d73a973d5ee7",2,"2015-10-27 13:33:18+03:00","Maven dependencies resolve fix
",142365,1901,53680,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4283","dbeaver/dbeaver","fdbb5ff2b1cc3ea78e909b5ff07038486dd8cd7a",51,"2015-11-02 09:55:44+03:00","Struct model refactoring
",141276,1887,53394,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4284","dbeaver/dbeaver","8c446ad6e98d2891b8f158114d8f8ddeab812b23",1,"2015-11-04 17:33:03+03:00","#37 IOT tables icon
",141328,1889,53439,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4285","dbeaver/dbeaver","1cf7c107c52bdc9a2356520013c7e8fc36fac582",45,"2015-11-04 19:18:50+03:00","JDBC factory. Lets to override driver behavior.
",141401,1892,53513,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4286","dbeaver/dbeaver","92ac8137aec47542b09d4cdd7c087fbaba5775db",1,"2015-11-04 19:38:30+03:00","JDBC factory - postgre
",141429,1894,53553,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4287","dbeaver/dbeaver","7318eccb0ef12b908293e4a9d2ab1c98b5b07bd8",3,"2015-11-04 20:00:56+03:00","JDBC factory - postgre. Obtain schema name from
postgre RS metadata.
",141491,1896,53593,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4288","dbeaver/dbeaver","e3e740dd56b963b55cf4f4d7756f4b6ed5836c7c",2,"2015-11-07 12:58:24+03:00","JDBC correct type ID resolve. Object values editor
",141665,1897,53625,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4289","dbeaver/dbeaver","3ddf73b6c521db0ab0c7e87cc7c54a2db379f3fd",1,"2015-11-13 12:49:04+03:00","#48 Query parameters logging
",141932,1898,53684,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4290","dbeaver/dbeaver","e65fba05269cfccc0c798950f47e0f83b461bdb2",2,"2015-11-14 11:30:06-05:00","DB2: Display indexes as tree node for MQTs Issue
GitHub #52
",141996,1898,53689,"Denis Forveille","titou10.titou10@gmail.com","Denis Forveille","titou10.titou10@gmail.com"
"4291","dbeaver/dbeaver","839cc9a5f11ca146feb2074047af2b09e3ec156f",36,"2015-11-14 20:34:20+03:00","Execution model refactoring
",142077,1900,53736,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4292","dbeaver/dbeaver","71e8f95297a260f0a24f52c8a2ea0f8268ea0c9c",7,"2015-11-14 20:52:05+03:00","Execution model refactoring
",142079,1900,53740,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4293","dbeaver/dbeaver","6b6dc8e942c86c52a2e9e11a14df3fa805f8554f",1,"2015-11-15 00:03:38+03:00","Format query parameters (for QM). JDBC table
queries formatted.
",142131,1900,53739,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4294","dbeaver/dbeaver","9af823c987f7ad5c17e308750febe47920988bc9",1,"2015-11-17 22:17:39+03:00","#61 Oracle create/rop unique key syntax fix
",142150,1900,53742,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4295","dbeaver/dbeaver","91102c72ef31cd8c42de0035f8945bc19e665057",1,"2015-11-18 00:53:33+03:00","#67 Triggers model
",142201,1901,53762,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4296","dbeaver/dbeaver","e942dfe342e8f289970b53156b515fd118c1d30d",27,"2015-11-18 23:51:22+03:00","#67 Generic triggers model (FB)
",142344,1903,53804,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4297","dbeaver/dbeaver","34b2cb00d21043a977e63aa1b13f938364954201",4,"2015-11-19 01:12:04+03:00","#67 PostgreSQL triggers
",142441,1904,53825,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4298","dbeaver/dbeaver","6380c95737c3fd26443455b496bcf332949a47de",2,"2015-11-19 01:17:20+03:00","#67 PostgreSQL triggers. Database triggers
visibility
",142446,1904,53825,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4299","dbeaver/dbeaver","3f8e2826979c54822e56d3c30604206e529f3c58",1,"2015-11-19 21:14:36+03:00","#46 Filter panel rendering
",142617,1905,53883,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4300","dbeaver/dbeaver","b4089e80e2b9d7dbabf3155326912c289c0a286e",1,"2015-11-19 23:32:27+03:00","#46 Filter panel popup
",142687,1905,53880,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4301","dbeaver/dbeaver","9ceccb81bf54ed7ada3fd6385db534fabd4228eb",1,"2015-11-20 13:56:22+03:00","#46 Open link in a new window
",142735,1905,53872,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4302","dbeaver/dbeaver","b43935ba9b30f7dc2657721323319ff5d41925eb",3,"2015-11-21 22:33:10+03:00","#67 SQL Server/Sybase triggers support
",142825,1906,53885,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4303","dbeaver/dbeaver","9ff6c013bc9f0ab7829733cea5eae56a06a9e11a",3,"2015-11-21 22:42:47+03:00","#67 Informix triggers support
",142877,1906,53885,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4304","dbeaver/dbeaver","827516ab3350ec85dbc5a4291e2a200a9c749f48",61,"2015-11-22 18:05:32+03:00","Annotations
",142927,1906,53884,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4305","dbeaver/dbeaver","7fc039d908373b68f55c85f372a2bbae0f81e192",65,"2015-11-22 18:06:45+03:00","Annotations
",142928,1906,53884,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4306","dbeaver/dbeaver","f8aa11764117154d39fb31b044e2f50ab957016e",40,"2015-11-22 20:48:10+03:00","Annotations
",143001,1906,53884,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4307","dbeaver/dbeaver","6dce29b047abc74bfb80c2f43ce7ec108719b7a0",1,"2015-11-23 18:12:31+03:00","#30 Attr binding
",143017,1906,53901,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4308","dbeaver/dbeaver","5009cc698697898c639c60fb641e917e9e39a817",1,"2015-11-24 01:22:55+03:00","Oracle XML type handle fix. Fetch ROWID after new
row insert.
",143150,1906,53878,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4309","dbeaver/dbeaver","dc5b0b13e908a168ba36d20d297f74acf4fd6d1d",1,"2015-11-24 19:04:08+03:00","Property testers code cleanup. SQL editor tester
fix
",143211,1906,53856,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4310","dbeaver/dbeaver","8e683f167f93229639c91f9c18c1645971e4cf7a",1,"2015-11-27 02:03:59+03:00","#77 Filter manager
",143242,1908,53799,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4311","dbeaver/dbeaver","739401b3deb7df7d1a86fae9ca70459973dd86a0",4,"2015-11-27 02:10:04+03:00","#77 Filter manager - delete history
",143246,1908,53800,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4312","dbeaver/dbeaver","9bd5fa1b48bb58ad07cf203883664750e179ef50",1,"2015-11-27 13:27:35+03:00","#77 History deletion
",143286,1908,53801,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4313","dbeaver/dbeaver","7d907dc39d81534a00e4fe4871811ec03eb86d89",6,"2015-11-28 23:37:23+03:00","#77 History drop-down ui fix. Simple filter
manager implementation.
",143317,1908,53814,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4314","dbeaver/dbeaver","e931766cd45a75ec07c91baa5a708ed390ccfed2",2,"2015-11-29 13:41:55+03:00","#79 Refresh nested SQL editor
",143295,1907,53789,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4315","dbeaver/dbeaver","9253ef314ef0239c3ced0ef5d9ab911487904bad",1,"2015-12-01 00:22:05+03:00","#76 Reference editor refactoring
",143404,1909,53839,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4316","dbeaver/dbeaver","9a229c8b423eae8a61c87486651c7290f5ba8cb9",2,"2015-12-01 23:11:34+03:00","SQL editor model refactoring
",143439,1909,53832,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4317","dbeaver/dbeaver","9e7e115bdb5305c1541d8e8cc2c9f07aa207e000",4,"2015-12-05 01:16:06+03:00","#92 Events support
",143714,1910,53853,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4318","dbeaver/dbeaver","bfa8e1902dd7dca3f2a1b7c79d14f71c61b85070",1,"2015-12-05 02:37:57+03:00","MySQL index info
",143738,1910,53855,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4319","dbeaver/dbeaver","38d02d53c5f604ec51a22391de9701b8a53dbd67",1,"2015-12-05 11:51:49+03:00","Misc UI fixes
",143755,1910,53856,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4320","dbeaver/dbeaver","cf76c3e9488cec6322116f37e7603dd403a2ed36",1,"2015-12-11 00:52:32+03:00","Grid header tooltips fix
",143845,1912,53897,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4321","dbeaver/dbeaver","b55294f6bbefc7f15c89294e0f6b6e305f256fca",9,"2015-12-11 15:15:38+03:00","SQL editors model refactoring
",143805,1910,53856,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4322","dbeaver/dbeaver","99c42fd4fa68731aa754097ba1db815643eb9abc",1,"2015-12-11 23:08:54+03:00","Oracle column description
",143799,1909,53858,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4323","dbeaver/dbeaver","ef91550c79b86c7bc77f9305159c820913e99de8",2,"2015-12-12 23:23:00+03:00","Open script from recent
",144091,1912,53932,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4324","dbeaver/dbeaver","4dd7102f619ebed48b382952543432daf962962a",16,"2015-12-14 23:22:32+03:00","Code cleanup. Tools menu.
",144459,1915,53978,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4325","dbeaver/dbeaver","2bfe81d5d2caa7239a7bd64ea4046e08492203f7",3,"2015-12-15 00:31:57+03:00","#70 Script tree - use multiple containers
",144523,1915,53984,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4326","dbeaver/dbeaver","1e1258c210316296f0f77ee6acbcf277a7614e70",3,"2015-12-15 23:10:31+03:00","#70 Project explorer view config action.
BaseDialog refactoring
",144578,1916,54001,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4327","dbeaver/dbeaver","d1ed098ac29a75da3d000770ff52b39f53238d3d",27,"2015-12-16 21:20:02+03:00","Annotations
",144683,1918,54064,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4328","dbeaver/dbeaver","e59e8b2e0746300f233bd2bbed3ddc2355f160f8",1,"2015-12-16 23:10:34+03:00","Annotations
",144677,1918,54064,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4329","dbeaver/dbeaver","56d0eef1f8f908dc62ed43cece98e9ae19b54b17",1,"2015-12-17 00:23:15+03:00","#104 Get rid of temp project
",144636,1919,54085,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4330","dbeaver/dbeaver","e6acd3eb86990a386bcf6cd10e9ebc7b74ae9ccf",3,"2015-12-19 21:46:32+03:00","Virtual model additions
",144691,1920,54106,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4331","dbeaver/dbeaver","9f77cda558378674d48d4836d8c008ce9216ad7e",3,"2015-12-19 22:18:52+03:00","Value manager model refactoring. NPE fixes.
",144719,1920,54106,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4332","dbeaver/dbeaver","e77e98bfffefa9fe8955461b9d933043a301f0cb",1,"2015-12-21 14:55:45+03:00","Enum type support
",144720,1921,54124,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4333","dbeaver/dbeaver","f1e8af565b846abe347fc5d75a60d4aa97bf3d43",1,"2015-12-23 16:21:35+03:00","#12 PostgreSQL model
",144952,1924,54192,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4334","dbeaver/dbeaver","19d2d816a99fef6561bc30ea5c3726a0ce5b5c1d",25,"2015-12-24 00:13:45+03:00","#12 PostgreSQL model
",145554,1933,54423,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4335","dbeaver/dbeaver","05b9e57ad88befcd0a88b9b8f53b1cd109a4e1fb",9,"2015-12-24 10:21:55+03:00","#12 PostgreSQL model
",147131,1947,54736,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4336","dbeaver/dbeaver","b9816c6260f58c99e1c504e11a7b3ce290241a0e",1,"2015-12-26 17:44:16+03:00","#12 PostgreSQL class cache
",147069,1948,54756,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4337","dbeaver/dbeaver","acfb06fc33ce462feeafd4f6304df082a695caf3",4,"2015-12-26 18:00:56+03:00","#12 RDB model refactoring
",147059,1948,54757,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4338","dbeaver/dbeaver","5d14108c447bdd1e35980ba8eeb01cb448998517",5,"2015-12-26 18:28:11+03:00","#12 Postgres model
",147172,1949,54779,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4339","dbeaver/dbeaver","a3ea323de2ce06b26e1c671dd1a6fc0790b4a936",2,"2015-12-27 01:45:08+03:00","#12 Postgres types model
",147298,1950,54817,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4340","dbeaver/dbeaver","e9446be3f0574f7e179725260b82184e7676fb60",2,"2015-12-27 18:43:31+03:00","#12 Postgres types model (schema types)
",147338,1950,54802,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4341","dbeaver/dbeaver","8ee4f35be4bc7bbd262680efc4c06c40cd20fa0e",175,"2015-12-28 16:00:00+03:00","#12 Data types model refactoring. Schema types.
",147373,1950,54794,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4342","dbeaver/dbeaver","f318eb2f038af87a428072f2b426ad0c782536c6",1,"2015-12-28 16:06:03+03:00","#12 Stateful database
",147390,1950,54794,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4343","dbeaver/dbeaver","288362d49d6b4ed84c8185984b1840845f97d368",4,"2015-12-28 21:37:15+03:00","#12 Postgre types structure load.
",147580,1952,54835,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4344","dbeaver/dbeaver","72e3b5c950fb813749b05bebfb93719ec5e66153",4,"2015-12-28 22:29:46+03:00","#12 Attributes and types
",147519,1952,54867,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4345","dbeaver/dbeaver","5f31e96c200a972113347ab44a19b5705c59b703",44,"2015-12-29 01:52:41+03:00","#12 PostgreSQL attributes modifiers. Cache model
refactoring
",147530,1952,54865,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4346","dbeaver/dbeaver","f38fc3d026c4b7d009fc63fbe2c10101947095fd",2,"2015-12-29 13:41:24+03:00","#12 Data types attributes
",147588,1952,54865,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4347","dbeaver/dbeaver","3e30d884b0f47a2abda17e4c3d3436dfaeafa23d",1,"2015-12-29 16:34:27+03:00","#12 Postgre constraints model
",147518,1952,54860,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4348","dbeaver/dbeaver","0222f423f99c550f4fbeff999bd7a31e1f89fb6f",1,"2015-12-29 16:55:41+03:00","#12 Postgre constraints model
",147494,1953,54912,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4349","dbeaver/dbeaver","6784db1b55b2ec4d390a070068559a6fe8cedaec",4,"2015-12-29 21:10:54+03:00","#12 PostgreSQL foreign keys
",147593,1953,54880,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4350","dbeaver/dbeaver","4af7fd3989ec78d0f576b574102b10ff704ad062",7,"2015-12-29 23:27:25+03:00","#12 PostgreSQL FK model
",147636,1953,54881,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4351","dbeaver/dbeaver","3822cbfeccf5c18c21c757bc189f8cfc48a383a9",9,"2015-12-30 00:38:32+03:00","Composite cache refactoring (read multiple child
objects from single row)
",147692,1953,54880,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4352","dbeaver/dbeaver","cb9060a1240f289934575dfa0ac517ae0de42336",10,"2015-12-30 01:44:06+03:00","#12 PostgreSQL indexes
",147681,1953,54876,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4353","dbeaver/dbeaver","bb6e793d51c7b589a7f496a754a1890c3d7c5a86",10,"2015-12-30 02:29:28+03:00","#12 PostgreSQL indexes and constraints caching
",147714,1953,54923,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4354","dbeaver/dbeaver","dfe5f7276a228db5f7dc977feb18aee3d0d04d51",3,"2016-01-14 14:54:53+03:00","#150 Resources copy
",147884,1954,54910,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4355","dbeaver/dbeaver","1ff200bda0945106e6d5aaef216b171eb88f85de",1,"2016-01-15 15:37:19+03:00","#12 Postgre tables and view meta read fixed
",147806,1954,54876,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4356","dbeaver/dbeaver","b675395241144a0a97a396ad5956fb4eff72a98d",4,"2016-01-16 17:15:16+03:00","Virtual model improve (attributes)
",147926,1954,54879,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4357","dbeaver/dbeaver","2c7d3a78a4a683007be867e0afbd834c5adfc5cf",8,"2016-01-16 17:33:37+03:00","Value renderer model
",147935,1955,54913,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4358","dbeaver/dbeaver","6406f0ceaf63c8276ecfa13589c9fc7c8862551a",7,"2016-01-16 18:47:59+03:00","Virtual model refactoring
",147953,1956,54946,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4359","dbeaver/dbeaver","ce66d79678d0d119fc09417f6dc4d6ff62292d8f",2,"2016-01-16 23:25:45+03:00","Columns order/visibility refactoring + fixes.
Filters dialog redesign (tree) + fixes.
",148096,1957,54975,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4360","dbeaver/dbeaver","2afb3d28a6943dc92c36dd78d6044e45ad49ac64",2,"2016-01-17 20:47:35+03:00","Attribute trasnformers model
",148208,1961,55419,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4361","dbeaver/dbeaver","af65f7021cfcf5c561cda6db9c9b175ef19ac1ad",10,"2016-01-17 20:57:41+03:00","Attribute bindings model refactoring
",148188,1961,55038,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4362","dbeaver/dbeaver","6d95a2efa312e133b34cadea628f46d8471b6b17",1,"2016-01-19 23:46:53+03:00","Attribute transformers UI
",148460,1967,55159,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4363","dbeaver/dbeaver","cecbefac0b01905efe4dd9a14bf932816121cdc8",2,"2016-01-22 14:58:45+03:00","#168 Colors model
",148590,1969,55235,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4364","dbeaver/dbeaver","b6762464d3c84731d53d7125de0e78aeb6e040ee",1,"2016-01-23 19:53:54+03:00","#168 RSV color actions
",148644,1969,55236,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4365","dbeaver/dbeaver","41c6fb08f28d758a77e1766262aef6a2d37dad93",3,"2016-01-23 21:48:43+03:00","#168 RSV color evaluate
",148739,1969,55233,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4366","dbeaver/dbeaver","31544fefee86194aacb121d0d812e59625d3b260",3,"2016-01-24 16:23:41+03:00","#168 Colors settins loading
",148866,1969,55235,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4367","dbeaver/dbeaver","062567051a3e011cf5e586e781e2702dd0eedf3d",6,"2016-01-26 17:38:02+03:00","#12 Postgre languages
",148887,1970,55260,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4368","dbeaver/dbeaver","b31819ff41c064053befb53d89a4a231beafaebc",6,"2016-01-26 17:50:08+03:00","#12 Postgre access methods
",148998,1971,55277,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4369","dbeaver/dbeaver","809d7e3a6f60235f9fa4a90f7c3d1155a98a7931",1,"2016-01-27 01:09:16+03:00","#12 PostgreSQL users, collations
",149164,1972,55299,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4370","dbeaver/dbeaver","64c9ad16f05dc4b25882c4539879101aa4ca6261",9,"2016-01-27 01:20:45+03:00","#12 PostgreSQL collations & extensions
",149242,1973,55319,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4371","dbeaver/dbeaver","9b9d5401c1ccffaf148eb8b0e701492e9615db96",6,"2016-01-27 16:16:20+03:00","#12 PostgreSQL tablespaces
",149321,1974,55339,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4372","dbeaver/dbeaver","bd82e863cebf468be329babec8b23a0504d467d1",5,"2016-01-27 16:28:14+03:00","#12 PostgreSQL encodings
",149361,1974,55339,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4373","dbeaver/dbeaver","b028b623e11fb696dd4e0748e6a1920057d6fc87",1,"2016-01-27 17:27:37+03:00","#12 PostgreSQL procedures
",149333,1974,55338,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4374","dbeaver/dbeaver","8c44d54c26d96a0df486cf0ca85efd66d3800246",2,"2016-01-27 18:41:45+03:00","#12 PostgreSQL procedures
",149376,1974,55337,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4375","dbeaver/dbeaver","3e5ee1ca32c3d87f75e8f7760983405a46664752",2,"2016-01-28 12:14:12+03:00","Overloaded objects model
",149397,1975,55360,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4376","dbeaver/dbeaver","466f316c3b2cb1c5ac6343f7cde60708dcafe067",5,"2016-01-28 16:06:18+03:00","#12 PostgreSQL procedures and parameters
",149542,1975,55362,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4377","dbeaver/dbeaver","693a53a0479f5eb0d804485c743081c9749c9b34",3,"2016-01-28 12:12:11-05:00","DB2: fixed nickname management (data viewing was
broken, attributes showed were wrong etc..)
",149638,1975,55368,"Denis Forveille","titou10.titou10@gmail.com","Denis Forveille","titou10.titou10@gmail.com"
"4378","dbeaver/dbeaver","086fe417b473e039ddf3ebd8c197c203a935645f",13,"2016-01-29 17:23:04+03:00","#177 Column mappings validation
",149746,1977,55427,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4379","dbeaver/dbeaver","03f7bcd020decbb452b8aeedac51d531b560c2a3",3,"2016-02-02 15:40:33-05:00","DB2: Improve Temporal Table management
",149855,1980,55523,"Denis Forveille","titou10.titou10@gmail.com","Denis Forveille","titou10.titou10@gmail.com"
"4380","dbeaver/dbeaver","1593f06ac5ddb5da799686d2ff3e0f2ad0fdec95",4,"2016-02-09 22:29:06+03:00","#12 PostgreSQL attributes model
",149882,1983,55587,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4381","dbeaver/dbeaver","caa95def8fd4825df5942a91fff571f3d0dde99e",9,"2016-02-09 23:07:44+03:00","#12 PostgreSQL object managers
",150320,1992,55873,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4382","dbeaver/dbeaver","d0addd46a976239166367f27624e513805b8d84a",3,"2016-02-12 01:08:00+03:00","#12 PostgreSQL attributes scale/precision
",150602,1993,55908,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4383","dbeaver/dbeaver","66cefd765c1094c5b5934ba36eec4a9ae53ae296",1,"2016-02-12 02:26:24+03:00","#12 PostgreSQL DDL fix. Estimated row count. PK
index skip.
",150693,1994,55929,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4384","dbeaver/dbeaver","c64290165e8c992f32f6e3053915df4ead34f250",5,"2016-02-13 00:14:23+03:00","#12 PostgreSQL structure assistant. Skip lazy
properties in completion proposal
",150892,1996,55971,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4385","dbeaver/dbeaver","24bb6031db8345da38905d4eea94ffc41449f339",2,"2016-02-13 11:06:56+03:00","Inheritance model
",150949,1997,55997,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4386","dbeaver/dbeaver","81c7c780aef8c64ff740bc11afbd0f50a8035e8b",98,"2016-02-13 13:32:25+03:00","#12 PostgreSQL inheritance. Annotations
",151034,1997,56001,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4387","dbeaver/dbeaver","20860809908300d89c61bbbf268a6d6b055a4b39",7,"2016-02-14 15:15:24+03:00","#12 PostgreSQL enums. Data types model
refactoring.
",151464,2003,56114,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4388","dbeaver/dbeaver","f1a190e64aa832ffd32ed4289624bd48fff53a2a",1,"2016-02-15 15:35:06+03:00","#12 PostgreSQL inheritance props
",151417,2000,56005,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4389","dbeaver/dbeaver","c8e137700e163ff7a6dbf1aaec17cd45e5ee6503",2,"2016-02-15 16:34:03+03:00","Export binary columns (quote strings)
",151427,2000,56005,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4390","dbeaver/dbeaver","5efca4dc46b058f8c40150a6c6167225afaf6f8f",2,"2016-02-15 18:01:52+03:00","#12 Array and composite types support
",151414,2000,56005,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4391","dbeaver/dbeaver","1e03d2a465801eed086b358c1895dede52bcc5c3",2,"2016-02-16 01:41:46+03:00","#12 PostgreSQL structs read. LOB copy fix.
",151493,2002,56036,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4392","dbeaver/dbeaver","6356d653a4ce7ba8a5f68a90784b441b3a3bd859",39,"2016-02-16 11:50:48+03:00","Struct model refactoring
",151517,2003,56055,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4393","dbeaver/dbeaver","657db09fdb15777e71a1b61ffe2ea729177dc18e",1,"2016-02-16 12:38:34+03:00","#12 PostgreSQL composite type insert
",151587,2004,56074,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4394","dbeaver/dbeaver","3a07a8d1e405bc40585a37e71b8bc5e29be17bc8",3,"2016-02-16 14:04:45+03:00","Named values model. DB2 plan properties fix.
",151601,2005,56094,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4395","dbeaver/dbeaver","1d703a45a3153293eedec1bd66023283c3a70e2f",1,"2016-02-16 07:40:07-05:00","DB2: Fixed ""DB2PlanOperatorPredicate"" text display
",151620,2005,56100,"Denis Forveille","titou10.titou10@gmail.com","Denis Forveille","titou10.titou10@gmail.com"
"4396","dbeaver/dbeaver","8c1096b82e7ba2dd259f66d83b22978855a3c693",1,"2016-02-16 20:30:17+03:00","Named parameters prefix redefine
",151645,2005,56102,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4397","dbeaver/dbeaver","6751d8324390eedecbf2f7856c2ce6815fbaad23",1,"2016-02-17 23:15:17+03:00","Remote driver files download
",151728,2006,56125,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4398","dbeaver/dbeaver","16e6e6079092bb8e89a717730a66acd0467e3392",1,"2016-02-19 15:06:42+03:00","#12 PostgreSQL indexes options
",151811,2006,56125,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4399","dbeaver/dbeaver","30acf42111fb41901d06c62685739b938b187352",1,"2016-02-19 16:59:39+03:00","#12 PostgreSQL info hierarchy fix
",151803,2006,56125,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4400","dbeaver/dbeaver","6d0ee551e0738cdb3316f810b3f7a7656c556ce8",1,"2016-02-27 14:27:23+03:00","#233 Navigate history commands+shortcut
",152129,2007,56178,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4401","dbeaver/dbeaver","607d627056e91d0d6d35d9eefc40e714e4ac6b57",56,"2016-02-27 15:24:07+03:00","Annotations
",152142,2007,56178,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4402","dbeaver/dbeaver","edbc88e10d0f060208194f3e21b9c9f32e3f7801",1,"2016-02-28 22:51:51+03:00","StyledText context menu fix
",152027,2006,56130,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4403","dbeaver/dbeaver","6bda4bd3114ae37435e0c596e37bd7dd32ae4392",1,"2016-03-04 00:22:26+03:00","#34 PG multi-database support
",151755,2006,56130,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4404","dbeaver/dbeaver","55f3c8d4e47181b64a2ec9189904516f9d93ae08",12,"2016-03-05 01:40:10+03:00","PostgreSQL foreign tables model. Information model
refactoring
",151926,2013,56284,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4405","dbeaver/dbeaver","129a944ff69e0c3ca20a4f9e2f700bf712855da1",1,"2016-03-05 10:46:57+03:00","#264 External tables icon
",151935,2013,56284,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4406","dbeaver/dbeaver","a6528b2846bff7ded6476782d8092e07d88e6bfe",4,"2016-03-16 01:52:23+03:00","#284 Date/time manager refactoring. Cassandra
date/time parameter binding fix.
",152379,2024,56561,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4407","dbeaver/dbeaver","20a7e0f3ac06c977ec5a19e7332b51a50c878901",7,"2016-03-17 22:31:03+03:00","#285 PostgreSQL data types cache fix
",152490,2025,56580,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4408","dbeaver/dbeaver","b1cbbb1756aad2290573f9cfb880af66aed79026",5,"2016-03-19 17:31:07+03:00","#267 Tokenized formatter configuration
",152670,2025,56579,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4409","dbeaver/dbeaver","c70caff996a16a66f687c1dbf6025afdf9bb911f",3,"2016-03-19 19:23:55+03:00","#267 External formatter
",152796,2025,56560,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4410","dbeaver/dbeaver","b704d77003d3da7287becf192e459180bfe3c2fd",4,"2016-03-19 20:18:51+03:00","#267 External formatter (+preferences)
",152842,2025,56561,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4411","dbeaver/dbeaver","de44992ebe7b3f6e26fbbf02023113e26229c6ca",6,"2016-03-20 18:34:17+03:00","MYSQL grants parser fix
",152983,2027,56500,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4412","dbeaver/dbeaver","be685933cfc51e7b50301bfc996a8f2fbd870f6c",3,"2016-03-22 01:20:50+03:00","Delimiter redefiner model
",153339,2032,56701,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4413","dbeaver/dbeaver","5c1a7f02150fed471b928df8ba70ae537b156a46",1,"2016-03-25 23:09:18+03:00","Filter available driver (Maven) versions
",153517,2033,56711,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4414","dbeaver/dbeaver","5f9cd377c931b10dbe3c5e1b8457bab120f78734",1,"2016-03-30 20:38:43+03:00","#319 Single source check
",153687,2035,56798,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4415","dbeaver/dbeaver","8b0fe3ea7dd0a5d106aff98a0319cd86f61edc09",6,"2016-04-04 16:48:48+03:00","Multi-object export model
",154638,2039,57035,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4416","dbeaver/dbeaver","ecd853e591f579ca246edcb9b5c57e09b09fefef",3,"2016-04-08 13:46:24+03:00","#350 Remember dialog output folder in preferences.
Dialog utils refactoring.
",154853,2040,57080,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4417","dbeaver/dbeaver","31444098d91c2d6621ef653d7e7f932eca5c66f8",4,"2016-04-12 12:44:31+03:00","PostgreSQL OIDs overflow fix
",154900,2040,57162,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4418","dbeaver/dbeaver","92a1039377ad7f57c91b65998b46ed083cea457b",2,"2016-04-12 13:17:56+03:00","Oracle schema reading check
",154899,2040,57163,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4419","dbeaver/dbeaver","05c537544c82bf8443f4e0a0fe318b9261dc74c6",23,"2016-04-13 01:00:38+03:00","#94 Attribute transformers model
",154959,2041,57189,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4420","dbeaver/dbeaver","16a625266dcd985634467cf3e2b939bf3f2c6f30",8,"2016-04-16 01:15:14+03:00","Attribute transformers model
",155047,2042,57211,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4421","dbeaver/dbeaver","0fe0433da690f70dbb9f49525418acc2b5dfaf86",1,"2016-04-16 14:22:32+03:00","Custom attribute transformers model
",155075,2042,57211,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4422","dbeaver/dbeaver","306096523af6754c366b541aba38b35cd8723a6b",2,"2016-04-16 15:11:22+03:00","Custom attribute transformers model
",155101,2042,57215,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4423","dbeaver/dbeaver","8f3738e5e9e735469d916db5f701c40c62cddd1f",7,"2016-04-16 17:19:44+03:00","Virtual model persistence
",155133,2042,57215,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4424","dbeaver/dbeaver","7ae7095245ef98f7ae88dd103fe56e2cfcee1526",1,"2016-04-16 21:00:19+03:00","Attribute presentation override by transformers
",155314,2044,57215,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4425","dbeaver/dbeaver","eb34ac99688bd38afb4da8a14df218efd3dc3300",2,"2016-04-17 21:55:26+03:00","#365 Mongo new document create
",155355,2044,57216,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4426","dbeaver/dbeaver","6e7b45f45ec1f880612a4f983c3507e61500ef91",1,"2016-04-23 14:10:46+03:00","#371 UPSERT statement support
",155362,2044,57259,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4427","dbeaver/dbeaver","23b5ede9133dcd63681810a7447c6676b2f1cf55",2,"2016-04-24 11:00:29+08:00","phoenix hbase client support
",155488,2050,57339,"zhen wang","zinking3@gmail.com","zhen wang","zinking3@gmail.com"
"4428","dbeaver/dbeaver","c736afe63aa2b5868a1afd660aaaeb9d7a799c6c",6,"2016-04-27 17:58:25+03:00","Data type supported operators model. Data search
fix
",155566,2050,57372,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4429","dbeaver/dbeaver","cce3525cf498478382b51f1eaa96102b9d42e372",18,"2016-04-27 21:59:47+03:00","Attribute referrers model refactoring
",155607,2050,57373,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4430","dbeaver/dbeaver","5f4fef84ff5fdffdd6aefde2ef4d094aaed0143c",1,"2016-04-28 21:49:46+03:00","#414 Trigger source view
",155705,2050,57371,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4431","dbeaver/dbeaver","fcd931ca684f04c5aba456b80d127d0041c31f60",12,"2016-04-29 14:06:57+03:00","#415 Support FKs with missing ref table
",155759,2050,57372,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4432","dbeaver/dbeaver","8feb3690605b4b4d5bd685976a2613e1429b0210",6,"2016-04-29 14:24:45+03:00","#381 Encode string values in a dialect-specific
ways
",155768,2050,57378,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4433","dbeaver/dbeaver","26152652431ac8dcb8d73761951eb71dcf831797",2,"2016-05-03 19:12:36+03:00","#358 Read triggers from DBA view
",155792,2050,57379,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4434","dbeaver/dbeaver","ac070fe856da8c1c3002436957500c9c5d445b8f",6,"2016-05-11 16:02:36+03:00","#408 Customizable timestamp format (Cassandra)
",156171,2055,57551,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4435","dbeaver/dbeaver","20c01a1a3cca92d8a3c4e86c966a35545c6cf254",3,"2016-05-13 15:49:18+03:00","#214 PG: completion processor fix (respect active
schema). Structure assistant model refactoring.
",156322,2058,57631,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4436","dbeaver/dbeaver","f393d210e0263de500d0f7e137e532df5da81162",1,"2016-05-13 18:05:24+03:00","SQL comment generator fix
",156437,2059,57656,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4437","dbeaver/dbeaver","3d7aaec739c00c65fca6a9f8c551656c326b2019",2,"2016-05-13 21:31:34+03:00","#355 Set oracle.net.tns_admin path
",156471,2059,57658,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4438","dbeaver/dbeaver","5651149e3afb3c2591167468ef7cbc4185b8bfde",1,"2016-05-13 21:49:18+03:00","#355 TNS URL redesign (use TNS descriptor)
",156488,2059,57659,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4439","dbeaver/dbeaver","af962397176af44683a92d553b1de2a3961f7985",2,"2016-05-15 20:14:50+03:00","Editor input and DS association refactoring
",156525,2056,57571,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4440","dbeaver/dbeaver","197869bde88d7cd038ebf3b7251f351582402035",9,"2016-05-17 01:32:45+03:00","Tabbed folders refactoring
",156685,2058,57616,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4441","dbeaver/dbeaver","733af129c9f72844faac9286b60c8c31bf6ef1d0",56,"2016-05-17 01:48:26+03:00","Resource nodes model refactoring
",156746,2058,57616,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4442","dbeaver/dbeaver","9ca4b4253651ea53cb1f251100c8cf5ee58b0821",1,"2016-05-18 13:12:18+03:00","#456 Skip expression indexes from identifier
constraints
",156744,2058,57636,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4443","dbeaver/dbeaver","24c8d50429169b36f5d9d46e514bf9e0ebe5f2db",17,"2016-05-19 12:39:31+03:00","Images model refactoring
",156798,2058,57636,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4444","dbeaver/dbeaver","79a91c746eaf351927ccafb64241ede0139c5109",1,"2016-05-22 18:52:24+03:00","Application model refactoring
",157032,2061,57678,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4445","dbeaver/dbeaver","2d7abaa0e671e546020c0fe30f8ed3c7c2670f1a",4,"2016-05-25 12:57:45+03:00","#479 PG: CHECK constraints DDL/description
",157077,2061,57679,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4446","dbeaver/dbeaver","e0dc69f7274790fcbd44cc0045f22cbe99fc4b7b",2,"2016-05-25 14:37:57+03:00","#468 Completion proposal fix (long FQ names)
",157108,2061,57682,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4447","dbeaver/dbeaver","53a1b108d67aa13c62b4a81781d1400b902b2d33",3,"2016-05-25 17:13:23+03:00","#403 JDBC arrays model. Array value binding
",157174,2062,57702,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4448","dbeaver/dbeaver","f98f96369980a1cf9478906d01e19dc3ab422172",1,"2016-05-25 23:09:46+03:00","#487 PG: functions comments read
",157183,2062,57702,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4449","dbeaver/dbeaver","99fb7b6dbcdbc8fa612873ab0c0b3dcc88c17385",1,"2016-05-25 23:46:59+03:00","#487 PG: table create/refresh fix
",157222,2062,57663,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4450","dbeaver/dbeaver","1c0ec7b34e5ce0c1b9dacfe502d096d221918309",1,"2016-05-26 21:07:26+03:00","#432 RSV filter auto-complete column names
",157291,2062,57548,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4451","dbeaver/dbeaver","3648a46c7dc5524d5490986f4a0b60f4f78a9716",1,"2016-05-27 22:33:59+03:00","#403 Complex values editor
",157365,2062,57540,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4452","dbeaver/dbeaver","6c02311ad013649f40f4f992ee6b8244628f57d7",4,"2016-05-27 23:56:28+03:00","#403 Complex values editor menu & controls
",157398,2062,57540,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4453","dbeaver/dbeaver","8882b822f1145f8862b443fdf89e17a66feeb1c2",15,"2016-05-28 18:10:04+03:00","Complex editor contributor model refactoring
",157418,2062,57540,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4454","dbeaver/dbeaver","f1450cccfec693b65960ff44bedfe410ab842d46",10,"2016-05-28 18:36:11+03:00","Value editor actions model refactoring
",157456,2062,57548,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4455","dbeaver/dbeaver","0dbfc4312dfe256f474f360b70f6d84de2d22d53",1,"2016-05-28 19:27:50+03:00","#403 Array type resolve. Nullable arrays.
",157507,2062,57539,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4456","dbeaver/dbeaver","75716833c084e5801d9f5a61fbba96e7fcc49a34",4,"2016-05-28 20:53:20+03:00","Array string representation fix. PG array strings.
",157557,2062,57540,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4457","dbeaver/dbeaver","3f21e7961f53be4c63cb00b5249f8155ab655297",7,"2016-06-07 16:19:13+03:00","#336 Relational operator IN model
",157870,2065,57624,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4458","dbeaver/dbeaver","5a94150f19230586451e068daaa2b16c199b6b2a",6,"2016-06-07 18:18:58+03:00","#336 Relational operator IN handle
",157901,2065,57635,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4459","dbeaver/dbeaver","1a2ffc47ecc73da753a29e668aeed2065f3c1406",3,"2016-06-07 18:41:29+03:00","#336 Multivalue filter dialog
",157932,2065,57635,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4460","dbeaver/dbeaver","a46289d52f889c33b18aad7a9f00cf1284694511",2,"2016-06-07 21:36:46+03:00","Entity attribute model refactoring
",157960,2066,57662,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4461","dbeaver/dbeaver","01ae9077ad46017005e6f57aa7e6457a2ed2f6e9",1,"2016-06-08 15:48:49+03:00","#512 Trigger model refactoring
",158068,2067,57658,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4462","dbeaver/dbeaver","6686bcad7cde280c4ae8c1f44653fa1bfacc54d0",1,"2016-06-08 23:18:04+03:00","#519 Filter object handler fix. Filter eval
redesign
",158304,2068,57684,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4463","dbeaver/dbeaver","477ba344370697edc6d971c3a05d609acf18c584",1,"2016-06-09 16:23:43+03:00","#336 Filters context menu
",158408,2068,57699,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4464","dbeaver/dbeaver","0b3408810b02be6344ecc4585f2a275f0004ad6d",2,"2016-06-19 00:08:54+03:00","RSV code cleanup (metadata changes always)
",158439,2068,57599,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4465","dbeaver/dbeaver","1292a44cf37f5337f91b0f5c49909d11e62962bd",64,"2016-06-20 01:04:45+03:00","Features model
",158549,2069,57622,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4466","dbeaver/dbeaver","dc14a49928470fe6794f7977c4929165f653c4eb",4,"2016-06-20 02:22:51+03:00","Features model
",158616,2072,57679,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4467","dbeaver/dbeaver","0f8f93e9fbd438be569e08a03c76de56af22febd",1,"2016-06-20 12:42:31+03:00","Server output reading fix (read once for script)
",158620,2072,57680,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4468","dbeaver/dbeaver","91b5c877db87d705544460f7ebbc4708d1688d69",5,"2016-06-20 15:18:31+03:00","Features model
",158719,2071,57677,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4469","dbeaver/dbeaver","7c26f34d333aff842b762e3f81ab5414b7e48c15",1,"2016-06-20 15:38:50+03:00","#539 Multiple key events handle fix
",158737,2071,57681,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4470","dbeaver/dbeaver","617bc5d2812508fbd5a71f7bd3578b9efd1aa9b1",4,"2016-06-20 17:03:52+03:00","Command features
",158748,2071,57681,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4471","dbeaver/dbeaver","e197604c8f1754c6ec1e30732422583b63d3d5e7",1,"2016-06-20 18:35:14+03:00","Code cleanup
",158758,2070,57664,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4472","dbeaver/dbeaver","6a41d13aa7d9a91c5d9ce42e9e94b9da2fe51f34",3,"2016-06-20 18:49:59+03:00","Core commands refactoring
",158763,2070,57660,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4473","dbeaver/dbeaver","02d7f728479aeb11db7b230cc4042b924b3b8350",1,"2016-06-20 21:06:52+03:00","Oracle: BFILE support
",158955,2072,57702,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4474","dbeaver/dbeaver","fba52ff8a1aea95f3265bc15b23ad48d81ef53c9",3,"2016-06-22 20:33:16+03:00","#548 Locked connections model
",158997,2072,57702,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4475","dbeaver/dbeaver","348a53bbd958faad063ad663ea03c5c1b0958b0d",2,"2016-07-17 12:33:31+03:00","#548 Locked connection support
",159596,2079,57845,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4476","dbeaver/dbeaver","42391d4265fb239e988004ce8679da760a1ffb88",1,"2016-07-18 17:17:34+03:00","DB2 DECFLOAT support (NaN, Inifinity)
",159713,2080,57870,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4477","dbeaver/dbeaver","802888a01692ed0b70161782c6911b48d71daeed",1,"2016-08-18 10:59:35+03:00","Model refactoring (unique object)
",160230,2083,57919,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4478","dbeaver/dbeaver","d80bef4d8d40690986a682e15ff7ae457775c80b",8,"2016-08-18 16:04:26+03:00","RSV panel model
",160265,2084,57955,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4479","dbeaver/dbeaver","cef8247e7184ae7528d227ad97785dfa91b6b5dc",6,"2016-08-18 23:23:24+03:00","Non persistent editors model
",160444,2087,58010,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4480","dbeaver/dbeaver","8342c175b5a8f61d511262aa5f5180b4081c1230",5,"2016-08-19 21:59:59+03:00","rsv COPY ACTION REFACTORING
",160539,2089,58040,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4481","dbeaver/dbeaver","a755cab02c9acbfb87d9764fdddd7b848cb9cbb7",1,"2016-08-20 10:34:28+03:00","RSV refactoring. Show filters context menu
shortcut.
",160584,2089,58043,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4482","dbeaver/dbeaver","a4aac1bf25b806812641439b9721a5ab51d46844",4,"2016-08-23 14:56:13+03:00","Model notification fix
",161188,2098,58219,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4483","dbeaver/dbeaver","efb565b8a8423dacc369ac625e2ce14fd79a558b",5,"2016-08-23 16:00:34+03:00","#188 Aggregate functions management/settings
",161259,2098,58219,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4484","dbeaver/dbeaver","047a79cd71009990ffbce9a714e912738c41b222",1,"2016-09-01 13:12:56+03:00","#692 ValueView panel commands & handlers
",161691,2103,58336,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4485","dbeaver/dbeaver","cf4fd2863fd91c64d8626adaa7ddbecff07badb2",2,"2016-09-02 18:26:22+03:00","DBSInstance refactoring (avoid concurrent
modification error)
",161765,2103,58339,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4486","dbeaver/dbeaver","e601d6cb3192c6f82c92c50916e8e6fdd5695ee3",49,"2016-09-05 20:06:45+03:00","Refresh model refactoring
",161360,2083,58172,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4487","dbeaver/dbeaver","819b81175b98ce1d42522f83dbbbd5a381f16f13",25,"2016-09-06 12:50:05+03:00","Object lookup model refactoring
",161417,2083,58177,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4488","dbeaver/dbeaver","8bc7642b966a35db38773bf3ebb6d1687b240614",8,"2016-09-06 13:13:14+03:00","Object lookup model refactoring
",161445,2085,58218,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4489","dbeaver/dbeaver","fe03d49f44b416a60e90e4dec33505445fb77ccd",2,"2016-09-09 17:20:38+03:00","Filters update fix
",161514,2085,58220,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4490","dbeaver/dbeaver","d839fa90bf0fb4f5e8ce17c850da494b7604c0bf",2,"2016-09-09 18:34:40+03:00","Object editor model refactoring (use monitor).
MySQL table copy.
",161679,2085,58216,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4491","dbeaver/dbeaver","a7e305fe2de96d52a477f2bb79a08d73adb605fc",1,"2016-09-10 14:02:46+03:00","#660 Editor object auto-refresh option
",161805,2085,58207,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4492","dbeaver/dbeaver","9ad76100cad325fec37a60a6c1be5feb5d12f40e",5,"2016-09-10 20:20:57+03:00","Object managers refactoring. Run UI in UITask.
",161960,2087,58240,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4493","dbeaver/dbeaver","46d6664860ff90a574209711bf16ec16a3b6b17b",43,"2016-09-12 15:35:27+03:00","Qualified objects model refactoring
",162091,2088,58264,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4494","dbeaver/dbeaver","a386f88a9c0cf2f64d6912b125805b2447954e9f",2,"2016-09-13 01:17:24+03:00","PG query transformer - LIMIT
",162181,2090,58313,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4495","dbeaver/dbeaver","2715d36c8d8e5980ee3a0bbb9d758c21283f9d49",2,"2016-09-14 12:40:56+03:00","RSV update value performance fix
",162123,2088,58265,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4496","dbeaver/dbeaver","f80c8d03e0911005e1167c1b527cd83bab308971",1,"2016-09-15 18:36:30+03:00","RSV: Paste command fixed (redraw)
",162421,2092,58364,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4497","dbeaver/dbeaver","c84bb2bf10b9e34d2c8f20027a19353852545c40",1,"2016-09-16 01:33:35+03:00","#717 MEtadata panel + some metadata objects
refactoring
",162345,2092,58358,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4498","dbeaver/dbeaver","6e942e8221a221711f4dfad6d9eb4197c99ab1f1",1,"2016-09-16 01:38:43+03:00","Oracle type members model refactoring
",162345,2092,58358,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4499","dbeaver/dbeaver","d8ea55eba0fde14d2c0f9e6697456eb8b45a356c",4,"2016-09-17 13:54:21+03:00","#717 Metadata panel: scroll to selected attribute
",162406,2092,58361,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4500","dbeaver/dbeaver","0c6062edca359cb3db4c7cea858bedb074602315",3,"2016-09-17 15:03:09+03:00","#663 Lookup node in all projects
",162420,2092,58368,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4501","dbeaver/dbeaver","b3ee88b3e13ec1232ea4ae8d809db60d94e4768a",2,"2016-09-20 14:50:12+03:00","#653 SQL editor queries navigation
",162530,2083,58219,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4502","dbeaver/dbeaver","cc584b91db48eb027109ddc3cd857cb0dd40d989",6,"2016-09-20 15:44:28+03:00","Exec keywords model refactoring
",162525,2083,58216,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4503","dbeaver/dbeaver","7be883886ad82ef670ab46ddfc6660b28b360c62",28,"2016-09-20 19:01:52+03:00","Cache model improvement (use single object lookup)
",162592,2083,58235,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4504","dbeaver/dbeaver","0ed6349bf185cab063f4392947b3af843169f16e",2,"2016-09-20 21:20:41+03:00","Content viewer actions
",162615,2083,58235,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4505","dbeaver/dbeaver","3d17b8204be29275041eaf868718cb594298c7d9",34,"2016-09-21 12:38:15+03:00","Stream vales manager model
",163040,2092,58444,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4506","dbeaver/dbeaver","03c544b38148b3dfe532b0bec775465a6d8ad1e0",16,"2016-09-21 15:03:18+03:00","Content editor refactoring (+save fix)
",162921,2090,58366,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4507","dbeaver/dbeaver","bc69f6e64f2fca6ad819dbb547212158ee2f7745",5,"2016-09-21 23:33:08+03:00","XML content editor. ValueViewPanel fixes.
",162927,2092,58391,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4508","dbeaver/dbeaver","9edf59b000359c0720a0f7300bf7acb3d52b71f2",1,"2016-09-23 16:20:42+03:00","#711 PG JSON support
",163105,2096,58502,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4509","dbeaver/dbeaver","90524f99b7a7dbc3645661e8adb929a48a7d6eff",2,"2016-09-24 00:00:42+03:00","SQL semantic processing improved (support joins
for ORDER BY)
",163088,2096,58507,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4510","dbeaver/dbeaver","b62c5752e7b34bca9320cd6a4c41eedb414e5b36",1,"2016-09-24 13:24:00+03:00","#711 JSON icons and support in PG
",163149,2097,58556,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4511","dbeaver/dbeaver","49d5a474d6aa82e66dce7f877a3e07a73286077e",4,"2016-10-05 22:02:20+03:00","Copy table from abstract entity (MySQL)
",163560,2101,58685,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4512","dbeaver/dbeaver","85dcf3a17088194a3408f5c4d2b34d2389b14ac7",5,"2016-10-06 00:29:51+03:00","DB2 refresh refactoring. Cache model improvement
(full cache reset on remove).
",163509,2101,58687,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4513","dbeaver/dbeaver","62c3152a0f73ffc364b33d8586bd1301bf40a006",95,"2016-10-08 17:47:48+02:00","First Working Exasol Release
",167292,2166,59272,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"4514","dbeaver/dbeaver","70c3ceb42eac302af301420b63003f0112adaa8c",10,"2016-10-08 13:10:53-04:00","DB2: Implementing JDBCStructLookupCache for MQT
and nickNames + code quality
",163745,2104,58712,"Denis Forveille","titou10.titou10@gmail.com","Denis Forveille","titou10.titou10@gmail.com"
"4515","dbeaver/dbeaver","880b7d6ea123f53f3cbf7fd38b3b4f59a54359ce",9,"2016-10-08 21:54:26+03:00","Annotations
",163748,2104,58712,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4516","dbeaver/dbeaver","d83b98f2c0365af347ffb5bd78e7bf294f628a6d",2,"2016-10-12 22:12:50+03:00","Date formatting code refactoring/cleanup
",167058,2155,60029,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4517","dbeaver/dbeaver","b3167eed72c0753d470861de3dac51108ebdd62e",2,"2016-10-13 01:33:23+03:00","DateTime native formatting refactored
",167066,2155,60031,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4518","dbeaver/dbeaver","2c9a597101390b5a574ec6a32ea362f66ac6cfba",1,"2016-10-13 11:07:44+03:00","#824 Generic datetime formatting
",167107,2157,60068,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4519","dbeaver/dbeaver","d7e1beb691f6245675dc8dc578cce7a2c35c8816",1,"2016-10-19 00:10:23+03:00","#449 Oracle LOB formatting
",167610,2161,60147,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4520","dbeaver/dbeaver","776dd6d958f603f0da7086caf7516cd2d7f5fcca",22,"2016-10-19 18:17:36+03:00","#547 Generate SQL: handle LOBs the same way as in
SQL export.
",167665,2161,60149,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4521","dbeaver/dbeaver","8d13e3d3b8ebd19bcb38c58c4543c5653aa653e0",8,"2016-10-21 00:05:05+03:00","Refresh new object after create. PostgreSQL schema
create fix. Annotations.
",167680,2161,60146,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4522","dbeaver/dbeaver","c4b7010dcce0b7a34e5cedae1114b5ce32c98b1c",6,"2016-10-21 23:47:40+03:00","#874 Checkbox editor rendering fix (Mac & Linux)
",167733,2161,60146,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4523","dbeaver/dbeaver","48dccd155b8f3b92493cbd2445b5319447a9c77a",2,"2016-10-22 22:49:28+03:00","Columns edit dialog. MySQL column create
redesigned.
",167858,2165,60217,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4524","dbeaver/dbeaver","5fde5df87fed8d9236bbea4ac5f09c688e6e7b2e",2,"2016-10-23 22:15:04+03:00","SCM model
",168491,2183,60568,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4525","dbeaver/dbeaver","6bf8884c53c36be564bd0f641631427cc7f0c003",2,"2016-10-24 17:16:22+03:00","#869 SQL script generation fix (do not add
delimiter to the last statement)
",168499,2183,60569,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4526","dbeaver/dbeaver","6f60cd86670cef232614432017703866dc6e387f",1,"2016-10-24 17:48:22+03:00","SQL utils refactoring
",168522,2183,60570,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4527","dbeaver/dbeaver","cf483a856feebbbbc284329770f7d77cfa091bbc",16,"2016-10-24 23:17:51+03:00","SCM model
",168636,2191,60733,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4528","dbeaver/dbeaver","aeea340b95394d868b161421df6a222118c1540c",1,"2016-10-25 10:01:48+03:00","SCM model
",168641,2192,60752,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4529","dbeaver/dbeaver","58315242787b03889fae8e120283321e6958049b",1,"2016-10-25 12:37:14+03:00","#860 Keep-alive query customization.
",168665,2192,60752,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4530","dbeaver/dbeaver","e8a85a7a3973b69c75f9de33f0c035384766e32b",3,"2016-10-25 23:19:28+03:00","SCM parser
",168878,2199,60856,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4531","dbeaver/dbeaver","333320906c45db55f4f66c61bb8fdf2ef69bd8b4",2,"2016-10-26 00:42:05+03:00","SCM parser
",168889,2200,60879,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4532","dbeaver/dbeaver","cfa5eba83745fd781d36d844f7d0d4678331d1aa",37,"2016-10-26 01:17:52+03:00","SCM parser
",168939,2201,60903,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4533","dbeaver/dbeaver","54fe42c8a9f275d2de5f6c4136bed865ec25f7e1",1,"2016-10-29 23:03:54+03:00","Content panel editors fix
",169144,2203,60945,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4534","dbeaver/dbeaver","a0ca34e0b18118b6772e50aea207dd70afd0966d",1,"2016-10-29 23:44:39+03:00","Content panel editors settings (word wrap)
",169171,2203,60945,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4535","dbeaver/dbeaver","92e09be2c86444ef158f008ba28525f5bab131e1",4,"2016-10-30 21:04:43+03:00","#896 Evaluate SQL expression command
",169141,2203,60873,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4536","dbeaver/dbeaver","b8051fa5b132bd360d60bee0f4ade2887d0c68c2",1,"2016-11-01 23:44:56+03:00","#920 Default resource encoding prefs + override
",169237,2204,60893,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4537","dbeaver/dbeaver","159c9c08a5edba1f7abb21d5170e4bb153045730",7,"2016-11-07 22:39:05+03:00","#940 Pseudo-attributes model refactoring
",170171,2210,61061,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4538","dbeaver/dbeaver","d721343516770c864891900b6cf5bb17d4c92fee",1,"2016-11-07 23:23:50+03:00","DB2 native binary representation fix
",170202,2211,61082,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4539","dbeaver/dbeaver","8186601fbf7143903c03ed1c6786fb2ee4c01914",10,"2016-11-12 22:53:16+03:00","SQL tools UI refactoring/improvement
",171147,2230,61487,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4540","dbeaver/dbeaver","03e6d81f58f1fa697344ec034362abe6d0ec1d7f",1,"2016-11-13 02:20:50+03:00","Tools menu refactoring
",171196,2230,61490,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4541","dbeaver/dbeaver","e3c9f96eec662d43f7e2e082632b101342496967",1,"2016-11-13 19:11:59+03:00","#796 PG: export/import tools
",171221,2230,61498,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4542","dbeaver/dbeaver","21f3621e82441808a14b76ca162833a746cf7d22",4,"2016-11-13 22:58:26+03:00","#796 PG: export/import - refactoring
",171396,2235,61575,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4543","dbeaver/dbeaver","d54fe7404fcd2a48e7520d38538a375f4ee2fa9b",4,"2016-11-15 00:27:29+03:00","#918 URL value transformer
",171509,2236,61598,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4544","dbeaver/dbeaver","03605b9d382390d6a518a51e2ec7864296712cb6",2,"2016-11-15 00:43:35+03:00","#918 Hypelinks rendering performance.
",171531,2237,61622,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4545","dbeaver/dbeaver","ba44a3797bcbf1967996bf196357c7f8d389ff97",1,"2016-11-15 00:58:48+03:00","#918 Hyperlinks rendering panel
",171545,2238,61643,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4546","dbeaver/dbeaver","bb186dc7852cea8bac009b93df0989da4f2ea8fb",1,"2016-11-15 01:10:30+03:00","Transformed attribute font (italic)
",171556,2238,61643,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4547","dbeaver/dbeaver","c27f06b84865dfc3ed04756a04fb6486616d3d20",1,"2016-11-24 00:46:44+03:00","XML utils fix
",171909,2243,61811,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4548","dbeaver/dbeaver","949656bd168669df883c87140b845480136819f1",4,"2016-11-26 15:52:48+03:00","#1005 Secure preferences model
",171937,2243,61839,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4549","dbeaver/dbeaver","88e30367753410f1245211d59a3b333319ded4e6",3,"2016-11-28 00:49:11+03:00","H2 view definition, sequences
",172107,2245,61887,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4550","dbeaver/dbeaver","bdbc562d794e6471bea7a2034057c6553afbb632",16,"2016-11-28 16:20:05+03:00","#955 Oracle trigger model refactoring. Table
triggers cache.
",172152,2247,61927,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4551","dbeaver/dbeaver","764d48b98619daa19f1d80df277bb46355d76805",2,"2016-11-30 20:35:34+03:00","#978 PG trigger properties fix
",172278,2248,61995,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4552","dbeaver/dbeaver","17486ff662c941c093480250ab50f82c3cad429e",2,"2016-12-01 00:46:02+03:00","Object refresh redesign (use deep copy instead of
replace)
",172378,2249,61999,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4553","dbeaver/dbeaver","777b52064dacb187acada909a82f791e5cdba222",1,"2016-12-01 19:40:34+03:00","Secure model refactoring
",172330,2249,61998,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4554","dbeaver/dbeaver","39f8a01dfd717e2c4c0d9f5ece2e4245d0ddb428",1,"2016-12-02 01:11:15+03:00","Cache synchronization (giving up)
",172344,2249,61988,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4555","dbeaver/dbeaver","e5c9be8650805bece3eaf6e230b632f2ce613036",14,"2016-12-02 01:32:18+03:00","Application model refactoring
",172342,2249,61988,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4556","dbeaver/dbeaver","a514ae77a5494d43ee251622e31e5e12b1af3a84",2,"2016-12-02 02:30:53+03:00","Application model
",172423,2252,62048,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4557","dbeaver/dbeaver","70d807e2bff920e795cff40d2470f534bdca601a",4,"2016-12-03 14:01:06+03:00","Datasources serialization fix. Secure model
refactoring
",172428,2252,62048,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4558","dbeaver/dbeaver","2d2185f0256c48ca77c3fd860a540eaf87602152",2,"2016-12-07 18:18:01+03:00","RSV jobs refactoring
",172780,2254,62101,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4559","dbeaver/dbeaver","49b1c51ddada6a43909637330a1de3fc180d0e24",1,"2016-12-08 16:33:39+03:00","RSV status toolbar
",172853,2255,62125,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4560","dbeaver/dbeaver","3de99a41bd3a2f621d0cb59861e52b003e35d92f",2,"2016-12-08 16:58:56+03:00","RSV status toolbar
",172895,2255,62127,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4561","dbeaver/dbeaver","302966449cb00757dbfb1c01b9a96102558e0ddc",2,"2016-12-08 23:29:49+03:00","Node editor + folder editor
",172984,2257,62161,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4562","dbeaver/dbeaver","83dc046d54a80e6fd163c0d2148e2705761bd400",1,"2016-12-09 18:06:28+03:00","#996 SQL blocks processing fix. Query extraction
algorithm changed.
",172976,2257,62161,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4563","dbeaver/dbeaver","d12e1326dcb81eae7f9a319e4f55d00e599ea61f",5,"2016-12-10 16:04:51+03:00","#782 Datasource folders model
",173192,2260,62222,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4564","dbeaver/dbeaver","44618d2c05e1cb71f1c0e3ff2bd04759c3039de0",3,"2016-12-15 01:13:27+03:00","Code cleanup (generics)
",173365,2260,62241,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4565","dbeaver/dbeaver","d071a1219409c5a9d006e5258369848e7e480b0c",2,"2016-12-15 23:58:08+03:00","Folder editor navigation
",173573,2262,62304,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4566","dbeaver/dbeaver","41d2b032f2d2456f8732437182d3bac833e91841",1,"2016-12-16 10:31:31+03:00","Folders navigation
",173621,2263,62323,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4567","dbeaver/dbeaver","12fde04c5ddbfc6a81061d669e136733e6a0f30c",1,"2016-12-16 16:15:29+03:00","#1054 Lazy editor init model
",173831,2265,62364,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4568","dbeaver/dbeaver","ecaa0b68924e2cfa53306951c2d7e2d88e4143bf",5,"2016-12-16 22:59:54+03:00","Invalidate handler fix. Connection open retry.
",173893,2267,62396,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4569","dbeaver/dbeaver","4460d9bd858a14dafbadcdb7cf7ed9e52c0a0e53",17,"2016-12-16 23:43:50+03:00","DBUtils refactoring
",173878,2267,62371,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4570","dbeaver/dbeaver","237792825f4644a222ac958353971b069e50f920",1,"2016-12-17 16:47:36+01:00","Enable Edit of Description
",173890,2267,62371,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"4571","dbeaver/dbeaver","4b56abd559183512d93e908f0bedc61d9dc50ea4",4,"2016-12-17 21:17:31+03:00","#923 Enum/set value editors redesign/fix
",173833,2268,62391,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4572","dbeaver/dbeaver","90211f5c297aca10e7b574cb61c09d70c5f6878d",5,"2016-12-18 14:23:20+03:00","#1043 Teradata JSON value handler
",173857,2268,62393,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4573","dbeaver/dbeaver","9ac08e2cf7e29547e77c0482008ce136be82c979",1,"2016-12-21 00:44:51+03:00","Tunnel initialization fix
",173885,2267,62373,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4574","dbeaver/dbeaver","0cecaf1ddbad7e25ce0a07e34c65d0d11bcd5a6d",15,"2016-12-24 13:32:36+03:00","DB utils refactoring
",174009,2269,62417,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4575","dbeaver/dbeaver","eb55c4ec93bcd01ec4a51c88fe5e706c2ccb6d38",3,"2016-12-24 20:32:56+03:00","OLC redesign - use ViewerColumnController
",174031,2269,62427,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4576","dbeaver/dbeaver","063d4b7f7d68aca7ba7444030f4f329d62daa57e",5,"2016-12-25 15:45:47+03:00","VCC columns registry + ID assign
",174175,2270,62449,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4577","dbeaver/dbeaver","bb171b026f6ea1c0ac83858bce7214224a498793",1,"2016-12-25 23:55:32+03:00","Constraints properties
",174220,2270,62447,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4578","dbeaver/dbeaver","699f502c902d2b60afde03f092c969116190ae4d",3,"2016-12-26 11:27:01+03:00","Code cleanup
",174259,2268,62409,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4579","dbeaver/dbeaver","ceb78b45b488c99b6fa5c719d58362929c0202a0",3,"2016-12-26 22:36:36+03:00","DataSourceDescriptor clone/compare. Connection
properties edit fix. Wizard finish improvement
(checks).
",174381,2270,62451,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4580","dbeaver/dbeaver","11a72b430bbb4f9050b3d8f31fd01c892e4be9f4",3,"2016-12-26 22:47:33+03:00","Connection provider properties refactoring
",174381,2270,62451,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4581","dbeaver/dbeaver","02591ba4190dd759cf1dc0055be5035cd3f2492d",3,"2016-12-26 22:58:09+03:00","Connection properties refactoring
",174385,2270,62451,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4582","dbeaver/dbeaver","95fd93270dec057f59dc0044e4a7979fbe99d99f",7,"2017-01-08 20:03:59+03:00","#1127 MySQL zero date/timestamp binding
",174610,2272,62494,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4583","dbeaver/dbeaver","2a92e560903f0c644aec168df4f54872ca918c79",2,"2017-01-08 21:35:49+03:00","#1105 Show column description in header
(rendering)
",174659,2272,62509,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4584","dbeaver/dbeaver","75a4545b3a71715b4b09d12ebf27f6ec9974d932",1,"2017-01-13 22:04:20+03:00","Maven repository scopes refactoring
",174952,2273,62572,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4585","dbeaver/dbeaver","693aa4be533195daa7fb29f82db289da0f1528c6",1,"2017-01-14 01:25:56+03:00","Maven repository refactoring + maven pref page
",175069,2274,62592,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4586","dbeaver/dbeaver","9deabb7f9727365a3c540410bb0a34a9c43fe222",1,"2017-01-14 02:05:51+03:00","Preference pages refactoring
",175155,2276,62634,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4587","dbeaver/dbeaver","7cb83268bf84be099003a701992bf6d17b4c48f8",7,"2017-01-15 01:09:59+03:00","PG: data type operation detection fix
",175401,2276,62471,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4588","dbeaver/dbeaver","3f7e38fc192fabf8ca3d6783d02b76edac46dc1e",10,"2017-01-15 01:33:16+03:00","PG: roles model refactoring. Group role icon
",175402,2276,62471,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4589","dbeaver/dbeaver","ad4e273b0c818203705cf15e0cf3181c672834ce",9,"2017-01-15 02:11:16+03:00","PG: roles model enhancement (members)
",175495,2277,62491,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4590","dbeaver/dbeaver","49b339ee9bb4cc38ffbabf48245cf4779c33e51c",1,"2017-01-15 11:29:41+03:00","PG: permissions tab
",175597,2279,62634,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4591","dbeaver/dbeaver","cf2fa4c47aed2ea168f004daebf6573141be7ced",1,"2017-01-18 15:43:29+03:00","Smart combo refactoring
",175854,2283,62462,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4592","dbeaver/dbeaver","f706ee6ef2bd676972e44019ad4ce46e7b142839",6,"2017-01-20 00:03:49+03:00","Product about box
",175957,2283,62461,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4593","dbeaver/dbeaver","3ceb055919fdf135c957a61ca4c0eb48fcb329d8",3,"2017-01-20 22:37:26+03:00","#1070 Default UDT columns definition fix (omit
scale+precision)
",175996,2283,62464,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4594","dbeaver/dbeaver","3e2541055e84965e463d8ba61bdd0a9c74e680f7",2,"2017-01-31 00:59:44+03:00","Product name/version obtain
",176246,2283,62484,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4595","dbeaver/dbeaver","899a1d84da1f7a342d0b2b163ea9a89e9cd71541",2,"2017-02-03 00:54:57+03:00","#535 SQLite extension stub
",176612,2289,60363,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4596","dbeaver/dbeaver","5af68c70824f50e2f31fe4d095299fedc3985eed",6,"2017-02-03 02:26:38+03:00","Value managers registry fix (datasource name)
",176690,2293,60431,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4597","dbeaver/dbeaver","45010881037a502fe841c2f73315983cecd4f4ee",5,"2017-02-03 02:26:56+03:00","#535 SQLite value manager
",176740,2296,60489,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4598","dbeaver/dbeaver","4fd1c6b54a72c1bbc8e8070b5cca0aa9db0e23ef",4,"2017-02-03 10:42:57+03:00","#535 SQLite: triggers metadata. DDL extraction
",176801,2297,60505,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4599","dbeaver/dbeaver","cd67623bd8045ee4b02d520a62db7c06b3a1dcd3",6,"2017-02-03 13:50:07+03:00","#535 SQLite: table rename
",176865,2299,60525,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4600","dbeaver/dbeaver","b8da277bdad7c14dcfc4a404b182fc0369248287",4,"2017-02-03 15:17:48+03:00","#535 SQLite: BLOB value manager
",176888,2299,60525,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4601","dbeaver/dbeaver","efe8cf1bce4aca91b667b33dc73c692e3a5d3efb",1,"2017-02-03 17:56:50+03:00","Generic meta model refactoring
",176883,2300,60540,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4602","dbeaver/dbeaver","61db45a7e65f0d1cb0f70d0b5543c6b4c281ae14",3,"2017-02-03 21:28:00+03:00","#535 SQLite: temp tables & sequences.
",176907,2300,60540,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4603","dbeaver/dbeaver","e2a67da2edc7b7e0bf75e0dda0dc52b890328058",1,"2017-02-04 16:17:07+03:00","#1230 PG: save column comments for new tables
",176926,2300,60546,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4604","dbeaver/dbeaver","eeccff689381fbe81c95e5ea58fe8a5f903f7295",3,"2017-02-07 00:54:17+03:00","#1160 Source code navigation. Navigator node
opening refactored. Oracle: resolve package
contents.
",177226,2304,60745,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4605","dbeaver/dbeaver","c89fa1d3e77a2a1aa77c35227c50944095d04df1",3,"2017-02-08 23:40:27+03:00","Binary parameters formatting fix. BLOB display
string fix.
",177231,2304,60745,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4606","dbeaver/dbeaver","9a606578c5690db4d557ae973c7f3e7784d996f8",1,"2017-02-11 14:05:26+03:00","SQL query refactoring
",177354,2308,60859,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4607","dbeaver/dbeaver","6b01600b984f36d010c0fc0c9ea9d6180c066beb",3,"2017-02-12 20:25:37+03:00","SQL editor fix (memory leak on multiple results
tabs). Detached results view. Logging fix.
",177538,2310,60905,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4608","dbeaver/dbeaver","1f09df1aac3dae877a9dc51bc98c78bf7520fba8",1,"2017-02-15 22:50:43+03:00","Transactional queries detect
",177850,2317,61116,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4609","dbeaver/dbeaver","0bd1cce1a2e5bca3b4f8f165d4f9dd2700e566ed",1,"2017-02-15 23:45:11+03:00","Txn monitor + QM utils
",177867,2318,61139,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4610","dbeaver/dbeaver","6277fc997efb4a8800f3f983a6a8d57aa49da8d6",1,"2017-02-16 00:29:40+03:00","Transactions monitor state rendering
",177864,2318,61137,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4611","dbeaver/dbeaver","0bdef765ada9fa21047fcd0acaccb05d14880cd5",1,"2017-02-16 10:46:34+03:00","Txn log dialog
",177995,2322,61204,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4612","dbeaver/dbeaver","e048e0e46bd44b17186134ec2812449eaa55339b",1,"2017-02-16 13:42:40+03:00","JDBC connection initialize fix (SQL dialect
instantiation).
",178005,2322,61207,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4613","dbeaver/dbeaver","36338e8d3db483afec25c9ae616067f0421feb36",6,"2017-02-18 18:14:35+03:00","Annotations
",178491,2324,61251,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4614","dbeaver/dbeaver","415e1c117baaca875c622a12d5193920cd5fe1d2",1,"2017-02-20 17:30:58+03:00","#1283 Txn monitor update fix
",178656,2324,61265,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4615","dbeaver/dbeaver","6b8ab21035331dff91dfd4299a61f5c6581e8145",10,"2017-02-25 13:14:12+03:00","SQL dialect model refactoring
",178765,2324,61273,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4616","dbeaver/dbeaver","acba7551ef7b5bac32d6231b843208daef9f281c",2,"2017-02-28 00:03:04+03:00","#1357 CLOB/long varchar value edit in panel (fix
value update)
",178900,2324,61291,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4617","dbeaver/dbeaver","fe6670b6b9059bfd4952a011831beb0f4124b5da",2,"2017-03-04 16:24:00+03:00","#1341 PostgreSQL: serial data types support (for
new objects)
",179069,2324,61299,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4618","dbeaver/dbeaver","804f7ad7257af88bf8c190a95a68a76ee56b4bcd",1,"2017-03-04 17:06:08+03:00","#1332 Oracle sequence manager
",179198,2325,61302,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4619","dbeaver/dbeaver","bebbc88c09587305fecc89367af31de90654f870",4,"2017-03-05 01:03:11+03:00","Bit string value model
",179291,2328,61357,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4620","dbeaver/dbeaver","d37af4d184fc6fb6819f6a5dcab268e402de7a0c",2,"2017-03-05 01:15:39+03:00","#1385 PostgreSQL: bit string type support
",179328,2329,61376,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4621","dbeaver/dbeaver","d15e2afaf82b5847010771bc6b4494c9084edc2f",5,"2017-03-05 18:06:34+01:00","Changed Queries from PreparedStatements to
Statements with literals
",179432,2330,61387,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"4622","dbeaver/dbeaver","a29385f7ac3741d5c46140fe5c8e694a47ff8f4d",1,"2017-03-08 00:42:26+03:00","Maven artifact packaging info
",179685,2335,61478,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4623","dbeaver/dbeaver","76df7f4e9f8dc113400dfa2da51b2fd275f77871",3,"2017-03-08 11:58:23+03:00","#1394 HSQLDB initial stub
",179759,2336,61497,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4624","dbeaver/dbeaver","15724313287aac999dbafdb683180d6b8c713b44",1,"2017-03-08 12:57:14+03:00","#1394 HSQLDB procedures
",179789,2336,61497,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4625","dbeaver/dbeaver","6dbe86679acfd11a265cac8637bde61cf31a722d",35,"2017-03-10 18:03:22+03:00","SQL error assistant refactoring
",179877,2337,61514,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4626","dbeaver/dbeaver","e1787eaae79abbc0aa90f01aadb2c1a681bc0df7",4,"2017-03-10 19:04:56+03:00","#1321 Position to error in nested SQL editor.
Oracle compile errors fix.
",179896,2338,61533,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4627","dbeaver/dbeaver","b69ec67b4b3a8b07f722715e20091772df860e9d",2,"2017-03-12 18:56:38+03:00","Array value handler: make array (fake) from string
",179952,2339,61556,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4628","dbeaver/dbeaver","24d3f6c4709b7070c787cbbde3cc13387abedc5f",1,"2017-03-14 01:59:11+03:00","RSV code cleanup
",179933,2339,61541,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4629","dbeaver/dbeaver","a8bbb5ea7aaf2f99a1ffe6babd103751e655e258",18,"2017-03-14 23:44:20+03:00","JDBC collections mamagement functions
",179933,2339,61544,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4630","dbeaver/dbeaver","b9dff853c418cf6b7f22f43bcd55e63791ce7594",1,"2017-03-15 00:19:24+03:00","String to collection mapping
",179929,2339,61546,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4631","dbeaver/dbeaver","040dcb0e37b94009e95925a461e671b7ebb90622",1,"2017-03-16 00:16:28+03:00","#1424 Driver download/update fix
",179993,2339,61555,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4632","dbeaver/dbeaver","236cc717d1786e2e2982405376fc77c93acda68a",3,"2017-03-16 15:32:11+03:00","#1445 Plaintext presentation config: value
formatting
",180032,2341,61564,"serge-rider","serge.rider@gmail.com","serge-rider","serge.rider@gmail.com"
"4633","dbeaver/dbeaver","f937fa001c5b11e59515da11b7e24e6a1b030c1a",1,"2017-03-18 17:36:07+01:00","Closes #1434 by enabling Edit of Views and Scripts
",180043,2341,61547,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"4634","dbeaver/dbeaver","2ebffd07def57f28f37aa2e876f0fc5bf3fd0245",4,"2017-03-18 18:37:35+01:00","Closes #1435 by enabling display and edit of
functions
",180359,2346,61618,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"4635","dbeaver/dbeaver","f2ddcc2297066c128813ed2bbd79c70f0e9d24a1",1,"2017-03-19 15:09:49-07:00","#1456 timeout option to waiting-for-process-to-
finish
",180463,2347,61641,"maxxedev","maxxedev@gmail.com","maxxedev","maxxedev@gmail.com"
"4636","dbeaver/dbeaver","62e33bca32bb8f7ab59efbd17b9fc4d71bb27fe8",4,"2017-03-25 13:07:05+03:00","Execution plan model refactoring
",180583,2350,61699,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4637","dbeaver/dbeaver","6395c176a287008f620883151a04ad3c798855a2",2,"2017-03-25 15:37:00+03:00","#734 Local maven repository exploration fix (URI
construction). General utils refactoring.
",180610,2350,61699,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4638","dbeaver/dbeaver","38e409e88216c540681bcf66a6d4fd27e4507b21",1,"2017-03-25 16:45:15+03:00","#1474 RSV: multiple rows add/duplicate
",180632,2350,61701,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4639","dbeaver/dbeaver","8c9fe4aa7663f2f090ef423baddc70bfa99ead4b",6,"2017-03-26 00:20:27+03:00","#1165 Scheduled jobs model
",180979,2351,61722,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4640","dbeaver/dbeaver","f25885760a71202c0d41b63eea43024c447097f0",1,"2017-03-26 01:03:49+03:00","Database data editor refactoring
",181025,2352,61741,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4641","dbeaver/dbeaver","482869df27fec12f6c1daed58c97601bd8d05982",1,"2017-03-26 01:41:33+03:00","Filters dialog UI fix (columns pack)
",181101,2353,61760,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4642","dbeaver/dbeaver","e74da101b3f626a023aec588791a5b97c5bd896b",6,"2017-03-26 23:54:21+03:00","#1165 Scheduled programs model
",181224,2354,61779,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4643","dbeaver/dbeaver","e38a153c306670d3e68dd3db9c3fb4c84dcc3feb",9,"2017-03-27 00:18:29+03:00","#1165 Scheduled program arguments model
",181320,2355,61798,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4644","dbeaver/dbeaver","b80002688f4b751c5bc7f79453cd8c9883d6331b",9,"2017-03-27 00:29:21+03:00","#1165 Scheduled jobs arguments model
",181415,2356,61817,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4645","dbeaver/dbeaver","e75393472afdc3bc80d3cb65d5f9f284e4f6dc18",6,"2017-03-28 23:58:07+03:00","#1463 Oracle table privileges
",181488,2357,61865,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4646","dbeaver/dbeaver","2bcde61c8b00d7a32da1434cd51916d0f38207ed",6,"2017-03-29 00:30:04+03:00","#1463 Oracle user to roles associations
",181549,2358,61884,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4647","dbeaver/dbeaver","9e79aba5ade031a68b4d838d86c3ba0bc27184a7",6,"2017-03-29 00:32:50+03:00","Oracle grantee refresh
",181572,2358,61884,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4648","dbeaver/dbeaver","ac3d88680f61a46ddb76c4c6935fdaf9bb0af928",5,"2017-03-31 22:27:38+03:00","#1504 Oracle ""Unsupported feature"" error handling.
SQL errors discovery model enhanced.
",181649,2358,61888,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4649","dbeaver/dbeaver","1baa7177f5a7c5c79ece3bd3197b7933badee727",6,"2017-03-31 22:58:56+03:00","Connection invalidate (+ keep-alive) fix
",181653,2358,61889,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4650","dbeaver/dbeaver","23ea8da4e31b6f02bf4c5570b77fd87b45ce0a9c",1,"2017-03-31 23:43:03+03:00","Connection editor fix (auto-commit, transaction
isolation and active schema settings enabled)
",181664,2358,61889,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4651","dbeaver/dbeaver","585ccb1e2692ca5cdee131f2494acee814a3eb55",17,"2017-04-01 15:32:06+03:00","SQM query model refactoring
",181736,2359,61902,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4652","dbeaver/dbeaver","a8d95c758320c158fb19ad65a829b8fd40011583",6,"2017-04-01 17:00:24+03:00","SQL script commands model
",181755,2359,61896,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4653","dbeaver/dbeaver","3cf7d6b20ec7549e9f7cd11da6a57ddd626aa02a",1,"2017-04-01 20:16:50+03:00","SQL commands evaluation
",181982,2367,62049,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4654","dbeaver/dbeaver","fd69f2792a5118b06c1fb0fe7e5b48d9038eb8b4",1,"2017-04-01 21:05:10+03:00","Echo command implementation
",182049,2368,62068,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4655","dbeaver/dbeaver","10aeb1f0ef89989a017140a4ac17087dc5539742",2,"2017-01-13 17:31:35+03:00","Lock viewer Initial.  Oracle and PostgreSQL
",183433,2396,62216,"Andrey Hitrin","andrey.hitrin@redsys.ru","Andrey Hitrin","andrey.hitrin@redsys.ru"
"4656","dbeaver/dbeaver","29006062e6128e5407ba7854a5abb1ba963eab95",1,"2017-04-09 16:54:15+03:00","#1549 Refresh after truncate. SQL tools dialog
refactoring.
",183770,2400,62582,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4657","dbeaver/dbeaver","238d452a8b5d7d30758f49cc6adc37144c0bd6bf",1,"2017-04-13 00:11:00+03:00","#1506 SQL execution confirm
",184034,2403,62642,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4658","dbeaver/dbeaver","39fc349721fa594f7dd1a61e2f463b9b2b44b501",10,"2017-04-16 00:02:18+03:00","Content panel menu contribution refactoring
",184103,2405,62680,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4659","dbeaver/dbeaver","a58df2e4fd53ebc999c46408dfa92e45fc3778a5",3,"2017-04-16 12:18:32+03:00","Stats presentation UI fix. Dynamic sel provider
fix (NPE during editor init).
",184250,2406,62700,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4660","dbeaver/dbeaver","1b0c32805da4397382c471705e8c126f9b374ad6",1,"2017-04-16 14:18:59+03:00","Annotations fix
",184253,2406,62700,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4661","dbeaver/dbeaver","6d968f001919e5cddf1ba7a3b29d01125b425276",1,"2017-04-22 11:46:26+03:00","#1594 Refresh action for refreshable parts fixed.
",184299,2407,62718,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4662","dbeaver/dbeaver","7074e1107fe948f79db16ca6fb5a1f698fc32144",3,"2017-04-22 12:35:04+03:00","#1596 HSQLDB triggers support
",184363,2408,62737,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4663","dbeaver/dbeaver","9242c6549f7268fdc4f017de1a4d854dc1b30e7e",2,"2017-04-22 16:10:13+03:00","#1492 SQL converter model/registry
",184447,2411,62795,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4664","dbeaver/dbeaver","418582a3fbdd0e2ad517ee277e146c093f7a78a0",1,"2017-04-22 22:10:17+03:00","#1492 SQL converter settings dialog. Converters
impl
",184647,2413,62835,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4665","dbeaver/dbeaver","255b04c784f031071da3d4a8ac2815c424c6a21a",2,"2017-04-23 00:17:00+03:00","#1492 Convert SQL to Java
",184681,2414,62854,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4666","dbeaver/dbeaver","276f94ba28845bfddec6cb7f1c4297f43d9e140c",1,"2017-04-23 18:56:40+03:00","#1479 DB2 native timestamp format fix
",184787,2417,62911,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4667","dbeaver/dbeaver","8b5d2c57675857c954c92f209eaa77e16f46dda7",1,"2017-04-23 22:43:10+03:00","#1480 Generate SQL: SELECT .. IN
",184844,2417,62916,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4668","dbeaver/dbeaver","b1fb4c61d871a21ffdb6f93964be600621ccfd15",2,"2017-05-06 16:53:57+03:00","#1271 Open database connection from command line
params
",186007,2427,63117,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4669","dbeaver/dbeaver","35b2460ddc309506f0852766209188e5d5d445a8",2,"2017-05-07 11:46:17+03:00","#1635 Parse SQL parameters for non-DDL queries
",186033,2427,63143,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4670","dbeaver/dbeaver","0fc07d1926388b3a6ac8103b32742061e43d4c34",8,"2017-05-08 17:36:03+03:00","#1529 Project-based resource settings
",186158,2427,63156,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4671","dbeaver/dbeaver","88ba6b4f523557c22a5dfd104cdd7f903a65f3ec",1,"2017-05-08 20:13:24+03:00","Code format
",186171,2427,63156,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4672","dbeaver/dbeaver","74da1d1481d9b36c0e5ebb19b505897b4fd74db6",1,"2017-05-09 20:44:00+03:00","Exasol code style
",186218,2428,63163,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4673","dbeaver/dbeaver","6cd2639a50579827130aa39857d58a5dbf1fb457",1,"2017-05-09 22:42:15+03:00","Code cleanup
",186217,2428,63158,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4674","dbeaver/dbeaver","050a7cf492d2a52041460d92fdf83e1c4f122d82",9,"2017-05-20 14:22:48+03:00","Grid code formatting
",186171,2428,63135,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4675","dbeaver/dbeaver","0f66fc1b861232eee253498ec23a33968e1ef7ef",2,"2017-05-28 09:37:16+03:00","#1705 RSV adv. paste performance fix
",186439,2430,63174,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4676","dbeaver/dbeaver","1d991820142f8df66b9f9fde2d28c2bbb603a84a",4,"2017-05-30 22:38:14+03:00","#1720 MySQL strings escape/unescape fix (escape
back slash). SQL strings escape model refactoring
",186507,2430,63176,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4677","dbeaver/dbeaver","83377cc2431a3d97e0fba9d8a90e1036a7e59b92",4,"2017-06-14 00:17:03+03:00","#1746 Spreadsheet selection fg/bg preferences:
fixed
",186545,2431,63202,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4678","dbeaver/dbeaver","7c8a67de01ffaa8256e99a36a033612c6090182e",1,"2017-06-15 01:12:45+03:00","Script (reusable) DBC statements model
",186621,2433,63245,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4679","dbeaver/dbeaver","7f42f5f65c40e5102e20fd677f1fc08105918d0b",9,"2017-06-22 23:11:05+03:00","#1801 LOB editor: load/save fixed. CLOB value
display fixed. Default prefs changed (cache CLOB
by default).
",186662,2433,63292,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4680","dbeaver/dbeaver","f9ad66a0976885dbea0656a03bf342ae21d38e24",1,"2017-06-24 10:42:14+03:00","Net utils moved to model. Redundant icon ref
removed.
",186687,2433,63305,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4681","dbeaver/dbeaver","4add1384a52e630bb20fd2d9bde4a82f4549c9fb",16,"2017-06-24 11:36:49+03:00","Error handling refactoring (use platform UI)
",186718,2434,63324,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4682","dbeaver/dbeaver","04ee3cb15344835f1e61e2fded070e8d2b1d9b14",2,"2017-07-04 20:54:46+03:00","#1834 Default data type name detect
",187023,2436,63335,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4683","dbeaver/dbeaver","94e3e8856aee281b7c52e71d59a73f18510d0e34",3,"2017-07-09 18:43:55+03:00","Column modifiers gen fix (dialect-specific)
",187036,2436,63336,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4684","dbeaver/dbeaver","f923cd9279ffd8da41529fa34fa881db59ab4124",1,"2017-07-13 09:00:02+03:00","#1869 Folder editor: parent node visualization fix
",187056,2436,63342,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4685","dbeaver/dbeaver","931d53af3b8ebea3c4519e77d17d2a1385dad2f0",21,"2017-07-13 09:55:26+03:00","JDBC data type cache model refactoring. Generic
data type properties.
",187136,2437,63361,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4686","dbeaver/dbeaver","47a6774adcfee93c34bb86629575a2b2f1163350",2,"2017-07-16 22:55:57+03:00","#1591 Results view: right justify
numbers/timestamps
",187219,2437,63368,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4687","dbeaver/dbeaver","a510e197df99055c34775bb56ec1f5406c645b14",6,"2017-07-27 00:07:58+03:00","#1912 PG: AM operator class model
",187474,2439,63414,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4688","dbeaver/dbeaver","8ccd1450b2cea314cd8dfc5c8819b1372bdf8919",6,"2017-07-27 00:17:07+03:00","#1912 PG: AM operator families model
",187531,2440,63433,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4689","dbeaver/dbeaver","9f091fdcedebd9375104aca1d1b06279ffedb64d",2,"2017-08-02 01:09:57+03:00","SQL script context model additions
",187649,2440,63438,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4690","dbeaver/dbeaver","ff2bb0bb94a0361cd5e45464040eaf034a3abd76",2,"2017-08-03 21:52:49+03:00","#739 SQL editor: include command
",187760,2441,63458,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4691","dbeaver/dbeaver","db01fa2721fdf37643334354b147319bed2d8532",14,"2017-08-05 11:31:42+03:00","#1969 Support multiple quote strings
",187821,2441,63460,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4692","dbeaver/dbeaver","36fc8233abf00e3cb0bf0871015102650a6f7495",1,"2017-08-05 12:55:46+03:00","#1943 MySQL SOURCE command support
",187912,2444,63515,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4693","dbeaver/dbeaver","b1c950c233d62198d7c21b50d4120cc319af33b4",4,"2017-08-06 18:02:10+03:00","#580 Saved filters model
",187966,2444,63522,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4694","dbeaver/dbeaver","5b77b792e4259928e6c2c4ada1dae9fd85dc521b",4,"2017-08-09 21:45:16+03:00","#1995 File editor context menu fix (enable for
external files)
",188088,2444,63517,"serge-rider","R1eder30","serge-rider","R1eder30"
"4695","dbeaver/dbeaver","b93a4cec323e8936de4e032dcc087a1ec5f37898",1,"2017-08-13 16:36:26+03:00","#2011 Script eval context model refactoring (keep
vars in global context)
",188699,2449,63574,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4696","dbeaver/dbeaver","0d98f89c50d5179240dc763aa65d149eb8e4cd74",8,"2017-08-14 00:12:15+03:00","#1577 RSV: column swap
",188818,2450,63583,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4697","dbeaver/dbeaver","7fcf264b95efcd57c80634df930214e8bd5e58fd",4,"2017-08-16 23:32:28+03:00","#894 Saved data filters support
",189575,2454,63698,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4698","dbeaver/dbeaver","14f72005673c065e0f49d52c1d826593c5f28113",2,"2017-09-08 20:19:30+03:00","Show object tip in navigator tree
",192101,2486,64473,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4699","dbeaver/dbeaver","a32384954612e9d09eac680e81b67af310304d1c",2,"2017-09-09 02:15:08+03:00","Morph delimited list: configuration
",192389,2488,64505,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4700","dbeaver/dbeaver","b4c4e1d4afb608a7c8fc11ca0721eef9ddda3dcf",2,"2017-09-14 00:04:16+03:00","#1094 Variables in bootstrap queries. Variables
hints control.
",192745,2491,64559,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4701","dbeaver/dbeaver","5565a4dc74a148c036c69237e9ddfcfe59008df8",4,"2017-09-16 16:30:49+03:00","Tabbed folders state model. Remember folders
height
",192870,2492,64613,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4702","dbeaver/dbeaver","bbb4ac9b8292fdfdd65c442943a0ef7f58e126b6",1,"2017-09-16 17:16:30+03:00","#2154 Editor folders/tabs state save persistence
",192971,2493,64633,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4703","dbeaver/dbeaver","ccc308c006580dfd3a9aa7945bf69987501e6337",1,"2017-09-16 23:21:24+03:00","#69 FireBird data type model
",193175,2498,64720,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4704","dbeaver/dbeaver","ad0bb929373ca8cd61c78948a385aa53350d7331",2,"2017-09-17 12:48:34+03:00","#2066 FK navigation in SQL Editor
",193312,2498,64746,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4705","dbeaver/dbeaver","6a884260009009942f6957cb8ec98c6c9af0471a",4,"2017-09-30 19:40:36+03:00","#2105 UUID transformer
",193907,2505,64891,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4706","dbeaver/dbeaver","56f0e429d7662d846316811572c4e7bf1e42875b",1,"2017-10-01 10:18:48+03:00","Preference pages exclusion model
",193934,2505,64892,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4707","dbeaver/dbeaver","60f209de3d1f399bb795a6ad166bcae8fd2422d6",1,"2017-10-04 00:57:35+03:00","#2239 Multi-cell editor support
",193984,2505,64897,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4708","dbeaver/dbeaver","7045b79fa9d901a43770f35042a03221a0bd53ec",1,"2017-10-04 21:04:00+03:00","#2234 Global filters search fix
",193992,2504,64879,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4709","dbeaver/dbeaver","9fe7acf20c8246d48a81aa78ae58a58d39ca9cf4",1,"2017-10-19 23:35:39+03:00","#2344 RSV: sql queries attribute binding fix
",194593,2516,64962,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4710","dbeaver/dbeaver","32a4f6152116797de4d901b6d12e9dbf5879a213",2,"2017-10-20 20:59:07+03:00","SQLite data type properties
",194608,2516,64962,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4711","dbeaver/dbeaver","77995b67f13384bd80db082634a2f5f47b87d500",1,"2017-10-22 16:40:00+03:00","#2149 DB2: show aliases in auto-completion
",195038,2516,64986,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4712","dbeaver/dbeaver","ddb928482564aae5deb7c56e30ddedb45b34e090",2,"2017-10-22 16:42:10+03:00","#2149 DB2: show aliases in auto-completion
",195040,2516,64986,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4713","dbeaver/dbeaver","889c9c3ef6089f54e62d1fb21cb177355b7da7c0",1,"2017-10-28 17:16:02+03:00","#2425 RSV font size change: plain text
presentation rendering
",195356,2516,64998,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4714","dbeaver/dbeaver","7a5cf950beed95db450b4d9074e4a0c162a0428c",4,"2017-11-02 23:00:49+03:00","#2468 MySQL enum/set value editor fix. Code
formatting.
",195559,2516,65040,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4715","dbeaver/dbeaver","88aa23d8e31ee577e945279c27859ea0d6a9eee9",4,"2017-11-11 14:00:47+03:00","#2396 String->binary column value transformer
",195891,2519,65104,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4716","dbeaver/dbeaver","f90d9c49658c903ffeee12c4ec66335008243901",2,"2017-11-16 23:09:22+03:00","General utils additions
",195971,2519,65173,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4717","dbeaver/dbeaver","ce87ff9c9da5ba4a83b2aa29e263a464b644500c",12,"2017-11-21 00:48:02+03:00","#2290 Vertica: generic meta model additions
",196200,2524,65296,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4718","dbeaver/dbeaver","8f27bceaf854eb5f8f187a33f5f058033046c908",15,"2017-11-21 23:48:41+03:00","#2290 Vertica: projections model and md read
",196536,2529,65372,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4719","dbeaver/dbeaver","5cd8dac92846c47ae9b0e01f27c02d6ba07521d4",4,"2017-11-22 22:11:36+03:00","#2290 Vertica: projections model
",196718,2530,65395,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4720","dbeaver/dbeaver","9d643719f1ce89755bca731bde7b4e3578776913",5,"2017-11-24 00:44:08+03:00","#2290 Vertica: metadata model redesign. Nodes.
",196907,2531,65414,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4721","dbeaver/dbeaver","d164d98ff6eb5a79e8fa257f51ea2bb3697ad54a",4,"2017-11-24 15:28:40+03:00","#2044 Referencing tables navigation
",197004,2531,65425,"Sergei.Rider","sergei.rider@iii.com","Sergei.Rider","sergei.rider@iii.com"
"4722","dbeaver/dbeaver","637c1858c9810282c3db53201d6b70ce63630379",1,"2017-11-24 22:59:53+03:00","#2044 Referencing tables menus/shortcuts
",197035,2531,65424,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4723","dbeaver/dbeaver","717ccbc690e4ba006644094b8ae3e2d3dcccd2ec",5,"2017-12-03 16:39:28+03:00","UIUtils refactoring
",197570,2537,65587,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4724","dbeaver/dbeaver","b57bc9e53ab13c9e020510fbd3d350208defc049",4,"2017-12-03 21:47:15+03:00","#2130 SQL formatters model/registry
",197742,2541,65666,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4725","dbeaver/dbeaver","b3f322ebb12cc3afc3771ab750527651fdeaf999",8,"2017-12-21 10:43:45+03:00","#2640 Initial Oracle queues support
",200835,2611,66645,"Evgeny Fradkin","Eugene.Fradkin@gmail.com","Evgeny Fradkin","Eugene.Fradkin@gmail.com"
"4726","dbeaver/dbeaver","82c1302acc49504dfdde9f84418f7d2f8c2a228d",1,"2017-12-22 00:00:09+03:00","#2535 Cascade delete UI + impl (MySQL, PG,
Oracle). Object maker refactoring.
",200911,2609,66646,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4727","dbeaver/dbeaver","3c68f3da78b03f8c91027455047cd0d893cd5616",3,"2017-12-25 17:41:45+03:00","#810 SQL Server extension. Customized connection
page.
",201321,2614,66755,"Evgeny Fradkin","Eugene.Fradkin@gmail.com","Evgeny Fradkin","Eugene.Fradkin@gmail.com"
"4728","dbeaver/dbeaver","3ee1ea545d011f9467891b5ff8670a3a1b9fce37",3,"2017-12-27 00:22:42+03:00","#2458 Platform language model. Locale selection
persistence.
",201666,2618,66820,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4729","dbeaver/dbeaver","57b51449dd09d9b2f485bc2c7a24a8b5567ce84d",1,"2018-01-02 12:21:39+03:00","#2633 Sybase & SQL Server schema read change
",201873,2622,67010,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4730","dbeaver/dbeaver","9213c51c2b90fd6d7480ac596849d388b6446fa0",1,"2018-01-03 18:10:03+03:00","#1712 PG role manager. i18n fix.
",202005,2623,67053,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4731","dbeaver/dbeaver","b07316007506429e34e47d02e3bc35ccc74c3d40",1,"2018-01-05 22:04:37+03:00","Pull ds provider ID in driver interface
",202906,2639,67321,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4732","dbeaver/dbeaver","1dfb34ff689799551eb5d930759e3636e808854a",2,"2018-01-06 19:04:45+03:00","Support string content in content editor
",203046,2639,67325,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4733","dbeaver/dbeaver","5bf271b2f1d98538a2498e875e451f9666087ec3",1,"2018-01-14 11:25:40+01:00","Create ad hoc package for resultset filtering menu
and dialog with base class containing common
methods to avoid variable leaking and harness code
reuse.
",203373,2641,67373,"Stefano La Terra Inghilterra","thearth@hotmail.it","Stefano La Terra Inghilterra","thearth@hotmail.it"
"4734","dbeaver/dbeaver","9b23574bbcc5e7269f3ea2cb35e3cdd30456b60e",1,"2018-01-17 17:48:09+03:00","#2619 Filter drop-down redesign
",204283,2643,67496,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4735","dbeaver/dbeaver","2b37fc9c6b737d4b659bd04335249f8051adf378",1,"2018-01-20 15:29:54+03:00","#2826 PG keywords addition (PERFORM, RAISE and
NOTICE) + code formatting
",205011,2658,67860,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4736","dbeaver/dbeaver","0cf95675578ad5b6dbc707fc2fc65a2a84ff00be",1,"2018-01-21 21:55:43+03:00","#2490 SQL script variables
",205128,2660,67900,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4737","dbeaver/dbeaver","6aa96835ae1fc00e42501c1c17021f3d82000067",2,"2018-02-03 17:29:08+03:00","#2804 PG: identity columns support
",207104,2682,68363,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4738","dbeaver/dbeaver","630db95444e2a411c9f10c98f9310c969d43f7f4",3,"2018-02-11 14:18:10+03:00","#2619 RSV drop-down filter UI fix
",206958,2682,68370,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4739","dbeaver/dbeaver","67eb3e033831d85da6a8c96e38fccd4fd9a4e6d6",1,"2018-02-11 22:24:52+03:00","#2619 RSV drop-down filter UI fix
",207066,2682,68371,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4740","dbeaver/dbeaver","3d2359f015a1baaa1d5d5337be6bcbfb722a68d8",2,"2018-02-13 01:22:51+03:00","#1676 GIS geometry support. MySQL geometry
handler.
",207221,2685,68439,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4741","dbeaver/dbeaver","128fd0f9490b0161b2106649c6a1ca76dc8aec69",2,"2018-02-14 18:53:50+03:00","#1599 Mock Data. Save generator properties.
",207424,2686,68466,"Evgeny Fradkin","Eugene.Fradkin@gmail.com","Evgeny Fradkin","Eugene.Fradkin@gmail.com"
"4742","dbeaver/dbeaver","ce599352940e3f2fbc7214be77041be9fdb0995a",1,"2018-02-23 18:31:07+03:00","Locks model refactoring (generics cleanup)
",207746,2689,68525,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4743","dbeaver/dbeaver","9d643776f6f759f8cfcd012265692138dcc73c85",11,"2018-02-23 23:38:18+03:00","Vertica UDFs
",207887,2690,68727,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4744","dbeaver/dbeaver","0d5bb1fbfc083ed0467d6bb10f631f1b9fb82086",1,"2018-03-02 00:06:04+03:00","#2201 Auto-recover after SQL execute
",208200,2693,68789,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4745","dbeaver/dbeaver","ee408d23b8986be6bff274bb01a6473c75554be9",2,"2018-03-12 22:02:42+03:00","#3111 JDBC connection init error handle fix
",208968,2699,69276,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4746","dbeaver/dbeaver","381ad276696ab12f22a7472cdfce58ec91f50832",1,"2018-03-14 22:16:07+03:00","Datasource selector panel redesign (modeless)
",209000,2700,69300,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4747","dbeaver/dbeaver","f7ad7c98a27c7deba0e5105da26cdfabe83c021c",1,"2018-03-21 21:21:12+03:00","#3154 SQL completion processor fix (NPEs)
",209552,2715,69572,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4748","dbeaver/dbeaver","f305a477fc7b4fe86def24ffb276d630a3a48cf7",1,"2018-03-25 01:16:14+03:00","#3024 PG: constraint comments (read/write, table
DDL)
",209790,2718,69633,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4749","dbeaver/dbeaver","38cacee708606512ab9d75cfb91c70e0058e371b",2,"2018-04-04 22:24:21+03:00","Connection editor fix (folder list ordering)
",210092,2720,69669,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4750","dbeaver/dbeaver","1b96f70dd79f7078ad82f17df75925c5278567f5",5,"2018-04-07 01:13:17+03:00","#3278 Switch to Mylyn notifications
",210218,2724,69712,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4751","dbeaver/dbeaver","5fa0153755e97ab691029c36ede64ac26b4386ec",1,"2018-04-07 12:35:33+03:00","#3278 Notifications preferences + commit/rollback
notifications
",210383,2727,69706,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4752","dbeaver/dbeaver","9ce856d824ac7ef27892b9fa3f3174f54dba9c98",2,"2018-04-07 21:00:04+03:00","#3278 Model refactoring (move to headles bundle).
Reconnect notification config.
",210437,2728,69725,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4753","dbeaver/dbeaver","935f9194c8fad72671ad8f3dbbe55b2a5e35a938",2,"2018-04-08 13:14:06+03:00","#2357 Omit header should be on for procedure under
debug
",210627,2728,69732,"Alexander Fedorov","alexander.fedorov@jkiss.org","Alexander Fedorov","alexander.fedorov@jkiss.org"
"4754","dbeaver/dbeaver","3cf9d20400c754e67f97c19be220436ca54cf1ec",7,"2018-04-09 00:40:11+03:00","#3252 Generic procedure manager
",210633,2730,69776,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4755","dbeaver/dbeaver","bde93e4d9e4578c7a8d6e64b25ecd079a815af28",6,"2018-04-12 08:42:28+03:00","SQL statements parameters formatting improved
",210956,2735,69872,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4756","dbeaver/dbeaver","270da14fe331fb91007788fee4e3fde8b073dd1f",2,"2018-04-14 23:19:57+03:00","#3304 Data transfer - extra output file template
variables
",210805,2731,69797,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4757","dbeaver/dbeaver","49d90c13e96a7ff5cd705502c3db5dc8f51e511b",2,"2018-04-21 21:31:58+03:00","#2453 Metadata aliases support (DB1 and Oracle)
",210954,2732,69823,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4758","dbeaver/dbeaver","5c5a8bc6cdb1cce8f81e70518962a4f16c43be66",2,"2018-04-22 00:30:18+03:00","#3365 Password change model and UI. Oracle expired
password change.
",211055,2734,69874,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4759","dbeaver/dbeaver","040a585fbf07a158b89a6bb127727910e08629ab",3,"2018-04-22 09:58:56+03:00","#3025 Table truncate model
",211088,2734,69889,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4760","dbeaver/dbeaver","8ca990d1ded298bbd28018796380403aa3dd9120",1,"2018-04-26 23:28:49+03:00","PG index tablespace property
",211383,2738,69967,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4761","dbeaver/dbeaver","00e555efedf303ab2bdc4a079498528c7a4837d1",13,"2018-05-02 13:16:26+03:00","PG source viewer UI fix
",211178,2741,69981,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4762","dbeaver/dbeaver","7e7003deea5fa258ee89e8069250288c2528b4ef",6,"2018-05-03 14:15:47+03:00","Debug tab redesign. Debug pannels support.
",210979,2750,70778,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4763","dbeaver/dbeaver","98f415f0bbde99960a4073b4ea9c71b76943622d",1,"2018-05-03 16:48:06+02:00","Initial support for DbUnit export
",210936,2732,69844,"Henrik Hansen","github@lennartssons.net","Henrik Hansen","github@lennartssons.net"
"4764","dbeaver/dbeaver","d6b0ce6aab3883d63dd3fe361bbff482f52fa70d",1,"2018-05-04 00:34:59+03:00","Debug panel UI - function selector
",211138,2752,70816,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4765","dbeaver/dbeaver","031788b7cdce973656be0c8e9ffad7d49928497a",1,"2018-05-04 00:55:35+03:00","Debug panel UI - function parameters
",211159,2752,70816,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4766","dbeaver/dbeaver","b3fa24dddd039f791e3cb944894365384706775a",6,"2018-05-04 21:29:50+03:00","Editor activation enhancements
",211370,2753,70843,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4767","dbeaver/dbeaver","2827aaf236046b10f3be4a20ccfb46cdd6df5692",1,"2018-05-06 16:29:19+03:00","RSV filter manager adapter
",211358,2752,70799,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4768","dbeaver/dbeaver","2839941edb28c9654811557494dbed66f259ed3f",5,"2018-05-06 21:46:28+03:00","#178 QM - history search
",211458,2753,70819,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4769","dbeaver/dbeaver","642c24e5b8adc68c11ba8710542d35b72e11ec3a",1,"2018-05-07 01:24:15+03:00","QMDB: history reading
",211344,2753,70819,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4770","dbeaver/dbeaver","003fb6e8d405195f0f96a2b0364160bff5331e31",3,"2018-05-07 02:00:34+03:00","QMDB: history reading
",211400,2754,70838,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4771","dbeaver/dbeaver","99041d0d7895951483c285d5bbccadaa137916ac",2,"2018-05-08 00:50:24+03:00","Query history loading visualizer
",211607,2755,70868,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4772","dbeaver/dbeaver","ce3c671089a586dffdf6bead38dad95249c095cb",2,"2018-05-08 14:46:29+03:00","Query manager log filtering menu
",211666,2755,70869,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4773","dbeaver/dbeaver","2776ef7b07237b1b2d2564b9fae39fe1bd647b32",14,"2018-05-10 00:01:01+03:00","#3435 MariaDB packages support added
",211913,2757,70911,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4774","dbeaver/dbeaver","ea818319e4bb90d8835227f2d032bb1a468138bf",1,"2018-05-11 20:46:21+03:00","Content value manager for string data types
",212044,2757,70919,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4775","dbeaver/dbeaver","54122f0e93156f2c412585c71e48664ab31fb96c",2,"2018-05-13 00:33:14+03:00","#3322 Async server output reading
",212150,2758,70941,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4776","dbeaver/dbeaver","f793ebe8f76c472c2428cf41c2992806b7a2bd5f",1,"2018-05-13 20:24:31+03:00","Reference values viewer loading progress
visualization
",212192,2758,70964,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4777","dbeaver/dbeaver","146d1d26d4fd70ce84ed08902d450a06c605cfe3",1,"2018-05-21 02:03:26+03:00","#3470 QM event browser: local session mode added
",212374,2760,71007,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4778","dbeaver/dbeaver","62d1ae3db887185fad2ff77b243ff3bb5b8d8d89",20,"2018-05-22 20:20:46+03:00","#238 Time and timestamp with time zone support
(abstract + Oracle)
",212719,2763,71067,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4779","dbeaver/dbeaver","aa43c9da9ce113da4bdb6c41fab6864725942a51",6,"2018-05-22 23:47:41+03:00","#2102 PostgreSQL: lazy data type loading
",212832,2763,71076,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4780","dbeaver/dbeaver","a31179de1939df99d8ace27da9bda0f55ec493c9",1,"2018-05-23 09:19:10+03:00","#2756 Vertica: column editor
",212913,2764,71100,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4781","dbeaver/dbeaver","153b0b6e5e9c18137e35a4bd3d1a04a3bc1d1d0e",2,"2018-05-26 00:29:11+03:00","RSV decorator model
",213279,2769,71809,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4782","dbeaver/dbeaver","cd6e5c85ad629d581b87d5387d1994212a62f93a",1,"2018-05-29 01:58:56+03:00","UI plugin refactoring
",213173,2770,71828,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4783","dbeaver/dbeaver","312a7cff8394510f51a3799af23f91f36daf3230",2,"2018-05-30 02:19:48+03:00","#3507 Grouping panel - embed RSV. Decorator
extension
",213245,2774,71318,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4784","dbeaver/dbeaver","8da69f50bc09ba5a0454c68dc94d863594eb2ca5",6,"2018-05-30 23:33:40+03:00","#3507 Support data filters (orderings) for
groupings
",213495,2774,71316,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4785","dbeaver/dbeaver","c3a225c10e8397dd12a53a2c84e3a7874ba1ff28",1,"2018-05-31 22:11:23+03:00","#3507 Grouping panel - add/remove columns
",213567,2775,71326,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4786","dbeaver/dbeaver","252940554460675d389704c086b38733f4b78485",6,"2018-06-01 10:13:18+03:00","Copy column/row names command fix (do not show
options for single element)
",213657,2777,71367,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4787","dbeaver/dbeaver","c8312c4dc393b26be3072879b7f8a46bb3fe7a86",5,"2018-06-02 01:30:19+03:00","Table editor - proposals
",213855,2778,71388,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4788","dbeaver/dbeaver","2a11bfca843dde2bf593ccd8e9a335d0250e2c68",3,"2018-06-02 20:55:48+03:00","#3537 Local data type resolve by type ID. Plain
Java arrays support
",213947,2778,71394,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4789","dbeaver/dbeaver","c496b6f6b6a906c099f403b0d4f3aa166f130d61",6,"2018-06-08 13:46:54+03:00","Panel text editors refactoring
",214269,2781,71454,"serge@jkiss.org","lfyeyf[eq87","serge@jkiss.org","lfyeyf[eq87"
"4790","dbeaver/dbeaver","aa2fb8cd678704cc7564c3650db213434e641bc7",11,"2018-06-12 20:00:49+03:00","#3616 Query cancel refactoring
",214414,2781,71479,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4791","dbeaver/dbeaver","1d5a4467fd37deb1d39fe2f48f191304283a5e16",1,"2018-06-12 20:17:08+03:00","#3614 Query parser performance improvement (parse
only if requested)
",214425,2781,71479,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4792","dbeaver/dbeaver","7151ba1069204ae13941decde4b920bb76709298",3,"2018-06-13 00:21:52+03:00","#3595 Export to SQL for custom queries
",214482,2782,71502,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4793","dbeaver/dbeaver","b9d8555d1398616380720cd97dc390a449f77f30",6,"2018-06-14 00:41:12+03:00","Synonyms model in Generic driver
",214607,2783,71532,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4794","dbeaver/dbeaver","54ec79eb193e772626c4ba3addce921adc663f74",2,"2018-06-14 01:41:02+03:00","#3621 HSQL synonyms support
",214693,2784,71553,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4795","dbeaver/dbeaver","5091532ca3c175b6ffd3a3a9b7c529fff861745c",2,"2018-06-20 17:36:11+03:00","ERD model/figures refactoring.
",214913,2789,71650,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4796","dbeaver/dbeaver","90492c27b61698f28d45b120209d12520770908c",2,"2018-06-21 14:11:57+03:00","SQL editor extra presentation UI
",215026,2790,71688,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4797","dbeaver/dbeaver","7acbf408cebd6d8ce4e964f6fe8427d3cae9a206",1,"2018-06-21 15:45:06+03:00","ERD part configration/toolbar
",215145,2792,71725,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4798","dbeaver/dbeaver","3e356946bd1e616c9647a5c055aa2ed03f51d27b",1,"2018-06-22 01:39:33+03:00","#1652 ERD error handling
",215252,2793,71739,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4799","dbeaver/dbeaver","2efa6b6d80582c19f21fb13701c03583174c949b",1,"2018-06-23 11:35:42+03:00","#1652 ERD palette/tools
",215334,2796,71828,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4800","dbeaver/dbeaver","97c1457dcc65a211cbbd8bbfc645c1f83da7242b",6,"2018-06-23 11:52:21+03:00","ERD associations model refactoring
",215337,2796,71825,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4801","dbeaver/dbeaver","13db6536be5978b0f302fbb1d825f598ef499bc5",6,"2018-06-23 20:17:18+03:00","ERD model and UI refactoring
",215464,2799,71808,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4802","dbeaver/dbeaver","91d08e32e10309e31620cb581c2a310e8d0af0f9",2,"2018-06-24 16:54:21+03:00","#1652 Join by multiple columns support
",215536,2799,71626,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4803","dbeaver/dbeaver","da7f8bc2b012904465e5e5be0417e34cc315ca14",2,"2018-06-25 17:32:30+03:00","#3679 ERD model refactoring. Joins generator
",215692,2802,71698,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4804","dbeaver/dbeaver","92345d11bd0d85c2f2555c0db4fe8c89ef81d1de",2,"2018-06-29 22:32:49+03:00","#3677 Object list control rendering fix
",216005,2807,71819,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4805","dbeaver/dbeaver","67f8f27238c46509b983c4f6cc011324b4f82227",1,"2018-07-01 21:06:57+03:00","#3705 PostgreSQL: table extra options support
(read-only)
",216231,2808,71855,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4806","dbeaver/dbeaver","67be9d55cc6bcc5fe5007df849f8f00368ce4c09",2,"2018-07-04 10:52:44+03:00","ERD: association auto-create model
",216328,2809,71879,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4807","dbeaver/dbeaver","2164e3cae31d8ce70721be7701bf189ee4247c56",3,"2018-07-04 14:21:28+03:00","ERD: entity add command refactoring
",216350,2809,71883,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4808","dbeaver/dbeaver","9cafdf92665f8249c272d86ebf495aead63ed472",4,"2018-07-04 16:30:15+03:00","ERD: add and delete commands
",216351,2809,71884,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4809","dbeaver/dbeaver","91e22447189662fde827d911d526c4ef42f68f39",1,"2018-07-06 22:20:30+03:00","ERD code formatting. Association delete command
",216440,2810,71822,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4810","dbeaver/dbeaver","bf30d4eabc1ee2cde4b0cbb385359aebbe6c2786",1,"2018-07-07 20:51:46+03:00","#3731 PG: domain types value type resolution fix
(date/time/timestamp)
",216485,2810,71828,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4811","dbeaver/dbeaver","4b4abc5cd1f1d3a56fea12d57509903706f4b3f6",2,"2018-07-08 10:21:49+03:00","Block header config refactoring
",216489,2810,71829,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4812","dbeaver/dbeaver","1f1cc7ce20bdf43f3295f64cbbbab1b6ab510181",18,"2018-07-08 17:54:26+03:00","#3771 Multi-instance model
",216566,2811,71873,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4813","dbeaver/dbeaver","43dbb1194a279f659f493b7a7fcc1900e6736a31",3,"2018-07-14 17:21:43+03:00","#3796 Grid column read-only state visualization
",216910,2818,72001,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4814","dbeaver/dbeaver","90f1d9319dbcd31afe8480cc8c87535c59f28593",4,"2018-07-20 22:55:46+03:00","#3833 Snowflake extension
",217332,2824,72112,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4815","dbeaver/dbeaver","9e768d7069efbdf774013898cf424420d88e462c",6,"2018-07-25 11:33:32-03:00","show user mapping in postgresqls foreign servers
",217482,2826,72152,"johnatan","johnatan.ribeiro@fortaleza.ce.gov.br","johnatan","johnatan.ribeiro@fortaleza.ce.gov.br"
"4816","dbeaver/dbeaver","ad107dac83bb8100368396de35f3ae0b50f50902",1,"2018-07-31 13:50:06+03:00","#3867 Driver copy fix (mark libraries as custom)
",217778,2828,72193,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4817","dbeaver/dbeaver","a9c61275d2ad384beb766a76f16d7045ee1ead05",9,"2018-08-07 12:18:46+03:00","UI model refactoring. DB workbench
",218009,2831,72241,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4818","dbeaver/dbeaver","adb4dc3e552770bb1d27cbc5a58bf5fd582e902f",14,"2018-08-07 17:26:35+03:00","#3939 Data transfer refactoring. Model and UI
refactoring. Data container refactoring.
",218098,2835,72331,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4819","dbeaver/dbeaver","47444feb646138d5d55f3635bd51973b2e96eadc",1,"2018-08-10 11:34:44+03:00","#130 Columns import mapping editor. Packages
refactoring
",219547,2853,72706,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4820","dbeaver/dbeaver","963eae5494e22eba82f726210eb573303bd343dd",1,"2018-08-10 23:45:19+03:00","#3950 SQL Server: synonyms meta info support
",219787,2855,72745,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4821","dbeaver/dbeaver","9c6ac6c437206a004227688ac932bb39414c5744",3,"2018-08-17 19:50:38+03:00","#4008 SQLite: respect numeric and timestamp
formatters
",220045,2856,72789,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4822","dbeaver/dbeaver","92976e25a31b01d703167b8ea605f636d657a15f",3,"2018-08-18 14:18:09+03:00","SQL query results tab names
",220167,2857,72796,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4823","dbeaver/dbeaver","6db7fef4da9dcff83cad93744eb06478d2d6165e",2,"2018-08-18 22:11:11+03:00","#3991 SQL completion - long identifiers
proposal/replacement fix
",220196,2857,72798,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4824","dbeaver/dbeaver","db3a8c38d460b92977b808cbc43ab08e6ab956fc",1,"2018-08-20 09:17:01+03:00","SQL completions: proposal list ordering fix
",220222,2857,72799,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4825","dbeaver/dbeaver","70847443724c33899e0f6be59790997745c41827",6,"2018-08-22 18:55:09+03:00","#4060 Bug reporting. Workspace model refactoring.
Workspace identification.
",220320,2859,72876,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4826","dbeaver/dbeaver","51d7b6e844e9c86f4eade02da0d22819ddcee9bb",1,"2018-08-24 00:46:52+03:00","#3778 Native clients model
",220501,2864,72974,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4827","dbeaver/dbeaver","b66f9be1e2690761f32de55d946955590dc5d92e",2,"2018-08-24 14:05:33+03:00","#3778 Native client selector model
",220553,2865,73005,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4828","dbeaver/dbeaver","bb1b726c3d7ae8346992b318c9a7f59da781a841",8,"2018-08-24 18:05:27+03:00","#3778 Native client selector refactoring
",220505,2865,72919,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4829","dbeaver/dbeaver","974eb2ae634c13093195f46dcce88924978bcb2e",3,"2018-08-24 18:55:13+03:00","#3778 Native client selector refactoring
",220543,2866,72937,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4830","dbeaver/dbeaver","bccbc6b720d1f1744617f83073a23ad87a9be2c9",1,"2018-08-29 01:13:23+03:00","#4081 LOB panel editor - progress visualizer
",220921,2867,72977,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4831","dbeaver/dbeaver","dd5e6437a3a01bf2243b738dfcc2182d9a6e577d",1,"2018-08-29 09:50:44+03:00","#4100 Virtual model fix (object container search)
",220920,2867,72980,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4832","dbeaver/dbeaver","fafea9c13c0aa0bdcede79a0e22ade0f89627908",1,"2018-09-03 19:24:14+03:00","License version gen utility
",221858,2881,73267,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4833","dbeaver/dbeaver","e10bdc4388bb02fa63c1159cc1c600ae1e0a176c",1,"2018-09-03 22:46:23+03:00","#4145 Show cell read error in grid
",221956,2883,73305,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4834","dbeaver/dbeaver","c4c4e9adab3fa4a60d819a07b72673d03d6d404e",2,"2018-09-05 09:00:18+03:00","Driver properties page. Drivers documentation
links (MySQL, PG)
",222116,2885,73342,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4835","dbeaver/dbeaver","184c45d8b4d143668b733cc787a4915bcf5531ae",1,"2018-09-05 16:49:53+03:00","Version shorten variant
",222097,2885,73341,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4836","dbeaver/dbeaver","668abf51db4e6a51dc8b8c8c78a1b0d41ac6aa6d",7,"2018-09-27 22:41:51+03:00","Default SSL connection handler implementation
",223627,2894,73649,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4837","dbeaver/dbeaver","c65ee4aa145d842c6e1445bfa358372b9ff5936d",1,"2018-09-30 19:17:53+03:00","ES provider rename
",223628,2894,73647,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4838","dbeaver/dbeaver","f7c4ef18647d7e6369be65f020c3db38bbd4bcb0",4,"2018-09-30 20:06:42+03:00","#1687 BigQuery bundle
",223878,2899,73745,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4839","dbeaver/dbeaver","fc3cc26eb3069bc85c8f7c407fddcfb13210d7b3",2,"2018-09-30 21:38:08+03:00","#1687 BigQuery: use LIMIT for table queries
",223930,2901,73787,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4840","dbeaver/dbeaver","f0a1977e3564fee2e1ccd6bb9edebaa6b6aaa2b1",4,"2018-09-30 22:14:12+03:00","String numbers (non-parseable). Bit strings
support fix.
",223984,2902,73814,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4841","dbeaver/dbeaver","10dcd8b0b14f6340bd8a46bb3e9750ac83f12382",2,"2018-10-05 13:30:21+03:00","Connections compare fix
",224206,2903,73826,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4842","dbeaver/dbeaver","70138aa264c2642220e3cae2ae6cf100beca702c",3,"2018-10-06 12:32:07+03:00","#2701 Close connection if query cancel won't help
",224398,2905,73838,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4843","dbeaver/dbeaver","2528b74a332b8831f612617cb9fc2ab1a91c8530",4,"2018-10-06 17:35:52+03:00","#3944 Data transfer - respect strings max length
(DB-specific)
",224029,2899,73725,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4844","dbeaver/dbeaver","0939ed6826846b22d6e6e5a438358922811b657c",4,"2018-10-06 20:13:17+03:00","#131 Firebird: column rename, default value edit,
comment edit
",224132,2901,73762,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4845","dbeaver/dbeaver","38a2679bfb9e23d9ad37fedb2b8fecbf7864dab2",3,"2018-10-06 20:35:32+03:00","#131 Firebird: column reorder
",224173,2901,73764,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4846","dbeaver/dbeaver","60fbfd7d31b8f431cdc841e0474e698f9574ae5e",1,"2018-10-06 20:53:59+03:00","#131 Firebird: column data type edit
",224196,2901,73764,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4847","dbeaver/dbeaver","22ba579158b57a412de2f4a5dd74e8fab23420f6",2,"2018-10-07 17:33:51+03:00","#4343 Apache Hive extensions. RS metadata fix,
table edit support, table/view definition, icon
added
",224332,2906,73864,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4848","dbeaver/dbeaver","dda74cb38b2a2507d1d31b098f193ff7c48ba5a8",6,"2018-10-13 10:11:56+03:00","#4389 AWS athena extension
",224866,2920,74140,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4849","dbeaver/dbeaver","34c1e5ae0caf74af6374f213d436115f1996f049",1,"2018-10-14 12:54:47+03:00","#4395 Entity props editor redesign
",225207,2921,74089,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4850","dbeaver/dbeaver","3ca3cd27d3a144c40e554dd96a6d7d89ad6b26ec",1,"2018-10-15 23:12:01+03:00","Editors preference pages refactoring
",225455,2923,74171,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4851","dbeaver/dbeaver","483937259ea8e98a4e2a8c66e5233634269cf7b3",3,"2018-10-17 22:56:38+03:00","#4419 Redshift: foreign keys reading fix
(inheritance). PG: roles reading fix (redshift,
8.x)
",225481,2923,74173,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4852","dbeaver/dbeaver","a0bf0472edb5e13fd4cd86cc4c85d4a5a3c62670",29,"2018-10-19 13:07:17+03:00","#4265 Redshift external schema/tables/columns
model
",225954,2927,74263,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4853","dbeaver/dbeaver","e7cd8eda288eaacc5cf290351c65d19157e00e5f",1,"2018-10-26 06:46:13+02:00","Return and show fb. plan as text in one node only
",226117,2930,74290,"tvr","tvr@post.cz","tvr","tvr@post.cz"
"4854","dbeaver/dbeaver","4d74a48b69e69e1016903f54e32808696839e14c",5,"2018-10-28 23:42:18+03:00","#3846 Script->connection mapping preferences
",226161,2930,74326,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4855","dbeaver/dbeaver","f0f45dc1a6dea873f69918d4706afa16ed701e89",1,"2018-11-01 13:25:07+03:00","#4121 Driver selector viewer
",227002,2936,74475,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4856","dbeaver/dbeaver","b405141b1a2dd0cbade5fbcb3833c429c2fff04d",1,"2018-11-01 17:59:01+03:00","#4121 Driver browser rendering
",226927,2936,74465,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4857","dbeaver/dbeaver","57b87a486496e2db600c4bc9fddb251fc235fc6b",1,"2018-11-02 15:00:56+03:00","#4530 Stored procedures vs function - use
different call syntax. Procedure out parameters
handle fix
",227048,2936,74463,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4858","dbeaver/dbeaver","d201319aa823e8f04bbac3dd2759d433bbcbf0d2",1,"2018-11-03 23:47:27+03:00","#1181 PG extra table DDL for GP
",227403,2937,74497,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4859","dbeaver/dbeaver","e7fca9f79a3017acfd147c90302f2788e9737e02",3,"2018-11-03 23:52:53+03:00","Default value formatting fix (proper format of
arrays and collections)
",227426,2937,74497,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4860","dbeaver/dbeaver","d0ec09065106b6c0f2b8170696032d4326fd6f32",2,"2018-11-04 14:00:36+03:00","#4410 SQL completion: respect ""search inside
names"" option
",227450,2937,74505,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4861","dbeaver/dbeaver","06ca9efa43e27935dd9c07e08e0b0010f2d4e4ff",1,"2018-11-08 18:27:10+03:00","#810 SQL Server model refactoring.
",227774,2940,74331,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4862","dbeaver/dbeaver","49db0c082ffd86e5c522562253fea7388f012b39",8,"2018-11-08 19:50:34+03:00","#810 SQL Server model. Split Generic (Sybase) and
SQL Server (MS SQL) models.
",227973,2942,74374,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4863","dbeaver/dbeaver","97fe9e105aa45438c74c999763a6f2812dd8c00b",5,"2018-11-08 23:16:46+03:00","#810 SQL Server: schema reading
",228076,2943,74395,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4864","dbeaver/dbeaver","f8675afb6f9c80fc911cc4f1b9fd9310ee17ade7",14,"2018-11-09 19:43:23+03:00","#810 SQL Server model. Tables, indexes,
constraints
",228807,2953,75014,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4865","dbeaver/dbeaver","26e9650f74c761af99e9a7254553f583460e6e99",6,"2018-11-10 00:42:46+03:00","#810 SQL Server: unique keys model
",228836,2953,75015,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4866","dbeaver/dbeaver","45479193aa1a660ed5d44e0218206a2a70a88948",8,"2018-11-10 15:49:40+03:00","#810 SQL Server: data types model
",229093,2954,75006,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4867","dbeaver/dbeaver","197fe736a04f222b796f42d7faa0bc9a6db6b4ee",3,"2018-11-10 21:00:18+03:00","#810 SQL Server: check constraints and triggers
",229298,2956,74710,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4868","dbeaver/dbeaver","21e74b0dd00a34b2e30d7cee3ac7612cf8914ba4",3,"2018-11-10 22:49:04+03:00","#810 SQL Server: foreign keys. Object with ID
model
",229411,2957,74732,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4869","dbeaver/dbeaver","e446481dfb7bf0fd272f646954f726a4c3a2d719",10,"2018-11-10 23:40:05+03:00","#810 SQL Server: synonyms, sequences and schema
data types
",229610,2959,74775,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4870","dbeaver/dbeaver","aa4f243ac727d8f586d95a1a0616447959373035",36,"2018-11-11 01:27:22+03:00","#810 SQL Server: views, procedures
",230009,2964,74928,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4871","dbeaver/dbeaver","9396fe20c774b8bda472c22a6c5abb6b2076e0fb",3,"2018-11-11 13:47:38+03:00","#810 SQL Server: procedures/parameters
",230117,2964,74929,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4872","dbeaver/dbeaver","6867f6eb44ceec2cbea77561f1fb206ba49aaecf",4,"2018-11-11 17:52:24+03:00","#810 SQL Server: triggers + fixes
",230272,2966,74972,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4873","dbeaver/dbeaver","51ec7f6a8882213bb76e4ddce7ad4abf770f45e2",1,"2018-11-12 00:24:53+03:00","Postgre column/privilege editor refresh fix
",230419,2968,75013,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4874","dbeaver/dbeaver","225d74d0b457c283e7e0fce4d75a5e2183a5b483",3,"2018-11-12 11:27:24+03:00","#810 SQL Server: constraints and indexes managers.
DDL gen fix
",230590,2971,75091,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4875","dbeaver/dbeaver","75f5dcf204cb3f69ea3dc4d6b5f5593fbfa881a2",10,"2018-11-12 13:23:35+03:00","Sync deadlock fix (cache clear).
",230637,2971,75048,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4876","dbeaver/dbeaver","a778c8e5807b3f0dc07536ae8d73099eb9067781",1,"2018-11-12 13:48:05+03:00","#810 SQL Server: check constraints in DDL
",230724,2972,75086,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4877","dbeaver/dbeaver","1dad619afa8493abd07233171db772570f581c7b",5,"2018-11-12 22:19:20+03:00","SQL hyperlinks navigation fix
",230816,2972,75092,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4878","dbeaver/dbeaver","ccf7243fc583a5c68fcb10f35a65ff668071a758",1,"2018-11-15 19:25:16+03:00","#4618 RSV handlers refactoring. Stub for pannels
shortcuts
",231219,2975,75169,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4879","dbeaver/dbeaver","077b97bf31b00b4944feb94f7672341fd672c569",5,"2018-11-18 00:21:44+03:00","#4414 PG: data type definition (base)
",231393,2975,75182,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4880","dbeaver/dbeaver","8ca361ce176946b217314ab30806a6b063b05a1b",1,"2018-11-27 22:51:38+01:00","optimize meta data query performance and organize
scripts
",231577,2977,75222,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"4881","dbeaver/dbeaver","358538f8e25bb0c1497080140cf589b5cfb2947b",1,"2018-12-08 13:18:58+01:00","support for limit statement in exasol
",232009,2982,75296,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"4882","dbeaver/dbeaver","13f2092ff0df357b107c5516682d5e4408db0b5b",2,"2018-12-08 17:39:37+03:00","UI interface API
",231992,2981,75296,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4883","dbeaver/dbeaver","63cd9ca86e4fcec2041b26b423cb7c5b0378d664",1,"2018-12-14 13:56:26+03:00","SQL utils refactoring
",232768,2993,75502,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4884","dbeaver/dbeaver","8fb2aebf43582a0bf7df1faf276b952b2f808864",11,"2018-12-14 16:43:49+03:00","SQL API refactoring
",232881,2996,75568,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4885","dbeaver/dbeaver","1fc51bc25468cdede4d3b795f7b23dd0526949a6",1,"2018-12-17 19:16:49+03:00","#10 Dialogs refactoring. SQL editor + RSV
refactoring
",232886,2996,75571,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4886","dbeaver/dbeaver","fa01a401ea1a2b2c92f60cd14b0ff24c9f8f4a03",2,"2018-12-18 19:17:55+03:00","#10 Editors model refactoring (get rid of
DBeaverCore)
",232964,2996,75573,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4887","dbeaver/dbeaver","6ceedae4825dd0c5b4cf6955e5fba3c54e9ca6d2",3,"2018-12-18 20:21:20+03:00","#10 Editors model refactoring (ui.editors.base
plugin)
",232964,2996,75560,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4888","dbeaver/dbeaver","674b279172e334ffc35a51be61a2a0301b8c098f",1,"2018-12-20 17:35:44+03:00","#4627 RSV: show target table name in link's
tooltip
",232923,3002,76060,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4889","dbeaver/dbeaver","1e939ec51c97bb36babf908304a50c1a127dd9e7",3,"2018-12-14 14:54:36-05:00","Hide partition tables from the table list under
schemas for greenplum.  [#162462448]
",233019,3006,76089,"Gavin Shaw and Nikhil Pawar","gshaw+npawar@pivotal.io","Dmitriy Dubson","d.dubson@gmail.com"
"4890","dbeaver/dbeaver","c75aebba2e595f1da77bccbd9a94d5760fad3677",2,"2018-12-24 19:39:03+03:00","#10 UI packages refactoring
",233390,3015,76235,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4891","dbeaver/dbeaver","6b77071cb3438e50a4075a67f033be4004eb84d5",6,"2018-12-30 21:54:34+03:00","#4824 PG: aggregate functions reading
",234077,3031,76651,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4892","dbeaver/dbeaver","0dbb99f25ed3aff539203f2d86b49d01ffa3b4cf",1,"2018-12-30 23:54:21+03:00","#2051 Command context model refactoring. DB lazy
instance. PostgreSQL database altering.
",234184,3032,76677,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4893","dbeaver/dbeaver","c582eb150b07ba9071b37d8655006bafca6d1e88",9,"2018-12-31 12:30:59+03:00","#2284 PG: rule support added
",234429,3037,76773,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4894","dbeaver/dbeaver","a135dc627bed016455958463f27af6623e19fdce",1,"2019-01-01 19:58:31+03:00","#10 SQL Editor extraction: move to ui.editors.sql
",234534,3044,76904,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4895","dbeaver/dbeaver","7bdb833fed7204d705ce8383be3cbf89da9f748b",1,"2019-01-02 15:29:18+03:00","Tools context menu fix
",234580,3045,76922,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4896","dbeaver/dbeaver","cbdb9584170700c6d0bdf325dbef105b145f98ba",1,"2019-01-02 15:30:46+01:00","add priority group
",234657,3045,76915,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"4897","dbeaver/dbeaver","b78d7eb75e814416e23e70287e68ecea67794f48",3,"2019-01-08 23:44:40+03:00","#4904 PostgreSQL: composite dat types read fix
",236401,3060,77133,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4898","dbeaver/dbeaver","3a1b86ec01d87314d8992c24377d203ec733c8ac",2,"2019-01-09 12:22:03+03:00","Resource handlers: lazy activation
",236505,3060,77135,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4899","dbeaver/dbeaver","e3f3bfb02ee7e9e5ba9ca14429a73ce1e8b6b2fa",1,"2019-01-11 22:41:23+03:00","#4963 Support big icons for drivers. Vertica,
SQLite, Exasol icons update
",236983,3065,77221,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4900","dbeaver/dbeaver","d0b0f7ea7bb5f2003c8d01dc12ef0970c4e14595",1,"2019-01-12 13:15:27+03:00","#4983 SQL Server: trigger manager
",237159,3066,77241,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4901","dbeaver/dbeaver","0420bb989cab70d60ee900230f841938a3b4082f",1,"2019-01-13 10:48:53+03:00","#4990 SQL Server: auth schemas impl
",237325,3070,77358,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4902","dbeaver/dbeaver","5db62334bf4cb555de0551040726fcd19ba66fd4",1,"2019-01-13 13:24:47+03:00","#2488 SQL Server: procedure manager
",237427,3072,77357,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4903","dbeaver/dbeaver","e9613b337c28bb44309687dfa7d02ea4a97533a0",1,"2019-01-15 20:37:47+03:00","#5009 SQL Server: table references read
",238314,3079,77516,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4904","dbeaver/dbeaver","db6ffe16f9f9236d76f7ecf231fade6a5e27af42",1,"2019-01-16 22:41:05+03:00","#4121 Tabbed drivers viewer
",238458,3078,77476,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4905","dbeaver/dbeaver","57c1ca16fffcbbe1028d614a30a8eeac50cfa67d",3,"2019-01-17 09:33:38+03:00","#4954 ERD/VQB: duplicate alias generation fix
",238533,3079,77499,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4906","dbeaver/dbeaver","c60909f4071e77e4ce3e208d987cffc96b83fcc8",1,"2019-01-18 01:21:56+03:00","#4121 Driver categories
",238995,3084,77602,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4907","dbeaver/dbeaver","75c1087c3d10f318545cccd59b645f3fa8ceca6a",2,"2019-01-22 18:02:42+03:00","Explain plan view refactoring
",239340,3088,77684,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4908","dbeaver/dbeaver","90b861b2859be717114bc2a2c899af9be97fe4fb",1,"2019-01-23 15:42:13+03:00","Plan model refactoring
",239682,3094,77881,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4909","dbeaver/dbeaver","149cf61564d1a3122d216e699f252aceaf0e9805",1,"2019-01-23 19:19:55+03:00","#84 Plan viewer toolbar
",239734,3094,77804,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4910","dbeaver/dbeaver","a664ee1dbe323af1721e5edafd58624509f4c85c",9,"2019-01-24 15:35:51-05:00","GP: Add 'EXECUTE ON' clause to Function
declaration generation  - GPDB 6 has a concept of
execution locations of functions, which can be
`MASTER`, `ALL SEGMENTS`, and `ANY`. - GPDB 5 and
below do not support this feature.
",240490,3106,77920,"Dmitriy Dubson","ddubson@pivotal.io","Dmitriy Dubson","ddubson@pivotal.io"
"4911","dbeaver/dbeaver","9ddc6b79e0e3e4a71c29f310fb83a7dc5c0d12c7",5,"2019-01-29 15:37:40+03:00","Transaction log viewer fix (filters)
",240798,3108,77969,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4912","dbeaver/dbeaver","b7a245e51abd0a0b70c50b870dad9355d9e1db80",4,"2019-01-30 15:42:23+03:00","Oracle Ref Cursor view dialog
",240815,3108,77970,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4913","dbeaver/dbeaver","8a9ed486ca2420891a63f15e249a5482e47a2687",7,"2019-02-03 00:31:32+03:00","#2855 Export from multiple queries
",241282,3114,78035,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4914","dbeaver/dbeaver","766989d53117a030eeb290510afc38048ff2659d",1,"2019-02-03 09:08:11+03:00","#5186 MView edit + comment fixes
",241309,3114,78033,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4915","dbeaver/dbeaver","9045bcda975b57aac09c3dbd9544aa79e3e9c759",1,"2019-02-04 20:14:25+03:00","#5191 Dashboard view, commands stubs
",241557,3122,78146,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4916","dbeaver/dbeaver","8d71995547b1936e1b44a387bed80b428e14275f",1,"2019-02-04 21:42:07+03:00","PG data type model
",241583,3122,78148,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4917","dbeaver/dbeaver","ddda092b00e2a2be266196f222e2198af1220e94",3,"2019-02-05 09:31:44+03:00","#5191 Dashboard model + renderers
",241913,3136,78399,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4918","dbeaver/dbeaver","f52acb855064d682a704a473e7f392db1cf6701d",1,"2019-02-05 17:39:58+03:00","#5191 Dashboard sizes calc
",242150,3141,78505,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4919","dbeaver/dbeaver","6dacf48db6d60908e7e75f6e668a5d44dbcada1a",1,"2019-02-06 13:49:27+03:00","#4209 Dashboard updater
",242386,3148,78641,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4920","dbeaver/dbeaver","a3a97d956c2b857ea94177387bb8df6d86449784",1,"2019-02-07 18:58:27+03:00","#4209 Custom dashboards
",243047,3159,78861,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4921","dbeaver/dbeaver","79af0977446dd60782c626ce666209420cff60d2",5,"2019-02-07 22:40:39+03:00","#5224 Data editor: new array value creation
support. PG enum value handler fix.
",243205,3160,78886,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4922","dbeaver/dbeaver","aefb8904a8ebd3a2a4ee06ed96c813e4de408ee1",1,"2019-02-10 10:56:10+03:00","Resultset features model. Disable charts for
timeseries results
",244006,3164,78957,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4923","dbeaver/dbeaver","bf84b518fbbfdab8014dbbe47983ea7981725f08",2,"2019-02-10 13:53:16+03:00","#4209 Dashboards: model refactoring (view type)
",244043,3166,78995,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4924","dbeaver/dbeaver","262adbdc1c0e7e53ededd14dc8fc5adba1f038a0",2,"2019-02-11 00:50:08+03:00","#4209 Dashboard edit
",244765,3171,79106,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4925","dbeaver/dbeaver","c3e83bad899c3c9705c48a9e18981ce5ce28f3e9",1,"2019-02-13 23:17:47+03:00","#4209 Dashboards: map queries model
",245161,3174,79191,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4926","dbeaver/dbeaver","cd4a671d7fcbdade1820e45f8f880c0e6f50ed82",2,"2019-02-14 23:44:53+03:00","Config parsers fix
",245362,3177,79343,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4927","dbeaver/dbeaver","cb987a8900a333024e8df0df5056d2bc020b7b17",1,"2019-03-02 21:32:00+03:00","#5383 Navigator filters fix (container object
identification)
",246405,3191,79655,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4928","dbeaver/dbeaver","9b26ff1dc125c13fa3d0ff39651a854acfabda1d",1,"2019-03-02 21:59:50+03:00","#5370 Composite (struct) values string
representation
",246420,3191,79655,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4929","dbeaver/dbeaver","941114f576d4f5c33a200f86da736f066115a45e",3,"2019-03-02 23:35:35+03:00","#5378 Object editors open fix (Object input id
uniqueness)
",246446,3191,79653,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4930","dbeaver/dbeaver","a713e17c50874a570c8d5d6ae0fd161a64a86e4f",5,"2019-03-03 14:19:53+03:00","#5364 PostgreSQL: attribute collations support.
Collation properties and place in navigator.
",246553,3191,79655,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4931","dbeaver/dbeaver","3ae4abc541d3177856311b5477b642b29dae31fe",14,"2019-03-05 09:41:51+03:00","PG: permission model refactoring. ACL editor
model.
",246973,3194,79777,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4932","dbeaver/dbeaver","10a0bbb02e13f622e062153e253a002476863a4c",1,"2019-03-05 13:12:57+03:00","ACL editor
",247066,3198,79838,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4933","dbeaver/dbeaver","918a56366022856c82e362dcff2d34371b62cd31",4,"2019-03-09 12:09:38+03:00","Value handler search NPE fix
",247217,3200,79968,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4934","dbeaver/dbeaver","70e13fd050768870500f0943d35efc3486dc5337",5,"2019-03-13 18:32:27+03:00","Paged value manager
",247420,3203,80031,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4935","dbeaver/dbeaver","49d24aa68178116c82332e275c853dea6bb72df1",1,"2019-03-25 20:31:38+03:00","MySQL catalog class name revert
",247865,3210,80174,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4936","dbeaver/dbeaver","8f91d4ca3ba5a44aec1557f2dedbe7d8823f63d3",1,"2019-03-27 12:16:15+03:00","#5585 BaseTextEditor: use plain IDocument
",247880,3210,80174,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4937","dbeaver/dbeaver","c06c366e5a3b668ab8d3b1ca4a5b0f949687b3b4",1,"2019-03-27 13:21:40+03:00","#4222 GIS viewer: lefleat JS POC
",247977,3212,80220,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4938","dbeaver/dbeaver","7d7d87f6296befbcb6f551f504c97b8e1dc41b5e",4,"2019-03-31 23:33:55+03:00","#5515 Data editor: error presentation
",248144,3214,80279,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4939","dbeaver/dbeaver","c45e19a8fa71305fc3186ddce8b10ac1d098fe50",3,"2019-04-03 12:43:38+03:00","Execution plan model refactoring
",248438,3232,80628,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4940","dbeaver/dbeaver","d1328d8781c7ba42d2a01dbcbff272a067f7932d",22,"2019-04-03 19:03:01+03:00","#5619 Data transfer: fetch size configuration
",248572,3233,80664,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4941","dbeaver/dbeaver","58712606e23d29dbfd78d49f89d387bfb2781a68",1,"2019-04-04 12:02:51+03:00","Named parameters prefix is now definded by SQL
dialect
",248608,3233,80663,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4942","dbeaver/dbeaver","1fcc928e3467aade2593886b292db87a5527d964",1,"2019-04-04 13:20:32+03:00","#5519 PG: plaintext exec plan parser
",248694,3236,80727,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4943","dbeaver/dbeaver","3878bb0cfe06c508e003f54e6f9b72159137465d",2,"2019-04-04 17:10:41+03:00","#3199 ERD: columns filter
",248772,3237,80747,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4944","dbeaver/dbeaver","6a18e8a7f2c06654744e62592024afdd34a698c7",1,"2019-04-05 12:45:10+03:00","#5651 ERD: node custom styles configuration
",249260,3242,80757,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4945","dbeaver/dbeaver","a2be437235e0b9a47af667328b43da65cd49336b",2,"2019-04-06 00:02:58+03:00","#10 Project registry refactoring
",249353,3242,80758,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4946","dbeaver/dbeaver","33c6ed30354a196295c6d52e3e4dde75218ee018",6,"2019-04-06 01:18:03+03:00","#10 Project registry bundle
",249361,3243,80785,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4947","dbeaver/dbeaver","1eaa74c27fba5dc7c22db735fdac787c4b74a906",1,"2019-04-06 09:18:42+03:00","#10 Drivers registry refactoring
",249372,3245,80841,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4948","dbeaver/dbeaver","031cf024226ed501d3975d1fe376c3afa13ad9c6",2,"2019-04-06 11:59:11+03:00","#10 Registry bundle refactoring
",249398,3246,80856,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4949","dbeaver/dbeaver","8ddc81c77feb6ff6384045c9b85a1322447ffb16",2,"2019-04-07 13:14:49+03:00","#5652 ERD model addition (ERDElement)
",249439,3247,80886,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4950","dbeaver/dbeaver","0485b43cd794785566e6d379e89e3d9d794d37d7",1,"2019-04-10 10:02:26+03:00","#5683 SQL indenter fix
",249914,3247,80897,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4951","dbeaver/dbeaver","4970d35a4dc7b4048bf70f0af4bae9e209c3fbf3",2,"2019-04-10 12:09:26+03:00","RSV: support non-referrer identifiers
",249928,3247,80900,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4952","dbeaver/dbeaver","d221836cac880ee6317b53e2138d926303cbc44d",1,"2019-04-11 12:11:44+03:00","#4553 Datasource and schema selectors events and
handlers.
",250580,3254,80999,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4953","dbeaver/dbeaver","099dc437fe6f4a79173650e3537dc3bf427bbc59",2,"2019-04-12 23:12:44+03:00","–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –∑–∞—Ä–∞–±–æ—Ç–∞–ª
",251015,3258,81057,"Andrew Khitrin","ahitrin@gmail.com","Andrew Khitrin","ahitrin@gmail.com"
"4954","dbeaver/dbeaver","3c5be892cfcc9d55b9d7f9aa34b8bf4a94e6fccd",1,"2019-04-13 17:19:12+03:00","#5168 SQL identifiers detect. Use extra characters
provided by driver. SQL Server dialect fix.
",251148,3261,81112,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4955","dbeaver/dbeaver","d2b94bb394fd2c9bc5a36baa489db0395d27e502",1,"2019-04-14 14:48:59+03:00","–ó–∞—Ä–∞–±–æ—Ç–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∞
",251243,3261,81110,"Andrew Khitrin","ahitrin@gmail.com","Andrew Khitrin","ahitrin@gmail.com"
"4956","dbeaver/dbeaver","ea36d6b448db78e2daa66f176e88beb6858f5c2f",1,"2019-04-15 18:52:43+03:00","RSV: buttons tooltips
",251573,3270,81364,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4957","dbeaver/dbeaver","b9a993a50304c8f5a9ccf5fea94d609c15e17e00",2,"2019-04-17 17:41:57+03:00","#4222 GIS ui bundle refactoring
",251863,3273,81416,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4958","dbeaver/dbeaver","72fb7e4a2a0766ada824d312a7cc391f568f25ce",5,"2019-04-17 18:10:29+03:00","#5730 GIS RSV presentation
",251962,3275,81489,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4959","dbeaver/dbeaver","501b83da26f947b534aa339c765037429979ba63",1,"2019-04-17 19:37:01+03:00","#5730 GIS RSV presentation
",252009,3279,81557,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4960","dbeaver/dbeaver","b2f74fdc99e644f036b27571aa06e252ab1c2d19",5,"2019-04-18 11:09:57+03:00","Data filters notifications
",252141,3280,81623,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4961","dbeaver/dbeaver","493a92f5335fa2dd43bcfeec9ea50fb1fddb78e3",3,"2019-04-18 12:54:31+03:00","#4222 GIS tooltips for individual values
",252231,3282,81665,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4962","dbeaver/dbeaver","f9c4db44132348c8eecc7a4623fc6839b6e5da99",1,"2019-04-18 18:38:51+03:00","#4222 SRID selector dialog
",252522,3283,81700,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4963","dbeaver/dbeaver","fa13fcc9a3eb9abc84e243f895cd2c34dcf324cf",1,"2019-04-20 11:04:37+03:00","#4953 Create object menu refactoring
",252876,3286,81779,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4964","dbeaver/dbeaver","953a9cf07d26c14b4463e2affcc369b9cc611c56",1,"2019-04-20 12:38:28+03:00","Create menu fixes. Resources create action
refactored and improved
",252960,3288,81815,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4965","dbeaver/dbeaver","5e88a999289680d39ae8d9a5f87cf25d0283fafe",1,"2019-04-21 10:16:30+03:00","PG tables model refactoring. Redshift model
adaptation
",252999,3288,81821,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4966","dbeaver/dbeaver","9cc8e4f24f81c5e1c411a08e277bcc579b9e680a",4,"2019-04-25 11:55:26+03:00","Text size calc refactoring
",253347,3289,81836,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4967","dbeaver/dbeaver","7905d55f2c94856780c9268601613884ad597763",1,"2019-04-28 20:27:14+03:00","Database editors refactoring
",253958,3306,82192,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4968","dbeaver/dbeaver","88acbf64e5e99e30b03e339aea539c0c75a45ad0",2,"2019-04-29 00:08:12+03:00","Multi-language support: DBX model refactoring
",254046,3313,82315,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4969","dbeaver/dbeaver","21cc226b658dd9f68de7c688b7ae7bfb7b2073fb",4,"2019-04-30 00:09:35+03:00","RSV: attribute transformers for custom queries and
pseudo attributes
",254113,3313,82308,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4970","dbeaver/dbeaver","4d5311afdb0fc695dda98cb0b29d27f180b031c7",1,"2019-04-30 18:01:17+03:00","Data viewer: navigate to multiple rows fks/refs
",254233,3315,82353,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4971","dbeaver/dbeaver","dde9cec69a713e6c343119572ef62e17632de6f9",1,"2019-05-01 13:40:52+03:00","#5800 Orphan virtual entities model
",255044,3326,82586,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4972","dbeaver/dbeaver","e914de8cc4d480e28a18127dedad7a5e1fbe463b",8,"2019-05-04 12:41:11+03:00","#5384 Virtual FK model
",255388,3330,82658,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4973","dbeaver/dbeaver","0535304b68e404592ee7ac252c5e64a1bf3c3ddb",5,"2019-05-04 17:59:53+03:00","#5384 Local structure config dialog
",255582,3331,82677,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4974","dbeaver/dbeaver","34628d66f9fb1f2c28620634fcd67322d1e36041",7,"2019-05-04 22:46:14+03:00","Data viewer: colors settings dialog
",255886,3331,82696,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4975","dbeaver/dbeaver","7a3e6ee4ae8fdcc137ea12735867eac2e9c0061f",2,"2019-05-05 00:20:48+03:00","Data viewer: gradient colors for ranges
",255954,3331,82706,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4976","dbeaver/dbeaver","474e91e07e537822ae3436800c03acb124799970",10,"2019-05-05 11:07:25+03:00","DBUtils refactoring.
",256019,3332,82723,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4977","dbeaver/dbeaver","ab756594223ede8cebe6aa17c00aef0d391fde61",4,"2019-05-05 18:22:25+03:00","Diff diff UI fix
",256063,3332,82724,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4978","dbeaver/dbeaver","39cb468676ccd582155b28e6ecf8ecc532423485",2,"2019-05-12 12:15:27+03:00","Annotations
",256331,3333,82727,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4979","dbeaver/dbeaver","016a7e99a5906a9d73918fd7e3dbf793ff3bebb5",2,"2019-05-12 22:43:07+03:00","Geometry value bind/copy
",256404,3334,82746,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4980","dbeaver/dbeaver","27fad3d815695328b3fd639726608f9e43901db8",8,"2019-05-12 22:53:30+03:00","Annotations
",256406,3334,82746,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4981","dbeaver/dbeaver","5785e7c368968ef19897945db9da667636eb45b5",6,"2019-05-12 22:53:39+03:00","Geometry SQL representation fix.
",256421,3334,82746,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4982","dbeaver/dbeaver","f96edf82681c0212065965b322a20edc5a23648f",8,"2019-05-13 01:45:58+03:00","Annotations (explain plan)
",256561,3334,82744,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4983","dbeaver/dbeaver","046029cb3f5df7eb162b1991496efab1dc6259b9",3,"2019-05-13 01:58:53+03:00","PG: explain plan (text format)
",256577,3334,82744,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4984","dbeaver/dbeaver","c39a6a073075ea9f5a69899d1076fe65e78328ce",4,"2019-05-15 23:00:08+03:00","Navigator: Create menu refactoring
",256726,3336,82882,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4985","dbeaver/dbeaver","533c286b4384611408a16bf3d2a12f795136ad66",1,"2019-05-16 00:06:29+03:00","Search refactoring (core -> ui.search)
",256736,3337,82900,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4986","dbeaver/dbeaver","a7e2deb9c2a8cb7b05d75510b0078069f816e981",6,"2019-05-16 13:34:39+03:00","Value binder model
",256757,3338,82919,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4987","dbeaver/dbeaver","25d6bf2e6408537ff32f571b6f42ebd5224a2049",2,"2019-05-16 17:05:08+03:00","GIS value editor: SRID editor
",256863,3342,82989,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4988","dbeaver/dbeaver","5845e8cf19de15c0ee02b792956750e550f93cfb",2,"2019-05-16 19:15:41+03:00","Oracle: module rename, geometry support
",256867,3342,82989,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"4989","dbeaver/dbeaver","011d9b9197b80cd41e34a44e25a596a2be8e361f",3,"2019-05-16 23:26:56+03:00","Compelx value editor fix
",256870,3342,82989,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4990","dbeaver/dbeaver","45998281a43d01f14bfddc1b70ee938cfe3135b9",1,"2019-05-18 14:44:07+03:00","#5867 NAvigator tree: child nodes reading fix
",256985,3342,83008,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4991","dbeaver/dbeaver","02e70614a058e91213a73215adb6823988f45223",5,"2019-05-20 22:21:25+03:00","#5951 Spreadsheet columns coloring
",257132,3342,83018,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4992","dbeaver/dbeaver","9fcfce16005920a4071a22c955a37a5e8022a5c8",1,"2019-05-25 19:58:32+03:00","Navigator utils and SQL completion refactoring
",257305,3343,83045,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4993","dbeaver/dbeaver","faa77fab8c69235d568227a51f6b3eeb38be6913",1,"2019-05-26 12:37:06+03:00","SQL completion model refactoring
",257419,3353,83236,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4994","dbeaver/dbeaver","5c424fd80e447334dc8b82884a2e38ddcde24225",1,"2019-05-26 15:05:52+03:00","SQL completion model refactoring
",257498,3354,83256,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4995","dbeaver/dbeaver","1aff7d50f750b94b925dd9529633d09dbb83b94e",3,"2019-05-26 19:37:26+03:00","#5993 Navigator: object nodes dups (ext
contributions)
",257509,3354,83256,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4996","dbeaver/dbeaver","9fbfb5afc2f1b3c914d44f05f561bc843a138321",10,"2019-05-27 00:09:43+03:00","#5905 SSL: self-signed certificates support
",257604,3355,83273,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4997","dbeaver/dbeaver","e521c9a04ae98b25edc397ba013cf21df67a2acf",1,"2019-05-27 01:04:31+03:00","Database server details. Property view enhancement
(support plain maps and collections).
",257714,3356,83296,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4998","dbeaver/dbeaver","69197f1470c5147feaa844e973b35cb9cc27576e",1,"2019-06-02 18:44:01+03:00","Execution plans load/save refactoring
",257716,3354,83305,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"4999","dbeaver/dbeaver","89bc76c2415b983b83940477033964cc7cef615a",1,"2019-06-02 18:48:00+03:00","Execution plans load/save refactoring
",257726,3354,83305,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5000","dbeaver/dbeaver","3763a40abb0a92e28fa3761a88aac1e7832df056",3,"2019-06-02 23:24:48+03:00","MySQL execution plan serialize/deserialize
",257864,3354,83312,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5001","dbeaver/dbeaver","a90054f408e6ae8f49b59a6c58755e0af65d3bc3",5,"2019-06-03 20:18:23+03:00","Data filters model refactoring
",257891,3354,83317,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5002","dbeaver/dbeaver","f55ed9148d3826d634a16cc44b338089b50d6de0",18,"2019-06-03 21:55:17+03:00","Data filter refactoring
",257907,3354,83317,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5003","dbeaver/dbeaver","793f1bc10a7dbdec1cea6dfc73bfa8cd6ece974e",2,"2019-06-07 19:55:44+03:00","187 No readable error message appears
",257931,3356,83337,"Andrew Khitrin","ahitrin@gmail.com","Andrew Khitrin","ahitrin@gmail.com"
"5004","dbeaver/dbeaver","f3a20dbea5b32b3ef90bb0a9feaededc4a45828d",7,"2019-06-08 22:09:47+03:00","Groupping panel - null query check added
",257937,3356,83345,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5005","dbeaver/dbeaver","87a16d9915604eeaaf1adfb908c28ad1fe89fc4d",2,"2019-06-09 16:35:35+03:00","Multi-language support (model)
",257958,3356,83350,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5006","dbeaver/dbeaver","fc4ceeeba52af79ab04531dfeb145140493c48e8",1,"2019-06-09 16:48:50+03:00","Multi-language support (model)
",257961,3356,83350,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5007","dbeaver/dbeaver","d4286b026637242794fc6e8f6a864bde32f8679c",1,"2019-06-09 13:57:01-03:00","Issue 5810 - Show Triggers on SAP HANA DB- Tested
Sorry, my last change was not tested, this oneI
tested on HANA DB.  Could you please include in
next release?  Thanks in advance
",258001,3356,83350,"correiadn","correiadn@users.noreply.github.com","GitHub","noreply@github.com"
"5008","dbeaver/dbeaver","9568df5f48b6763a2a3991d909eb5253a3b6141f",1,"2019-06-15 09:10:31+03:00","#6074 PG: cursor name extraction
",257993,3356,83351,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5009","dbeaver/dbeaver","47513bbe258b119fc910b896e5439026f495a493",2,"2019-06-15 10:29:14+03:00","#6074 PG: ref cursors fetch fix. Cursor viewer
dialog fix.
",258055,3357,83385,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5010","dbeaver/dbeaver","b483fa037c4bcdb462dda4d5ed2a41f9f2001f6b",1,"2019-06-16 19:43:09+03:00","#6008 ERD: keep elements position/state on diagram
refresh
",258090,3357,83387,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5011","dbeaver/dbeaver","411b277f6b135a25ab2038ff7e42f763b227f14a",3,"2019-06-21 12:12:58+02:00","#6015 PG: temporal accessor handler
",258121,3359,83434,"serge@jkiss.org","lfyeyf[eq87","serge@jkiss.org","lfyeyf[eq87"
"5012","dbeaver/dbeaver","3d2938dad6b350f19a334273b98dc5d867139998",5,"2019-06-29 20:39:11+02:00","#6163 Property value read: make value formatting
optional (for sorting)
",258485,3366,83555,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5013","dbeaver/dbeaver","c86b3a4a79ba73bb86e78f2cb10d8c011c04b159",1,"2019-07-02 00:02:48+02:00","Object maker model refactoring (custom options
support)
",258824,3367,83582,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5014","dbeaver/dbeaver","9bd68ccc447dd37466e4a451830fa32313916b80",2,"2019-07-02 12:04:58+02:00","Navigator: detect right container for new objects
",258857,3368,83608,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5015","dbeaver/dbeaver","f967aa59fa19129394816550531b85ccb2ea7b73",80,"2019-07-02 13:55:19+02:00","Generic model refactoring (split tables and views)
",259012,3375,83737,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5016","dbeaver/dbeaver","351c30ba148c4536a158074308bcea13284c496b",12,"2019-07-02 20:48:02+02:00","UI configurator API refactoring
",259065,3376,83295,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5017","dbeaver/dbeaver","8a4ed76c0c5aed8dfcaf69747bd54e90964a2af8",1,"2019-07-02 21:45:54+02:00","Object manager API refactoring (use Object for
container as there can be different container
types)
",259117,3376,83296,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5018","dbeaver/dbeaver","497e805f8a173139d497fd1d18728c8be722d6a7",1,"2019-07-03 17:06:45+02:00","#5587 Data edit: preview dialog, save confirmation
dialog
",259347,3381,83399,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5019","dbeaver/dbeaver","f63655e9b93b9dcf6a21186a944bfc865034b2d9",2,"2019-07-03 19:03:52+03:00","#6203 PG Partition Manager
",259134,3376,83238,"Andrew Khitrin","ahitrin@gmail.com","Andrew Khitrin","ahitrin@gmail.com"
"5020","dbeaver/dbeaver","c82e2ac6082794b6e7ad7c08334fab61867070d7",12,"2019-07-03 18:06:56+02:00","#5587 Data changes script get API refactoring
",259388,3381,83399,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5021","dbeaver/dbeaver","4ac8acf9820c4b08f025a57bcd1714070e3ec293",2,"2019-07-03 23:42:00+02:00","#5587 Cascade delete handle
",259557,3382,83430,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5022","dbeaver/dbeaver","30957a7801a8ac9a5fe2222aa0322515ddc3ef9d",2,"2019-07-04 11:12:24+02:00","Model refactoring (table container is any abject
now)
",259570,3382,83431,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5023","dbeaver/dbeaver","dd930dff6977cb6f7550e444aa2dd235d82604b5",1,"2019-07-04 18:53:54+02:00","#6140 SQL parameters syntax extension (Jasper)
",259638,3382,83428,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5024","dbeaver/dbeaver","7ee57d885d4e261654f39405d58c9e12bb729a57",12,"2019-07-05 00:20:20+03:00","#6051 Extension manager
",259931,3387,83521,"Andrew Khitrin","ahitrin@gmail.com","Andrew Khitrin","ahitrin@gmail.com"
"5025","dbeaver/dbeaver","1c0191eb7ff93290715b47ced7a2b12065c42507",3,"2019-07-05 16:05:44+02:00","#6201 Clickhouse: support type aliases
",260364,3392,83754,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5026","dbeaver/dbeaver","3eb81e9bb1969e096d0aed0e59aba03176123b05",6,"2019-07-05 23:02:40+02:00","PG: description read fix
",260373,3392,83754,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5027","dbeaver/dbeaver","b1be4657978e1e4db9348a19a8b8d529c89d02e4",4,"2019-07-06 15:53:08+02:00","#6233 Clickhouse array support fix
",260423,3394,83795,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5028","dbeaver/dbeaver","cb53d43a6e493965dd766e98cb4d3fb4f26b6576",5,"2019-07-06 15:57:37+02:00","Data persister: obtain monitor when needed
",260438,3394,83795,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5029","dbeaver/dbeaver","aa5e5e3d31e42b3f0ed449f9c03203fe4d390bdf",8,"2019-07-06 23:35:30+02:00","Icons fixes
",260441,3394,83795,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5030","dbeaver/dbeaver","376fe3887ac1ae15f21ca039d7f7aa467bf76840",2,"2019-07-06 23:35:57+02:00","#5934 References panel
",260533,3397,83854,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5031","dbeaver/dbeaver","aa4d0884258467c510fa4323ed17ac250ffff1bc",4,"2019-07-07 22:14:01+02:00","#5934 Data viewer: references panel
",260699,3397,83866,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5032","dbeaver/dbeaver","110966cdb29335457fbd81734b88bd48a05babcc",43,"2019-07-08 18:18:53+02:00","PostgreSQL table model refactoring
",260755,3399,83914,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5033","dbeaver/dbeaver","01270d24f56621ce74687d984729fe2560d7de47",8,"2019-07-08 18:52:51+02:00","#5934 References panel - show foreign keys
",260782,3399,83916,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5034","dbeaver/dbeaver","0041c8bdf58a2a6224cc277a9ab5c9def5621908",6,"2019-07-09 13:30:23+02:00","Config profiles model
",260818,3401,83955,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5035","dbeaver/dbeaver","777d92286e075a03b28c387a5f28841de9a20cca",29,"2019-07-09 23:09:15+02:00","Project metadata refactoring
",260930,3404,84029,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5036","dbeaver/dbeaver","bbbf6b7deb07fb0fa4801a8417cd37e8d7ea1bcf",4,"2019-07-10 11:57:51+02:00","Project metadata save/load
",261067,3404,84031,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5037","dbeaver/dbeaver","c75d0ffb573f24022d433458be98a1afcd5fdfb5",14,"2019-07-10 12:12:04+02:00","Document serialization refactoring
",261080,3404,84031,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5038","dbeaver/dbeaver","26cbe305e1730c669b2a15489c86a703ada75d3a",2,"2019-07-11 11:43:37+02:00","Datasources load/save update. Project migrate
procedure.
",261741,3410,84153,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5039","dbeaver/dbeaver","02997c609854608662ec75e7f237208bc1a09a0b",3,"2019-07-11 14:54:42+02:00","Datasources and virtual models serialization
",261941,3413,84210,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5040","dbeaver/dbeaver","7ff4e04e2d0c548133a3de2abb5379b01ae76205",1,"2019-07-11 16:00:32+02:00","Datasources and drivers serialization
",262151,3417,84289,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5041","dbeaver/dbeaver","c1df2be89a12993fba965eacad908eea7cdc230f",27,"2019-07-12 00:21:56+02:00","Virtual model parser
",262271,3417,84301,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5042","dbeaver/dbeaver","7930d88ebf50d50cc82bd5072ba1a6095ccbd5e5",2,"2019-07-12 09:18:13+02:00","Project metadata migration fixes
",262275,3417,84301,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5043","dbeaver/dbeaver","b36408660594ec97c7467a8a79ef21dee3754407",3,"2019-07-12 12:01:44+02:00","Connections config parser
",262434,3417,84313,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5044","dbeaver/dbeaver","5100eea44238f68735574c3e69ba49b436b2c318",3,"2019-07-12 15:50:11+02:00","Connections, virtual model, filters config parser
",262571,3417,84333,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5045","dbeaver/dbeaver","923c7e1dd81a2f7856431e81d2e9536c0c57e52b",2,"2019-07-12 18:19:33+02:00","Network handlers UI change (show all one the main
page
",262644,3418,84380,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5046","dbeaver/dbeaver","cbac6a632629d79e2b6120e10daa69bd4a6f2f3c",2,"2019-07-13 12:46:15+02:00","Config profiles model
",262746,3419,84413,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5047","dbeaver/dbeaver","60f1fb146e959fd9eb711faf5c73e31bbae25588",6,"2019-07-13 21:36:31+02:00","Network profiles page
",263113,3423,84622,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5048","dbeaver/dbeaver","651e8c376b480244bf64c7140c7dd5e2615f7de1",1,"2019-07-14 10:22:21+02:00","Network profiles save
",263191,3423,84627,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5049","dbeaver/dbeaver","ab7922c1e1cb91ea146ad540f498629e662bcea1",1,"2019-07-14 23:58:14+02:00","Network profiles save/load, secured credentials
saver
",263255,3423,84628,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5050","dbeaver/dbeaver","57cec8ddfdbbf311261ebd0c7f957fdcd80a085f",9,"2019-07-15 15:01:26+02:00","Datasource config: separate connections config and
user credentials
",263394,3424,84658,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5051","dbeaver/dbeaver","effffa35c3137e5988123de58130e03a7d0fa429",1,"2019-07-16 13:50:30+02:00","#6286 Snowflake stored procedures def read
",263533,3424,84665,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5052","dbeaver/dbeaver","834c84379513d302d86dc17c37a4cc5ee7aa83a2",3,"2019-07-16 16:12:59+02:00","Network profiles management fixes
",263546,3424,84665,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5053","dbeaver/dbeaver","2b4853d4c285ffbfb7c9f0adf13823265fba9308",7,"2019-07-16 18:57:27+02:00","Virtual model binding fix
",263579,3424,84671,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5054","dbeaver/dbeaver","be24c130da062ac40e6e8349385c11ee48fd0602",4,"2019-07-17 13:52:09+02:00","#5930 Google Spanner extension
",263783,3432,84821,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5055","dbeaver/dbeaver","1526f8b92fb7de946f0139daef42ed94d19074f8",1,"2019-07-17 19:21:49+02:00","migration dialog text fixed
",264123,3439,84980,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5056","dbeaver/dbeaver","ec424c3f2d21c448e7d68fe60e774f8500faeed9",1,"2019-07-18 11:38:55+02:00","#5384 Virtual entity edit dialog improvements
",264183,3439,84996,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5057","dbeaver/dbeaver","316121d0522ea934ab83717bb56a39d32d05134c",13,"2019-07-18 14:12:41+02:00","#5384 FK create dialog: container selector. Nav
model refactoring
",263700,3439,84959,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5058","dbeaver/dbeaver","d8938f2062d2c997942e177c05552e59d3abf898",5,"2019-07-18 16:30:52+02:00","#5384 FK create editor (add/remove)
",263787,3440,84977,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5059","dbeaver/dbeaver","a16b8c16df903d368de2f958942cbbf4dcd3819f",3,"2019-07-18 21:23:54+02:00","#5384 Virtual model additions. Find object by ID.
",263907,3440,84984,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5060","dbeaver/dbeaver","cf3758cceb85037e59215bfcf4ac926294afbac3",8,"2019-07-19 10:41:05+02:00","#5384 Virtual FK serialize/deserialize
",263984,3440,84967,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5061","dbeaver/dbeaver","f98ae7e2313a628ca612fb540db09b84a8b25cc8",18,"2019-07-19 11:30:29+02:00","#5384 Virtual FK navigation/references preview
",264014,3440,84969,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5062","dbeaver/dbeaver","22f5606c2ee244d49872f6a7b04e901d21f463d4",3,"2019-07-19 11:39:51+02:00","#5384 Virtual FKs in ERD
",264024,3440,84978,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5063","dbeaver/dbeaver","0cb4db18863f6fc7970cd1077e8a293020cd53ad",1,"2019-07-19 13:22:54+02:00","Minor fixes
",264058,3440,84995,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5064","dbeaver/dbeaver","42cebb6ce097d1f0a7bd2caf98eceb0f7710f80b",5,"2019-07-22 17:50:00+02:00","#6281 Advanced proxy configuration UI. Network
handlers descriptors model additions
",264741,3450,85187,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5065","dbeaver/dbeaver","ccc2cc9cded728200c707c9a217958d11435d3c0",1,"2019-07-23 15:02:02+02:00","#6264 PG: unlogged and temporary tables DDL fix
",264763,3451,85206,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5066","dbeaver/dbeaver","3a5c1476f25b8e58fdc099e683371c9764547642",49,"2019-07-23 16:40:42+02:00","Annotations + l10n
",264772,3451,85211,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5067","dbeaver/dbeaver","f8624134feb13fcbc3951558eb65c04d14e0e710",1,"2019-07-23 20:56:29+02:00","Oracle data type resolution fix (public synonyms)
",264795,3451,85238,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5068","dbeaver/dbeaver","09e0857e9bc5416c2809891bdc6c89b8b3d42a5b",2,"2019-07-24 13:49:12+02:00","#6337 Natural unique key detection fix. Virtual
keys definition dialog fix
",264818,3452,85256,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5069","dbeaver/dbeaver","a1c06914ea03f030ea5789d8868dc3a7d2d40ec8",84,"2019-07-25 11:31:34+02:00","Cache classes annotations
",264910,3451,85239,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5070","dbeaver/dbeaver","9ba1263f845a39f2e36181ec9d7742b2cbf02f2d",15,"2019-07-25 11:32:11+02:00","Oracle synonyms read enhancement (read on demand)
",264938,3451,85239,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5071","dbeaver/dbeaver","a8581966e71cc720598878da1112f44318a7e47c",1,"2019-07-25 12:19:55+02:00","Annotations update
",264960,3451,85239,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5072","dbeaver/dbeaver","b79a2365d810824605e68a314b973380d2111a47",18,"2019-07-25 12:53:49+02:00","#2193 Data transfer: run pre/post transfer
queries. SQL Server: execute SET IDENTITY_INSERT
on demand
",265022,3452,85261,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5073","dbeaver/dbeaver","731ae8ceadc1dfebcf786d8e025d3eb983e6fe9e",3,"2019-07-26 12:15:29+02:00","#6218 Table list DDL generation redesign (check FK
links, split table DDL if possible)
",265248,3454,85330,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5074","dbeaver/dbeaver","d08bca443f5ff68346290e61cb5fb214d0736cc2",1,"2019-07-29 12:33:04+02:00","#6367 Columns filter fix (search by numbers and
strings)
",265307,3454,85348,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5075","dbeaver/dbeaver","35d12bf0105d5b030108ba83a7aa200580cfb669",1,"2019-07-29 14:33:44+02:00","Network handlers parser fix
",265314,3454,85348,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5076","dbeaver/dbeaver","a290b614dcf542b4090fc4eb1b2eb216227e9082",7,"2019-07-30 12:42:23+02:00","#6379 Data viewer: context menus redesign
",265343,3454,85343,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5077","dbeaver/dbeaver","5a816a162abaf7f1b6a7d885ae8d8b7ffb52a127",6,"2019-07-30 13:25:59+02:00","Annotations fix
",265343,3454,85343,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5078","dbeaver/dbeaver","b53776e66a2597cf8bccf61e1c8ce59836a0390f",3,"2019-07-30 15:15:22+02:00","#6379 Data viewer: hide/show columns actions
",265348,3454,85348,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5079","dbeaver/dbeaver","80d7e7b91736e052f12856d917f3404151d24c3a",2,"2019-07-30 20:17:59+02:00","#6379 Data viewer: color settings dialog
",265437,3454,85362,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5080","dbeaver/dbeaver","1d1ed5299ae58a34d7f93da3cc9888bb3b476cc4",1,"2019-07-31 09:55:08+02:00","#6379 Data viewer: color settings dialog fixes.
Virtual model edit fixes
",265433,3454,85386,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5081","dbeaver/dbeaver","d99237e88386c9feac9a699b62440840b3d17003",1,"2019-07-31 11:57:07+02:00","#6379 Data viewer: column tranaformers settings
dialog
",265524,3454,85370,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5082","dbeaver/dbeaver","4e2d10c9f0d20efb2a34bdfb58c19b9c1920c8e5",1,"2019-07-31 17:06:59+02:00","#6314 Logical association create UI
",265652,3454,85373,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5083","dbeaver/dbeaver","bcc05ba2695277c44382744ab4c56e85da19e2e9",5,"2019-07-31 18:05:22+02:00","#6314 Logical associations model, create and
render
",265703,3454,85374,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5084","dbeaver/dbeaver","d62f89831918b3295db404f8d932aab4a94bee56",2,"2019-08-02 13:22:12+02:00","#6411 Virtual relations save/load fix
",265766,3454,85372,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5085","dbeaver/dbeaver","8472d360b535610dd5e8abd339b7f6951dd25035",3,"2019-08-02 16:30:04+02:00","#6400 Multi SQL wizard: objects refresh fix
",265768,3454,85372,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5086","dbeaver/dbeaver","b97bf92877860b89a9c8914607728a2feae07217",1,"2019-08-02 17:34:48+02:00","#6381 Unresolved struct data types rendering fix
",265767,3454,85373,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5087","dbeaver/dbeaver","7d07d82a02cbd4c359c2d3170afe07a7f1e69b51",3,"2019-08-04 17:36:26+02:00","#6429 SQL Server: CHECK constraint create fix
",265792,3454,85373,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5088","dbeaver/dbeaver","de489fcc88faa8842beb920e4aa939ebf52a94e3",1,"2019-08-06 22:28:44+02:00","#4268 SQL command @export, SQL context pragmas
",266059,3457,85439,"serge@jkiss.org","serge@jkiss.org","serge@jkiss.org","serge@jkiss.org"
"5089","dbeaver/dbeaver","00b9af8ee0319720b11873dc965909c9a1cb3551",6,"2019-08-07 10:31:04+02:00","Spreadsheet code cleanup
",266051,3457,85439,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5090","dbeaver/dbeaver","4f1ee1c74e0aa2bf6822b2ef06b7332c441b0c4d",27,"2019-08-07 16:20:51+02:00","Dictionary/enum reading refactoring (support
cross-database queries)
",265542,3462,85535,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5091","dbeaver/dbeaver","123d000e800b8a803096fa257a454939d2241b82",2,"2019-08-07 17:05:05+02:00","ERD associations: show attributes for broken
associations
",265547,3462,85535,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5092","dbeaver/dbeaver","406574ccb647bcb69214adc9af5ff8b07c0354c9",1,"2019-08-08 12:05:34+02:00","#6216 Filters management enhancement (save,
customize, menu redesign)
",265752,3462,85544,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5093","dbeaver/dbeaver","2b6b0fe87a2c6fcd866d4fd67871bb94011a741b",3,"2019-08-08 16:31:14+02:00","#2818 Auto-download fresh version on update check.
+ Early access link if no new version found.
",265818,3462,85534,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5094","dbeaver/dbeaver","e1dd899c2c6ec4891f56cb193e052127e866e912",38,"2019-08-08 17:25:24+02:00","Annotations
",265841,3462,85535,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5095","dbeaver/dbeaver","cfbe23787bca9ae881058c57d07f667c826889e5",1,"2019-08-08 18:13:49+02:00","#6479 Abortedtransaction auto-recovery
",265866,3462,85538,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5096","dbeaver/dbeaver","17fa05dc62721c20177f283ef5aeae680b9d0c93",2,"2019-08-08 20:01:11+02:00","Ref value editor fixes (lazy loading + value
modify reflection fix)
",265910,3463,85563,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5097","dbeaver/dbeaver","864de4f4b5a431d97e2567870a0a0548926c5696",63,"2019-08-09 11:21:27+02:00","Configuration save/load improvements
",265959,3463,85585,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5098","dbeaver/dbeaver","cc6d356cf89e011dc2329659c275d736a3d0454f",3,"2019-08-09 11:57:31+02:00","#6478 Save/load active reference in ref panel
",266001,3463,85587,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5099","dbeaver/dbeaver","80e41a6a59430570ef286052b6add7aa4fae942a",10,"2019-08-09 12:44:45+02:00","Network handlers properties management refactored
",266009,3463,85587,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5100","dbeaver/dbeaver","763ee68a4495124bb5e490ab7a7a2d7eb4ad7e23",10,"2019-08-09 13:53:12+02:00","Annotations
",266018,3463,85587,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5101","dbeaver/dbeaver","935b4f06e97ce1a71fdef8a508cd29a3788dd9cc",3,"2019-08-09 15:47:57+02:00","#6397 Connection permissions editor UI & model
",266136,3464,85609,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5102","dbeaver/dbeaver","da145d77d5077e928dfe01791fa1478c55668795",2,"2019-08-10 13:07:37+02:00","#6484 Text editors in value pane: find/replace +
common actions.
",266252,3466,85645,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5103","dbeaver/dbeaver","1e4da5c98b31c40596eca52acf0ec28bac872677",3,"2019-08-12 11:27:06+02:00","Complex value editor fixes and improvements
",266443,3466,85656,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5104","dbeaver/dbeaver","2d4c86e295d2a2fa061d9763e2125ca79f9ed181",7,"2019-08-12 14:53:58+02:00","Compelx elements add/edit fixes
",266479,3466,85670,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5105","dbeaver/dbeaver","2ae8aff64668f027fae65d57539bee5ff2c61369",1,"2019-08-12 16:33:01+02:00","Nested attributes update fix
",266481,3466,85670,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5106","dbeaver/dbeaver","6139fd0f38d296c227bd2b3879f80463c4743cf5",6,"2019-08-13 13:54:09+02:00","Column-specific actions fix (use current column
instead of selected column when possible)
",266502,3466,85670,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5107","dbeaver/dbeaver","d1d999c308a0207f3e8382f9267b9cd811dc8692",1,"2019-08-14 22:27:58+02:00","ERD: edit embedded diagrams
",266606,3466,85676,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5108","dbeaver/dbeaver","27195595f00be0f3f7c89b4481330af2a0177fe2",3,"2019-08-15 23:38:48+03:00","Data viewer: filter/order menu redesign
",266645,3467,85701,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5109","dbeaver/dbeaver","5d88bfed6a0ab1cbcc768b49d8a5b44e0176c265",3,"2019-08-17 20:01:15+03:00","#6542 Modify permissions per connection type: UI
",266708,3469,85739,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5110","dbeaver/dbeaver","bf4b6fb3c329a772308efbde2356d4d925015c7f",7,"2019-08-17 22:44:53+03:00","#6543 Data transfer:  attribute bindings
processing redesigned
",266746,3470,85763,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5111","dbeaver/dbeaver","40ae7ef511ffa0b53a3194a3b3c5f9a809d8501b",5,"2019-08-22 17:04:58+03:00","#6049 Move JSON editor to CE
",267032,3479,85930,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5112","dbeaver/dbeaver","4fdebd342d2039f4870bdc072a14ac5f717c8e21",5,"2019-08-23 18:15:16+03:00","#6570 ERD save (for entities and containers).
EntityEditor save prompt fix (show sub-editor
names)
",265287,3456,85472,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5113","dbeaver/dbeaver","9ed7d10650bfcadd54cff81126a9fc70e442ee50",4,"2019-08-23 18:52:38+03:00","#6570 Embedded ERD save/load
",265317,3456,85465,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5114","dbeaver/dbeaver","9fc6c314939e43dc8be14120c6df5de875b03475",1,"2019-08-23 21:10:24+03:00","#6570 ERD tooltips
",265379,3456,85460,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5115","dbeaver/dbeaver","76e0c1ab9b6f0a82837ff850ab5285c8c71150ca",6,"2019-08-24 19:20:55+03:00","#6529 Virtual structure editor tab. Virt model
events
",265727,3457,85494,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5116","dbeaver/dbeaver","b4447084860adca143b3df858b304d15ff6d2ffd",8,"2019-08-25 18:31:45+03:00","#6577 SQL Server DW support: disable scrollable
cursors
",265835,3458,85518,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5117","dbeaver/dbeaver","ed054d9b0ff73fafd0ffd76d2a49ec14fd56c900",5,"2019-08-27 19:45:23+03:00","Instance model refactoring
",265908,3459,85541,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5118","dbeaver/dbeaver","6803f7ca8bee627b36fdeefe1588308e03662f03",1,"2019-08-29 14:52:16+02:00","#6637 Data transfer from custom query results:
reuse data container's execution context
",265924,3459,85542,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5119","dbeaver/dbeaver","d6280129f599d12fbaf756f1199c40f1e7a98afd",2,"2019-08-29 18:29:24+02:00","Grid model additions
",266085,3460,85562,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5120","dbeaver/dbeaver","92660d2a73f954d481c40a5f8cfd821f208113ac",1,"2019-08-29 18:40:11+02:00","#6650 Groupping panel: quote group by column names
",266091,3460,85562,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5121","dbeaver/dbeaver","8689f6b155a37d8002b59ed91e71b0712d7a17b1",6,"2019-08-30 10:09:15+02:00","SQL Server model refactoring
",266106,3460,85562,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5122","dbeaver/dbeaver","1124ac8251e5d5f1cb7ae3b3a456956b3d360b2b",1,"2019-09-02 19:55:16+03:00","Data transfer UIX fixes. DDL generate fix
",266222,3463,85608,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5123","dbeaver/dbeaver","db275bba0ac737dfcfc21f52fa0b55dc66797781",2,"2019-09-04 23:24:04+03:00","#2372 Data transfer plugin refactoring (extract UI
part)
",266316,3465,85649,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5124","dbeaver/dbeaver","7824cdd47e6f40ad624b8afa600d27b8d4e4516b",1,"2019-09-05 00:51:29+03:00","#2372 Data transfer plugin refactoring (extract
settings)
",266331,3465,85664,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5125","dbeaver/dbeaver","1b89da3d0a4c5be7d56679c6cd6816f1ffee4e1a",1,"2019-09-05 17:50:26+03:00","#2372 DT UI deps fixes
",266344,3466,85686,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5126","dbeaver/dbeaver","2b60ac3e5046c88096b6cc732ec85732a8965735",1,"2019-09-05 18:24:05+03:00","#2372 DT settings save/load redesign
",266340,3466,85686,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5127","dbeaver/dbeaver","fdcc47dd76ef53921a2d2481e42fb69fbd266774",1,"2019-09-06 00:30:16+03:00","Cross database FK navigation fixes
",266382,3465,85670,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5128","dbeaver/dbeaver","a1388973635050f628da7b87843a30b55d829d73",20,"2019-09-11 19:19:22+03:00","#6725 Virtual attributes model
",266627,3466,85718,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5129","dbeaver/dbeaver","72f72de0967722c560a32e6e4e23693061bdca5d",10,"2019-09-11 20:21:02+03:00","#6725 Virtual attributes edit page + RSV handle
",266762,3466,85716,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5130","dbeaver/dbeaver","de7c1d81f1b8105846e762a0f1a8bbc5b1fb1500",10,"2019-09-12 01:30:20+03:00","#6725 Virtual attributes in data transfer. Virtual
attribute value evaluation
",266939,3468,85757,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5131","dbeaver/dbeaver","e99b679168be8c62fa39a5288ca026580a119359",3,"2019-09-12 14:32:54+03:00","#6725 Virtual attributes edit context menu + edit
dialog (preview)
",267087,3471,85811,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5132","dbeaver/dbeaver","35d08c22e537dae29e855ee02aa4f450f5cde631",1,"2019-09-12 16:37:34+03:00","Annotations
",267087,3471,85811,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5133","dbeaver/dbeaver","eabe8836ef5800944a249d814d68b348ec624602",5,"2019-09-12 22:40:33+03:00","#6725 Global references cache
",267199,3471,85802,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5134","dbeaver/dbeaver","a0a0b998a476af097a6fee55e739006163e0a01a",3,"2019-09-13 00:22:26+03:00","RSV: navigate menu, references loader fix
",267218,3471,85795,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5135","dbeaver/dbeaver","7acfad07c353da6696b3362dfed31531d2c5d9af",3,"2019-09-13 15:48:41+03:00","#6725 Virtual structure editor
",267300,3472,85813,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5136","dbeaver/dbeaver","7d093a850d270b79a91a1308888e1f618c5b6a50",1,"2019-09-13 15:51:01+03:00","#6725 Virtual attributes icons
",267301,3472,85813,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5137","dbeaver/dbeaver","bde64041e7bec019e3ee2322e1341ce4a512e73e",8,"2019-09-14 15:24:37+03:00","#6725 Do not re-read data on virtual model changes
",267364,3472,85830,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5138","dbeaver/dbeaver","b1f07bba0694f88a3d0fb08bb459a908e26c1316",2,"2019-09-15 16:40:25+03:00","#6745 FDW input page, sources collecting
",267764,3478,85944,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5139","dbeaver/dbeaver","cbb05f83f1993c4c66a74db8926bcf86b6e93f73",1,"2019-09-15 18:57:43+03:00","#6748 Property viewer: support new props and
property name editor
",267929,3478,85951,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5140","dbeaver/dbeaver","6526a0d27e0eee48836e2a819fc3c9cfd257845e",7,"2019-09-15 20:58:40+03:00","#6745 FDW output page. FDW registry.
",268175,3481,86011,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5141","dbeaver/dbeaver","417c600338b9be9355100132bf342aa769297ae7",13,"2019-09-18 13:49:29+03:00","#6771 Base tasks API + platform impl refactoring
",268600,3497,86394,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5142","dbeaver/dbeaver","678da31df15e11036393efba6082b0961d05f69e",3,"2019-09-18 17:09:16+03:00","#6771 Tasks registry and extension point
",268709,3498,86415,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5143","dbeaver/dbeaver","41de7c9fae83ca571092ed4509c54fab9ab0da09",1,"2019-09-18 18:56:59+03:00","NPE fix
",268709,3498,86415,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5144","dbeaver/dbeaver","93f8e22b2e29b56b8c9cbefcb00faf0e851f1357",6,"2019-09-19 00:08:56+03:00","#6771 Task manager API
",268841,3502,86491,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5145","dbeaver/dbeaver","6eb97f5b90397e14b9c7ba8af60a34a7aa1ef203",2,"2019-09-19 00:12:13+03:00","#6771 Task manager API
",268845,3502,86491,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5146","dbeaver/dbeaver","46e6f55b3fdaabdcd688586ead8cbe35970aa020",3,"2019-09-18 18:48:34+02:00","added HANA plugin features:  - driver download
from maven repository - search
views,tables,column,procedures - explain - enable
synonyms - error position - set application as
client property - show 'Unit' property for SYS
view columns
",269286,3504,86537,"Kai Morich","mail@kai-morich.de","Kai Morich","mail@kai-morich.de"
"5147","dbeaver/dbeaver","18599303c08614486c1feef6ce2aedb5677fc22b",10,"2019-09-19 15:45:42+03:00","#2372 Tasks API integration
",268982,3506,86549,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5148","dbeaver/dbeaver","27ee42cddfdd2d59e48ced215fd9381aaec158b4",1,"2019-09-19 22:30:58+03:00","#2372 Data transfer task
",269243,3507,86576,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5149","dbeaver/dbeaver","fda192cbbf5187631772b9e0e76f16490528f894",34,"2019-09-20 22:35:09+03:00","#2372 Tasks model refactoring
",269579,3510,86662,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5150","dbeaver/dbeaver","beedad6343ccc26999c39c4bdcc48e7c27bb55c7",17,"2019-09-20 23:41:12+03:00","#2372 Tasks runs + task view
",269756,3512,86671,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5151","dbeaver/dbeaver","62c852050717ddf1fd8298fea27cfc52489e436d",3,"2019-09-21 12:04:11+03:00","#2372 Task config UI. Model fixes
",269928,3517,86758,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5152","dbeaver/dbeaver","cab10e4cbea883f9337b59c18c105ab6f7eba8f4",4,"2019-09-21 18:09:37+03:00","#2372 Task execution framework
",270058,3519,86792,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5153","dbeaver/dbeaver","1804053b7534a8450788c0b436c4e5502efbfcf8",1,"2019-09-21 19:12:39+03:00","#2372 Task execution implementation
",270058,3519,86792,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5154","dbeaver/dbeaver","0d6fc1748dba11b85f2f26727c6c14200a54549f",5,"2019-09-21 19:44:36+03:00","#2372 Task execution UI monitoring
",270088,3520,86810,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5155","dbeaver/dbeaver","a59d30df135c247a2d57167f4c9c824697883c62",11,"2019-09-21 22:32:02+03:00","#2372 Task execution statistics
",270239,3521,86829,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5156","dbeaver/dbeaver","73c733539a2e9a717f1f31736e2b73809e191a53",1,"2019-09-22 00:35:04+03:00","#2372 Task main toolbar contribution.
Run/edit/create handlers
",270338,3525,86902,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5157","dbeaver/dbeaver","3cc7346f0cb1a7aff0e9083fb71f784a133b5f6f",2,"2019-09-22 12:24:56+03:00","Status line (timezone/locale) hints.
",270941,3531,87024,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5158","dbeaver/dbeaver","06468f2eb30ea99d7de2c22504fc1abe15423611",14,"2019-09-22 16:08:54+03:00","#2372 New task create dialog
",271139,3532,87084,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5159","dbeaver/dbeaver","37f142e173920a59751714df9441c1f8dfd08470",2,"2019-09-23 15:15:04+03:00","#6803 SQL parameters binding refactoring (move UI
to SQL editor + transform queries before
SQQueryJob initiating)
",271177,3532,87068,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5160","dbeaver/dbeaver","e97d4f0b94294a47e1f6ffc9d25dbc0d5311c5e9",1,"2019-09-23 16:24:54+03:00","#2372 Tasks execution list, log viewer
",271297,3532,87059,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5161","dbeaver/dbeaver","1ec94abcc46347d13cf8bed79943e7f1ede6a82c",2,"2019-09-24 00:25:14+03:00","#2372 Data import: task config model and impl
",271406,3533,87087,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5162","dbeaver/dbeaver","54020976b32682d1edbaa3e85fecac3050665c61",3,"2019-09-25 13:40:52+03:00","#6778 Read expensive properties action in object
eidtor toolbar.
",271572,3535,87117,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5163","dbeaver/dbeaver","d7f5ce49c4d5c13e17341505f6da2b6667d43d55",10,"2019-09-25 17:45:18+03:00","#6633 SQL view API refactoring
",271626,3536,87162,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5164","dbeaver/dbeaver","55d381538d1bb49e18ded03ab5d51c498208acec",2,"2019-09-25 20:00:53+03:00","#2372 Task create wizard refactoring
",271808,3537,87196,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5165","dbeaver/dbeaver","dac7628c3fd26acb78042d8045c0daffac461310",2,"2019-09-26 17:48:54+03:00","#2372 Task create wizard redesign
",271891,3537,87214,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5166","dbeaver/dbeaver","eb523c479189217ac4f77843908cfa6f611bc7aa",2,"2019-09-26 21:36:03+03:00","#2372 Task edit wizard fixes
",271790,3536,87233,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5167","dbeaver/dbeaver","d0d8bc71a473ea65b2fb9fb750042f505443593d",7,"2019-09-26 23:20:06+03:00","#2372 Task edit wizard fixes. API fix (remove ui
interfaces from model)
",271897,3536,87218,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5168","dbeaver/dbeaver","8bcfddbc07cedb45edd9eb1db3def18a4adc8636",1,"2019-09-27 01:39:21+03:00","#2372 Data transfer wizard: new task create, task
edit, simple job run: bugfixes, ui redesign
",271931,3536,87215,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5169","dbeaver/dbeaver","99333ea2c306b99680503e4b30b60578684ed5b1",6,"2019-09-27 19:01:00+03:00","#2372 Save task from regular task wizard
",271969,3536,87219,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5170","dbeaver/dbeaver","335abcd013c6a0eb399bbe713e63e9063a131f07",1,"2019-09-29 15:06:14+03:00","#6860 H2GIS - geometry handler + driver config fix
",272120,3540,87316,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5171","dbeaver/dbeaver","718c32a05aac86b60d6473e7632d15275a8ca1a2",7,"2019-09-29 22:42:49+03:00","#6854 Virtual model copy fixes (fix FK references,
fix model ID copy)
",272152,3540,87320,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5172","dbeaver/dbeaver","64d6b126d2af519a20d8772c9d6c6d768a3b37d6",1,"2019-10-01 00:45:43+03:00","Help system integration
",272233,3541,87366,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5173","dbeaver/dbeaver","d9d096b1751462bfa6a1716e811cd97cc9963e17",3,"2019-10-03 20:54:09+03:00","#6909 Stream producer settings save/load fix
",272401,3542,87402,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5174","dbeaver/dbeaver","96e40cc0baacacfd0722cbd1d3d437d3aa937fb4",8,"2019-10-08 13:27:48+03:00","#6745 Create virtual FK with specified attributes.
Create VFK using columns DnD in ERD.
",272636,3543,87463,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5175","dbeaver/dbeaver","6495f5c3027cf37ed9b1ea892bdf0ed0aabe027b",3,"2019-10-08 14:52:50+03:00","#6745 model refactoring + datasource variables
resolver enhancement
",272643,3544,87486,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5176","dbeaver/dbeaver","7ea53c89c31a4a39b10ad2d42de8243a5e3898a1",4,"2019-10-09 18:29:55+03:00","#6745 PG data type resolution fixed. Virtual
model: real model listener
",272794,3544,87489,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5177","dbeaver/dbeaver","712409b28fbeb60b83497a9988b9a4176c000727",2,"2019-10-11 14:00:22+03:00","#6868 PG: procedures/functions signature
generation fix (fq type names)
",272863,3545,87512,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5178","dbeaver/dbeaver","6e7cfd21b24414670305617ab51d32914108e21e",10,"2019-10-11 16:14:29+03:00","#6885 Object rename - update name in container
cache
",272889,3545,87515,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5179","dbeaver/dbeaver","40c49bd1c0129090fc6edb8706b13428ae49075a",5,"2019-10-11 23:11:04+03:00","#6969 SQL editor: parameters processing
",273079,3548,87579,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5180","dbeaver/dbeaver","c614bb833ccd59cd884425d6b6455664596add25",7,"2019-10-12 01:01:00+03:00","#6819 Oracle Q-style quotes. SQL dialect additions
(custom string quotes)
",273207,3550,87620,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5181","dbeaver/dbeaver","a38c532127530a935346211761a607044e50e787",10,"2019-10-12 10:41:20+03:00","#6608 PG: dollar quotes support improvements
",273246,3553,87671,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5182","dbeaver/dbeaver","cb2aa0ed099b4b809935f0beb512499c27acb840",12,"2019-10-12 16:06:24+03:00","App activation refactoring. Init display on
demand.
",273288,3555,87708,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5183","dbeaver/dbeaver","dd056ae5749714cfbe1ce58b293533924546bfa7",1,"2019-10-29 14:49:34+03:00","#6585 Parameters binding visualization +
reevaluation fixes
",273278,3556,87726,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5184","dbeaver/dbeaver","8b3b6caa0e377bdef7b663621a3adf20f6ea545b",3,"2019-10-29 18:07:31+03:00","PostgreSQL: escape object values (as strings)
",273312,3556,87731,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5185","dbeaver/dbeaver","e8026d31a9a601d44d53943857f755c2294f607b",1,"2019-10-29 19:03:53+03:00","#6383 PG: show primary key icon for table columns
",273343,3556,87732,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5186","dbeaver/dbeaver","d2b25cb3987b5b6b4433769049d587a388373109",1,"2019-10-29 22:06:13+03:00","#6977 Data viewer: save horizontal scroll state
between data refresh
",273375,3556,87734,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5187","dbeaver/dbeaver","c875f30f6f603b5bf51e8a75d9c398856b077827",34,"2019-10-30 12:24:08+03:00","#6715 Extra variables in custom client app name
(context.name and context.id)
",273421,3556,87735,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5188","dbeaver/dbeaver","c3768a49f8a5cc280977900b40fc01d2858d70b3",13,"2019-10-30 13:58:57+03:00","#6633 ""Use FQ names"" option in data editor
scripts. Persistence model refactoring (pass
options)
",273437,3556,87736,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5189","dbeaver/dbeaver","b5b23bb7be67abe0d646d57ac52e714a3e4dd050",1,"2019-11-02 20:28:20+03:00","#6950 Close old non-metadata connections on
database switch
",273524,3558,87792,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5190","dbeaver/dbeaver","9badf4ef7e8136281827f8fc5748c63a04e6f53d",2,"2019-11-06 11:57:09+03:00","dbeaver/dbeaver#7100 Execution context management
refactoring/fixes
",273533,3558,87800,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5191","dbeaver/dbeaver","19d16186ee752b4f98ff0f6e389fdcdbbf8241d3",2,"2019-11-06 17:22:58+03:00","Table context menu
",273542,3558,87800,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5192","dbeaver/dbeaver","d31fa372a3847fa77547470ac0491f62f909e4f0",5,"2019-11-09 23:14:04+03:00","dbeaver/dbeaver#3066 Project security storage +
refactoring
",273730,3561,87865,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5193","dbeaver/dbeaver","3b1222d1a9b9a4f546a6d21a5d558d68c7c12059",4,"2019-11-10 01:27:40+03:00","dbeaver/dbeaver#3066 Project security storage +
project password support (EE)
",273750,3562,87883,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5194","dbeaver/dbeaver","a148174b618cd2157717806af8372cfaa1a0d4cf",2,"2019-11-10 13:34:02+03:00","#3066 Proejct password UI
",273762,3562,87883,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5195","dbeaver/dbeaver","e7f70c06a35aff4f868c512660d1f7c4cdc2937d",3,"2019-11-15 15:49:26+03:00","#6972 Task execution framework. App model
refactoring
",273970,3566,87972,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5196","dbeaver/dbeaver","827bfe1fd2140e9cc18ab2f286bc691f71c5792c",6,"2019-11-15 17:11:08+03:00","#6972 Task execution implementation
",273974,3566,87972,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5197","dbeaver/dbeaver","9808a8df7f8c41d00e8a06144428a7bb9460af27",2,"2019-11-16 09:16:49+03:00","Proxy stream fix
",274084,3568,87994,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5198","dbeaver/dbeaver","cb0f96ac1f029a3130f7c89e19a0e4244e73d10f",2,"2019-11-18 22:55:16+03:00","Scheduler model
",274194,3571,88063,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5199","dbeaver/dbeaver","6a1210e8e283ab5946db0e4f09a9bfc6be7efe08",4,"2019-11-20 16:05:04+03:00","Scheduler UI refactoring
",274302,3573,88105,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5200","dbeaver/dbeaver","51cf4766f9d0ececaaae740360c0d50edef20903",1,"2019-11-20 21:43:08+03:00","Scheduler UI refactoring
",274280,3573,88124,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5201","dbeaver/dbeaver","c47ac86c339eb384bc11fe437f256eef50f0292f",1,"2019-11-20 22:35:27+03:00","Scheduler UI refactoring
",274283,3573,88124,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5202","dbeaver/dbeaver","c99d8f5bb1dad08b6870e7cb14520066603c8a49",1,"2019-11-21 17:49:30+03:00","dbeaver-corp/dbeaver-ee#246 Task scheduler
",274486,3576,88129,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5203","dbeaver/dbeaver","6cd76dc88b57b84a5ccb87d8cbe9edd95acf7914",4,"2019-11-21 19:12:24+03:00","Task scheduler API
",274489,3576,88129,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5204","dbeaver/dbeaver","dbd1b94256b376733178563bed8c4bf456d63758",1,"2019-11-25 00:52:11+03:00","#6972 MySQL tools. Object selector panel
refactoring
",274832,3579,88191,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5205","dbeaver/dbeaver","40b8c740cfbecaf9fe46428bbf06e885628f5b73",2,"2019-11-25 21:40:21+03:00","#6972 Extract tools and task management from core
",274926,3583,88361,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5206","dbeaver/dbeaver","00adb0ed26b550e996ebd81022e414fff26b22f7",15,"2019-11-26 01:29:01+03:00","#6972 Task execute model refactoring. DT wizard
refactoring + optimization
",274913,3582,88346,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5207","dbeaver/dbeaver","96fe1d6cd628741811b415b045b4745686e9409d",7,"2019-11-26 15:07:47+03:00","#6972 Tasks wizard refactoring
",274907,3582,88328,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5208","dbeaver/dbeaver","69f5085106c51a29616097a2266217827801cabc",3,"2019-11-27 00:45:03+03:00","#3449 Oracle: show/edit full data type name
",275139,3583,88284,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5209","dbeaver/dbeaver","d67d6501a43869ce6940e24cb29ce3b1c22a6714",2,"2019-11-27 16:39:21+03:00","Task dserialize: error handle
",275215,3586,88339,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5210","dbeaver/dbeaver","11c3121a11d8c82cdd7a1409cc578295729059ac",10,"2019-11-27 19:03:33+03:00","dbeaver-corp/dbeaver-ee#254 Task name duplicate
check
",275249,3586,88333,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5211","dbeaver/dbeaver","c103f1c7bcfda3f013f7444fea96b76622b12c09",1,"2019-11-27 21:59:25+03:00","#7087 GIS viewer: configure default tiles
",275383,3589,88384,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5212","dbeaver/dbeaver","26f43e5fb723a8a163893bb701b2f84c863a652d",3,"2019-11-30 23:11:14+03:00","#5172 Execution context defaults model. Legacy
object selector is deprecated
",275541,3591,88425,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5213","dbeaver/dbeaver","845c4f7e5f270dcd7fb43df1806732fc68bdc323",6,"2019-12-01 01:38:54+03:00","#7324 Data transfer settings load fix. Load dialog
settings for new tasks. Do not save on wizard
cancel. Configuration load error handling.
",275507,3589,88383,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5214","dbeaver/dbeaver","d3b3ec040f6df071208212b31018c6315f766765",3,"2019-12-02 20:17:05+03:00","#5172 Execution context defaults model. Generic
plugin in new API
",275830,3593,88462,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5215","dbeaver/dbeaver","f2a696fa3987ceba201f0c0768db4b1229748448",3,"2019-12-03 12:30:42+03:00","#7342 Data transfer/export from resultset - use
direct process (without serialize/deserialize)
",275856,3593,88464,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5216","dbeaver/dbeaver","59b17df42c3f3a8d0b8dd6122192f5e587b28abe",6,"2019-11-21 16:54:39+01:00","HANA spatial types support  This change adds a
HANA value handler for geometries so that
geometries can be viewed in DBeaver's integrated
Leaflet panel.
",276528,3604,88713,"Stefan Uhrig","stefan.uhrig@sap.com","Stefan Uhrig","stefan.uhrig@sap.com"
"5217","dbeaver/dbeaver","2dd7666524ed3fe2adb8b19855161888f8291c88",12,"2019-12-05 14:34:33+03:00","dbeaver-corp/dbeaver-ee#260 Filters popup -
populate with grid data if no constraints found
",275956,3596,88516,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5218","dbeaver/dbeaver","900ed914ce11a98d86f7ce6ba124845cbee7c341",11,"2019-12-06 13:28:15+03:00","DataSource model refactoring
",276028,3597,88536,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5219","dbeaver/dbeaver","e8eaee8dadedf58a8daedfe15775f9f545be0075",3,"2019-12-06 22:09:44+03:00","DBUtils test (initial stub)
",276064,3598,88536,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5220","dbeaver/dbeaver","8030b5e78a71aac5ba2e6b2f1dbc4daca00925e5",43,"2019-12-07 15:24:01+03:00","#7385 CSV import: mock stream transfer
session/context/datasource
",276389,3602,88611,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5221","dbeaver/dbeaver","bb51fdd424353feb4fff4c68cb09e0dfcc247c88",2,"2019-12-09 23:25:52+03:00","#7352 Data transfer: cache timestamp value.
Timestamp pattern config added.
",277114,3612,88848,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5222","dbeaver/dbeaver","4a84c7bf0081c3bf26d7f692be557229abdc743e",9,"2019-12-12 22:41:24+03:00","#7409 Save parameter default values and don't ask
on refresh/scroll
",277203,3612,88865,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5223","dbeaver/dbeaver","1cf3f785bf31e6b5b7db0e47d1c2340e57149a67",9,"2019-12-13 23:16:41+03:00","#5172 PG: context-specific active schema. Model
refactoring
",277337,3613,88886,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5224","dbeaver/dbeaver","23e1f708fcc64a44f8dafc19b69db2d258165e9a",2,"2019-12-14 13:15:46+03:00","#5172 PG isolated context reinit. QM model update
(context reinitialization)
",277359,3613,88886,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5225","dbeaver/dbeaver","cbce7d3db1845ea37dec53c38f7ca97e1c052f4e",14,"2019-12-14 14:22:29+03:00","#5172 SQL Server model. SQL completion fix (use
new model). Object editor model refactoring.
",277420,3614,88908,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5226","dbeaver/dbeaver","4ddac5866b28c1f46d4a186b10732f208d41ba1c",5,"2019-12-14 14:41:01+03:00","#5172 SQL Server model (default schema)
",277424,3614,88906,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5227","dbeaver/dbeaver","0e67f09beb058c7af560230808e21cc46cf11d48",2,"2019-12-14 15:34:22+03:00","#5172 MySQL model. Model refactoring
",277470,3615,88927,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5228","dbeaver/dbeaver","88a6b5541815bd86b4bc6d433065bc6c9bed20b4",2,"2019-12-15 20:42:12+03:00","#5172 Oracle: default schema
",277508,3616,88946,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5229","dbeaver/dbeaver","0397ce1b52dca474e04ff29677cb9ca2453f554f",2,"2019-12-15 20:52:38+03:00","#5172 DB2: default schema
",277542,3617,88967,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5230","dbeaver/dbeaver","55699eb23e6d5820ec29a6ba48f79c24ace1e363",2,"2019-12-15 21:03:27+03:00","#5172 Exasol: default schema
",277558,3618,88986,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5231","dbeaver/dbeaver","0be2c70ee31ef666f338dcde72f12b12fbca3be1",10,"2019-12-16 01:17:52+03:00","dbeaver/dbeaver#5172 Get rid of legacy object
selector
",277459,3619,88997,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5232","dbeaver/dbeaver","8f1ffec90272bf98d653bd53acbff9279b96dd07",38,"2019-12-16 02:03:51+03:00","dbeaver/dbeaver#5172 Isolated context
initialization improvement (use active context
instead of global)
",277456,3619,88998,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5233","dbeaver/dbeaver","506e2ef172050d2d76631c6dea7de914ed259760",2,"2019-12-16 17:00:02+03:00","#7310 Handle -reuseWorkspace even if no other
instance server found
",277414,3618,88977,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5234","dbeaver/dbeaver","78ae8ab2b49134df5c2ce8963771182ff4391547",3,"2019-12-18 09:09:38-06:00","Add correct icons, and update plugin
",277710,3625,89144,"Andrew Baptist","abaptist@ocient.com","Andrew Baptist","abaptist@ocient.com"
"5235","dbeaver/dbeaver","567ea5bd1dc1aa445576d21e0ecfc31ab51ac3a7",25,"2019-12-18 22:41:09+03:00","#6972 MySQL export: run in task
",278393,3635,89219,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5236","dbeaver/dbeaver","e7ea9a6b55158253e088a02d3ed3cf661ad73787",3,"2019-12-19 01:17:08+03:00","#7440 Catalog-only defaults support fix.
",278500,3636,89219,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5237","dbeaver/dbeaver","459f70c813a97b0d79d24b006747364abdf22354",2,"2019-12-20 21:05:33+03:00","#7450 Session manager: plaintext details
presentation
",278606,3637,89238,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5238","dbeaver/dbeaver","2f064417fa6640e4d73ce0e459951eb23a60e6dd",14,"2019-12-21 21:01:10+03:00","#7444 PG tasks. MySQL and PG settings load/save
fixes
",279143,3642,89281,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5239","dbeaver/dbeaver","bb799a3f69693f4d7a5453296656be435d3d404c",1,"2019-12-23 14:56:55+03:00","#7444 Oracle SQL*Plus
",279417,3648,89341,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5240","dbeaver/dbeaver","1543bdd49fbac7fad7d84de656f98cac91ede59d",1,"2019-12-26 15:26:53+03:00","#7472 Default catalog/schema. Model + PG impl
",278790,3649,89309,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5241","dbeaver/dbeaver","bddff826b762b12c6de0419b6c483c7d29181935",1,"2019-12-27 19:31:10+03:00","#7432 Add constraint: use UNIQUE instead of UNIQUE
KEY by default
",278946,3651,89330,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5242","dbeaver/dbeaver","dd99ce3f1265240193aae7eada4f8d2d9b8b5fce",31,"2019-12-28 15:54:41+03:00","#7494 SQL rule manager refactoring
",279795,3673,89905,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5243","dbeaver/dbeaver","e104b5a446244b6294b799658cbe7fd3f801ddcf",17,"2019-12-28 18:33:08+03:00","#7494 SQL parser refactoring
",279634,3675,90174,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5244","dbeaver/dbeaver","5cccfd05549661ee63098bb8efb306880579c576",13,"2019-12-30 01:28:44+03:00","SQL model refactoring (get rid of SQLDataSource)
",279716,3675,90195,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5245","dbeaver/dbeaver","96c29712979cfef1ae1f9742a5887c72b4e69c96",7,"2019-12-30 14:12:43+03:00","#6528 SQL dialects pref page
",279760,3675,90195,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5246","dbeaver/dbeaver","437e4b22935550ffcb983616390f94bf63ab5180",13,"2019-12-30 16:06:48+03:00","#6528 Generic SQL dialects definitions
",279885,3676,90213,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5247","dbeaver/dbeaver","74862597ff8d1b3a853cc23af11def22b2380adf",40,"2019-12-30 18:30:33+03:00","#6528 Dialects definitions + pref page
",280069,3677,90233,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5248","dbeaver/dbeaver","c43ced4be54bc8a03352395000d5255fe3270f4b",11,"2019-12-30 21:25:32+03:00","#6528 Dialects definitions + pref page
",280141,3676,90198,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5249","dbeaver/dbeaver","b94f363c731ccf73f261d1177d48c171fdd9531f",3,"2019-12-30 22:29:48+03:00","#1562 Transactional kw detection improvements
",280171,3676,90198,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5250","dbeaver/dbeaver","29c34d218f5f98866380f23dcba403813d538f5e",1,"2019-12-31 17:53:45+03:00","#7375 Content assistant create error handle
",280240,3676,90198,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5251","dbeaver/dbeaver","0907a15a328881735c031a2ea4162a092e97f71d",3,"2019-12-31 19:32:07+03:00","#7468 PG: proper arrays parser
",280251,3676,90200,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5252","dbeaver/dbeaver","148db77acefc3643e0ac3716a0feccd0a6d18ae3",8,"2020-01-06 12:18:40+03:00","#7494 Extract parser functions from editor
",280350,3679,90228,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5253","dbeaver/dbeaver","08337e4664c4ff9f319486e72875e790b16b2d6b",1,"2020-01-06 12:51:04+03:00","#7494 Extract parser functions from editor
",280372,3679,90230,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5254","dbeaver/dbeaver","6b40d9986e029b17b919577855a23303fd1bb1ab",5,"2020-01-06 13:21:00+03:00","#7494 SQL editor refactoring (extract occurrences
highlighter)
",280410,3680,90247,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5255","dbeaver/dbeaver","8a466bce9902babcdff43582b25dbb0b391cb626",21,"2020-01-06 14:40:09+03:00","#7537 Struct assistant refactoring (use active
execution context)
",280439,3680,90249,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5256","dbeaver/dbeaver","7e06e70e9aab7d033010cea229b1ef312e2eda65",2,"2020-01-08 01:17:54+03:00","Connection test fix (do not create unneeded pages)
",280717,3681,90266,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5257","dbeaver/dbeaver","fd96ec9b6a126bf16aeb47250b5caf3d5e328fc8",1,"2020-01-08 01:47:28+03:00","Model additions
",280727,3681,90266,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5258","dbeaver/dbeaver","bf3eaddce7f74c7568f697b9913ba03be6ace669",4,"2020-01-06 17:15:22-06:00","support for explain
",277993,3630,89236,"leo","lgreca@ocient.com","leo","lgreca@ocient.com"
"5259","dbeaver/dbeaver","fe5ec70ca51fb5b2155ecc511f5c2b9242e8341d",10,"2020-01-06 15:07:19+06:00","SQL Script Output Console - plugin module
",281237,3682,90300,"Marat Kalibekov","marat@kalibek.kz","Marat Kalibekov","marat@kalibek.kz"
"5260","dbeaver/dbeaver","a86630a65793e01c2812c88e378e4c9da73e850b",9,"2020-01-10 14:14:15+03:00","NPE fixes
",280915,3684,90340,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5261","dbeaver/dbeaver","5627a25ca50643c3f25c7e95a81dde7419f5ebbe",1,"2020-01-10 15:33:51+03:00","#7584 RSV model meta update fix. Colors
update/evaluate fix (+ integer values parser fix)
",280928,3684,90341,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5262","dbeaver/dbeaver","05866dd0f8b4ea95c96a428ba02a18eb58314801",6,"2020-01-10 22:32:19+03:00","#2928 SQL Script execute task configurator
",281641,3688,90485,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5263","dbeaver/dbeaver","8bf24a6eb3254b5876dcd454cae94a94d9dc269e",2,"2020-01-11 14:28:08+03:00","#2928 Tasks model refactoring + task configureator
page error notification
",281768,3688,90462,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5264","dbeaver/dbeaver","4dd156ba0127cdc7f2320d86515c44e27935696e",8,"2020-01-11 15:24:18+03:00","#2928 SQL Script processing
",282000,3690,90517,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5265","dbeaver/dbeaver","d5b32968e7bff0daf7f6e5029a1123edbf83e5d7",1,"2020-01-11 16:16:49+03:00","SQL completion: do not generate table alias for
DML queries (if not supported)
",282017,3690,90517,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5266","dbeaver/dbeaver","33c77d7fab272f8d8d4c2d2ba58e30157de753ec",2,"2020-01-11 16:37:30+03:00","SQL keywords completion (use proper keywords for
base SQL parts)
",282043,3690,90520,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5267","dbeaver/dbeaver","9ddb1dec92ef579187ef9b7047d747e1ca3865c3",1,"2020-01-11 18:14:32+03:00","Tasks view: run logs management
",282155,3690,90522,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5268","dbeaver/dbeaver","46c790269a244e561c052c59efd7b2a2ff78fb43",6,"2020-01-11 20:16:39+03:00","#7513 Dynamic parameters for tasks (data transfer
+ sql scripts)
",282378,3693,90578,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5269","dbeaver/dbeaver","95f98307067d551558ff68e0f599a164c48375d1",1,"2020-01-12 14:18:17+03:00","#7538 Object manager refactoring (pass execution
context to persist methods). Current database
detection fix (SQL Server, MySQL, Oracle)
",282547,3694,90595,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5270","dbeaver/dbeaver","55e12368dc8e2c40a64c15a4fbcbbe83e5584356",13,"2020-01-12 16:05:40+03:00","#7587 Generic meta model additions (constraints
reading). Firebird unique key read
",282571,3694,90598,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5271","dbeaver/dbeaver","76d359f2d62ff2394d324cc8b3a356a554b0008e",1,"2020-01-12 16:33:08+03:00","#7531 Hive view DDL fix
",282589,3695,90617,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5272","dbeaver/dbeaver","9fa3d31aad9dbd7a97ebe8de21e1df12fe0c605f",17,"2020-01-12 19:40:53+03:00","#7609 Task context save/load. Data transfer takes
task into account.
",282692,3696,90636,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5273","dbeaver/dbeaver","4593551a947936122718e68bf62fa2208115f9a1",13,"2020-01-12 20:13:20+03:00","#7609 Task context init. PostgreSQL: context
database change redesign
",282719,3696,90641,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5274","dbeaver/dbeaver","c9e230a0a2bafbaf7a28e25d951c5bc1fc44b485",1,"2020-01-15 15:59:17+03:00","#6427 Use mutli-value filter for RSV icon click
",282875,3697,90646,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5275","dbeaver/dbeaver","4081dc9a98fc6458c06bf699b63d0dc7f5487f39",1,"2020-01-16 23:32:58+03:00","Schema selector fix (show schemas for catalogless
ds)
",282882,3697,90653,"serge-rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5276","dbeaver/dbeaver","6c85ce39074926d5dd709a9995e2da0822495ec4",1,"2020-01-18 19:25:44+03:00","Console viewer
",283002,3699,90689,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5277","dbeaver/dbeaver","1c27970c60d122783e3e7c960a471d579747aca3",1,"2020-01-18 21:18:54+03:00","#7681 Variable hint control refactoring. Monospase
font obtain refactoring. Extra connection
variables.
",283039,3701,90719,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5278","dbeaver/dbeaver","c4952d46eee8df8bc67b7433b70d34957cc11983",1,"2020-01-18 22:52:39+03:00","#7681 Variables dialog UI redesign
",283150,3701,90698,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5279","dbeaver/dbeaver","0ec32f793f8e3e5672d35db50461822b586901e3",9,"2020-01-20 23:21:11+03:00","#7685 Data transfer configurator enhancement. Data
import tasks configurator fix.
",283172,3701,90686,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5280","dbeaver/dbeaver","208455244be8652f4a972b6ff82d068f2e6ed3e5",3,"2020-01-21 00:30:56+03:00","#7635 Generic: support Java collections for array
data type
",283188,3701,90686,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5281","dbeaver/dbeaver","c71ea7896557164ca2043de83d09e24f9952eeea",22,"2020-01-23 23:02:08+03:00","#4792 Editor context model. Save/restore chosen
database/schema.
",283545,3704,90748,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5282","dbeaver/dbeaver","70e9e9e7fc3ed4d440ff6292b855b0d80d236f69",1,"2020-01-24 20:16:43+03:00","#7706 PG: database refresh fix
",283561,3704,90668,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5283","dbeaver/dbeaver","29bfa3fe3291dd81539a032b8b406f00edba9b90",7,"2020-01-24 20:16:54+03:00","Script selector popup fixes
",283549,3704,90678,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5284","dbeaver/dbeaver","2bc8cb61b5a41792213b4a2a448a9ea893aad3e2",1,"2020-01-25 13:41:34+03:00","#7571 Smart commit model for table editors
",283663,3705,90697,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5285","dbeaver/dbeaver","d155faa9a8236b55d100537e8268a9c69af2a704",1,"2020-01-25 20:23:37+03:00","#7498 Data colorings: coloring for custom queries
fix (use datacontainer always)
",283674,3705,90697,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5286","dbeaver/dbeaver","d38272aa26d773372f68f528c64b5981d524e283",6,"2020-01-27 11:25:04+03:00","#7745 Data consumer model. Type editor model.
",283766,3709,90792,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5287","dbeaver/dbeaver","c7470c22a9ff2c2463bc1ac06513d52d68a32a0d",4,"2020-01-31 20:10:17+03:00","Batch script processing model
",283985,3712,90814,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5288","dbeaver/dbeaver","1305ec0053afae272ee7bf4b9453f17f51b124c2",1,"2020-02-06 18:37:18+03:00","#7853 SQL generators model refactoring + extension
point
",284322,3731,91136,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5289","dbeaver/dbeaver","5b4820074d64b4a01da0f68ea3a8309112abb62e",1,"2020-02-06 22:34:29+03:00","#7853 SQL generators model refactoring. Make all
generators configurable
",284282,3732,91151,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5290","dbeaver/dbeaver","f6d83ab47904d7db23e3700c1154a1aa10063696",5,"2020-02-07 00:09:38+03:00","RSV refactoring (extract nested classes)
",284437,3746,91375,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5291","dbeaver/dbeaver","d0f95c8a6f02e07fa40c92ec1d98f43aaea9872c",4,"2020-02-07 18:03:34+03:00","#7799 Columns late binding fix. PG: arrays of
structs parser.
",284528,3746,91387,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5292","dbeaver/dbeaver","08f318d82ff5eec3b63443a3aaacb3d74a8cb25b",2,"2020-02-07 22:28:46+03:00","#7771 ""Confirm data changes"" option fix (ask in
all cases)
",284552,3746,91392,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5293","dbeaver/dbeaver","17a0717225669cdc314a3e1428f7250ae108121e",9,"2020-02-08 10:11:06+03:00","Task utils refactoring
",284657,3750,91399,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5294","dbeaver/dbeaver","e188add808e8422d5203065e8a1edf441027ddb2",1,"2020-02-08 10:11:24+03:00","#7768 Content proposals with images
",284710,3752,91399,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5295","dbeaver/dbeaver","6fed55016a6de5a22f2816ebc2ede7d12ac491ee",2,"2020-02-10 13:52:53+03:00","#7822 Add ""Open separate connection"" option to the
main menu. Extra logging.
",284815,3753,91428,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5296","dbeaver/dbeaver","eb55eff7859e16b3cbdefa6119ee6c2433e950ee",4,"2020-02-10 22:54:05+03:00","#7871 PG structure assistant: use current database
instead of default
",284745,3752,91408,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5297","dbeaver/dbeaver","1d9d600b9f32cd3d0b60bf7de33297e938f85793",1,"2020-02-13 20:43:03+03:00","#6485 Read-only state visualization
",284960,3756,91512,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5298","dbeaver/dbeaver","87772e2f494efdbf50c5d186f430edf283b54926",2,"2020-02-13 21:14:37+03:00","#6485 Read-only state visualization (extra
explanation on missing row ID)
",284982,3756,91512,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5299","dbeaver/dbeaver","40614d13482f45b8872150177708e07c02c6a616",1,"2020-02-13 21:25:13+03:00","#7815 Athena: error position discovery
",284996,3756,91515,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5300","dbeaver/dbeaver","fd2c3d93090f670ee41a5f05ddf58ed859838262",11,"2020-02-13 22:38:04+03:00","#1751 Use native value formatters for proposals
",285033,3756,91517,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5301","dbeaver/dbeaver","c74cda3e00144d72d93cdbcaec98c3803fd291c9",2,"2020-02-13 23:05:44+03:00","#7853 SQL generator model refactoring
",285049,3757,91533,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5302","dbeaver/dbeaver","e7543ea709f2daefe24b16d7c62df689f15be6b7",1,"2020-02-13 23:11:34+03:00","#7853 SQL generator model refactoring
",285049,3757,91533,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5303","dbeaver/dbeaver","de9fb7d71ab81b497cf15ca2ced59058d1514e8b",1,"2020-02-14 19:56:05+03:00","dbeaver-corp/dbeaver-ee#267 DB2 references read
fix
",285067,3757,91533,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5304","dbeaver/dbeaver","40d5f368a31a72e82315b3cbda49083f77a83fff",4,"2020-02-18 13:59:50+01:00","Fix issues with HANA geometry data transfer  There
were three issues with HANA geometry data
transfers:  - Binding a geometry would always
throw  - Polygons with more than one hole would
have a faulty serialization  - The SRID would not
be added to the type
",285204,3758,91552,"Stefan Uhrig","stefan.uhrig@sap.com","Stefan Uhrig","stefan.uhrig@sap.com"
"5305","dbeaver/dbeaver","1fa74f555e8ee0c6c2c6aaa1c9e367dca82fe6d8",1,"2020-02-18 16:50:12+03:00","Tasks UI model refactoring + DnD
",285265,3759,91567,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5306","dbeaver/dbeaver","f52b26918ade66d976625cc901c5616f39f0af51",5,"2020-02-18 18:46:02+03:00","Task management UI refactoirng (move to UI plugin)
",285301,3760,91583,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5307","dbeaver/dbeaver","c0839a26de800dea93d9646093787ca511d0f28f",7,"2020-02-19 01:21:06+03:00","Resultset utils refactoring
",285331,3760,91583,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5308","dbeaver/dbeaver","b17e20c62b535a2bc6b3296b88dfb69c85cb0a4b",1,"2020-02-19 16:54:33+03:00","dbeaver-corp/dbeaver-ee#307 Composite tasks
editor, settings save/load
",285425,3762,91600,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5309","dbeaver/dbeaver","2ab5734fa32e96a299f732660dd8e0afae3414c3",1,"2020-02-20 13:31:54+03:00","#7942 PG_dump + directory format: specify output
directory
",285544,3763,91620,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5310","dbeaver/dbeaver","b896e2a4e5f81007145d35ee6aa1929c92cc437f",12,"2020-02-20 22:20:51+03:00","#7927 Boolean view transformer
",285680,3765,91671,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5311","dbeaver/dbeaver","659c4e6435476fbb67fd4e944b3be033a44adf18",3,"2020-02-21 12:26:03+03:00","Type cast in filter criteria
",285703,3765,91678,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5312","dbeaver/dbeaver","0b5054fbc6e0e34b48ec160a6a9ce6a603babcf9",94,"2020-02-21 17:49:16+03:00","Value handler enhancement: value validation mode
",285721,3765,91681,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5313","dbeaver/dbeaver","0680b49fc9733ced91fc2b36597b74b5fbc3e811",2,"2020-02-22 17:44:20+03:00","#7902 Export to HTML: add  doctype and charset
information
",285745,3765,91690,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5314","dbeaver/dbeaver","bae95ab80e2e8997fee55d7c1151dc0d92f352ad",1,"2020-02-24 19:03:18+03:00","#3605 SQL script execute task. Multi-script and
multi-connection support.
",285871,3764,91655,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5315","dbeaver/dbeaver","c4c7390ef792a27a8bdfb3a9e72f88888a5ff3be",4,"2020-02-26 17:16:15+03:00","#7242 PG: timestamps scale edit support
",286169,3766,91698,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5316","dbeaver/dbeaver","d71ed99f2d83f262ae74da0f4035c1c50ecb6f7a",1,"2020-02-27 18:08:37+03:00","DS configuration storage model
",286257,3768,91743,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5317","dbeaver/dbeaver","29735c53430f6fbf3ddf838252fa443af41961d4",31,"2020-02-27 20:13:05+03:00","Connection configuration storage model
",286308,3768,91744,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5318","dbeaver/dbeaver","346fd16a786f472629edc3e1241f28f5a71ee90f",7,"2020-02-27 21:02:38+03:00","Connection configuration storage model
",286319,3768,91747,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5319","dbeaver/dbeaver","baf7e0073b7960a3bdb2beb7b716084c97dd42cf",2,"2020-02-29 20:00:17+03:00","#8034 SQL completion fix: show value proposals
only after WHERE/AND/OR/ON. Join generation fix
",286325,3769,91801,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5320","dbeaver/dbeaver","377484a14bba5ed97e71eaa790290e3349bcdeef",1,"2020-03-02 23:31:05+03:00","#8054 SQL Server: native lib Maven artifact added
to deps. Native artifacts support added.
",286379,3771,91848,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5321","dbeaver/dbeaver","14c821c22ff196b0c8151bc008beac1336cc08d2",1,"2020-03-04 17:37:30+03:00","Auth model refactoring
",286409,3771,91849,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5322","dbeaver/dbeaver","2e83167439fafeab0130a4322a4f0ea4ac3fcd2c",5,"2020-03-04 18:23:40+03:00","Auth model + registry
",286492,3773,91891,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5323","dbeaver/dbeaver","50762882c9cb2a280474062c52331382dcd37e69",2,"2020-03-07 14:15:39+03:00","#8063 DB2: reference cache reading fix
",286532,3774,91921,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5324","dbeaver/dbeaver","785f4563013668a128419a96ee70205a85cf719c",3,"2020-03-11 18:22:30+03:00","Greenplum table cache fix (use it always)
",286369,3773,91672,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5325","dbeaver/dbeaver","b3c549f4c3bc8a75994d5da37344cf98ca4be751",2,"2020-03-12 15:36:07+03:00","#8104 PostgreSQL enum value binding fix
",286401,3774,91696,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5326","dbeaver/dbeaver","9f1857de981daa9142d46f9e07f362975e9620b6",1,"2020-03-13 22:09:08+03:00","#8036 Disable scrolling on find/replace
",286418,3774,91701,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5327","dbeaver/dbeaver","72c00992839f4e10c172cc991d72aa24fde28715",6,"2020-03-14 13:54:12+03:00","#8179 Resource lock model
",286408,3775,91720,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5328","dbeaver/dbeaver","d075ba0b7d57007f5b6f3aa0172d2a8656288722",8,"2020-03-16 13:07:39+03:00","#8179 Datasource task lock model
",286546,3776,91742,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5329","dbeaver/dbeaver","6c0154b2455b91b4855e575b25ecbeee116a054f",26,"2020-03-16 21:32:05+03:00","#6442 Show extra procedure/function proposals
",286670,3776,91741,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5330","dbeaver/dbeaver","6af80ad245021b6428a7783390a33a77b331d6aa",1,"2020-03-18 17:36:34+03:00","#7319 Oracle view constraints create/drop
",286891,3780,91807,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5331","dbeaver/dbeaver","915d8610bad920160ecb3ffcb7b3a91e56532ad5",6,"2020-03-18 18:35:43+03:00","#7760 SQL dialect additions
",286917,3780,91811,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5332","dbeaver/dbeaver","7e0d07e26d76348484edbeb1cdbce379c3b673ff",1,"2020-03-20 10:20:13+03:00","Core plugins refactoring
",287228,3788,91957,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5333","dbeaver/dbeaver","b58359d288deb25b5ab26b42e2123e3db1d29840",6,"2020-03-20 23:06:38+03:00","Driver properties model
",287222,3789,91903,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5334","dbeaver/dbeaver","86602cc92d522513f989ea3f6817d008d221a3a1",2,"2020-03-21 18:14:30+03:00","Oracle auth models, connection page redesign
",287299,3793,91984,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5335","dbeaver/dbeaver","5379ffb951bc835a8597d9b948977709c7ed00bf",1,"2020-03-24 23:46:50+03:00","#8178 RSV filters save/load fix (use normalized
query text)
",287397,3795,92020,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5336","dbeaver/dbeaver","3e79ae92dc51d6dcc608b4006270738601d343ab",1,"2020-03-25 14:10:21+03:00","#7620 MariaDB: SSL configuration fix
",287408,3795,92020,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5337","dbeaver/dbeaver","7b6414d414e987dd85dfa2d69da1e582c58365de",6,"2020-03-26 14:00:21+03:00","#8279 Global datasource property listener. RSV
handles property changes
",287485,3795,92028,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5338","dbeaver/dbeaver","f9ddcc72824ad32cf5a5f97dfcc5bd868debeafb",1,"2020-03-26 15:25:14+03:00","#8226 Exasol: FK model enhancement (read ref
columns)
",287553,3797,92067,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5339","dbeaver/dbeaver","b94748c3cb1deb8c6d4562a1aff1e16a83a7b9fc",2,"2020-03-28 11:19:21+01:00","Implements Consumer Groups #8252 and HashType
#8289 support
",288032,3801,92105,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"5340","dbeaver/dbeaver","d4303b0c22b6b82fbdc08964fb881df57924e08f",1,"2020-03-30 09:08:10+03:00","PG: data type reading fix
",288065,3801,92106,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5341","dbeaver/dbeaver","d6bffa1ce3d2ecc729bce3d735e1e1ea473ab1c5",2,"2020-03-30 10:14:27+03:00","#8222 SQL Server: queries with square brackets
parse fix
",288082,3801,92107,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5342","dbeaver/dbeaver","b631ce2d34d15324226cfad682efbd05e5686e8e",2,"2020-03-30 14:36:30+03:00","#8158 SQL preview: open editor button
",288143,3801,92110,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5343","dbeaver/dbeaver","53f90cff702ec87128ceddb77376d909237edf15",3,"2020-04-01 15:18:25+03:00","#7387 Connection view settings model
",288411,3806,92249,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5344","dbeaver/dbeaver","d4ef9e9e164fdb7d3550feef29289dfe31557da0",13,"2020-04-01 20:58:08+03:00","#7387 Navigator view: show only entities
",288507,3807,92327,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5345","dbeaver/dbeaver","867ff8a1bfeb267ad3f37c8db8fce8d99dd459f2",1,"2020-04-02 12:07:02+03:00","#8313 @include processing fixes
",288706,3807,92314,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5346","dbeaver/dbeaver","857f7cf5b9538b2ace84423a872f9e60536e2721",2,"2020-04-02 13:50:35+03:00","#8313 Script processing fix (single query scripts)
",288709,3807,92334,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5347","dbeaver/dbeaver","5c813b74b577ff3035d0a9373b0090a9a0a9c3c5",2,"2020-04-03 19:46:20+03:00","#8304 Fetch numbers as objects in case of error
",288723,3807,92334,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5348","dbeaver/dbeaver","a42bd7824d163ee13b521cf9ad07b917a419a60e",1,"2020-04-03 21:23:37+03:00","dbeaver/dbeaver#8333 GIS viewers model additions.
Complex data type viewer additions.
",288752,3807,92335,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5349","dbeaver/dbeaver","533ffdd8a765c144721487e5643d9c80c5fdae54",1,"2020-04-11 14:38:03+03:00","#8058 USe default processor settings for ""Open
With""
",288403,3808,92374,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5350","dbeaver/dbeaver","d8f62ca2aa317efad27c55ed3daaf48a52f0af53",3,"2020-04-13 10:19:17+03:00","dbeaver/dbeaver#342 RSV decorator additions
",288658,3809,92492,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5351","dbeaver/dbeaver","a4136e3bbd66be8e13f2aaf3399a877d782943e0",3,"2020-04-13 19:38:28+02:00","HANA: show primary keys + unique keys
",288654,3809,92488,"kai-morich","mail@kai-morich.de","kai-morich","mail@kai-morich.de"
"5352","dbeaver/dbeaver","329dedf54c0516da395e83761106df80f7caae5d",23,"2020-04-14 00:52:34+03:00","RSV presentation model refactoring
",288777,3812,92479,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5353","dbeaver/dbeaver","6bcd1a3fd412d0f5248ba5f52f8c6e6fd1761cd1",5,"2020-04-14 12:26:47+03:00","dbeaver/dbeaver#342 Data comparator
",288791,3812,92479,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5354","dbeaver/dbeaver","50e0c6f52ec286116d1cab9f341aac531209921c",1,"2020-04-20 14:38:30+03:00","#8427 Proxy detection fix. PG global connection
init fix (activate context)
",289013,3815,92535,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5355","dbeaver/dbeaver","402ce0970b70821877ff6d57684818b168214d35",1,"2020-04-22 21:08:02+03:00","Data transfer registry additions
",289196,3821,92634,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5356","dbeaver/dbeaver","8c24de6025f610205a9593f7ba30537bd4d88b4f",12,"2020-04-23 13:15:16+03:00","#8181 FB: system tables flag, metamodel read
refactored. Extra table properties
",289252,3821,92634,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5357","dbeaver/dbeaver","edf59735380e12b61383044f7e514b87a435e8fe",6,"2020-04-23 17:58:12+03:00","#2092 Auth profiles model
",289345,3821,92641,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5358","dbeaver/dbeaver","922c11bd2733673cb0a4d86191ced5492f95475e",4,"2020-04-23 20:04:58+03:00","#8532 Oracle Java classes model/sources
",289459,3822,92663,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5359","dbeaver/dbeaver","8e049adc93ebbd06dfa00f0af3a94ff7142a2c11",1,"2020-04-24 21:39:46+03:00","Reference panel: connection recovery
",289473,3822,92666,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5360","dbeaver/dbeaver","89141f907c1d64866f9183dd8bc98fb760116da4",1,"2020-04-27 11:25:50+03:00","#8536 Numeric formatting fix (NPE)
",289508,3822,92666,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5361","dbeaver/dbeaver","390d1206725e23c00642dc45f89fbfb2b9b51bbe",14,"2020-04-28 12:26:37+03:00","#8570 Firebird improvements. Minor Generic model
update.
",289821,3823,92881,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5362","dbeaver/dbeaver","76578739a92ec81657ea00a6cae393ebed9240fb",4,"2020-04-30 13:57:25+03:00","Driver model small refactoring
",289912,3830,92997,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5363","dbeaver/dbeaver","8f4fb961d446ca3f9b56890776cf0f5857b5edc9",4,"2020-05-01 13:13:30+02:00","hana: improved synonym support
",289949,3830,92997,"kai-morich","mail@kai-morich.de","kai-morich","mail@kai-morich.de"
"5364","dbeaver/dbeaver","d2c8bec4be7567a22d8b8d19c95785b996712653",1,"2020-05-06 21:54:03+03:00","#8507 Results tabs reuse fix
",290347,3837,93119,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5365","dbeaver/dbeaver","733b1cadabd2202acd1988d169a8e087197c9e18",44,"2020-05-07 21:01:48+03:00","#6481 PG: explain plan configuration dialog
",290469,3841,93198,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5366","dbeaver/dbeaver","254b26b0c934c8de0343e71287f23837d6384082",2,"2020-05-07 21:34:55+03:00","#6337 Do not use non-identifying constraints but
use DS-specific config
",290477,3841,93216,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5367","dbeaver/dbeaver","5897ce0ef1136e689bf3ca11dfd36cc2936ca963",2,"2020-05-08 17:41:33+03:00","Profiles model refactoring
",290510,3841,93216,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5368","dbeaver/dbeaver","99fe30b02b27e154e7557afcc32803542c57251e",2,"2020-05-09 11:41:31+02:00","Implement #8348
",290247,3837,93091,"Charly","fullref@gmail.com","Charly","fullref@gmail.com"
"5369","dbeaver/dbeaver","d067f67cc5e19315598a3f81e52650781b0ba358",26,"2020-05-09 16:09:11+03:00","dbeaver/dbeaver#2092 Auth profiles in action.
Secure credentials save/load redesign
",290654,3844,93270,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5370","dbeaver/dbeaver","fa18c32a284b62ecb230d370e99c3523e9328010",2,"2020-05-10 22:48:54+03:00","Number format preferences initialization fix
",290669,3845,93285,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5371","dbeaver/dbeaver","db71b812d718f1e4628251bd2ac8d2ee031de842",1,"2020-05-11 22:53:02+03:00","#6216 Pinned columns POC
",290781,3845,93295,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5372","dbeaver/dbeaver","7176d8cde1bb0f06ac4b71a2e6809bce0b13f356",1,"2020-05-12 10:05:10+03:00","#6216 Detect column by pos fix
",291140,3858,93349,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5373","dbeaver/dbeaver","8707033f689b2b90115d3c4dd6378236f7db87d8",2,"2020-05-12 12:44:02+03:00","#2092 Auth model refactoring. Profiles init fixed
",291041,3859,93364,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5374","dbeaver/dbeaver","9ffa93b23d8e5b311ce13f0bba36dab57606dafb",6,"2020-05-12 12:47:32+03:00","#2092 Auth model refactoring
",291041,3859,93364,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5375","dbeaver/dbeaver","db20801cc7c38563a81ad3b278794a435df2979f",2,"2020-05-12 13:58:35+03:00","#6216 Preserver pinned columns order. Constraint
options model
",291185,3859,93371,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5376","dbeaver/dbeaver","45ce3af130e0065b3cd58cfcaf8804ce3d2fac5a",3,"2020-05-12 17:06:48+03:00","#6216 Save pinned columns settings in filter
",291215,3859,93371,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5377","dbeaver/dbeaver","60dbec2041a31aadf2802e6f98eec1f6b155d521",2,"2020-05-15 02:01:05+03:00","#8705 Statistics rendering POC (MySQL)
",291409,3863,93496,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5378","dbeaver/dbeaver","2acde0c71368e01f109d7d234f4fb5488ea1ea11",1,"2020-05-15 11:50:44+03:00","#8705 PG statistics + folders support
",291479,3863,93499,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5379","dbeaver/dbeaver","a7144e283a9a72201d00e43134dd1ee28921b6fd",2,"2020-05-15 15:37:48+03:00","#8705 Oracle tablespaces stats
",291537,3864,93527,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5380","dbeaver/dbeaver","80c6ff22db54c185ba035ac28cd294e596a8b72c",1,"2020-05-15 17:46:51+03:00","#8705 Oracle tables
",291604,3864,93532,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5381","dbeaver/dbeaver","aa8ca3a3459f7d8a605bcf4c17e74ad5a6b038f2",13,"2020-05-15 18:59:36+03:00","#8705 Clickhouse statistics
",291709,3866,93570,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5382","dbeaver/dbeaver","9ca3e55e90b31d222f143bd525b0b02314bf0005",1,"2020-05-15 19:20:36+03:00","#8714 Clickhouse statistics
",291777,3866,93570,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5383","dbeaver/dbeaver","c19612897404006bd346e519f7ebf0468f1a0b82",4,"2020-05-18 23:10:34+03:00","Navigator model extenders + schema fixes
",291897,3870,93643,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5384","dbeaver/dbeaver","ecd60ae84194c665e6be76ea94565680de6edd40",12,"2020-05-20 19:42:28+03:00","Driver model refactoring (use interface when
possible)
",291991,3871,93666,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5385","dbeaver/dbeaver","49ce103bf1a43af1a1842d759d93c60377529758",12,"2020-05-21 16:47:04+03:00","Navigator extension model adds
",292037,3871,93668,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5386","dbeaver/dbeaver","64ddf2b574973ede9d2e72883a124220c1906468",1,"2020-05-26 11:09:15+03:00","#8789 RSV values release improvement (release
before new data read). PG cursor reuse
",292113,3871,93679,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5387","dbeaver/dbeaver","a3de605d001f6bf5d7a5e47c6b341e56f3571565",14,"2020-05-26 11:51:38+03:00","#8789 Cursor view panel + open/close + txn mode
check
",292166,3873,93718,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5388","dbeaver/dbeaver","d9a6f9e67d12910faf2302634bcab680eb9d1482",11,"2020-05-27 15:18:09+03:00","#8810 SQL tool task mode. Task registry
refactoring
",292467,3878,94083,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5389","dbeaver/dbeaver","e0c14ae439f29815f03914db1be252b2f337576c",3,"2020-05-28 00:21:27+03:00","#8810 SQL tools wizard and settings page
",292515,3879,93859,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5390","dbeaver/dbeaver","c8e07aa4e9432769b9d1e47133143713585a0808",4,"2020-05-30 23:32:11+03:00","Access session model
",292539,3880,93884,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5391","dbeaver/dbeaver","056258ec619ed6af36443c6efea85075f582e244",3,"2020-05-31 11:55:35+03:00","SQL script task UI configurator
",292550,3881,93907,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5392","dbeaver/dbeaver","bdb690853f3333f624604c2f1c3b7fb71dc0620f",1,"2020-05-31 13:45:12+03:00","Object selector dialogs refactoring. SQL tools
configurator additions.
",292693,3882,93927,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5393","dbeaver/dbeaver","220f29820d6987ec9ccbc4406295faeecf5bb746",4,"2020-05-31 16:39:48+03:00","Native tools UI refactoring
",292832,3883,93926,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5394","dbeaver/dbeaver","c0cd836948cfa1e610cf3cd736fb45c3457ffb9e",4,"2020-06-03 13:02:07+03:00","#8653 hide oracle number type values scale and
precision if they are default
",293008,3885,93995,"LonwoLonwo","anvolka@yandex.ru","LonwoLonwo","anvolka@yandex.ru"
"5395","dbeaver/dbeaver","c7eb2376fdd4a95b6a84ddfd3f75b271bb780e2d",3,"2020-06-03 19:39:41+03:00","#8888 SQL Server statistics Statistics prop
category refactoring. Stat rendering fix
",293095,3885,93997,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5396","dbeaver/dbeaver","18fe3efc67e4b6c0556bedae8c2ed9091b3822ed",6,"2020-06-04 16:58:48+03:00","#8810 SQL tools wizard improvements
",293321,3896,94164,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5397","dbeaver/dbeaver","4199c28178bf581fe88a9562211e1df9d6e0841c",1,"2020-06-05 15:53:47+03:00","#8893 Tools to tasks. PostgreSQL. Refresh
materialized view. Table/Database analyze
",293617,3906,94351,"LonwoLonwo","anvolka@yandex.ru","LonwoLonwo","anvolka@yandex.ru"
"5398","dbeaver/dbeaver","b4087078dc333cb6a27866e195c3079bb15c0dd3",1,"2020-06-05 19:01:42+03:00","#8893 Tools to tasks. PostgreSQL. Table truncate
settings
",293654,3908,94377,"LonwoLonwo","anvolka@yandex.ru","LonwoLonwo","anvolka@yandex.ru"
"5399","dbeaver/dbeaver","15d4b81de4442d22c88973c1340ede28fef3837a",1,"2020-06-05 19:35:42+03:00","#8893 Tools to tasks. PostgreSQL. Table analyze,
duplicate code removed
",293638,3906,94345,"LonwoLonwo","anvolka@yandex.ru","LonwoLonwo","anvolka@yandex.ru"
"5400","dbeaver/dbeaver","2d0acda8d419e8e6540648cc629914f52974761f",19,"2020-06-10 16:53:59+03:00","#8861 Table triggers model. Object search
improvements.
",293872,3912,94420,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5401","dbeaver/dbeaver","5f365512f12c5083c22048078fb5069f1c2aff32",4,"2020-06-15 00:41:47+03:00","#5631 Redshift: view with no schema binding column
reading
",294152,3925,94610,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5402","dbeaver/dbeaver","b676ba3c14d779f3bb4ccc43ec38664e047318b2",1,"2020-06-19 07:39:53+02:00","Solution for #9028 and #9029
",294283,3931,94698,"Karl Grießer","karl.griesser@arz.at","Karl Grießer","karl.griesser@arz.at"
"5403","dbeaver/dbeaver","34e0597813801296b03fe810c56d47e5bd740150",1,"2020-06-25 15:55:34+03:00","#8431 ability to export data to php arrays added
",294924,3938,94796,"LonwoLonwo","anvolka@yandex.ru","LonwoLonwo","anvolka@yandex.ru"
"5404","dbeaver/dbeaver","ea8c3d392ed4b651da4f9a1ed6c93e4219f8fd82",1,"2020-06-26 16:13:53+03:00","#8964 fixed PostgreSQL Partition DDL
",294886,3938,94795,"SA357","ivanzadov2000@gmail.com","SA357","ivanzadov2000@gmail.com"
"5405","dbeaver/dbeaver","d66446962ad3d8b34041ea7c2d4b709a39b69625",1,"2020-06-30 11:37:03+02:00","implementes #8479
",295041,3939,94808,"Karl Grießer","karl.griesser@arz.at","Karl Grießer","karl.griesser@arz.at"
"5406","dbeaver/dbeaver","dbf6e12e95df89d51bc807cf4ed6953489f1b283",3,"2020-07-03 12:38:09+03:00","#8828 Firebird: new table create fix (classCast)
",295196,3939,94810,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5407","dbeaver/dbeaver","992fb16cbac4e982186b1bac236df4fa699d42c8",1,"2020-07-05 12:01:34+03:00","Properties model refactoring
",295204,3939,94810,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5408","dbeaver/dbeaver","16ca7c8c54e6a5dfe239a57ba98edc8f1f273349",35,"2020-07-05 12:55:54+03:00","Properties model refactoring
",295177,3939,94806,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5409","dbeaver/dbeaver","b3a0b85f1802aa8bab05be28a68cac65d22dcd3a",9,"2020-07-05 13:11:27+03:00","Properties model refactoring (features)
",295262,3940,94822,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5410","dbeaver/dbeaver","dbc5c27c72f5900e970d85ec3e7856ccfe507034",1,"2020-07-05 14:19:09+03:00","Auth model credentials model
",295313,3942,94862,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5411","dbeaver/dbeaver","e729e2687175861c6df6f881d0fc48dc0c2fabc1",16,"2020-07-05 16:11:10+03:00","Auth model credentials model refactoring
",295325,3943,94878,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5412","dbeaver/dbeaver","b412aa3fd16fa8a20f3f00270bbd288ed257c42a",3,"2020-07-05 16:36:41+03:00","Auth model credentials model refactoring
",295337,3944,94897,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5413","dbeaver/dbeaver","43ba58251cdf4ca3316f51fce58bdf602127e657",30,"2020-07-05 17:59:52+03:00","Auth model credentials API
",295361,3944,94900,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5414","dbeaver/dbeaver","dd4bdeb723dd4f41373b66ea587e8d82045c666e",1,"2020-07-06 16:39:13+03:00","Transform DB2 tools into tasks #9141 Transformed
DB2TruncateTool into task
",295331,3943,94938,"SA357","ivanzadov2000@gmail.com","SA357","ivanzadov2000@gmail.com"
"5415","dbeaver/dbeaver","84bfd2f724798f4d45e9e8ca0d160fda85236902",1,"2020-07-06 17:21:03+03:00","Transform DB2 tools into tasks #9141 Transformed
DB2ReorgCheckTableTool into task
",295355,3945,94947,"SA357","ivanzadov2000@gmail.com","SA357","ivanzadov2000@gmail.com"
"5416","dbeaver/dbeaver","3ba2859115229a28a05c3e789d9208461ebae4e5",2,"2020-07-07 14:31:32+03:00","Transformed DB2 tools(Truncate, ReorgCheckTable,
ReorgIndex, Runstat) into tasks #9141
",295537,3949,94959,"SA357","ivanzadov2000@gmail.com","SA357","ivanzadov2000@gmail.com"
"5417","dbeaver/dbeaver","69be322d3a90adb98c0a01884544429df21a6b22",2,"2020-07-08 14:00:06+03:00","Transform DB2 tools into tasks #9141 Added
License, ""$NON-NLS-1$"", localization and small
fixes
",295579,3950,94984,"SA357","ivanzadov2000@gmail.com","SA357","ivanzadov2000@gmail.com"
"5418","dbeaver/dbeaver","562bdd75d169a2f9b4ac3f530b4f29c35bca287d",2,"2020-07-10 15:41:03+03:00","Db2 tools into tasks #9141 added
DB2TableTruncateOptions, made property names even
more shorter
",295332,3947,94891,"SA357","ivanzadov2000@gmail.com","SA357","ivanzadov2000@gmail.com"
"5419","dbeaver/dbeaver","9680a66e72a18ebc9fad239fb25ed31ae8ff7712",1,"2020-07-22 00:25:35+03:00","#9155 check constraints moved to ""constraint"" tab
",295561,3951,94963,"Anastasiya Volkova","anvolka@yandex.ru","Anastasiya Volkova","anvolka@yandex.ru"
"5420","dbeaver/dbeaver","99a2c2ab27dbd9eacac4c8f492ecf11f5503df13",3,"2020-07-22 13:25:49+03:00","#9155 renaming; columns for check constraints in
the table are no longer shown
",295561,3951,94963,"LonwoLonwo","anvolka@yandex.ru","LonwoLonwo","anvolka@yandex.ru"
"5421","dbeaver/dbeaver","9109fc05671e8b3df077d1fe56403f47ed652c13",3,"2020-07-23 19:34:16+03:00","#9291 Clickhouse: view drop + table + view manager
",295717,3954,95050,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5422","dbeaver/dbeaver","cf95d477947d9d14e0c95ed6f44d83c1b31cd2c3",8,"2020-07-23 21:26:30+03:00","#9310 Sybase & SQL Server Generic - new column
create fix (NULL modifier)
",295779,3957,95104,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5423","dbeaver/dbeaver","eaeea128616c73abc15fc47c0e4a8e796018bf6b",6,"2020-07-25 17:45:54+03:00","#9193 UUID value handler
",296020,3961,95188,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5424","dbeaver/dbeaver","dece42624f7b5784ebe69540946a462313571eec",1,"2020-07-25 18:29:40+03:00","#8026 Workaround for ""ORA-17283: No resultset
available""
",296046,3961,95189,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5425","dbeaver/dbeaver","68abb6c339ed2cd0145033f53c8a54da9c81db98",2,"2020-07-26 20:57:56+03:00","Data transfer: support document-based targets
",296164,3962,95216,"serge-rider","serge@jkiss.org","serge-rider","serge@jkiss.org"
"5426","dbeaver/dbeaver","9faf767f71fe1c7dd4bd4c975f5b9859acfda464",23,"2020-07-27 16:54:49+03:00","#9174 Dump server output after results data
manipulation (insert/update/delete)
",296370,3966,95316,"Serge Rider","serge@jkiss.org","Serge Rider","serge@jkiss.org"
"5427","signalapp/Signal-Android","a4e18c515c61674dbe04f93fecce2b71c91f840b",2,"2015-03-11 14:23:45-07:00","Remove encrypted SMS transport, simplify transport
options.  Closes #2647  // FREEBIE
",32745,387,9541,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5428","signalapp/Signal-Android","6a6f900b7d6f6ab1298e5ac8576746aa87e09c6e",1,"2015-03-27 10:26:17-07:00","Fix NPE when 'from' missing in NotificationInd
Fixes #2806 // FREEBIE
",33280,398,9664,"Jake McGinty","me@jake.su","Jake McGinty","me@jake.su"
"5429","signalapp/Signal-Android","082985276f4abd066f9c4f07052ab5c82f576c34",3,"2015-05-18 08:38:48-07:00","Fix for media thumbnails flickering on model
updates.  Only update ImageView contents when they
have changed.  Fixes #1004 Fixes #2663 Closes
#3184  // FREEBIE
",33707,413,9630,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5430","signalapp/Signal-Android","fe4e2fcadba812b8e6cd7db53c3a006f4b67b521",1,"2015-05-18 10:26:32-07:00","Support for direct photo capture from app.  Make
the send button toggle to an attach button when
the compose text and attachments are emmpty.  Part
of #520 Closes #3186  // FREEBIE
",33865,415,9630,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5431","signalapp/Signal-Android","94085798621f4036454fef2a4096ad7588a80793",3,"2015-05-21 17:29:23-07:00","ASCII emoji support  Fixes #2943 Closes #3283 //
FREEBIE
",33940,417,9609,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5432","signalapp/Signal-Android","4dce95142f89a7166b370f91a34aae54717a6ab3",2,"2015-05-30 23:52:41-07:00","fix emoji not being replaced with Editable actions
Fixes #3267 Closes #3292 // FREEBIE
",33941,417,9612,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5433","signalapp/Signal-Android","40af2a81dbe43ec89fcfea88d33b52814074d90f",1,"2015-06-09 07:37:20-07:00","Support for per-recipient muting, blocking, and
ringtones.  Fixes #757 Fixes #354 Fixes #222
Closes #1815 Closes #3378  // FREEBIE
",35973,455,10067,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5434","signalapp/Signal-Android","155cbf686d59cd0172debc000c6883741b8e84a5",2,"2015-06-11 14:42:32-07:00","Add version info in preferences/advanced  Fixes
#3324 Closes #3404
",36073,457,10070,"Nicholas Thomson","neekthomson@gmail.com","Moxie Marlinspike","moxie@thoughtcrime.org"
"5435","signalapp/Signal-Android","ce2f66ad17c9f7d3ab055188390289d7aaca696a",1,"2015-06-30 09:16:05-07:00","Refactor colorization to support dark theme.  //
FREEBIE
",37426,489,10071,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5436","signalapp/Signal-Android","9bf7562d49b019e1c6cdf9fb1327ef5a5c0a1e6e",4,"2015-07-01 08:13:09-07:00","Use theme-defined weights instead of ThemeType.
// FREEBIE
",37403,488,10067,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5437","signalapp/Signal-Android","4ea40b30a25aace5629e65b1d690db11d4794ddf",1,"2015-07-01 12:22:42-07:00","Switch to enum and theme type for MaterialColor.
// FREEBIE
",37052,472,10067,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5438","signalapp/Signal-Android","35159ac4567a4e22c15e5b958a65981f43c916fb",3,"2015-07-10 16:11:58-07:00","make TransportOptionsPopup a ListPopupWindow
disable circular reveal at least for now  Fixes
#3600 Closes #3607 // FREEBIE
",38416,486,10105,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5439","signalapp/Signal-Android","9b2aabfdc8ece6c1002176ae75abe98229a46054",2,"2015-07-10 14:58:05-07:00","add EmojiSpan that scaled w/ TextView  Fixes #3317
Closes #3605 // FREEBIE
",38418,487,10105,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5440","signalapp/Signal-Android","8d9ae731ef4124dbb3900e0b62cc98199b64c783",15,"2015-07-06 17:36:49-07:00","Only use MasterSecret for local message
encryption.  Not for the axolotl store.  //
FREEBIE
",38569,488,10088,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5441","signalapp/Signal-Android","d1940fe0f94d166d38ba475402b9defdff2f6998",4,"2015-07-14 14:31:03-07:00","Support for populating contacts DB with TS account
type.  // FREEBIE
",38755,491,10088,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5442","signalapp/Signal-Android","13bad6dfed6d7fc329cbc7ce54d93ced3f4f42e6",2,"2015-07-24 13:22:28-07:00","Smooth transition for custom keyboards and softkey
Closes #3786 Fixes #3780 // FREEBIE
",38960,494,10128,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5443","signalapp/Signal-Android","120cde9917d9eaa8e94ad1494efce5d30bcc51a5",7,"2015-07-31 15:05:24-07:00","Support for notification privacy settings.  //
FREEBIE
",39099,498,10115,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5444","signalapp/Signal-Android","f812efff3c893929ae3b16a1d46b0d5f8a22d016",1,"2015-07-20 15:05:56-07:00","only create DB readers as needed  Closes #3730 //
FREEBIE
",39188,498,10115,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5445","signalapp/Signal-Android","3c400f958e41cfef00e5c31aa58d1c58b564eaa0",1,"2015-08-06 10:35:51-07:00","handle null emojify inputs better  fixes #3889
Closes #3901 // FREEBIE
",39202,498,10115,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5446","signalapp/Signal-Android","82b74e8ce7e66623f768a95ab0ab95f6bb70cb6c",1,"2015-08-10 09:33:57-07:00","Fix NPE on media message with no media.  Fixes
#3921 // FREEBIE
",39219,498,10115,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5447","signalapp/Signal-Android","1641fd91cfb62faaac120b9ae583d975277c42b0",1,"2015-07-30 15:02:20-07:00","let ThumbnailView handle remove button placement
Closes #3849 // FREEBIE
",39252,498,10115,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5448","signalapp/Signal-Android","80ce83ef9dcbcf5c846bc2b06fb8d43a0e2813aa",5,"2015-08-24 15:24:31-07:00","Media download controls  Closes #3991 // FREEBIE
",39508,504,10128,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5449","signalapp/Signal-Android","551274f167db2905714b0b76abc97394a2e221f6",2,"2015-09-04 17:33:22-07:00","Large attachment support  Closes #4019 // FREEBIE
",39502,503,10127,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5450","signalapp/Signal-Android","415a61a09b8d648ebcaf8c915f71591c2ff72f7e",3,"2015-09-07 15:08:44-10:00","TransferControlView  Closes #4044 // FREEBIE
",39544,504,10127,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5451","signalapp/Signal-Android","0794380ca8f28503c08b252dd38c2b354b10e8dc",1,"2015-09-16 17:31:24-07:00","Listen for recipient changes in conversations and
group updates.  Closes #4079 // FREEBIE
",39679,507,10119,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5452","signalapp/Signal-Android","92b2da028644ecba9fb983fdc4fb914f0434eb29",8,"2015-09-09 18:05:21-10:00","download control details  Closes #4063 // FREEBIE
",39747,507,10119,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5453","signalapp/Signal-Android","9ea53d7b1e6777c3ca440cc52f278daf2f2cc209",3,"2015-09-17 17:53:09-07:00","fix gingerbread view issues  Closes #4085 //
FREEBIE
",39764,507,10119,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5454","signalapp/Signal-Android","99d3374d35b5027850fdc31c8a2620fb5f83fbf7",3,"2015-09-15 15:28:27-07:00","migrate conversation list to RecyclerView  fixes
#2488 fixes #2333 // FREEBIE
",39782,508,10119,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5455","signalapp/Signal-Android","26979b1c626391df9ba96c0e3165c1f17036e831",2,"2015-09-21 10:54:23-07:00","Log calls to conversations  // FREEBIE
",46855,642,17002,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5456","signalapp/Signal-Android","3035dc4df9c35f0801ea3133aeacc26a1a287d99",1,"2015-09-29 13:14:22-07:00","Experience upgrade splash screen.  Behaves
similarly to the DatabaseUpgradeActivity. You have
a static list of ExperienceUpgrade models that
include a ""trigger"" version, where when a user
upgrades through it a notification will appear,
and there will be a splash explanation screen.
Right now the splash screens are basic and not too
configurable, but that can be reworked as upgrades
demand.  Closes #4151
",46361,605,13211,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5457","signalapp/Signal-Android","cdf982a356081329ca03b88de9d24669cbd68083",3,"2015-10-01 12:28:29-07:00","be safer when processing parts in
AttachmentDownloadJob  Closes #4166 // FREEBIE
",46451,607,13211,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5458","signalapp/Signal-Android","09e52834a6cc080a2234dbf01e713e12222b467c",35,"2015-10-12 18:25:05-07:00","Refactor ""parts"" to contain MMS/PDU madness to MMS
code paths.  Closes #4248 // FREEBIE
",46555,614,13194,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5459","signalapp/Signal-Android","ae97495c47afed6613a350b24661e999503f3e06",7,"2015-08-04 12:29:26-07:00","only load partial conversation by default  Closes
#4252 Fixes #3911 // FREEBIE
",46667,615,13194,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5460","signalapp/Signal-Android","d2f44f6584e779a1215cfff9e0b45fcd353eb4d7",2,"2015-10-21 15:32:19-07:00","Join attachments instead of running an
asynchronous query.  No more SlideDeck futures,
just SlideDecks.  // FREEBIE
",46651,617,13195,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5461","signalapp/Signal-Android","15c6f18750a78474fe5ed2084070a2a60693a353",25,"2015-10-21 15:32:29-07:00","Support for an audio view to allow in-app playback
of audio.  Closes #4270 // FREEBIE
",47250,622,13231,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5462","signalapp/Signal-Android","5111fe2e95b705ce25e041f1691665817c2f764a",3,"2015-10-16 13:59:40-07:00","Display thumbnail previews for images in
conversation list.  Closes #4262 // FREEBIE
",47320,622,13231,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5463","signalapp/Signal-Android","c258b4c7aa63d9572371cd7d577e2e2fcfe3da8a",2,"2015-10-24 09:40:04-07:00","Expand MMS-specific queries, properly parse
incoming MMS.  // FREEBIE
",47335,622,13231,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5464","signalapp/Signal-Android","8fd0ea39aabed7494abd3929803f355cfad83003",4,"2015-10-26 17:20:09-07:00","Simplify excessively convoluted camera logic  1)
QuickCamera logic moved into CameraView  2) The
strategies for texture vs. surface view were too
complex    with no observed gain. Better to remove
and have to re-add    if necessary than assume it
to be necessary.  3) Drop CWAC-Camera dependency -
the device profiles weren't being    used very
much and even that is deprecated so we'd be left
on    our own with new hardware. Not worth it.  4)
Selfies first.  5) Layout/orientation mathy logic
from CWAC moved into CameraUtils,    with the
hopes that most of it might be further simplified
or    rendered unnecessary in the future.  Closes
#4326  // FREEBIE
",46552,619,12194,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5465","signalapp/Signal-Android","3e798a9863c6581e05597fe17ce05e1a574a0572",4,"2015-10-19 11:23:12-07:00","batch invitation  // FREEBIE
",46958,623,12194,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5466","signalapp/Signal-Android","5b6f49c993cbcb53ab38955b51e98da997f4b7e5",9,"2015-11-02 14:32:02-08:00","Switch RedPhone view<->service interaction to use
event bus  Fixes #4234 // FREEBIE
",46911,624,12194,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5467","signalapp/Signal-Android","59f2446a2ba6a3158be893d5dce7deae7e113cd8",9,"2015-10-15 14:40:45-07:00","unjankify incoming media sharing  Closes #4374
Fixes #3989 // FREEBIE
",47005,624,12194,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5468","signalapp/Signal-Android","d05097a6fd19357ead136882eba7e1edd0a03e13",5,"2015-11-05 10:41:43-08:00","Refactor group logic (no visual changes)  Closes
#4480 // FREEBIE
",47471,630,12248,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5469","signalapp/Signal-Android","7bec5efe1a4ac3fd30882a14d573c9e3558c45ed",1,"2015-11-09 12:30:36-08:00","Add 'Signal Call' option to contact card  Fixes
#4392 Closes #4465 // FREEBIE
",47563,631,12248,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5470","signalapp/Signal-Android","fb8d6cb538511d2e9745b764c91f111861035a1d",2,"2015-11-02 17:40:41-08:00","contact selection reeemix  1) RecyclerView-based,
with better long scroller    and more material-
inspired look. 2) Add badge for Signal users to
contact selection    list.  // FREEBIE
",47907,632,12302,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5471","signalapp/Signal-Android","69f5aacd2514ba3ea90d1b3cfba3908e229bc40b",2,"2015-11-14 15:17:05-08:00","Consider everything <= len(4) a short code, except
short countries  // FREEBIE
",48079,634,12302,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5472","signalapp/Signal-Android","f82a7fee493d24635e79590122131c29c602c0b7",2,"2015-11-13 17:13:40-08:00","re-commit refactored CameraView  closes #4529
Confirmed fixed front-camera bug in Galaxy Nexus.
// FREEBIE
",47933,631,12274,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5473","signalapp/Signal-Android","bcd08956bd8d041fd80df72e1b964d38aaa1b555",1,"2015-11-16 18:38:36-08:00","clear drafts immediately upon sending or new
intent  fixes #3843 closes #3850 Closes #4571  //
FREEBIE
",46786,601,11800,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5474","signalapp/Signal-Android","7aeb4c96eea89f3a4372ccce1b8500cc698d1d11",1,"2015-11-18 18:24:47-08:00","fix crash on null Android contact name  fixes
#4592 Closes #4594 // FREEBIE
",46725,600,11764,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5475","signalapp/Signal-Android","02c37e815cecb41a2378a8134130afd1f51bb5d1",3,"2015-11-18 12:54:40-08:00","enable media forwarding  fixes #1362 closes #4589
// FREEBIE
",46768,600,11764,"Jake McGinty","me@jake.su","Jake McGinty","me@jake.su"
"5476","signalapp/Signal-Android","7c0bf0c871c96dd89605e3daf07d3c332522fdef",4,"2015-11-19 10:21:19-08:00","Device provisioning  Closes #4553 // FREEBIE
",47208,604,11763,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5477","signalapp/Signal-Android","4314a4b42b63a5746dc3428a9c1ea11b75aa76f5",1,"2015-11-13 13:20:16-08:00","add stable IDs to conversations  fixes #2856
Closes #4607 // FREEBIE
",47293,605,11763,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5478","signalapp/Signal-Android","4e8e8978f44d94beb94c92fe74027c3365a0bd2f",7,"2015-11-19 16:00:07-08:00","update camera preview strategy  // FREEBIE
",47294,605,11763,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5479","signalapp/Signal-Android","bfe4ad6c34481f40328f0dcbf288ee1bec11eb02",7,"2015-11-18 14:52:26-08:00","Voice notes  Closes #4610 Closes #3563 // FREEBIE
",47828,608,11763,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5480","signalapp/Signal-Android","4fe625696761da1bc7a7b7c20416c2b4ef7ff258",1,"2015-11-19 17:52:29-08:00","run Camera.startPreview() off main thread  Closes
#4620 // FREEBIE
",47827,608,11763,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5481","signalapp/Signal-Android","473e470883e042d9925abb2ecdd5c7cbcbb67afc",1,"2015-11-22 16:04:49-08:00","fix header/footer item ID issue  fixes #4667
Closes #4685 // FREEBIE
",47842,608,11763,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5482","signalapp/Signal-Android","a0beb7f0e0e630cf274fc709cd291d31564dc73d",1,"2015-11-23 11:33:51-08:00","scroll *all* the way  fixes #4664 closes #4695 //
FREEBIE
",47845,608,11763,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5483","signalapp/Signal-Android","3bfb123b3332cb6c9a61aa63af925ada03b8ae42",2,"2015-11-20 11:24:29-08:00","fix selfie horizontal flip  Closes #4635 //
FREEBIE
",47991,610,11765,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5484","signalapp/Signal-Android","b4e28e219bd698e7f4dc746b5325ce0f1fb8b363",2,"2015-11-23 15:19:05-08:00","fix false camera captures  // FREEBIE
",48027,610,11765,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5485","signalapp/Signal-Android","2ab0029d4929e020414ab56e5afdfddc3a695726",5,"2015-11-23 15:07:41-08:00","Support for archive actions  Fixes #1141 Closes
#4698 // FREEBIE
",48428,614,11765,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5486","signalapp/Signal-Android","e83827ab75d070d5743308528a774e7df80c3fc9",2,"2015-11-21 17:04:19+09:00","""image/jpg""->""image/jpeg"" on MIME type checks and
saving  Fixes #4602 Closes #4643
",48436,614,11765,"Geonu Kang","blamethegnu@unrulygnu.com","Moxie Marlinspike","moxie@thoughtcrime.org"
"5487","signalapp/Signal-Android","946c43940b1e5ddb06db4bf7e86e09284cea95ff",3,"2015-11-27 14:45:07-08:00","add equals/hashCode to glide models  Closes #4737
// FREEBIE
",48457,614,11765,"Jake McGinty","me@jake.su","Moxie Marlinspike","moxie@thoughtcrime.org"
"5488","signalapp/Signal-Android","adcb29616a18a027badca8ce3d1cb6fc44ca87e6",2,"2015-11-30 11:16:30-08:00","Keep track of attachmentmanager garbage  Fixes
#4764 // FREEBIE
",48487,614,11766,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5489","signalapp/Signal-Android","3b80e3554732865e42406e36f4bf38bef661af5a",3,"2015-12-04 15:00:13-08:00","Display group info in message notifications  Fixes
#1033 Fixes #2558 Closes #3020 // FREEBIE
",48577,616,11765,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5490","signalapp/Signal-Android","e79ee7803fea85ec999e0f6dc803fc1227096cd0",1,"2015-12-11 10:39:55+01:00","Enable preview for image drafts  Closes #4863
",48722,618,11765,"McLoo","McLoo@gmx.com","Moxie Marlinspike","moxie@thoughtcrime.org"
"5491","signalapp/Signal-Android","4fa6680f835f51689ccebe986210e3bdef121df1",2,"2015-11-26 19:04:27+01:00","RTL support  Closes #4916 Fixes #4714
",48773,618,11765,"agrajaghh","agrajaghh@gmail.com","Moxie Marlinspike","moxie@thoughtcrime.org"
"5492","signalapp/Signal-Android","bcf95e50aa38cae2dfe640ea1a1e26cbaa3a84b7",4,"2015-12-18 14:37:11-08:00","Support for location messages  Start with encoding
as a simple image thumbnail for compatibility with
MMS and iOS  // FREEBIE
",48938,621,11765,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5493","signalapp/Signal-Android","759f9d80169bf8d6de7d973366e4bbc5cc890900",9,"2016-01-04 13:02:22-08:00","Support for location drafts  Fixes #4979 //
FREEBIE
",49008,621,11765,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5494","signalapp/Signal-Android","6da86e482da9a4451bb81875c39af1658c24e473",48,"2016-02-05 16:10:33-08:00","Support for dual-sim SMS/MMS functionality  Allow
source selection for sending SMS/MMS, and display
the SIM that received SMS/MMS.  Fixes #555 Closes
#5199 // FREEBIE
",49329,623,11751,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5495","signalapp/Signal-Android","7b589c4300f5cad4c7b061a397a26269d2eb73f0",4,"2016-03-23 10:34:41-07:00","TextSecure is now SignalService  // FREEBIE
",49670,624,11751,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5496","signalapp/Signal-Android","d7e4928f22e0a0e123eadd7442c32296b6eb6fad",3,"2016-08-15 20:23:56-07:00","Support for disappearing messages  // FREEBIE
",50521,632,11749,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5497","signalapp/Signal-Android","a370f086c0dcbd93b4c89abc410fb9f4708e2945",2,"2016-08-01 00:15:49+02:00","Respect privacy settings on ticker content for
Android <5  Fixes #5517 Closes #5592  // FREEBIE
",50544,632,11768,"FeuRenard","feurenard@posteo.de","Moxie Marlinspike","moxie@thoughtcrime.org"
"5498","signalapp/Signal-Android","85ea7e1bf49a0e1e5aac35809aa90cb17391f745",1,"2016-08-31 01:48:40+02:00","Preserve maxLength for EmojiEditText  Addresses
#3388 Closes #5649 // FREEBIE
",50703,634,11775,"FeuRenard","feurenard@posteo.de","Moxie Marlinspike","moxie@thoughtcrime.org"
"5499","signalapp/Signal-Android","852634b2946e841fa986b76eb55ffe81a1926150",3,"2016-08-24 18:51:45-07:00","Support for updated fingerprint format  // FREEBIE
",50828,635,11710,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5500","signalapp/Signal-Android","848a25664b746f89b4435b01728247bf3d3135f4",1,"2016-08-29 17:49:49-07:00","Make fingerprint changes optionally non-blocking
Also complete the rename from ""identity"" to
""safety numbers.""  // FREEBIE
",50973,638,11710,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5501","signalapp/Signal-Android","8d44a145f02f34f30983405a42e9d4a39d2d18de",2,"2016-10-10 11:13:37-07:00","Start expiration timer when marked read from
notification  // FREEBIE
",51110,639,11725,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5502","signalapp/Signal-Android","69d0242574cc68b068afe3a00861e574b176f08b",16,"2016-10-16 19:05:07-07:00","Giphy integration  // FREEBIE
",51948,656,11830,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5503","signalapp/Signal-Android","4bf3632b40d1ac5ab4e05cf1427376e1400a149c",2,"2016-11-01 09:01:10-07:00","Better null result handling  // FREEBIE
",52009,656,11830,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5504","signalapp/Signal-Android","b55a7ff5c05adc0b2e5c5c0b2b54f116f964cec3",4,"2016-11-14 19:50:29-08:00","Add copy and compare safety numbers from clipboard
actions  // FREEBIE
",52116,656,11829,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5505","signalapp/Signal-Android","9148b7da5f4604dae1106d3932bfa7d3bfa63ad4",2,"2016-09-14 23:58:24+02:00","Initial Android Auto support  This adds android
auto support accordign to https://developer.androi
d.com/training/auto/messaging/index.html#messaging
However, since android auto is not officially
supported in my country, the functionality is
limited. Which means that I have not been able to
fully test everything yet.  What work is: *
Message notification is shown. * When you click on
it, the message is read.  Closes #5880
",52384,657,11865,"Mattias Eriksson","snaggen@mayam.com","Moxie Marlinspike","moxie@thoughtcrime.org"
"5506","signalapp/Signal-Android","8b342ee18bd8e63d4de715d54180233b949320a0",11,"2016-11-25 22:37:23-08:00","Support for ""recent photos"" thumbnailsabove
attachment selector  // FREEBIE  Closes #5893
",52525,659,11865,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5507","signalapp/Signal-Android","1b44bdcd3cafee26f08327f4ba6d9462d5713875",11,"2016-12-08 14:20:38-08:00","Support for stickers and scribbles  // FREEBIE
",54977,683,12878,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5508","signalapp/Signal-Android","f7474362ff8bc75fff70ed75a1caad31fd55374e",13,"2016-12-10 16:53:10-08:00","Updated emoji set  // FREEBIE
",55126,688,12938,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5509","signalapp/Signal-Android","a4c17e5325827f4c44e29148adcaf10862dff33d",4,"2016-12-11 13:37:27-08:00","Support for generating video thumbnails  //
FREEBIE
",55225,689,12937,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5510","signalapp/Signal-Android","a9bd84c69c72601539b9b305ebfb231ef01fadda",1,"2016-12-25 15:27:59-08:00","Support for bundled notifications (Android wear
and Android N)  // FREEBIE
",55310,691,12960,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5511","signalapp/Signal-Android","a3019be7b6e4946d208867c21960a5d872a2f880",5,"2016-12-26 15:14:23-08:00","Support for image keyboards  // FREEBIE
",55369,691,12960,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5512","signalapp/Signal-Android","884d8b7f7257f36e72ec96dbf99191456b35240b",9,"2017-01-05 12:42:28-08:00","Store display name in Signal contacts  Fixes #5974
// FREEBIE
",55661,693,12960,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5513","signalapp/Signal-Android","3d6cbdd775ad35da2223aacbe308fadacdb526fd",1,"2017-01-18 12:27:48-08:00","ViewStub for entire AttachmentManager  // FREEBIE
",55934,697,12948,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5514","signalapp/Signal-Android","508a666e7645622c6683033f14762bb89f09fd2a",1,"2017-01-18 18:46:40-08:00","ViewStub for ReminderView, lazy create
AttachmentTypeSelector  // FREEBIE
",55942,697,12948,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5515","signalapp/Signal-Android","41c9bed155e978f970f8d1d117787783300bcb6e",1,"2017-01-19 11:31:41-08:00","ViewStub for EmojiDrawer  // FREEBIE
",55949,697,12948,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5516","signalapp/Signal-Android","e270e8d429acd3e84fc3e74f79b3a56f731645c6",1,"2017-01-20 09:11:40-08:00","ViewStub for AudioView in ConversationItems  //
FREEBIE
",55953,697,12948,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5517","signalapp/Signal-Android","235a8472d985498ade58e57c957f8f883348578e",7,"2017-01-20 15:26:17-08:00","Remove dedicated MMS download controls  // FREEBIE
",55965,700,12948,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5518","signalapp/Signal-Android","4c815db076bdad365c785857e690982bfdb63aa3",2,"2017-01-23 16:44:38-08:00","Support for sticky date headers  Closes #4696 //
FREEBIE
",56110,701,12953,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5519","signalapp/Signal-Android","e2b81c9637a27abd8e190b2619da95cf751f3d47",1,"2017-01-24 11:04:32-08:00","Update look and feel of fast-scroll-to-bottom
Closes #6086 // FREEBIE
",56132,701,12953,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5520","signalapp/Signal-Android","ea0945d406bae68df88b7351148b269e386fd9b2",7,"2016-11-09 09:37:40-08:00","Beta support for webrtc video and voice calling
// FREEBIE
",58270,715,13088,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5521","signalapp/Signal-Android","9a93a8b28de305700238143829fbb2ff49fe8575",15,"2017-02-02 18:34:51-08:00","Better support for building webrtc call view off
of model  Fixes #6144 // FREEBIE
",58320,715,13091,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5522","signalapp/Signal-Android","1669731329bcc32c84e33035a67a2fc22444c24b",1,"2017-02-20 12:00:03-08:00","Support for using Signal without Play Services
This is now possible with beta calling, so non-GCM
users are a part of beta calling by default.  //
FREEBIE
",58939,717,13090,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5523","signalapp/Signal-Android","e92b51ed9867fafc6ce4908243ca42ceba4939eb",2,"2017-02-22 15:49:05-08:00","Run webrtc calls as foreground service  Should
hopefully stop performance degredation when in
background  Fixes #6249 // FREEBIE
",58955,717,13090,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5524","signalapp/Signal-Android","79e925051ac3f0f1dacfd96a4c18fd9253c30018",2,"2017-02-26 10:06:27-08:00","Support for attachment digests  // FREEBIE
",59006,717,13090,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5525","signalapp/Signal-Android","9b8719e2d56a098502475bb5b2295c7a376d4caa",3,"2017-02-26 14:36:43-08:00","Support for website distribution build with auto-
updating APK  // FREEBIE
",59307,720,13090,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5526","signalapp/Signal-Android","cd28cd172f770eeae08f7adca8964284354ee479",4,"2017-03-04 15:48:10-08:00","Refactor webrtc audio management  Attempts to:  1)
Successfully play ringtone through speaker instead
of earpiece    when possible.  2) Manage bluetooth
headset connectivity as well as possible  3)
Eliminate notification sounds while in-call when
possible  4) Make sure audio is correctly setup
when receiving calls  Fixes #6271 Fixes #6248
Fixes #6238 Fixes #6184 Fixes #6169  // FREEBIE
",59538,722,13047,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5527","signalapp/Signal-Android","93e7a626bfd81282a4cab8e61aff376609e8ebea",3,"2017-03-20 12:22:26-07:00","Make voice note playback proximity aware  1) Play
audio through earpiece if placed to ear  2) Stop
playing audio if removed from ear  Fixes #6195 //
FREEBIE
",54769,630,11121,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5528","signalapp/Signal-Android","f67eb5f9f3efc688cec1d1690bd379d18e5001b0",31,"2017-03-28 12:05:30-07:00","Support for receiving arbitrary attachment types
// FREEBIE
",55169,635,11191,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5529","signalapp/Signal-Android","07c8db824e87c9926797233a489763099196adcf",1,"2017-03-26 16:55:43+02:00","Disable screen during earpiece voice note playback
Fixes #6437 Closes #6445 // FREEBIE
",55188,635,11191,"FeuRenard","feurenard@posteo.de","Moxie Marlinspike","moxie@thoughtcrime.org"
"5530","signalapp/Signal-Android","4fd41080acf56837596cc6cdf47877539206c2f9",1,"2017-04-13 14:15:06-07:00","Use exoplayer for playing video on API 16+ devices
// FREEBIE
",55389,639,11219,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5531","signalapp/Signal-Android","13d785894a90cb1dae353ff2d3ad7a70c6f7ac00",1,"2017-04-14 20:39:38-07:00","Fix up preference screen a little  1) Remove
phantom padding on left margin for all fragments
2) Move preferences around slightly  3) Add some
card separators and style led list pref  //
FREEBIE
",55435,640,11219,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5532","signalapp/Signal-Android","ad4657df1ffa41317867d36eee26f6e2f88954a6",2,"2017-04-19 19:06:00-07:00","Fix video selection support with extra mime type
// FREEBIE
",55572,641,11204,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5533","signalapp/Signal-Android","cb670d6783e47f8f3c8dc187c8c26a6ee8cbad52",3,"2017-04-22 16:29:26-07:00","Improve UI send latency  // FREEBIE
",55952,644,11204,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5534","signalapp/Signal-Android","b17cba621e882d5ed1d8c3d5b7acc64e62349ca2",8,"2017-04-25 19:09:35-05:00","Show emoji-only messages larger  Closes #6531 //
FREEBIE
",55996,644,11204,"Mateo Hernandez","mateoeh@openmailbox.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5535","signalapp/Signal-Android","dd3cef5ec2c69277fa7b38133214a8cae9d9186a",5,"2017-03-29 00:20:35+02:00","Refactor storage management to have a centralized,
clearer way to get the Signal output directories
Closes #6476 // FREEBIE
",56122,645,11188,"Jonas Vautherin","jonas.vautherin@gmail.com","Moxie Marlinspike","moxie@thoughtcrime.org"
"5536","signalapp/Signal-Android","51d61445915e0a607742a46c60332e015f9559b6",1,"2017-05-08 15:32:59-07:00","Significant MMS changes  1) Remove all our PDU
code and switch to the PDU code from the
klinker library  2) Switch to using the system
Lollipop MMS library by default,    and falling
back to our own custom library if that fails.  3)
Format SMIL differently, using code from klinker
instead of    what we've pieced together.  4) Pull
per-carrier MMS media constraints from the XML
config    files in the klinker library, instead of
hardcoding it at 280kb.  Hopefully this is an
improvement, but given that MMS is involved, it
will probably make things worse instead.
",51417,597,7436,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5537","signalapp/Signal-Android","76c28cfa7a12b386ce5f62316247e843ceef3290",29,"2017-06-06 18:03:09-07:00","Add support for SN verification  // FREEBIE
",52550,606,7436,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5538","signalapp/Signal-Android","0cc5618ba9f59086800c819c9d562887f2a0604f",3,"2017-06-19 10:39:15-07:00","Only offer share/compare options when SN
calculation is complete  Now that we're loading
this asynchronously, these options need to respond
asynchronously as well  Fixes #6739 // FREEBIE
",52556,606,7451,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5539","signalapp/Signal-Android","82b5b35d3b57f4024621e4a562836f8abe6e9214",6,"2017-07-21 15:59:27-07:00","Eliminate MediaNetworkRequirement style attachment
job handling  // FREEBIE
",52566,607,7435,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5540","signalapp/Signal-Android","5be246ec8f5eb909a25f8622e48a55fb6bf38779",1,"2017-07-21 16:11:55-07:00","Fix NPE for SMS pdus that could potentially be
null  // FREEBIE
",52571,607,7435,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5541","signalapp/Signal-Android","737810475e8596164a868f4081f2ef11e8d1aa8d",1,"2017-07-26 09:59:15-07:00","Remove the Canonical Address Database  This was a
holdover from Signal's origins as a pure SMS app.
It causes problems, depends on undefined device
specific behavior, and should no longer be
necessary now that we have all the information we
need to E164 all numbers.  // FREEBIE
",52371,605,7579,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5542","signalapp/Signal-Android","375207f073292963cdf67cd1dd321cf067f4d674",10,"2017-08-01 08:56:00-07:00","Switch MMS groups to use the group database
infrastructure  Eliminate the concept of
'Recipients' (plural). There is now just a
'Recipient', which contains an Address that is
either an individual or a group ID.  MMS groups
now exist as part of the group database, just like
push groups.  // FREEBIE
",52148,606,7549,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5543","signalapp/Signal-Android","da94fd5f9e59d1d7f69111db043044db6502df19",1,"2017-08-07 16:47:38-07:00","Join group information into conversation list
query  // FREEBIE
",52115,605,7502,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5544","signalapp/Signal-Android","1893047a7889282385dd1563447785311055ad1a",5,"2017-08-08 16:37:15-07:00","Profile creation activity  // FREEBIE
",52407,609,7502,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5545","signalapp/Signal-Android","e7c20499ec66273a844d15d5933296850a7b2eb7",1,"2017-08-15 19:23:42-07:00","Display profile name in when appropriate  Display
in conversation list, conversation actionbar,
group messages, and group members list when
address is not in system contacts  // FREEBIE
",52802,613,7502,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5546","signalapp/Signal-Android","1b2f52209d81598c0ce217d46e3c1eba7274b51b",1,"2017-08-18 17:28:56-07:00","Display unknown sender footer for unknown senders
// FREEBIE
",53124,617,7502,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5547","signalapp/Signal-Android","8e6ca530238e5bdce94bb231976ee9a46365c1d4",1,"2017-08-21 18:37:39-07:00","Rename RecipientPreferencesDatabase ->
RecipientDatabase  // FREEBIE
",53070,616,7486,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5548","signalapp/Signal-Android","d1790dfe17383f142dbe87fe02b6c64a2d59d108",3,"2017-08-21 18:47:37-07:00","Rename RecipientPreferences -> RecipientSettings
// FREEBIE
",53070,616,7486,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5549","signalapp/Signal-Android","f17af19d09f6aa9b000c9e65634c74e6ad0f3ad0",1,"2017-08-22 10:44:04-07:00","Access all RecipientDatabase settings directly
from Recipient  // FREEBIE
",53154,616,7486,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5550","signalapp/Signal-Android","64ad9ec9ddde6233093d9eeb2f74943a23a27681",9,"2017-08-22 11:51:01-07:00","Add group profile sharing logic  // FREEBIE
",53223,617,7486,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5551","signalapp/Signal-Android","f3d943270c92d8fa72ae10bd1ecf95fde62c4b45",2,"2017-09-09 23:46:48-07:00","Be more conservative with handlers and references
Expiring message timers could end up leaking
references and executing work even after their
conversation item was no longer visible  Maybe
fixes #6898  // FREEBIE
",53501,619,7499,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5552","signalapp/Signal-Android","65124fd1f2d459a6e40517bf3f572f68b554a783",1,"2017-09-12 22:48:30-07:00","Redesign conversation and conversation preferences
layouts  Remove avatars from conversation items
unless in a group chat.  // FREEBIE
",53566,619,7498,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5553","signalapp/Signal-Android","a1c276f70bc577f80f6f3f30a16bc46b642bbdf0",10,"2017-09-20 18:10:44-07:00","Update to V7 PreferencesCompat library  // FREEBIE
",54060,620,7732,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5554","signalapp/Signal-Android","4828a8a2740c66b01306cd41c28dd737334d93a5",6,"2017-09-20 18:14:28-07:00","Add conversation media photo rail to recipient
preferences  // FREEBIE
",54190,622,7732,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5555","signalapp/Signal-Android","285947eb668d7358c6f0dfd201c3cf63f32db636",1,"2017-09-30 08:45:45-07:00","Show per-member delivery/read status on message
info in groups  // FREEBIE
",54702,627,7732,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5556","signalapp/Signal-Android","10f224ede5015a4a1c66b6e41f18621c503c2edd",5,"2017-10-11 17:12:46-07:00","Update to glide 4.x  // FREEBIE
",54904,626,7705,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5557","signalapp/Signal-Android","b80408bcb421f16fb03880ce5a3b37911c0708f4",20,"2017-10-16 13:11:42-07:00","Use Glide for all contact photo caching  //
FREEBIE
",54906,627,7703,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5558","signalapp/Signal-Android","6d88710a88e8f82767807ad49fd690e537993f64",4,"2017-11-01 15:56:31-07:00","Update to libsignal-service 2.6.11  // FREEBIE
",55175,630,7703,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5559","signalapp/Signal-Android","90ff0e58b0206ac2b047c3db70980f29a533b9d9",11,"2017-11-08 12:20:11-08:00","Update registration flow
",55260,634,7659,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5560","signalapp/Signal-Android","9c50057909c7fbb40842dc8e283194c821336ad2",2,"2017-11-13 09:11:58-08:00","Add an empty state for archived
",55334,636,7659,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5561","signalapp/Signal-Android","405ee3b741d0ff06473fc9a6f9a56b2809145c91",2,"2017-11-13 12:44:51-08:00","Improve search bar visibility
",55438,637,7659,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5562","signalapp/Signal-Android","cf81815bf67ee5ea098e863951f9b8faf098f021",6,"2017-11-16 15:21:46-08:00","Add recent chats to top of share list
",55540,636,7597,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5563","signalapp/Signal-Android","86bd2351bc6efb13667612be5e82d4e38e521b36",2,"2017-11-19 16:24:30-08:00","Replace answer/decline button and action for
incoming calls  Fixes #7199
",54772,632,7305,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5564","signalapp/Signal-Android","64c8b4b2ef9eea3aa8551397793c3d39dd3b7c6d",48,"2017-11-24 22:00:30-08:00","Support for selective permissions
",55385,635,7307,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5565","signalapp/Signal-Android","7a5846a6d441dc5329655acc670773f74e0a361e",5,"2017-11-26 10:45:39-08:00","Move more system contact info into recipient
database  1) Move contact URI, contact photo URI,
and custom label    into recipient database, so
there are no longer any    contact DB queries
during Recipient object loading.  2) Use a
SoftHashMap so that any referenced Recipient
objects    can't get kicked out of the cache.  3)
Don't load Recipient objects through the provider
during sync.    This was a super expensive thing
to do, and blew up the cache.  4) Only apply
changes to Recipient objects during sync if they
are in the cache. Otherwise, there should be no
outstanding    references, and the changes are
fine going exclusively to    the DB.
",54956,633,5964,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5566","signalapp/Signal-Android","4cb2ac7b27e7b170a9102af638b98b86e589bc9d",2,"2017-12-01 11:02:30-08:00","Use FileProvider for external camera capture Uri
on L+  Fixes #7237
",54757,632,5946,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5567","signalapp/Signal-Android","0ec1ae4ed3ee79e4f8bf66f4a708fe71c000dfb9",1,"2017-12-19 10:54:06-08:00","Request needed permissions for thread search
",54257,629,5713,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5568","signalapp/Signal-Android","4acedd2a4b962e2fa84bb8848c88b84350a762c7",1,"2017-12-19 14:42:00-08:00","Fix notification ringtone problems  Default
ringtone was often showing up as a call tone
Silent wasn't working correctly globally
",54262,629,5713,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5569","signalapp/Signal-Android","8bba45f3964411e3fea7f27365e87f7408749a66",10,"2018-01-04 11:11:49-08:00","Add swipe gestures to media view  Fixes #2355
Closes #6632
",54564,632,5717,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5570","signalapp/Signal-Android","f36b296e2ed211893835372513da57bb135c52c1",108,"2018-01-24 19:17:44-08:00","Migrate from SQLite and ciphertext blobs to
SQLCipher + KeyStore
",54576,639,5712,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5571","signalapp/Signal-Android","bdd4b456c4de49fa6af71f0d4978a3577c079b18",2,"2018-02-01 13:30:33-08:00","Have stream generate random value
",54569,639,5707,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5572","signalapp/Signal-Android","23aee53c7d6681adb507eaec37e2dc4d23757569",7,"2018-02-01 16:01:24-08:00","Add determinte progress and foreground service for
sqlcipher migration
",54646,640,5707,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5573","signalapp/Signal-Android","3633d805c85f8e32a6fd326af553f3f23f369e3e",8,"2018-02-01 19:22:48-08:00","More MasterSecret cleanup
",54230,635,5707,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5574","signalapp/Signal-Android","028c6edd8a4a7497490440875abde89c4c0d036b",10,"2018-02-24 11:09:26-08:00","Manually calculate attachment offsets  The
CipherInputStream skip() method is pretty non-
functional  Fixes #7438
",54280,635,5707,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5575","signalapp/Signal-Android","71c7ef5b5e401cfc6e1c0658bc4e47f72145883f",8,"2018-02-16 11:10:35-08:00","Support for custom call ringtone selection and
per-chat ringtones
",54485,637,5707,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5576","signalapp/Signal-Android","6239508b3945422f46d3bc15dd46e94a1c612c3f",2,"2018-02-16 11:13:20-08:00","Clean file names for belt and suspenders
",54493,637,5707,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5577","signalapp/Signal-Android","9f3c04dfb56d78a6d2e7bc3dcf8368b180eef558",11,"2018-02-15 20:33:10-08:00","Migrate prekeys into database
",54606,640,5709,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5578","signalapp/Signal-Android","9f6b761d9888a2cd62c7bc0e8154c883871a62d5",2,"2018-02-18 16:43:18-08:00","Migrate sessions into database
",54696,642,5709,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5579","signalapp/Signal-Android","24e573e537639f6f8ff40fd774cf9ff079bbacce",52,"2018-02-26 09:58:18-08:00","Support for full backup/restore to sdcard
",55559,649,5711,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5580","signalapp/Signal-Android","d28dc670ea58867e97336434d31c7003e5cf9c54",4,"2018-03-04 11:35:37-08:00","Migrate to Android fingerprints and auth for
Signal screen lock
",55742,649,5711,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5581","signalapp/Signal-Android","110d33ddf8113c7721c3d7d06c456097f3811f80",6,"2018-03-01 09:51:37-08:00","Support for Registration Lock PINs
",56135,651,5712,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5582","signalapp/Signal-Android","90006e81db77106f0b24d58e3deb9d32dad19d73",7,"2018-03-14 10:28:41-07:00","Add salt to backup header
",56186,651,5711,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5583","signalapp/Signal-Android","261296e41b71abc0cb85079b5fcfbef5a85d313e",1,"2018-03-19 13:17:57-07:00","Don't crash direct share service if avatar photo
is missing  Fixes #7541
",56195,651,5711,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5584","signalapp/Signal-Android","d6610f0dd073aa406eb5f03d44a9574995ab3f19",2,"2018-03-19 14:10:21-07:00","Add profile avatars to backup  Fixes #7450
",56228,651,5711,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5585","signalapp/Signal-Android","0c768a24e40b7cbc4c7d6c1e7cd34fcab08d5410",5,"2018-03-13 18:24:42-07:00","Allow deletion of media through preview.  When
viewing a media in the media preview, you can
delete it by pressing a delete button on the
action bar. It will then ask you to confirm your
choice. If you confirm, it will delete the
attachment from the database and from disk. If it
was the only attachment for that message, the
message itself will also be deleted.
",56321,651,5711,"Greyson Parrelli","greyson.parrelli@gmail.com","Moxie Marlinspike","moxie@thoughtcrime.org"
"5586","signalapp/Signal-Android","10e5b24cfdc34914881fad713c899245b584aca9",2,"2018-03-15 11:17:40-07:00","Allow batch deletion of media.  It is now possible
to batch-delete media in the ""media overview""
screen. You can long press to enter multi-select
mode. Then a delete button appears on the menu
bar. After pressing delete, you will get a
confirmation, and if the user confirms, the items
will delete while a progres dialog shows.
",56458,651,5715,"Greyson Parrelli","greyson.parrelli@gmail.com","Moxie Marlinspike","moxie@thoughtcrime.org"
"5587","signalapp/Signal-Android","95d76638dc43962588231168976ef5a990abae41",36,"2018-03-18 14:52:49-07:00","Simple encrypted glide disk cache
",56737,657,5715,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5588","signalapp/Signal-Android","ea374735e1735f20bbbf15cad56258d853686486",6,"2018-03-20 11:27:11-07:00","Render images in a conversation true-to-size.
Previously, we were always rendering images as
squares. Instead of doing that, we now render them
as close to true-to-size as possible (within
reasonable min/max width/height boundaries).
",57008,657,5715,"Greyson Parrelli","greyson@signal.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5589","signalapp/Signal-Android","b9f99f99410562516ae17dbe6e58a0b94127a904",3,"2018-04-02 10:03:26-07:00","Manually calculate length of attachments if
they're super old  Fixes #7560
",57023,657,5715,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5590","signalapp/Signal-Android","2c405d1769fca25065b9771640edcb2dba5ff988",1,"2018-04-05 05:37:36-07:00","Delete raw contacts that are marked for deletion
Fixes #7628
",57131,656,5715,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5591","signalapp/Signal-Android","d56753460955252647d89bb672da385b46fb6a37",22,"2018-02-07 14:01:37-08:00","replies
",57556,657,5597,"Moxie Marlinspike","moxie@thoughtcrime.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5592","signalapp/Signal-Android","fa99e8f0d0a530c0655fa25657d4f6eb44e78c08",6,"2018-04-02 16:17:32-07:00","Updated reply-to UI.  All UI components are now
properly styled and functioning according to spec.
",57776,657,5600,"Greyson Parrelli","greyson@signal.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5593","signalapp/Signal-Android","cbe394025d5a0b6b5124db970ccc733b58751641",1,"2018-04-20 15:50:03-07:00","Fix reply-to colors in dark mode to increase
contrast.  Fixes #7705
",57798,658,5600,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5594","signalapp/Signal-Android","43622e603dc880262e72ebd205fd3309ea15560a",1,"2018-04-24 11:09:54-07:00","Save replies in drafts.  Previously, quotes were
not saved to drafts, meaning they would be lost
when leaving the conversation or app. Now, a
QuoteId (which represents the necessary data to
restore the QuoteModel) is serialized and stored
in the DraftDatabase.  Fixes #7716 Closes #7729
",57851,659,5605,"Greyson Parrelli","greyson@signal.org","Moxie Marlinspike","moxie@thoughtcrime.org"
"5595","signalapp/Signal-Android","ca8fecea9cdf338163e61745f3d92ece7f91cdd1",3,"2018-04-25 11:00:03-07:00","Clean up camera flipping, handle having missing
cameras.  Did a refactor to better organize the
camera flipping code. Also, I wanted to make sure
we handle the cases where the user doesn't have
two cameras (or no cameras, for that matter). In
these cases, we just don't show the appropriate
buttons.
",58018,660,5605,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5596","signalapp/Signal-Android","54dbffaf300c8c29ce61e756ad7d2f9cbc2a776e",165,"2018-04-26 17:03:54-07:00","Added ability to share contacts.  The ""contact""
option in the attachments tray now brings you
through an optimized contact sharing flow,
allowing you to select specific fields to share.
The contact is then presented as a special message
type, allowing you to interact with the card to
add the contact to your system contacts, invite
them to signal, initiate a signal message, etc.
",60013,674,5634,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5597","signalapp/Signal-Android","e6c16cf28d0fd3d6a19347529b2e39d03f5d279d",15,"2018-05-10 11:31:38-07:00","Allow editing of contact names.  Took care to
properly format CJK names.
",60240,676,5634,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5598","signalapp/Signal-Android","ca260a92e34b714cc2a6ce6d5bbf3c9d99ca2b34",2,"2018-05-16 23:40:14-07:00","Convert vCard attachments to Shared Contacts.
When you share a vCard from an external app (like
the Contacts app) into Signal, we'll now convert
it to a pretty Shared Contact message and allow
you to choose which fields of the contact you wish
to send.
",60326,676,5634,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5599","signalapp/Signal-Android","0449647cf90156e0e7f62f66727e50b4f3de58bb",29,"2018-04-06 18:15:24-07:00","Implemented full-text search.  You can now use the
search bar on the conversation list to find
conversations, messages, and contacts.
",61171,685,5710,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5600","signalapp/Signal-Android","a792a6e6ae0fff6a6f21afdba42b60feb574c1b2",2,"2018-05-22 16:59:42-04:00","Fixed ThumbnailView sizing problems.  Glide will
use the dimensions of the target ImageView as the
dimensions for the image it's loading. This caused
problems in the case of ThumbnailView, as we were
constantly changing the ImageView dimensions,
meaning Glide may not have the most recent values
(it may be called in between measure calls, for
instance).  To solve this, we now will always
override the default image dimensions when we load
an image. If no dimensions are present, we will
default to the layout_width and layout_height of
the ThumbnailView.  Fixes #7810
",61185,685,5710,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5601","signalapp/Signal-Android","b7282589de18e44acc3712d1d08e13e8dec15010",1,"2018-06-06 09:07:38-07:00","Fixed issue with backup and restore when creating
new tables.  Fixes #7863
",61225,685,5710,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5602","signalapp/Signal-Android","30be732ae81bdc10488fd19825aac0d8230947e2",2,"2018-06-11 10:38:11-07:00","Don't auto-download attachments from unknown
contacts.
",61247,685,5710,"Greyson Parrelli","greyson.parrelli@gmail.com","Greyson Parrelli","greyson.parrelli@gmail.com"
"5603","signalapp/Signal-Android","0999359454fdd44966b7d2ec6df0980e8403df0b",3,"2018-05-29 15:45:20-04:00","Improve the image editor.  A variety of
improvements to the image editor, such as:  - New,
fullscreen styling - Smoother lines - Better text
and sticker handling - Improved color picker with
a history pallette - New highlighter tool
",61372,686,5696,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5604","signalapp/Signal-Android","2c17b54ef999ec75d9fb099f649dc65ae8cf1fed",7,"2018-06-11 09:37:01-07:00","Show a banner in the event of a service outage.
We will now determine if there has been a service
outage and render a banner at the top of the
conversation list if we detect that there has been
one.
",61485,688,5696,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5605","signalapp/Signal-Android","71a34dac5ff05bd22d77946afec1f4b9ee8f0a90",1,"2018-06-21 16:48:46-07:00","Fix backup/import issue with expiring messages.
There was an issue where we were backing up group
receipts and attachments that were for expiring
messages (which are already excluded from the
backup).  This commit excludes these items from
the backup, and for backups made before this
change, this commit also deletes these invalid
entries at the end of the restore process.  We
also do a little database migration to cleanup any
bad state that may have been imported in the past.
",61526,688,5696,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5606","signalapp/Signal-Android","3563efc7deba8d687ff48f8739473690b5bd5be6",2,"2018-06-15 09:20:08-07:00","Update search query results when messages
disappear.  Previously, if a message disappeared
while looking at it in the search results, it'd
still stick around. Now they'll disappear from the
results in real-time.
",61559,688,5696,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5607","signalapp/Signal-Android","dae655fd01cde4842de323beb364f9eaac67c7e6",3,"2018-06-20 16:37:14-07:00","Fix conversation snippet for contact shares.
Previously, contact shares would be displayed as
""Media Message"". Now it'll show the same as it
does in a notification, namely ""{contact-emoji}
{contact-name}"".
",62535,709,6416,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5608","signalapp/Signal-Android","6ce8516b939713b1f0c0e9790e981924ed03b7df",15,"2018-07-03 17:16:50-07:00","Make contact photos optional when sharing
contacts.  Previously, if you had a contact photo
for a user, we'd always send it Now you can choose
whether or not it is sent.
",62357,706,6404,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5609","signalapp/Signal-Android","24b062d8dde3d2bbcebc110400c95c9ffb649dc5",39,"2018-06-26 10:27:44-07:00","Improve the look of message bubbles.
",62788,710,6399,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5610","signalapp/Signal-Android","8579c30909fda373270cb9ca58fe020498af0feb",17,"2018-07-12 16:03:32-07:00","Styling improvements and code cleanup.
",62805,709,6402,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5611","signalapp/Signal-Android","bf692e8da354d3bfd44fe85fb3abb3cadec5e857",2,"2018-07-06 17:28:58-07:00","Throttle background contact syncs to once every 6
hours.  Unfortunately, there's apps out there that
trigger contact changes very frequently. Because
we listen to the system for contact changes to
tell us when to sync, that could result in us
sending an abundance of contact syncs to linked
desktop instances.  This throttles contact sync
requests using the following methodology:  - By
default, throttle contact syncs to 6 hrs while the
app is   backgrounded. - If a sync is throttled in
the background, we set a dirty flag and   will
execute the sync the next time the app is
foregrounded. - Syncs explicitly requested by
desktop are never throttled.
",62854,709,6402,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5612","signalapp/Signal-Android","8f551c8b3256db8b4f3fc7bac2974653ae3ce7ea",1,"2018-07-18 13:53:50-07:00","Fix various redesign issues with Android 4.x.  In
particular, there were many issues with drawing
corners. Unfortunately, there's no pretty way to
get masking working on every Android version, so
we have to switch back to using custom backgrounds
and then using multiple masking methods depending
on Android version.  Also, I had to remove attr
references in drawables. They crash on 4.x.
",62943,710,6405,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5613","signalapp/Signal-Android","67190774cccbd5883209f54232c13f189f16d80f",16,"2018-07-25 11:30:48-04:00","Jump to the oldest unread message after loading a
draft.
",62969,710,6401,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5614","signalapp/Signal-Android","a3115c14ac227318b6f8523f80e28b3d96e6185d",8,"2018-07-27 09:12:54-04:00","Use proper target for Glide bitmap requests.
Fixes #8042
",62984,711,6401,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5615","signalapp/Signal-Android","faea8fd2ec58e681fe1ed9e368630a244966ef7a",4,"2018-07-23 14:08:45+02:00","Apply message bubble paddings to both top and
bottom  Batch selecting messages now feels better.
Fixes #8035.
",62996,711,6401,"art1fa","art1fa@mailbox.org","Greyson Parrelli","greyson@signal.org"
"5616","signalapp/Signal-Android","c8571d7bc7e678e625bcf3683e09b46cf55baa73",2,"2018-08-06 10:34:02-04:00","Use correct timestamp for footer collapse.  Fixes
#8071
",63010,711,6401,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5617","signalapp/Signal-Android","acb40c6133e9a8ebccd84494c2a23c63f83afd7a",8,"2018-07-26 10:10:46-04:00","Added new logger.  Added a new logger that
persists logs for a longer duration to the user's
cache directory. Logs are encrypted. The new logs
are sent in addition to the user's logcat output.
",63812,722,6483,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5618","signalapp/Signal-Android","5cdf5499d076c1139e2d57014e15bf16c4589210",5,"2018-08-06 14:42:22-04:00","Clean up shortcut code.
",63910,725,6487,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5619","signalapp/Signal-Android","13c72779af28e833fc563a30fef596bf8da4df7d",4,"2018-08-11 09:55:52-04:00","Visually note quotes for messages you don't have.
We will now show a small footer under quotes for
messages that you don't have locally.  Also fixes
#7850
",63957,725,6487,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5620","signalapp/Signal-Android","e9b85a10a6b66c41125ea189045ef2955ca47716",16,"2018-08-16 09:47:43-07:00","Add per-contact notification channels.  Fixes
#8119 Fixes #8121 Fixes #8122
",64319,725,6516,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5621","signalapp/Signal-Android","f1efe2b589d071a5b60e86d16c964896f01cdd20",2,"2018-08-22 11:58:41-07:00","Use correct in-thread message tone on O+.  We
manually play the ringtone when in-thread
notifications are enabled, but we weren't using
the sound specified by the channel in the system
settings. This fixes that problem by reading the
NotificationChannel setting.
",64405,726,6516,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5622","signalapp/Signal-Android","e840dc66875843902137ca29f44037137674df59",4,"2018-08-30 17:59:15-07:00","Move notification preferences back in-app for O+.
Fixes #8147
",64507,726,6546,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5623","signalapp/Signal-Android","d9ba6962c792033ea99f8e24fb4482ac1020f8bd",4,"2018-09-03 17:48:55-07:00","Fixed NPE during channel update.
",64525,726,6546,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5624","signalapp/Signal-Android","c3bdc48ee38007a92583739d833b64edc57f8529",18,"2018-08-21 13:28:01-07:00","Create placeholder ContentProviders for database
observations.  Required for the API 26 migration.
See https://developer.android.com/about/versions/o
reo/android-8.0-changes#ccn
",64590,727,6556,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5625","signalapp/Signal-Android","741b775d3eb767a11fffb4fe228d48f0d6f17f3f",3,"2018-09-12 17:47:41-05:00","Ensure external camera blob is deleted.
",64614,727,6556,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5626","signalapp/Signal-Android","bcebf58b76a7061663d930af28592c1ca9ebf2f6",3,"2018-09-20 13:24:29-07:00","Added a new Stopwatch class to easily log timings.
",64748,728,6556,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5627","signalapp/Signal-Android","e63773e5c815d3c214ecaac87d77c97958ae1049",4,"2018-09-20 13:25:40-07:00","Added OrderEnforcer class to schedule ordered
tasks.
",64861,730,6556,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5628","signalapp/Signal-Android","08ace15f95d5d1b3fb87f97e63118d05235f67a2",13,"2018-09-20 13:27:18-07:00","Implemented new camera capture flow.  A new,
fullscreen camera capture flow that easily allows
you to capture and edit a photo before sending it.
Replaces the current half-screen camera button.
",65647,735,6563,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5629","signalapp/Signal-Android","84c71fce16a3396374bc97a38c563082e136c61d",3,"2018-09-27 09:47:08-07:00","Disable tab switching in media overview during
multiselect.  Multiselect only applies to items in
the ""media"" tab, so people shouldn't be able to
switch tabs during multiselect.
",65859,739,6569,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5630","signalapp/Signal-Android","6359961a821239bc5316ea7a4764eb083cf2ef5c",1,"2018-09-27 19:59:57-07:00","Ensure numbers are properly formatted before
giving them to contact discovery service.  We were
sending ""Unknown"" addresses, which would cause the
service to choke.
",65929,739,6569,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5631","signalapp/Signal-Android","87e6aa48bbdb7c088dffc53b7e26355be7b0483e",1,"2018-08-09 10:15:43-04:00","Schedule jobs with WorkManager.  Should help solve
most of our pressing targetSdk=26 migration
issues.
",66125,735,6455,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5632","signalapp/Signal-Android","a3cba664501d6ecea79b7bdbdd1fdba0f286cbfb",1,"2018-09-24 17:04:48-07:00","Update fallback avatars.
",66177,735,6459,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5633","signalapp/Signal-Android","f725dd5a7e3bcf1803718749cead1520182f24e6",2,"2018-09-24 23:41:29-07:00","Show profile avatar in toolbar.
",66209,735,6459,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5634","signalapp/Signal-Android","5eec3c954127224ccad75aa16cf0e6a55df453a2",2,"2018-09-25 00:13:16-07:00","Add hairline border to avatars.
",66235,735,6459,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5635","signalapp/Signal-Android","547b7a3c6fe8a1f8f4e5345a8b1d7068b86bb49f",4,"2018-09-25 15:41:42-07:00","Migrate legacy color palette.  We don't store non-
user-selected colors in the database. That means
that when we update the palette, we still have to
hash based off of the legacy palette when
generating a color if we want to migrate to a
similar-looking color.  Unfortunately, because the
new palette is smaller, some colors are
""overloaded"", meaning that when we hash based off
of the legacy palette, some colors will be
more/less common than others. To fix this, we
simply persist all current colors in the database,
then switch our hashing list to what we really
want.
",66296,736,6463,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5636","signalapp/Signal-Android","1b736e9e0409d7a0926246bc0fbb11a2db4946e1",1,"2018-10-05 15:23:33-07:00","Ensure notifications are processed after receiving
GCM message.  It's unreliable to run these tasks
on WorkManager, as there's no scheduling
guarantees.
",66372,737,6463,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5637","signalapp/Signal-Android","7e485b8095ad04b737900e8c74de3127894f56c2",1,"2018-10-16 11:47:58-07:00","Post startService() in onResume() as a possible
fix to an Android P bug.  Got confirmation that
the crash we're seeing is a bug, and this might be
a possible workaround.
",66428,737,6465,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5638","signalapp/Signal-Android","45e0bb281faeb1fcd73b741a81aad08d5805baa0",7,"2018-10-15 13:27:21-07:00","Turn MessageRetrievalService into
IncomingMessageObserver.  Due to an Android P bug,
we basically need to stop calling startService()
in onResume()/onPause(). That means I had to turn
MessageRetrieval service into a singlton instead
of a service. I also moved the offending
KeyCachingService calls into static methods that
didn't have to start the service.
",66377,737,6463,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5639","signalapp/Signal-Android","91db26437ddfc484b5796dd3e87fa2e154b1b654",4,"2018-10-22 01:06:40-07:00","Fix camera scaling issues on some phones.  Some
phones, notably the Pixel 3, had some problems
with scaling after taking photos. This fixes it by
using the takePicture API instead of pulling the
bitmap from the TextureView.  Fixes #8292
",66467,738,6463,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5640","signalapp/Signal-Android","48ff9673b925a9cd74b026b74aa885770a422f82",16,"2018-10-23 23:37:09-07:00","Allow the selection of fitzpatrick emoji.
",66777,741,6463,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5641","signalapp/Signal-Android","5f31762220fa5ca4a00138e74500bbe4b5232578",10,"2018-05-22 02:13:10-07:00","Support for sealed sender - Part 1
",67542,747,6465,"Moxie Marlinspike","moxie@thoughtcrime.org","Greyson Parrelli","greyson@signal.org"
"5642","signalapp/Signal-Android","2acab563d9294b23f877c1840ef3aabfd8bd988b",2,"2018-10-11 16:45:22-07:00","Support for sealed sender - Part 2
",67713,749,6460,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5643","signalapp/Signal-Android","28081abe1c01b0d204d96c16c947b867eb22d804",5,"2018-11-13 19:29:51-08:00","Split the 'people' emoji spritesheet into multiple
chunks.  The aim of this is to help performance by
breaking up the single massive spritesheet into
smaller ones. This will limit the amount of data
that needs to be kept in memory to render emoji.
(Hopefully) Fixes #8357
",67919,751,6460,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5644","signalapp/Signal-Android","3716d69b0ba8f86e087eb8e7cef52d6d3dce403b",1,"2018-11-15 10:17:07-08:00","Dismiss emoji variation popup when keyboard is
dismissed.  Fixes #8372
",67949,751,6460,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5645","signalapp/Signal-Android","3f25fb7d5f973e09ce294d10767ef3ad786b6449",8,"2018-07-24 16:11:23-04:00","Handle voice note media playback with ExoPlayer.
There are several (popular) phone models out there
that have bugs in their MediaPlayer implementation
that cause them to be unable to play voice notes.
By moving to ExoPlayer, an application-level media
player, we should avoid most of these headaches
and stardardize playback.  Fixes #7748
",67976,751,6460,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5646","signalapp/Signal-Android","776b0e23ae078caa61b7556f1c76c7d80d4d2857",32,"2018-10-29 15:14:31-07:00","Add support for typing indicators.
",68628,758,6460,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5647","signalapp/Signal-Android","47a10a0288638ef5c58e3c5a16f07f834e188163",31,"2018-11-08 23:33:37-08:00","Added support for multi-image receive.
",69040,762,6463,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5648","signalapp/Signal-Android","81055e61a6434fc25ee1d1f0d59ed0c57c4c3210",4,"2018-11-27 12:34:42-08:00","Update WorkManager to 1.0.0-alpha11.
",69127,762,6466,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5649","signalapp/Signal-Android","d6abf89a7ac324940d1fd225e3b00a5ddfad572a",4,"2018-12-01 09:51:28-08:00","Filter out typing indicators from ourself.
",69165,762,6466,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5650","signalapp/Signal-Android","e5a2cea6b0464cdf16018351bff30b06486d264b",1,"2018-12-11 13:03:44-08:00","Fix voice note seeking issue.  On some devices,
pausing+resuming (or seeking) would restart
playback from the beginning, but show a progress
bar further up. This seems to have been caused by
same race condition-y thing where we were seeking
multiple times in rapid succession. Now we'll only
play once, and things seem to be fine now.  Also
removed usage of some deprecated methods.  Fixes
#8432
",69192,762,6466,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5651","signalapp/Signal-Android","c6f3a66cad214ce1b6cca2a9ed1a0629e7d6ce6d",1,"2018-12-19 08:09:22-08:00","Support encrypted linked device names.
",69258,763,6466,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5652","signalapp/Signal-Android","96c641c2a03c2f70367de33930a5e453b7d87e06",3,"2018-12-07 12:16:37-08:00","Add support for Job chains.
",69332,764,6466,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5653","signalapp/Signal-Android","19d5ba5c0e5297ee4c7b824f42e6f9a6ba1fdd90",1,"2018-12-07 18:31:39-08:00","Upload attachments in a separate job.
",69488,765,6466,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5654","signalapp/Signal-Android","6fa7eca60bac13824b4b469ad19c94a6c2f03423",121,"2018-11-20 09:59:23-08:00","Implement new media send flow.  Update our media
send flow to allow users to send multiple
images/videos at once. This change includes:  -
New in-app media picker flow. - Ability to caption
images and videos. - Image editing tools are made
more prominent in the flow. - Some fixes to the
image editing tools.
",71190,780,6519,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5655","signalapp/Signal-Android","4952b4470d2b95722abdb48fa934aae4cab28217",1,"2019-01-14 15:40:38-08:00","Fix bug related to gallery selection state.
TreeSets are annoying. contains() is calculated
with the comparator, which can lead to some weird
bugs. Made sure the comparator didn't think two
items with the same date were identical.  Also
fixed stableId generation to avoid any potential
weirdness there.
",71215,781,6524,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5656","signalapp/Signal-Android","2209ff2272413a5a5db5b92bbefd3f97f88f3fb2",1,"2019-01-15 12:43:38-08:00","Use AttachmentUploadJob in PushGroupSendJob.
",71306,781,6524,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5657","signalapp/Signal-Android","66dde4415dc6ed6385494494b1413a6223c3416d",9,"2019-01-15 13:38:06-08:00","Added an 'All media' folder in the gallery.
",71345,781,6524,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5658","signalapp/Signal-Android","e7a807ab5becc386edfaf2a8ba47551b77d5f196",3,"2019-01-17 11:42:01-08:00","Ensure body text is carried through to the media
send screen.  We were only doing it if you entered
through the media rail. Now we also do it if you
enter through the gallery.
",71365,781,6524,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5659","signalapp/Signal-Android","c76081d99c513bbebfb2ef8f8e96b2f3d865f9f7",84,"2019-01-15 00:41:05-08:00","Added support for link previews.
",72524,794,6545,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5660","signalapp/Signal-Android","e3b22dabcea044b5a7b8e3c5636bebdfa2e25a32",29,"2019-01-30 10:19:03-08:00","Harden notification channels.  There's odd corner
cases where channels can be duplicated. This
commit adds some hard checks where we trim any
dead channels, and unset any notification channels
from recipients whose notification channel isn't
present in the system settings.
",72588,795,6548,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5661","signalapp/Signal-Android","c5114e2cb3f6760faa70d851266fbe7fab25ba36",1,"2019-01-29 14:25:49-08:00","Updated to WebRTC M71.
",72612,795,6548,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5662","signalapp/Signal-Android","5d9d6ac12bd002d7c9086e5e29676e3d864ed7fa",4,"2019-02-01 12:47:34-08:00","Apply contact updates in batches of 50.  If batch
sizes are too large, we'll get a Binder exception.
Fixes #8580
",72676,796,6548,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5663","signalapp/Signal-Android","9f04c28bfd2b21ec8d680bc90e80f5c6f28bc76a",49,"2019-02-01 09:06:59-08:00","Implemented conversation search.  You can now
search for messages within a specific
conversation.
",73195,801,6557,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5664","signalapp/Signal-Android","c9a0a66f18fbdd059aa85a682ce26a271c0ea78b",7,"2019-02-07 09:47:06-08:00","Migrate backup passphrase to be keystore-encrypted
when available.
",73230,802,6560,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5665","signalapp/Signal-Android","6896f8ea1542689fbfdd361e871100240177a99e",16,"2019-02-11 15:05:37-08:00","Properly check attachment size during media send.
Prevent users from trying to send videos that
exceed the size limit.  Also, this commit properly
populates height/width on media shared into the
app.  Fixes #8573
",73312,802,6565,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5666","signalapp/Signal-Android","c2a86fcc7480c417809302299f19689d1a717499",2,"2019-01-13 23:30:54-08:00","Sync self-sends to desktop.  Updated UI to show
self-conversations as ""Note to Self"".
",73444,802,6565,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5667","signalapp/Signal-Android","fe4068afcea25988be7f0ef70f76504d406633b9",8,"2019-02-14 13:55:48-08:00","Don't preview links if your cursor is touching
them.
",73482,803,6565,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5668","signalapp/Signal-Android","a6564f8f8458fa256e4b68fef65210ee0c30d518",5,"2019-02-15 11:40:03-08:00","FCM improvements.
",73619,805,6568,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5669","signalapp/Signal-Android","b2d4608cdbe3792f3011590ebe4a97c684304422",1,"2019-02-20 17:00:23-08:00","Improved handling for URLs that are composed of
mixed character sets.
",73742,807,6568,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5670","signalapp/Signal-Android","b572fce6580f8ef41ab5190ec844831ce79ea6da",1,"2019-02-25 13:58:10-08:00","Remove some unnecessary intermediate blob
creation.
",73715,807,6568,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5671","signalapp/Signal-Android","bf28e109d3f5c69b615583211f81e9b6e9c98c9a",4,"2019-02-13 11:52:55-08:00","Update registration UI.
",73302,809,6566,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5672","signalapp/Signal-Android","55699e27bc53e18761d202a4af14e9e23489ad55",23,"2019-02-26 19:29:52-08:00","Added ability to receive long messages.  Send
support is in here too. We'll enable it in a
future release after enough people have updated.
",73682,814,6572,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5673","signalapp/Signal-Android","a122bb48996b75752ed8498eedfa2933a60bbdf7",75,"2019-02-25 17:47:30-08:00","Created new BlobProvider.  One unified place to
create blobs for different lifespans.
",73827,814,6617,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5674","signalapp/Signal-Android","2c28fa6a57d11f860f268dc326d83122afc96f10",1,"2019-03-12 11:36:34-03:00","Make GIF search layout option sticky.  Fixes #7843
",73900,817,6613,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5675","signalapp/Signal-Android","e0c11998c3a1d199ad51c68278dc2bb617c3d018",5,"2019-03-13 18:28:16-03:00","Make DisplayRecord take context as argument, so
locale is more likely to be correct.
",73897,817,6613,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5676","signalapp/Signal-Android","eb1dd58a0b2d8e90b80798532958244411c0a815",4,"2019-03-01 10:50:48-08:00","Persistent media in multi-send.
",74005,818,6620,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5677","signalapp/Signal-Android","0a8bbf14a633471a07adb73fd7a1675c5469e60d",13,"2019-03-13 16:05:25-07:00","Merge camera into send flow.
",74011,818,6627,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5678","signalapp/Signal-Android","0cb24047359dc4e765666c64c863f0caaf31ef67",1,"2019-03-18 11:14:18-03:00","Lint error fixes.  * Old Gingerbread code removed.
* Add missing super call.
",73921,817,6627,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5679","signalapp/Signal-Android","64cf03218178d9c1bc9ec42d1e3d5557c1953130",22,"2019-03-14 17:01:23-07:00","Updated media send UI.
",74110,818,6634,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5680","signalapp/Signal-Android","5e6f71cd3222cede610bb56df6b05763735e43eb",3,"2019-03-19 11:10:43-07:00","Show selection order in multi-select.
",74090,818,6634,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5681","signalapp/Signal-Android","932e7b4af51f8429240a7e3a7cbab2b2ca789f61",4,"2019-03-19 16:11:46-07:00","Fix button flicker when selecting single media
item.
",74127,818,6634,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5682","signalapp/Signal-Android","94e83030221a1f238752d33bf8557a26bec7a130",1,"2019-03-22 12:47:16-07:00","Remove dead code from ScribbleHud/Fragment.
",73566,815,6522,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5683","signalapp/Signal-Android","a7aa980e58e45c24ecc35af4d3d80d26dc60baea",6,"2019-03-25 17:23:38-03:00","New dynamic locale system. - Fixes #7619
",73756,822,6545,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5684","signalapp/Signal-Android","e842f7845786cb998e0dfd09a604566eb8f85464",2,"2019-03-28 15:04:38-03:00","Voice Note Locking.  Limit of 60 minutes, after
which it's cancelled.
",73851,822,6545,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5685","signalapp/Signal-Android","ce6d2d9c69a999d0b1507740b142100a8c37d53b",2,"2019-03-28 15:14:06-03:00","MMS image quality.  Fixes #8590  - Scale image
larger within the dimensions.  - Apply a minimum
dimension of 1024.
",73838,822,6545,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5686","signalapp/Signal-Android","621ac62c7eda9f2ca29e492db18dc282aeddbd41",6,"2019-04-01 17:42:57-03:00","Add red flashing voice note microphone.
",73858,822,6545,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5687","signalapp/Signal-Android","8cf3ba424a3918e73313789a5b309e972c48ded9",3,"2019-04-12 17:49:22-04:00","Trim long text before displaying if necessary.
Fixes #8759
",74160,823,6655,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5688","signalapp/Signal-Android","4a3c173adb45d6371855c851fdf806b90db7950a",503,"2019-03-28 08:56:35-07:00","Migrated to new JobManager.
",75624,838,6237,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5689","signalapp/Signal-Android","29cdb5290b532cdeb87801c41cfb2917ff7f0134",5,"2019-04-10 17:05:20-04:00","Make headers for giphy requests random sizes.
",75548,838,6130,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5690","signalapp/Signal-Android","f3f6cc87d98414d693a4d0787490a834569fe9b7",4,"2019-04-11 13:15:47-04:00","Request a small chunk instead of HEAD for images
of unknown size.
",75591,838,6130,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5691","signalapp/Signal-Android","48efcaa78509344eee9c3be010e6c6bc520335b2",2,"2019-04-19 12:36:00-03:00","Do not list SIMs that are not ready.  Fixes #8426
",75611,838,6130,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5692","signalapp/Signal-Android","c77daa8226ceed74cd6ecaddc131379aadf80836",4,"2019-04-19 14:14:53-03:00","Display carrier or number if any SIM descriptions
clash.  Fixes #8725
",75643,838,6130,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5693","signalapp/Signal-Android","bb90987e7ce7a255e570303bb83a22587a7bc026",1,"2019-05-01 08:36:24-07:00","Fix potential crash when retrieving SIM list.
",75807,839,6240,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5694","signalapp/Signal-Android","ec20b0e0e3da00429d2d7529b3be9de28b926d01",1,"2019-05-02 18:16:59-03:00","Fallback to SIM index.  #8725
",75802,839,6240,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5695","signalapp/Signal-Android","59f362495a3ec932b16827cb8abc1ee274a3822c",6,"2019-05-06 12:25:53-07:00","Add additional checks around link preview domains.
We never make requests to non-whitelisted domains,
but there were situations where some links would
redirect to non-whitelisted domains, which would
hit a final failsafe that resulted in a crash.  To
prevent this, we detect bad redirects earlier and
fail more gracefully.  Fixes #8796
",75717,839,6140,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5696","signalapp/Signal-Android","8cf2654c5ba1108c7068c44b754893115bbe422d",6,"2019-05-06 18:18:58-03:00","Show reply method SMS/Signal and respect sticky.
Fixes #8792
",75772,840,6140,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5697","signalapp/Signal-Android","d1b8e77fdc8b38b1469165923a62a2ed01841149",1,"2019-05-07 12:25:11-03:00","Always show the SIM on the footer of a multi-SIM
device, even if one SIM is disabled.
",75780,840,6140,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5698","signalapp/Signal-Android","93e6ccb9e479aaa9a7cf3ea8561d1724364ee3ce",240,"2019-05-09 14:11:11-03:00","Replace image editor.
",76421,856,5634,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5699","signalapp/Signal-Android","b1057d63a18c53c76a3ba1bd3130cd4ca3aa5d19",1,"2019-05-08 08:45:57-03:00","Lint.  - Check for permissions. - Fix Welsh
positional format. - Remove UIThread restriction.
- Asynchronous method does not need to be
restricted to UIThread and there is no
StaticFieldLeak to suppress. - Fix or Ignore New
API errors. - Reduce severity of some errors from
L10N.
",76432,856,5634,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5700","signalapp/Signal-Android","5b298b4a043989ac1ae097792819a1d0d4d841d7",5,"2019-05-10 12:16:19-03:00","Resize image in attempts to get it to fit into the
maxImageSize bytes.  Fixes #8803
",76458,856,5634,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5701","signalapp/Signal-Android","068ffc216761dda501c9519c51099ed840c67451",6,"2019-05-15 14:31:16-03:00","Image Editor - Allow undoing during croping.
",76530,857,5634,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5702","signalapp/Signal-Android","bf759711ef1a519bedeaf984100b4aa043e2abd5",33,"2019-05-16 17:50:49-03:00","Image Editor - Keep image within crop bounds.  *
4% of original pixels must be visible. * The
entire crop must be within the image. * On
release, try to scale crop area and image to fit
if the crop is invalid. * Undo to last valid
position if that didn't work. * Additionally,
center thumbs now do not respect aspect ratio
lock.
",76680,858,5670,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5703","signalapp/Signal-Android","6777b3e0e6688a78696f35c41f7eb1121c9b7b06",15,"2019-05-17 16:15:27-03:00","Image Editor - Undo button visibility.
",76746,859,5678,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5704","signalapp/Signal-Android","456ba5fa02ed8f0ae3edfc2a038136c3e08b8b7b",2,"2019-05-17 19:42:12-03:00","Image Editor - Replace minimum scale, with minimum
pixel count.  - Anti alias images. - Minimum crop
ratio of 15:1 or original image ratio.
",76762,859,5689,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5705","signalapp/Signal-Android","7f0c998b242b6c72cd8eccbf788d2ae0b5211944",12,"2019-05-20 12:02:40-03:00","Image Editor - Further crop improvements.  * Thumb
accuracy improved.  * When out of bounds from
drag, try to fix by adjusting translation.  *
Update undo state when listener changes.
",76864,860,5737,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5706","signalapp/Signal-Android","10ad3fbf821d00a26b82689b16ca2fc59f2b2b55",1,"2019-05-20 12:19:57-03:00","Lint - Use easily identifiable wake lock tags.
",76872,860,5745,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5707","signalapp/Signal-Android","9445555d662fc042a578864192e84e861ba40b22",179,"2019-05-22 13:51:56-03:00","Code analysis - address @NotNull/@Nullable issues.
",76878,860,5749,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5708","signalapp/Signal-Android","3cba8ab58a60d164ef68dafa0fc8c4a0c0365a27",1,"2019-05-22 16:59:00-03:00","Keep system default SIM as a fallback for when no
conversation default SIM.  Fixes #8452
",76862,860,5750,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5709","signalapp/Signal-Android","e5f70bdbda10e34632aa4185ab37fa80080c08c4",1,"2019-05-23 16:56:05-03:00","End RTC call on incoming PSTN call.  * Hangs up
when new device call is answered.  * Ensure not on
a device call when starting a Signal call.
",76883,860,5750,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5710","signalapp/Signal-Android","2a644437fbb2121e3ad2b767331c3096eb97095b",427,"2019-04-17 10:21:30-04:00","Add sticker support.  No sticker packs are
available for use yet, but we now have the latent
ability to send and receive.
",80614,904,5841,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5711","signalapp/Signal-Android","5ad02f724cbeb86fd3bb52a8687e7f20278097a8",2,"2019-05-28 19:57:06-03:00","Enable 64-bit.  * Multiply version codes by 10 and
add a code for each abi in order to generate
different version codes for the play store.
",80616,904,5854,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5712","signalapp/Signal-Android","4741a76f37f83b88bbe143e8e6742b0e11abc677",2,"2019-05-29 17:21:00-04:00","Add support for isRecipientUpdate flag.
",80651,904,5855,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5713","signalapp/Signal-Android","b5aa46bb672296a40eb6f5aee555dfa0c402c774",2,"2019-06-05 15:47:14-04:00","Convert to AndroidX.
",80523,904,5865,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5714","signalapp/Signal-Android","fb4c9d3bf1977a851301e56ebf5d5233d35a83ac",1,"2019-05-31 17:12:41-04:00","Improve message download reliability.
",80554,905,5868,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5715","signalapp/Signal-Android","b9a10653f1fe3464f8170e8fae92189e625dd53f",23,"2019-06-14 15:31:03-04:00","Image Editor - Multi-line text.  * Two pass
rendering for text on top while editing.
",80682,905,5882,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5716","signalapp/Signal-Android","1a32bc8232855ceef32a348bd48674e16957f786",6,"2019-06-19 11:57:07-04:00","Fix flickering avatar.
",80731,905,5882,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5717","signalapp/Signal-Android","73b8f11b5a45bfe95e202685bc1f066895e74d0a",20,"2019-06-26 18:10:57-04:00","Improve camera capture with CameraX.
",82001,911,6249,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5718","signalapp/Signal-Android","cfcb9a8cdbb7013290b000c964c3781d1cdc9b15",16,"2019-06-27 12:14:54-04:00","Custom place picker to replace places SDK.
",82249,914,6255,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5719","signalapp/Signal-Android","c089d6cd4376baf32f12cce33bc2913c8b24a868",23,"2019-06-27 12:18:52-04:00","Allow multiple messages on the Generic Foreground
Service. Show the oldest still active.
",82405,915,6259,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5720","signalapp/Signal-Android","abcd599ad8c6a9c9fb9193e191f00823ad60ceb9",5,"2019-06-27 15:17:14-04:00","Support Android Q call notifications.
",82439,915,6259,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5721","signalapp/Signal-Android","d9df1ec39e295b6fcd630881872c7124a7ca0dad",2,"2019-06-27 16:10:45-04:00","Preparing to target API 28.
",82524,916,6265,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5722","signalapp/Signal-Android","93856ed8cfa97c3d0621bc733a3d6692ba04caab",1,"2019-06-28 18:57:04-04:00","Fix some bookkeeping in CameraXFragment.
",82532,916,6265,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5723","signalapp/Signal-Android","a5eb823a1718cf6cada7b3306a8e11df327d8952",2,"2019-06-30 09:26:08-04:00","Avoid crash with Address parcelable.  There seems
to be a bad implementation of Address
parcelization that pops up in certain scenarios.
We can avoid it by just excluding it from the
parcel altogether.
",82543,916,6266,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5724","signalapp/Signal-Android","5b61c8ac18a7e89c981188edf0a11bbec00a36c2",8,"2019-07-10 16:59:08-04:00","Request a push challenge and supply to SMS and
voice verification.
",82409,916,6238,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5725","signalapp/Signal-Android","8d6f1341f1c884cf95906e72703e7d283965a720",2,"2019-07-17 15:05:19-04:00","Reduce resolution of image editor preview and make
memory efficiencies.  Fixes #8929
",82467,917,6243,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5726","signalapp/Signal-Android","475c54213dcea63158ea89a5a6bbd9548afed109",5,"2019-07-15 11:12:26-04:00","Move from dagger to a service locator pattern.
",82296,916,6254,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5727","signalapp/Signal-Android","9f7bb69341017703789b5d1ce468f68457163498",19,"2019-07-18 10:57:52-04:00","Update the media send flow with a persistent rail.
",82480,916,6254,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5728","signalapp/Signal-Android","c77809fa90f47f8cbbc70eccb9497ca1af03fe1a",20,"2019-06-11 02:18:45-04:00","Add support for view-once messages.
",83461,926,6286,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5729","signalapp/Signal-Android","dd66e224436dd870b581aad28466221fb978ae7b",1,"2019-07-18 16:10:59-04:00","Ensure that camera captures have correct
dimensions.
",83473,926,6286,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5730","signalapp/Signal-Android","79a142c1be7facdf7d9c4b711f6b26449ff0eccb",16,"2019-07-19 11:43:55-04:00","Refactor media preview to use fragments.
",83492,928,6286,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5731","signalapp/Signal-Android","4fbb87b5b72e10a49c91160cafc23d2d90b31d02",20,"2019-07-02 17:02:04-04:00","Created a new SectionedRecyclerViewAdapter.
",83547,929,6297,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5732","signalapp/Signal-Android","beaa86389dc689842ba3c0bd4dba83fb2c812fbc",97,"2019-07-03 15:07:00-04:00","Implement camera-first capture flow.  This allows
you to take a photo, then choose the recipients
after. This also makes it so we only upload the
attachment once.
",84340,936,6313,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5733","signalapp/Signal-Android","965de16de17201411e4ab8f59b2be97b6d0dda9d",2,"2019-07-22 18:06:26-04:00","Fix possible hangup with CellServiceConstraint.
On phones with no SIM card, if you manage to
enqueue a job with a CellServiceConstraint, the
previous check we were using to check if there was
cell service could hang indefinitely on some
devices.  This changes it to a fast check, which
all constraints should be.
",84390,936,6313,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5734","signalapp/Signal-Android","5c870ca8ea39534ab08c28b9e819c88e41382d1d",1,"2019-07-22 22:48:43-04:00","Prevent sending revealable messages in Note to
Self.  Send support isn't enabled yet, but didn't
want to forget about it.
",84390,936,6313,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5735","signalapp/Signal-Android","4ca90374b975d109fa46b435a37e787f87735973",4,"2019-07-28 10:05:22-04:00","Fix bug displaying an empty camera contacts search
result.
",84408,936,6315,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5736","signalapp/Signal-Android","f9946083dd2d3e986d4a648f30afb60e87a9e56e",38,"2019-07-25 15:23:59-04:00","Video transcoding.
",85748,946,6570,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5737","signalapp/Signal-Android","e8e80e5d0558116de0d71b58508fe30d6dd6eba8",26,"2019-07-25 15:29:31-04:00","Transcode video during attachment upload.
",86104,952,6611,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5738","signalapp/Signal-Android","17400020b71e6a945aee977c37a2cbe55f14b282",2,"2019-07-25 19:55:26-04:00","Allow RuntimeExceptions thrown by Jobs to crash.
",86135,952,6624,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5739","signalapp/Signal-Android","e0d1987445a74bf7b3bd98c7483b810e6f1d8f98",3,"2019-07-29 09:36:48-04:00","Accessible call answering/rejecting and content
descriptions.
",86152,952,6624,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5740","signalapp/Signal-Android","a6890fc8dd486a2bfbe06a645ea5681e0dbfbf3c",1,"2019-07-30 14:25:35-04:00","Video playback on TextureView and
DepthPageTransformer.
",86177,953,6627,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5741","signalapp/Signal-Android","19b2658414f7bf57a476a0b4e86d51bd53166668",1,"2019-08-01 16:42:59-04:00","Fix Job.Result logging.
",86202,954,6627,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5742","signalapp/Signal-Android","57835dc8f18882396c5a18dc1b32a414136d505e",64,"2019-07-31 19:33:56-04:00","Update view-once message behavior.
",86220,957,6644,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5743","signalapp/Signal-Android","d3bed549f22f47173c37f642e66a4bed418d9af5",11,"2019-07-31 12:53:19-04:00","Switch back to storing incoming messages in
PushDatabase.  On a Pixel 3, this adds ~30-40ms of
delay, but it's going to be a requirement for
upcoming migrations.
",86296,959,6657,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5744","signalapp/Signal-Android","d0a9bd4c6dc58db90c5991baa17b112fad5ef43d",32,"2019-07-29 19:02:40-04:00","Create a new system for application-level
migrations.
",86524,965,6729,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5745","signalapp/Signal-Android","457ad4c607b4fc4aa84e4fd0750fe774e44886b5",3,"2019-07-03 18:23:26-04:00","Added a central system for message retrieval.
",86604,967,6744,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5746","signalapp/Signal-Android","3849b46f0affd3e58adcc6c3eeab68eb7bd512f1",12,"2019-08-06 14:54:44-04:00","Refactor ApplicationDependencies.
",86608,967,6744,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5747","signalapp/Signal-Android","37bcac40bbe65837d3760ee867538b16f92068aa",8,"2019-08-06 16:02:12-04:00","URL encoded scrubber.  * Replace scrubber and
tests.    * Improves email regex performance.
",86606,967,6755,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5748","signalapp/Signal-Android","942154a61f44e464ad9db2c0fbb305b01db199de",21,"2019-08-06 16:52:15-04:00","Separate compression job.
",86637,968,6749,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5749","signalapp/Signal-Android","a58f564d1e1554f813e0e6ad31fd0eec0ebc1218",1,"2019-08-09 12:49:57-04:00","Escape string within Full Text Search.  Fixes
#8975
",86648,968,6749,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5750","signalapp/Signal-Android","4e6798e38e9efa2673738ca42f26d687e3b76ab9",3,"2019-08-12 15:05:49-04:00","Fix occasional double scroll bar on fast scroller.
",86660,968,6749,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5751","signalapp/Signal-Android","90681d47f80ac4965e56b7d2a9a7d69135293a5e",2,"2019-08-14 11:44:00-04:00","Fix first item sticky header.
",86672,968,6753,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5752","signalapp/Signal-Android","9257c6ddf36858e959c7c5f25fbe16ab52d6f064",2,"2019-08-24 09:09:20-04:00","Fix failure propogation in longer job chains.
",86717,968,6753,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5753","signalapp/Signal-Android","af42d5b67183568aeb519523a8f94a447d4f2365",16,"2019-08-21 22:14:38-04:00","Create system for job migrations.
",87030,970,6772,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5754","signalapp/Signal-Android","85c9a9050a4bfd3163ee3bfc777d8ae69ee655e0",16,"2019-08-26 19:49:16+01:00","Add an invite button in the new conversation
screen.
",87267,973,6831,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5755","signalapp/Signal-Android","d0ce4ff03296cced4272eb2172e1bb9d2107018b",2,"2019-08-29 11:57:41-04:00","Lottie play pause animation.
",87267,973,6831,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5756","signalapp/Signal-Android","15b650382e9ad452c4b94349d8d2a212f1bd66a7",4,"2019-08-30 17:31:59-04:00","Fullscreen media preview on tap.
",87318,973,6832,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5757","signalapp/Signal-Android","8d561ead2120db26daa5068d8cebc836bad25f82",10,"2019-08-30 17:45:35-04:00","Stickers in image editor.
",87480,975,6833,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5758","signalapp/Signal-Android","0e2d52026e1d1276d0e5b95abb5c77b3f37c4b2f",261,"2019-08-07 14:22:51-04:00","Migrated to locally-assigned RecipientId's.  Oh
boy.
",88128,983,6832,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5759","signalapp/Signal-Android","582028f2c298b95033a475fc42e350b9ce5a25f1",43,"2019-08-26 18:09:01-04:00","Search contacts via the RecipientDatabase.
",88242,985,6846,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5760","signalapp/Signal-Android","007ea43dc82be4746dcd5cdc4521bd2bbc72ab57",23,"2019-09-05 10:18:54-03:00","Add Swipe-To-Reply in conversations.  Swipe-To-
Reply is a progress based animation that is
controlled by the ConversationItemSwipeCallback.
We use the TouchListener to keep track of the
latest down coordinates, so that we can check
whether we are over a seek bar. The
SwipeAnimationHelper is responsible for actually
performing the transitions as the swipe
progresses.
",88492,989,6846,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5761","signalapp/Signal-Android","f81c0b448eca105f899954c3bf2a5850bc054f15",7,"2019-09-06 13:28:54-03:00","Add CameraXFlashToggleView and selfie flash.
",88672,992,6841,"alex-signal","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5762","signalapp/Signal-Android","d1a6582ad7aeeec1f8a440bee58b598d90275f2a",4,"2019-09-05 14:39:18-04:00","Support independent application migration
versions.
",88729,992,6844,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5763","signalapp/Signal-Android","faafa40122153087455029c3313b3e58c1034626",1,"2019-09-19 13:42:34-03:00","Fix DecryptableStreamLocalUriFetcher bug for
external video thumbnails.  Fix bug where external
video thumbnails do not appear.
",88742,992,6844,"alex-signal","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5764","signalapp/Signal-Android","a3caabcafd8f3b6ff7f3132c91e03e4fc7a44d2e",2,"2019-09-19 13:44:43-03:00","Fix video forwarding thumbnail display.
",88750,992,6844,"alex-signal","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5765","signalapp/Signal-Android","8b99af3eef4ed7f858e6ff9949d5598543bf9512",2,"2019-09-24 12:03:33-04:00","Fix threading issues with LiveRecipient.
",88746,992,6843,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5766","signalapp/Signal-Android","4e2afa7362a99a2e34ad1a56b3b657bcacf0a6b0",8,"2019-09-26 10:53:46-04:00","Fix some more broken JobMigrations.
",89003,996,6853,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5767","signalapp/Signal-Android","1d8e85fcada6472db5b0a08a7d4ce2200df7a2e7",11,"2019-09-26 13:43:38-04:00","Updated the feel of swipe-to-reply.
",89024,996,6853,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5768","signalapp/Signal-Android","95333eccd4cad16ac1b0fc60d4987cbf6db2c934",5,"2019-10-02 11:23:21-04:00","Cleanup bad recipients.
",89123,998,6857,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5769","signalapp/Signal-Android","d7395af774a683a540c79ea18d9df092e97267d3",9,"2019-10-07 13:36:05-07:00","Simplify recipient inserts.
",89150,998,6857,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5770","signalapp/Signal-Android","33334f80c324dc10746a7811a6a75c636f5c7399",1,"2019-10-08 19:14:52-07:00","Add back proper support for unknown recipients.
Fixes #9085
",89187,998,6857,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5771","signalapp/Signal-Android","b89163bb14c2e8226399d06ab3e246307c33149e",9,"2019-09-23 11:37:01-04:00","Migrate avatars to use recipientId filenames.
",89256,999,6861,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5772","signalapp/Signal-Android","7d02bb8487083056b78267ab7af31bc4c2c9b1b2",16,"2019-09-26 17:29:38-03:00","Store file hash to avoid data duplication.
",89530,1000,6861,"alex-signal","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5773","signalapp/Signal-Android","b0b8377a8ef307c8b999d254f2aba2d88aa657ca",7,"2019-09-25 08:26:30-04:00","Migrate notification channels to recipientId's.
",89569,1000,6861,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5774","signalapp/Signal-Android","d698d3bd6f3eb74255c7041fb9b67556d34f4c95",13,"2019-09-27 10:10:30-03:00","Added support for view-once video.
",89780,1001,6865,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5775","signalapp/Signal-Android","43954a176a89353f24b6e27eac8a46c95bfd5217",13,"2019-10-07 15:43:36-03:00","Apply new Signal icons and color palette.
",89920,1005,6871,"alex-signal","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5776","signalapp/Signal-Android","ff60b5b7311f1f3fc0d29a7566358d73a4318d2f",50,"2019-10-09 17:16:23-03:00","Add in-app video recording for supported devices.
",91003,1011,7122,"alex-signal","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5777","signalapp/Signal-Android","6b8659a39320089b9373fcdd16f887061fa5cfd1",5,"2019-10-15 15:47:54-04:00","Move JobManager to ApplicationDependencies.
",90892,1010,7104,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5778","signalapp/Signal-Android","5b682a3a3d046f9c18a5988a3a4bb4403b9a9b71",13,"2019-10-15 12:45:03-04:00","Use our own location retriever.
",90962,1011,7108,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5779","signalapp/Signal-Android","7193252d7788dec876f1cbd92289c3890bc22327",2,"2019-10-15 18:31:31-04:00","Fix TooltipPopup positioning.
",90968,1011,7108,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5780","signalapp/Signal-Android","c247935f1a4f2ad0c18ee1a00d99bac90215ce21",2,"2019-10-11 01:08:40+02:00","Fix NPE when has no contact permissions.  Fixes
#9048  Co-authored-by: Alan Evans
<alan@signal.org>
",90970,1011,7108,"tzm","frank@boldsolutions.de","Greyson Parrelli","greyson@signal.org"
"5781","signalapp/Signal-Android","a135e7efa2822ced8e73548189c3d389286b4a4c",12,"2019-10-16 13:26:26-03:00","Check DND settings before show activity or play
ring or vibrate.
",91044,1012,7108,"alex-signal","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5782","signalapp/Signal-Android","86d088bce25cc5c7e9e5f475a059c6882106e83b",108,"2019-10-16 18:37:08-04:00","Improved registration flow.
",91672,1026,7162,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5783","signalapp/Signal-Android","9432a45b395bc6cebe0ab7f27c3097cafe4e4f1b",41,"2019-10-17 09:26:08-03:00","Implement blur-hash based low resolution thumbnail
previews.
",92100,1033,7246,"alex-signal","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5784","signalapp/Signal-Android","ccb18cd46ccd13f9755e0851bec910467af9f8c2",15,"2019-10-15 16:46:29-04:00","Added JobTracker.
",92190,1034,7267,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5785","signalapp/Signal-Android","67f5605bc4dfe612ba431198506917f582a87b79",5,"2019-10-15 16:46:45-04:00","Block in RestStrategy until PushDecryptJobs
finish.
",92225,1034,7271,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5786","signalapp/Signal-Android","16f41555ba1af5d02df6f97255cc1e4b9dc22426",6,"2019-10-17 13:57:30-04:00","Local SMS rate limiting.
",92373,1036,7278,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5787","signalapp/Signal-Android","12c4283c306974b1deb7239156b33f321c268280",1,"2019-10-17 22:23:27-04:00","Conditionally show a toolbar shadow in the
conversation list.
",92433,1036,7278,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5788","signalapp/Signal-Android","59d03cbeb2e3f6cfb4bf3ef71721e57c9e5dbcb7",1,"2019-10-18 11:07:49-04:00","Address possible issues with AvatarMigrationJob.
",92443,1036,7278,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5789","signalapp/Signal-Android","5d03e3d5168eab7c6d113ec5633d39ad5cad3065",1,"2019-10-18 12:01:01-03:00","Apply video recording permissions checks and error
handling.
",92488,1036,7278,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5790","signalapp/Signal-Android","c2da4fcd7d07e0631edd0495e03899ac02ea4a83",5,"2019-10-18 17:36:00-03:00","Update CameraX to Alpha06 and bring in new View /
Module code.
",92542,1037,7292,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"5791","signalapp/Signal-Android","c7f76c5d1c8f04d1c9973874830d40d1441ae0d5",2,"2019-10-19 12:23:11-04:00","Add a util to safely set a MediaMetadataRetriever
data source.
",92566,1038,7298,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5792","signalapp/Signal-Android","b9057a1c1138d4ac0d4cbabedb18fb41ba45056b",4,"2019-10-20 00:52:14-04:00","Use fallback images for Giphy results.
",92610,1038,7302,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5793","signalapp/Signal-Android","660ec882020e37f317ecb8a45fb780ed54876f05",7,"2019-10-20 03:47:42-04:00","Fix data deduping issues.  Fixes #9109
",92618,1038,7302,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5794","signalapp/Signal-Android","8b06051e7c27c95c65a6a70c79fa15a9d1822351",2,"2019-10-21 00:19:23-04:00","Fix blurhash being visible on transparent images.
",92637,1038,7302,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5795","signalapp/Signal-Android","09f0c5b63fb3b37a15f5c0af559be7a0f926a21a",1,"2019-10-21 00:49:06-04:00","Fix bug in manual conversation search query
submission.  Fixes #9115
",92651,1038,7302,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5796","signalapp/Signal-Android","0485ae603b5bbdb894fd0058502934a2893fa60f",2,"2019-10-21 10:33:32-04:00","Set targetResolution to something reasonable for
camera capture.
",92509,1037,7302,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5797","signalapp/Signal-Android","097f97b5e4d6403ebf736195c7d0b19195fd994e",14,"2019-10-21 12:11:12-04:00","Add system to allow skipping attachment
compression.
",92591,1037,7302,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5798","signalapp/Signal-Android","03dc220cead33a162fc1addd3225fad2253f44dc",2,"2019-10-21 18:54:06-03:00","Fix crash related to unsupported camera mode.
Fixes #9106
",92659,1037,7302,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5799","signalapp/Signal-Android","5e96832666044585ad2bb8637856093c6e1948bd",1,"2019-10-25 13:54:38-07:00","Disable video capture for legacy camera devices.
",92711,1037,7302,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5800","signalapp/Signal-Android","9ec4a7af0f45c118ef039e76eb858698037bcf41",9,"2019-10-28 11:52:24-04:00","Update max video duration for MMS.
",92756,1038,7302,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5801","signalapp/Signal-Android","36e400650c4b4ea7b0412f51924e83653cbcb049",9,"2019-11-04 10:48:58-05:00","Fix backup restore issue.  Fixes #9133
",92792,1039,7300,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5802","signalapp/Signal-Android","c60909272b80ff24007736f67bb3797172e00cd7",67,"2019-09-06 23:40:06-04:00","UUID migration.
",92968,1041,7354,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5803","signalapp/Signal-Android","55a8bd86dea197ddd149cf48848512e713648e49",12,"2019-10-09 13:57:36-03:00","Consolidate profile display labels.
",92929,1041,7355,"alex-signal","alex@signal.org","Alan Evans","alan@signal.org"
"5804","signalapp/Signal-Android","d8714fe3b4b5a5519019c53f325137774b15cc67",4,"2019-10-31 11:59:37-04:00","Delegate to library Base64.
",92211,1041,6338,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5805","signalapp/Signal-Android","7bb1caa22e8be9bfac71b176cc3d67f92c08f21b",6,"2019-11-01 11:03:39-03:00","Remove unused pictures that were captured outside
of the in-app camera.
",92355,1042,6342,"Alex Hart","alex@signal.org","Alan Evans","alan@signal.org"
"5806","signalapp/Signal-Android","aac7e9ea533f53e7fadf7bb837d0e13a1bdeeb7f",1,"2019-11-04 12:38:02-05:00","Fix issue with ShareActivity contact display.
",92413,1043,6342,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5807","signalapp/Signal-Android","e4fc6f41b8ffbf0564f02460690afaa1e77a58af",1,"2019-11-11 13:00:01-05:00","Schedule first backup after restore for 24hrs
time.
",92442,1043,6342,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5808","signalapp/Signal-Android","a7dd78cce6b14971dce58c78ff29db47245c1b3e",120,"2019-11-12 10:18:57-04:00","Implement in-app insights.
",93627,1061,6352,"Alex Hart","alex@signal.org","Alan Evans","alan@signal.org"
"5809","signalapp/Signal-Android","c702ff676aa6464774da37fb3da132a07d82eb61",19,"2019-11-08 15:33:10-05:00","Support additional sync behavior for linked
devices.
",93843,1064,6364,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5810","signalapp/Signal-Android","599bb5ab0ff26c86384b8d82134737b4420fc82d",1,"2019-11-15 16:33:54-04:00","Update insights copy and queries.
",93898,1066,6369,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"5811","signalapp/Signal-Android","a8309b6b2b31a3ab6d4c41ddb2ea3fba1bd1f904",1,"2019-11-15 18:21:49-05:00","Fix attachment sizes during backup exports.
",93915,1066,6372,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5812","signalapp/Signal-Android","6cd5100530dd23e045a9a047b624706c4cb8007f",1,"2019-11-21 13:24:54-05:00","Ensure Recipient.self() is available.
",93916,1066,6372,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5813","signalapp/Signal-Android","c7b7242effe80d5389245d86ff378fa41a891350",1,"2019-11-25 10:19:43-05:00","Fix issues with blocking and MMS groups.  Fixes
#9218.  Note that this removes MMS group blocking
for now, just because it never really worked, and
I don't want to hotfix in a feature.
",93925,1066,6372,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5814","signalapp/Signal-Android","6108a32631ee5f481cb5dc9a793733302b0d8d36",3,"2019-11-25 11:04:45-05:00","Prevent reading UUIDs from external contacts.
",93936,1066,6379,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5815","signalapp/Signal-Android","6cd4728e3cba6d91eb1573d94b854b96936e8d26",6,"2019-11-13 23:58:59-05:00","Update job serialized data after retry.
",93859,1065,6379,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5816","signalapp/Signal-Android","6933ca50a758848cec543fbc33093229d99ab44a",5,"2019-11-19 12:01:07-04:00","Implement new Message Request UI.
",94314,1069,6380,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5817","signalapp/Signal-Android","608815a69b78000345ef39510c71014ccbfd3003",59,"2019-10-28 20:16:11-04:00","Add internal pre-alpha support for usernames.
",104364,1238,8366,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5818","signalapp/Signal-Android","1e7c93007d6434490f2d755eccad0952b1b28072",69,"2019-11-14 14:35:08-05:00","Convert the conversation list into a real
fragment.  It was a fragment before, but it's
functionality was inappropriately split between
the various layers.  This also sets us up better
to do tablet stuff in the future, if we choose to
do that.
",104300,1239,8378,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5819","signalapp/Signal-Android","fb494c115192e6ed58af8de09f13a5307f77987a",9,"2019-11-22 13:47:25-04:00","Implement new invite screen.
",104383,1241,8378,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5820","signalapp/Signal-Android","de52bf50a23cdf8ee8020bdc37ca1c5905038325",4,"2019-11-27 14:39:37-05:00","Improve image and sticker notifications.
",104398,1241,8378,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5821","signalapp/Signal-Android","058c25808b27a5e3289f5c06652e65bf8e885497",1,"2019-12-03 00:00:08-05:00","Clean up website auto-update APKs.  I think
previously we thought that because we always used
the same filename, that we were just overwring the
same file repeatedly. However, DownloadManager
will actually append numbers to a filename instead
of overwriting, so we were generating a ton of
files.  Now we just clear out any previous files
before downloading a new one.  Related to #9033
",104409,1241,8378,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5822","signalapp/Signal-Android","7f8ca58762670d444daa8f2995213fcfde3fbea4",29,"2019-12-03 12:31:23-05:00","Add internal pre-alpha support for Registration
Lock v2.
",105580,1260,8440,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5823","signalapp/Signal-Android","a8d826020d123b55bd45fbc72012f8d91d2a5b4d",1,"2019-12-03 16:26:05-04:00","Implement new video call experience.
",105674,1260,8440,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5824","signalapp/Signal-Android","bceb69b28455de1f315492422b9cc04de70405c5",115,"2019-12-03 17:57:21-04:00","Add internal pre-alpha support for receiving
reactions.
",107252,1274,8443,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5825","signalapp/Signal-Android","52447f5e9730c000d389880975e15917d0e67503",156,"2019-12-03 11:05:03-05:00","Add storage management features.
",107949,1283,8446,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5826","signalapp/Signal-Android","cc0ced9a81d3fc0490cd8d7d71de891a5a29b816",61,"2019-09-26 10:12:51-04:00","Add internal pre-alpha support for storage
service.
",109869,1302,8537,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5827","signalapp/Signal-Android","244db437cb59d06da7550b5d8b003ca168885ecd",1,"2019-12-04 09:59:27-04:00","Fix reaction display issues.
",109878,1302,8537,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5828","signalapp/Signal-Android","93deee68248461aebd144a4f2f4a5fb71a6933e5",1,"2019-12-04 10:29:34-05:00","Attempt to fix crash in ClassicOpenHelper.  These
users must have > 1.5-year-old installs that
haven't been updated, but it's still a top crash
for whatever reason, so gotta try to fix it.
",109917,1302,8538,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5829","signalapp/Signal-Android","911ca7c29d93a5918929e9dde5190f45935f2485",28,"2019-12-04 20:13:51-05:00","Improve storage management detail view
descriptions.
",110043,1303,8539,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5830","signalapp/Signal-Android","b38d02061d6b1f3576d6c4a9be1018c41bb1f0e9",1,"2019-12-04 23:55:17-05:00","Improve logging in RetrieveProfileJob.
",110074,1303,8541,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5831","signalapp/Signal-Android","6a33b231e3a1569846ce4a3c4b835c924a7933b0",5,"2019-12-05 02:48:35-05:00","Add a FrameRateTracker to log frame drops.
",110205,1304,8554,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5832","signalapp/Signal-Android","5782c8a58bcdf8992e3ff0ad9ee815cfa6ecc4d3",1,"2019-12-06 08:43:04-05:00","Make media overview view pager scrollable for long
translations.
",110358,1306,8560,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5833","signalapp/Signal-Android","b9bd3f2b4cbf015c0993f4e7c13a8e3d6ff42374",32,"2019-12-13 01:23:32-05:00","Launch stickers.
",110509,1308,8567,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5834","signalapp/Signal-Android","a32666817cd95cc8c6943c894ea1a9ffcc6cbeb6",1,"2019-12-16 19:57:38-05:00","Remove old image editor stickers.
",110323,1305,8519,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5835","signalapp/Signal-Android","b6d59f1d46e10eecdf6dbaa7667ddaa743771c4a",2,"2019-12-17 19:35:31-05:00","Fix sticker manager text wrapping issues.
",110339,1305,8518,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5836","signalapp/Signal-Android","fe5fca8eaf3f73ab5b350d7d6b3c17b27729d92a",4,"2019-12-18 00:44:21-05:00","Sync thread order and archive status with linked
devices.
",110485,1305,8519,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5837","signalapp/Signal-Android","3bd8aa8a86cfb69331af2b79b544f24fb648cd62",6,"2019-12-19 11:42:10-04:00","Apply MessageStyle and fix chronology issues.
",110553,1305,8520,"Alex Hart","alex@signal.org","Alan Evans","alan@signal.org"
"5838","signalapp/Signal-Android","b598431237caeffb20480851e640b2a3b1685a80",94,"2019-12-20 16:50:50-05:00","Separate message decryption from message
processing.
",110951,1312,8533,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5839","signalapp/Signal-Android","7e72c9c33b84bb255e4f9de1c0436cf2f2179fa5",2,"2020-01-02 21:59:13-05:00","Add view-once tooltip.
",110975,1312,8532,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5840","signalapp/Signal-Android","4e7b4da94108d311108e6cafc9ad2005bbfa1d3e",6,"2019-12-28 10:08:11-05:00","Implement resumable downloads.
",110995,1312,8533,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5841","signalapp/Signal-Android","277c9e22f121992302df1b88274d05b511468e4c",29,"2020-01-03 00:41:03-05:00","Show long-press-magnify in sticker preview screen.
",111070,1313,8533,"Greyson Parrelli","greyson@signal.org","Alan Evans","alan@signal.org"
"5842","signalapp/Signal-Android","e2a48d17145050e1fe63a2ace6c0e2d59759c6e2",7,"2020-01-09 12:36:46-04:00","Fix notification reply image.
",111162,1313,8537,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"5843","signalapp/Signal-Android","fd7aa9ccfa40f6da6bf18ebdd377ac1973a336f0",2,"2020-01-09 12:03:52-05:00","Fix view-once sync and quote descriptions.
",111192,1314,8542,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5844","signalapp/Signal-Android","38597aea004d2507cb639c9e0e52d9ed89a83c58",2,"2020-01-03 14:10:16-05:00","Add support for canceling Jobs.
",111424,1317,8560,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5845","signalapp/Signal-Android","06757153b3d67a5cc4b30a1e7046773af6aa81bd",5,"2020-01-07 21:00:32-05:00","Add support for adding jobs with existing
dependencies.
",111443,1317,8563,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5846","signalapp/Signal-Android","4b5b9fbde8c55a0996f45d80299abc33e12392aa",57,"2020-01-10 01:08:39-05:00","Add an encrypted key-value store.  SignalStore is
backed by SQLCipher and is intended to be used
instead of TextSecurePreferences moving forward.
",111918,1323,8592,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5847","signalapp/Signal-Android","fadcc606f8aa7ae93e38da9febcad3c17140ecaa",103,"2020-01-08 15:56:51-05:00","Optimize uploads during media composition.  By
uploading in advance (when on unmetered
connections), media messages can send almost
instantly.
",112518,1330,8645,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5848","signalapp/Signal-Android","f2b9bf0b8c6f928679e4b6c73ee8e568344fbb06",5,"2020-01-17 11:14:54-05:00","Use SignalStore for KBS Values.
",112512,1331,8652,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5849","signalapp/Signal-Android","3907ec8b514acc5a1a4a77f75b7247a6e50d6adc",37,"2019-12-20 16:12:22-04:00","Add support for setting an optional last name in
profiles.
",112406,1333,8697,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5850","signalapp/Signal-Android","f7a3bb2ae8fb80dad49f85cfb792980c0f0b03f8",11,"2020-01-21 12:34:58-05:00","Add the ability to re-order sticker packs.
",112732,1344,8743,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5851","signalapp/Signal-Android","e37c4b1f87d0039b371089a7a1ef84cfabd1f22b",8,"2020-01-22 15:02:06-05:00","Replace pinstretcher with Argon2 and new PIN
encryption.
",112757,1344,8756,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5852","signalapp/Signal-Android","b8602ee0040faf70ccb06be35b77179bc0e8c448",22,"2020-01-17 18:32:26-05:00","Fix issues with Mexican phone number formatting.
Fixes #9317
",112961,1346,8772,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5853","signalapp/Signal-Android","55e9f8722f25d8dac36e8d8ff4f7c69aa450f6ef",7,"2019-12-19 17:41:21-05:00","Add support for remote feature flags.
",113167,1348,8787,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5854","signalapp/Signal-Android","bdb30ebc482d79ccf9fc4c0d8f3a561b22c4de06",1,"2020-01-23 12:22:40-05:00","Set a better User-Agent on requests.
",113131,1348,8786,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5855","signalapp/Signal-Android","e7f568e1628fbdd83bc92b0089803684262cb8ce",4,"2020-01-24 10:42:58-05:00","Trimming profile names to fit byte budget and
remove leading/trailing spaces.
",113155,1348,8791,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5856","signalapp/Signal-Android","4ae7d56db4b9833a301a3f9f3150efda1e8e554a",2,"2020-01-28 14:57:17-04:00","Fix NPE when returning to profile from background.
Also generally improves saved-state management for
Profile editor.
",113471,1349,8808,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"5857","signalapp/Signal-Android","22f9bfeceb5f665980c3d4e5635abcf87b44a6a7",39,"2020-01-22 09:22:19-05:00","Add support for creating Megaphones. Includes
reactions megaphone.
",114054,1361,8853,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5858","signalapp/Signal-Android","9f7b2e2cfd295ee29a68af5e0e930dbc3d06cd69",4,"2020-01-30 11:33:34-05:00","Track the first time a megaphone appeared.
",114079,1361,8853,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5859","signalapp/Signal-Android","109d67956fe1d77362d8c416b6d8788f1712a4d0",44,"2020-01-29 22:13:44-05:00","Implement new attachment keyboard.  Such beauty.
Such grace.
",114182,1365,8856,"Greyson Parrelli","greyson@signal.org","Alex Hart","alex@signal.org"
"5860","signalapp/Signal-Android","fb82420376c13190be20dd301acb4eecec87d631",61,"2020-01-30 16:23:29-04:00","Implement new PIN UX.
",115483,1387,8906,"Alex Hart","alex@signal.org","Alex Hart","alex@signal.org"
"5861","signalapp/Signal-Android","1ea6838db6a4e7b7eb5bc8565bca2ced6c047c1b",10,"2020-02-01 10:14:02-05:00","Bring KBS fragment source into
RegistrationLockFragment and handle account
locked.
",115373,1386,8918,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5862","signalapp/Signal-Android","37f85d6deb6e9fa747511165e35e7a08e1d9f041",3,"2020-01-31 10:26:12-05:00","Delete unused megaphones from the database.
",115409,1386,8919,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5863","signalapp/Signal-Android","1dd2a4e9c5ccece3a21513342b37679dff3062ec",1,"2020-01-31 13:04:39-05:00","Allow backup passphrase verification.
",115413,1386,8915,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5864","signalapp/Signal-Android","73160d4d26d44d0fbc367119dd2a277a59832bb6",11,"2020-01-31 15:10:59-05:00","Update reactions UI.
",115456,1386,8914,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5865","signalapp/Signal-Android","279dcb1428e43bb03ea28ac849194cc57e9ceec8",17,"2020-02-01 13:13:53-04:00","Apply KBS Lock fixes and pluralization
",115473,1386,8914,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5866","signalapp/Signal-Android","835ef02872e77bae092bbecd7a7746cf2f91d478",6,"2020-02-02 00:15:59-05:00","Add an 'All' tab to reaction details.
",115489,1386,8914,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5867","signalapp/Signal-Android","e14861d79dc812c43148b36c572959e359fd37e7",12,"2020-02-03 12:32:14-04:00","CreatePinActivity naming update and copy fixes.
",115524,1386,8915,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5868","signalapp/Signal-Android","40383f373399cfe56d279544ca349cc2683ca6e1",1,"2020-02-03 11:38:27-05:00","Handle presenting KBS account locked cases.
",115538,1387,8915,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5869","signalapp/Signal-Android","36a422585859b32197442ae5c744106755723331",2,"2020-02-04 08:10:58-05:00","Always return passphrase without spaces.
",115571,1387,8913,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5870","signalapp/Signal-Android","28e2f22550dc8c763593c50a03c96b90d7b76b11",3,"2020-02-04 13:17:44-05:00","Fix layout issues with reaction badges.
",115598,1387,8913,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5871","signalapp/Signal-Android","7c729c2c4e8cac4d4ffaa02ff5e1f8334343bc52",6,"2020-02-05 08:51:05-04:00","Add AdaptiveActionsToolbar for better context bar
controls.
",115644,1388,8928,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"5872","signalapp/Signal-Android","49d418bb396f5d36667d9c53f957e5711a706a54",2,"2020-02-05 11:20:13-04:00","Fix RTL support for reaction sending.
",115657,1388,8928,"Alex Hart","alex@signal.org","Alan Evans","alan@signal.org"
"5873","signalapp/Signal-Android","6b1e48e4857933b035e36c6253467b0a41ae8ce2",1,"2020-02-05 17:11:12-05:00","Don't show the full-screen PIN megaphone.
",115666,1389,8939,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5874","signalapp/Signal-Android","21cf390d0eb75f3a26479e97d5442b2dcda9706d",3,"2020-02-06 12:06:41-04:00","Clip reactions mask if the view falls below the
input panel.
",115707,1389,8945,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5875","signalapp/Signal-Android","ddc01b539fcda64d82f60a7a486f42979a4ea6bb",45,"2020-02-07 20:37:35-05:00","Use megaphones for PIN reminders.
",115884,1393,8947,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5876","signalapp/Signal-Android","0b6a52277d7824dcd5d4df2edbeca6b7ef60ac92",5,"2020-02-11 11:34:10-05:00","Fixed PIN reminders showing too often, reminder UI
improvements.
",115908,1393,8947,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5877","signalapp/Signal-Android","f10d1eac61d418acee92356c35b1180974cffd90",4,"2020-02-10 10:06:12-05:00","Migrate profile key into database.
",115962,1393,8951,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5878","signalapp/Signal-Android","7ecb50a3fee53842879a2f4119181842238fdb4e",45,"2020-02-10 18:40:22-05:00","Versioned Profiles support (disabled).
",116516,1410,8977,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5879","signalapp/Signal-Android","66a668f55b9f81f2dd6bde09a206a46745900e86",14,"2020-02-10 15:29:15-05:00","Add some Swoon blessed packs.
",116588,1411,8981,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5880","signalapp/Signal-Android","23e55ac5f7950171c0601ef01f5839ab0b2b286b",2,"2020-02-12 17:30:20-04:00","Clear unidentified access mode when profile key
changes.
",116592,1411,8982,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5881","signalapp/Signal-Android","40fd7ca332d6c87b9f0c2eba76150b24072d6c66",65,"2020-02-13 14:22:21-04:00","Video trimming behind feature flag.
",117617,1421,9002,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5882","signalapp/Signal-Android","0970fd70408ada257c6514f82b24914a02c423f0",62,"2020-02-11 19:56:16-08:00","Update ringrtc to v1.0.1  Add support for RingRTC
Call Manager, a new component which provides the
control layer for all calling features.
",117863,1424,9025,"Curt Brune","curt@signal.org","Greyson Parrelli","greyson@signal.org"
"5883","signalapp/Signal-Android","70d5b798b26ec350586cf443e25ebaf4c0950460",3,"2020-02-13 16:02:12-05:00","Add some developer utils.
",117887,1424,9025,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5884","signalapp/Signal-Android","9bac88697b25f0ca4ae1104129bc5f1649579eb0",30,"2020-02-05 16:34:54-05:00","Support sharing multiple photos/videos into
Signal.
",118062,1428,9034,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5885","signalapp/Signal-Android","0a883dc2345f7e69d675a7d6f01fd28ab3921f57",9,"2020-02-19 15:09:03-05:00","Fix issue with mimeType resolution in share flow.
",118100,1428,9038,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5886","signalapp/Signal-Android","9e5f64c431cf3ddf36343b8bc48d694a24007d6b",80,"2020-02-19 18:08:34-04:00","Improve message requests, add megaphone.
",118979,1437,9109,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5887","signalapp/Signal-Android","8c23b17517b34b1da2522f5abd0ba33b1f998b4d",2,"2020-02-20 01:01:14-05:00","Fix some state issues post backup restore.
",119005,1438,9114,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5888","signalapp/Signal-Android","e62e630987142d6d04bb885669420f363a7e7b9c",2,"2020-02-21 10:30:26-05:00","Fix theming issue in
CameraContactSelectionFragment.
",119007,1438,9117,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5889","signalapp/Signal-Android","1faf196f82414e0f6d8ca133a5cefc34a3988bcb",57,"2020-02-21 13:52:27-05:00","Implement additional message request improvements.
",119701,1442,9165,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5890","signalapp/Signal-Android","0c254c96219ef2304b9a863f09ce7ea8bed9869e",76,"2019-12-13 00:18:46-05:00","Improve debuglog submission.
",119983,1459,9129,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5891","signalapp/Signal-Android","6184e5f8288f6d42bd730ad0d644c375f6b11412",21,"2020-02-10 13:42:43-05:00","Update the storage service.
",120718,1470,9149,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5892","signalapp/Signal-Android","6813f47bc184cb24ebd9a31b8a4d55d20e8f99b8",1,"2020-02-28 17:33:19-05:00","Remove feature flags that are no longer remote
capable.
",120846,1471,9152,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5893","signalapp/Signal-Android","172a43679d0026d4ef63171d14d7c9e3f6e0ad13",2,"2020-02-14 12:00:32-04:00","Add GV2 recipient capability.
",120885,1471,9152,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5894","signalapp/Signal-Android","240b2108f311cd6c65976ad4bac1d0991cc6c5f9",44,"2020-03-02 11:21:57-04:00","Use the image editor for avatars.
",120943,1472,9142,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"5895","signalapp/Signal-Android","d2e94dad7ecad63844000872581d467655cc1156",5,"2020-03-02 11:22:37-04:00","Remove argon2 test job.
",120786,1471,9149,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5896","signalapp/Signal-Android","245b0a7e50688d58427e5bf0af0604c42591efcb",6,"2020-03-01 10:54:11-05:00","Add a new buildType with Flipper.
",120998,1474,9153,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5897","signalapp/Signal-Android","28bbfd88b207329f11d19580077eb81567fea26e",19,"2020-03-03 18:34:55-04:00","Group member dialog update.
",121146,1478,9146,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5898","signalapp/Signal-Android","5038210d7830f1da6cc2d0e7d7c14a956d67420f",1,"2020-03-05 09:49:14-04:00","Add tap to pause to video trimming editor.
",121180,1478,9149,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5899","signalapp/Signal-Android","2152b4a2cdee0c2867534a21e1dfe62f862dc1a7",4,"2020-03-05 12:38:05-04:00","Add warning dialog for insecure calls.
",121196,1478,9149,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5900","signalapp/Signal-Android","51603be5eca8fb1a5ccd7f43fe7076bab0b2572b",7,"2020-03-05 15:13:22-04:00","Add video trimming time indication pill.
",121265,1478,9150,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5901","signalapp/Signal-Android","f9de131017a5e220efdd48ee9d02d3e09bc21ba1",21,"2020-03-05 19:05:06-04:00","Add new contact us flow.
",121551,1480,9156,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5902","signalapp/Signal-Android","033bf77cbbffe287560e647a54a4035c992fbdad",6,"2020-03-06 17:54:14-04:00","Allow future display of pending member count.
",121568,1481,9156,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5903","signalapp/Signal-Android","4d0dbbc6cde3fb4e4682fb4b3c3d7f8bf5bb5866",19,"2020-03-06 16:56:01-05:00","Add ability to listen to jobs based on a filter.
",121595,1481,9161,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5904","signalapp/Signal-Android","f95a37956c93b050c86f9c9047daad6341930cea",7,"2020-03-16 11:43:52-04:00","Improve emoji sticker suggestions.  There was a
bug around some emoji being marked as 'obsolete'
and therefore not being found.  I also made a
change so that you can use skin variations of
emoji and still find emoji tagged with the default
yellow version of it.  Fixes #9471
",121637,1482,9172,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5905","signalapp/Signal-Android","31f9b77c32e48b68c0b53e1713e0c1ed73e14223",1,"2020-03-16 12:41:48-04:00","Ignore empty names when populating contact list.
",121636,1482,9172,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5906","signalapp/Signal-Android","5f7075d39a69b8a01d0bbd9498f915394be443d5",52,"2020-02-28 13:03:06-05:00","Update and refactor storage service syncing.
Switched to proto3, updated protos, and generally
refactored things to make it easier to add new
storage record types.
",121697,1489,9169,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5907","signalapp/Signal-Android","707a2aca0aa3a43b1462980111f94686baef864f",4,"2020-03-20 15:38:15-03:00","Swap profile megaphone icon and use user avatar if
present.
",121173,1471,9164,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5908","signalapp/Signal-Android","7a038ab09da96fbd6e4abdfe034d72fe3c74f565",7,"2020-03-18 12:37:28-04:00","Add interim storage support for GroupV2Record.
",121379,1474,9165,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5909","signalapp/Signal-Android","951a61117a0c11fd1ee72ec6aee1544a696fd3b1",81,"2020-03-18 16:31:45-04:00","Add storage support for the AccountRecord.
",122035,1478,9170,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5910","signalapp/Signal-Android","d46894e5dbc6c63addd87829ee22291fa9376d2d",101,"2020-03-25 09:30:13-03:00","Upgrade CameraX to Beta01.
",122303,1485,9542,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5911","signalapp/Signal-Android","0e2df2adbb81dbe39057132d08bb8ccf3851e112",1,"2020-03-25 10:04:19-03:00","Image Editor: Keep text on top.  Sorts children by
a new z-order.
",122307,1485,9542,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5912","signalapp/Signal-Android","f449a459122d0113b00d2fff6bb09aa5480c8741",5,"2020-03-25 12:30:15-03:00","Utilize normal fallback for homescreen icons.
",122329,1486,9542,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5913","signalapp/Signal-Android","a3358e5b21230a8ff91614a2707062d5b78b2a1c",2,"2020-03-25 11:20:09-04:00","Rotate profile key after blocking if shared via
group.
",123011,1489,9577,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5914","signalapp/Signal-Android","a860315587d6c64465c3cfbbc751acb73861cfe0",49,"2020-03-26 11:00:17-03:00","GroupId class.
",123090,1491,9577,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5915","signalapp/Signal-Android","e6f9cb9929eac5afc274baace01c65c59ef7a854",9,"2020-03-25 18:43:02-04:00","Remove TextSecurePreferences.getAvatarId()
",123150,1492,9587,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5916","signalapp/Signal-Android","f875623cd0c8909aacab10c8ef2ae37b2b1ecc3e",7,"2020-03-26 10:26:16-04:00","Resize avatars to 1024x1024.
",123156,1492,9590,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5917","signalapp/Signal-Android","10bfc8a7533fe7a5bbf10f6e50dfa35c3e5bc99e",26,"2020-03-26 15:38:27-04:00","Migrate avatars and group avatars.
",123259,1492,9623,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5918","signalapp/Signal-Android","d8fa46c558c5e0a69a996c2c4d2277b15d8851fa",12,"2020-03-27 11:18:02-03:00","Copy action should display if message body is not
empty.  Fixes #9491
",123321,1493,9623,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"5919","signalapp/Signal-Android","66c7f8bcb299f10035722c34c1b82170a768ccf4",15,"2020-03-27 11:28:48-03:00","GroupId for GV2.
",123504,1494,9630,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5920","signalapp/Signal-Android","640c82d517f6fc72adb23e223296484a5873e440",37,"2020-03-27 15:12:10-03:00","GV2 group context proto.
",123638,1496,9598,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5921","signalapp/Signal-Android","9e6cca1cd0a9ba55f0bbf132b3433f7e11e82cfa",42,"2020-03-27 15:55:44-03:00","GV2 database.
",123912,1498,9614,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5922","signalapp/Signal-Android","dc791487c5d4a74a3e6ea77f4bfb0d2c9a6c51e0",6,"2020-03-27 12:08:22-04:00","Jump to the relevant message when tapping a
reaction notification.  Fixes #9503
",123926,1498,9614,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5923","signalapp/Signal-Android","6c428b27777921d8785c7b53eb5e5d28319b05f9",1,"2020-03-30 17:52:49-04:00","Fix issue with some notifications linking to the
wrong conversation.
",123999,1499,9626,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5924","signalapp/Signal-Android","d6000af8431b96d2815e98163a4bfcfa95f257d6",2,"2020-03-27 20:36:06-04:00","Re-use recently-acquired attachment pointers.
",124020,1499,9626,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5925","signalapp/Signal-Android","711715ca1ea113aae80ef892d078cc8e762f7c34",10,"2020-03-28 00:49:30-04:00","Add DNS fallback system.
",124139,1502,9635,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5926","signalapp/Signal-Android","6f3c4434f67a515efc6be597a0ff2834101eb8bd",2,"2020-03-31 08:44:55-03:00","Add animation when replying to a message.
",124170,1502,9635,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5927","signalapp/Signal-Android","48c33f3dcdaa1e73de31aaae3a7a976381bf9127",3,"2020-04-01 14:33:23-03:00","GroupsV2 service changes.
",124968,1517,9715,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5928","signalapp/Signal-Android","f1ea035197d92aff93d37c22561a3812719ae244",4,"2020-04-01 19:55:18-04:00","Re-enable and clean up Signal PINs.  - Require
PINs during registration agian. - Change min
length to 4. - Allow the full-screen megaphone to
be enabled remotely. - Clean up and remove some
code.
",124916,1518,9692,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5929","signalapp/Signal-Android","1290d0ead90667c064bab7138a40c1b906b780b4",14,"2020-04-03 16:24:25-03:00","Add pending member activity.
",125222,1523,9693,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5930","signalapp/Signal-Android","fb1637006de02f6d1e0f79c09156c07a3c102dc3",6,"2020-04-05 23:04:04-04:00","Include screen size details in debuglogs.
",125491,1525,9705,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5931","signalapp/Signal-Android","326678f2140c9d376336fea78817b257090ff713",45,"2020-04-06 15:51:32-03:00","Add support for GV2 group update messages.
",126096,1528,9726,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5932","signalapp/Signal-Android","8e13403cca3b47bee109bb5010d10789449dda86",37,"2020-04-02 17:09:25-04:00","Separate PINs from Registration Lock.  You can now
have a PIN without having registration lock.
Note: We still need to change the registration
flow to allow non-reglock users to enter their
PIN.
",126280,1530,9802,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5933","signalapp/Signal-Android","2b1ffac56406bfff50662fd6c684b6d283e22808",23,"2020-04-07 17:55:33-03:00","Groups V2 avatar download job.
",126378,1531,9802,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5934","signalapp/Signal-Android","68d29d9a0fdbb520295efd2cd7dab84a89f56c12",37,"2020-04-08 12:56:57-03:00","Allow pending member invite cancelation.
",126632,1535,9816,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5935","signalapp/Signal-Android","c6dd25a11928721ebe7cb8c05b04fa7ab482ba41",4,"2020-04-08 14:01:32-03:00","Ensure group membership for typing indicators.
",126717,1536,9816,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5936","signalapp/Signal-Android","f5e6fd6340c759cd1ae430895a6820ba87ccb5ed",1,"2020-04-09 17:56:42-03:00","Allow RetrieveProfileJob to be used for self.
",126727,1536,9817,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5937","signalapp/Signal-Android","78055e3ccbc3da7e46c280884b34aa9f9d13c276",11,"2020-04-09 18:02:13-03:00","GroupsV2 update sending and local context storage.
",126886,1537,9826,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5938","signalapp/Signal-Android","4e0279200f0515126ac34843f0a3e065858d6725",3,"2020-04-09 18:09:29-03:00","Refactor out MediaPreviewActivity Intent creation
method.
",126892,1537,9826,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5939","signalapp/Signal-Android","7bf090fdab3fdcaed8cf205a5f4ac119e050f33e",4,"2020-04-09 18:09:47-03:00","GroupsV2 state mapping.
",127104,1543,9844,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5940","signalapp/Signal-Android","a471ffa6d833f566a2c3b8c02c1656a9850701bb",3,"2020-04-09 17:45:48-04:00","Fix UD indicators for sent transcripts.
",127116,1543,9844,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5941","signalapp/Signal-Android","acbfff89d35247c71359fe536f4cb7306f390242",61,"2020-04-07 13:19:53-04:00","Update registration to allow PIN entry.
",127631,1550,9870,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5942","signalapp/Signal-Android","35f4f3f81e867090fc5c5a9d34bfc4b9b7772caa",17,"2020-04-10 13:13:27-04:00","Add support for passing data between jobs.
",127700,1550,9879,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5943","signalapp/Signal-Android","f12a9b9ac7d5423d98b8b17d86332ef6ba3105f6",3,"2020-04-13 19:02:50-04:00","Store the server timestamp for a message.
",127851,1551,9887,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5944","signalapp/Signal-Android","6ecd3b59fdeaf7c1d4401cfdfe2ced5305500e24",33,"2020-04-15 14:56:58-04:00","Add pre-alpha receive support for remote delete.
",128250,1555,9894,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5945","signalapp/Signal-Android","fc6b5c1d7cb76b5dc83cfa30f5c08390aafbe702",1,"2020-04-03 12:59:06-04:00","Add ultramarine as a conversation color option.
",128283,1555,9897,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5946","signalapp/Signal-Android","6d6e017c7133b6670e0881ed377c2570afa0cda5",11,"2020-04-16 09:30:46-03:00","Proactively share profile key after accepting a
message request.
",128400,1556,9897,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5947","signalapp/Signal-Android","b3d57edb24bc3a76d020df22501eced735776eeb",20,"2020-04-16 11:30:51-04:00","Update and centralize block strings.
",128416,1556,9900,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5948","signalapp/Signal-Android","2afb939ee6fc7d33526877aab16ee7eb4fd93278",11,"2020-04-16 17:06:18-03:00","Implement send support for resumable uploads
behind a flag.
",128898,1563,9936,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5949","signalapp/Signal-Android","83f6640bd3caa9d6335bcb1fe2e8a8528537df81",8,"2020-04-16 16:09:49-04:00","Add a more generic system for handling early
messages.
",128950,1564,9949,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5950","signalapp/Signal-Android","9a8094cb8a3a4526e4dbda0064800786756144a0",9,"2020-04-20 12:01:31-03:00","Guard against malformed group ids.
",129016,1565,9949,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5951","signalapp/Signal-Android","53b681ef676ad8f1715555709c475feef8ca95b1",3,"2020-04-20 13:41:03-03:00","Make reaction and remote delete jobs GV2 ready.
",129024,1565,9949,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5952","signalapp/Signal-Android","8f9e79ae37c4415995c9b16d504b96b318930e74",5,"2020-04-16 13:37:15-04:00","Updated PIN strings.
",129152,1567,9949,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5953","signalapp/Signal-Android","3f555ce5e2d6d8d1cd305a84eed03e89895be4d4",7,"2020-04-21 09:47:59-03:00","Extract method for creating safety number intents.
",129140,1567,9949,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5954","signalapp/Signal-Android","1b5a0ab9f3c45109ee1f04cc03cb68fd1cfa1b67",3,"2020-04-22 10:34:43-04:00","Sync the profile photo to linked devices when
appropriate.
",129174,1567,9949,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5955","signalapp/Signal-Android","0ba1f66136f6ec7aee89be6b7d883f1b34745064",9,"2020-04-27 13:05:22-04:00","Use the same Recipient.self() instance in storage
sync.
",129304,1567,9947,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5956","signalapp/Signal-Android","e99af75400de80011f06617059a2bfa4010d62a6",1,"2020-04-27 12:42:34-03:00","Fix crash when blocking group.
",129303,1567,9947,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"5957","signalapp/Signal-Android","c59fc3581a14dbe1519054d674e04765b2360c81",1,"2020-05-04 00:48:09-04:00","Make LiveRecipientCache throw exceptions instead
of errors.  Errors were causing crash loops if
they occur in a job. This will still allow the app
to crash, but prevent loops.
",129306,1567,9947,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5958","signalapp/Signal-Android","87eab2799619528e1a50d133fc02e032146740e7",2,"2020-05-04 17:50:38-03:00","Prevent the creation of 'weak' PINs.  Simple
checks to prevent the same number, or sequentially
increasing/decreasing PINs. e.g. 1111, 1234,
54321, etc.
",129431,1571,9947,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5959","signalapp/Signal-Android","a83ccc18bbbd8cceb474160d069ef79505f6b3d7",1,"2020-05-09 12:18:09-04:00","Fix processing of early messages.  1. Eliminated
any possibility of infinite recursion. 2. Handle
the fact that you can have multiple 'early
contents' for a    single message.
",129459,1571,9957,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5960","signalapp/Signal-Android","17c5b858b5933e71a4fcc8fce6963edeed11fa6b",28,"2020-04-22 16:25:28-03:00","Recipient bottom sheet.
",129726,1574,9961,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5961","signalapp/Signal-Android","33e3f78be62fed487eb6e7bc0549bc843cf013de",6,"2020-04-23 14:58:43-03:00","LiveDataUtil combineLatest.
",129885,1578,9979,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5962","signalapp/Signal-Android","d5419ec9fa83c63206c617a4842940b7806b1274",59,"2020-04-23 16:20:59-03:00","Implement new call screen UI/UX.
",130743,1590,9964,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5963","signalapp/Signal-Android","8e0fba79921a5edb4deada5d6b73e5d45051a5df",4,"2020-04-24 10:13:07-03:00","New group button behind new Group UI feature flag.
",130750,1590,9965,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5964","signalapp/Signal-Android","0b279d1df386eab7ba7d18e0ccc7a56b7aa321c0",17,"2020-04-24 16:12:33-03:00","Group contact chips behind feature flag.
",130984,1593,9970,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5965","signalapp/Signal-Android","358d6333c3fe7b655f387bc171c6ae2552bf5ced",4,"2020-04-27 13:08:06-03:00","Open new recipient bottom sheet when accessing
contact from group context.
",130990,1593,9970,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5966","signalapp/Signal-Android","723639d9287efa5df63d45d5bbb9c77ca9133ba5",66,"2020-04-27 16:27:31-03:00","New group management screen.
",131700,1603,9997,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5967","signalapp/Signal-Android","5eb663aa1b5ea6bcc3b71ef56b49d9c9b94bc557",26,"2020-04-28 13:27:09-03:00","New group avatar and name selection screen.
",131875,1605,9997,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5968","signalapp/Signal-Android","f149005026c52ce22e1b5f3e18fc3fa58fcbe1be",24,"2020-04-27 17:17:34-04:00","Add support for remote config v1.1
",131926,1605,9998,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5969","signalapp/Signal-Android","a2de8a2a055440c036b3e9ead03cb01404f1894d",2,"2020-04-30 12:52:04-04:00","Ensure you can't set null values in
DefaultValueLiveData.
",132023,1606,9998,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5970","signalapp/Signal-Android","c3832cf8b1fd3d7ba2f8faf1051a49282a98f552",19,"2020-04-30 15:38:58-03:00","New group notifications management ui.
",132356,1609,10004,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"5971","signalapp/Signal-Android","310ec8f2963c9522fa38ebe4daacc88da7ed6e2c",5,"2020-05-01 12:44:53-04:00","Remove CellServiceConstraint in favor of
NetworkOrCellServiceConstraint.  If a job was
enqueued with a CellServiceConstraint (which is
currently only SMS jobs), then it'll never run
until it gets service, even if you flip the
""enable SMS sending over wifi"" toggle.  This has
created bad situations in the past, where SMS jobs
just get stuck on devices that never report having
cell service (like VM's or wifi only devices).
This fixes it by *always* using
NetworkOrCellServiceConstraint, and then deciding
whether a constraint is met by checking the ""wifi
SMS"" setting at decision-time.
",132321,1608,9999,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"5972","signalapp/Signal-Android","456857bbbd05cdb0f81d2f279dbd1948f4dc2d51",3,"2020-05-01 16:19:24-03:00","Add custom lint rule project.
",132430,1611,9999,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5973","signalapp/Signal-Android","ff28d72db67b332ea113115893f26c88b9f533dc",4,"2020-05-01 16:25:26-03:00","New GV2 internal prefix and scrubber.
",132447,1611,10002,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"5974","signalapp/Signal-Android","48a693793f9a1403c0f71a01666faa5766ef2e26",49,"2020-05-01 19:13:23-03:00","GV2 Group Manager.
",133525,1621,10049,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5975","signalapp/Signal-Android","86f0456e8c2b7e5cd1e57b78627b2a1f74b60382",54,"2020-05-05 12:13:53-03:00","Group Manager V2 operations.
",133998,1628,10066,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5976","signalapp/Signal-Android","d94fc4bc13e8e68182bfdd434479fe32e51c9a55",39,"2020-05-05 14:53:57-03:00","Implement ability to react with any emoji behind a
flag.
",134389,1632,10068,"Alex Hart","alex@signal.org","Alex Hart","alex@signal.org"
"5977","signalapp/Signal-Android","30ac264cd3613045bb531352725c03ec2fdb203c",21,"2020-05-06 13:42:54-03:00","Rename Group update message classes.
",134361,1631,10068,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5978","signalapp/Signal-Android","3fef58057e83fa7ab7e39c661a784bf6fec7bc33",15,"2020-05-06 15:02:26-04:00","Add additional info to support emails and
debuglogs.
",134415,1633,10074,"Greyson Parrelli","greyson@signal.org","Alex Hart","alex@signal.org"
"5979","signalapp/Signal-Android","b191341c57b6d858e0569fcaa4c649258b3211bd",3,"2020-05-07 10:39:40-03:00","Add some polish to the groups V2 manager UI.
",134473,1634,10074,"Alex Hart","alex@signal.org","Alex Hart","alex@signal.org"
"5980","signalapp/Signal-Android","b800477365316bb929d68c4bce6a9c3076044d11",34,"2020-05-07 11:27:39-03:00","GV2 leave and eject operations.
",134643,1637,10071,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5981","signalapp/Signal-Android","9ac1897880470906e02ce6d305b4c58b4a3fea62",26,"2020-05-08 10:46:16-03:00","Job changes for GroupsV2 message receive and
profile key updates.
",134756,1638,10090,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5982","signalapp/Signal-Android","b75088874e696856f47b846bfe3dfae15998da20",26,"2020-05-06 21:03:00-04:00","Migrate conversation rendering to the paging
library.
",134661,1638,10137,"Greyson Parrelli","greyson@signal.org","Alex Hart","alex@signal.org"
"5983","signalapp/Signal-Android","ee9270845a31e1324e41977f1956fbabf5ee5550",10,"2020-05-08 13:04:04-03:00","Create GV2 group behind feature flag.
",134614,1637,10138,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5984","signalapp/Signal-Android","26e582d806710604add3cc8b136954e0fd81afbd",13,"2020-05-08 14:39:32-03:00","Integrate RingRTC v2.0.1
",134806,1637,10139,"Alex Hart","alex@signal.org","Alex Hart","alex@signal.org"
"5985","signalapp/Signal-Android","3db5da1c8dd2a868b7641b64480ff671440acdcf",25,"2020-05-11 10:40:59-03:00","Generalize media input for use with Audio.
",134939,1639,10139,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5986","signalapp/Signal-Android","a510bc74e633d13393499158a95a237309647c50",14,"2020-05-11 12:33:45-03:00","Recipient Id cache.
",135232,1642,10145,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5987","signalapp/Signal-Android","53d122ed5592cfc7d81597ab21cc1b5959b64f80",5,"2020-05-11 11:47:30-04:00","Fix jumping to last seen position.
",135231,1642,10145,"Greyson Parrelli","greyson@signal.org","Alex Hart","alex@signal.org"
"5988","signalapp/Signal-Android","eff564ad8873cff157f3f8e6b148e7089a934b8c",5,"2020-05-12 15:09:47-03:00","Adapt message requests to support invite flow.
",135324,1642,10151,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5989","signalapp/Signal-Android","ed33e048ad785004d4d0d9db846ae5c7770e5122",8,"2020-05-08 12:34:32-04:00","Add CachedLayoutInflater to improve conversation
render performance.
",135405,1643,10174,"Greyson Parrelli","greyson@signal.org","Alex Hart","alex@signal.org"
"5990","signalapp/Signal-Android","f099c3591c4e08875249ecc4fae5291f1e8dee5e",17,"2020-03-06 18:51:33-05:00","Run PushProcessMessageJobs in parallel.
",135522,1644,10175,"Greyson Parrelli","greyson@signal.org","Alex Hart","alex@signal.org"
"5991","signalapp/Signal-Android","b8df90531f513ffadb7747c2fff750b88484442e",19,"2020-05-13 13:36:57-03:00","GV2 message contexts.
",135641,1644,10175,"Alan Evans","alan@signal.org","Alex Hart","alex@signal.org"
"5992","signalapp/Signal-Android","ccff7b1148345821548c20003b5f3e28c1122f8f",54,"2020-05-13 13:41:36-03:00","Implement new group creation screens behind flag.
",136288,1651,10175,"Alex Hart","alex@signal.org","Alex Hart","alex@signal.org"
"5993","signalapp/Signal-Android","4c5822ac67e86883c085307321ef0d3dee856512",14,"2020-05-14 13:59:34-03:00","GV2 Update message description.
",136409,1651,10185,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5994","signalapp/Signal-Android","d726da822cf138f3300c6976a89e59cf693a73c9",4,"2020-05-14 15:23:15-03:00","Add network constraint to GV2 messages.
",136430,1651,10187,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5995","signalapp/Signal-Android","3b673c07a0147970e8d219eb09bc9ad9673463e7",3,"2020-05-14 15:57:40-03:00","Support gv2 avatar removal.
",136434,1651,10187,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"5996","signalapp/Signal-Android","fa5729bac689a097d815e5d3f876a2212f01d2a9",4,"2020-05-15 14:14:41-04:00","Better handle identity key changes in response to
storage service syncs.
",136464,1651,10187,"Greyson Parrelli","greyson@signal.org","Alex Hart","alex@signal.org"
"5997","signalapp/Signal-Android","5aba3517cec4cf5b6cbef93bfdb0200213a307db",40,"2020-05-15 18:40:19-03:00","Upgrade to RingRTC 2.0.3 and implement rounded
corners for local pip.
",136717,1653,10194,"Alex Hart","alex@signal.org","Alex Hart","alex@signal.org"
"5998","signalapp/Signal-Android","b80c339c5a85ac439b5c82812d6c802a5b4dd0ef",3,"2020-05-19 10:06:11-04:00","Fix an issue where the add profile prompt wasn't
dismissed.
",136786,1653,10203,"Greyson Parrelli","greyson@signal.org","Alex Hart","alex@signal.org"
"5999","signalapp/Signal-Android","124c3e25e97817334f291f004ea4fd289ac7bde9",17,"2020-05-21 16:57:21-03:00","Implement layout changes to new call screen UX.
",136982,1654,10203,"Alex Hart","alex@signal.org","Alex Hart","alex@signal.org"
"6000","signalapp/Signal-Android","cd1bad0718fb23ddcab06f445a8e9502170e4069",6,"2020-05-28 17:36:40-03:00","Fix bluetooth behavior.
",137080,1655,10202,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"6001","signalapp/Signal-Android","ec8d5defd4a89290a3304f460bba3d3fe4a27571",4,"2020-05-19 15:41:48-03:00","Protect against unknown GV2 UUIDs.
",137100,1655,10204,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6002","signalapp/Signal-Android","2f9320989afba941dba21975e8f142147221a725",6,"2020-05-19 16:02:24-03:00","Server signed group v2 changes sent and received
P2P.
",137128,1655,10204,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6003","signalapp/Signal-Android","11d17f749645986ebefe2e6c3ef5d144f4c338f6",30,"2020-05-19 18:48:26-03:00","GV2 storage service syncing.
",137266,1655,10204,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6004","signalapp/Signal-Android","297a7d0ef8eeeffffa4e7c55445571a776fa476f",1,"2020-05-21 17:04:57-03:00","Handle absent change during invite.
",137289,1655,10204,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6005","signalapp/Signal-Android","9d39db6428f34ca89ac5831f8c974d6230f97e5a",3,"2020-05-22 13:02:33-04:00","Add additional account restore logging, prevent
double avatar fetch.
",137306,1655,10204,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6006","signalapp/Signal-Android","526afd539bce64d6c9e0d8ffb87ea993a7feb6d5",2,"2020-05-26 08:27:12-03:00","Fix avatar tap in conversation multi-select mode.
",137305,1655,10204,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6007","signalapp/Signal-Android","fe25d941bbc9f1138653e1492c61a21b51b4b4b5",5,"2020-05-26 11:58:34-04:00","Prevent FCM bottlenecking.
",137337,1657,10232,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6008","signalapp/Signal-Android","befb4939d5b7ef665657d46d04ee344f3567c923",11,"2020-05-26 16:02:34-03:00","Restore groups from storage service.
",137456,1658,10238,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6009","signalapp/Signal-Android","558a8e4a144520d4a9649323aff6973bddf455a2",1,"2020-05-26 16:25:03-03:00","Add polish to groups v2 creation flow.
",137470,1658,10238,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"6010","signalapp/Signal-Android","4aded3a43656f2eb8483e9b3632a04209ea7c8a7",1,"2020-05-27 11:09:45-03:00","Close keyboard on contact list scroll.
",137491,1658,10238,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6011","signalapp/Signal-Android","903c3989b951e7f53a94080e2d18f384115eb3f1",6,"2020-05-27 12:19:20-03:00","Fix chip jank and other groups v2 ux issues.
",137484,1658,10238,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"6012","signalapp/Signal-Android","a299bafe89ae67084ca93cdd219f22a5db9bb55b",13,"2020-05-20 09:06:08-04:00","Create a new system for fetching the intial batch
of messages.
",137727,1661,10273,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6013","signalapp/Signal-Android","f39222939308a184abee58a0993a941bbfa3fa9f",26,"2020-05-27 15:04:45-04:00","Extract MessageNotifier interface.
",137746,1662,10273,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6014","signalapp/Signal-Android","ea8e13b1c8091a8ea4ee7b98473095c11644b869",3,"2020-05-27 11:00:04-04:00","Create a WebsocketDrainedConstraint.
",137780,1664,10281,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6015","signalapp/Signal-Android","1cd6b58ece9743687abfb5c3280aea108f4f2466",1,"2020-05-28 08:58:40-04:00","Don't enqueue duplicate PushDecryptMessageJobs.
",137785,1664,10281,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6016","signalapp/Signal-Android","1b01196ec61799b09ccc14b86be12ee7bcac5d3d",16,"2020-05-13 17:30:53-04:00","Refactor ThreadRecord.
",137922,1665,10278,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6017","signalapp/Signal-Android","3a06412cd8fe3b664ba12c905bf81a244e350820",6,"2020-05-28 08:32:35-04:00","Throttle notifications when doing the intial
message fetch.
",137984,1666,10282,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6018","signalapp/Signal-Android","0711a2218837243f7c8277625eaeae303e9221ca",1,"2020-05-28 13:24:04-03:00","Add overflow toast and fix edit menu option.
",138009,1667,10282,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"6019","signalapp/Signal-Android","69adcd1d69b4d3ffc56082e78f357e05828f8335",7,"2020-05-28 16:05:34-03:00","Tap avatar in chat preferences or group management
to see full screen.
",138129,1668,10285,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6020","signalapp/Signal-Android","daace9bd1a4770ba6aff03975ddc639a1fbf958d",8,"2020-05-28 16:50:27-03:00","Audio wave forms on voice notes.
",138417,1670,10290,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6021","signalapp/Signal-Android","9da309ca4800a636d2d02ff9907fd9af80a55369",3,"2020-05-29 12:20:07-03:00","Enforce a local GV2 capacity limit driven by a
feature flag.
",138495,1670,10293,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6022","signalapp/Signal-Android","a99c0d438e535561fce3e40a74610885e7f6d677",9,"2020-05-29 14:35:40-03:00","Rename GV2 ""version"" to ""revision"".
",138494,1670,10293,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6023","signalapp/Signal-Android","d70c33d20f6df844f1c7a8d42c93702511b3c7a1",11,"2020-05-28 09:27:00-04:00","Add support for mark as unread.
",138630,1671,10301,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6024","signalapp/Signal-Android","70c88b68e241c63e3b0038eaafbac7f64a4c528b",1,"2020-05-29 17:39:12-04:00","Store recent reactions separately from keyboard
emoji.
",138630,1671,10301,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6025","signalapp/Signal-Android","79dbf85c1e2c78212796c4dc118bd5cc53eae30b",13,"2020-05-29 18:16:38-04:00","Improve local encrypted PIN storage.
",138669,1672,10300,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6026","signalapp/Signal-Android","c39751f9db620f588782cfa1381fca10e0d3dda3",1,"2020-06-01 08:48:32-04:00","Add info about play services to the debug log.
",138679,1672,10300,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6027","signalapp/Signal-Android","c4ec0c98979e164de3bc0e86ed3b2f5d28ff8c8b",1,"2020-06-01 11:51:00-04:00","Handle devices disallowing start of
FcmFetchService.  Some devices are overzealous
with battery management and disallow starting
services even when they're in response to a high-
priority FCM message (which should be allowed). So
in these situations, we just fall back to what we
were doing before.
",138696,1672,10300,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6028","signalapp/Signal-Android","3fec23fd36cb65a2c140e5d46ff6dfd9dbfc5ee5",20,"2020-06-01 18:10:10-03:00","Show remaining time on wave form view and cache
wave form in database.
",138835,1674,10306,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6029","signalapp/Signal-Android","7f2439f1e94cc866ea72c98888638cc10d92ef2b",14,"2020-06-02 16:27:04-03:00","Fix contact selection behavior when searching and
clear search on selection.
",138990,1675,10306,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"6030","signalapp/Signal-Android","263af7c13993f883337aec0e93f2f50df52f8add",1,"2020-06-02 16:04:13-04:00","Add registration lock status to support email.
",138995,1675,10306,"Cody Henthorne","cody@signal.org","Cody Henthorne","cody@signal.org"
"6031","signalapp/Signal-Android","a3f9737e6390d98252661d6e8e8142f7f989c6cd",13,"2020-06-02 17:34:50-03:00","Make notifications and chat previews for media
messages more descriptive.
",139038,1676,10306,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"6032","signalapp/Signal-Android","514048171bf6a3530fbdf48e9d51b3cc135f2783",7,"2020-06-03 03:30:24-03:00","Add Image Editor support for blur mask layer.
",139060,1675,10306,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"6033","signalapp/Signal-Android","c8dd4e5254c0771b2a1925df408ed9d360c68f84",11,"2020-06-02 20:35:44-04:00","Added support for blurring faces.  Co-authored-by:
Alan Evans <alan@signal.org>
",139338,1679,10309,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6034","signalapp/Signal-Android","1033bd7bdab78230e9c75e169c1ebf0789ccae96",14,"2020-06-03 14:02:24-03:00","Blur faces rotation and crop and zoom support.
",139378,1679,10312,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6035","signalapp/Signal-Android","91b142e0d939743bb81368f21ee988100bea18e5",2,"2020-06-04 10:39:24-03:00","Fix waveform array out of bounds.
",139384,1679,10312,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6036","signalapp/Signal-Android","4a455ff95843ddd7c96e8b29a01f4cdf418b5af4",36,"2020-06-05 12:33:41-03:00","Implement new Add Members UI.
",139698,1685,10318,"Alex Hart","alex@signal.org","Alex Hart","alex@signal.org"
"6037","signalapp/Signal-Android","04a000a8a85947b0590d47b2f7b241d57f1c60c7",5,"2020-06-05 15:16:55-03:00","Always display labels in contact search.
",139711,1685,10318,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"6038","signalapp/Signal-Android","718471917f0b5d4acac9aa05c600231cd38dedf0",6,"2020-06-06 11:29:05-03:00","Separate text only message layouts.
",139602,1687,10308,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6039","signalapp/Signal-Android","18c7bc2b5b9055a486df000d55b428e72abfa822",2,"2020-06-06 20:24:42-03:00","Prevent edit of a group post leave.
",139631,1687,10308,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6040","signalapp/Signal-Android","5b4d74b7fe878e721fa3a4e5a94e1b69827b6eea",1,"2020-06-06 19:26:21-04:00","Move group resolution for conversations to
background LiveData.
",139691,1688,10309,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6041","signalapp/Signal-Android","1234899ea1b9581b1aa0ce3a661b0b364e149ace",16,"2020-06-06 18:49:19-04:00","Add support for non-blocking media sends.
",139744,1688,10317,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6042","signalapp/Signal-Android","554bad6b8db1d2ddb077fede994c72d36f9c3ccb",8,"2020-06-06 16:07:04-04:00","Improve DB access in group sends.
",139769,1688,10317,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6043","signalapp/Signal-Android","8dbcb255ad329df29e6ec1749a41568eed8b031f",1,"2020-06-07 13:40:05-03:00","Hide Block and Leave options when not available in
group settings, add unblock.
",139791,1688,10317,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6044","signalapp/Signal-Android","d8f3e032c79a8bf3cfb161f728984cdd61d93a33",15,"2020-06-07 13:41:39-03:00","Fix group name clearing after avatar change.
",139810,1688,10317,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6045","signalapp/Signal-Android","9c0365f92c5439930f4951836237adb98b93df2d",1,"2020-06-07 14:03:52-03:00","Open group settings from group avatar click.
",139823,1688,10317,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6046","signalapp/Signal-Android","2d8b2e7fb06d55fe983226dbb1374c86e59324b2",3,"2020-06-07 14:44:30-03:00","Transitions for group settings.
",139834,1688,10317,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6047","signalapp/Signal-Android","3a479d7eef4c61d58edc8f7be940ebdf1b225ba8",3,"2020-06-07 14:46:03-04:00","Reduce database notifications for disappearing
conversations.
",139881,1688,10317,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6048","signalapp/Signal-Android","7d06e2395f2a824a68b1b0c6dfa99be6a0c36ad2",3,"2020-06-07 16:25:21-03:00","Rework how ConversationFragment RecyclerView
responds to data updates.
",139924,1688,10317,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"6049","signalapp/Signal-Android","4f4be44caadbf8b3773349e00de33d15302d2cc1",7,"2020-06-07 19:52:39-03:00","Load identities in transaction.
",139940,1688,10317,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6050","signalapp/Signal-Android","a3aed967576043d93677ecb5bcd223dc758cfbe2",1,"2020-06-07 23:04:41-03:00","Sort contacts without names after contacts with
names.
",139969,1688,10320,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6051","signalapp/Signal-Android","59916f1e95e3510aedc2562fddfb1959cf54a556",1,"2020-06-08 13:20:07-04:00","Add 'Add to contacts' button to bottom sheet.
",140030,1689,10324,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6052","signalapp/Signal-Android","7e934eff5d50afd6e8bbde372fb8028bf59132aa",6,"2020-06-08 13:49:45-03:00","Make quotes not hold strong references to
attachments.
",140074,1689,10329,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"6053","signalapp/Signal-Android","e1bb773d8562b5d2b505861ed687fa0e45ce7a66",30,"2020-06-09 12:09:59-03:00","Add 'Add to a group' button to bottom sheet.
",140336,1692,10332,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6054","signalapp/Signal-Android","2822042eeb47695b530b32ff647d8cb6473722aa",1,"2020-06-09 12:13:13-04:00","Show recent groups in Add to Groups screen.
",140368,1692,10332,"Cody Henthorne","cody@signal.org","GitHub","noreply@github.com"
"6055","signalapp/Signal-Android","2751fd7efc0edd5aacc04372a748f9b6e3787b7b",31,"2020-06-08 19:04:55-04:00","Retrieve profiles in parallel.
",140618,1694,10352,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6056","signalapp/Signal-Android","cea6a83d8af5403b0b9ecb0a494856241664656c",1,"2020-06-09 13:32:48-04:00","Show member count in contact selection list.
",140629,1694,10352,"Cody Henthorne","cody@signal.org","GitHub","noreply@github.com"
"6057","signalapp/Signal-Android","d60d67ee7e46e3c4f8b74637f031de1964e6cb6b",6,"2020-06-10 07:49:22-07:00","Set contact colors more aggressively.
",140668,1694,10352,"Greyson Parrelli","37311915+greyson-signal@users.noreply.github.com","GitHub","noreply@github.com"
"6058","signalapp/Signal-Android","e13f3254ad18a16cc3f21baf332abc3d995d6ab6",3,"2020-06-10 17:06:40-03:00","Fix message jump-to-position.
",140657,1694,10352,"Alex Hart","alex@signal.org","GitHub","noreply@github.com"
"6059","signalapp/Signal-Android","400c592acf00344f1fb2d7387407ba67eeb29dec",3,"2020-06-10 17:16:47-03:00","Display 'Unknown group' for groups with no name.
",140659,1694,10352,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"6060","signalapp/Signal-Android","3fad007ae0aa775dafec9848dbff8cce42e1ea04",2,"2020-06-12 07:06:20-07:00","Cancel typing jobs when you send a group message.
",140719,1695,10366,"Greyson Parrelli","37311915+greyson-signal@users.noreply.github.com","GitHub","noreply@github.com"
"6061","signalapp/Signal-Android","1ce8ac2de6cb20b15d2698becbdf08b503040402",10,"2020-06-10 15:24:27-07:00","Light refactor of SignalStore.
",140768,1696,10366,"Greyson Parrelli","37311915+greyson-signal@users.noreply.github.com","Alan Evans","alan@signal.org"
"6062","signalapp/Signal-Android","5b2a399392dbe47c00379c254396cfcbad100703",1,"2020-06-11 16:55:34-04:00","Return to previous scroll position when returning
to a conversation.
",140819,1696,10366,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6063","signalapp/Signal-Android","941ab5a98f1ae54498093d039d79fe720f15eabd",1,"2020-06-12 09:38:26-04:00","Prevent avatar from showing a start of outgoing
video call.
",140829,1696,10366,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6064","signalapp/Signal-Android","f5626f678d68b3227700cdfee99c69dbeec71946",7,"2020-06-12 12:32:17-03:00","Make CustomNotificationsDialogFragment work with
recipients.
",140831,1696,10366,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6065","signalapp/Signal-Android","ce940235b020ec019fdfe3a55e2a983090d1c607",31,"2020-06-12 10:22:46-07:00","Optimistically fetch profiles.
",140919,1697,10375,"Greyson Parrelli","37311915+greyson-signal@users.noreply.github.com","Greyson Parrelli","greyson@signal.org"
"6066","signalapp/Signal-Android","49f75d7036e5049d23ee7ec10ba26ab1a10a6be4",43,"2020-06-12 15:11:36-03:00","Migrate ConversationList to paging library and
apply abstractions to conversation.
",141247,1703,10425,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"6067","signalapp/Signal-Android","cf98a22269a53402d343f84389ad568835a6da9c",15,"2020-06-12 12:13:48-07:00","Add placeholder support for
ConversationListAdapter.
",141264,1703,10425,"Greyson Parrelli","37311915+greyson-signal@users.noreply.github.com","Greyson Parrelli","greyson@signal.org"
"6068","signalapp/Signal-Android","f2fe81d9b55fc39e10d3c5d3aace88f0b593cd60",2,"2020-06-12 17:23:40-03:00","Fix conversation jumping when loading at last
scroll position.
",141284,1703,10425,"Alex Hart","alex@signal.org","Greyson Parrelli","greyson@signal.org"
"6069","signalapp/Signal-Android","dfb5562142634fe4c314743fcb2064d3a1a4b95a",2,"2020-06-16 14:07:25-03:00","Use group manager for MMS groups.
",141178,1703,10414,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6070","signalapp/Signal-Android","d9641128a83fd160fda54c5c6d27cd8bf7d794f9",38,"2020-06-16 16:00:24-04:00","Refresh Message Details screen.
",141955,1714,10414,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6071","signalapp/Signal-Android","b53827f32b5a50fa90bdd6c3cfb56dafff986050",70,"2020-06-16 17:42:54-03:00","Manage recipient activity.
",142600,1718,10416,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6072","signalapp/Signal-Android","2915e4698c9e18ec980369b0450c8f838a6d8264",2,"2020-06-16 17:38:52-04:00","Show registration rate limit error messaging.
",142610,1718,10416,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6073","signalapp/Signal-Android","027453bbd2a02b3ecd89fd5cfedbd6360a1a8e44",2,"2020-06-16 18:56:47-03:00","Prevent IllegalStateException on recipient bottom
sheet.
",142616,1718,10416,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6074","signalapp/Signal-Android","1a09e70a042e6a62ec7e24ed1866ddf304636369",4,"2020-06-16 18:12:14-04:00","Remove old Message Details.
",142094,1715,10376,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6075","signalapp/Signal-Android","96f02d8c95cfa71a5d5c0c3fd5d0bc24a5c625a5",1,"2020-06-17 10:49:49-03:00","Hide some views for Note to Self conversation.
",142103,1715,10376,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"6076","signalapp/Signal-Android","fe8979450579051c4ee975e7cacdaddd21cf12f2",4,"2020-06-17 15:34:23-03:00","Hide recipient subtitle if no name/username set.
",140988,1712,10353,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"6077","signalapp/Signal-Android","a6384d1b73629cd44a19fafa7f4219d81633bf50",1,"2020-06-17 16:41:17-03:00","Add insecure call ability to recipient settings.
",140994,1712,10353,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"6078","signalapp/Signal-Android","891a1af9953ced7aeaf4c05191062af4e4f264e2",4,"2020-06-17 17:37:23-03:00","Show Note to Self for local number recipient
preferences.
",141022,1712,10359,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"6079","signalapp/Signal-Android","80f9e1f4f1cb19da880d0978f42a36a307601b61",2,"2020-06-18 12:23:20-03:00","Fix not able to get to archived conversations when
all archived.
",141201,1713,10365,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6080","signalapp/Signal-Android","95d63b78f45d752ba9b12b9d269d20884823603f",2,"2020-06-18 13:23:46-03:00","Add call and message buttons to recipient bottom
sheet.  And insecure call button for non-
registered contacts.
",141211,1713,10365,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6081","signalapp/Signal-Android","555104aff063b5545565b7720badc053e7be11ef",3,"2020-06-18 14:00:06-03:00","Make message button navigate back if launched from
the conversation.
",141224,1713,10368,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6082","signalapp/Signal-Android","71f54701d2673de8298a1c44c5263503a8a89a54",2,"2020-06-19 07:17:23-07:00","Add additional safeguards around disappearing
messages.
",141248,1713,10368,"Greyson Parrelli","greyson@signal.org","GitHub","noreply@github.com"
"6083","signalapp/Signal-Android","841ee184354164aba673438ce337aa603e9560cf",12,"2020-06-19 13:08:54-03:00","Add default option to message vibrate for pre
API26.
",141274,1713,10368,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6084","signalapp/Signal-Android","be2ec36e1f259675ecb0c63c814704083a8df29c",3,"2020-06-24 16:51:02-03:00","Fix clipping issues with archive icon.  Fixes
#8344
",141218,1713,10368,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6085","signalapp/Signal-Android","bf919207ed25cf6af3e5161f38010a3a33d516a1",13,"2020-06-22 17:01:40-07:00","Various logging improvements.  * Improve lifecycle
logging.  * Remove 'action bar' from base activity
names.  * Remove some unnecessary glide logs.
",141167,1713,10373,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6086","signalapp/Signal-Android","f8a0988e5f5685e4c7d0c4b89ec06da9adc9b88e",5,"2020-06-22 18:34:31-07:00","Various JobManager performance improvements.
",141252,1714,10384,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6087","signalapp/Signal-Android","9e98b6616ed7e0cb77069de1b2eb3e3a10df3198",2,"2020-06-24 13:58:00-04:00","Log job run time.
",141253,1714,10384,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6088","signalapp/Signal-Android","66f26683269c9cbae9ad1c2eb5dc81985af2ef86",1,"2020-06-18 09:40:23-04:00","Do not cache locale in each conversation object.
Fixes #9751
",141247,1714,10384,"Fumiaki Yoshimatsu","fumiakiy@gmail.com","Greyson Parrelli","greyson@signal.org"
"6089","signalapp/Signal-Android","2001fa86cf397387a30ce09279e7fde47115aabf",3,"2020-06-24 17:23:16-03:00","Log capabilities.
",141366,1718,10390,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6090","signalapp/Signal-Android","87a59b6a9bf4ff90a5776d8b48446c854d5dd9c7",19,"2020-06-25 05:32:36-07:00","Add support for memory-only jobs.
",141489,1718,10396,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6091","signalapp/Signal-Android","75c8c59d788c1bb33e789f0dcd398b3b0d25deee",3,"2020-06-25 07:18:26-07:00","Reduce notification update interval.
",141530,1719,10420,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6092","signalapp/Signal-Android","63d6ab6fa768a72bb12560f4e3d6e236c1d8ce10",1,"2020-06-25 08:23:35-07:00","Throttle conversation list update frequency.  This
helps fast phones process messages faster by
reducing contention on  the database while
processing a large batch of messages.
",141565,1720,10436,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6093","signalapp/Signal-Android","152578e57674a4319ce54fe68891c1c920058d58",21,"2020-06-25 08:48:23-07:00","Add reserved job runners for inbound and outbound
messages.
",141613,1722,10439,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6094","signalapp/Signal-Android","bbe003a454883aec1ba16d4956006d7d22625686",43,"2020-06-26 11:10:54-04:00","Improve messaging and UX around safety number
changes.
",141960,1729,10442,"Cody Henthorne","cody@signal.org","GitHub","noreply@github.com"
"6095","signalapp/Signal-Android","31b995fa9873a49fdcf4c28ef5ccdd9a599f6d18",1,"2020-06-26 11:24:32-04:00","Retrieve profiles on mismatch to notify user of
updates quicker.
",141934,1729,10447,"Cody Henthorne","cody@signal.org","Alan Evans","alan@signal.org"
"6096","signalapp/Signal-Android","904cb01067deaa76293dbec0dab8e6509876e7a2",5,"2020-06-30 08:17:29-07:00","Use the BlobProvider in the contact and group sync
jobs.
",142020,1729,10447,"Greyson Parrelli","greyson@signal.org","GitHub","noreply@github.com"
"6097","signalapp/Signal-Android","eafccc5721a7fb74001369111b5e4a8063ee4690",23,"2020-06-30 14:46:10-03:00","Add GV2 copy for the unknown editor.
",142274,1729,10447,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6098","signalapp/Signal-Android","cb81a9f7836c51653b05cb2df6550d5e12b73030",1,"2020-07-01 15:30:39-04:00","Disallow 'visually empty' profile names.
",142436,1731,10461,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6099","signalapp/Signal-Android","70e33518a9d5a9dec822420c2667268bb4fe527a",3,"2020-07-02 08:17:44-07:00","Do registration checks for new numbers during
group creation.
",142511,1731,10467,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6100","signalapp/Signal-Android","c877aba09f7a374575dce54a1354a3293d1e3af7",26,"2020-07-02 08:19:52-07:00","Use resolved recipients in the conversation list.
",142583,1732,10473,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6101","signalapp/Signal-Android","2791790bf5854bdff11615e359e8cb49a7d74f10",36,"2020-07-02 10:38:52-07:00","Implement new CDS changes.
",142855,1735,10483,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6102","signalapp/Signal-Android","1e250ee95c0fe42c99e57fe42aaab6f623c51b4d",4,"2020-07-06 16:27:03-04:00","Add Calling Requests.
",142865,1735,10483,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6103","signalapp/Signal-Android","545ba80697b8877730eeb08a847eb6253d7db4d7",75,"2020-07-06 14:13:08-07:00","Add support for borderless images.  Added support
for 'borderless' images. Basically images that
we'd like to render   as if they were stickers,
even though they're not stickers. On iOS, this
will be   stuff like memoji and bitmoji. On
Android, in my initial pass, I've just added
support for Giphy stickers. However, we can also
detect bitmoji and keyboard   stickers in the
future. This is kind of a 'best effort' thing, so
as long as we   support receiving, we can just add
sending support for more things as we go.
",143032,1735,10485,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6104","signalapp/Signal-Android","e6a0e5b85829a5555c2f2b4e29c462ec4780f2b1",2,"2020-07-06 18:52:29-03:00","Add internal preferences under Advanced behind
feature flag.  Initially for GV2 testing.
",143103,1737,10485,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6105","signalapp/Signal-Android","eb02dacfdcb9c79e108340d056c54d9a231513c1",2,"2020-07-06 14:59:57-07:00","Convert HEIC/HEIF to JPEG.
",143108,1737,10484,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6106","signalapp/Signal-Android","96e888a4f5cea4b8f1097f415b767f215e78258b",9,"2020-07-07 12:00:29-03:00","Remove versioned profiles feature flag.
",143094,1737,10477,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6107","signalapp/Signal-Android","1a895db9bdf39170820ab4043cce8aedb80f7118",4,"2020-07-08 10:21:16-04:00","Finalize support for calling with system PIP.
",143109,1737,10476,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6108","signalapp/Signal-Android","c9d2cef58dbabf0ca8ce3205f44cb61985c6542d",7,"2020-07-08 08:54:47-07:00","Add support for sending borderless keyboard
stickers.
",143178,1737,10476,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6109","signalapp/Signal-Android","9ac9ace6b8562fdd566a72eb91107a9eecdf1771",24,"2020-07-08 18:10:58-03:00","Groups V2 state comparison and gap handling.
",143733,1740,10502,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6110","signalapp/Signal-Android","3c069fb58814cfb18e9572cd9bc8d859d9d8f3f4",4,"2020-07-09 12:19:58-04:00","Enable Media Preview to respond to media changes.
",143810,1740,10501,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6111","signalapp/Signal-Android","04a8996348888e43bd540299899dc5bdf1d121b3",12,"2020-07-09 16:04:30-07:00","Add the ability to opt out of PINs.
",144061,1742,10512,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6112","signalapp/Signal-Android","f3dbe4416fb1dec0780311a4ea325ac2d22e6548",4,"2020-07-10 11:18:12-03:00","Add lint to detect non-numeric version code
checks.
",144229,1744,10512,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6113","signalapp/Signal-Android","137cd454971fbc85ac7039cb70d9b014e16cc195",2,"2020-07-10 12:06:00-03:00","Hide ""Add to a group"" if you don't have any
groups.
",144256,1744,10512,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6114","signalapp/Signal-Android","4325f714b9ecbb333b55dc1021246174c83b2c98",16,"2020-07-10 12:32:40-03:00","Silent group update send job for profile key
rotation.
",144425,1745,10520,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6115","signalapp/Signal-Android","eb6ecc59abbe8044f232d15bc048a85d80bc2852",2,"2020-07-10 14:41:20-03:00","Consolidate duplicated group send job logic.
",144387,1746,10520,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6116","signalapp/Signal-Android","e27fc512b4cf57bb9e889150f4d25ce6acb252fc",6,"2020-07-13 08:46:03-04:00","Add a migration for users of the previous PIN opt-
out flow.
",144428,1747,10517,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6117","signalapp/Signal-Android","4b961d2d8f3b3b13b8d908dec8643813741352d0",2,"2020-07-13 09:29:17-04:00","Simplify PIN opt-out code.
",144399,1747,10514,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6118","signalapp/Signal-Android","6d035c6888a22556a6c44164fd3e19104c90ca61",1,"2020-07-13 18:14:02-03:00","Allow sending of group v2 updates to inactive
groups.
",144461,1747,10520,"Alan Evans","alan@signal.org","Alan Evans","alan@signal.org"
"6119","signalapp/Signal-Android","64420ead7c1a76666b57f582fb8c21fd93a3a4d5",7,"2020-07-15 16:15:15-04:00","Show Profile Name Change update messages.
",144545,1747,10521,"Cody Henthorne","cody@signal.org","GitHub","noreply@github.com"
"6120","signalapp/Signal-Android","644af87782465e2ad8f8b3d43e1a62ae662ee592",19,"2020-07-15 15:40:13-03:00","Groups V2 invite decline.
",144670,1747,10529,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6121","signalapp/Signal-Android","bd078fc88330f24182fd353592bf68e9f6e6c5f5",65,"2020-07-15 18:03:18-04:00","Handle UUID-only recipients and merging.
",145165,1749,10587,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6122","signalapp/Signal-Android","ae2b6e4d7ae7bbf7ba63422b3abd8dbedbf87fa6",53,"2020-07-16 15:52:24-04:00","Prevent last admin from leaving without selecting
new admin.
",145609,1754,10593,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6123","signalapp/Signal-Android","a59e214317796f3714d8db7dd24615ac1585eea3",53,"2020-07-16 17:50:46-03:00","Show Group V2 invited member dialog explaining
invites on new group and add to group.
",145717,1755,10597,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6124","signalapp/Signal-Android","e89655f793331714cbd22ba299d2930a1802d1d7",1,"2020-07-17 10:23:51-04:00","Resolve newly-entered numbers before starting a
conversation.
",145742,1755,10597,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6125","signalapp/Signal-Android","5ea132e7127c730f249fdb7a77d8f6fdbaf10a04",1,"2020-07-19 10:22:05-04:00","Delay directory refresh until registration is
complete.
",145743,1755,10597,"Greyson Parrelli","greyson@signal.org","GitHub","noreply@github.com"
"6126","signalapp/Signal-Android","575413cac99bf0f11c04acfe8652eda2cde193f5",11,"2020-07-20 11:09:42-03:00","Wait for message queue to drain before updating v2
groups.
",145801,1756,10606,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6127","signalapp/Signal-Android","9a566e5559a5a8bc6c7c450f222d6115a14ef19c",14,"2020-07-19 12:31:20-04:00","Group together skin tone variations of the same
reaction.
",145823,1756,10606,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6128","signalapp/Signal-Android","a33771b15db360871dadac1aaf46f4d7633e6aa9",21,"2020-07-20 15:20:56-03:00","Added progress feedback to leave and block group
actions and additional group v2 error handling.
",145806,1758,10614,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6129","signalapp/Signal-Android","96ce42ae91517cfffafbde301db6cb111b3d368f",10,"2020-07-21 06:05:16-03:00","Legacy group learn more badge and info bottom
sheet.
",145870,1760,10617,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6130","signalapp/Signal-Android","662f0b8fb60e23999b580618584e0c0b9c6bce94",6,"2020-07-21 10:38:42-04:00","Improve detection of websocket drained status.
Will now work when you lose and regain network.
Also removes the  unnecessary
InitialMessageRetriever.
",145775,1759,10603,"Greyson Parrelli","greyson@signal.org","GitHub","noreply@github.com"
"6131","signalapp/Signal-Android","16fdb9bf4c69925127e71c55d1bd6b4464f18a5f",5,"2020-07-21 12:53:25-03:00","Make identity record list immutable.
",145779,1759,10603,"Alan Evans","alan@signal.org","GitHub","noreply@github.com"
"6132","signalapp/Signal-Android","4e55d2d94178300440cae14b326259a01e3f6e95",1,"2020-07-21 15:54:34-03:00","Tint pending group invites menu icon.
",145797,1759,10602,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6133","signalapp/Signal-Android","0e4a19c3682bd8582dadba0f916ca752a8b855b2",3,"2020-07-21 15:10:23-04:00","Improve exception stack traces in
OptimizedMessageNotifier.
",145793,1759,10609,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6134","signalapp/Signal-Android","5dc51c34ea53b01e871957e347feb8e36f646a7a",8,"2020-07-22 10:48:16-03:00","Fix recipient resolution during add to Groups V2.
",145800,1759,10610,"Alan Evans","alan@signal.org","Greyson Parrelli","greyson@signal.org"
"6135","signalapp/Signal-Android","5f9c0c3204f541c0388837f879b5071129e74ee1",15,"2020-07-22 16:51:31-04:00","Fix bug with skipping resend message on safety
number change.
",145818,1759,10611,"Cody Henthorne","cody@signal.org","Greyson Parrelli","greyson@signal.org"
"6136","signalapp/Signal-Android","5bf15b05872d27225c7fcdc5f3aea6e49fcaf7fd",2,"2020-07-22 22:36:10-04:00","Fix casing issues with non-ASCII characters in
contact search.  SQLite's case-related stuff is
ASCII-only. That means that even though LIKE is
supposed to be case-insensitive, it fails when
used on non-ASCII characters.    There appears to
be no relief in SQLite itself, so I swapped our
contact search to use GLOB instead of LIKE and
wrote a little thing to convert query strings into
a case-insensitive unicode-compatible patterns.
Didn't see any noticeable performance difference.
",145830,1759,10614,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6137","signalapp/Signal-Android","dadb2f9d3753e23f5301914a911bb67abd5b6f8e",4,"2020-07-22 22:37:11-04:00","Allow auto-downloads from groups you've accepted.
",145840,1759,10614,"Greyson Parrelli","greyson@signal.org","Greyson Parrelli","greyson@signal.org"
"6138","eugenp/tutorials","8118f458bc90c7f87afea15bb27395d981d575a5",2,"2014-08-11 23:17:24+03:00","forms work and cleanup
",12201,433,950,"eugenp","hanriseldon@gmail.com","eugenp","hanriseldon@gmail.com"
"6139","eugenp/tutorials","7c9070a3a226a013d2f42cc035837b26272a7ec9",1,"2015-10-02 11:35:36+05:18","javax validation project updates
",22184,700,1145,"mnkartik","mn.kartik@gmail.com","mnkartik","mn.kartik@gmail.com"
"6140","eugenp/tutorials","0c8f855ff76c2445e80af0fa1eb19c1214ed5637",2,"2015-12-09 17:30:35+05:18","Added spring-thymeleaf initial version
",23879,754,1193,"gmaipady","gmaipady@gmail.com","gmaipady","gmaipady@gmail.com"
"6141","eugenp/tutorials","06ded372a4a2cd38e8f391d2f3362ef3b221515b",1,"2015-12-15 15:40:52+05:18","Minor changes
",23894,754,1193,"gmaipady","gmaipady@gmail.com","gmaipady","gmaipady@gmail.com"
"6142","eugenp/tutorials","e633844f1da6839f0092f81aae16d1c1fe7c6e35",3,"2016-03-11 20:41:23-06:00","Spring Data Couchbase tutorial
",29028,931,1330,"Kevin Gilmore","kpg102@gmail.com","Kevin Gilmore","kpg102@gmail.com"
"6143","eugenp/tutorials","25f454688117455174dc27a64c092d55375401e5",3,"2016-04-08 06:37:06-05:00","Spring Data Couchbase Article 2
",27505,890,1299,"Kevin Gilmore","kpg102@gmail.com","Kevin Gilmore","kpg102@gmail.com"
"6144","eugenp/tutorials","2e9efa16bc8dea7a6e798a3dbcbd077c2f0afa9e",2,"2016-06-03 07:26:42-05:00","Spring Data Couchbase tutorial: multiple buckets
and spatial queries
",30726,989,1390,"Kevin Gilmore","kpg102@gmail.com","Kevin Gilmore","kpg102@gmail.com"
"6145","eugenp/tutorials","7ecd7ce02d412a495bc2bd79fece62aa315f7d2f",4,"2016-06-12 21:28:49+02:00","Code and tests for the lombok introduction.
",34720,1134,1553,"Miguel García Lpez","miguel.garcia.lopez@gmail.com","Miguel García Lpez","miguel.garcia.lopez@gmail.com"
"6146","eugenp/tutorials","24c25206a4d8b748e727f0cc9db5d64d456017e8",1,"2016-07-28 18:41:17+03:00","Spring MVC Email application added.
",43143,1411,1770,"oreva","reva.olga@gmail.com","oreva","reva.olga@gmail.com"
"6147","eugenp/tutorials","6bc064d571f86ec99db94a5a321f41e298d59203",3,"2016-07-31 12:06:17+02:00","BAEL-150 Introduction to DeltaSpike
",43862,1442,1966,"Lukasz Rzeszotarski","lukaswin83@live.com","Lukasz Rzeszotarski","lukaswin83@live.com"
"6148","eugenp/tutorials","46f854c03be775b12477f238eec62b66a6e7b9e7",1,"2017-02-19 05:01:49+02:00","apache bval project (#1178)  * apache bval project
* update tests    * remove extra lines
",74948,2621,4815,"lor6","loredana.crusoveanu@yahoo.com","KevinGilmore","kpg102@gmail.com"
"6149","eugenp/tutorials","04d8fed1c5bfe9f1f42893cf8dddfc3e601fbd3d",1,"2017-03-19 17:25:11+02:00","validation with mvc and angular (#1378)  *
validation with mvc and angular    * fix
dependency versions
",84794,2935,5410,"lor6","loredana.crusoveanu@yahoo.com","Grzegorz Piwowarek","gpiwowarek@gmail.com"
"6150","eugenp/tutorials","78f87104d66ae0f9d01ba052e58c02cdbec6973f",13,"2017-03-21 08:23:41-03:00","BAEL-137 Intro do JHipster (#1427)  * refactor:
Reorder tests without lambda    Moves inner
implementations of Answer and ArgumentMatcher to
the top of  the test classes.  Also changes the
lambda expression to a regular ""pre java 8""
expression  in one of the tests.    Resolves:
BAEL-632    * feat: Create basic Monolithic
JHipster project    Commit just after creating a
JHipster project, before making any modifications.
Resolves: BAEL-137    * chore: Change the
artifactId and name of the project    From
baeldung to jhipster-monolithic and JHipster
Monolithic Application    Relates to: BAEL-137
* feat: Create entities Post and Comment
Relates to: BAEL-137    * feat: Fix Gatling
configuration in pom.xml    Relates to: BAEL-137
* feat: Add files for Continuous Integration
Relates to: BAEL-137    * feat: Change pom.xml to
conform to Baeldung standards    - moved the
<properties> element to the bottom of the file  -
excluded integration tests in the default surefire
configuration  - added a new profile, called
integration, and added the integration tests there
- added Java 8 in the <source> and <target> tags,
under maven-compiler    solves: BAEL-137    *
chore: Add jhipster module to parent pom
",89768,3057,6214,"Felipe Reis","felipe.gdr@gmail.com","pedja4","pedja4@users.noreply.github.com"
"6151","eugenp/tutorials","57551f33a0d408957fd905ded0fae86e91592f6a",3,"2017-04-04 15:10:36+01:00","BAEL-434 - Spring Roo project files generated by
Spring Roo. No formatting applied. Added POM, java
and resources folders.
",83979,2928,5631,"iaforek","arkadiusz@jaworski.pl","iaforek","arkadiusz@jaworski.pl"
"6152","eugenp/tutorials","4c6b529571a9ee23d6d3e5a72dff9980eca2468a",1,"2017-04-19 22:03:01+03:00","Bael 736 ver2 (#1693)  * add notnull    * fix
formatting
",98025,3400,6843,"lor6","loredana.crusoveanu@yahoo.com","Grzegorz Piwowarek","gpiwowarek@gmail.com"
"6153","eugenp/tutorials","e338d3eb0ecbf42d7d5302c751a121585cf6e0d6",1,"2017-05-19 02:46:47-04:00","Introduction to Testing with Arquillian (#1877)
",109047,3736,9082,"Jesus Boadas","jboadas@gmail.com","maibin","michal.aibin@gmail.com"
"6154","eugenp/tutorials","8da9bee6aac139322f6ed4b3c81e43f3809649f0",10,"2017-08-28 22:58:08+02:00","BAEL-1027: Introduction to GraphQL - initial
commit (#2515)  * spring beans DI examples    *
fix-1: shortening examples    * List of Rules
Engines in Java    * BAEL-812: Openl-Tablets
example added    * BAEL-812: artifacts names
changed    * BAEL-812: moving rule-engines
examples to rule-engines folder    * BAEL-812:
removing evaluation article files    * BAEL-812:
folder renamed    * BAEL-812: folder renamed    *
BAEL-812: pom.xml - parent added    * BAEL-1027:
Introduction to GraphQL - initial commit
",127014,4385,9971,"felipeazv","felipeazv@users.noreply.github.com","maibin","michal.aibin@gmail.com"
"6155","eugenp/tutorials","3d0fe787cfaee47105b1b1305bc376afec6aeabd",1,"2017-10-22 16:15:50+01:00","Commit again spring-jmeter-jenkins
",137289,4700,10644,"Dassi Orleando","me@dassiorleando.xyz","Dassi Orleando","me@dassiorleando.xyz"
"6156","eugenp/tutorials","6b3ba3311953d97302e33808367b49f17e1b0c0d",3,"2017-12-14 05:18:00+01:00","added source code for VRaptor
",149329,5146,11216,"Seun Matt","seun.matthew@talentbase.ng","Seun Matt","seun.matthew@talentbase.ng"
"6157","eugenp/tutorials","50743f20c07ec78f69398c1c6d83497e0d38f0b9",1,"2018-01-07 17:05:18+02:00","update restdocs, move to spring-5
",152074,5231,11199,"Loredana Crusoveanu","loredana.crusoveanu@yahoo.com","Loredana Crusoveanu","loredana.crusoveanu@yahoo.com"
"6158","eugenp/tutorials","cd4b5267895f64478140876b485d352fc3fb96ee",1,"2018-01-13 19:57:53+03:00","BAEL-1451 Writing a Jenkins plugin (#3396)  *
BAEL-1451 Writing a Jenkins plugin    A sample
Jenkins plugin which  builds basic project stats
* BAEL-1451 Writing a Jenkins plugin    Formatting
",154268,5296,11346,"Denis","denzhdanov@gmail.com","maibin","michal.aibin@gmail.com"
"6159","eugenp/tutorials","81e8da29a402f0cb8fd1c362ce249271b1e94f5d",4,"2018-01-27 11:14:14+01:00","BAEL-1335
",157375,5409,11553,"Markus Gulden","markus.gulden@msg.group","Markus Gulden","markus.gulden@msg.group"
"6160","eugenp/tutorials","5a31640528ac3e7fce5314b06e194077b0cccd4b",2,"2018-02-03 13:30:52+01:00","Updates after editor feedback
",157396,5409,11553,"Markus Gulden","markus.gulden@msg.group","Markus Gulden","markus.gulden@msg.group"
"6161","eugenp/tutorials","b35b913cbec2c4ec97c64f50606e42a2b55f96d8",3,"2018-02-21 00:00:47+01:00","Bael 1490 the checker framework and java pluggable
type systems (#3584)  * BAEL-1490 First examples,
Maven setup    * BAEL-1490 Each checker has its
own source file    * BAEL-1490 Added checker for
String.format    * BAEL-1490 The Checker Framework
and Java Pluggable Type Systems    * Added
comments, removed example that is probably too
technical for a brad audience.
",163464,5602,11775,"Daniele Demichelis","danidemi@users.noreply.github.com","pauljervis","jervis@12os.co.uk"
"6162","eugenp/tutorials","3d827783f745e8054559b77dc4573e267a2fba3c",3,"2018-04-07 17:54:06+02:00","Thymeleaf conditionals (#3949)  * different types
of thymeleaf conditionals    * improved thymeleaf
conditionals
",172021,5914,12778,"igorpele","igor.pelesic@gmail.com","maibin","michal.aibin@gmail.com"
"6163","eugenp/tutorials","110d3891c47a764babf645b22846bde639fedce0",2,"2018-05-19 14:04:18+05:18","Bael 6514 (#4281)  * Added parent module on poms
that have no parent defined    * Removed
dependency reduced pom from undertow module    *
[BAEL-6514] - Fix usage of @AutoConfigureMockMvc
without mocking
",180896,6265,13512,"amit2103","amit2103@users.noreply.github.com","Eugen","hanriseldon@gmail.com"
"6164","eugenp/tutorials","fc5ad8e88e884bcdf377d75c4dc2d6851f95cfb7",2,"2018-05-28 21:45:51+00:00","java ee 8 security api
",182718,6355,13574,"eelhazati","eelhazati@gmail.com","eelhazati","eelhazati@gmail.com"
"6165","eugenp/tutorials","ff8b9a8437b318a5080b9ebdcc6b9d361fca4e01",2,"2018-07-17 22:17:48+01:00","added spring-rest-hal-browser code (#4701)
",193205,6727,14024,"Sam Millington","s.j.millington@hotmail.co.uk","Grzegorz Piwowarek","gpiwowarek@gmail.com"
"6166","eugenp/tutorials","b92dd4c51bf948f4b63cec80e671e23bac06dab4",9,"2018-08-03 12:33:39+02:00","Spring Boot and Angular E-Commerce Application
(#4874)  * Spring Boot and Angular E-Commerce
Application    * Spring Boot and Angular
E-Commerce Application pom.xml updated    * Spring
Boot and Angular E-Commerce Application tests
added
",198243,6927,14351,"cdjole","djordje.cvijetic@gmail.com","maibin","michal.aibin@gmail.com"
"6167","eugenp/tutorials","b6e56ef57aa80d4a142b66f85cf86742a005fa5e",1,"2018-08-04 20:11:10+05:18","[BAEL-1967] - Custom validation MessageSource in
Spring Boot
",198392,6936,14354,"kartiksingla","singla.kartik1@gmail.com","kartiksingla","singla.kartik1@gmail.com"
"6168","eugenp/tutorials","e828a0de9a14836fe19addd486253f842159e58a",1,"2018-08-13 00:08:55+02:00","BAEL-1994: Flink and Kafka Data Pipeline
",196801,6877,14236,"DomWos","blind.van@gmail.com","DomWos","blind.van@gmail.com"
"6169","eugenp/tutorials","8a6cd931ca41cf74d7e3580a02bb7ab7ad8a079c",1,"2018-08-15 00:47:53-03:00","[BAEL-455] Initial code
",200294,7035,14442,"Philippe","phil@lighthouse.com.br","Philippe","phil@lighthouse.com.br"
"6170","eugenp/tutorials","3960410436711e1172c9df3a163dc21350f2cac8",2,"2018-09-09 11:53:18+02:00","BAEL-2060 - Bean Validation in Jersey
",205733,7239,14697,"Jon Cook","jonathan.cook@erars.plus.com","Jon Cook","jonathan.cook@erars.plus.com"
"6171","eugenp/tutorials","6b81b95ef6919945cdcb4e9281db412f0aab90d6",1,"2018-09-22 17:29:16-03:00","Initial Commit
",121380,4184,9740,"Alejandro Gervasio","electricalweb@yahoo.com.ar","Alejandro Gervasio","electricalweb@yahoo.com.ar"
"6172","eugenp/tutorials","45194b5edc1b18ca785aeaf62e0530cc4ed21293",2,"2018-10-16 02:22:19-03:00","[BAEL-1502] spring-5-reactive | Validation for
Functional Endpoints (#5437)  *  Added validation
for functional endpoints scenarios:  * validating
in handler explicitly  * created abstract handler
with validation steps  * using validation handlers
with two implementations    * * added annotated
entity to be used with springvalidator    * *
added tests and cleaning the code slightly
",217641,7767,15203,"rozagerardo","rozagerardo@gmail.com","maibin","michal.aibin@gmail.com"
"6173","eugenp/tutorials","a79f802038e3be1b59abef89b97a98d2644ee4a0",1,"2018-10-28 23:35:00+05:18","Add new module for restx-demo
",218801,7773,15263,"saikat","psychsane@gmail.com","saikat","psychsane@gmail.com"
"6174","eugenp/tutorials","cb1b3d5a5c444f1083b2591f47cba61b715aa15f",2,"2018-10-30 04:11:57+07:00","Bael 2285 (#5568)  * Fix a division method mistake
* Spring null-safety
",219908,7809,15237,"nguyennamthai","namthainguyen@gmail.com","Grzegorz Piwowarek","gpiwowarek@gmail.com"
"6175","eugenp/tutorials","df8158ad81a97b5af0f566c16ec047b46800ecd5",9,"2018-11-03 13:00:06-03:00","BAEL-1996 (#5507)  * [BAEL-1996] WIP - Initial
import    * [BAEL-1996] Apply formatting rules
* [BAEL-1996] Import UAA modules    * [BAEL-1996]
New directory structure
",231663,8084,17609,"psevestre","phil@lighthouse.com.br","KevinGilmore","kpg102@gmail.com"
"6176","eugenp/tutorials","8e6fff4fc88b2cb9100018b2cb5a14f40f64e78b",1,"2018-11-09 16:35:44+03:00","BAEL-1596 Spring Events (#5605)  * Annotation-
driven event listener + generic events    * update
examples + add tests    * add article link    *
add more tests for Spring Events
",233696,8158,17671,"Paul","alarmo.lord@gmail.com","Eugen","hanriseldon@gmail.com"
"6177","eugenp/tutorials","9ed70233ff537b0793b89323944642e4c0aa77a4",2,"2019-02-25 11:30:51+05:18","BAEL2489 - Avoid check for null statement in Java
",254503,8931,18788,"Chirag Dewan","chirag.dewan@ericsson.com","Chirag Dewan","chirag.dewan@ericsson.com"
"6178","eugenp/tutorials","57ae9db85485c3ac92025c451f3486e7b6a58e4c",8,"2019-03-19 06:42:25-06:00","Add book entity to jhipster-5 project
",262858,9114,19007,"Michael Pratt","prattm@gmail.com","Michael Pratt","prattm@gmail.com"
"6179","eugenp/tutorials","c7c5d56eb392038c8f577537c44eeedcdf1ae7c5",2,"2019-03-26 21:35:51+05:18","BAEL2489 Avoid check for null statement in Java
",256602,9003,18141,"Chirag Dewan","chirag.dewan@ericsson.com","Chirag Dewan","chirag.dewan@ericsson.com"
"6180","eugenp/tutorials","bac144389785c0a78ae398d5854b671fecccce41",4,"2019-04-02 02:12:55-03:00","Initial import
",265909,9238,19150,"Philippe","phil@lighthouse.com.br","Philippe","phil@lighthouse.com.br"
"6181","eugenp/tutorials","bee2f9fc57b623088107f13eb88da9465422b2bc",1,"2019-04-25 18:14:58+04:18","Added a simple NullSource test.
",270998,9441,19425,"Ali Dehghani","ali.dehghani.g@gmail.com","Ali Dehghani","ali.dehghani.g@gmail.com"
"6182","eugenp/tutorials","97675738f1beb38daa2f43469427851e80ced2e6",2,"2019-04-25 19:34:44+04:18","Added more tests.
",271011,9441,19425,"Ali Dehghani","ali.dehghani.g@gmail.com","Ali Dehghani","ali.dehghani.g@gmail.com"
"6183","eugenp/tutorials","bc3ed2671687b829fbdac4d1331aee1bf3811ba0",1,"2019-07-16 17:08:12+05:18","BAEL-2990 Automatic generation of the Builder
pattern with FreeBuilder
",287239,9968,20307,"Chirag Dewan","chirag.dewan@ericsson.com","Chirag Dewan","chirag.dewan@ericsson.com"
"6184","eugenp/tutorials","1889628daa76b4f8b846a2596bab47229a101f51",1,"2019-09-03 16:27:36+02:00","BAEL-2966
",297042,10411,20680,"Krzysztof Majewski","kmajewski@berg.technology","Krzysztof Majewski","kmajewski@berg.technology"
"6185","eugenp/tutorials","bf3435372cdc57f4fc98f0bfa589a644bdc8ac49",1,"2019-10-04 10:53:11+02:00","[BAEL-3306] Validations for Enum types  Added code
belonging to the blog validations for Enum types.
",301610,10596,20847,"Martin van Wingerden","martin@martinvw.nl","Martin van Wingerden","martin@martinvw.nl"
"6186","eugenp/tutorials","563f74a0abb8a7f545b4dbb8f375cfa75781c8d5",1,"2019-11-07 04:12:51+01:00","[BAEL-3319] - Documenting a Spring REST API using
OpenAPI (#7919)  * [BAEL-3211] Generate Integers
within a range in Java    * [BAEL-3211] Generate
Integers within a range in Java    * Moved files
from java-numbers to java-numbers-2    *
[BAEL-3319] - Documenting a Spring REST API using
OpenAPI    * [BAEL-3319] Added a new module for
springdoc-openapi library    * Incorporated
feedback - indents, GetMapping et al annotations,
package as jar, remove README & spring-webflux
change, use of map in BookRepository    * Used
DeleteMapping instead of RequestMapping    * Add
the spring-boot-springdoc module to root pom.xml
* Remove plain spring boot starter from pom.xml
",307440,10818,20941,"Harsha Veeravalli","harshavs@gmail.com","KevinGilmore","kpg102@gmail.com"
"6187","eugenp/tutorials","75ff212f1dadbf1be73d77c3e32bd8f5084bc3cb",2,"2019-11-17 15:54:37+01:00","BAEL-2275: Change constructor of Order
",309491,10895,20957,"Lukasz Rys","lukaszrys@me.com","Lukasz Rys","lukaszrys@me.com"
"6188","eugenp/tutorials","a99c2c818f3d72d2d6283fa6800b4f1e8954dae1",1,"2019-11-17 20:55:03+01:00","BAEL-2275: Add OrderItem
",309529,10896,20957,"Lukasz Rys","lukaszrys@me.com","Lukasz Rys","lukaszrys@me.com"
"6189","eugenp/tutorials","16522a00cefc8ac1dc3ef945aa5f696ffbf11342",1,"2019-11-20 10:30:16+01:00","BAEL-3385: Hibernate @NotNull vs @Column(nullable
= false) (#8194)  * BAEL-3385: Hibernate @NotNull
vs @Column(nullable = false)    * BAEL-3385: Fix
test's assertion
",310487,10905,20997,"kwoyke","krzysztofwoyke@gmail.com","Grzegorz Piwowarek","gpiwowarek@gmail.com"
"6190","eugenp/tutorials","e384c430a07e7aaeca83f7ec1f7a5aecd5a01c4b",1,"2019-11-25 13:28:54+02:00","BAEL-3456 - Springfox
",307824,10842,21030,"Anshul BANSAL","smartdiscover17@gmail.com","Anshul BANSAL","smartdiscover17@gmail.com"
"6191","eugenp/tutorials","7daa791c2b906ef8e5beae3cc05d2e6ef14bccd8",1,"2019-12-14 16:34:34+02:00","BAEL-3464 - Ninja framework
",312279,10893,21304,"Anshul BANSAL","smartdiscover17@gmail.com","Anshul BANSAL","smartdiscover17@gmail.com"
"6192","eugenp/tutorials","6a09f4ac9bb963edad7ccc391aa10320b0e42874",3,"2019-12-30 20:57:05+03:18","PowerSet generation is Java and respective unit
tests are added (BAEL-3417) (#8284)  * PowerSet
generation is Java and respective unit tests are
added    * function name is adjusted to the actual
ordering name (Reverse Lexicographical ordering)
* Guava example test function is changed    *
LazyLoad powerSet (based on Guava implementation)
is added    * set is used instead of map.keySet()
",317007,11056,21480,"mnafshin","mnafshin@gmail.com","maibin","michal.aibin@gmail.com"
"6193","eugenp/tutorials","7527f6978dbd596c46f5c3502e0dcf3e948f244b",1,"2020-01-23 17:26:30+02:00","init
",319020,11136,21560,"m.raheem","m.abdelbaset.dev@gmail.com","m.raheem","m.abdelbaset.dev@gmail.com"
"6194","eugenp/tutorials","7180d1598e8e9405d26ba4ea719a0ae2497ad0ae",1,"2020-01-24 22:00:06+01:00","Feature/bael 338 introduction dropwizard (#8572)
* [ BAEL-3388 ] : Introduction Dropwizard    *
BAEL-3388: Fix formatting
",320061,11167,21590,"Lukasz Rys","lukaszrys@me.com","maibin","michal.aibin@gmail.com"
"6195","eugenp/tutorials","df21eaa29c08e6de37cebbc9b9e8f9228f0a8793",25,"2020-03-22 14:06:39-05:00","BAEL-3304 - spatialguru.net@gmail.com (#8883)  *
BAEL-3304 - Add openapi generator client    *
BAEL-3304 - Add openapi generator client    *
BAEL-3304 - Add openapi generator client to root
module    * Remove .gitignore
",329934,11486,22437,"Mark Thomas","spatialguru.net@gmail.com","GitHub","noreply@github.com"
"6196","eugenp/tutorials","d02bac9cfbbb3ec2ca0dd822f3211bd04d949139",3,"2020-05-05 14:29:10+05:18","Adding the sourcecode for tutorial tracked under
BAEL-2957
",339751,11848,23213,"CHANDRAKANT Kumar","kumar.chandrakant@soprabanking.com","CHANDRAKANT Kumar","kumar.chandrakant@soprabanking.com"
"6197","eugenp/tutorials","d6e8da14cd4ae95a55b6435761929f5524a386d5",1,"2020-06-07 09:55:29+02:00","add stackoverflow-plugin-gradle project
",346316,12058,23321,"Waldemar Penner","waldemar.penner91@gmail.com","Waldemar Penner","waldemar.penner91@gmail.com"
"6198","Blankj/AndroidUtilCode","2d0bea75e1635674ba18a03fe1df65a86fc769a1",1,"2017-05-12 20:04:42+08:00","see 05/12 log
",9567,92,8223,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6199","Blankj/AndroidUtilCode","bc35655d3af0ddac5fa691d25da17b916beb4ee4",13,"2017-06-20 18:32:50+08:00","see 06/20 log
",10714,99,8857,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6200","Blankj/AndroidUtilCode","a99a347fec817b1d9345e75de2a478244a81cc20",42,"2017-06-26 17:32:34+08:00","see 06/26 log
",10824,99,8797,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6201","Blankj/AndroidUtilCode","8b05af194826472dd506a65fd4a4191493965986",3,"2017-07-23 08:36:50+08:00","see 07/23 log
",11042,107,8633,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6202","Blankj/AndroidUtilCode","44ea09d39a89a8f16af4db2bdab626e1694c019c",1,"2017-07-24 18:43:39+08:00","see 07/24 log
",11196,109,8633,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6203","Blankj/AndroidUtilCode","5386bd8eb398982cc5994c7a127d5d425d90582b",14,"2017-07-26 19:24:07+08:00","see 07/26 log
",11246,109,8714,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6204","Blankj/AndroidUtilCode","1cd41d700dfba8dfb199c30b8aaa56238a2adabf",1,"2017-07-27 18:54:41+08:00","see 07/27 log
",11296,109,8712,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6205","Blankj/AndroidUtilCode","1f48171bc2bfe07a3bfa78a73e9015e70dac10b2",4,"2017-08-01 18:32:25+08:00","see 08/01 log
",11326,110,8697,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6206","Blankj/AndroidUtilCode","c2c44d3e11123067f5831980078ad29429688b6b",5,"2017-09-06 18:18:51+08:00","see 09/06 log
",11937,118,9072,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6207","Blankj/AndroidUtilCode","eefb03fb1f6703a47ba5f04cb4fc5c5d522b2409",1,"2017-09-18 20:59:20+08:00","see 09/18 log
",12546,127,8955,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6208","Blankj/AndroidUtilCode","b014532815a57f12f3884cfae3f124a0a356b45d",15,"2017-09-21 19:41:37+08:00","see 09/21 log
",12808,128,9171,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6209","Blankj/AndroidUtilCode","a68fd9a285770959d037570fd3cea5d737e35d1c",3,"2017-09-25 19:18:31+08:00","see 09/25 log
",12988,128,9225,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6210","Blankj/AndroidUtilCode","dafecc58f70d763b3b7cc3e16f4915401330717d",2,"2017-09-26 16:41:52+08:00","see 09/26 log
",13046,128,9269,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6211","Blankj/AndroidUtilCode","263840280822f8e14b489bab8cc6a9a46f5c7495",1,"2017-09-26 18:55:01+08:00","see 09/26 log
",13052,128,9299,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6212","Blankj/AndroidUtilCode","dda88a998a4e1da4652efc3af0fc76c99232ac18",2,"2017-09-27 18:04:37+08:00","see 09/27 log
",13116,128,9343,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6213","Blankj/AndroidUtilCode","28a0b460486de2bacb2240428cf135234ec44fe3",58,"2017-09-30 15:52:06+08:00","see 09/30 log
",13112,128,9582,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6214","Blankj/AndroidUtilCode","c577eb6e6149299943d65b6d1384eb97766081a6",1,"2018-01-10 22:04:06+08:00","see 01/10 log
",14743,138,10072,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6215","Blankj/AndroidUtilCode","72d84e4303ca6e5140331b2ef0ebb0b9c8af8e0c",16,"2018-02-10 15:14:12+08:00","see 02/10 log
",15345,152,10130,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6216","Blankj/AndroidUtilCode","bc1fadee6bc340e50e2979ed07d33be41803523b",3,"2018-02-12 21:58:59+08:00","see 02/12 log
",15345,152,10151,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6217","Blankj/AndroidUtilCode","52a6186e2e07ca6eb25304165d154c2330560169",9,"2018-02-24 22:10:47+08:00","see 02/24 log
",15296,152,10097,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6218","Blankj/AndroidUtilCode","745d32fbfae485516494597900b03dca9fb0067e",7,"2018-02-28 15:27:37+08:00","see 02/28 log
",15362,152,10141,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6219","Blankj/AndroidUtilCode","e4da60f1ddfc6232965b4b8e33f145e168b52848",1,"2018-03-03 05:27:46+08:00","see 03/03 log
",15428,152,9941,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6220","Blankj/AndroidUtilCode","f213c602ffa0eae66ca2d64bd2cdd223d0f2298a",2,"2018-03-21 01:03:33+08:00","see 03/21 log
",15523,152,9768,"Blankj","--global","Blankj","--global"
"6221","Blankj/AndroidUtilCode","50173f22b3ef1bf88519628ec089058ef48f7493",8,"2018-04-10 16:59:52+08:00","see 04/10 log
",15981,161,9976,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6222","Blankj/AndroidUtilCode","9bafcbf743893b9e27d0aaebec965ea2320abfa8",15,"2018-04-18 15:50:13+08:00","see 04/18 log
",16098,161,10146,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6223","Blankj/AndroidUtilCode","99d2cf7a3dbfcd2d4ab948c4f6f244d42d92e5c5",4,"2018-04-19 20:11:13+08:00","see 04/19 log
",16266,161,10186,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6224","Blankj/AndroidUtilCode","28b04425082817a99e4e2e2c781d1d502078d22e",23,"2018-04-25 13:57:17+08:00","see 04/25 log
",16730,163,10499,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6225","Blankj/AndroidUtilCode","806de713f4cdf6bab22d9eef6d4abb171459835b",50,"2018-05-15 11:59:24+08:00","see 05/15 log
",17375,171,10792,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6226","Blankj/AndroidUtilCode","06e577c4aea2fb680ffcfc0e0905b0f47ea49db9",33,"2018-05-15 17:09:27+08:00","see 05/15 log
",17505,171,10959,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6227","Blankj/AndroidUtilCode","ce2b50971f8c96142fc777ca23229db43d9684d1",1,"2018-05-22 16:47:28+08:00","see 05/22 log
",17876,172,10967,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6228","Blankj/AndroidUtilCode","09989db6c2a65c7e490ab92885f40fa5ec43200d",104,"2018-06-14 22:07:54+08:00","see 06/14 log
",19342,180,12323,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6229","Blankj/AndroidUtilCode","c8b2c8daf0d1adb099d18d67771ebf244e78ae17",2,"2018-06-29 14:09:47+08:00","see 06/29 log
",19393,180,12341,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6230","Blankj/AndroidUtilCode","a9de7c5d06d78abbfd15579be0174b88284eb349",3,"2018-07-31 20:54:29+08:00","see 07/31 log
",19321,181,12068,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6231","Blankj/AndroidUtilCode","3c6fa6b11cc265aab9780529a00f4d666ce1f96a",1,"2018-09-03 10:41:04+08:00","see 09/03 log
",19721,181,12200,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6232","Blankj/AndroidUtilCode","6cd9188a83d9f2f141e048e948671e27bc855584",48,"2018-10-16 14:04:52+08:00","See 10/16 log
",20037,182,12148,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6233","Blankj/AndroidUtilCode","e9fe9171b7f879bd564669b623450ed5ec883a88",5,"2018-10-30 20:50:25+08:00","see 10/30 log
",20036,182,12241,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6234","Blankj/AndroidUtilCode","924278cb16ccff277e27c96599978e768beac9cb",3,"2018-11-13 20:08:12+08:00","see 11/13 log
",19945,181,12239,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6235","Blankj/AndroidUtilCode","1e20b8654e0dd5be9b6d50eeaad15984a16cd8d9",310,"2019-01-06 23:35:44+08:00","see 01/06 log
",21676,194,14423,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6236","Blankj/AndroidUtilCode","bebbaae1109deb0e570b2ea339c3809c11807065",1,"2019-01-11 21:25:59+08:00","see 01/11 log
",21846,194,14375,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6237","Blankj/AndroidUtilCode","f154d09fd3bfd6deb5d1a472f9c2b7d00d3d5d1f",7,"2019-01-15 20:50:44+08:00","see 01/15 log
",20928,181,14296,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6238","Blankj/AndroidUtilCode","96e51ef5ef29ae9137e3d113a54c0b08cb70f546",2,"2019-01-28 20:51:13+08:00","see 01/28 log
",17812,129,13713,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6239","Blankj/AndroidUtilCode","0791ebc83cbba2fb0681b1c68207acb10782f79a",4,"2019-02-11 21:59:17+08:00","See 02/11 log
",18147,131,13861,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6240","Blankj/AndroidUtilCode","564c8396a5ae69ec3d9e83241443f20383baaa29",9,"2019-02-18 20:48:18+08:00","see 02/18 log
",18377,136,13866,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6241","Blankj/AndroidUtilCode","7db0eb0e1e92db7cda65ceaef8f58ede00614c6c",2,"2019-02-20 22:37:32+08:00","see 02/20 log
",18670,141,13880,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6242","Blankj/AndroidUtilCode","38a4609ec24484be8922485b34f6ae866a250681",2,"2019-02-21 03:39:19+08:00","see 02/21 log
",18690,141,13879,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6243","Blankj/AndroidUtilCode","c66a1449747ba94a7b6478d90f31579b6922ad0e",2,"2019-02-22 03:20:44+08:00","see 02/22 log
",18591,141,13894,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6244","Blankj/AndroidUtilCode","1944e13b42b989c16a2cb1da760311f976819274",3,"2019-03-08 10:57:53+08:00","see 03/08 log
",18841,143,13856,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6245","Blankj/AndroidUtilCode","22db2430792c881cd03d418529c1f238c40469ab",3,"2019-03-13 19:54:14+08:00","see 03/13
",19085,143,14007,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6246","Blankj/AndroidUtilCode","0851fca4dcf15a233ec91bb502c4be388547fe14",1,"2019-03-15 21:27:20+08:00","see 03/15 log
",19442,151,14094,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6247","Blankj/AndroidUtilCode","18395d7488a48c4a72e818e7f486cd748f3c852e",12,"2019-03-18 04:42:32+08:00","see 03/18 log
",19364,151,14106,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6248","Blankj/AndroidUtilCode","2ed78f77fa55d715a6dce0e7e4db570f43e4f7c6",42,"2019-04-28 22:38:30+08:00","see 04/28 log
",19495,151,14164,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6249","Blankj/AndroidUtilCode","3ff340e999a29134efc32b1f04a430767e71b62a",3,"2019-05-29 22:19:17+08:00","see 05/29 log
",19705,150,14371,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6250","Blankj/AndroidUtilCode","7060007c4b80b1286a62340d96f3e38fb506eb09",2,"2019-06-18 23:12:05+08:00","see 06/18 log
",28834,156,16684,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6251","Blankj/AndroidUtilCode","047750f980bd4890a6e939817a0aed30aff2b636",4,"2019-06-26 17:05:22+08:00","Â¢ûÂä†Âá†‰∏™ÈÄöËøáÊåáÂÆöÊó•ÊúüÊó∂Èó¥Ê†ºÂºèÊ®°ÊùøËøõË°åÊó∂Èó¥Êà≥Â§ÑÁêÜÊñπÊ≥ïÂèäÁõ∏Â∫îÁöÑÂçïÂÖÉÊµãËØï
",28855,156,16714,"liyujiang","liyujiang_tk@yeah.net","liyujiang","liyujiang_tk@yeah.net"
"6252","Blankj/AndroidUtilCode","15c0014b0c3f66f842c7d3fd596dbcb894b1d4ed",2,"2019-06-29 19:03:26+08:00","see 06/29 log
",29023,158,16843,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6253","Blankj/AndroidUtilCode","96a3d0269f1ead9652168dfdec40a8ee29ef7582",2,"2019-06-30 11:38:17+08:00","see 06/30 log
",29032,158,16855,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6254","Blankj/AndroidUtilCode","ff046c3c8e552aa10167c053a666358f99dac38b",7,"2019-07-10 19:46:10+08:00","see 07/10 log
",29560,169,16751,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6255","Blankj/AndroidUtilCode","c8d98f89fd74b1247e9e492694fbf643f9d0b072",1,"2019-07-13 20:51:18+08:00","see 07/13 log
",30374,177,16827,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6256","Blankj/AndroidUtilCode","253bebfa4df3c61434aabda102b0ba6a961aed59",26,"2019-07-30 10:03:26+08:00","see 07/29 log
",30831,180,16923,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6257","Blankj/AndroidUtilCode","632a5a921884c4cd14b1d23560371042f338dfd2",2,"2019-07-31 23:56:10+08:00","see 07/29 log
",30951,180,16894,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6258","Blankj/AndroidUtilCode","6e27c6ec4c11e5600f3b40f22b536f96a7483f72",1,"2019-08-09 01:15:51+08:00","see 08/09 log
",31145,181,16896,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6259","Blankj/AndroidUtilCode","13de11edb3ba193adea9d057bdb09248896841c8",52,"2019-08-16 13:08:18+08:00","see 08/16 log
",24672,186,15780,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6260","Blankj/AndroidUtilCode","2ca2c828317dfadc6aea8ff03fc05bc8453194bb",12,"2019-09-27 11:36:27+08:00","see 09/27 log
",28201,241,16499,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6261","Blankj/AndroidUtilCode","408303ffcdfd2a6f5090c749c6a02f343385f119",50,"2019-11-07 01:54:43+08:00","see 11/07 log
",29289,256,16924,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6262","Blankj/AndroidUtilCode","4e17cd81c8467fc381f1c2df36fdcf4fb94fd229",24,"2019-11-23 22:01:31+08:00","see 11/23 log
",29628,260,16987,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6263","Blankj/AndroidUtilCode","93c0a760737c2ddd0a6805919962eebfac2a27b9",2,"2019-11-28 00:49:23+08:00","see 11/28 log
",29747,264,17041,"Blankj","625783482@qq.com","Blankj","625783482@qq.com"
"6264","facebook/fresco","c02c3eb292e1daa0b0d3f78fc7d3fc6cfad17228",186,"2015-03-23 20:28:31-07:00","Initial commit
",29061,438,14209,"Tyrone Nicholas","tyrone.nicholas@gmail.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6265","facebook/fresco","c0d849ba668782b863351c958468e991a00fdd75",2,"2015-04-02 10:37:15-07:00","Rename NfpRequestState to FetchState
",29362,444,14393,"Ognjen Dragoljevic","plamenko@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6266","facebook/fresco","89f71c01fe3e01603a9fcf13c09c2b2e1f5b46d4",3,"2015-04-02 13:54:30-07:00","Option to decodeAllFrames in ImageDecodeOptions.
",29632,445,14482,"Jonathan Perlow","jdperlow@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6267","facebook/fresco","18be280fe246a56f6ec22be7785a3994ad55aea5",2,"2015-04-14 07:49:29-07:00","Improve post-processing
",32184,456,15831,"Ognjen Dragoljevic","plamenko@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6268","facebook/fresco","61b11ac86c1f5aad05d9887d32241081e191a019",11,"2015-04-20 11:48:40-07:00","clean up counting memory cache
",29675,445,14445,"Ognjen Dragoljevic","plamenko@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6269","facebook/fresco","449d53a6e7dd20bcdb0ec337bef2c24e204d54a9",12,"2015-05-07 06:22:54-07:00","Do not call callback in synchronized blocks in
MultiplexProducer
",29699,447,14501,"Michał Gregorczyk","michalgr@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6270","facebook/fresco","388c8c2fcdd961fd6d979ab0e590effd7f24035d",1,"2015-05-07 07:49:11-07:00","Add support for data URIs in [Part 2]
",29771,449,14543,"Tyrone Nicholas","tnicholas@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6271","facebook/fresco","c0c63e01be108983bda1a0c6f46035f413e4c16b",4,"2015-05-15 00:24:28-07:00","open-source verbose logging
",29746,447,14367,"Ian Childs","ianc@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6272","facebook/fresco","1df0220a440149c255f7a3fa2a21e990e3060c83",1,"2015-06-09 03:47:00-07:00","Added closeSafely method to EncodedImage
",30216,451,14500,"Lucas Moscovicz","lmoscovicz@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6273","facebook/fresco","786584940955fc9756448cf374be4efb0d956faa",1,"2015-06-10 01:21:36-07:00","Added isValid static method to EncodedImage
",30211,451,14490,"Lucas Moscovicz","lmoscovicz@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6274","facebook/fresco","4e516e75d7a2048214e2d06a1201caf4086e4a71",7,"2015-06-11 02:41:37-07:00","Open-source zoomable code
",30895,458,14782,"Tyrone Nicholas","tnicholas@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6275","facebook/fresco","70979d966c2267a49ddc87a05a52e8bd73ed4f6d",1,"2015-06-18 04:43:08-07:00","Changed MultiplexProducer to use any Closeable
class as a generic
",30909,457,14749,"Lucas Moscovicz","lmoscovicz@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6276","facebook/fresco","0788c4b39e5d4de45a5393b870898e0d4a43b961",2,"2015-06-18 07:47:06-07:00","Refactor GenericDraweeHierarchy RootDrawable
",30911,457,14749,"Ian Childs","ianc@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6277","facebook/fresco","675622a99cdcbf951249c577c7bf3b682a43a2a5",2,"2015-07-01 09:10:26-07:00","Changed encodedImage to take FileInputStream
instead of InputStream
",31197,459,14756,"Lucas Moscovicz","lmoscovicz@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6278","facebook/fresco","9f2ed33abf20be354e941552dfbe70fb739f31a8",1,"2015-07-03 09:54:31-07:00","Updated Bitmap size in bytes
",31314,461,14825,"Massimo Carli","maxcarli@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6279","facebook/fresco","0c7ac7c80f2d00d392c43083550273874662d533",1,"2015-07-08 04:44:17-07:00","Fold max num threads into the pool params
",31389,461,14837,"Tyrone Nicholas","tnicholas@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6280","facebook/fresco","96111f2bb2927c26a218731d13809da7eac2333a",5,"2015-07-14 03:51:20-07:00","Added caching of postprocessor output
",31603,462,14900,"Massimo Carli","maxcarli@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6281","facebook/fresco","6e1fef374bacec4f64bafd92f45e9eb084085722",4,"2015-07-15 08:09:16-07:00","Make PlatformBitmapFactory a true singleton
",31656,462,14902,"Tyrone Nicholas","tnicholas@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6282","facebook/fresco","6bad490bd8120023ebbbd1f7f891d6b8e7da29ba",2,"2015-07-29 03:29:56-07:00","Added decodeDimensions to BitmapUtil
",31722,463,14910,"Lucas Moscovicz","lmoscovicz@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6283","facebook/fresco","a4b31359fc9aec5aabd9315ede170b632f1deede",1,"2015-08-06 10:43:20-07:00","Use List instead of ArrayList in ListDataSource
",39757,516,15593,"Tyrone Nicholas","tnicholas@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6284","facebook/fresco","4ca835f122f738cf12e3c0da56e5d182f92530e1",9,"2015-08-25 08:44:32-07:00","Remove redundant modifiers from interfaces
",39797,516,15616,"Boris Korogvich","b.korogvich@gmail.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6285","facebook/fresco","7598941e76a910b514027ea49693ac1a1785bf00",7,"2015-09-10 07:04:25-07:00","Add reusing support to CountingMemoryCache
",40241,526,15843,"Tyrone Nicholas","tnicholas@fb.com","Tyrone Nicholas","tnicholas@tnicholas-pro.dhcp.thefacebook.com"
"6286","facebook/fresco","73c023310cb65e5260456564ce51e23fa9d0fb32",4,"2015-09-10 07:04:25-07:00","Add AnimatedFrameCache
",40404,528,15886,"Tyrone Nicholas","tnicholas@fb.com","Tyrone Nicholas","tnicholas@tnicholas-pro.dhcp.thefacebook.com"
"6287","facebook/fresco","fbc512bc10a304a58e721065d43a3a6fcffc5250",1,"2015-09-21 10:58:07-07:00","Add in null check for layoutParams since it could
be null if view has no parent
",40451,529,15907,"Don Yu","dyu@fb.com","Tyrone Nicholas","tnicholas@tnicholas-pro.dhcp.thefacebook.com"
"6288","facebook/fresco","d360008adc105f406504170b3def53e8ab389471",1,"2015-09-24 04:04:28-07:00","Let FadeDrawable have null layers
",40503,529,15907,"Ian Childs","ianc@fb.com","Tyrone Nicholas","tnicholas@tnicholas-pro.dhcp.thefacebook.com"
"6289","facebook/fresco","e12ce5cb4f609b285c33731f0e26328303aa0ef9",2,"2015-10-02 08:06:48-07:00","Doing a null check for empty strings
",41018,532,16049,"Aakash Anuj","aakashanuj@fb.com","Tyrone Nicholas","tnicholas@tnicholas-pro.dhcp.thefacebook.com"
"6290","facebook/fresco","026214d27c55b6911db807424545670e44780344",1,"2015-10-09 18:33:11-07:00","refactor platform bitmap factory
",41738,539,16127,"Jie Wang","jiew@fb.com","Tyrone Nicholas","tnicholas@tnicholas-pro.dhcp.thefacebook.com"
"6291","facebook/fresco","fb0e64dbfda7c1701c5454c464ab9a5d4665531b",3,"2015-11-12 05:37:02-08:00","Added test for check if available
",42009,540,16157,"Massimo Carli","maxcarli@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6292","facebook/fresco","1046c0e831cf948ed6225c17fb65a4289632777b",2,"2015-12-14 17:34:25-08:00","Add ArrayDrawable.getDrawableParentForIndex method
",42125,540,16183,"Ognjen Dragoljevic","plamenko@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6293","facebook/fresco","015cfd6a0ec3f601281260174cbee6be208ee401",4,"2015-12-15 04:16:18-08:00","Simplify layer handling in GenericHierarchy
",42097,540,16178,"Ognjen Dragoljevic","plamenko@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6294","facebook/fresco","73dcf63d50e30cd2dfc9e09047603936354c0517",9,"2015-12-15 17:21:23-08:00","Extract RootDrawable and WrappingUtils from
GenericHierarchy
",42379,545,16349,"Ognjen Dragoljevic","plamenko@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6295","facebook/fresco","cfac39ecc8d4006959b652ac2403c94f16ed857e",2,"2015-12-17 05:11:17-08:00","Move controller overlay to RootDrawable
",42502,547,16407,"Ognjen Dragoljevic","plamenko@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6296","facebook/fresco","745f3033e1df54debca6659fbcd0424d269d749c",3,"2016-01-11 09:03:34-08:00","Move default disk cache parameters into
DiskCacheConfig
",42611,551,16500,"Tyrone Nicholas","tnicholas@fb.com","Tyrone Nicholas","tyrone.nicholas@gmail.com"
"6297","facebook/fresco","8d51b6a70d7622172c3b15f6ab88a2c58fc3ff03",18,"2016-02-05 11:36:30-08:00","Minor improvements to HierarchyBuilder and
RoundingParams  Reviewed By: balazsbalazs
Differential Revision: D2895876  fb-gh-sync-id:
d8d42ff531b296c2963539fcb6b075f4f5557129 fbshipit-
source-id:
d8d42ff531b296c2963539fcb6b075f4f5557129
",43066,553,16723,"Ognjen Dragoljevic","plamenko@fb.com","Facebook Github Bot 9","facebook-github-bot-9-bot@fb.com"
"6298","facebook/fresco","52c1cf24a4bf9fc49c02d823886ac1de1429d21a",4,"2016-02-10 20:30:16-08:00","Make the DiskStorageSupplier be just another
implementation of DiskStorage  Reviewed By:
tyronen  Differential Revision: D2907006  fb-gh-
sync-id: 2f219d1e22f7f57d1565fced61cfc106b8f693d3
fbshipit-source-id:
2f219d1e22f7f57d1565fced61cfc106b8f693d3
",43106,551,16695,"Helios Alonso Cabanillas","heliosalonso@fb.com","Facebook Github Bot 9","facebook-github-bot-9-bot@fb.com"
"6299","facebook/fresco","d932c2ee62e47db5569ac7bde1df309e42d10166",6,"2016-02-11 14:53:09-08:00","Extract hierarchy inflation logic  Reviewed By:
balazsbalazs  Differential Revision: D2895993  fb-
gh-sync-id:
327c70200a2e05c90655f6f21c6f8836bac3958c fbshipit-
source-id:
327c70200a2e05c90655f6f21c6f8836bac3958c
",43114,554,16734,"Ognjen Dragoljevic","plamenko@fb.com","Facebook Github Bot 9","facebook-github-bot-9-bot@fb.com"
"6300","facebook/fresco","7e02f542dcf5fbd0682617195987832250840801",1,"2016-02-12 12:50:54-08:00","Make ZoomableDraweeView inflatable from XML
Reviewed By: balazsbalazs  Differential Revision:
D2906454  fb-gh-sync-id:
d92f29f04883f40c55922e1f03965e712272d44e fbshipit-
source-id:
d92f29f04883f40c55922e1f03965e712272d44e
",43132,554,16734,"Ognjen Dragoljevic","plamenko@fb.com","Facebook Github Bot 9","facebook-github-bot-9-bot@fb.com"
"6301","facebook/fresco","f5aa8c6a1c6134736645355b52d4d8fa60f6cf33",1,"2016-02-12 17:00:51-08:00","Added ID to disk storage entry interface  Reviewed
By: tyronen  Differential Revision: D2931706  fb-
gh-sync-id:
4449210c2ce1c5ad0e3f886d947f104225dc083a fbshipit-
source-id:
4449210c2ce1c5ad0e3f886d947f104225dc083a
",43140,554,16735,"Helios Alonso Cabanillas","heliosalonso@fb.com","Facebook Github Bot 9","facebook-github-bot-9-bot@fb.com"
"6302","facebook/fresco","7298dbc1438156983112906371ad03de04bb2a01",2,"2016-02-18 07:46:47-08:00","Fresco: Handle properly setting a null drawable in
GDH Builder  Reviewed By: kirwan  Differential
Revision: D2949145  fb-gh-sync-id:
12f545001b8e7a73b7f8db781d199fc52be2c828 fbshipit-
source-id:
12f545001b8e7a73b7f8db781d199fc52be2c828
",43568,556,16808,"Ognjen Dragoljevic","plamenko@fb.com","Facebook Github Bot 9","facebook-github-bot-9-bot@fb.com"
"6303","facebook/fresco","e0da47ea520b5bfb1431810dee6e5f433d684fdc",1,"2016-02-22 06:49:05-08:00","Rename some internal GDH methods  Reviewed By:
balazsbalazs  Differential Revision: D2954750  fb-
gh-sync-id:
7afd6264f95791b2a78e45583c6626424c86089f fbshipit-
source-id:
7afd6264f95791b2a78e45583c6626424c86089f
",43572,556,16834,"Ognjen Dragoljevic","plamenko@fb.com","Facebook Github Bot 9","facebook-github-bot-9-bot@fb.com"
"6304","facebook/fresco","eedf8ca8019a7bbf8c8b902c5be5013fb46d3587",1,"2016-03-21 11:01:37-07:00","Split thumbnails from LocalContentUriFetchProducer
Reviewed By: massimocarli  Differential Revision:
D3000619  fb-gh-sync-id:
2314f00dfd8c4853b68b095ac1ae4b468315ea3d fbshipit-
source-id:
2314f00dfd8c4853b68b095ac1ae4b468315ea3d
",44574,570,17130,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot 7","facebook-github-bot-7-bot@fb.com"
"6305","facebook/fresco","9caa0fe12aafba7383816e7f48abbf4a883e34f3",4,"2016-04-21 08:13:27-07:00","Buck module created to exclude nineoldandroid from
closed source  Reviewed By: oprisnik  Differential
Revision: D3163203  fb-gh-sync-id:
7befbed09f179d3efdb4f79976488f5285cf0822 fbshipit-
source-id:
7befbed09f179d3efdb4f79976488f5285cf0822
",46418,595,17614,"Massimo Carli","maxcarli@fb.com","Facebook Github Bot 5","facebook-github-bot-5-bot@fb.com"
"6306","facebook/fresco","dfe010375df3c09373b7c5fbaa70f4ad0b713a4e",3,"2016-04-27 12:22:27-07:00","Added SimpleDraweeView.setImageURI(@Nullable
String) method  Summary: also changed one example
in demo app to show the new method Closes
https://github.com/facebook/fresco/pull/1038
Reviewed By: kirwan  Differential Revision:
D3229768  Pulled By: oprisnik  fb-gh-sync-id:
b9570228ad85298278e013a791168d5fed620801 fbshipit-
source-id:
b9570228ad85298278e013a791168d5fed620801
",46448,595,17651,"vojta udrzal","udrzalv@gmail.com","Facebook Github Bot 1","facebook-github-bot-1-bot@fb.com"
"6307","facebook/fresco","2a696d728aa9c8be29b370823fb72af9ec85b18b",2,"2016-05-04 07:53:00-07:00","Created Skeleton for Preferences and Conf object
Reviewed By: kirwan  Differential Revision:
D3256127  fb-gh-sync-id:
ae8945b1e42b74148beeaf63aeeb33e5b64733b4 fbshipit-
source-id:
ae8945b1e42b74148beeaf63aeeb33e5b64733b4
",46686,600,17830,"Massimo Carli","maxcarli@fb.com","Facebook Github Bot 6","facebook-github-bot-6-bot@fb.com"
"6308","facebook/fresco","7173ad7f4b40b689cb09bc5ec7f812967274d101",3,"2016-05-04 19:27:57-07:00","Recycle thumbnail DraweeHierarchy  Reviewed By:
DanielGrech  Differential Revision: D3238951  fb-
gh-sync-id:
6c1b54772117cc925b9d9e3ccae52f73e8aba248 fbshipit-
source-id:
6c1b54772117cc925b9d9e3ccae52f73e8aba248
",46693,600,17834,"Jasper Fung","jmfung@fb.com","Facebook Github Bot 3","facebook-github-bot-3-bot@fb.com"
"6309","facebook/fresco","ffdb8842f63c93eeff703af038f82cbe84633f01",6,"2016-05-20 09:09:21-07:00","Drawee scaletype transition  Summary: As mentioned
in #22 ChangeImageTransform for DraweeViews is not
working correctly, when ScaleType is changing
during transition. This pull request resolve this
issue by added custom DraweeTransition, which
animates ScaleType transition correctly
InterpolatingScaleType is changed by adding start
and end values of parentBounds. In pervious
version it used parameter parentBounds, which
changing every animation frame and it caused wrong
animation behaviour.  Transition sample is changed
due to use DraweeTransition. Also background was
added in sample image, to show how animation works
Closes
https://github.com/facebook/fresco/pull/1225
Reviewed By: plamenko  Differential Revision:
D3322074  Pulled By: kirwan  fbshipit-source-id:
1da6aee40b2e15d39bfc699e41488905fa2a08c0
",47065,608,17975,"dmitry.chistyakov","dmitry0208@gmail.com","Facebook Github Bot 4","facebook-github-bot-4-bot@fb.com"
"6310","facebook/fresco","469d5237b0ae12a5c4c95bf9b9c1772230cddf25",3,"2016-05-23 10:23:07-07:00","Add support for dynamically changing backgrounds
and overlays  Summary: Allows backgrounds and
overlays to be changed dynamically. Note,
DraweeHierarchy space for backgrounds and overlays
need to be preallocated in advance in order to be
changed. Closes
https://github.com/facebook/fresco/pull/1230
Reviewed By: oprisnik  Differential Revision:
D3328662  Pulled By: kirwan  fbshipit-source-id:
06520d3b4f5b7b8e375cad25424856d79993ac19
",47094,608,18011,"Ognjen Dragoljevic","plamenko@fb.com","Facebook Github Bot 0","facebook-github-bot-0-bot@fb.com"
"6311","facebook/fresco","d11e2647dcc11e2339fd7d423cc2c47a11b2a7b1",1,"2016-05-26 06:09:25-07:00","Add actualImageUri attribute  Summary: add attr
placeholderImageUri and demo  can write image uri
directly like this  ```xml
<com.facebook.drawee.view.SimpleDraweeView
android:id=""@+id/placeholderImageUri""
android:layout_width=""match_parent""
android:layout_height=""0dp""
android:layout_weight=""1""
fresco:actualImageScaleType=""fitCenter""         fr
esco:placeholderImageUri=""http://www.smemo.info/ic
on.png"" /> ```  when we use android databinding
,like this  ```xml
<com.facebook.drawee.view.SimpleDraweeView
android:id=""@+id/placeholderImageUri""
android:layout_width=""match_parent""
android:layout_height=""0dp""
android:layout_weight=""1""
fresco:actualImageScaleType=""fitCenter""
fresco:placeholderImageUri=""@{imageBean.imageUrl}""
/> ``` Closes
https://github.com/facebook/fresco/pull/1079
Reviewed By: oprisnik  Differential Revision:
D3328578  Pulled By: kirwan  fbshipit-source-id:
467063436f0acedf6ee2a27750995ef034663503
",47376,614,18130,"neosu","280097765@qq.com","Facebook Github Bot 7","facebook-github-bot-7-bot@fb.com"
"6312","facebook/fresco","f02ed7a80f4f3a612fd78ef6ce6d7cc9bd16b7a7",1,"2016-06-02 08:59:15-07:00","Always reserve space for a background and an
overlay  Summary: This achieves two things: * It
allows us to dynamically change backgrounds and
overlays * It saves memory as we removed 5
instance integers and added only 2 instance null-
references (two null elements in the array of the
fade drawable)  An additional change is that
multiple backgrounds are from now on deprecated.
Context: This improvement required a small
interface change between GenericDraweeHierarchy
and its builder. In particular,
GenericDraweeHierarchy now has only one layer
dedicated for a background. Multiple backgrounds
are still supported via builder, but this gets
emulated by wrapping them with an ArrayDrawable.
In theory this should work fine, with one caveat.
Rounding no longer works for multiple backgrounds.
This would be relatively easy to support, but
given that multiple backgrounds are rarely used
feature (if ever), instead of introducing
additional complexity we decided to deprecate it
instead. In case where there is only one or no
background, everything should work as it was
before. Closes
https://github.com/facebook/fresco/pull/1246
Reviewed By: kirwan  Differential Revision:
D3371737  Pulled By: plamenko  fbshipit-source-id:
73b3843631090564f445aab8117f2754e5bc2cb1
",47380,614,18121,"Ognjen Dragoljevic","plamenko@fb.com","Facebook Github Bot 3","facebook-github-bot-3-bot@fb.com"
"6313","facebook/fresco","920b680319fcc41656b83a4cc2e6bc41feba68f0",3,"2016-06-07 11:35:51-07:00","Pass caller context when creating disk cache keys
Summary: This passes the caller context when
creating the disk and encoded cache keys, just as
they already are for bitmap cache keys.  The
default implementation ignores this but there is
now also a `DebuggingCacheKey` which holds the
value for later reference.  Reviewed By: aagnes
Differential Revision: D3359535  fbshipit-source-
id: 5135209d16984377bc23ca31c39db13c89fcc7ee
",47534,618,18208,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot 0","facebook-github-bot-0-bot@fb.com"
"6314","facebook/fresco","0c81765999d1495acc056cea5065cda2c6db1f96",8,"2016-06-09 06:30:56-07:00","Encapsulate CacheEventListener parameters in
CacheEvent  Summary: To avoid risk of future
listener changes further breaking the public API,
this encapsulates the parameters in a new
`CacheEvent` class.  Reviewed By: massimocarli
Differential Revision: D3405176  fbshipit-source-
id: 54c38af4360b2dcb2e734b34d571e6a129e9a18d
",47860,624,18356,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot 6","facebook-github-bot-6-bot@fb.com"
"6315","facebook/fresco","06dec30178247e3382d53e4fe015b4eff4fa5757",1,"2016-06-19 11:42:33-07:00","Refactor Uri to file path utility method  Reviewed
By: kirwan  Differential Revision: D3428269
fbshipit-source-id:
b4e9c5be0adc48180aa4a46668bd5007951eb2b4
",47891,625,18387,"Alvin Portillo","alvinp@fb.com","Facebook Github Bot 4","facebook-github-bot-4-bot@fb.com"
"6316","facebook/fresco","679c1cccccb80d6760acfa55033824e2093fa620",4,"2016-06-30 11:53:51-07:00","Add contentDescription to DraweeControllers
Reviewed By: massimocarli  Differential Revision:
D3499542  fbshipit-source-id:
97aaa9cfaada5afa73fead948b6bdbcaa0a389a9
",48331,631,18482,"Brett Lavalla","blavalla@fb.com","Facebook Github Bot 2","facebook-github-bot-2-bot@fb.com"
"6317","facebook/fresco","f3f23666145079fca25aeddb652b5ae2c5adb5e2",1,"2016-07-20 08:37:43-07:00","Implement getConstantState() for
AutoRotateDrawable  Reviewed By: plamenko
Differential Revision: D3584627  fbshipit-source-
id: e13cc12c1d36f138175b89616eecd6a4c6978008
",48024,630,18440,"Waseem Ahmad","waseemahmad@fb.com","Facebook Github Bot 7","facebook-github-bot-7-bot@fb.com"
"6318","facebook/fresco","7ed603253d96cde22954abe0a68c15f897751336",5,"2016-08-05 03:55:55-07:00","Add ControllerViewportVisibilityListener for hints
about the drawee entering/exiting the viewport
Summary: For various logging it is useful to know
whether an image has been loaded while it was on
screen. As Android has no definite way to get
information about views entering and exiting the
screen, it is the best when the client provides
this information as hints. This change adds an
optional `ControllerViewportVisibilityListener` to
receive events from a new callback method
`DraweeController#onViewportVisibilityHint`
Reviewed By: oprisnik  Differential Revision:
D3655857  fbshipit-source-id:
6b9d5cd92deeaa03cccddb5a9f5704800571ce12
",48095,630,18519,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot 3","facebook-github-bot-3-bot@fb.com"
"6319","facebook/fresco","48ba43630d9c2c7dbf5caaa0fe765a78bc3ef16b",1,"2016-08-09 12:20:45-07:00","Annotate ResizeOptions as Nullable  Summary:
ResizeOptions in setResizeOptions are actually
nullable, so explicitly set them as such.
Differential Revision: D3688367  fbshipit-source-
id: 77608f95da501a47e9b667653f1ffbc9f1daa062
",48151,637,18634,"Ahmed El-Helw","ahmedre@fb.com","Facebook Github Bot 0","facebook-github-bot-0-bot@fb.com"
"6320","facebook/fresco","b0f994beba4032e61619788c1b5c83524c4b4a13",1,"2016-08-12 14:57:19-07:00","Added warning message if Fresco is initialized
more than once  Summary: Fresco should only be
initialized once, so we should have a warning if
somebody re-initializes Fresco since this causes
everything to be recreated and can result in
memory leaks. We use finalizers to avoid most of
these leaks but it's still something that should
be avoided - especially if you're doing it
unintentionally.  In the future, we plan to crash
here for debug builds.  Reviewed By: kirwan
Differential Revision: D3669241  fbshipit-source-
id: dd9600bdb8d1543cf8f193e76bb7f5b943206231
",48169,637,18636,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot 5","facebook-github-bot-5-bot@fb.com"
"6321","facebook/fresco","3959c15d1b246bd1f4f5f15d634e1f11dc5dfd52",4,"2016-08-24 03:04:09-07:00","Allow setting a RequestListener for individual
ImageRequests  Summary: After this change, one can
add a `RequestListener` to an individual
`ImageRequest`. This is an additional API to the
existing global registration in the
`ImagePipelineConfig` where the listeners would
receive events about every single request.
Reviewed By: plamenko  Differential Revision:
D3757203  fbshipit-source-id:
06f7e7b4dd6fa23b39b5177f52b1e7afab7180aa
",48309,638,18613,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot 4","facebook-github-bot-4-bot@fb.com"
"6322","facebook/fresco","b3a41a9838a1fd886db35d7f9984ac52a813f692",2,"2016-08-30 03:38:02-07:00","Track bitmap created by PlatformBitmapFactory
directly  Summary: Add callercontext to
PlatformBitmapFactory, so can track uses of
PlatformBitmapFactory.createBitmap()  Reviewed By:
kirwan  Differential Revision: D3627698  fbshipit-
source-id:
5b0087c115f0449de2d4abe201dfd0e37bdd68fe
",48545,639,18673,"Jie Wang","jiew@fb.com","Facebook Github Bot 3","facebook-github-bot-3-bot@fb.com"
"6323","facebook/fresco","c83333404edfd9e7d87183e4bedafbd6f34a99c6",6,"2016-09-06 04:22:00-07:00","Adding support for custom Drawable factories
Summary: It's now possible to supply different
`DrawableFactories` to be used to create drawables
for given images.  Reviewed By: kirwan
Differential Revision: D3752140  fbshipit-source-
id: 77f81cbc3d99c1b767206aa59d5c75989aef0225
",48654,641,18728,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6324","facebook/fresco","2a2315424e803e028f79cfd9d1214133167a00d7",8,"2016-09-07 12:09:51-07:00","Adding Support PlatformBitmapFactory.create
functions  Reviewed By: kirwan  Differential
Revision: D3797727  fbshipit-source-id:
713aef9918cec960f5b8610b6e9f4c3d6ebdfa8d
",49083,642,18985,"Bijoy Kochar","bijoysingh@fb.com","Facebook Github Bot 5","facebook-github-bot-5-bot@fb.com"
"6325","facebook/fresco","b212c84f1e3f5d7770b7ac330b3022975968e891",4,"2016-09-07 12:09:53-07:00","Adding additional createBitmap functions  Reviewed
By: kirwan  Differential Revision: D3804792
fbshipit-source-id:
7127907849a079a896cd63b7a39e36b2ba673af2
",49162,642,19100,"Bijoy Kochar","bijoysingh@fb.com","Facebook Github Bot 5","facebook-github-bot-5-bot@fb.com"
"6326","facebook/fresco","36dd783deed7299ecf16b37a2d56cc66d07fb637",4,"2016-09-14 06:29:25-07:00","Replace ImageRequest's auto-rotate flag with
RotateOptions  Summary: This replaces the auto-
rotate flag in ImageRequest with an object
allowing for more control.  Options include
forcing rotation of 0, 90, 180 or 270 degrees or
taking the EXIF metadata.  RotateOptions also
incude an option to defer rotation until the
bitmap is rendered, as drawee supports this.
ImageRequestBuilder.setAutoRotateEnabled(boolean)
is now deprecated and creates default
RotateOptions to use the EXIF data.  Reviewed By:
lambdapioneer  Differential Revision: D3598921
fbshipit-source-id:
832f47442af749f156f95c7e713b9916628fdf8a
",49689,648,19288,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot 5","facebook-github-bot-5-bot@fb.com"
"6327","facebook/fresco","b3f8c267a3d52ac115bdd8e4a839c5a221855165",3,"2016-09-14 06:29:27-07:00","Defer rotation until rendering if appropriate
Summary: This diff checks whether image rotation
can be deferred so that the work can be saved if
resizing is not necessary.  This completes the
implementation of RotationOptions.  Reviewed By:
oprisnik  Differential Revision: D3828958
fbshipit-source-id:
42c6c9a584ce2fbc19b17c32c6eff078fe2298cb
",49771,648,19286,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot 5","facebook-github-bot-5-bot@fb.com"
"6328","facebook/fresco","e7bc501266e03f2c5b146953a7041c041d4aa31c",1,"2016-09-14 06:29:31-07:00","Simplified static constructor methods  Reviewed
By: aagnes  Differential Revision: D3856383
fbshipit-source-id:
cbeeeadfe14754dca5fdd1fd1d23544d9b652896
",49801,648,19295,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot 5","facebook-github-bot-5-bot@fb.com"
"6329","facebook/fresco","554530468d218b6d9abd7f66a8821b08d7af4b03",2,"2016-09-22 03:34:24-07:00","Fixed potential NPE for DraweeConfig without
custom drawable factories  Summary:
`ImmutableList.copyOf` does not support `null` as
a parameter.  Reviewed By: massimocarli
Differential Revision: D3900303  fbshipit-source-
id: a6723583317f16bf16c41969f41a32bfb23546c7
",50090,649,19327,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot 7","facebook-github-bot-7-bot@fb.com"
"6330","facebook/fresco","0a769fded38c4adcc8f09f1998758e74c65d8b5c",2,"2016-09-23 11:49:52-07:00","Converted ImageFormat from an enum to a class
Summary: In order to be able to add new image
formats, it needs to be a class.  Reviewed By:
kirwan  Differential Revision: D3827843  fbshipit-
source-id:
17074e2a44fbd3358c891733ad79bfe9ef27963b
",50159,650,19365,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot 0","facebook-github-bot-0-bot@fb.com"
"6331","facebook/fresco","9b7d33a6f7c920df6e2ad5511ee391015fbd863c",1,"2016-09-29 05:51:30-07:00","Fast Native Blur: Make post proccessor cacheable
Summary: This diff adds the `getCacheKey` method
to the post processor allowing the result to be
cached. It returns cache keys unique to the post
processor configuration of the format  ```
i{mIterations}r{mBlurRadius} ```  Reviewed By:
kirwan  Differential Revision: D3943307  fbshipit-
source-id:
2408a46a69b9bc9bbf4089fe3f77a704959c5cd3
",50359,653,19431,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6332","facebook/fresco","a3aa7f0110be07f18786d0cbc396cf337853026a",3,"2016-10-03 09:42:39-07:00","Added debug overlay for PipelineDraweeController
Summary: It is now possible to display a debug
overlay that shows additional information, like
image dimensions, size, drawable dimensions etc.
Reviewed By: kirwan  Differential Revision:
D3900327  fbshipit-source-id:
f2deea1c929a71009d0d7203f54791c14cd8d3e4
",50550,655,19482,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6333","facebook/fresco","1469512e84394b352405a1d26b92fe4eb5760a8b",1,"2016-10-03 12:10:12-07:00","] DefaultImageDecoder now supports custom decoders
for certain formats  Summary: You can now supply
custom decoders to ImageDecoder.  Reviewed By:
massimocarli  Differential Revision: D3893228
fbshipit-source-id:
b70c9652ae508b69c8cd2d7b34804930290d147f
",50625,656,19497,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6334","facebook/fresco","99566f55f6e2a714a797c7761febdeaa711031c7",2,"2016-10-05 09:51:39-07:00","Make ImageFormatChecker customizable  Summary:
ImageFormatChecker should be customizable so that
custom image formats can be registered.  Reviewed
By: massimocarli  Differential Revision: D3893254
fbshipit-source-id:
d437f77d30d8b517c61b012fddc6f2dc89c12636
",51918,669,19759,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6335","facebook/fresco","b91ae4f637bec69d04ad424b166e7e37c1ae88d3",2,"2016-10-05 09:51:40-07:00","Added ImageDecoderConfig to ImagePipelineConfig so
that custom image formats can be added  Summary:
It is now possible to create a new
`ImageDecoderConfig` where custom image formats
and decoders can be defined.  Reviewed By:
massimocarli  Differential Revision: D3893394
fbshipit-source-id:
4e015c585bbba4e68b82417442777ba151847d5f
",51976,670,19788,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6336","facebook/fresco","f36cb8e80653e678cad2ad715da394d999c5dd12",2,"2016-10-07 14:22:20-07:00","Added custom decoder sample app and simple custom
color decoder  Summary: I have added a new sample
app for custom decoders. The first example is a
simple color decoder that handles
`<color>#rrggbb</color` files and uses a
`ColorDrawable` to actually draw.  Reviewed By:
massimocarli  Differential Revision: D3894510
fbshipit-source-id:
2970c9f5f00b4592afb88443bfa336dd9c643726
",52214,674,19891,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6337","facebook/fresco","c1563ff7a811230eb06933f3634a49643ad1af69",2,"2016-10-11 09:15:38-07:00","Add CacheKeyFactory method to create a key based
on a Uri  Summary: Adds a new method to
CacheKeyFactory which requires just a Uri rather
than a full ImageRequest to create a key for
encoded cache.  This is necessary for media
variations to seek alternative resources from
cache.  Reviewed By: lambdapioneer  Differential
Revision: D4001175  fbshipit-source-id:
d157d15022f838400d3c632f2dab1f7254826e16
",52284,674,19924,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6338","facebook/fresco","b54c73ed2bbb4e2cd347f85a518da5fd5f8b20a7",1,"2016-10-12 09:14:06-07:00","Added DefaultImageFormatChecker  Summary: The
default image format header checks should be
decoupled from the `ImageFormatChecker` class.
Reviewed By: lambdapioneer  Differential Revision:
D3995291  fbshipit-source-id:
f36977b48b09475addb7ac0bd7a2aafb4946400b
",52722,678,19973,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6339","facebook/fresco","59c9c605fe5327190b2bd833e925ca3587f36065",1,"2016-10-19 02:48:54-07:00","Created WebPUtil class in order to get metadata
from WebP images  Summary: Utility class in order
to get metadata from a WebP image  Reviewed By:
kirwan  Differential Revision: D4022110  fbshipit-
source-id:
37afbe5ff7e190307006671150f5fc0a87d9b7ed
",52957,680,20088,"Massimo Carli","maxcarli@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6340","facebook/fresco","8bd558c4daaf98301b331ebf7dccca47b76fb662",1,"2016-10-26 08:28:17-07:00","Added requested image size into ExtraMap  Summary:
Added more extra about decoding  Reviewed By:
kirwan  Differential Revision: D4074109  fbshipit-
source-id:
160661e78606498a98bd42204e53cc748380d191
",53223,681,20125,"Massimo Carli","maxcarli@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6341","facebook/fresco","99de8baecc247af53c393c47046b36509a6955fe",8,"2016-11-11 11:38:23-08:00","Added experimental animated-drawable module and
AnimationBackend  Summary: Added a new `animated-
drawable` module and `AnimationBackend` and
`AnimationBackendDelegate` class that will be used
for a new drawable for animated images.  Reviewed
By: massimocarli  Differential Revision: D4166825
fbshipit-source-id:
7c9a0fe855bafc2409ccb4d640399ebd9fce55f0
",53023,682,20196,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6342","facebook/fresco","574dc03beac551deb0f8eba00e97336e6b021393",1,"2016-11-16 04:29:04-08:00","Added FrameScheduler and DropFramesFrameScheduler
Summary: This adds a frame scheduler and default
implementation that drops frames.  Reviewed By:
kirwan  Differential Revision: D4184539  fbshipit-
source-id:
6848aa24b0cdc365a3daccb215cc0a9aedbfd916
",53273,689,20305,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6343","facebook/fresco","dd4390c0e36cd5da296641b43ec7894350aac6f5",9,"2016-11-16 11:21:26-08:00","Added AnimatedDrawable2 and AnimationListener
Summary: `AnimatedDrawable2` is a simple animated
drawable that uses an `AnimationBackend` to draw.
You can subscribe an `AnimationListener` to get
notifications for animation events.  Reviewed By:
kirwan  Differential Revision: D4166948  fbshipit-
source-id:
03275217e7c66b7cdf08ba63f94e642b03d1d1f8
",53472,692,20445,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6344","facebook/fresco","ff7ecc14d46c95ba9476961ae2a7c8bf402cb2d0",4,"2016-11-17 03:43:41-08:00","Added AnimationBackendDelegateWithInactivityCheck
Summary: This animation backend has an inactivity
check and if it has not been used to draw within
the given time range, a callback will be fired to
the listener to perform a certain action.
Reviewed By: massimocarli  Differential Revision:
D4166877  fbshipit-source-id:
9b0f55d747e442f7844e56cfaf16d1510b2feeea
",53683,695,20503,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6345","facebook/fresco","bba7be57bee93c0a9cfe0dad515a5e5a8d0a5312",3,"2016-11-21 10:29:12-08:00","Added helper class to create ValueAnimators for
AnimatedDrawable2 and the old implementation
Summary: The helper class can be used to create
`ValueAnimator`s for different animated drawables.
These animators can be used to control the
underlying animation.  Reviewed By: lambdapioneer
Differential Revision: D4213155  fbshipit-source-
id: e2e04397fbcebf19c7cdac12da05b221d7d066bd
",53958,699,20613,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6346","facebook/fresco","cf1064cdc815c373f2f58248204712631665c2b9",2,"2016-11-25 13:39:04-08:00","Create static, validating constructors for
ResizeOptions  Summary: Create new static
constructors for ResizeOptions which will return
null if given an invalid input.  This is more
forgiving than the existing constructor and more
convenient as the build chain can be continued
without the need to have a separate if block to
check the values.  Reviewed By: oprisnik
Differential Revision: D4233379  fbshipit-source-
id: 9275bd326347ec4a86e4a44903e1d7219c5042cb
",54053,701,20665,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6347","facebook/fresco","937b6facd1f9c2dcf6b490bc6c0e54984eed372c",3,"2016-11-29 06:19:52-08:00","Added BitmapFrameCache  Summary: The
`BitmapFrameCache` will be used by a
`BitmapAnimationBackend` to cache frames. There
can be various different frame caches, from a no-
op cache to a smart cache that uses Fresco's
bitmap cache and does prefetching.  Reviewed By:
kirwan  Differential Revision: D4239259  fbshipit-
source-id:
dace6f4c32f08f7f645fd248b5a9c906f6b0a9d4
",54360,707,20820,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6348","facebook/fresco","610eead0af47673d9f9176a9daec30641de3fc57",1,"2016-11-29 07:06:43-08:00","Added BitmapFrameRenderer  Summary: The
`BitmapFrameRenderer` will be used by the bitmap
animation backend to render animation frames on a
given bitmap.  Reviewed By: kirwan  Differential
Revision: D4239278  fbshipit-source-id:
75757ad64e0cad0e55b2dd3263661ff54b04e8a3
",54370,708,20855,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6349","facebook/fresco","a3885d5bdcb1303c1e6db0519f91a1f83b560e96",6,"2016-11-29 10:29:11-08:00","Added BitmapAnimationBackend for animations v2
Summary: The `BitmapAnimationBackend` glues all
parts together. The following logic is applied
when a new frame should be drawn:  * Check if the
frame is cached by the `BitmapFrameCache` and just
draw it if this is the case. * Check if the
`BitmapFrameCache` has an existing free bitmap
that can be used to render the current frame. If
we have one, render the new frame using
`BitmapFrameRenderer` and draw it. * Create a new
bitmap using the `PlatformBitmapFactory`, render
the frame using `BitmapFrameRenderer` and draw it.
* Check if the `BitmapFrameCache` has a fallback
frame (e.g. the last drawn frame) and draw it. *
Don't draw anything.  Reviewed By: massimocarli
Differential Revision: D4238112  fbshipit-source-
id: f39325d4c9ef1466e3857d6d30aea7eeeb95ab47
",54730,711,20958,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6350","facebook/fresco","49111ae34c629d31b712b048d9b0f3a6bf775cef",3,"2016-11-29 18:11:57-08:00","Added no-op cache  Summary: Added a no-op cache
that does not do any caching.  Reviewed By: kirwan
Differential Revision: D4239555  fbshipit-source-
id: 56f99402a2ceb9d6a1163b60c2fda2f0ae4f2eb5
",54762,712,20971,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6351","facebook/fresco","651ab379ccf3a57f76b907b20a9ed8a4a7c3f946",1,"2016-11-30 18:05:24-08:00","Added AnimatedDrawableBackendFrameRenderer
Summary: In order to use the new
`BitmapAnimationBackend` for Fresco, we need a
`BitmapFrameRenderer`. This does not support frame
compositing yet, so frames will not be blended
together.  Reviewed By: kirwan  Differential
Revision: D4251156  fbshipit-source-id:
6ffd831fed1929fb97c1c763bc10caa1e4f31f64
",54878,715,21008,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6352","facebook/fresco","742b1c6a96b45747f8bd1f277c3ac8186fa66e17",1,"2016-12-02 06:56:18-08:00","Provide Drawee debug overlay parameter using
Supplier<Boolean>  Summary: Allows enabling the
Debug overlay after initialization of Fresco. With
this change, one can toggle this option while the
app is running and is not dependent on a restart/
Reviewed By: massimocarli  Differential Revision:
D4258822  fbshipit-source-id:
9a17b14bcd44633495377d0187a88f2dc164a7ab
",55141,718,21086,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6353","facebook/fresco","3e1fde1e320cb44c39e6a4ac227109cc95f7f7bb",4,"2016-12-02 07:23:52-08:00","Added FrescoFrameCache that uses
AnimatedFrameCache for caching  Reviewed By:
lambdapioneer  Differential Revision: D4253471
fbshipit-source-id:
1cce88e96e5d8092e911127edac321f1aa517e93
",55255,719,21100,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6354","facebook/fresco","f6ecc72c0bbf9d9f104df56ff8c4c6b9ab155c06",1,"2016-12-02 07:23:54-08:00","Add options to enable / disable bitmap reusing
Reviewed By: lambdapioneer  Differential Revision:
D4258354  fbshipit-source-id:
1a4a944167e1cf571267a82a99b262889c6eb14b
",55263,719,21100,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6355","facebook/fresco","0a978ef1939600298db5d14448fde16990bc1376",3,"2016-12-02 07:23:55-08:00","Added keep last frame cache example  Summary: This
adds a cache that just keeps the last rendered
frame.  Reviewed By: lambdapioneer  Differential
Revision: D4259112  fbshipit-source-id:
6fa787b46e664c1ded9def599b80e643c7660d41
",55324,720,21111,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6356","facebook/fresco","a8bef8190a2379a32930316bedef1ca66ce7926c",1,"2016-12-02 11:05:07-08:00","Use cached frames for image compositing if needed
Summary: This change adds the bitmap frame cache
to the frame compositing renderer  Reviewed By:
lambdapioneer  Differential Revision: D4260430
fbshipit-source-id:
4c2977a8ed814267d03fc0960c86f9088b3c35a6
",55335,720,21110,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6357","facebook/fresco","cc872eb3a5457ff6b7b6ceec4d69749002190dd6",5,"2016-12-07 15:08:50-08:00","Animations2 sample app: Added fragment for the
simple color example  Summary: This converts the
color sample to a Fragment so that we can have
multiple examples as fragments.  Reviewed By:
kirwan  Differential Revision: D4291727  fbshipit-
source-id:
f184bc51986986e6b42a6e8582a6112c208d75be
",55476,722,21145,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6358","facebook/fresco","07dd2996943b5b0e9e0151ff83e42fdbd7db1dba",5,"2016-12-08 08:46:41-08:00","Added BitmapAnimationBackend to sample app
Summary: This adds a simple bitmap animation
backend sample that just renders a color and a
frame number as a bitmap  Reviewed By: kirwan
Differential Revision: D4239885  fbshipit-source-
id: af671a034327ea691229466a644402dcdf502049
",55684,725,21204,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6359","facebook/fresco","cf9037709247f2843b7a6a630ba2baa3f4b7e17a",1,"2016-12-08 10:48:26-08:00","Make the debug overlay correctly handle scale
types  Summary: : After the diff, the debug
overlay correctly accounts for the scale type set.
Before, the debug overlay would, for instance,
complain about 100x100 images that are centered in
a 1000x100 Drawee.  Reviewed By: oprisnik
Differential Revision: D4292504  fbshipit-source-
id: eb51d4de19f07062e1b8eb273b2b1b41a986b87a
",55754,725,21206,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6360","facebook/fresco","04a29969bafb86ec73d949d558eaa61d650827f6",2,"2016-12-12 10:11:05-08:00","Fix CloseableStaticBitmap dimensions for images to
be rotated  Summary: Swaps the width/height in
CloseableStaticBitmap is the image should be
rotated so that they match the size as the image
is seen rather than as the bitmap data is stored.
This fixes #1536.  Reviewed By: oprisnik
Differential Revision: D4313347  fbshipit-source-
id: 71f8f9171f1939375009c06810c6d296c0e169c6
",55884,728,21238,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6361","facebook/fresco","6029c23b2c0d5a10607d63df58953a09785df550",2,"2016-12-14 09:16:14-08:00","Open Source SimpleDraweeSpanTextView  Summary:
This adds `SimpleDraweeSpanTextView` that can be
used to display a `DraweeSpanStringBuilder`.
Reviewed By: massimocarli  Differential Revision:
D4326678  fbshipit-source-id:
6bd07f8590a4f0b4ddb4dad5f04b8cc219a8d8e8
",56220,769,21726,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot-bot@fb.com"
"6362","facebook/fresco","50282d79854520d60b42f0698e7db0c963125661",4,"2016-12-15 04:01:09-08:00","Showcase sample app: add sample about scale types
Summary: This change adds a fragment to the show
case app that illustrates the different scale
types.  Reviewed By: oprisnik  Differential
Revision: D4333131  fbshipit-source-id:
7c098013d1db5c8f312170258fd749267d803cb7
",56331,770,21740,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6363","facebook/fresco","f82e9df48e0d2b3e7a05502d09a9fd1661688345",5,"2016-12-15 08:32:43-08:00","Showcase sample app: add sample about loading
images for notifications  Summary: This change
adds a fragment that illustrates how one can loads
images for notifications using a
`BaseBitmapDataSubscriber`.  Reviewed By: kirwan
Differential Revision: D4333320  fbshipit-source-
id: 432f10db1cdf53a37e5f63d2b0dab2c1f671c7d1
",56403,771,21757,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6364","facebook/fresco","dfaf910742883486ad17cfc85778d6190da7bc92",4,"2016-12-15 08:32:45-08:00","Showcase sample app: clean-up naming  Reviewed By:
kirwan  Differential Revision: D4333326  fbshipit-
source-id:
3f9b59f1cda400ffede61ebb86c6feea10a375bd
",56404,771,21759,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6365","facebook/fresco","fef66a8c462e9445329e9dffd0ed666af8b26c54",4,"2016-12-15 10:13:48-08:00","Added DraweeSpan example to showcase app  Reviewed
By: massimocarli  Differential Revision: D4326704
fbshipit-source-id:
e77eab43de641e74e82635e1b37b84b5b398d8c6
",56582,774,21797,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6366","facebook/fresco","8077a4c4eb65dda71e2def306e1979c2f3532f9f",4,"2016-12-15 11:59:20-08:00","Showcase app: prefetch example  Reviewed By:
kirwan, oprisnik  Differential Revision: D4334029
fbshipit-source-id:
c6cfe6b93538b968a246ee4dee6b140621306d4d
",56665,775,21813,"Felix Oghina","foghina@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6367","facebook/fresco","55452b5ce7510d86f8556c8fe5b0f586e39b2470",3,"2016-12-16 04:22:20-08:00","Added simple abstraction for ShowCaseFragments
Summary: Simple abstraction for ShowCaseFragment
added.  Reviewed By: kirwan  Differential
Revision: D4333210  fbshipit-source-id:
ac96ff91a05b30221c878fffd9b5d157d8232c00
",56812,779,21896,"Massimo Carli","maxcarli@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6368","facebook/fresco","6ed61d352548f2462337a4af9841c3d050d9cabb",4,"2016-12-16 08:00:32-08:00","Showcase sample app: add sample about post
processors  Summary: This diff adds an extensive
example regarding post-processors. I hope the
implementations serve as a guide for best-
practices of doing such kind of image-processing.
The loaded image is deliberately huge in order to
increase the visibility of the speed.  Reviewed
By: plamenko  Differential Revision: D4339385
fbshipit-source-id:
15c95685d1fa12dba5aa4d289e9b219be5fc20e4
",57178,789,22059,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6369","facebook/fresco","4c1f79096d9379da7e451b6179cf66cad3ec984d",7,"2016-12-18 05:00:47-08:00","Added SVG decoder example  Summary: This adds a
simple example how you can use third party SVG
clients to render SVGs with Fresco.  Reviewed By:
massimocarli  Differential Revision: D4334889
fbshipit-source-id:
b9472a365094a728564898dc00eb783991bf5085
",57337,792,22109,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6370","facebook/fresco","985553a24f7d74051d66697d2fbb495ac409f7cc",6,"2016-12-19 05:03:55-08:00","Added Showcase for Keyframes animated images
Reviewed By: oprisnik, lambdapioneer  Differential
Revision: D4334680  fbshipit-source-id:
af2956fa706d4cc75e4405a867e765bc78f81352
",57501,795,22161,"Erik Andre","erikandre@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6371","facebook/fresco","323fececa5ca871d08c1bd53e54c8ffca7008615",6,"2016-12-19 09:16:08-08:00","Showcase app: rounded corners example  Reviewed
By: lambdapioneer  Differential Revision: D4334886
fbshipit-source-id:
f85556f3d8b2d5936cf221688ddf059565785209
",57652,797,22186,"Felix Oghina","foghina@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6372","facebook/fresco","a67271cdc57097c3f7f73c2d6e3cb47b0bb79ce3",3,"2016-12-19 11:22:44-08:00","Showcase app: add hierarchy example (placeholder,
progress, failure images)  Reviewed By:
lambdapioneer  Differential Revision: D4346257
fbshipit-source-id:
a19911369f7f527c1f5dba0ccc60deea8e7b1f6d
",57632,795,22163,"Felix Oghina","foghina@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6373","facebook/fresco","e4534bf595724521772572ac3a69c0979319b42e",4,"2016-12-19 11:26:25-08:00","Showcase sample app: add start fragment  Summary:
The start fragment explains the app's purpose,
directs on how to navigate and offers links to our
GitHub repo and our public documentation.
Reviewed By: foghina  Differential Revision:
D4346487  fbshipit-source-id:
1934f1e9750fb3b11fbd865c9e8c9cdbea088cf0
",57693,796,22177,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6374","facebook/fresco","43eed0d8e4011eee764e68d91a84f783b09c8895",4,"2016-12-21 06:05:23-08:00","Showcase sample app: add sample for demonstrating
animated GIF files  Summary: This change adds a
sample that illustrates how to use animated GIFs.
It allows selecting different sizes that are
likely or not likely to fit into frame caches. The
checker board background options illustrates that
the GIF is indeed rendered with a transparent
background.  Reviewed By: foghina  Differential
Revision: D4352091  fbshipit-source-id:
adba86fad83490c2edc26a47d1bf9a02656feba8
",57899,799,22218,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6375","facebook/fresco","3ed26514e3868c9c7bfc64a1d4d128f0e4bafb32",4,"2017-01-03 13:52:55-08:00","Showcase: Added Drawee rotation example  Summary:
This adds a sample fragment that shows different
`RotationOptions` and their effect on a
`SimpleDraweeView`.  Reviewed By: lambdapioneer
Differential Revision: D4372741  fbshipit-source-
id: 405b713e3c8ae865bae61d4f12b5fc0436e7b13d
",58014,800,22232,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6376","facebook/fresco","a4bec859446c74281c1b6a26029ee3fd17dc285d",4,"2017-01-09 07:34:35-08:00","Moved custom decoder color XML example to the
Showcase app and deleted decoder sample app
Summary: The decoder sample app only had a single
color XML sample decoders since we added the
others to the Showcase sample. I moved the color
XML sample to the Showcase app and adapted it
accordingly and also removed the old sample app
since it's no longer needed.  Reviewed By:
massimocarli  Differential Revision: D4375212
fbshipit-source-id:
cefe4b09c2377f165a9f89799ca93f32b0083671
",58064,799,22217,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6377","facebook/fresco","c6dcedcfbdd94ee26d2911bdfcef30f812551010",1,"2017-01-10 05:36:38-08:00","Provide canonical way to create ImageRequest for
local files  Summary: This change adds a canonical
method `ImageRequest#fromFile` in order to allow
developers not having to care about the correct
way to create URIs for local files.  Closes #1596
Reviewed By: oprisnik  Differential Revision:
D4386923  fbshipit-source-id:
e2edc8f31b7dd2ea7698a5b1bba9fcd47da67923
",58086,799,22223,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6378","facebook/fresco","0947c1e788b7378450e45945c4f71f420948ed7f",11,"2017-01-12 15:32:27-08:00","Added animations v2 media control example
Summary: This adds a simple media control example
for animations v2.  Reviewed By: massimocarli
Differential Revision: D4404478  fbshipit-source-
id: d16d4a39d76fbd3035addb4ab887e4b4202b4b85
",58235,802,22272,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6379","facebook/fresco","645d84dd87a26dae3299f5a69842448bab9d574a",2,"2017-01-18 06:52:52-08:00","Allow setting a custom
PipelineDraweeControllerFactory in DraweeConfig
Summary: Added a method to DraweeConfig.Builder
for injecting a custom
PipelineDraweeControllerFactory.  Reviewed By:
lambdapioneer  Differential Revision: D4422946
fbshipit-source-id:
993fd2c8d6c2410c9726bc1724c4ae65f17220e3
",58451,805,22317,"Erik Andre","erikandre@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6380","facebook/fresco","39417a2b95ccaca1d75b11d9c51a4c73a12b65c4",1,"2017-01-18 17:20:17-08:00","Animations v2: Added frame cache listener
Summary: Listening to frame caching events can be
useful for debugging.  Reviewed By: lambdapioneer
Differential Revision: D4428944  fbshipit-source-
id: ca7e61b059708385490c516f08bc2d67d4546ba8
",58470,805,22335,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6381","facebook/fresco","fc8bf8ce15e82719f4cd05997db35ca8cc3e4869",4,"2017-01-19 16:57:49-08:00","Added debugging framework for bitmap animation
backends  Summary: This adds a debugging framework
to see what's cached and when frames are created /
reused etc.  Reviewed By: lambdapioneer
Differential Revision: D4428997  fbshipit-source-
id: e1c1046ec166577e2f226f12adc87abe8600ade0
",58633,806,22355,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6382","facebook/fresco","01f91fefe7f7b6b285d2305d5b46cacb9c39f153",4,"2017-01-23 02:55:44-08:00","Animations v2: Added naive cache all frames
caching strategy  Summary: This adds a very naive
caching strategy that just keeps a `SparseArray`
for all bitmaps. This is only intended for testing
and doesn't integrate with Fresco's caching
mechanisms.  Reviewed By: massimocarli
Differential Revision: D4429239  fbshipit-source-
id: 64b1b1f5b157bd32b87e1f12c89d66c7086e30b1
",58779,808,22386,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6383","facebook/fresco","88047c2ee9cbad0b9f4695af8f5fa5b65c762e7f",4,"2017-01-26 16:28:40-08:00","Showcase: Added progressive JPEG example  Summary:
This adds a progressive JPEG example to the
Showcase app that displays all rendered scans.
Reviewed By: lambdapioneer  Differential Revision:
D4456653  fbshipit-source-id:
2f2601bce9dbb070c1f851241f60b3537bd27b6b
",58941,809,22401,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6384","facebook/fresco","b8fa4b542e12a55473f5d16a673edc903a65aa56",4,"2017-02-10 04:53:37-08:00","Showcase: Added media picker example  Summary:
This adds a media picker example for 2 different
media pickers.  Reviewed By: massimocarli
Differential Revision: D4536556  fbshipit-source-
id: 67d7068af1b93b051ef788e794fb5794ed6e8272
",58976,808,22404,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6385","facebook/fresco","2c8eb6e3b2cbce88676740fbe2cffe6f3d87ebbd",1,"2017-02-14 09:24:51-08:00","Added actual image resource to SimpleDraweeView
Summary: This adds convenience methods to set
image resources as actual images for Drawee.
Reviewed By: kirwan  Differential Revision:
D4082697  fbshipit-source-id:
1f38c9d17d036b94f875ff257494a6dca736e749
",59089,808,22433,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6386","facebook/fresco","521c4a5f1dfcbe7fc6ba745d8de0d6c95399a041",3,"2017-02-23 03:03:58-08:00","Showcase: Added RecyclerView example (grid)
Summary: This adds a simple `RecyclerView` example
to the Showcase app.  Reviewed By: lambdapioneer
Differential Revision: D4598285  fbshipit-source-
id: 10c168cb5687454cb06198db30578e0e6d08d66f
",59173,808,22445,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6387","facebook/fresco","1929c2fe9100c6fc38acf71d144ed92da109c9ad",3,"2017-02-23 04:23:58-08:00","Added custom image decoder override to
ImageDecodeOptions  Summary: This makes it
possible to use a custom decoder for selected
images only.  Usage:  ```     ImageDecodeOptions
imageDecodeOptionsWithCustomDecoder = new
ImageDecodeOptionsBuilder()
.setCustomImageDecoder(CUSTOM_COLOR_DECODER)
.build();      AbstractDraweeController controller
= Fresco.newDraweeControllerBuilder()
.setImageRequest(             ImageRequestBuilder.
newBuilderWithResourceId(R.raw.custom_color1)
.setImageDecodeOptions(imageDecodeOptionsWithCusto
mDecoder)                 .build())
.build();
simpleDraweeView.setController(controller);| ```
Reviewed By: kirwan  Differential Revision:
D4551537  fbshipit-source-id:
9b6484c395d7348d3b2963611ed43ecb700b6f73
",59192,808,22461,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6388","facebook/fresco","dabece10e6c3f8fc326adee2ed9bba3a723ca164",4,"2017-02-23 04:24:00-08:00","Added image format color override example
Summary: This adds a simple example that sets the
custom color decoder for the given image.
Reviewed By: kirwan  Differential Revision:
D4551569  fbshipit-source-id:
8dcd0929b0f5c4199e680965cb372af8d872d362
",59239,809,22482,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6389","facebook/fresco","3aa032602f8e694087c4fc3365ee3c42c2733c77",2,"2017-04-07 06:15:07-07:00","Added DrawListener and debugging implementation
for AnimatedDrawable2  Summary: This change adds a
`DrawListener` that can be used for debugging
`AnimatedDrawable2`, especially frame scheduling
and drawing performance.  Reviewed By: foghina
Differential Revision: D4843201  fbshipit-source-
id: 0e59251eb544643d94da296a8d4a52dba00a6361
",60496,816,22654,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6390","facebook/fresco","14dc08e6f863c56cd07397f43a10e647ac027010",1,"2017-04-13 05:30:02-07:00","Add sequence creation for qualified resource URIs
Summary: After this change, the fetching of
qualified resource URIs is fully integrated into
the image pipeline. Create a URI for resources
outside your package by using `Uri =
UriUtil.getUriForQualifiedResource(PACKAGE_NAME,
RESOURCE_ID);`.  Reviewed By: foghina
Differential Revision: D4859615  fbshipit-source-
id: 2ff753e57d8c3cd632602dc429300fd8bf9606b1
",60752,819,22736,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6391","facebook/fresco","20cf3680c94be98fe5ef5eb71626de2c9cc134d3",4,"2017-04-18 01:40:33-07:00","Add sample for qualified resource fetching to the
show case app  Summary: This adds a sample to the
show case app that demonstrates how to use
qualifying resource URIs. Those URIs are resolved
using the content resolver and therefore also
allow access to other packages drawables.
Reviewed By: oprisnik  Differential Revision:
D4859618  fbshipit-source-id:
92ccfbdded6e378c102a364e1262a261ce75f5d1
",60788,820,22756,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6392","facebook/fresco","8af5fd16abb84db74e0d12a1198cb8f189d5e893",1,"2017-04-18 11:02:15-07:00","Restructured BitmapAnimationBackend rendering
logic  Summary: This change makes the draw flow
easier to read and simplifies the logic, which
will be similar for preparing frames ahead of
time.  Reviewed By: kirwan  Differential Revision:
D4868702  fbshipit-source-id:
db219a99d80b1b4f5787d8e35468762519e6ea19
",60861,820,22751,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6393","facebook/fresco","7337d7a255870afd65a9911ece68b2d255782e1f",4,"2017-04-18 18:25:11-07:00","Added BitmapFramePreparationStrategy and
BitmapFramePreparer  Summary: The
`BitmapFramePreparationStrategy` decides what to
do whenever a frame is rendered and tells the
given `BitmapFramePreparer` to prepare other
frames.  Reviewed By: lambdapioneer  Differential
Revision: D4875551  fbshipit-source-id:
0cd393232225796df2b9cec0b0b8c820d91a40be
",60943,822,22813,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6394","facebook/fresco","2e0fc5c4b459d6ed0c789d8f64adc0f549257cef",2,"2017-04-20 10:27:54-07:00","FrescoFrameCache now supports caching of prepared
frames  Summary: `FrescoFrameCache` is now able to
cache prepared frames. Since we don't want to
immediately re-use prepared frames, we hold on to
these prepared frame references until they are
drawn once.  Reviewed By: erikandre  Differential
Revision: D4885895  fbshipit-source-id:
6efbea23cfe9329a43f7950f3431429259230917
",61523,826,22902,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6395","facebook/fresco","1aca1997def113ec985860d176bf1788ed6cb902",2,"2017-04-20 11:37:29-07:00","Better FrescoFrameCache bitmap reference
conversion  Summary: The current approach for
converting a `CloseableReference<CloseableImage>`
to a `CloseableReference<Bitmap>` has a flaw: We
constantly do conversions in both directions to
read / write from the cache. This means we create
new ResourceReleasers for one direction and  wrap
the same `CloseableReference<Bitmap>` in new
`CloseableStaticBitmap` objects. This means, that
we always increase the call stack and keep
references to all previous
`CloseableStaticBitmap`. This will eventually
result in stack overflow exceptions and it wastes
memory.  The alternative solution here is to use a
clone of the underlying Bitmap reference instead
in order to be able to immediately close old
`CloseableStaticBitmap`s and to get rid of custom
`ResourceReleaser`s.  Reviewed By: kirwan
Differential Revision: D4921775  fbshipit-source-
id: 93adc493dc24989c8f47a31727ba7fc8a882d1b0
",61540,826,22920,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6396","facebook/fresco","399dea3a21898513dd94b56ffa4ddee70f3d1aea",6,"2017-05-02 03:55:09-07:00","Added custom drawable factory override to
PipelineDraweeControllerBuilder  Summary: It is
now possible to specify different
`DrawableFactory` implementations per drawee
controller. Previously, it was only possible to
set global drawable factories that are used for
all images.  Usage: ```
simpleDraweeView.setController(
Fresco.newDraweeControllerBuilder()
.setCustomDrawableFactory(customDrawableFactory)
.setImageRequest(...)           .build()); ```
Reviewed By: kirwan  Differential Revision:
D4939098  fbshipit-source-id:
3c1bc39401506ca44f3c66786f0827b8a9125acf
",61415,825,22923,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6397","facebook/fresco","474df9442e41b7c4dc8f92c40c01ed56a22ba601",1,"2017-05-03 06:43:56-07:00","Fixed FrescoFrameCache concurrency issues
Summary: `FrescoFrameCache` could potentially
crash in case the closeable static bitmap is
closed by another thread right before the
reference is extracted. The fix is to return null
in case that happens.  Reviewed By: kirwan
Differential Revision: D4993305  fbshipit-source-
id: 22e1e83f0b30c4969e2ece9696ad21283dda1e22
",61418,825,22924,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6398","facebook/fresco","a03539194c8cbfe5390ffffd186c6a0d73c5e809",1,"2017-05-11 07:30:28-07:00","Sonar Fresco plugin: Progress  Reviewed By:
kittens  Differential Revision: D4994781
fbshipit-source-id:
9e3400941b2d27a9b167bfd7db071805996a48fe
",61435,825,22909,"Martin Konicek","mkonicek@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6399","facebook/fresco","1ed1423a626c35d1e27690a520b0381fc27bbfd7",1,"2017-05-16 11:34:38-07:00","Create new version of onNewResult with Status
flags  Summary: In order to allow more information
to be passed, a new version of `onNewResult()` is
added which receives an int called `status`.  For
now, this lives alongside the existing
`onNewResult(T, boolean)` until all consumers have
been edited to implement the new one. This also
means `BaseConsumer` temporarily contains
implementations of both methods. When complete the
old one will be removed and the new one will
become abstract.  Reviewed By: erikandre
Differential Revision: D5060836  fbshipit-source-
id: 1c16b4738ecb55f9b766e72f6e855c9a11b810ca
",61317,822,22897,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6400","facebook/fresco","2043c881fd3d42f842575807a689bec47972ae9b",1,"2017-05-16 11:34:45-07:00","Use/implement new onNewResult in simple
producers/consumers  Summary: Implements and uses
the new `onNewResult()` method in a group of
simple producers/consumers. In all of these cases,
the results are generally just passed through
without need for extra work.  Reviewed By:
erikandre  Differential Revision: D5060868
fbshipit-source-id:
aecba74fb0d79791c238c028ad72c19bea2d6a27
",61333,822,22898,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6401","facebook/fresco","9b1ec9f3046091e4651616bba13b7c5e41309098",1,"2017-05-16 11:34:46-07:00","Use/implement new onNewResult in JobScheduler and
related producers/consumers  Summary: Implements
and uses the new `onNewResult()` method in
`JobScheduler` and the two producers which make
use of it.  Reviewed By: erikandre  Differential
Revision: D5060942  fbshipit-source-id:
d75c93c4d04db0a6b7c0144ca35ffa1db1bba81b
",61339,822,22898,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6402","facebook/fresco","0fed95b7502536cac6debfc29112113e61803d7b",1,"2017-05-16 11:34:48-07:00","Use/implement new onNewResult in
PostprocessorProducer  Summary: Implements and
uses the new `onNewResult()` method in
PostprocessorProducer.  Reviewed By: erikandre
Differential Revision: D5060974  fbshipit-source-
id: 1b693ae7a8eac1883b33feef8146fb51a04c4b1f
",61342,822,22898,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6403","facebook/fresco","81334f10bbbd78cded8185ea1776cf1ae6930276",1,"2017-05-17 03:33:30-07:00","Catch exception when opening an ExifInterface for
a non-jpeg  Summary: Fixes #1558 and #1760.  When
a local file is loaded an attempt is made to load
the thumbnail from its exif data but that is only
available for JPEGs.  Trying the same with a PNG
lead to an `IOException` which wasn't being caught
within the producer. Catching it allows us to
return null which is the appropriate thing to do
if no thumbnail is available.  Reviewed By:
erikandre  Differential Revision: D5077525
fbshipit-source-id:
fdfd8e0bc369e4672729c6e3bfde5b035f836149
",61358,822,22899,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6404","facebook/fresco","bbbcda1d7096775e16d33dadab0477c1882238d8",1,"2017-06-08 12:10:49-07:00","DefaultDiskStorage$FileType  Reviewed By:
erikandre  Differential Revision: D5195118
fbshipit-source-id:
50b06613c28e28ea5d905a30d7e20d393ebc06e8
",61624,824,22952,"Hee Jung","heeheeheejung@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6405","facebook/fresco","48881533b9a4b6c6ae55e5859eabecb583345b36",5,"2017-06-08 17:08:14-07:00","Add BytesRange class and include in ImageRequest
Summary: Create a new BytesRange class and add it
to ImageRequest.  Reviewed By: erikandre
Differential Revision: D5120556  fbshipit-source-
id: 5c1a347aa1f5fbc15eea5a9c7312d5b0bc58f2a1
",61678,826,23005,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6406","facebook/fresco","375d814d58ba98450415178c31ca4eaa64a99921",2,"2017-06-08 17:08:17-07:00","Add Showcase sample for partial loading  Summary:
Adds a sample to the Showcase app in which we can
load part of an image and then follow that with a
request for the remainder of the image.  The first
""load partial"" button loads just the first 30000
bytes of the image and the second launches a
request to load the remainder of the image.
Currently, the first image is cached against the
URI so the rest of the image isn't loaded. This
enables the testing of the implementation as it's
fleshed out in following diffs.  Reviewed By:
erikandre  Differential Revision: D5120995
fbshipit-source-id:
38630c8fa273ba341c32b3e0c66bf37514d4f815
",61756,827,23017,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6407","facebook/fresco","f11ed9049d844c0e31242e6cb690dc55214e9ece",8,"2017-06-11 13:40:39-07:00","Set BytesRange when receiving a Content-Range
Summary: When an HTTP response is received with a
""Content-Range"" header, this creates a
`BytesRange` object.  This is only implemented in
the OkHttp 3 fetcher.  Reviewed By: lambdapioneer
Differential Revision: D5208992  fbshipit-source-
id: 56088f0b3651d8af3c1d00cb0daa15b14f2e1307
",61929,827,23059,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6408","facebook/fresco","c1176a2f28b34e8f3a351a3ca5591cd94b207f11",4,"2017-06-11 13:40:41-07:00","Create PartialDiskCacheProducer  Summary: Create a
new producer and consumer (adapted from the
standard disk cache producers) to deal with
partial image data.  Its main roles are to:  1)
Store partial results in the cache with a
slightly-amended cache key 2) Read partial results
from cache if available and return as an early
non-final result 3) Request the remainder of the
image when the partial result was cached 4) Stitch
the two parts back together  Reviewed By: oprisnik
Differential Revision: D5217064  fbshipit-source-
id: be1142cc46de5c866c1446c3f1e9c1b55f29f525
",62199,828,23096,"Kirwan Lyster","kirwanlyster@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6409","facebook/fresco","f013c8bbad39b2ec1fcb9289384f331a6a3a8a13",2,"2017-06-14 03:56:13-07:00","Add DataSources#waitForFinalResult 2/w  Summary: :
A helper method to allow for synchronous fetches
of decoded and encoded images.  Sample usage:  ```
DataSource<CloseableReference<PooledByteBuffer>>
dataSource =
mImagePipeline.fetchEncodedImage(imageRequest,
callerContext); try {     final
CloseableReference<PooledByteBuffer> result =
DataSources.waitForFinalResult(dataSource);     //
// do something with result     // } finally {
dataSource.close(); } ```  Reviewed By: oprisnik
Differential Revision: D5228893  fbshipit-source-
id: 1c3bfae6f4384d9fc36b7a7c607889d9615e0d5d
",62348,828,23123,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6410","facebook/fresco","9ffc6009b4013853cf7ea3f9fd064bc57f12d978",1,"2017-06-14 08:45:51-07:00","Removed AnimatedImageFactory from
DefaultImageDecoder  Summary: This removes
`AnimatedImageFactory` from DefaultImageDecoder
since we have the more generic `ImageDecoder`
interface instead.  Reviewed By: erikandre
Differential Revision: D5209018  fbshipit-source-
id: aba09c17725e29dc8164021c7c983a6771b28845
",62389,828,23127,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6411","facebook/fresco","14d1e6f6b88320910c49b3438471a16f9a292ea8",2,"2017-06-14 08:45:54-07:00","Change AnimatedFactory implementation to return
ImageDecoders directly instead of
AnimatedImageFactory  Summary: Don't return
AnimatedImageFactory for `AnimatedFactory`
Reviewed By: erikandre  Differential Revision:
D5209209  fbshipit-source-id:
8de1a4e0a0d50a9bcc7ab3eb9b19570d40188ced
",62383,828,23127,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6412","facebook/fresco","e8f384a743adf5b3e48eb9c6d588bc0f230c2966",2,"2017-06-14 08:45:57-07:00","Remove AnimatedDrawableFactory from
PipelineDraweeControllerFactory  Summary:
`PipelineDraweeControllerFactory` should not
depend on `AnimatedDrawableFactory`  Reviewed By:
erikandre  Differential Revision: D5245714
fbshipit-source-id:
e0c2af35ae74520853f44469c3dee250a39ecf74
",62390,828,23127,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6413","facebook/fresco","555322f7ea0f05fcac01288311d446a6cd4976d2",1,"2017-06-16 14:47:43-07:00","Removed AnimatedDrawableFactory from main Fresco
modules  Summary: `AnimatedDrawableFactory` should
only be used in `animated-base`. For everything
else, we have `DrawableFactory` or
`AnimatedFactory`.  Reviewed By: erikandre
Differential Revision: D5256563  fbshipit-source-
id: 4ec1b3bb2ded8c1047166df5ec304a95e1674b73
",62433,829,23140,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6414","facebook/fresco","c8ddf4dcfb46f0e02a75df29d1bcca0cc85bb41a",1,"2017-06-16 15:42:01-07:00","Removed AnimatedFactory usage from
PipelineDraweeControllerBuilderSupplier  Summary:
PipelineDraweeControllerBuilderSupplier shouldn't
depend on AnimatedFactory.  Reviewed By: erikandre
Differential Revision: D5264472  fbshipit-source-
id: 867998b217593375633925b4d88671982add2225
",62428,829,23140,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6415","facebook/fresco","029fe6be57e4117a4d18634d4d439c3de7661030",1,"2017-06-17 03:46:35-07:00","Fixed NPE in ImagePipelineFactories if animations
disabled  Reviewed By: lambdapioneer  Differential
Revision: D5271711  fbshipit-source-id:
ff6435d18927ae851aaab7d29b03fecd19f5e976
",62309,827,23112,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6416","facebook/fresco","bfa2b71466c4a848be4728f59f34df08731ace50",5,"2017-06-30 10:22:49-07:00","Added AnimatedFactoryV2Impl  Summary: This adds an
`AnimatedFactory` for the new animation
implementation.  Reviewed By: erikandre
Differential Revision: D5265009  fbshipit-source-
id: c596e6cc4fc438d55a5044fce81d9b59e5418c90
",62278,826,23093,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6417","facebook/fresco","62c58fdb052d7183fbe48501e67155350384f694",1,"2017-07-12 03:50:01-07:00","Fix IncreasingQualityDataSource to keep low res
image if hi res fails  Summary: Turns out that if
the high res image fails to load (e.g. instant
404), while the low res is still loading, the low
res is cancelled. This diff makes it so that
IncreasingQualityDataSource stores the failure
cause for the high res while waiting for all other
requests to complete.  Related:  *
https://github.com/facebook/fresco/issues/1676 *
https://github.com/facebook/fresco/pull/1677
Reviewed By: oprisnik  Differential Revision:
D5397825  fbshipit-source-id:
95fb9651f016fb38463f3a085366af03a5d33a32
",60322,804,22582,"Felix Oghina","foghina@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6418","facebook/fresco","96c2d1b9657b63c2d015791faa0243ff14ff069e",4,"2017-07-12 08:18:48-07:00","Added transition example to Showcase app  Summary:
This adds a transition sample to the Showcase app
similar to the existing transition app (which will
be removed).  Reviewed By: foghina, lambdapioneer
Differential Revision: D5398272  fbshipit-source-
id: 50df7b6718f46191fb78bcb046fae9a446af7cc4
",60427,806,22611,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6419","facebook/fresco","97c70620eec7da9b57a005cd481f3e9b3e4a41b3",4,"2017-07-12 11:30:50-07:00","Add DataUri sample to showcase app  Reviewed By:
oprisnik  Differential Revision: D5406597
fbshipit-source-id:
95ff2768f15dc7dd1ec3c2a7eeb135ec5c7b904d
",60347,801,22551,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6420","facebook/fresco","aafa199eeb7b0467d6900d059cfac7063ad94edc",5,"2017-07-13 05:02:33-07:00","Add PlatformBitmapFactory to showcase app
(contains rainbows)  Summary: This adds an example
on how to manually create Bitmaps using Fresco's
`PlatformBitmapFactory`. It also demonstrates how
one could handle the `CloseableReference<...>`
correctly within an object with a lifecycle.  When
starting and backgrounding the showcase app, you
should be able to see something like the following
in logcat:  ``` // onStart(): allocating the
bitmaps (256 * 256 * 4 = 2.6 MiB)
com.facebook.fresco.samples.showcase
V/unknown:BitmapPool: Used = (123, 81076240); Free
= (0, 0) com.facebook.fresco.samples.showcase
V/unknown:BitmapPool: get (alloc) (object, size) =
(67234be, 262144)
com.facebook.fresco.samples.showcase
V/unknown:BitmapPool: Used = (124, 81338384); Free
= (0, 0) com.facebook.fresco.samples.showcase
V/unknown:BitmapPool: get (alloc) (object, size) =
(3a6891f, 262144)  // onStop(): releasing the
bitmaps com.facebook.fresco.samples.showcase
V/unknown:BitmapPool: release (free) (object,
size) = (67234be, 262144)
com.facebook.fresco.samples.showcase
V/unknown:BitmapPool: Used = (123, 81076240); Free
= (0, 0) com.facebook.fresco.samples.showcase
V/unknown:BitmapPool: release (free) (object,
size) = (3a6891f, 262144)
com.facebook.fresco.samples.showcase
V/unknown:BitmapPool: Used = (122, 80814096); Free
= (0, 0) ```  Reviewed By: oprisnik  Differential
Revision: D5407889  fbshipit-source-id:
46e8df951fa2ebc87be7a52d059250c7309b8872
",60444,802,22552,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6421","facebook/fresco","a718d175bec9f7e6ff154b788921a29d9eeb6973",4,"2017-07-13 09:12:21-07:00","Add WebP sample to showcase app  Summary: Moves
the WebP samples from `samples/demo` to
`samples/showcase`. This is the final step making
that app obsolete.  Reviewed By: erikandre
Differential Revision: D5415090  fbshipit-source-
id: d52b676cfa8b5a8f85fed3a804eb3c2d0a5d2133
",60300,800,22521,"Daniel Hugenroth","hugenroth@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6422","facebook/fresco","9fdeb547f5c4a2faf10c65d4e0dcf2a3ee12b8f4",1,"2017-07-21 10:21:38-07:00","Support for local content video uri thumbnail
loading  Summary: Current local content URI only
supports image loading, the thumbnail for video is
only supported by file path uri. Closes
https://github.com/facebook/fresco/pull/1833
Reviewed By: foghina  Differential Revision:
D5469879  Pulled By: erikandre  fbshipit-source-
id: a1049d94d301c825f6f08817e46c31a6e2abb8a7
",60242,796,22473,"Frank Chung","frank_chung@htc.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6423","facebook/fresco","ca5b6778cba3bc7b19de95a44b7d3bfb6a2c6a44",3,"2017-08-02 08:18:35-07:00","Added resizing example to Showcase app  Summary:
This adds a resizing example to the Showcase app.
You can select different resize parameters and
also disable resizing. If the debug overlay is
enabled, you'll see the resized image dimensions.
Reviewed By: lambdapioneer  Differential Revision:
D5546178  fbshipit-source-id:
b89501c4dee20216fb7650a65130e719769ceaee
",60339,797,22487,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6424","facebook/fresco","d118ed5deecfac19362dd2d27a3bb208c008ffd3",3,"2017-08-09 06:35:34-07:00","Added image format selector to Showcase resizing
sample  Summary: This adds an image format
selector for the resizing sample  Reviewed By:
erikandre  Differential Revision: D5573536
fbshipit-source-id:
8e45beabb72417e3b67e1ed4a7e0c249e4a9adf0
",60454,795,22477,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6425","facebook/fresco","8d83ed272a0b9602214df8b1004430de302d34cc",2,"2017-08-23 07:49:28-07:00","Added experimental smart resizing, to combine
resizing of JPEGS with downsampling for PNGs
Summary: This adds experimental smart resizing: If
the format can be downsampled, we'll do it (e.g.
for PNGs), if the format can be transcoded
(JPEGs), we'll transcode.  Reviewed By: kirwan
Differential Revision: D5658661  fbshipit-source-
id: 44fd9e6634edc96a8a472bdceb1e4a9ff5fdd56d
",60576,795,22490,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6426","facebook/fresco","08992765ad98918a00866a0f4d40377afcfaba2c",1,"2017-09-04 09:41:59-07:00","Showcase resizing sample can now adapt the drawee
view size  Summary: It's now possible to adjust
the DraweeView size by dragging the bottom right
corner, same design as for media variations
sample.  Reviewed By: erikandre  Differential
Revision: D5764408  fbshipit-source-id:
5a7c51e4ec8de729e40351e3d196603f46149abe
",60596,795,22489,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6427","facebook/fresco","ba395d7059ecf4a9520a1d885d686ddb410535e9",2,"2017-09-14 04:28:53-07:00","Added visible region to platform decoder  Summary:
This updates the `PlatformDecoder` interface to
include an optional region to decode. This can be
used for example to optimize memory usage by just
decoding visible pixels. Note: Not all
PlatformDecoders might support this feature. Right
now, none of them does.  Reviewed By: erikandre
Differential Revision: D5805627  fbshipit-source-
id: 5ce20f284dd556715629b45572447d6c3d503059
",60776,796,22515,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6428","facebook/fresco","784a69840c5ee6d5567a82f99019887677144f17",4,"2017-09-14 08:26:39-07:00","Add @PropagatesNullable to
CloseableReference.of(...)  Reviewed By:
sblackshear, erikandre  Differential Revision:
D5825314  fbshipit-source-id:
0d89799812995f17386200d87ea52a888764af77
",60832,796,22513,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6429","facebook/fresco","d474f4b4770abcc68183834217d4ab2cb6bbad74",2,"2017-09-15 01:29:04-07:00","add missing @Nullable to //libraries/fbcore/src/ma
in/java/com/facebook/common/webp:webp  Reviewed
By: stashuk  Differential Revision: D5841184
fbshipit-source-id:
7bb8e68e364b80b55d5fca6e2aa8c4447e0309ec
",60833,796,22513,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6430","facebook/fresco","4692be0af849699fe64b4ccbe591e0771f4a47bd",2,"2017-09-19 10:37:50-07:00","add missing @Nullable in Objects.java  Reviewed
By: IanChilds  Differential Revision: D5856012
fbshipit-source-id:
8c8cfd7d1f848c5996f81cd83f0f7e065cccf1c0
",60863,796,22517,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6431","facebook/fresco","087344cf1a8638bc2682064aa803872696b6c981",1,"2017-09-19 10:37:51-07:00","add missing @Nullable in
NoOpDiskTrimmableRegistry.java  Reviewed By:
IanChilds  Differential Revision: D5855986
fbshipit-source-id:
09a7f2a3be0a80fc7ff11383d8acc5da8ea07b62
",60864,796,22517,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6432","facebook/fresco","b7642c8e950204d12419ad50db65586a87edc745",1,"2017-10-27 02:07:52-07:00","(FBLite) Adding image id to debug overlay
Reviewed By: erikandre  Differential Revision:
D6159695  fbshipit-source-id:
971c4395c5ab73683d4720daa0ce179eabc599f1
",61008,796,22525,"Davi Catunda Mourão","davicatunda@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6433","facebook/fresco","70a7c0b71a01ca716fa44707b00a4bd9ddacfdf6",1,"2017-11-02 09:47:20-07:00","AbstractDraweeControllerBuilder#setDataSourceSuppl
ier now returns BUILDER  Summary: AbstractDraweeCo
ntrollerBuilder#setDataSourceSupplier now returns
BUILDER  Allow supplier to be set when building
the controller. ```
Fresco.newDraweeControllerBuilder()
.setDataSourceSupplier(supplier)
.build() ```  Closes #1958 Closes
https://github.com/facebook/fresco/pull/1959
Reviewed By: erikandre  Differential Revision:
D6221235  Pulled By: lambdapioneer  fbshipit-
source-id:
b4b79a2f73f76f93b3ef414d6f37590c64f675f2
",61038,796,22525,"Eric Frohnhoefer","efrohnhoefer@twitter.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6434","facebook/fresco","de909ac5819385428e4c788760701b4bdf0e65bc",3,"2017-11-03 06:50:14-07:00","Added benchmark postprocessor helpers  Reviewed
By: lambdapioneer  Differential Revision: D6224758
fbshipit-source-id:
978bfd6cf72388e6cbbeb92f8941a2b69c8c9da7
",61108,799,22566,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6435","facebook/fresco","b85495fb818c5e8ab9257f04f7ae7259666ed9a6",2,"2017-11-03 12:14:41-07:00","Added RoundAsCirclePostprocessor and included it
in Showcase sample app  Summary: This change adds
a `RoundAsCirclePostprocessor` that uses a native
implementation for efficient bitmap rounding.
Reviewed By: lambdapioneer  Differential Revision:
D6224757  fbshipit-source-id:
8eec2e1ea60a903290fdd2a05b25a1945eb614b6
",61142,801,22593,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6436","facebook/fresco","e7448a7681cb9091471af20994a03b794406534f",2,"2017-11-10 10:23:24-08:00","Unit test for URI to URL  Reviewed By: kirwan
Differential Revision: D6246139  fbshipit-source-
id: b34e22e63c0a1615572aa5dd337687bba4e9006b
",61227,801,22592,"Shai Vaknin","shaivak@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6437","facebook/fresco","d4bcaf98e23e6bdd964650350a380667066bfa93",3,"2017-12-01 08:06:38-08:00","add option to scale down rounded images to be
within borders  Summary: Added a flag for
RoundingParams so the image is scaled down within
border when the flag is set true  Reviewed By:
oprisnik  Differential Revision: D6415871
fbshipit-source-id:
b8162feac8169e3eabc4bc2be5635f641a06b875
",61917,802,22707,"Sergey Nikolaienkov","sergeyn@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6438","facebook/fresco","ff3bed97fb05e4d235e5e67009b1e26b7ad384b8",8,"2017-12-12 05:26:10-08:00","RetainingDataSourceSupplier  Reviewed By: oprisnik
Differential Revision: D6474602  fbshipit-source-
id: e23b6a035a73b9a8e433dd22e20d6b9a575f1930
",62071,804,22733,"Zuzanna Mroczek","zuza@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6439","facebook/fresco","a6a6c30be28320902071318d19c12949e91ed156",1,"2017-12-15 11:53:17-08:00","Add support for glb/gltf-binary file/mime type to
MediaUtils  Differential Revision: D6514121
fbshipit-source-id:
4c684d0a26ea0103b626e2afa9dd8e83f0f24412
",62064,804,22733,"Freddie Meyer","fmeyer@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6440","facebook/fresco","086fd1dfc4ee6d772ea50cba7731461120dd95c5",1,"2018-01-16 05:12:13-08:00","Fixed animated image rendering for dynamic frame
dimensions  Summary: This fixes animated image
rendering for frames with varying dimensions. Our
temp bitmap will increase in size during the first
animated image loop and we will then draw the
correct bounds of the set bitmap.  Fixes
https://github.com/facebook/fresco/issues/2015
Reviewed By: erikandre  Differential Revision:
D6726703  fbshipit-source-id:
57602c925bb59481885be3a7ef44e9c85dc76035
",62076,804,22735,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6441","facebook/fresco","ba2be131892bcea9677ffb96228e35795f3e6afe",4,"2018-01-19 05:34:39-08:00","improve RecyclerView sample  Reviewed By:
erikandre  Differential Revision: D6737644
fbshipit-source-id:
aac061a779800f2aa52865a226d3ba5b1abcdd0e
",62203,803,22715,"Felix Oghina","foghina@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6442","facebook/fresco","baa629dd46797a3342a50b918ea0989b63819c87",9,"2018-01-19 09:17:09-08:00","Added basic region decoding sample  Summary: This
adds a very simple region decoding sample to the
Showcase ap. This is not fully working yet. It
only works for JPEGs and if the selected image is
resized or downsampled, the decoded region will be
wrong and you will see a black area around the
actual region.  Reviewed By: erikandre, foghina
Differential Revision: D6759270  fbshipit-source-
id: 576310f74ed85ed27a1303642ddd1cd1285d23de
",62351,804,22727,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6443","facebook/fresco","e7993cc40fd3c0fc0becde2c11039e797813a813",14,"2018-01-19 12:07:41-08:00","Fixed activity transitions to support focus crop
Summary: The `FOCUS_CROP` scale type did not
properly work with activity transitions. I've
added support for setting the focus point and
updated the computations to correctly respect it.
Now, transitions from any scale type to any scale
type should work as expected.  Reviewed By:
erikandre, foghina  Differential Revision:
D6760330  fbshipit-source-id:
8594e0b1228fc09197201194dcb311b35a04b8ba
",62448,805,22738,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6444","facebook/fresco","0c18b3226d1ec4408ae676ade0aa3285e96915e4",1,"2018-02-26 13:46:19-08:00","Added transform begin and end events to zoomable
controller listener  Reviewed By: oprisnik
Differential Revision: D7047525  fbshipit-source-
id: 1a61693599632f119b183673646a720df119edec
",62480,806,21485,"Vishal Yadav","vyadav@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6445","facebook/fresco","692da6b2c1dbb6b94616fc1b4a690cd256b3df22",4,"2018-03-01 13:16:47-08:00","Added Load time in Debug Information  Reviewed By:
oprisnik  Differential Revision: D7089129
fbshipit-source-id:
4b86f3a47e15575b771c98eeacffbdc8d5492d78
",62540,809,21519,"Himanshu Khandelwal","himanshu1491@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6446","facebook/fresco","3f1efb13e7b615ec9862e4628c3d14917dff0630",1,"2018-03-09 16:24:06-08:00","Make ImageRequest#equals more robust  Reviewed By:
oprisnik  Differential Revision: D7215532
fbshipit-source-id:
f39443fc5be169fed328a4c441e88bf05ec60590
",62574,809,21519,"Felix Oghina","foghina@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6447","facebook/fresco","d3b9897de46668493a41787ec333dbee024d2ec2",1,"2018-03-09 16:24:11-08:00","Rename DataSourceWithImageRequest interface to
HasImageRequest and generify  Reviewed By:
oprisnik  Differential Revision: D7218114
fbshipit-source-id:
f9b173460be4754c4d8199d2fe3a3fe8922cc457
",62575,809,21519,"Felix Oghina","foghina@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6448","facebook/fresco","038c057f93c521102cdaa4d146c9142d2665fc7d",3,"2018-03-24 15:09:27-07:00","Added ImageOrigin and ImageOriginListener for
Drawee controllers  Summary: This change adds a
new `ImageOrigin` enum and `ImageOriginListener`
to listen for the origin of a given image, which
can be any of our caches, network, or unknown.  In
this change, the origin listener is only triggered
when the image is served directly from
DraweeController's memory cache without going to
the pipeline. This will be expanded in the future
to work for all origins.  Differential Revision:
D7382307  fbshipit-source-id:
b3bdae67e317d0e606f4bed31a03bd01e3ce0a83
",62693,811,21553,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6449","facebook/fresco","7e55d0e2d2b4a6c45e297f77f2d5e02881d74a5c",1,"2018-03-29 13:48:26-07:00","base controller equality check on cachekey
Reviewed By: erikandre  Differential Revision:
D7428583  fbshipit-source-id:
bcd80397ae34e72fb3a3cfdd4502179be812e8bc
",62703,811,21554,"Felix Oghina","foghina@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6450","facebook/fresco","eefb03014c7b03dc37cde821831cbff406d15de9",34,"2018-04-04 09:22:23-07:00","Fix compilation issues  Reviewed By: foghina
Differential Revision: D7489827  fbshipit-source-
id: b7b8ed7d0469535fbe5c91db802a3d167b71025f
",62702,811,21543,"Erik Andre","erikandre@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6451","facebook/fresco","b76f56ef976ba6b5d6176a2ea02c2261e3b1406d",1,"2018-04-19 08:17:19-07:00","Allow external request listeners to be passed when
fetching an image  Summary: Currently, all image
request listeners have to be set for the
`ImageRequest` using an `ImageRequestBuilder`.
Since `ImageRequest is immutable, it's not easily
possible to add additional (internal) listeners to
for image requests without cloning the request.
Now, it's possible to pass an additional listener
to the `ImagePipeline` when an image is fetched.
Reviewed By: foghina  Differential Revision:
D7383204  fbshipit-source-id:
7d59db31059f4f2bd915cd89f022ba72d20fc1c0
",62751,812,21575,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6452","facebook/fresco","1686a16cdada04333ec88aaf77f2657bbf7e00df",2,"2018-04-20 08:58:01-07:00","Correctly report ImageOrigin when the request goes
through the pipeline  Summary: NOTE: This is a
breaking change for custom Drawee controller
builders that extend
AbstractDraweeControllerBuilder since a new
parameter (controller ID) has been added to data
source generation.  This commit adds proper
`ImageOrigin` reporting if the image request goes
through the image pipeline. There's already
correct reporting for the DraweeController
shortcut that directly returns the image from
cache.  Now, all places should properly report the
correct image origin.  Reviewed By: foghina
Differential Revision: D7383205  fbshipit-source-
id: 5b8bd32e8e155393b22e7e8351ab1dc710ec1dba
",62821,814,21595,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6453","facebook/fresco","5d583375f42803bbd9ce4b9d2683909152f4c046",6,"2018-04-26 11:09:30-07:00","Separate DraweeController creation and
initialization  Summary: Currently,
DraweeController creation & initialization are
mixed, which duplicates quite some code and makes
it impossible to create controller-dependant
components that are passed to the controller when
initialized (i.e. listeners).  NOTE: This is a
breaking change for classes that extend
`PipelineDraweeController`. You need to adjust
your constructor to match the new version. If you
are manually creating controllers, make sure to
properly initialize them.  Reviewed By: foghina
Differential Revision: D7672781  fbshipit-source-
id: 806fc0d0be2d75f4638754a86e7b1fd57ea1b408
",62753,814,21586,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6454","facebook/fresco","ba465a24e9f7c8e34908a3c65c0f3d5388f06382",23,"2018-05-04 08:17:41-07:00","Added image perf logging classes to monitor and
distribute image perf data to listeners  Summary:
Currently, it is quite cumbersome to collect image
perf data and a lot of knowledge on how Fresco
works internally is required. This commit adds an
easy to use image perf logging framework.
Reviewed By: foghina  Differential Revision:
D7673134  fbshipit-source-id:
669e120d8c05c229ecc79e9f4608bf2da6390ee8
",63169,824,21638,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6455","facebook/fresco","5b276aab66b17e338b0b006ecd39452799581249",3,"2018-05-09 08:30:13-07:00","DraweeController: Add support for external request
listeners & properly handle ImageOriginListeners
Summary: External request listeners that are not
part of the ImageRequest can be useful, for
example, for performance logging. This commit
makes that possible.  Also, ImageOriginListeners
are now properly registered if set via the
DraweeController directly  Reviewed By: foghina
Differential Revision: D7862140  fbshipit-source-
id: 5bc2e21fbbdd3ccc5f2ac87052ce7114a968da8a
",63199,824,21638,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6456","facebook/fresco","ed74c258578da1bde4ba9161e0a81ea3aa2295ca",4,"2018-05-10 10:18:43-07:00","Hook up image perf logging framework with
DraweeController  Summary: NOTE: This is a
breaking change. If you implement custom
DraweeControllers, please update your
implementations to match the updated method
signatures.  This hooks up the perf logging
framework. We need to pass the controller down in
order for the correct listeners to be attached
when an image is requested by the data source.
Reviewed By: foghina  Differential Revision:
D7673132  fbshipit-source-id:
3717de484dd23ec020f9ea024c1a83ab4ff674d9
",63302,824,21651,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6457","facebook/fresco","da174e51f8ca9c0e0f7ee65c793af7656eb49967",1,"2018-05-14 06:47:49-07:00","Add intermediate images to perf logging  Summary:
This adds events for intermediate images, e.g. for
progressive JPEGs.  Reviewed By: lambdapioneer
Differential Revision: D7969990  fbshipit-source-
id: 769c43f7a1fcbcb11c046b3ee70b277c568931fa
",63348,825,21662,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6458","facebook/fresco","e1aa81f797583c244817fc334395a13d0e33b3bc",13,"2018-06-07 07:06:08-07:00","Added RoundedNinepatchDrawable  Reviewed By:
oprisnik  Differential Revision: D8084882
fbshipit-source-id:
635281377acb2b9e4adf290ae40aea1192b064cc
",63524,828,21706,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6459","facebook/fresco","9c044c732b45831ae53f5229d5461ae8287add7b",1,"2018-06-13 10:56:45-07:00","Added data source supplier creation with external
request listener  Summary: This allows to create a
data source supplier with an additional request
listener.  Reviewed By: foghina  Differential
Revision: D8395100  fbshipit-source-id:
cf5afd4f0673eb925467cdf0f8e61b522b96c952
",63659,830,21790,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6460","facebook/fresco","1f7ae8b3b885985bbed35e0b0306cdfc0feb88c6",4,"2018-06-14 11:18:46-07:00","ImagePerf: Added separate controller ID and don't
send ImageRequest events  Summary: We already send
events for the Controller listener. By also
sending similar events from the `RequestListener`,
we're duplicating these events without a real
benefits. Instead, we just collect the
information, which can then be used by listeners
later on.  We've also been mixing request IDs with
controller IDs since there was 1 single field in
`ImagePerfData`, so I've added a separate one.
Reviewed By: foghina  Differential Revision:
D8383271  fbshipit-source-id:
522907045c0f9be95fdd4f52cf2c63f49717717c
",63687,830,21792,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6461","facebook/fresco","d9ed8237d695306d66af2a8ba9a9dcfbff9f9a86",2,"2018-06-21 04:31:52-07:00","Added external request listener to more
ImagePipeline methods  Summary: This change adds 2
convenience methods to fetch encoded and decoded
images with additional request listeners.
Reviewed By: erikandre  Differential Revision:
D8537987  fbshipit-source-id:
de99131c2ec549f095deb6d15018b97b182e6839
",63694,830,21814,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6462","facebook/fresco","e1145cfce57bb1b31dbd88d59a353a484a91cc80",1,"2018-06-26 10:25:15-07:00","Mark object passed in .equals() as nullable
Reviewed By: foghina  Differential Revision:
D8619381  fbshipit-source-id:
fef2082ac0d128e1230335341522c40fe3058d3c
",63838,832,21827,"Christopher Frazier","clf@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6463","facebook/fresco","723045f1adb9dfd7e56296c14446fa9c463ae810",1,"2018-07-13 09:31:39-07:00","Added BaseBitmapReferenceDataSubscriber  Summary:
We have `BaseBitmapDataSubscriber` but no
`BaseBitmapReferenceDataSubscriber`. We should
have the latter to be able to get `Bitmap`s more
easily.  Reviewed By: erikandre  Differential
Revision: D8835127  fbshipit-source-id:
dc329b061b3e0289bc8e3631902208bc7e92fda1
",64006,837,21907,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6464","facebook/fresco","2116559bad1dcd03b4a86be1c9863eb5685f6b8b",1,"2018-07-20 18:51:56-07:00","Optimized MovieFrame#renderFrame  Reviewed By:
oprisnik  Differential Revision: D8940188
fbshipit-source-id:
de8186e95058214cbca263d53e50cc4d945c0490
",62569,833,21761,"Marshall Mann-Wood","mrmannwood@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6465","facebook/fresco","cdbd6eadd2d2bd1d4ec307565f66b8b1719c529d",10,"2018-08-07 06:23:52-07:00","Support Re-using Bitmaps with RGBA_F16  Summary:
If the Bitmap Config is RGBA_F16 it uses 8 bytes
per pixel when computing the bitmap size. And if
the image is wide gamut but the bitmap config does
not use RGBA_F16, the size of the bitmap is
manually computed to ensure that the requested
size is accurate.  I created a new OreoDecoder to
differentiate bitmap size computation and removed
code duplication in decoders.  Reviewed By:
oprisnik  Differential Revision: D9119486
fbshipit-source-id:
8d162dfc0253789c690fe2677ac2f116b1981bef
",62860,838,21820,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6466","facebook/fresco","a7873dc6515853df257b3414d9cb1e0c7aa7d09d",2,"2018-08-07 06:23:55-07:00","Performs color space conversion at load time
Reviewed By: oprisnik  Differential Revision:
D9119484  fbshipit-source-id:
dc6e06f83a3a03732d48b3d06f9ef9808a9bf33c
",62935,838,21891,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6467","facebook/fresco","9ccf32e8c9bdaf0a82450943a0aa5d50e15c379b",3,"2018-08-10 09:08:07-07:00","Added Nullable annotations to
DefaultDrawableFactory  Summary: The animated
drawable factory is completely optional and we
already have null checks in place.  Reviewed By:
erikandre  Differential Revision: D9267754
fbshipit-source-id:
eaecf7cd247c747965e0397c0ec0836e2db4fef5
",63073,839,21899,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6468","facebook/fresco","b464ceb7f02272ae5b2f95a78067bdb9df5544f0",3,"2018-08-13 02:31:39-07:00","Implementation of BufferMemoryChunk using a
ByteBuffer.  Reviewed By: erikandre  Differential
Revision: D9216322  fbshipit-source-id:
14cfe83f6554d5d1da5bec2e599691020d432e3e
",63237,843,21959,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6469","facebook/fresco","ba9539c4ae992d0412e80ba8af6f50907a572b98",3,"2018-08-13 02:31:43-07:00","Refactoring of PooledByteBuffer and
PooledByteBufferOutputStream using generic
MemoryChunk.  Reviewed By: erikandre  Differential
Revision: D9216326  fbshipit-source-id:
9cf0ab22fff5d3f548d630c6f88e1e229a1581c0
",63225,844,21891,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6470","facebook/fresco","64bbab4fb6406b7b0cec149ebc94e3484c4563e1",1,"2018-08-13 02:31:49-07:00","Support WebPImages and GifImages with
BufferMemoryChunk and the underlying ByteBuffer.
Reviewed By: erikandre  Differential Revision:
D9216324  fbshipit-source-id:
af624c25efaba6276689b4f85674e582906848a3
",63364,845,21923,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6471","facebook/fresco","07a4fa4e0d1a8d4c3eeb39e1bb4aa5d9031e9b73",3,"2018-08-14 13:10:02-07:00","Add ImageBoundsListener to the zoomable controller
Summary: In this diff, I've added an interface
ImageBoundsListener to the zoomable controller so
that actions can be performed after we know that
the image bounds have been set.  Reviewed By:
alexdao  Differential Revision: D9272459
fbshipit-source-id:
47405edf6a4c9424c8a48182cd5a0913e5712a9e
",63617,848,21950,"Amanda Xia","amandaxia@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6472","facebook/fresco","ff2bc569a23545352eb0a88d26f72f0a1de4a9bc",1,"2018-08-17 04:14:21-07:00","Fixes loading WebP images in API 18 with WebP
Support experiment enabled  Reviewed By: oprisnik
Differential Revision: D9358977  fbshipit-source-
id: 58c7b450260fc7dc3d4d7d0311f8de3bbfe26b79
",63622,848,21950,"Aditya Sharat","adityasharat@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6473","facebook/fresco","87727e81e13e475eaf305029bc0775fb50d99e41",4,"2018-08-21 03:42:21-07:00","Create image transcoder interface and an
ImageTranscoderFactory class  Reviewed By:
lambdapioneer  Differential Revision: D9333483
fbshipit-source-id:
52c850135239ff447c1f3c27aef7c647dca2b208
",63729,854,22026,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6474","facebook/fresco","ea311f6c8d089f94b3e366ee579fad60cb0453e3",9,"2018-08-21 03:42:25-07:00","Refactoring: Simplification of
ResizeAndRotateProducer  Reviewed By:
lambdapioneer  Differential Revision: D9333482
fbshipit-source-id:
bc652bdede4085126250712f6df1646a00738820
",63881,855,22032,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6475","facebook/fresco","5e065e297c831e5eb6a46f1d951ed7e531436436",2,"2018-08-21 09:36:34-07:00","Fix broken ResizeAndRotateProducer  Reviewed By:
defHLT  Differential Revision: D9421949  fbshipit-
source-id:
b7993ea154e7be9eeef6bb8609481d7ecd43f1cd
",63952,856,22048,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6476","facebook/fresco","46d755a1cc9d64824c838720cc6e364a524fcb3a",1,"2018-08-23 14:42:24-07:00","Add missing @Nullable to TriState.java  Summary:
Fix the missing `Nullable` warnings reported by
Infer  Reviewed By: lambdapioneer  Differential
Revision: D9478690  fbshipit-source-id:
fe0d48729f0481b87747496ffb438d44856de2d1
",64013,856,22026,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6477","facebook/fresco","3c9d23d4fabd8b28acb46d42bc78876077ef6589",4,"2018-08-24 09:20:14-07:00","New ImageTranscoder interface  Reviewed By:
lambdapioneer  Differential Revision: D9455519
fbshipit-source-id:
0f3682fc31eecfb1aa9c6536155132a40882db64
",63969,856,22030,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6478","facebook/fresco","f6cf5681ba627635cb6fa396e3702ae9c5e6d113",8,"2018-08-27 06:42:25-07:00","Add BucketMap  Reviewed By: oprisnik  Differential
Revision: D9481986  fbshipit-source-id:
f8abb76c07440a246e37be4177c2dc1b6d7cf04f
",64125,858,22075,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6479","facebook/fresco","2daaec924ed866c34e8d4534c99e1e0aebed3249",6,"2018-08-27 06:42:27-07:00","Add simple LRU pool implementation  Reviewed By:
oprisnik  Differential Revision: D9481987
fbshipit-source-id:
ae330825dc78b6510e629862803ae9dbb30b3056
",64266,863,22127,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6480","facebook/fresco","0c5fbe5c87aca3eaaabbf707a5e1836fecf7c809",1,"2018-08-28 04:58:04-07:00","Implementation of new PostProcessor  Reviewed By:
lambdapioneer  Differential Revision: D9420598
fbshipit-source-id:
081a7e911b2097bd1d1b5dca8d934dcce56183db
",64542,869,22241,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6481","facebook/fresco","f55654098361b88ce6461dd14f25a5407ef61f3c",1,"2018-08-31 08:45:44-07:00","Check bitmap reusability  Summary: Context: Some
components recycle bitmaps manually before closing
the reference. Fix: Check that bitmap is not
recycled and is mutable when putting/getting
to/from the pool; report soft error otherwise.
Reviewed By: oprisnik  Differential Revision:
D9608432  fbshipit-source-id:
9a709de6e4364eb9c7886707a7d9b3c156210383
",64577,869,22243,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6482","facebook/fresco","d2d27032da155b5ee81713fd332f72d5136b39c1",2,"2018-09-03 02:06:22-07:00","New image rounding post processor  Reviewed By:
lambdapioneer  Differential Revision: D9539715
fbshipit-source-id:
0c23b39d2549f552e9667fe9f5588f36f76b86ae
",64831,875,22303,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6483","facebook/fresco","d8632ab6ad7e6fa286f6c7efe0220aba0a0e5113",1,"2018-09-03 20:48:48-07:00","add missing @Nullable on the return types in
//libraries/fresco/animated-base/src/main/java/com
/facebook/imagepipeline/image:image  Differential
Revision: D9478143  fbshipit-source-id:
386f2d21a52b9fa63833b4ce9158f3956f32ad52
",64836,875,22303,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6484","facebook/fresco","d9999ae4995dcbe618b0abdd1d65a0a6fc0bd89b",2,"2018-09-05 13:09:38-07:00","Move eraseColor in bitmap pool to more appropriate
place  Reviewed By: oprisnik  Differential
Revision: D9654763  fbshipit-source-id:
5188251451c700a433aeb3a28272d19d3b9a77d5
",64843,875,22305,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6485","facebook/fresco","c3df8258260b723c503bcddaecbd0e4563bb9dde",1,"2018-09-11 12:05:25-07:00","Removed GifLite from sidebar and made it an option
in Gif  Reviewed By: oprisnik  Differential
Revision: D9758915  fbshipit-source-id:
623647690da3ae43a91090b086e763a8a186e00d
",64903,875,22305,"Marshall Mann-Wood","mrmannwood@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6486","facebook/fresco","39d7c6bacde1505a044164d261e5826d6b3f3f0b",10,"2018-09-14 04:01:49-07:00","Implementation of a simple non native image
transcoder  Reviewed By: oprisnik, lambdapioneer
Differential Revision: D9633432  fbshipit-source-
id: 581194e168299a981c254a640a873ba8d7c6c747
",65361,880,22365,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6487","facebook/fresco","21f3118f1df41ea24a7e8cfdfa3631030989ae11",2,"2018-09-14 04:01:51-07:00","Allows to disable native code implementation
Reviewed By: oprisnik  Differential Revision:
D9633431  fbshipit-source-id:
14ff7d9982a537bc89c2df9b109f31f729d2a54a
",65393,880,22372,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6488","facebook/fresco","88afdb2437cdfc8e7a3fb996cd063fd8b4acc6b1",2,"2018-09-20 04:03:01-07:00","Move cache methods from FrescoContext to
ImagePipeline  Reviewed By: oprisnik  Differential
Revision: D9906720  fbshipit-source-id:
356d09f91516e82869e67e21b1da843337f85382
",65413,880,22381,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6489","facebook/fresco","dd0a6115c561b89c522ccb32178510f408c62743",4,"2018-09-20 13:23:31-07:00","Added in-place bitmap transformation to
DefaultImageDecoder  Summary: This adds an
alternative to postprocessors that instead of
duplicating the original bitmap and caching both
the original and postprocessed image just applies
an in-place transformation and only caches the
resulting image.  Reviewed By: defHLT
Differential Revision: D9941518  fbshipit-source-
id: 916497ce1e538be5668a9ee1c47589a3a9c62961
",65454,881,22415,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6490","facebook/fresco","173eed38897bff63f5659039826a33de0132f3de",3,"2018-09-21 17:20:43-07:00","Proper support for GIFs when using a
RetainingDataSource (#2185)  Summary: During the
development of the Giphy app we choose to use
fresco as our main image library. The application
loads different types of image renditions,
starting from low-quality images to high-quality
ones. We wanted to be able to change the quality
of a GIF displayed in a `DraweeView`.  When making
a simple request to change the resource of a
`DraweeView`, fresco will clear the current
content, display the placeholder, then load the
new resource. Even with the resources preloaded,
there is a noticeable flickering.  Available
solutions: 1. Use a low-res/hi-res schema for
loading images. Unfortunately, in this schema, the
low-res image is not animated. 2. Use a
`RetainingDataSource`. While it's purpose was
exactly what we were looking for, it turns out
that this data source, does it's magic by lying to
the `AbstractDataSource` code and keeping it in a
forever `PROGRESS` state. That means, the
datasource will never get to notify the listening
controllers. This is the reason GIFs are not
playing and controller callbacks are not fired
using this `DataSource`.  Given a list of GIFs, by
using a `RetainingDataSource` we should be able to
replace the current playing view with a freshly
loaded one, without the user notice any flickering
or blank spaces between the 2 resouces.  I've
created a set of test GIFS in the
`ImageUriProvider` and I updated the
`RetainingDataSourceSupplierFragment` to use those
resouces, in order to demonstrate the new achieved
behaviour.  **Demo video:**
https://youtu.be/A67X6Vn9VjY Pull Request
resolved:
https://github.com/facebook/fresco/pull/2185
Reviewed By: erikandre  Differential Revision:
D9446858  Pulled By: oprisnik  fbshipit-source-id:
dd30f00818eb7ab80b468e0a1ed243a700c51ae3
",65515,881,22421,"Cristian Holdunu","cristian.holdunu@gmail.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6491","facebook/fresco","8dafec9051ecda348013bccab5d8fc2a8cb88634",17,"2018-09-24 07:33:50-07:00","Fix ForwardingDrawable support for null underlying
Drawables  Reviewed By: astreet  Differential
Revision: D10008352  fbshipit-source-id:
e7b8813aef39f38f16058396a62d2967d80f7394
",65544,881,22427,"Marco Cova","marcocova@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6492","facebook/fresco","7abfc021b3bc45c38fb35dc6101cf8d53352b384",1,"2018-09-24 12:44:39-07:00","Break apart register method to allow access to
found ListenableActivity  Reviewed By: denley
Differential Revision: D9952301  fbshipit-source-
id: 98aafe4d1b62de39acf127a7b86dbb15fa445418
",65542,881,22427,"Karan Bhatia","bhatia@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6493","facebook/fresco","4a23039eaa8b6b6d78a8d634080b515f2eb448e6",6,"2018-10-02 07:09:08-07:00","Use different image transcoder for HEIF files
Reviewed By: lambdapioneer  Differential Revision:
D10083254  fbshipit-source-id:
14a9f6f18058947d6b83f961526eb43d3e0c7585
",65653,883,22453,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6494","facebook/fresco","2ae15501ad3fc132528f100990b9c06de4846e3a",6,"2018-10-09 06:31:53-07:00","Simplifies enabling Fresco non-native
ImageTranscoder in ImagePipelineConfig  Summary:
Simplifies constructing an `ImagePipelineConfig`
with the java-only `ImageTranscoder` by passing an
`ImageTranscoderType` instead of having to
construct the object. The current implementation
was too complicated and tend to push clients to
disable only the native image transcoder and keep
native memory allocation by writting: ```
ImagePipelineConfig config =
ImagePipelineConfig.newBuilder(context)
.experiment()         .setNativeCodeDisabled(true)
.setMemoryChunkType(MemoryChunkType.NATIVE_MEMORY)
.build(); ``` This version was easier to write as
it didn't require to construct a
`SimpleImageTranscoderFactory` and having to
determine the parameters to pass, but it didn't
feel natural. This diff simplifies this process
and clients can now write it like this: ```
ImagePipelineConfig config =
ImagePipelineConfig.newBuilder(context)         .s
etImageTranscoderType(ImageTranscoderType.JAVA_TRA
NSCODER)         .build(); ```  Reviewed By:
oprisnik  Differential Revision: D10255443
fbshipit-source-id:
e17d034c3ee06526e6ebe9e11e9bbd4bf1518f33
",65843,884,22465,"Mikael Morales Gonzalez","moralesmikael@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6495","facebook/fresco","695b161427d1cbee124e60a4219a5aa208f0b5f9",1,"2018-10-09 14:39:30-07:00","OkHttp: Allow enabling OkHttp caching for network
requests  Summary: This allows to enable OkHttp's
caching for network requests. It can be combined
with disabling Fresco's disk cache to solely rely
on OkHttp for network caching.  Reviewed By:
erikandre  Differential Revision: D10255600
fbshipit-source-id:
8012e0aa8102d8f8138480260bdfd37b96e8e333
",65852,884,22475,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6496","facebook/fresco","7d67c7ffa8919d8a3c99f0ccefa75830a41179b9",1,"2018-11-01 09:26:16-07:00","Expose ID generation and submitFetchRequest
Summary: This change exposes Request ID generation
and `submitFetchRequest`, which allows developers
to manually create a `ProducerContext` and
`ProducerSequence` and fetch the image.  Reviewed
By: defHLT  Differential Revision: D12881179
fbshipit-source-id:
160114240a97b1e8fecd7671ba54e9095fb40011
",65878,884,22476,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6497","facebook/fresco","1205892cd5a9b5d8f7c1c7a83ad77836e6cf2332",1,"2018-11-01 12:04:45-07:00","Added a function in BitmapUtil to get the
dimensions of an image from its Uri  Reviewed By:
oprisnik  Differential Revision: D12818477
fbshipit-source-id:
7a91f6f9b0fa244bd09d5464d4e768613ec55a96
",65892,884,22482,"Nikhil Thota","nikhilthota@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6498","facebook/fresco","d10b6a1062c55dd0c3299c9e0d8de67bb0706af9",4,"2018-11-04 14:07:59-08:00","Add 'component tag' field to Image Perf data
Reviewed By: oprisnik  Differential Revision:
D12918238  fbshipit-source-id:
8a43b9299d83e3ad38f98e1eae53e0a217b0385b
",65904,884,22482,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6499","facebook/fresco","839b5a122ad5295d2b39a92ea666b540de42f2da",1,"2018-11-14 06:27:27-08:00","Register LruBitmapPool as memory trimmable
Summary: Register new LruBitmapPool with
MemoryTrimmable similarly to BucketsBitmapPool.
That allows to trim pool when app goes into BG and
other cases.  Reviewed By: oprisnik  Differential
Revision: D13036271  fbshipit-source-id:
69f9b1fc0a061a1da4234e857fdff1c7dc3c007e
",65928,884,22483,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6500","facebook/fresco","4f4dafa0ec58afc9a4b1f4e5a91b98b782698c14",1,"2018-11-14 15:03:44-08:00","Add animation to two-tap sticker attachment
preview  Differential Revision: D13047385
fbshipit-source-id:
415bf8e5dadf742ed3fac4a5b96b57e15e995d05
",65929,884,22483,"Xianda Xie","xianda@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6501","facebook/fresco","53d7ce4016ee3908831d77406ac0a69c3e023db7",11,"2018-11-14 18:37:32-08:00","Fix the Return Not Nullable bugs in //libraries/fr
esco/imagepipeline/src/main/java/com/facebook/imag
epipeline:imagepipeline  Reviewed By:
jeremydubreil  Differential Revision: D12934748
fbshipit-source-id:
83b8c3c3f141560b7b04f8baaa32c570a2c86571
",65919,884,22475,"infer","infer@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6502","facebook/fresco","027f95d683a4084c7340bf9b29b8712ce4feab34",1,"2018-11-16 10:48:01-08:00","GifAnimationBackend  Reviewed By: oprisnik
Differential Revision: D13089206  fbshipit-source-
id: 1e055af255449c6d55b5ba515c4504a78a485eae
",66282,884,22528,"Marshall Mann-Wood","mrmannwood@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6503","facebook/fresco","1a91f6449b68e814e9e7d34a8a49303f86d0ebaf",25,"2018-11-26 17:59:23-08:00","Fix the Return Not Nullable bugs in all targets
with 5 or less bugs  Reviewed By: jeremydubreil
Differential Revision: D13001903  fbshipit-source-
id: f85724874d94be0b6fdf3a2cd3dad33389207935
",66283,884,22526,"Andrew Scott","andrewscott@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6504","facebook/fresco","908310eb636b0543d7e7016f4c33dda13ceec19a",3,"2018-11-30 14:56:31-08:00","Add secondary constructor to ScaleTypeDrawable
with focusPoint  Reviewed By: oprisnik
Differential Revision: D13194098  fbshipit-source-
id: 3cc54a5d96c494e7e9bd5b580da80b9454f230f9
",66289,884,22532,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6505","facebook/fresco","a6b47b94b229ea8549ea4bc70bd22970e97ba465",1,"2018-12-07 06:24:44-08:00","New native image transcoder module  Reviewed By:
lambdapioneer  Differential Revision: D10026614
fbshipit-source-id:
0cbf3d7454d2aeceb8de119dc811dc0339c9c0c5
",66329,887,22558,"Erik Andre","erikandre@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6506","facebook/fresco","ff4be48745c0beb3188cec830f95f3fd13b726cd",3,"2018-12-19 06:05:44-08:00","Rotate local resource drawables  Reviewed By:
erikandre  Differential Revision: D13467456
fbshipit-source-id:
4a91bd5681d1e7390185883403cb0ed6d7f8082f
",66366,888,22566,"Alpár Gábos","alpar@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6507","facebook/fresco","f8991e1296ba0160da30b0bcbb4b7df927964e73",1,"2019-01-16 04:30:56-08:00","Handle Bitmap.Config.HARDWARE in DefaultDecoder
Summary: Prevent decoder from reusing bitmap when
config is Bitmap.Config.HARDWARE.  Reviewed By:
oprisnik  Differential Revision: D13607421
fbshipit-source-id:
ae8cf64c56f54d278cea7f496648aa64033313df
",66393,889,22576,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6508","facebook/fresco","6ca0fa9ea5efe4dca1ad41e252f8d0af36f2c2b2",5,"2019-01-16 05:43:47-08:00","Add option to control prefetching to bitmap cache
per request  Summary: Add option to control
prefetching to bitmap cache per request  Reviewed
By: oprisnik  Differential Revision: D13654180
fbshipit-source-id:
c0872aeed44cd6b4212505f9153c4e5daf7b9d12
",66412,889,22582,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6509","facebook/fresco","d5036014e72b9091ce7662faa3f4996f96d9a730",5,"2019-01-19 17:32:53-08:00","Add image request option to override default
network images resizing  Summary: Add image
request option to override default network images
resizing  Reviewed By: oprisnik  Differential
Revision: D13731787  fbshipit-source-id:
fc13a4a5f595c14c5c3c96f61c5cf0483e991bb6
",66429,889,22588,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6510","facebook/fresco","b91ec462bc5daf5ab916398b3077c8652da6213d",1,"2019-01-30 11:21:58-08:00","Fix Nullsafe type errors in FrescoSystrace.java
Differential Revision: D13870734  fbshipit-source-
id: d850ff1eafcad9c2369b72a1ad5502eb35e36ed5
",66430,889,22588,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6511","facebook/fresco","7a718918d5370090090aaa27032183dd723dd5dd",1,"2019-01-30 13:52:26-08:00","Fix the Nullsafe type errors on
UiThreadImmediateExecutorService.java
Differential Revision: D13876114  fbshipit-source-
id: fb398c131e9946e21cde4eb32b536f1928a310ef
",66431,889,22588,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6512","facebook/fresco","91b78c9420e5a02269d3f8c42553f2b94f008f72",1,"2019-01-30 13:52:26-08:00","Fix the Nullsafe type errors in
DeferredReleaser.java  Differential Revision:
D13876269  fbshipit-source-id:
0259423ebbb5c61291694625172b72720b10f799
",66432,889,22588,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6513","facebook/fresco","9753f6865f4b0e8966d86c373fdde24377698706",1,"2019-01-30 13:52:26-08:00","Fix the Nullsafe warnings on GestureDetector.java
Differential Revision: D13876283  fbshipit-source-
id: a0cc561c2f62c5ffabea2d2b84c4d96662853468
",66433,889,22588,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6514","facebook/fresco","9b070bee949828ed635fcf2f89a146efbbcdd781",2,"2019-01-30 13:52:26-08:00","Fix the Nullsafe type errors on StatFsHelper.java
Differential Revision: D13876304  fbshipit-source-
id: f36d20aece53d9d0559ff5f948cc4fa5867a950d
",66433,889,22588,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6515","facebook/fresco","742735e476593958e37ea0e95d72249369696201",1,"2019-01-31 10:53:58-08:00","Make controller listener protected in
AbstractDraweeController  Reviewed By: oprisnik
Differential Revision: D13844937  fbshipit-source-
id: 4630ca7f74af8e203c000982f0920e19e19d366f
",66433,889,22588,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6516","facebook/fresco","3e911bcc3dee2f28248836df08b20fd5d31e93c5",1,"2019-01-31 12:07:21-08:00","Fix the Nullsafe type errors on //libraries/fbcore
/src/main/java/com/facebook/common/file:file
Reviewed By: IanChilds  Differential Revision:
D13893220  fbshipit-source-id:
aa8b26eef5201e16a338414517f175e98949117c
",66434,889,22588,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6517","facebook/fresco","db8a12e0ae535e23be7d8c0db9077a1750d58278",1,"2019-02-01 09:18:10-08:00","Fix Nullsafe type errors on //libraries/fbcore/src
/main/java/com/facebook/common/executors:executors
Differential Revision: D13893566  fbshipit-source-
id: 39f8a3becc84c75d180955f30e715b3e3252afc9
",66544,890,22593,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6518","facebook/fresco","90f7aa6f919f4719cdb9feb288d03a4afbef0498",1,"2019-02-03 08:04:18-08:00","Expose hasCachedImage for ImagePipeline  Summary:
This allows users to quickly check if a given
image is in bitmap cache.  Reviewed By: defHLT
Differential Revision: D13923194  fbshipit-source-
id: ae1300d4466ffcc07c24251a22a35b38dab26ef8
",66554,890,22599,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6519","facebook/fresco","6705e8716df76ddf566e4942c6726083372dd219",1,"2019-02-04 17:55:01-08:00","Fix the Nullsafe type errors on ImageFormat.java
Differential Revision: D13948424  fbshipit-source-
id: fe21e41b94dfdd9214c6c1c36a791012836ffe2c
",66554,890,22599,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6520","facebook/fresco","eb58399fa9d59470b9f03bbd6be1b4815d1ceda9",3,"2019-02-05 08:33:08-08:00","Fix the Nullsafe type errors on
//libraries/fresco/imagepipeline-base/src/main/jav
a/com/facebook/cache/common:common  Differential
Revision: D13950834  fbshipit-source-id:
55004e8ca5a8d69edf571d5db496c1709fc21a6a
",66555,890,22599,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6521","facebook/fresco","951472c31ada5549dbdc3e730e2349334c888e6c",2,"2019-02-05 08:59:40-08:00","Fix the Nullsafe type errors with explicit return
null expression on FBLite  Differential Revision:
D13951507  fbshipit-source-id:
67b0f7c2bffde0afacfd5461131b3bf722522f74
",66555,890,22599,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6522","facebook/fresco","7acf9b9b6b21c9f1cb459487734d755f04f48d27",1,"2019-02-07 12:51:40-08:00","Fix Nullsafe type errors on
ActivityListenerManager.java  Reviewed By: denley
Differential Revision: D13949773  fbshipit-source-
id: 25b872b9fbd449a78b9913ac58402eb295b48c53
",66558,890,22599,"Jeremy Dubreil","jrm@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6523","facebook/fresco","f8049c924e41c97fddaae79152176e39284d7212",16,"2019-02-19 08:16:59-08:00","Open source Fresco Flipper utils  Summary: Let's
open source Flipper utility classes required for
the images plugin.  Reviewed By: passy
Differential Revision: D14124380  fbshipit-source-
id: a4fb332a752149600585158806692a7425a62c35
",66714,894,22634,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6524","facebook/fresco","6219235199493ba4bf99847967353e2d9ae99118",79,"2019-03-12 05:59:59-07:00","Open source Fresco Vito options module  Summary:
We're open sourcing our new (and experimental)
Fresco Vito ImageOptions that can be used to
define ""image styles"" to display images.  Example
usage:  ``` val imageOptions =
ImageOptions.create()
.placeholderRes(R.drawable.logo)
.round(RoundingOptions.asCircle())       .build()
```  Reviewed By: defHLT  Differential Revision:
D14363848  fbshipit-source-id:
ebb1d8e29dc7461d45a7ce5c7f7fe39c2c2d948d  Co-
authored-by: Alexander Oprisnik
<2699634+oprisnik@users.noreply.github.com> Co-
authored-by: Artem Kholodnyi
<1539296+defHLT@users.noreply.github.com>
",67306,898,22716,"Alexander Oprisnik","oprisnik@fb.com","Alexander Oprisnik","2699634+oprisnik@users.noreply.github.com"
"6525","facebook/fresco","8566f8742a829556f629b628fe27a97aefaa2dc3",27,"2019-03-12 09:11:11-07:00","Open source Fresco Vito core module  Summary:
We're open sourcing our new (and experimental)
Fresco Vito core module that can be used to
display images.  Reviewed By: defHLT  Differential
Revision: D14341239  fbshipit-source-id:
3451d74db4b1d236c0e15d9d1fb94dec2d0fed49  Co-
authored-by: Alexander Oprisnik
<2699634+oprisnik@users.noreply.github.com> Co-
authored-by: Artem Kholodnyi
<1539296+defHLT@users.noreply.github.com>
",68528,914,22936,"Alexander Oprisnik","oprisnik@fb.com","Alexander Oprisnik","2699634+oprisnik@users.noreply.github.com"
"6526","facebook/fresco","68227995485a4e926dcfc2f43e90ebb0d6a68f49",6,"2019-03-12 14:22:27-07:00","Added experimental Fresco Vito sample to Showcase
app  Summary: This adds a Fresco Vito example to
the Showcase application.  Reviewed By: defHLT
Differential Revision: D14341530  fbshipit-source-
id: 3cbc952e4439a2d73d1ede18c7b0b5c82fe226a5
",68869,918,22959,"Alexander Oprisnik","oprisnik@fb.com","oprisnik","oprisnik@devvm1386.cln1.facebook.com"
"6527","facebook/fresco","4d0e19c9c38f604bc37ffc0feeacba54854f67bd",2,"2019-03-14 06:33:37-07:00","ImageOptions builder progress fields should be
private  Summary: These fields should be private,
like all the others.  Reviewed By: defHLT
Differential Revision: D14455587  fbshipit-source-
id: 039f2ce63c3e735c7b279c30618f6be26484f92e
",68869,918,22959,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6528","facebook/fresco","ca15f2d7f2118a9577206c506f56523841e225d2",1,"2019-03-16 05:56:58-07:00","Extract VitoDrawableFactory interface  Summary:
Similar to the existing `DrawableFactory`
interface, having a `VitoDrawableFactory` makes
this cleaner and allows for test utils.  Reviewed
By: defHLT  Differential Revision: D14484063
fbshipit-source-id:
362d3b2eacb1304841567ecf55f48937f3cfb551
",68899,920,22971,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6529","facebook/fresco","ec0664aa49280c5aef2595b68e4d37f4b49358eb",4,"2019-03-19 07:45:55-07:00","Showcase: Added Fresco Vito example for Litho
Sections  Summary: This adds a Showcase example
for Fresco Vito & Litho Sections.  Reviewed By:
muraziz  Differential Revision: D14504889
fbshipit-source-id:
491789ec80fc06ebb8f8c63ac2e6a5e692fbef30
",69039,923,23005,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6530","facebook/fresco","6598a958b4fadb524f418fe772f6152a4b947f3c",5,"2019-04-02 10:01:04-07:00","Added BorderOptions  Reviewed By: lambdapioneer
Differential Revision: D14455056  fbshipit-source-
id: ea72ba5f56c0e334e517ac4d8511fa3dab4f0e8c
",69107,925,23017,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6531","facebook/fresco","06287e70c3dd2bb0235d56d67b59599a05ac2590",1,"2019-04-03 13:24:06-07:00","Display Image URI in Fresco's debug overlay
Reviewed By: oprisnik  Differential Revision:
D14727025  fbshipit-source-id:
8902da561e92fa3f9202d23d838e35856f7f3f70
",69149,926,23029,"Carmi Grushko","carmi@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6532","facebook/fresco","109519223f84974b6358d4030ddd26ac5c779c6f",5,"2019-04-08 07:52:20-07:00","Add default ImagePerfDataListener to DraweeConfig
Reviewed By: oprisnik  Differential Revision:
D14598274  fbshipit-source-id:
f1816d1df28064ee9edbca76d3a4783f6eee0007
",69250,926,23046,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6533","facebook/fresco","65dc65101dc044f1a1f5645287670cb8698cfaf4",2,"2019-04-08 07:52:20-07:00","Add Flipper debug cache key factory  Reviewed By:
oprisnik  Differential Revision: D14598273
fbshipit-source-id:
a34c6e0df9b725d9b4887124fb7542eb56e9cec8
",69265,927,23052,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6534","facebook/fresco","d47e28b6060104cf253917f78066abea4d3de166",3,"2019-04-09 07:03:49-07:00","Added caller context verifier to imagepipeline
Summary: This moves CallerContextVerifier from the
Vito module to imagepipeline-base so that we can
also hook up the imagepipeline directly. The
verifier can be useful if you want to enforce
certain caller context constraints.  Reviewed By:
defHLT  Differential Revision: D14744384
fbshipit-source-id:
fbebd8f354dbdc7429d176b3068de7b975c272bc
",69327,927,23053,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6535","facebook/fresco","539ae066eb23437b1fa5cc5a0556a6cc55caaf1a",6,"2019-04-11 11:17:30-07:00","Add autoplay support for animated images  Reviewed
By: oprisnik  Differential Revision: D14790239
fbshipit-source-id:
ecae85bff98bddf1a32d8638e2149b1646baec44
",69385,928,23065,"Ryan DeJesus","ryandejesus@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6536","facebook/fresco","7321b1726f1e547948bd9c3288da0435117994fc",5,"2019-04-12 07:33:10-07:00","Log ultimate producer name when image origin is
unknown  Reviewed By: oprisnik  Differential
Revision: D14891019  fbshipit-source-id:
6ea9272c66d385e87d3a6e36e88e4a04f5f63ce9
",69414,928,23066,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6537","facebook/fresco","80c7fe4e10868000b9ac7302421c7b3c1cbb26a8",1,"2019-04-15 14:06:13-07:00","Call onFailure() listeners on failures  Reviewed
By: defHLT  Differential Revision: D14922287
fbshipit-source-id:
b6120215561f76a5e760a3aef275b7d7f1df6f29
",69421,928,23066,"Nicholas Tinsley","nicktinsley@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6538","facebook/fresco","28de385fea88def78bfab4b59d5d7bf10b9ec83e",1,"2019-04-17 03:27:59-07:00","Fix open source build  Reviewed By: erikandre
Differential Revision: D14971195  fbshipit-source-
id: 1025c55397ebb98bd806829c2222ba0a07f6798d
",69422,928,23066,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6539","facebook/fresco","98475b9564960e303726c4b7fdbf84537e317f8f",2,"2019-04-17 06:11:28-07:00","Implement borders for Vito  Reviewed By:
lambdapioneer  Differential Revision: D14455055
fbshipit-source-id:
944ce1db5ba2b61b830af37e4f420abca7f1dc2c
",69510,929,23092,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6540","facebook/fresco","7edb367370e0a75c8606b3290c4e09b9ea4bb879",4,"2019-04-17 08:28:37-07:00","Address lint comments in FrescoControllerImpl
Reviewed By: oprisnik  Differential Revision:
D14935320  fbshipit-source-id:
a9069ba2daaa8d107ee263bf7ab91e54b19742d2
",69509,929,23092,"Nicholas Tinsley","nicktinsley@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6541","facebook/fresco","51efaa75f410a390566f72596099c35d85a42216",19,"2019-04-25 09:28:49-07:00","Add explicit color management. (#2323)  Summary:
Color management was introduced in Android O.
Currently Fresco allows applications to specify
whether a decoded bitmap should be transformed to
SRGB color space or not at load time, and legacy
APIs pass in false, meaning if applications don't
use newer APIs, the decoded bitmap will have the
encoded color space as the final color space if
they have one. This doesn't not align with the
world before Android O because before Android O,
everything is essentially treated as SRGB inside
the rendering pipeline no matter whether the
images come with a color space.  This patch, 1)
Modifies the newer APIs to accept ColorSpace
instead of a boolean, a more future-proof solution
as mobile display technology evolves; 2) Updates
legacy APIs to pass in null, meaning on newer
devices (API level >= 26), applications that
haven't managed color will always get the decoded
bitmap in SRGB color space.  Issue: #2318 Pull
Request resolved:
https://github.com/facebook/fresco/pull/2323
Reviewed By: lambdapioneer  Differential Revision:
D15044871  Pulled By: oprisnik  fbshipit-source-
id: 06e4a8267e82846030321aa9ed4de7503f5ffda3
",69553,929,23106,"Peiyong Lin","lpy@chromium.org","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6542","facebook/fresco","d71e7a1fb156e8326cb4e38e4cabe26308fc5695",1,"2019-05-03 04:32:00-07:00","Update ImageListener @Prop when it changes
Reviewed By: oprisnik  Differential Revision:
D15122181  fbshipit-source-id:
0cfc900ead22837997f66ede8f1c5e9ebcb84805
",69266,927,23036,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6543","facebook/fresco","a0e648ae0fe71f47cde15f243d285c40b81c088e",3,"2019-05-03 07:49:20-07:00","Avoid using @State/@FromPrepare for storing
FrescoState, use MountContent instead  Reviewed
By: oprisnik  Differential Revision: D15198270
fbshipit-source-id:
535c5ab183bcf7ab82b10272522b583e11948e89
",69277,927,23036,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6544","facebook/fresco","ef2b00f4ce4bd8b76411dee6ed8e57669e079572",8,"2019-05-15 08:15:32-07:00","Open source support util:
ControllerListenerWrapper  Summary: This adds
support utilities to re-use existing
ControllerListeners with Fresco Vito.  Reviewed
By: erikandre  Differential Revision: D15333955
fbshipit-source-id:
c14a06af300b3a193b0eb13d8a4f8d5e1d5ecd9a
",69428,929,23070,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6545","facebook/fresco","c9394fd9cda8da5fc4437376ca39821981abdcbb",1,"2019-05-15 08:15:32-07:00","Added DrawableFactoryWrapper for backwards-
compatibility  Summary: This adds a new utility
class to re-use existing DrawableFactory
implementations with Vito.  Reviewed By: erikandre
Differential Revision: D15296056  fbshipit-source-
id: 39882a58886ee29b1cabc8e7eed528a9f1043c9b
",69445,930,23076,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6546","facebook/fresco","ce8348095c1adf1e0ace4d21236309e0cfc948b7",2,"2019-05-18 07:04:39-07:00","Cleaned up VitoDrawableFactory  Summary: This
moves the VitoDrawableFactory to the Hierarcher
and properly sets it up when Vito is initialized.
Reviewed By: defHLT  Differential Revision:
D15296059  fbshipit-source-id:
8f053371760ec7d12868311298050af1f5f86742
",69458,931,23082,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6547","facebook/fresco","6964bec24590016d85ee69c70413a3c76ef3efa8",4,"2019-05-23 07:57:37-07:00","Showcase: Added Vito gallery sample  Reviewed By:
lambdapioneer  Differential Revision: D15468866
fbshipit-source-id:
292401fbf3799c0dca63a29a610cfe228bbfedf7
",70151,939,23141,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6548","facebook/fresco","a799526bd4e9e879d77e7642246806c70d32b464",4,"2019-05-30 09:05:47-07:00","Make CloseableReferenceLeakTracker accept
listeners  Reviewed By: oprisnik  Differential
Revision: D15536909  fbshipit-source-id:
c580a7b286c53d597fd2b7348be54068fc9b8f09
",70281,943,23181,"Pascal Hartig","realpassy@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6549","facebook/fresco","6ec89dd31f8b89ebcfb93312a92f3561b4c5f1a9",17,"2019-05-30 13:28:45-07:00","Add @Nullable Annotations to RoundingParams.java
and GenericDraweeHierarchyBuilder.java  Reviewed
By: oprisnik  Differential Revision: D13894352
fbshipit-source-id:
da1ac3cd5bebc0fdaa119052497fd0ec8525fc4f
",70281,943,23181,"Madhu Talluri","mtalluri@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6550","facebook/fresco","716bc13d7f3d9bf2225cc922e8f6713b61f9c06b",3,"2019-05-31 08:47:10-07:00","Fresco Vito: Added debug overlay  Summary: This
adds a simplified debug overlay for Fresco Vito.
Previously, most of the logic lived in the
drawable itself. However, in order to have a more
flexible debug overlay with potentially different
configurations, it's better to have a dumb
drawable and an interface to set it up however
we'd like.  Right now, it displays the URI and
adds an orange overlay color.  Reviewed By:
cgrushko  Differential Revision: D15555432
fbshipit-source-id:
419e36fb42ef0b641533e8d352e907d85fda7542
",70426,947,23224,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6551","facebook/fresco","4a7d9ecd40dc1f0de90137750eeaa5e578f7458c",2,"2019-05-31 11:37:08-07:00","Vito: Make debug overlay configurable for the
default context provider and hook up Showcase
sample  Summary: This exposes a simple API to
supply a debug overlay config (e.g. from shared
preferences) and hooks up the Showcase sample app.
When you toggle the debug overlay from the app's
settings, the debug overlay will be shown /
hidden.  Reviewed By: cgrushko  Differential
Revision: D15555431  fbshipit-source-id:
70f70d1ec6523e6575a0a0dea34f5d2d21d83ff3
",70434,947,23224,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6552","facebook/fresco","e4c609197daa4b9853dc5d9ac1d6f28983de133a",2,"2019-06-06 04:50:34-07:00","Remove generics from LeakTracker  Reviewed By:
oprisnik  Differential Revision: D15624815
fbshipit-source-id:
2fb842392d3b868ed0a5c01e7901a85ac3d4a898
",70429,947,23224,"Pascal Hartig","realpassy@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6553","facebook/fresco","a89810897f16afa3252480f75e4076f685a2185b",1,"2019-06-12 06:41:35-07:00","Vito: Add nullable annotations for optional props
Reviewed By: defHLT  Differential Revision:
D15416744  fbshipit-source-id:
e4524b7bcadd43f7ca518767f39147d22a408daa
",70434,946,23228,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6554","facebook/fresco","9977d44eb8c25c6af62b3ed30c13c9d64568a81b",1,"2019-06-12 21:00:26-07:00","generate video thumbnail from content provider
when we cannot get file path  Reviewed By:
oprisnik  Differential Revision: D15770247
fbshipit-source-id:
1006e6a0a4769699f8b4788c7c6693efeb51fd94
",70463,946,23228,"Qianyuan Chen","qychen@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6555","facebook/fresco","eb741e4904382202804ff972d9bda146a0e8b20d",7,"2019-06-13 04:09:50-07:00","Keep track of a Throwable if custom LeakTracker is
set  Reviewed By: oprisnik  Differential Revision:
D15760947  fbshipit-source-id:
3a5c48f6244f1afc8b7e00230bd1ae2f197e6cdf
",70490,946,23233,"Pascal Hartig","realpassy@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6556","facebook/fresco","0d37cbc332c279af99006d542982276238bce534",21,"2019-06-14 14:00:43-07:00","Add MultiUri support  Reviewed By: oprisnik
Differential Revision: D15822571  fbshipit-source-
id: 066f3fb1708e3cdca1667e87a90245d20b32198b
",70690,947,23260,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6557","facebook/fresco","26beb6c8eb600d843f650143b59c647c04c5b637",11,"2019-06-15 16:52:00-07:00","CloseableReference experiment  Reviewed By:
oprisnik  Differential Revision: D9264604
fbshipit-source-id:
a1d0397522fd7b985eb1d3adb7425a4a22632380
",70831,952,23300,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6558","facebook/fresco","8d4c9f93b695e3938ac3a2bbaefeaeadae9109dd",2,"2019-06-24 07:27:32-07:00","Add possibility to initialize with custom
experiments  Reviewed By: defHLT  Differential
Revision: D15941525  fbshipit-source-id:
8978b50af8f26cbeec6848be49911656cd7e9a81
",70879,952,23303,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6559","facebook/fresco","e521032c2abf510611f2edfa11972d77862f6234",2,"2019-06-27 08:29:54-07:00","Add isPrefetch to
CallerContext#verifyCallerContext  Reviewed By:
oprisnik  Differential Revision: D16007865
fbshipit-source-id:
e4d790326f9ad395ffff4573e1fdca8c53525245
",70879,952,23303,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6560","facebook/fresco","62ef3554db211ef2f7f3355914bfd40d15c0fc64",3,"2019-07-29 13:04:01-07:00","Add animation backend to draw webp frames
Reviewed By: oprisnik  Differential Revision:
D16191306  fbshipit-source-id:
55c00c1e63275fad43c03ea4744821b38bd91bd1
",71146,956,23391,"Brijesh Patel","brpatel@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6561","facebook/fresco","7a0fdef83709bc47573f02d665febfc353807901",1,"2019-08-12 09:31:25-07:00","Fixes a problem getting exif info from particular
local files  Reviewed By: oprisnik  Differential
Revision: D16645846  fbshipit-source-id:
e11961407c288d48523497477943ae75723f7d01
",71153,956,23385,"Philip Shaw","philipshaw@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6562","facebook/fresco","d5d1807b0a260839c01c1c51faf460832b6b69f1",6,"2019-08-16 09:50:15-07:00","Added new internal producer listener that forwards
to the corresponding listeners  Summary: In order
to support extended request listeners, we have to
properly set one up and propagate to all
producers. Since the new API is more generic, we
have to propagate an extended listener, which can
internally delegate calls to the old producer
listener.  Reviewed By: defHLT  Differential
Revision: D16827974  fbshipit-source-id:
10096316a9d352566dde9b2c2d392ba00a083d02
",71262,958,23438,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6563","facebook/fresco","eab75456a5b05e4b99c7f2c42695dec671926d65",3,"2019-08-16 13:47:16-07:00","Use producer listener 2 in producers  Summary:
NOTE: This is a breaking API change if you are
using custom producers. If that is the case,
please update your producers to use the new API
accordingly. You can take a look at this change to
see how we did this for existing producers.  We
now use the new producer listener in all producers
and tests. The internal listener will still
delegate to the old ProducerListener, which is
conform with the current API.  Reviewed By: defHLT
Differential Revision: D16827972  fbshipit-source-
id: 747069061a7007e92abfbf66da7c7e8e268fc50e
",71333,958,23437,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6564","facebook/fresco","4f11c2ba7425d0c3531f16424b49645c01dc958b",4,"2019-08-16 18:34:06-07:00","Use RequestListener2 instead of RequestListener
Summary: This hooks up the new extended request
listener with the ImagePipeline. The API is still
100% compatible.  Reviewed By: defHLT
Differential Revision: D16833422  fbshipit-source-
id: 21fd140a717762fd29fcfcbcb3cfbf86cc84fb64
",71344,960,23473,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6565","facebook/fresco","d13926cd3e0f2477e5306f7888f329cbdcb61371",3,"2019-08-16 18:34:06-07:00","Added global extended request listener API to
ImagePipeline  Summary: You can now pass a set of
global `RequestListener2` when the `ImagePipeline`
is initialized.  Differential Revision: D16834676
fbshipit-source-id:
fa5dccaf3a5c77f63a13a60c771619eeb2619af3
",71491,961,23489,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6566","facebook/fresco","017c007b48ed4eabb4c7e63be02bfc22e0a149ee",9,"2019-08-17 09:47:33-07:00","Added new API to request a decoded image with an
optional UI component ID  Summary: You can now
fetch an image and specify a UI component ID:  ```
String uiComponentId = ""abc"";
imagePipeline.fetchDecodedImage(
imageRequest,       callerContext,
lowestPermittedRequestLevelOnSubmit,
requestListener,        uiComponentId) ```
Differential Revision: D16859616  fbshipit-source-
id: a19dc584556fd568791706fd5700bdb05d51dc04
",71570,961,23518,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6567","facebook/fresco","0556be1da2b664398705503f3aaaa2bb3e731bbc",2,"2019-08-26 12:06:45-07:00","Add native version of corner rounding with same x
and y cordinates within one corner  Reviewed By:
oprisnik  Differential Revision: D16619821
fbshipit-source-id:
edd1c06109f682665946498b40a73768e7e65ea1
",70954,964,22150,"Jędrzej Kula","jkula@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6568","facebook/fresco","44dd6400767fa1a7e44590203d9b4ac9cd43ddaa",4,"2019-09-04 09:38:12-07:00","Adds helpers for 3 listeners  Reviewed By:
oprisnik  Differential Revision: D17173459
fbshipit-source-id:
c258ff8eb38c01a6e7223992f40f1bda286fe5a5
",70987,964,22152,"Thang Dao","tdao@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6569","facebook/fresco","739296449e7eb15647de74bd6b762bb6706d8f8a",21,"2019-09-04 11:24:09-07:00","Marked RequestListener2 and ProducerListener2
arguments as @NonNull for better Kotlin support
Reviewed By: defHLT  Differential Revision:
D16918779  fbshipit-source-id:
7d6041525134827e31725a816799516e80d92f7a
",70989,964,22152,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6570","facebook/fresco","68165e2ef7674b1122befb3324cc093c9070714b",1,"2019-09-06 02:17:09-07:00","launchSnowflake() is more fitting in
SnowflakeLauncherHelper than
CollageAttachmentHelper  Differential Revision:
D16953814  fbshipit-source-id:
363938358df9172b3c3e03412e535a580c72ac85
",70993,964,22152,"Ed Lee","edlee@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6571","facebook/fresco","4e0e449fa3634b42d40b97d85baeef31e39e6e1f",3,"2019-09-12 05:58:06-07:00","Create new module for NativeMemory type  Summary:
Moving NativeMemory to separate module. This
should allow us to chose type of used memory by
excluding dependencies.  Reviewed By: oprisnik
Differential Revision: D17161604  fbshipit-source-
id: e3d0d1388c02a474f61831bd8ddfc248da88b08a
",70899,962,22081,"Jędrzej Kula","jkula@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6572","facebook/fresco","466bf607d2873cfc56d63547c88a53bd9e947583",2,"2019-09-13 09:19:03-07:00","Create new module for BufferMemory type  Summary:
Moving BufferMemory to separate module. Part of
change which allow us to easier choose memory type
used in Fresco.  Reviewed By: oprisnik
Differential Revision: D17161794  fbshipit-source-
id: 8ecb29444ce4aa6584e0249606910545e7c56ff8
",71310,965,22103,"Jędrzej Kula","jkula@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6573","facebook/fresco","f7fb4d9e1714f9914bf37706a8a6e42dec7bf02e",10,"2019-09-16 07:02:50-07:00","Add android.view.View support to Vito  Reviewed
By: oprisnik  Differential Revision: D14853452
fbshipit-source-id:
51acfc70705ef8e66d1484b3fcf66a348165b302
",71597,970,22179,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6574","facebook/fresco","cbbe477e89f86820dbc8c544a8c2550c39d87e15",5,"2019-09-18 02:33:59-07:00","Create logic of AshmemMemory  Reviewed By: defHLT
Differential Revision: D17163280  fbshipit-source-
id: 9906841699fae307d94b3473a3fa60fb721041de
",72259,978,22264,"Jędrzej Kula","jkula@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6575","facebook/fresco","8f302c6549de727a7aace1063db5b9cef2ff07d8",1,"2019-10-09 12:43:41-07:00","Rename MultiUri#setMultiImageRequests to
setImageRequests  Reviewed By: oprisnik
Differential Revision: D17810542  fbshipit-source-
id: fcabb5f346ee1ca9a15823f4393dad66c0d9ad44
",72700,984,21526,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6576","facebook/fresco","0f0aa3d4f9be2ca9477abcdea5a883171a583f29",2,"2019-10-11 06:09:36-07:00","Add usages of NativeCodeSetup to Fresco
initialization class and
MultiImageTranscoderFactory class  Summary: Add
option to in Fresco class to set up only-Java
version  Reviewed By: oprisnik  Differential
Revision: D17811399  fbshipit-source-id:
acdda0d1dd6bcc4c8913702595d3c94bd763b790
",72802,985,21546,"Jędrzej Kula","jkula@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6577","facebook/fresco","6c05bc6f3d69648a6a3129d866cbcac4b739f327",2,"2019-10-11 07:49:44-07:00","Change ImageDecodeOptions to match pattern from
other options  Summary: Update ImageDecodeOptions
to support extending this class  Reviewed By:
oprisnik  Differential Revision: D17810666
fbshipit-source-id:
05e468aa65457cc05593cd56dee63fa8dd95fbf6
",72808,985,21546,"Jędrzej Kula","jkula@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6578","facebook/fresco","f3ccdfdb970d3793f4c78c0fa627b08a078fbbed",11,"2019-10-11 07:49:44-07:00","Add new region decoder classes  Summary: Add
classes for new region decoder in Fresco Vito
Reviewed By: oprisnik  Differential Revision:
D17761596  fbshipit-source-id:
11486ff60bf3da1b0c195edd68247c592c6db095
",72959,988,21620,"Jędrzej Kula","jkula@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6579","facebook/fresco","5bb253afc0b5399dd0cfe4a1c6e20a9657ac034a",5,"2019-10-11 07:49:44-07:00","Region Decode Sample  Summary: A sample app
fragment for new region decoder in Vito.  Reviewed
By: oprisnik  Differential Revision: D17628266
fbshipit-source-id:
fa86c5262acbea6a58cb3fbdf1dcd611e282023b
",73077,989,21632,"Jędrzej Kula","jkula@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6580","facebook/fresco","fa2f279d3ae3dccd602ae6e2d74871298dae7162",2,"2019-10-16 13:52:06-07:00","Vito View: Add support for multi URI  Reviewed By:
defHLT  Differential Revision: D17550797
fbshipit-source-id:
ee02585a899db5cc99ecf3934b9529aa85201d01
",73105,989,21637,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6581","facebook/fresco","ec99c3aa7067c34340637728e1d505270c347882",4,"2019-10-17 18:22:07-07:00","Added error throwable to image perf data logging
Reviewed By: defHLT  Differential Revision:
D17919344  fbshipit-source-id:
f292026bbeb5630723844ae51981b89c9da59a18
",73126,989,21636,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6582","facebook/fresco","503d79e9f222c9bdd632ef3d11c7cb26804fff2c",3,"2019-10-19 21:56:11-07:00","Set imagepipeline config to producer context for
faster experiments iteration  Reviewed By:
oprisnik  Differential Revision: D17983818
fbshipit-source-id:
83e6e92c9bf8bc3cdaffe3715e6650cdc77ea358
",73226,989,21638,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6583","facebook/fresco","e5e7a12fbd0575f7046786e5d74064247cdf6000",4,"2019-10-25 13:29:27-07:00","Add ability to set image cache  Reviewed By:
defHLT  Differential Revision: D18078370
fbshipit-source-id:
932c63501acb9e628376d81dd90d72e7d701926e
",73315,990,21640,"Dustin Bluck","dustinbluck@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6584","facebook/fresco","a9459406b9054ce52bb6f6b4c2e4f2867a342ca2",19,"2019-10-28 09:18:09-07:00","Added @Nonnull annotations for better Kotlin
compatibility  Reviewed By: defHLT  Differential
Revision: D18086385  fbshipit-source-id:
80af30b3d51cd4a08af99471ff0296f064e9ddcc
",73324,990,21640,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6585","facebook/fresco","3b1e377f36ce1262cc508b22526e9997cb8dcb62",6,"2019-10-31 12:04:19-07:00","Add fetch efficiency QPL tracker  Reviewed By:
oprisnik  Differential Revision: D18152985
fbshipit-source-id:
2d5fc4c2ca8a051345dab7d6f79cfa8d58afb396
",73446,993,21683,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6586","facebook/fresco","64c005b7447143f10c97ef07685e712dc6e59b70",3,"2019-11-01 14:05:45-07:00","Add encoded image origin  Reviewed By: oprisnik
Differential Revision: D18244479  fbshipit-source-
id: d08039c19aed2eca2d42fd26f59ea3d2cdf77840
",73553,994,21699,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6587","facebook/fresco","c445a0270b991e54e5afdff3b09931363e2988bc",12,"2019-11-07 04:56:35-08:00","Log image request data for image perf monitor
Summary: Now it's possible to log the controller
image request configuration via
ImagePerfDataListeners.  This can be useful for
debugging what's going on in your application.
For now, this only works for Drawee, will add Vito
support later.  Reviewed By: shrisukhani
Differential Revision: D18328117  fbshipit-source-
id: 3b5060a7c2eb0876372f44e7a06faa20d67e27b7
",73628,994,21701,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6588","facebook/fresco","e0f8a7337a555d1ffa851fd585ca46d8e6f99342",13,"2019-11-08 03:12:58-08:00","Adding rounding support for placeholders  Reviewed
By: oprisnik  Differential Revision: D18370836
fbshipit-source-id:
79477a563f4a2000a58953c66079171452a96fc7
",73908,996,21749,"Nicolas Palermo","nipalermo@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6589","facebook/fresco","40790607b133059e229eaafa43fea0143a83445a",6,"2019-11-08 09:15:49-08:00","Add ImageStateListener  Summary: This adds a new
`ImageStateListener` that is very similar to
`ImageListener` but has access to the
`FrescoState`.  Reviewed By: shrisukhani
Differential Revision: D18374165  fbshipit-source-
id: 60b1fa82668dfd67d6fa5b2da5b54a64f25b1221
",73952,997,21800,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6590","facebook/fresco","f4162a5c90854cad95cf01cf1bed6777341bdd64",1,"2019-11-11 04:35:55-08:00","Added experiment to move image fetch to
lightweight BG thread  Summary: This experiment
improves the mount time for images by moving work
from the UI thread to a lightweight background
thread. On the UI thread, we only check if the
image is in cache. If not, we post a runnable to
the background thread to actually kick off the
image request. The runnable will check if the
image is still attached (i.e. still visible) and
kick off work if needed.  Reviewed By: shrisukhani
Differential Revision: D18247803  fbshipit-source-
id: 0f8baa042d8d8b72f603602ceb0b0ddd55c98511
",73997,997,21801,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6591","facebook/fresco","e269092c1fac79d397973cca00efe6bd06c65a45",1,"2019-11-13 04:58:45-08:00","Add reportData methods for debugging and crash
reporting  Reviewed By: oprisnik  Differential
Revision: D18449411  fbshipit-source-id:
be3349e370af2a070677bb2b4c2118d6c824b8eb
",74022,997,21804,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6592","facebook/fresco","ed661c6f85104eaff5aaa55a46227e8b8e5abb0d",16,"2019-11-15 07:32:09-08:00","Add Support for work instrumentation -
Instrumenter  Summary: Adding a utility that
allows to instrument unit of works.  In particular
it covers 2 cases.  Executor: ``` Runnable task =
FrescoInstrumenter.decorateRunnable(myTask,
<tag>); executor.execute(task); ```  Flexible
continuation: ``` // at some point in Thread1
Object token =
FrescoInstrumenter.onBeforeSubmitWork(<tag>);  //
When picking up the task in Thread 1 or another
token = FrescoInstrumenter.onBeginWork(<optional-
tag>, token); try {   ... unit of work } finally {
FrescoInstrumenter.onEndWork(token); } ```
Reviewed By: oprisnik  Differential Revision:
D18225695  fbshipit-source-id:
9fdf8aec216412f5bd91bd618204d53ba50b1dab
",74068,998,21852,"Simone Casagranda","simo@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6593","facebook/fresco","ca86c7e4a2e33a008d6c70e6d1e47c499f3cb981",1,"2019-11-15 07:32:09-08:00","Add Support for work instrumentation -
ThreadHandoffProducer  Reviewed By: oprisnik
Differential Revision: D18225694  fbshipit-source-
id: b709d44a05edaa1fedf580f35fbe0997d2f0b58e
",74087,998,21852,"Simone Casagranda","simo@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6594","facebook/fresco","a81bad0c6333dd041a761784affab512b91e1afd",1,"2019-11-16 15:52:47-08:00","Remove context param from DiskStorageCache
constructor  Reviewed By: oprisnik  Differential
Revision: D18444589  fbshipit-source-id:
623c1fcb28185668c0b928c2536cfc8e06dd24a7
",74114,998,21852,"Sahil Jain","sahilj@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6595","facebook/fresco","ea869af4bf6dc39fca44652381178b83bf5bdab1",3,"2019-11-21 07:27:12-08:00","Instrument DataSource subscriber update  Reviewed
By: oprisnik  Differential Revision: D18573391
fbshipit-source-id:
00e40cb7f9b51a4b36f42bd2add134e80592cdad
",74219,998,21865,"Simone Casagranda","simo@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6596","facebook/fresco","b37d7c4c36afaac9154c6be293a74da423c1524e",1,"2019-11-22 04:38:18-08:00","Fix animatable drawable not playing  Reviewed By:
oprisnik  Differential Revision: D18643528
fbshipit-source-id:
0b272fbadde7742188d785493ed004dfd595ca8e
",74196,998,21860,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6597","facebook/fresco","a1b2c55a3aa45d2874eb05429f488ea527c28e01",2,"2019-11-26 09:50:26-08:00","Improve Fresco debug overlay  Reviewed By: defHLT
Differential Revision: D18692069  fbshipit-source-
id: 27542981cebad66fe73e65c057ca044128b67389
",74251,999,21868,"Jan Zahornadsky","janz@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6598","facebook/fresco","64737bbe4cba8f05a8dae3d9a8f83b107275313b",1,"2019-11-30 05:08:05-08:00","Set up instrumented drawable with Vito  Reviewed
By: erikandre  Differential Revision: D18745482
fbshipit-source-id:
4d56c67700cfec53087fa14cf48b1294d1e1246e
",74387,1001,21889,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6599","facebook/fresco","fda293fd9e23915fb2c0a4bb875e3a28f2c08356",5,"2019-12-04 13:04:37-08:00","Clean up LocalContentUriThumbnailFetchProducer
Differential Revision: D18650429  fbshipit-source-
id: b3a3056d4f7e32a9afdb461c7aa5af474b86538a
",74387,1001,21887,"Sahil Jain","sahilj@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6600","facebook/fresco","938588a3b13f671ebbb47450cb9c7a608aa4400d",4,"2019-12-05 09:15:51-08:00","Prefetch experiments for onPrepare  Reviewed By:
defHLT  Differential Revision: D18781136
fbshipit-source-id:
8df38c56160f2c9ca2652f9984750ed77e1fbd0e
",74527,1003,21948,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6601","facebook/fresco","d976fa2bad535f06398a7eb4dac3919714838f78",3,"2019-12-29 06:55:05-08:00","Fix duration-less gifs using OutputStream
Reviewed By: oprisnik  Differential Revision:
D19215048  fbshipit-source-id:
1e346d07e5fdc76e9fabd3a065fc61da0688d541
",74689,1002,21935,"Yoav Beeri","yoavb@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6602","facebook/fresco","29625bdf06e1445816d0b176f6e8a763d8aa862e",4,"2020-01-19 09:02:39-08:00","add the ability to replace the encodedMemoryCache
Reviewed By: oprisnik  Differential Revision:
D19311287  fbshipit-source-id:
c0e415feff4e79d90e0f1e8074ec3bb77629bbee
",74716,1002,21935,"Maroun Tork","marountork@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6603","facebook/fresco","2a5119a8bc658b681c965bd618146aedac98e577",5,"2020-01-23 02:12:26-08:00","Added support for animated GIF transformations
Reviewed By: oprisnik  Differential Revision:
D19501478  fbshipit-source-id:
501ee1e14491c4702e9aa0d918a60b2dd3f2d405
",74708,1002,21923,"Luigi Damato","luigidamato@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6604","facebook/fresco","bf155de6ee14857780bb26f69f806b8802548828",3,"2020-01-27 08:08:25-08:00","Added additional Vito View APIs to fetch images
Reviewed By: defHLT  Differential Revision:
D19556914  fbshipit-source-id:
49ca9898d461f174a398128b329e97b1cab8a907
",74694,1002,21899,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6605","facebook/fresco","be7b02555ab4ec8c725b9fb0b23a1d16223012fa",1,"2020-02-09 14:56:00-08:00","Report the time a request was queued before being
processed by the delegate  Reviewed By: michaltru
Differential Revision: D19743164  fbshipit-source-
id: a1b3cfb1c7a64a9be0acd8bb92cb5a3ddf081a77
",75134,1004,22014,"Carmi Grushko","carmi@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6606","facebook/fresco","4b372e1f262e398658320986de1e7059732ee49b",21,"2020-02-10 12:08:27-08:00","Add BaseRequestListener2  Reviewed By: oprisnik
Differential Revision: D19816443  fbshipit-source-
id: c8afd2b965ea1470003f1144dd7234bce5d789c6
",75137,1005,22008,"Artem Kholodnyi","defhlt@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6607","facebook/fresco","33e2c698561e4f5931428e63eee10628fed8caa9",13,"2020-02-13 06:01:09-08:00","Added base Fresco Drawable that can be extended
Differential Revision: D19791263  fbshipit-source-
id: 1036d3e24dac879fc1e54c615fb3caceae3fca8d
",75118,1004,22020,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6608","facebook/fresco","8541d6eff294075dccb556a32c2fe80be9dc669c",1,"2020-02-17 07:44:54-08:00","Allow null focus points for ScaleTypeDrawable
Summary: This makes it possible to re-purpose a
ScaleTypeDrawable where you go from FOCUS_CROP to
a normal scale type where you ideally want to
properly clean up the focus point.  Reviewed By:
wizh  Differential Revision: D19904581  fbshipit-
source-id:
a8fd4c33ba89c326779d8328de95618aa715d2dc
",75219,1005,22053,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6609","facebook/fresco","d87dc98a4751947b082eb66a0a018743ed2129e4",9,"2020-02-25 05:05:19-08:00","Fresco Vito 2 prototype  Reviewed By: defHLT
Differential Revision: D19641020  fbshipit-source-
id: 9a7224b1538b7606ff6174ae8079e5a02bd888ce
",75766,1014,22129,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6610","facebook/fresco","b972727948fa59d238041a91a968455126e18d88",1,"2020-02-25 05:05:19-08:00","Added Vito View implementation for Vito2  Reviewed
By: defHLT  Differential Revision: D19942230
fbshipit-source-id:
de599646dcdac12b896e67b45bd1fee55b458eb3
",75869,1015,22147,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6611","facebook/fresco","0c94b5c026add560a1738b36ce10d2b42e93aa4b",3,"2020-03-01 04:48:00-08:00","Added listener support to Fresco Vito 2  Reviewed
By: defHLT  Differential Revision: D20030075
fbshipit-source-id:
43838c7d79e711680d945163be8fd1c0f24bbbd7
",76065,1019,22226,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6612","facebook/fresco","82d9efb6c906cf0784b9c6458e6da1bf4f0585e4",1,"2020-03-01 11:51:38-08:00","Support customizing the User-Agent that
HttpUrlConnectionNetworkFetcher uses  Reviewed By:
lsaddan  Differential Revision: D20184661
fbshipit-source-id:
888fb5b8067c84c7f56938b9bb1f14fbd86e1fe1
",76079,1019,22226,"Carmi Grushko","carmi@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6613","facebook/fresco","7a74871f63bffb679a5cb65f833d16f61732f05d",6,"2020-03-02 07:51:58-08:00","Add option to track image path  Reviewed By:
defHLT  Differential Revision: D20001055
fbshipit-source-id:
a6b8d442d85ab6f03eddeb2306e92c474b7b07b5
",76122,1019,22230,"Mathias Fleig Mortensen","fleig@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6614","facebook/fresco","b6e4c65d9c630ac6b92772e687f87e5e5863e878",1,"2020-03-06 05:42:32-08:00","Cancel prefetch for Litho spec  Reviewed By:
defHLT  Differential Revision: D20282212
fbshipit-source-id:
a509ebe91c6587f688383b4541a36800fc5f3215
",75876,1018,22211,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6615","facebook/fresco","9d2ae418f0d5c73f68465bb15b5bfb1bf3526476",1,"2020-03-08 16:11:24-07:00","Lazily init VitoView  Reviewed By: defHLT
Differential Revision: D20311991  fbshipit-source-
id: 19bd03df7d6e48b6dd4ba1d2c2e69b4186970920
",75925,1020,22219,"Alexander Oprisnik","oprisnik@fb.com","Facebook Github Bot","facebook-github-bot@users.noreply.github.com"
"6616","facebook/fresco","41c88af56e546e0751ddfdd92aa7c4b00432628e",1,"2020-03-12 12:02:09-07:00","Rename FrescoContextProvider to FrescoVitoProvider
Summary: We have FrescoContext, and
FrescoContextProvider does not provide a
FrescoContext any more.  Reviewed By: wizh
Differential Revision: D20388327  fbshipit-source-
id: e18693faa7dc7a009c64fc5e7a34634c8739c8bc
",75945,1020,22225,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6617","facebook/fresco","b3da6d8600e809ba8764df9e3cdfa5c4dde6b3bd",6,"2020-03-24 15:43:45-07:00","Add logging and on fade finished listeners
Reviewed By: oprisnik  Differential Revision:
D20607879  fbshipit-source-id:
a4e83510b9981706b91fd79f89871b0551722bfa
",76012,1021,22232,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6618","facebook/fresco","19fc10c1298a4de19cd003b9cf4e7ba501101747",182,"2020-03-31 19:49:18-07:00","Create vito/core:interfaces  Reviewed By: oprisnik
Differential Revision: D20633942  fbshipit-source-
id: 4dca4d8bbd3fea43eac7bfa18453c17282b90332
",76503,1029,22284,"Austin Longino","longinoa@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6619","facebook/fresco","d229e46be2713f230be7d8630567e5ff0b2fce79",2,"2020-04-04 17:40:47-07:00","Improve eager image-transcoder init  Reviewed By:
oprisnik  Differential Revision: D20731750
fbshipit-source-id:
6c16324aead768ec0e6cd98549343a49679a26dc
",76463,1027,22265,"Oleksandr Stashuk","sashko@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6620","facebook/fresco","dc7c20970ce2fb3ddc487a633d37089242c1c011",1,"2020-04-09 04:02:30-07:00","Support fail info - FrescoInstrumenter  Reviewed
By: oprisnik  Differential Revision: D20891451
fbshipit-source-id:
387683a8a82cc6c6628923978ca126f16676c291
",76493,1027,22273,"Simone Casagranda","simo@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6621","facebook/fresco","fcbc970d2ab5a53af85c32746940dce9739d92f5",4,"2020-04-26 08:12:52-07:00","Add Bitmap Memory Cache Entry State Observer
Reviewed By: oprisnik  Differential Revision:
D21204695  fbshipit-source-id:
cdcde105549765ef25b9a75e7f29b5c109f8b5dc
",76912,1031,22326,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6622","facebook/fresco","49b45c4621cff30af5c4e865f37967ecb6836e87",2,"2020-04-26 08:50:38-07:00","Add extras object to datasources  Reviewed By:
oprisnik  Differential Revision: D21245560
fbshipit-source-id:
0d209f45a466965191377a7757987d0589b4417e
",76930,1031,22328,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6623","facebook/fresco","325e4f4f84a6c612d1b6b163d0680aa8ac67e25d",7,"2020-04-26 08:50:38-07:00","Add controller listener 2  Reviewed By: oprisnik
Differential Revision: D21245559  fbshipit-source-
id: f7e78d7aeef3172be8252ee98d35184d992e2c56
",77076,1034,22378,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6624","facebook/fresco","5fd433f34cbeeecc3e1337b5839ec5919424a5c4",7,"2020-04-26 08:50:38-07:00","Pass encoded image dimensions  Reviewed By:
oprisnik  Differential Revision: D21245641
fbshipit-source-id:
ad25a230b31931802fef173b6ae0f4290ddbc1b8
",77107,1034,22380,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6625","facebook/fresco","8b1b9d778be62e28e2557051f2fd6ab303cd584c",1,"2020-04-26 08:50:38-07:00","Add extra fields to ImagePerf{State, Data}
Reviewed By: oprisnik  Differential Revision:
D21245835  fbshipit-source-id:
fa57cf7b0b52afaef00ca278e3e5c18b4fb82ea1
",77122,1034,22380,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6626","facebook/fresco","efd62111454d7f75fed5512bd9ac0215590cebe8",3,"2020-04-28 09:04:02-07:00","Async logging in ImagePerfControllerListener2
Reviewed By: oprisnik  Differential Revision:
D21247368  fbshipit-source-id:
710c409898ef7bcf6857ee99d76e6c6e7e7a7da2
",76934,1027,22310,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6627","facebook/fresco","1ff8331994335f4a2f721322f4e170311ca4b1c6",1,"2020-04-29 15:57:13-07:00","Copy newer Guava source for Objects to fix ANR
from toStringHelper  Reviewed By: IanChilds
Differential Revision: D21292942  fbshipit-source-
id: 84ec7e23d9e6a54a64d54aa479d3bbc1455fa74b
",76949,1027,22300,"Joshua Selbo","jselbo@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6628","facebook/fresco","b9a8252d5122c3cd14e367f2af935bdf08149842",9,"2020-04-30 06:24:10-07:00","Extras type adjustments  Reviewed By: oprisnik
Differential Revision: D21303609  fbshipit-source-
id: 1ae85e54aae715505557ee298a69554de813b7de
",76964,1027,22303,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6629","facebook/fresco","b9c140e7e8508405a6689795862b5629f2cdee4e",17,"2020-04-30 06:24:10-07:00","Log pipeline and view extras  Reviewed By:
oprisnik  Differential Revision: D21303608
fbshipit-source-id:
ba620b55c2da6674c6fa644353ac0879d592707c
",76968,1027,22303,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6630","facebook/fresco","9cbc30f506aaf178cbf363020c2c445579931a10",6,"2020-04-30 11:35:39-07:00","Set origin subcategory  Reviewed By: oprisnik
Differential Revision: D21324521  fbshipit-source-
id: f91899ec83fe0e61ade2a4ee79db77af02016c65
",77018,1027,22305,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6631","facebook/fresco","0dba76a7fbd7dd383ccdf7339dd0f84662e0d881",2,"2020-05-06 09:16:08-07:00","Fix Fading for Vito v2  Summary: When fading is
enabled, the overlay didn't properly work for Vito
v2.  Reviewed By: wizh  Differential Revision:
D21427233  fbshipit-source-id:
b33ccd0e8c92c3b3aabfa10e57f96e4515d7bad3
",76908,1025,22268,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6632","facebook/fresco","a594875831c933393768675db5e8fcda6332bc02",8,"2020-05-06 15:10:21-07:00","Added debug overlay for Vito 2  Summary: This adds
a debug overlay for Fresco Vito v2, similar to
what we have for Vito v1. The overlay is quite
basic for now but I'll add more features soon.
Reviewed By: defHLT  Differential Revision:
D20225275  fbshipit-source-id:
246e0f866390d3ac3cf0306c1743c88d2a9e25c4
",77010,1029,22298,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6633","facebook/fresco","f2df2c27c45cd486234c8ca30df54a064b38c835",2,"2020-05-07 05:22:09-07:00","Extract ImagePerfNotifier interface  Reviewed By:
oprisnik  Differential Revision: D21337570
fbshipit-source-id:
f9cf002afefb1a0aef1ee46e03d7a9a715f969b3
",76914,1026,22269,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6634","facebook/fresco","dbb251cfbe846c4c9a3b14322b74e6543cc901ee",14,"2020-05-07 05:22:09-07:00","Make Vito use image perf controller listener 2
Reviewed By: oprisnik  Differential Revision:
D21337569  fbshipit-source-id:
aa1009156a9d4863057faf668343d4bfee0430d7
",76996,1027,22270,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6635","facebook/fresco","aa5c6cd3c19e84269a9eb2374fc648478c3a7e1b",7,"2020-05-10 14:44:42-07:00","Set encoded image info when using drawee bitmap
shortcut  Reviewed By: oprisnik  Differential
Revision: D21379879  fbshipit-source-id:
7304376efecb26ae87f2a1c59afe57f31a2d14b7
",77040,1027,22270,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6636","facebook/fresco","2cf6127e3c73a673863e368d19bd7622e2210dd8",9,"2020-05-12 11:40:33-07:00","Log Vito viewport dimensions  Reviewed By:
oprisnik  Differential Revision: D21505021
fbshipit-source-id:
a6c8c96feb984a99db27785832e4b8917d0bad57
",77093,1027,22271,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6637","facebook/fresco","0144467a6e5c25a27092b413648c72bb71286fcd",4,"2020-05-30 21:18:26-07:00","MultiUri: Added high res image request to MultiUri
Summary: This changes the multi URI API so that it
is more performant and intuitive:  ```
MultiUri.create()   .setLowResImageRequest(low)
.setHighResImageRequest(high)   .build() ```
Before, you had to use `.setLowResImageRequest(low
Res).setImageRequests(highRes)` - which would
create an unnecessary array for setImageRequests
and a first available data source with only 1
element, which is overkill.  Reviewed By: defHLT
Differential Revision: D21594600  fbshipit-source-
id: ef703c39f2026ccdd3af182e5072d8b04bbe008a
",77210,1031,22291,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6638","facebook/fresco","6dbe559874802b426c2d867c76de279ffbc5a172",8,"2020-05-30 21:18:26-07:00","Move MultiUri logic from API to implementation
Reviewed By: defHLT  Differential Revision:
D21594660  fbshipit-source-id:
a2dbe7af6157215cb06c51b28caf5e1e61e5782e
",77215,1032,22297,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6639","facebook/fresco","8235a17a02864bb32aed31cb110d9998f95dba3e",1,"2020-05-31 15:39:45-07:00","Add multi uri support for Vito2  Summary: This
adds proper multi URI support for Vito2.  Reviewed
By: defHLT  Differential Revision: D21665155
fbshipit-source-id:
2fce5054b4ffa2eb7739080ee4d75b69100f09d6
",77229,1032,22299,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6640","facebook/fresco","e442337f1059b88a76c3bf05e5b58cd51f69d2cc",1,"2020-06-05 11:25:26-07:00","Add forwarding controller listener 2  Reviewed By:
oprisnik  Differential Revision: D21763219
fbshipit-source-id:
7b2efc16ca25e14986b55514a8159806f1621abd
",77306,1033,22304,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6641","facebook/fresco","036605d9c3dcd21a8efbfa9e5b5d4f72db36b512",1,"2020-06-05 11:25:26-07:00","Drawee: support multiple controller listeners 2
Reviewed By: oprisnik  Differential Revision:
D21763220  fbshipit-source-id:
25745b235e9cd5e53c5f9a334fc9f71e16cbe851
",77324,1033,22304,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6642","facebook/fresco","bde88e983463068bb258ea5570db81c9a09fc510",8,"2020-06-05 12:54:25-07:00","Added Nullable annotation for optional CacheKey
CallerContext  Summary: The CallerContext is
optional, so it should be marked as nullable.
Reviewed By: defHLT  Differential Revision:
D21903871  fbshipit-source-id:
8488baac419ec1058a1961f92cbd7f953dd28fed
",77325,1033,22304,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6643","facebook/fresco","805e951b30b414a1af471c8d8cc800c1f67dd6ab",4,"2020-06-05 13:08:45-07:00","Vito: support multiple controller listeners 2
Reviewed By: oprisnik  Differential Revision:
D21763218  fbshipit-source-id:
ddbf7f75ba679a054ae73b142cbfc1a2879c2131
",77321,1033,22304,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6644","facebook/fresco","e1b3b217c808952936694f366e9d2f210b30e8a2",2,"2020-06-11 06:27:28-07:00","Properly pass down CallerContext and listener when
image is not immediately attached to a View
Summary: For VitoView, we didn't properly
propagate the caller context and listener if the
view is not immediately attached.  Reviewed By:
defHLT  Differential Revision: D21934339
fbshipit-source-id:
29b064027fec2e0bab7d573615c586d07a84670f
",77335,1033,22305,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6645","facebook/fresco","c111220c4cc8b20222b48e9d32387745c8ad0710",31,"2020-06-11 09:54:20-07:00","Pass image request and extra data in on-submit
Reviewed By: oprisnik  Differential Revision:
D21620754  fbshipit-source-id:
3775108ef2064f0650f485748cc570b9933c4a03
",77414,1033,22308,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6646","facebook/fresco","a7656794c159a72d22a6cf77b09cf7160b485b7c",41,"2020-06-13 08:35:37-07:00","Added ImageSource API for Vito2  Summary: This
adds a more robust ImageSource API for Fresco
Vito. You can specify a single source or a set of
sources, either with increasing quality or the
first available (e.g. if you have similar image
variants and don't care which one ends up being
displayed).  For each source, you can either
specify a `Uri`, a `String`, or an `ImageRequest`
that Fresco's ImagePipeline provides.  Example
usages:  ``` ImageSource source =
ImageSourceProvider.forUri(uri); ```  ```
ImageRequest request =
ImageRequestBuilder.newBuilderWithSource(uri)
.setLowestPermittedRequestLevel(DISK_CACHE)
/// other configurations    .build(); ImageSource
source =
ImageSourceProvider.forImageRequest(request); ```
``` ImageSource source =
ImageSourceProvider.increasingQuality(lowResUri,
highResUri); ```  ``` ImageSource[] similarSources
= new ImageSource[] {s1, s2, s3}; ImageSource
source = ImageSourceProvider.firstAvailable(simila
rSources); ```  Reviewed By: defHLT  Differential
Revision: D21858941  fbshipit-source-id:
5f588b8c6579ac2f23b70b15b7e8c0e200c6f4e9
",77746,1041,22422,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6647","facebook/fresco","1fd49036f14625d5cedb563bc184e7efa002051a",2,"2020-06-14 13:11:10-07:00","Replace OriginalEncodedInfo with extras  Reviewed
By: oprisnik  Differential Revision: D22018173
fbshipit-source-id:
810c2dd072efb27e6d212eced9b767d3855debd8
",77727,1041,22424,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6648","facebook/fresco","099134849d1a6f602f30f2e83fcfcbe95f721769",3,"2020-06-16 08:02:39-07:00","Added @Nullsafe to Vito options classes  Reviewed
By: artempyanykh  Differential Revision: D21997010
fbshipit-source-id:
e15b24b8be4803936a54a17f392b84dfb442af6a
",77433,1038,22406,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6649","facebook/fresco","01592c8a1c33cd379cc27fe0868dc41b832fd3a6",17,"2020-06-19 06:41:48-07:00","Log main request normalized uri  Reviewed By:
oprisnik  Differential Revision: D22091866
fbshipit-source-id:
d49722554690df605eac3f8c69fcc10d2c6a0752
",77541,1039,22412,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6650","facebook/fresco","bd503114a41cb013927f2addd859e9cf61cc149a",8,"2020-06-19 06:41:48-07:00","Generalize main uri extraction logic  Reviewed By:
oprisnik  Differential Revision: D22115330
fbshipit-source-id:
3b2fc86df25d6f834c26424de77a3b57750845fe
",77588,1041,22414,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6651","facebook/fresco","6468413d6631a569948d52dad31594109ddb979a",5,"2020-06-19 09:17:55-07:00","Added Dialtone support  Reviewed By: defHLT
Differential Revision: D20376740  fbshipit-source-
id: 40ec6da138a94c55a0af6e30f21d4604cdb5e031
",77605,1041,22414,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6652","facebook/fresco","f3bd19cd58468c864efcb02e45dac0f148279637",11,"2020-06-19 11:03:39-07:00","Log scale type and focus point  Reviewed By:
oprisnik  Differential Revision: D22137625
fbshipit-source-id:
e40ed281d1f2c29f34935507315e8306fc8aab9d
",77545,1040,22402,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6653","facebook/fresco","ea041d465e02fde3e0191683a8353ecb351bd7a2",12,"2020-06-19 13:47:41-07:00","Improved VitoView API: Migrate from multi URI to
ImageSource and clean up  Summary: This migrates
VitoView to use the new `ImageSource` API.  Now
you can do something like this:  ``` VitoView.show
(ImageSourceProvider.increasingQuality(lowRes,
highRes), imageView) ```  This also properly sets
up null safety for the classes.  Reviewed By:
defHLT  Differential Revision: D22120478
fbshipit-source-id:
0a7631a90d041dbab6ac7dc3aa805eb0d0a23540
",77553,1040,22410,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6654","facebook/fresco","e8d8fac3a498c970c871328501ca7d1220aed133",20,"2020-06-22 12:08:29-07:00","extract FrescoVitoPrefetcher interface  Reviewed
By: oprisnik  Differential Revision: D22143565
fbshipit-source-id:
f97de10f9f9fa311198c4a9ec22876a1bf0482f1
",77579,1041,22416,"Chiio Tut","tut@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6655","facebook/fresco","22a74867bb24db26fec2fb04a7b381811565b242",4,"2020-06-29 23:08:25-07:00","HttpUrlConnectionNetworkFetcher: specify arbitrary
request headers  Reviewed By: hvu  Differential
Revision: D22289847  fbshipit-source-id:
940fe452789dee6722cf25ddf8cd7f5ce7557059
",77593,1041,22425,"Carmi Grushko","carmi@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6656","facebook/fresco","f43d5990600c9ac6c3a18e14e4d3c260cf78b462",2,"2020-07-10 06:36:21-07:00","Add option to attempt a recover from OOM to
DecodeProducer  Reviewed By: oprisnik
Differential Revision: D22455350  fbshipit-source-
id: 81cf0ce150e9e236552c8c3292d0e2168d4cddad
",77624,1041,22428,"Artem Kholodnyi","defhlt@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6657","facebook/fresco","a9a2d71f2d9f28c63a2d5147e04db79b9bdd980f",9,"2020-07-10 13:34:27-07:00","Add working range prefetching for
FrescoVitoImage2Spec  Summary: This adds optional
working range prefetching for Fresco Vito Image 2
Differential Revision: D20704824  fbshipit-source-
id: 36e30297a525919dea91395ee9468f61f3e1ff9a
",77709,1042,22434,"Alexander Oprisnik","oprisnik@fb.com","Facebook GitHub Bot","facebook-github-bot@users.noreply.github.com"
"6658","facebook/stetho","63560a7acab92b4204da727d36bc0b427109d4c6",26,"2015-01-28 18:22:40-08:00","Initial commit
",4950,101,1003,"Josh Guilfoyle","devjasta@fb.com","Josh Guilfoyle","devjasta@fb.com"
"6659","facebook/stetho","e3ad7e52a69c6e8c5b06905f63839bd39d0e89a8",4,"2015-01-30 14:04:29-08:00","Add stetho-urlconnection helper  This adds a
helper module, stetho-urlconnection, to reduce the
boilerplate code needed to hook HttpURLConnection.
Ultimately this is about simplified integration
but it has the nice side effect of centralizing
usages of NetworkEventReporter so that we could
more easily revision this API if we needed to.
Some semantic changes were applied to the sample
as a result of this refactor (in particular,
requestWillBeSent is now delivered after
URL#openConnection) though these were done
explicitly to simplify integration and should not
have any functional impact.  See http://www.tbray.
org/ongoing/When/201x/2012/01/17/HttpURLConnection
for context on exactly how messed up the
HttpURLConnection API really is.  Also fixed a bug
with calling disconnect after the
HttpURLConnection instance was disposed.  A
companion stetho-okhttp module should be added as
well.
",5082,108,1068,"Josh Guilfoyle","devjasta@fb.com","Josh Guilfoyle","devjasta@fb.com"
"6660","facebook/stetho","eef68e1fb3deb56b28d0053d20c26708949ed6f1",6,"2015-01-29 16:50:38-08:00","Add StethoInterceptor for OkHttp 2.2.0+  This
makes it possible to enable Stetho network
inspection by a one-line change to existing
projects that use OkHttp 2.2.0+.  This is made
possible by the new Interceptors feature:
https://github.com/square/okhttp/wiki/Interceptors
",5379,110,1088,"Josh Guilfoyle","devjasta@fb.com","Josh Guilfoyle","devjasta@fb.com"
"6661","facebook/stetho","eca74b12c59d9d4f8f4ce8330688a3b159227706",9,"2015-02-03 01:14:01-08:00","Add Content-Encoding support to stetho-
urlconnection and stetho-okhttp  Add first class
support for transparently handling Content-
Encoding compression on response bodies for both
supported HTTP stacks (HttpURLConnection and
okhttp).  There are caveats associated the
HttpURLConnection implementation due to the fact
that under the hood the Android implementation
attempts to handle modern concepts like
compression automatically for you, which prevents
inspection of the compressed payloads in many
common cases.  okhttp doesn't have these issues
and allows us to inspect both the compressed and
uncompressed sizes.  Also add a new test to okhttp
to verify end-to-end integration with okhttp
interceptors by using the mockwebserver library
provided by okhttp to power its own internal
tests.  This test also serves as proof that
compression handling works properly.
",5621,114,1121,"Josh Guilfoyle","devjasta@fb.com","Josh Guilfoyle","devjasta@fb.com"
"6662","facebook/stetho","2a1288336dadd6e01afdf101dfba4e95b8b1cf0b",1,"2015-02-22 08:30:06-08:00","Add ProcessUtil to generalize reading process
name.
",5627,115,1135,"Josh Guilfoyle","devjasta@fb.com","Josh Guilfoyle","devjasta@fb.com"
"6663","facebook/stetho","fe8a9077a1f4d4ad5f6131671d6ee547afbd3966",3,"2015-02-24 08:41:35-08:00","Improve type safety of DOMStorage
SharedPreferences is a typed key/value store, but
DOMStorage is untyped. Resolve this conflict by
preventing type changes from the DevTools UI and
also block adding new keys since we cannot know
what the intended type should be.  The ""prefs""
dumper plugin can be used to do more sophisticated
actions.
",5975,117,1142,"Josh Guilfoyle","devjasta@fb.com","Josh Guilfoyle","devjasta@fb.com"
"6664","facebook/stetho","d3efa89e2baa08b6733452516398da3693da70ca",1,"2015-03-11 12:49:00-07:00","Adding id attribute to Views
",6841,135,1182,"Rick Brewster","rickbrew@fb.com","Rick Brewster","rickbrew@fb.com"
"6665","facebook/stetho","969c823b3c1a2e8e1347a220013416d57fae3eb2",5,"2015-03-19 15:13:19-07:00","Support for Fragments as parents of their
associated View
",7770,151,2276,"Rick Brewster","rickbrew@fb.com","Rick Brewster","rickbrew@fb.com"
"6666","facebook/stetho","c590ace92e120f22bff840d7a55383306da15ac2",1,"2015-03-28 22:55:05-07:00","Simplify `dumpapp crash throw` handling
Specifically, create the Throwable on the dumper
thread, then punt to a separate thread only to
throw.
",6314,122,2232,"Josh Guilfoyle","devjasta@fb.com","Josh Guilfoyle","devjasta@fb.com"
"6667","facebook/stetho","c53a222fe4765d2da7fe8f5e353b4f5155c31b76",9,"2015-03-27 16:57:28-07:00","Demonstrate an ""optimal"" release configuration
with Stetho  This diff modifies stetho-sample and
stetho-urlconnection to provide a convenient
configuration which excludes the stetho core
module from release builds but still allows the
developer to ship network instrumentation from
stetho-urlconnection.  In particular, stetho-
sample uses a separate Application instance for
debug builds only that initializes Stetho.  The
trick is further described here:
http://littlerobots.nl/blog/stetho-for-android-
debug-builds-only/  For stetho-urlconnection, we
allow it to be used unconditionally in debug and
release builds where only the debug builds
actually include stetho.  Stetho's presence is
detected at runtime in and the internal methods
turn into no-ops accordingly.  This approach is
intended to be source and binary compatible with
previous releases.  It is also expected to
efficiently pass the verifier on both Dalvik and
ART without spamming unresolved method/class
warnings.  This is achieved by way of the Holder
class proxy in accordance with:
http://en.wikipedia.org/wiki/Initialization-on-
demand_holder_idiom  Note that the strategy for
stetho-okhttp is slightly different since the
hooking exists inside okhttp itself.  Because of
this, callers can arrange for a simple
`src/debug/...` style solution to hook their
initialization of OkHttp much like how stetho-
sample configures Stetho itself.  Closes #16
",6244,122,2250,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6668","facebook/stetho","43585ad4e0f0e2d6ac4e0ebf2092bfdc059924e2",5,"2015-03-30 22:54:56-07:00","Implement Elements, Properties sub-tab  With this,
developers can explore the Java object structure
live from Stetho as if a traditional debugger was
attached.  This UI is a bit buried and hard to
notice, but can be found by clicking on an element
in the Elements tab and then finding the
Properties tab on the right-hand panel.  It is
sometimes hidden behind a ""more options""-style
button.
",8335,155,2345,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6669","facebook/stetho","2a89189298ae2b3a31c20d118751921e96d14115",1,"2015-04-02 14:15:38-07:00","Clarify how `mHolder` is guarded.  Also avoid
calling `isStethoPresent()` on each method call
which is obviously much slower than intended.  The
function has been removed as this pattern clearly
has issues.
",6246,122,2252,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6670","facebook/stetho","66e50437b1e5df089ef63640fcce9ee6b7df3155",7,"2015-04-03 10:30:39-07:00","Fetch deep links to find large format image URLs
for APOD sample  This adds somewhat arbitrary
network overhead to highlight the kinds of
bugs/inefficiencies that Stetho is good at rooting
out.  Specifically in this case, we improved the
quality of the APOD thumbnail image but by greatly
overfetching data and slowing down the UI.
Stetho's Network tab makes it very easy to see why
(adding an extra round-trip through an HTML page
and downloading images that are 4x+ larger than
the space they occupy)
",8760,161,2446,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6671","facebook/stetho","b75bffa5d90236dd1fed71ff95bcb54ee98f4791",3,"2015-04-03 11:30:28-07:00","Fix NPE crash in ResourcesUtil.getIdString()
Closes #131
",8734,162,2442,"Rick Brewster","rickbrew@fb.com","Rick Brewster","rickbrew@fb.com"
"6672","facebook/stetho","71f007507f35e621a29a7450a2ce8caf77d3d1ac",1,"2015-04-11 16:29:03-07:00","Improve support pre-JB for Activity detection
This uses an older API (available to ICS+) to
track activities instead of relying on an ugly
reflection trick known to work only on JB+ (and of
course not future proof).  There's a slight
overhead increase in Stetho.initialize as a
result, but the timings added indicate it is still
very small (1-2ms on my Nexus 5).  The mechanism
for tracking activities is partially exposed via
ActivityTracker which has a manual add/remove
method which allows developers to add support for
pre-ICS even by hooking their own application
onCreate/onDestroy events just like
HierarchyViewer's ViewServer used in the past.
Closes #123
",9039,165,2505,"Josh Guilfoyle","devjasta@fb.com","Josh Guilfoyle","devjasta@fb.com"
"6673","facebook/stetho","2fedfcc693ef274fceb458202ece96a3d6b534d1",1,"2015-04-23 17:18:21-07:00","Minor housekeeping of ActivityTracker
",8988,164,2488,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6674","facebook/stetho","a7df7408ffeb1fd2e945634da9fd0e09770fafdf",1,"2015-04-25 22:44:44+02:00","stetho timber integration
",9058,166,2515,"Daniele Conti","dnlcnt@gmail.com","Daniele Conti","dnlcnt@gmail.com"
"6675","facebook/stetho","0d14360b3d849483a35992db1837899cbcea1c7c",19,"2015-04-11 14:38:54-07:00","Rework FragmentApi to not use reflection  This
change has a few significant advantages:  1. Much
more efficient 2. Lint-safe (requiring @TargetApi
where appropriate) 3. Causes proguard to keep the
support library methods we reference  Closes #140
",8793,164,2470,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6676","facebook/stetho","6254fd66f07221c53166dbd1e9a45693ff1b7768",2,"2015-04-30 22:44:23-07:00","Switch to RuntimeReplFactory to isolate instances
per session  This allows for memory reclamation of
what is presumed to be a very heavy
implementation.
",9195,170,2665,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6677","facebook/stetho","f5f147365fe7d022fc2113d12bd83dba84a0912a",1,"2015-05-04 13:09:40-07:00","Fix Fragment support in Elements tab  Closes #182
",9229,172,2753,"Rick Brewster","rickbrew@fb.com","Rick Brewster","rickbrew@fb.com"
"6678","facebook/stetho","fee68519d93899dc5cfe6b992f56916a03b279f2",9,"2015-06-29 13:09:05-07:00","Implementation of DialogFragment support for
Elements  Closes #193
",10128,186,3039,"Rick Brewster","rickbrew@fb.com","Rick Brewster","rickbrew@fb.com"
"6679","facebook/stetho","4137f9ba7751d4dfdf702d8b6d0d17d9fa8cb548",13,"2015-07-14 15:40:48+03:00","Remove redundant modifiers from interfaces
",10287,187,3050,"Boris Korogvich","b.korogvich@gmail.com","Boris Korogvich","b.korogvich@gmail.com"
"6680","facebook/stetho","c1a30489d3fb3490276d31895c3f8f9077f18152",5,"2015-04-28 22:59:53+02:00","Add a JavaScript REPL provided by Mozilla's Rhino
This is a first draft at adding a REPL.  What
works:  - basic JS expressions  - evaluatied
statements preserve their states (can create a
variable and it will persist between successive
calls)  - return types are properly expanded by
chrome's inspector  - binding of android's Context
(passed as `context`)  - binding for classes:
`System.gc()` is `Packages.java.lang.System.gc()`
- console redirection with `console.log()`  -
`importPackage()` to import all classes under a
java package  - `importClass()` to import a single
class  - binding variables  - binding functions
For more details see:  -
https://developer.mozilla.org/en-
US/docs/Mozilla/Projects/Rhino/Scripting_Java  -
https://developer.mozilla.org/en-
US/docs/Rhino_documentation
",9426,175,2873,"Emmanuel Rodriguez","emmanuel.rodriguez@gmail.com","Emmanuel Rodriguez","emmanuel.rodriguez@gmail.com"
"6681","facebook/stetho","b41e5d698988f73d0c21d487737cc8e94b43a391",3,"2015-08-04 18:11:05-07:00","Implement transparent request decompression
Request decompression is not officially part of
the standard but many mobile implementations
choose to do it because payloads tend to be quite
large on clients and servers these days are easily
made to support it. This diff simply makes it so
that Stetho will show the decompressed payload,
but still report the compressed payloads size to
the UI.  Note that this only affects stetho-
urlconnection and stetho-okhttp. Other modules
must manually implement this as it is not possible
given the existing API contract to do it
transparently.  Closes #111
",10690,191,3193,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6682","facebook/stetho","c21abb8f337d28169b0295afc5760ee557c0bfa8",5,"2015-07-08 12:17:16-07:00","Implement Async Pretty Printer to pretty print
binary payload
",11207,199,3333,"Mengdi Lin","mengdilin95@gmail.com","Mengdi Lin","mengdilin95@gmail.com"
"6683","facebook/stetho","09764112b2fd0bd1b1058203efe8c24d00f5241f",6,"2015-07-23 16:00:16-07:00","Split DOM into two classes: Document and DOM  DOM
now handles only the communication between Chrome
and Stetho, whereas Document is responsible for
accessing, modifying, and maintaining information
about elements on the Android side. The motivation
for this change is that DOM is not the only class
that needs access to information about elements -
CSS also needs this information. By splitting
these classes up it is possible for both DOM and
CSS to be able to get and set element data.
",11386,200,3347,"=","ivansergchub@gmail.com","=","ivansergchub@gmail.com"
"6684","facebook/stetho","5a6e7a7f013cd4fc679647ebc379559c20ab6a46",4,"2015-08-14 10:57:09-07:00","Update registration flow for Async Pretty Printer
add AsyncPrettyPrinterInitializer interface for
populating async pretty printer's registry with
pretty printers and their corresponding response
header names
",11198,199,3352,"Mengdi Lin","mengdilin95@gmail.com","Mengdi Lin","mengdilin95@gmail.com"
"6685","facebook/stetho","38ef271e0868d90d248879db5f901ee0f5b48bba",1,"2015-08-14 13:39:41-07:00","initializing executor service for async pretty
printers on first peer registered  address issue
#255
",11412,201,3376,"Mengdi Lin","mengdilin95@gmail.com","Mengdi Lin","mengdilin95@gmail.com"
"6686","facebook/stetho","3813afe30562087973c5b7c8b9593de16d31871c",1,"2015-05-14 23:42:07-07:00","Initial implementation of screencasting support
",11582,202,3388,"Felipe Lima","felipe.lima@gmail.com","Felipe Lima","felipe.lima@gmail.com"
"6687","facebook/stetho","1212a8eb00300e7862ff36a9798dd688e64e2e19",21,"2015-08-04 08:30:41-07:00","Autodetect stetho-js-rhino and use it  This diff
focuses on making stetho-js-rhino a bit more of a
first-party citizen in Stetho, with the default
implementation both detecting it more conveniently
and automatically using it if available or
recommending users add it to the classpath so that
it will be autodetected.
",11460,202,3394,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6688","facebook/stetho","00e8127a0d5d95610e8c4d20cc7592fbe7de5830",4,"2015-09-01 15:03:52-07:00","Further refine DefaultInspectorModulesBuilder  As
the DevTools implementation has matured it has
become clear that the modules are not truly
modular or interchangable at all and have heavy
dependencies between the two that make it
impossible to provide or configure them in
isolation.  Because of this, we're moving to a
more explicit customization API which is
responsible for managing the dependencies of the
implementation directly while still preserving the
level of abstractions already present in the
system (such as providing a custom document model,
runtime REPL, etc).
",11659,205,3481,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6689","facebook/stetho","e20d0b465d91fb8eabefc07af22f77b57ac86bbb",15,"2015-07-30 10:02:56-07:00","Added the ability to inspect an element's style
This pull request adds the ability to view the
style of an element that is selected in the
elements tree using the same UI as what is shown
in the styles tab when inspecting an element of a
webpage.  Some gotchas:  * The names of style
properties shown are not copied verbatim from the
names of fields in the `View` class, but are
translated to a format that Chrome understands.
For example, `View` has a field called
`paddingLeft`, but in order for that to be
rendered correctly in Chrome, it needs to be
transmitted as `padding-left`.  * Default values
are not transmitted, unless they are of an enum
type, in which case they are *always* transmitted.
* Due to inconsistencies between annotations
present on certain Android SDK versions, some
fields that are enums are not translated into
their string representation. This is unfortunate,
but the only way to get around it is by special-
casing those one or two cases, which is probably
not viable long-term.  Some things that would be
nice to add in the future:  * Inferring some way
the element's style 'class', so that the styles
aren't all aggregated into one blob. Same with
style inheritance.  * In Chrome you can edit these
CSS properties, but here you can't. Maybe a future
project? Would probably relatively simple to add.
Style inspection of Stetho's 'Settings' button:
<p align=""center""> <img src=""https://cloud.githubu
sercontent.com/assets/2636237/9415188/5872116c-47f
2-11e5-8764-ebb2bd43bcbf.png"">  <img src=""https://
cloud.githubusercontent.com/assets/2636237/9415244
/ad7b3350-47f2-11e5-97de-7d84772b3021.png""> </p>
",11855,204,3412,"=","ivansergchub@gmail.com","=","ivansergchub@gmail.com"
"6690","facebook/stetho","d2767ffa10ec1ead688e71a2ed9a62ccf5066d98",1,"2015-09-14 16:12:06-07:00","Added deepexport support so that margins are
displayed
",12161,208,3523,"=","ivansergchub@gmail.com","=","ivansergchub@gmail.com"
"6691","facebook/stetho","3c334e44d63d1409995f13a7efacdccecb2c5ee7",6,"2015-09-24 23:26:34+02:00","Improved JSConsole when handling ""%d"" with a float
as argument  In JavaScript every number is a
floating point number, even ints! This causes
console.log(""%d"", 42) to fail because the initial
implemenation was using String.format() and it
can't handle a floating point with %d.  We now
have a custom formatter that mimics what google
chrome does (with a few improvemnts).  This patch
also adds unit tests to the project stetho-js-
rhino.
",12276,210,3594,"Emmanuel Rodriguez","emmanuel.rodriguez@gmail.com","Emmanuel Rodriguez","emmanuel.rodriguez@gmail.com"
"6692","facebook/stetho","7a27fc7e9557c155c7103daa4a38060332ced182",1,"2015-10-05 19:40:45+03:00","Improved API to better provide DatabaseDrivers
part of Stetho initialization. Refined
DatabaseDriver and removed duplicated registration
code.
",12525,212,3623,"Roman Kushnarenko","sromku@gmail.com","Roman Kushnarenko","sromku@gmail.com"
"6693","facebook/stetho","eb0ca3d565ce75f147d3ef8d376230f4e1f263a2",11,"2015-09-27 14:59:02-07:00","Remove dependency on Apache HttpClient  Android
6.0 removes support for HttpClient and forces
applications to bundle the jars directly if
targeting 6.0 in an effort to phase out its usage
more aggressively.  Unfortunately, Stetho depended
on HttpClient for a crude HTTP server
implementation to facilitate dumpapp and the
Chrome DevTools protocol.  This diff adds an HTTP
server for general purpose usage within Stetho but
also heavily modifies dumpapp to no longer use
HTTP at all.  This became possible late in
dumpapp's development when a framing protocol was
developed to support stdout/stderr.  This framing
protocol made it easy to use pure sockets and to
further mimic the command-line paradigm.  The
legacy HTTP support for dumpapp remains but in
limited capacity (does not support stdin and
cannot do streaming stdout/stderr output). A
warning is produced when the old script is used.
Stetho combines both the new binary dumpapp
protocol with the DevTools HTTP/WebSocket protocol
in a single socket and simply sniffs the first few
bytes from the client to determine how to handle
the remainder of the stream.  This was done for
simplicity and performance so that just one server
would need to be set up when Stetho initializes.
Closes #251
",12891,233,3830,"Josh Guilfoyle","jasta@devtcg.org","Josh Guilfoyle","jasta@devtcg.org"
"6694","facebook/stetho","24d0d3e25d8c72eee3dc373b6915368c68c649b8",1,"2016-01-21 17:32:08-08:00","Fix for duplicates in Element tree
",13330,235,3879,"Rick Brewster","rickbrew@fb.com","Rick Brewster","rickbrew@fb.com"
"6695","facebook/stetho","b247a0b3363075e22da25ade97409141da3280f5",2,"2016-02-01 16:40:07-08:00","Cache the result from
ObjectMapper.getJsonValueMethod()  Caching this
results in significant performance wins for the
Elements tab.  I also experimented with a general
reflection cache, e.g. Class<?>.getFields(),
getEnumConstants(), etc. While that also seemed to
improve things, I'm not completely confident
without running a micro-benchmark or a sampling
profiler.
",13349,235,3880,"Rick Brewster","rickbrew@fb.com","Rick Brewster","rickbrew@fb.com"
"6696","facebook/stetho","d361ee10496150e6f03f34c590db92de9f15df58",12,"2016-05-27 13:25:06-07:00","Added ignoredReasons to accessibility inspection
",13698,240,4045,"Brett Lavalla","blavalla@fb.com","Brett Lavalla","blavalla@fb.com"
"6697","facebook/stetho","37e615ed293ab49073f57b37e51fdcc6334cf919",2,"2016-12-12 14:30:36-08:00","Comprehensive fix for NPE and retained Fragments
Closes #381
",13898,240,4079,"Rick Brewster","rickbrew@fb.com","Rick Brewster","rickbrew@fb.com"
"6698","facebook/stetho","51dc9f13274706bdf0afd67c1f000ef615987561",3,"2017-02-06 22:34:45+00:00","Make NodeDescriptor, Descriptor, and
HighlightableDescriptor generic  Previously only
AbstractChainedDescriptor was generic. Anyone
extending directly from Descriptor or implementing
HighlightableDescriptor had to make sure to add
casts from Object to their concrete type. This
diff solves that by making all descriptors
generic.
",13890,240,4075,"Emil Sjolander","emilsj@fb.com","Emil Sjolander","emilsj@fb.com"
"6699","facebook/stetho","2dc6ed18c735529c415865a5c3bed45c666f7571",12,"2017-02-06 22:42:12+00:00","Add ability to highlight sub-bounds of view  A
descriptor may not map directly to a View. For
example if a Descriptor was created for a Drawable
it may occupy only a partial space in the View.
This diff solves this problem for descriptor
highlighting by extending HighlightableDescriptor
with a method for returning the bounds to
highlight. Returning null will highlight the full
bounds of the View.
",13923,240,4081,"Emil Sjolander","emilsj@fb.com","Emil Sjolander","emilsj@fb.com"
"6700","facebook/stetho","5adb74be99af07854e100c3005b3acc20d71af5b",14,"2017-03-04 10:57:08+00:00","Enable hit testing for non-view elements  This
commit enabled hit testing for non-view elements
by moving the logic from stetho into the
descriptors themselves. This allows non-view
descriptors to perform hit testing with their own
logic.
",14077,244,4114,"Emil Sjolander","emilsj@fb.com","Emil Sjolander","emilsj@fb.com"
"6701","facebook/stetho","83f2bd8ea76f8c99a74cd398338ac30a7e6fc6e7",3,"2017-03-09 16:28:04-08:00","Fixed unexpected dependency on support library for
Accessibility properties
",14111,244,4114,"Brett Lavalla","blavalla@fb.com","Brett Lavalla","blavalla@fb.com"
"6702","facebook/stetho","a2eb108683307bff15a19cf50226db3a076b76ba",1,"2017-03-10 08:14:27-08:00","Avoid false positive in LeakCanary  LeakCanary
flags Stetho's ActivityTracker as a potential leak
because it does indeed have a path to the GC root
that isn't already covered by the many exclusions
present in LeakCanary for legitimate Android use
cases. This is essentially a known flaw in
LeakCanary in which unknown path to GC roots are
assumed to be leaks even if they are indeed
consistent with the normal object lifecycle (like
in our case the strong reference is removed when
the activity is destroyed).  Working around this
issue is trivial however and does indeed have the
effect of making our code look less suspicious of
leaks in the first place.  Closes #319
",14099,244,4118,"jasta","jasta@devtcg.org","jasta","jasta@devtcg.org"
"6703","facebook/stetho","1506dd23bb6050ed454c845e55659768e7d557ce",1,"2016-06-01 20:40:43-07:00","Fix database id mapping to remove guesswork hacks
The SqliteDatabaseDriver had to resort to counter
intuitive hacks to manually locate a database by
its file name and didn't properly handle
deduplicating multiple databases with the same
name.  As we expanded flexibility we failed to
address the possibility (nay, likelihood) that
this will occur and it would create very confusing
results for users.  This diff doesn't address the
confusion in the UI (two database entries of the
same name can still occur) but it internally makes
it possible to treat them as separate databases
and track their filenames separately. It also
makes it relatively straightforward to fix the
uniqueness of the user visible naming by
introducing a ""context"" parameter to
DatabaseDescriptor which would be used in the case
of name ambiguity.  This diff addresses concerns
raised in #366 and #367.
",14193,248,4173,"jasta","jasta@devtcg.org","jasta","jasta@devtcg.org"
"6704","facebook/stetho","c729a3a24324c205d136f463589a8b1241d6c2a4",1,"2017-03-12 21:17:35-07:00","Add full ""websocket"" support to
NetworkEventReporter  Note that websockets and
sockets can be used more-or-less interchangably
from Stetho's point of view since we're emulating
the support from Chrome and therefore can choose
to treat any socket-like stream of data as a
""websocket"" for display purposes.  This is
demonstrated in a subsequent diff which introduces
an IRC client to stetho-sample.  Note that there
is no explicit pretty printing functionality as of
yet though this can be done at the client level by
simply not hooking raw sockets but rather
interpreting the messages at a higher level before
sending them to NetworkEventReporter.
",14323,246,4183,"jasta","jasta@devtcg.org","jasta","jasta@devtcg.org"
"6705","facebook/stetho","7133e9aff5ed3c2dffd28e5d069a6d75a72e2150",6,"2017-03-12 21:20:56-07:00","Add IRC client to stetho-sample to demonstrate new
WebSocket support  The basic flow of the IRC
client involves an initial connect screen which
prompts the user for server and nickname then
transitions to a chat screen which initiates the
connection and offers a simple terminal to type
raw IRC commands and see the full set of replies
from the server.  Pressing back or encountering
any I/O exception will cause the user to return to
the connect screen and will shutdown the websocket
(causing it to show as ""Finished"" in
chrome://inspect).
",14676,249,4191,"jasta","jasta@devtcg.org","jasta","jasta@devtcg.org"
"6706","facebook/stetho","68709f14486b26dfc0259fcaa44d199de2ed6000",2,"2017-07-26 10:25:43-07:00","Add @Nullable to constructor and field.
",14814,253,4253,"Warren Smith","warrens@uber.com","Warren Smith","warrens@uber.com"
"6707","facebook/stetho","9cf71ea1ebbca1da8b84d2311351ce18e8ad857e",4,"2018-10-10 21:34:13+08:00","support window View Hierarchy (dialog,
popupwindow, toast, and so on)
",14984,257,4287,"wanjian","wanjian@youzan.com","wanjian","wanjian@youzan.com"
"6708","didi/DoraemonKit","62b8ccbcc970a09f08ccb0eb0394e0bfa202550d",95,"2018-12-21 17:29:01+08:00","Âä†ÂÖ•AndroidÈ°πÁõÆ
",10847,205,1296,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6709","didi/DoraemonKit","a94c80c71ab7e179420e15c212840765f85c4b1c",16,"2019-02-17 20:29:08+08:00","change[]: AndroidÂèëÂ∏É1.1.0ÁâàÊú¨
",12306,231,1461,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6710","didi/DoraemonKit","908efd6eeef501cde8a6c8005092bf6e247cd7cd",5,"2019-02-22 16:52:12+08:00","change[]: androidÂèëÂ∏É1.1.2ÁâàÊú¨
",15680,284,2469,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6711","didi/DoraemonKit","2fbf5bf1921e3eaa3e8f83909efe963f519b633b",5,"2019-03-30 15:29:57+08:00","change[]: androidÂèëÂ∏É1.1.3ÁâàÊú¨
",15918,295,2505,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6712","didi/DoraemonKit","ed62559293bccd84a9698f3bdb968cc6b1d0f362",11,"2019-04-24 17:22:02+08:00","change[]: androidÂèëÂ∏É1.1.5ÁâàÊú¨
",16806,314,2581,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6713","didi/DoraemonKit","95e21463f26554ecfb9a21a13c9aa0e68865ee57",6,"2019-05-04 22:47:02+08:00","change[]: androidÂèëÂ∏É1.1.6ÁâàÊú¨
",18349,345,2817,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6714","didi/DoraemonKit","d213de1b248c2e2681d620d74f9fb032850d7cac",2,"2019-05-05 11:47:08+08:00","H5‰ªªÊÑèÈó® Ê∑ªÂä†Ê∏ÖÁ©∫ÂéÜÂè≤ËÆ∞ÂΩï„ÄÅÊâ´Êèè‰∫åÁª¥Á†ÅÂäüËÉΩ
",18428,341,3265,"阿钟","958460248@qq.com","阿钟","958460248@qq.com"
"6715","didi/DoraemonKit","bac6c4c6e4e14456964fd4f15272e02b473e2bf5",2,"2019-05-10 17:00:14+08:00","Ê®°ÊãüÂº±ÁΩëÁöÑÂäüËÉΩ
",20038,369,3498,"denghaha","denghahae@qq.com","denghaha","denghahae@qq.com"
"6716","didi/DoraemonKit","92c8c9661a5d829f7956c3ac2f564260ff14cd1a",47,"2019-06-14 14:38:30+08:00","change[]: androidÂèëÂ∏É1.1.8ÁâàÊú¨
",20644,370,3504,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6717","didi/DoraemonKit","4e24773ccefcb83cd407bdf96d8450156da01fdb",19,"2019-07-02 11:46:49+08:00","Êñ∞Â¢ûWeex‰∏ìÈ°π
",21399,391,3584,"haojianglong","haojianglong@didiglobal.com","haojianglong","haojianglong@didiglobal.com"
"6718","didi/DoraemonKit","cc3ee0d9f44b3b060ac27f349e0def5821fbc115",1,"2019-08-09 18:01:33+08:00","update ÂÖ∂‰ªñissueÂ§ÑÁêÜÂèä1.2.0ÁâàÊú¨ÂèëÂ∏É
",21311,391,3596,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6719","didi/DoraemonKit","eac0756687fe524022f34e244691f958336f69ec",3,"2019-08-14 18:27:37+08:00","‰øÆÂ§çgps mockÂäüËÉΩÂèäÂèçÈ¶àÁöÑCrash
",21416,391,3598,"wanglikun7342","wanglikun7342@gmail.com","wanglikun7342","wanglikun7342@gmail.com"
"6720","didi/DoraemonKit","6640bda74582424502437f30af3170a4453c32f4",192,"2019-10-30 20:57:28+08:00","modify: 1„ÄÅadd dokit v1.2.5
",30278,526,7929,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6721","didi/DoraemonKit","d04c18869e6a7aca9d494ceecf0643173d674962",20,"2019-12-17 19:04:19+08:00","modify: 1„ÄÅÊñ∞Â¢ûasm aopÊñπÊ°à
",38853,649,11502,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6722","didi/DoraemonKit","f95e6f96d4fd96311ed853129548a4d3fc761f65",5,"2019-12-25 17:15:46+08:00","modify: 1„ÄÅËøáÊª§dokit sdkÁöÑÂÜÖÂ≠òÊ≥ÑÊºè
",38931,646,11720,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6723","didi/DoraemonKit","e772b823573d175a1257c30866417253d66ae876",6,"2019-12-27 16:36:10+08:00","modify: 1„ÄÅÊñ∞Â¢ûÂÅ•Â∫∑‰ΩìÊ£ÄUI
",39144,654,11775,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6724","didi/DoraemonKit","555cb0906e48f44d1179d7fba396d7959c23d6ca",1,"2020-01-03 16:24:34+08:00","modify: 1„ÄÅÊñ∞Â¢ûÂÅ•Â∫∑‰ΩìÊ£ÄÂ∑•ÂÖ∑Á±ª
",40160,662,12265,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6725","didi/DoraemonKit","e1bfca1e6d8236480061204ae6c329438caad301",3,"2020-01-07 10:50:52+08:00","modify: 1„ÄÅÊñ∞Â¢ûcpu„ÄÅÂÜÖÂ≠ò„ÄÅfps„ÄÅÁΩëÁªú„ÄÅÂç°È°øÁ≠âÂÅ•Â∫∑ÊåáÊ†áÊï∞ÊçÆ
",40326,664,12359,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6726","didi/DoraemonKit","fdc36d66587d69a18b3db2e21c9ea4b7bf9c7102",1,"2020-01-10 15:37:53+08:00","modify: 1„ÄÅÂÆåÂñÑÂÅ•Â∫∑‰ΩìÊ£ÄÂäüËÉΩ
",40692,668,12461,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6727","didi/DoraemonKit","79f41c739745f9e1fc37eb0daaee19352234990a",6,"2020-01-12 17:02:47+08:00","feat: ËßÜÂõæÊ£ÄÊü•Â∑•ÂÖ∑ÔºåÂÖÅËÆ∏ÊòæÁ§∫Á¨¶ÂêàÊù°‰ª∂ÁöÑÊâÄÊúâËßÜÂõæ
",38915,645,11622,"daiyibo","daiyibo@souche.com","daiyibo","daiyibo@souche.com"
"6728","didi/DoraemonKit","2b6dc906cd64847d892c3411cfaf370dc52ebad6",1,"2020-02-21 23:02:47+08:00","modify: 1„ÄÅÂÖºÂÆπAndroid QÁöÑÂèñËâ≤Âô® ‰ΩÜÂú®Á≥ªÁªüÊ®°Âºè‰∏ãËøòÊúâÁÇπÈóÆÈ¢ò
",41204,677,12680,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6729","didi/DoraemonKit","d158b42b8440906dae8c16deea08acee008db364",1,"2020-02-25 19:02:52+08:00","modify: 1„ÄÅÂÖºÂÆπAndroid QÁöÑÂèñËâ≤Âô®
",40816,668,12712,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6730","didi/DoraemonKit","c0bf556b7c00ae0f20bd43abc0225df5b3ee685c",1,"2020-03-13 21:24:10+08:00","modify: 1„ÄÅ‰ºòÂåñÊèí‰ª∂ÂäüËÉΩ
",41664,682,13111,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6731","didi/DoraemonKit","3de51968a7a00ee892f9bcd1a159a592713ba9aa",1,"2020-03-19 18:28:07+08:00","modify: 1„ÄÅÊñ∞Â¢ûhostÁôΩÂêçÂçïËøáÊª§
",41917,686,13236,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6732","didi/DoraemonKit","4f02b1b0f38dc04c98309fda388d0630158d3192",1,"2020-03-20 18:18:03+08:00","modify: 1„ÄÅÊñ∞Â¢ûhostÁôΩÂêçÂçïËøáÊª§
",41930,686,13250,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6733","didi/DoraemonKit","2c00ede0538ee04bd3f82cb356b9c664fe5d87f9",1,"2020-03-23 11:59:15+08:00","modify: 1„ÄÅ‰ºòÂåñleakcanaryËß£ÂÜ≥ÊñπÊ°à
",42343,696,13351,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6734","didi/DoraemonKit","b461a3ef719703abd770291e85c3bebcd9a8a707",2,"2020-03-24 19:09:09+08:00","modify: 1„ÄÅ‰ºòÂåñGlideÊã¶Êà™ÊñπÊ°à
",45957,741,15066,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6735","didi/DoraemonKit","ab4415bafe85b04cb129346b44a9971d3f3705ab",2,"2020-03-30 18:34:46+08:00","modify: 1„ÄÅÂçáÁ∫ßandroidx
",45978,746,15085,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6736","didi/DoraemonKit","beb75e70cfa872a9d317d85470634d9ca30b7ba6",4,"2020-03-30 19:05:06+08:00","modify: 1„ÄÅÂçáÁ∫ßandroidx
",45974,746,15087,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6737","didi/DoraemonKit","e6f4c0701a7681451c340c95138acf356994e074",38,"2020-04-02 17:17:11+08:00","modify: 1„ÄÅÂéªÊéâbravhÁöÑËøúÁ®ã‰æùËµñÂπ∂Êñ∞Â¢ûkotlinÁºñËØëÊîØÊåÅ
",47140,772,15494,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6738","didi/DoraemonKit","6dc1b944ccb62a20568fbe93504d010cf5d8e7c4",3,"2020-04-03 17:50:19+08:00","modify: 1„ÄÅËß£ÂÜ≥Â§ßÂõæÁºñËØëÊèí‰ª∂ÁöÑÈóÆÈ¢ò
",47212,774,15481,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6739","didi/DoraemonKit","44f42778812f21dfc92bc6a573b7f9ebc1bbc423",3,"2020-04-09 10:10:29+08:00","modify: 1„ÄÅ‰øÆÂ§çÂõæÁâáÊ°ÜÊû∂‰ª£Á†Å
",47328,774,15544,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6740","didi/DoraemonKit","0ee80b177a5b4efbed3e5be57e381f0977539b6b",2,"2020-04-13 19:08:26+08:00","modify: 1„ÄÅÊñ∞Â¢ûpost bodyÂà§Êñ≠
",46782,763,15417,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6741","didi/DoraemonKit","1254ab802fbe639bcb96a860c1d627d474cd50af",4,"2020-04-15 14:23:49+08:00","modify: 1„ÄÅËß£ÂÜ≥retrfit Âú®Êüê‰∫õÂú∫ÊôØ‰∏ã‰ºöÊä•ÈîôÁöÑÈóÆÈ¢ò
",46851,763,15447,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6742","didi/DoraemonKit","884fbbe597caeaf529810fcbfbd6e4ee87e77d7c",1,"2020-04-20 11:05:24+08:00","modify: 1„ÄÅÂçáÁ∫ßsp‰∏≠ÁöÑ‰∏ä‰∏ãÊñáÁéØÂ¢ÉÊîπ‰∏∫ÂÖ®Â±ÄÂèòÈáè
",43612,714,14152,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6743","didi/DoraemonKit","ae39c8a64f89dbf8cdf1ac33286bbe683fc74c2b",5,"2020-04-27 11:43:57+08:00","android: plugin parse AndroidManifest.xml
",44353,733,14403,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6744","didi/DoraemonKit","b2b04ff9498e96fd6280001d2a05ed4656f47ffd",3,"2020-04-29 10:22:32+08:00","android: Êñ∞Â¢ûÊèí‰ª∂ÈÖçÁΩÆ
",44718,738,14473,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6745","didi/DoraemonKit","949fbba940b6dd41f907ca9c04de277e04ef97d4",6,"2020-04-30 18:36:31+08:00","android: Êñ∞Â¢ûÊèí‰ª∂ÈÖçÁΩÆ
",45096,741,14495,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6746","didi/DoraemonKit","fa519ea81f352c8dcbb82d7d34a3aed2203b22aa",2,"2020-05-11 16:28:45+08:00","android: update rpc api
",44454,724,14319,"jackjintai","jackjintai@didiglobal.com","jackjintai","jackjintai@didiglobal.com"
"6747","scwang90/SmartRefreshLayout","b122d10421d289b3dc4db260f7d8cf3cf5ae3cf8",4,"2017-06-02 21:38:59+08:00","ÂàùÂßãÊèê‰∫§È°πÁõÆ
",4036,49,825,"scwang90","scwang90@hotmaiul.com","scwang90","scwang90@hotmaiul.com"
"6748","scwang90/SmartRefreshLayout","33cab53be90e6e2fd24b0d067fc8ee4382f7e3f9",6,"2017-06-12 02:16:46+08:00","ÂÆåÊàê Header ÁöÑxmlÊ†∑ÂºèÂÆö‰πâ
",7272,83,1422,"wsc","scwang","wsc","scwang"
"6749","scwang90/SmartRefreshLayout","6389fd5d797ae58b7cf63e505e984781259fcecc",2,"2017-06-16 15:07:52+08:00","ÂàùÂßãÊèê‰∫§È°πÁõÆ
",8317,96,1639,"scwang90","scwang90@hotmaiul.com","scwang90","scwang90@hotmaiul.com"
"6750","scwang90/SmartRefreshLayout","71bd6251f7092abe23f95739ceb901f2b679c489",6,"2017-06-18 04:46:26+08:00","ÂÆåÊàê Header ÁöÑxmlÊ†∑ÂºèÂÆö‰πâ
",9554,101,1926,"wsc","scwang","wsc","scwang"
"6751","scwang90/SmartRefreshLayout","6bcb245c1d2399d2c166691121e605ffb7fd59b5",1,"2017-06-22 18:01:42+08:00","È°πÁõÆ‰ªãÁªçÊéíÁâà
",10129,108,1983,"scwang90","scwang90@hotmaiul.com","scwang90","scwang90@hotmaiul.com"
"6752","scwang90/SmartRefreshLayout","be1dad3382672b423a3d2fe0e36587cf84a6d5f2",1,"2017-06-26 00:25:57+08:00","ÂÆåÊàêËá™‰∏ªÂºÄÂèëÁöÑDropboxHeader
",11004,111,2067,"wsc","scwang","wsc","scwang"
"6753","scwang90/SmartRefreshLayout","1d3e772ca15c27e75ece9bd613d9dbf0a15183a3",1,"2017-10-10 11:43:25+08:00","Ê∑ªÂä†demo Á∫ØÊªöÂä®Ê®°ÂºèÁ§∫‰æã
",14242,134,3245,"scwang90","scwang90@hotmaiul.com","scwang90","scwang90@hotmaiul.com"
"6754","scwang90/SmartRefreshLayout","bcce20d72ac43b60184315351a19c40263a6897f",3,"2017-11-17 15:58:39+08:00","Êõ¥Êñ∞ÊñáÊ°£
",14948,140,2991,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6755","scwang90/SmartRefreshLayout","55c46c5b33e736385d89f998331af0071ade5427",3,"2017-12-04 01:01:03+08:00","Ê∑ªÂä†Ê∑òÂÆù‰∫åÊ•º
",15028,140,2930,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6756","scwang90/SmartRefreshLayout","93ad8c44febe026716b1163bfc9a2638f16becea",3,"2017-12-05 00:27:56+08:00","ÂèëÂ∏É 1.0.4-2 ÁâàÊú¨ Ê∑ªÂä†ÂØπÊ∑òÂÆù‰∫åÊ•º„ÄÅ‰∫åÁ∫ßÂà∑Êñ∞ÁöÑÊîØÊåÅ
",15098,141,2935,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6757","scwang90/SmartRefreshLayout","cf47185e2294da3ce5e45bc13e51b548af738822",8,"2017-12-05 15:45:07+08:00","Êõ¥Êñ∞È°πÁõÆÈÖçÁΩÆ
",15094,140,2922,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6758","scwang90/SmartRefreshLayout","4e4deab9b8ac0ecb0316e995e7e98e7b096a4023",14,"2017-12-22 16:05:43+08:00","Êõ¥Êñ∞È°πÁõÆÈÖçÁΩÆ
",15148,140,2951,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6759","scwang90/SmartRefreshLayout","a5aa51ff3b8117da56219d804b59988772652659",3,"2018-01-07 02:26:44+08:00","Êõ¥Êñ∞ÊñáÊ°£
",15025,141,2778,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6760","scwang90/SmartRefreshLayout","6ce636422dccf3acb8bdf0009e9125fb2a6cdfc6",2,"2018-01-29 01:05:43+08:00","‰ºòÂåñÂõûÂºπÂäüËÉΩ
",15115,141,2783,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6761","scwang90/SmartRefreshLayout","9d7a313e265dd05d52799422766e8ea34a3aa083",17,"2018-01-29 01:56:42+08:00","ÈáçÁΩÆ ÂêçÁß∞ LoadMore
",15136,143,2816,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6762","scwang90/SmartRefreshLayout","e69748c626d3fd317710b75de8e0ee8484491715",1,"2018-02-05 20:15:14+08:00","‰ºòÂåñÊ∞¥Êª¥Header
",15388,148,3447,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6763","scwang90/SmartRefreshLayout","b3651caeaf24464ae1ba8f549c522f31df6248c2",6,"2018-02-06 03:47:30+08:00","ÂºÄÂßãÂêë V1.1.0 ÁâàÊú¨ËøõÂèë 1.Âà†Èô§ËøáÊúü API Âíå ÁõëÂê¨Âô®
2.ÁßªÂä®PathView„ÄÅPathDrawableÁ≠âÁü¢ÈáèÁ±ªÂà∞HeaderÂåÖ 3.Ê∑ªÂä†
InternalAbstract ÂíåInternalClassicsÂπ∂Â∫îÁî®Âà∞Â≠êÁ±ª 4.Âà†Èô§ ËøáÊñ∞ÁöÑ
View ÊûÑÈÄ†ÂáΩÊï∞ 5.Ê∂àÈô§ Â§ßÈáèË≠¶ÂëäÂíåÈîôÂà´Â≠ó
",14826,146,3363,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6764","scwang90/SmartRefreshLayout","00a4bfcb685691d853fe3f695b6c45a498134d7f",7,"2018-02-07 18:04:53+08:00","Êï¥‰Ωì‰ºòÂåñÂáèÂ∞ëÂ∫ì‰∏≠  ÊñπÊ≥ïÊï∞Èáè
",14479,140,3135,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6765","scwang90/SmartRefreshLayout","f69e76db344d56c7bc3f103149447c254e7d5f21",36,"2018-02-08 01:47:18+08:00","Â§á‰ªΩ FunGameHeader
",14468,140,3131,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6766","scwang90/SmartRefreshLayout","6a15c23857082caf61237baa272928d25a706fab",3,"2018-02-08 03:07:43+08:00","1.Êï¥ÂêàÂπ∂Âà†Èô§FunGameHeader 2.ÁªôStoreHouseHeaderÊ∑ªÂä†‰∏≠ÊñáÂõæÊ†áÁî®‰æã
",14520,139,3128,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6767","scwang90/SmartRefreshLayout","c11ebc2ff8aa2e59ca258f20845e378eb2595c76",1,"2018-02-09 17:33:57+08:00","ÂÜçÂ∫¶‰ºòÂåñ Ë¥ùÂ°ûÂ∞îÂíåËÑâÂÜ≤ÁêÉ
",14392,134,3091,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6768","scwang90/SmartRefreshLayout","ebdb09bc4288c1b031b78e1378fbc790ca7e206e",48,"2018-02-10 23:22:13+08:00","ÊûÅÂ∫¶‰ºòÂåñ ‰ºòÂåñË¥ùÂ°ûÂ∞îÊõ≤Á∫ø Âíå ÁªèÂÖ∏ Header ÁöÑÂÜÖÂ≠òÊ≥ÑÊºèÈóÆÈ¢ò
",14208,134,3032,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6769","scwang90/SmartRefreshLayout","74806e2bff8db71193d043f02c48ebff44997cec",7,"2018-02-28 19:45:20+08:00","1.Âà†Èô§ÈÉ®ÂàÜÂÜó‰ΩôÁöÑAPIÊé•Âè£ 2.ÊûÅÂ∫¶‰ºòÂåñÂéãÁº©ÁÆóÊ≥ïÔºåÂáèÂ∞ëdexÊñπÊ≥ïÊï∞Èáè 3.Êï¥Âêà‰∫åÁ∫ßÂà∑Êñ∞Âà∞Â∫ì‰∏≠
",13760,135,4150,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6770","scwang90/SmartRefreshLayout","0de72e371f03e266840802178185800a821f03e0",7,"2018-03-01 18:23:28+08:00","1.ÂÜçÂ∫¶‰ºòÂåñÂéãÁº©ÁÆóÊ≥ïÔºåÂáèÂ∞ëdex-methodÂà∞935
",14157,135,4137,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6771","scwang90/SmartRefreshLayout","0ecc67278143ce75b5d4652f69ec031128e6708e",1,"2018-03-02 11:24:17+08:00","1.ÂÜçÂ∫¶‰ºòÂåñÂéãÁº©ÁÆóÊ≥ïÔºåÂáèÂ∞ëdex-methodÂà∞903
",14150,135,4159,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6772","scwang90/SmartRefreshLayout","f1225ded6bb2cbedbde8516ba6a879805dfccf59",1,"2018-03-05 16:30:25+08:00","1.ÂÜçÂ∫¶‰ºòÂåñÂéãÁº©ÁÆóÊ≥ïÔºåÂáèÂ∞ëdex-methodÂà∞901
",14171,136,4159,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6773","scwang90/SmartRefreshLayout","04e7e82e0234a1edd529de381830af0ce45cd89d",47,"2018-03-23 17:06:58+08:00","1.ÂèëÂ∏É 1.1.0-alpha-2 ÁâàÊú¨
",14285,137,4184,"SCWANG","scwang90@hotmail.com","SCWANG","scwang90@hotmail.com"
"6774","scwang90/SmartRefreshLayout","c772b462efffd1d016df89faf7cdca1271093cea",6,"2018-05-29 16:41:45+08:00","1.Ê∑ªÂä†ÂÖ®Â±ÄÂàùÂßãÂåñÂô® 2.‰øÆÂ§çBallPulseFooterÂú®XmlÂàùÂßãÂåñÈ¢úËâ≤Êó†ÊïàÈóÆÈ¢ò 3.‰øÆÂ§çEn
ableLoadMoreWhenContentNotFull=falseÂØºËá¥Êó†Ê≥ïÂä†ËΩΩÁöÑÈóÆÈ¢ò
4.‰øÆÂ§çonDetachedFromWindow Êä•NPEÈîôËØØÈóÆÈ¢ò
5.‰ºòÂåñÊ∑òÂÆù‰∫åÊ•ºÂ±ïÂºÄ‰∏≠ÈÄîÂèØ‰ª•Ë¢´Êã¶Êà™ÁöÑÈóÆÈ¢ò 6.‰øÆÂ§çNestScrollÊñπÊ≥ï‰∏∫ÂÆûÁé∞ÁöÑ‰∏•ÈáçÈóÆÈ¢ò
",14369,138,4210,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6775","scwang90/SmartRefreshLayout","79a1dfe76b25ad746acded62629c552256f3a9ca",3,"2018-06-08 22:27:06+08:00","1.ÂèëÂ∏É1.1.0-alpha-7 2.‰ºòÂåñ‰∫åÁ∫ßÂà∑Êñ∞ÁöÑÂäüËÉΩ
",14422,138,4226,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6776","scwang90/SmartRefreshLayout","015505727621db0a4b5d8a9007b23a8c30f75ea7",2,"2018-07-03 16:17:57+08:00","1.‰øÆÂ§çfooter Á©∫ÊåáÈíàÈóÆÈ¢ò 2.ÂéªÈô§Áúü‰∏™È°πÁõÆ‰∏≠Â§ö‰ΩôÁöÑ import
3.Á≤æÁ°Æ‰∫ÜRestrictToÊ≥®Ëß£Âà∞ÊåáÂÆöÁöÑÊñπÊ≥ï 4.Ê∑ªÂä†footerÁÇπÂáªÊµãËØï‰ª£Á†Å
",14339,138,4143,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6777","scwang90/SmartRefreshLayout","f269d533d5a218dc2d896f2c842ca805d5ce3308",3,"2018-12-10 18:13:58+08:00","1.Ê∑ªÂä†ËÅäÂ§©Âä†ËΩΩdemo
",14784,140,4441,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6778","scwang90/SmartRefreshLayout","a23d4f2b84db03451144a98c702dcfc2076fc337",3,"2018-12-12 11:56:21+08:00","ÂèëÂ∏É1.1.0-17ÁâàÊú¨
",14873,140,4448,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6779","scwang90/SmartRefreshLayout","2ae7794b1b04c54ecd2f0e445536d24e528d12aa",3,"2019-01-23 18:10:00+08:00","Â∞ùËØïÊ∑ªÂä†Ê∞¥Âπ≥ÊªöÂä®
",15157,141,4486,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6780","scwang90/SmartRefreshLayout","1746d51136f19b0ae25fc376ac5bff92aea83a0e",21,"2019-01-25 16:14:44+08:00","ÂÆåÊàêÊ∑ªÂä†Ê∞¥Âπ≥ÊªöÂä®
",15426,145,4539,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6781","scwang90/SmartRefreshLayout","bf1e00a504057cd0137d753f4ff1b47bc9385815",6,"2019-04-23 00:43:08+08:00","1.Ê∑ªÂä† finishRefreshWithNoMoreData 2.ÂéãÁº© ÊñπÊ≥ïÊï∞Èáè 906 >
854
",15393,145,4725,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6782","scwang90/SmartRefreshLayout","d06ddcea1de7840161ee9a7b13c14420dec8f4dd",5,"2019-05-26 01:32:58+08:00","1.NoMoreData Âä†Âº∫ÂäüËÉΩË∑üÈöè
",15427,145,4746,"scwang","scwang90@hotmail.com","scwang","scwang90@hotmail.com"
"6783","scwang90/SmartRefreshLayout","13320f7fe771cf3729a53ed9994c6ac3de382ff4",5,"2019-05-26 23:50:46+08:00","1.ÂèëÂ∏É 1.1.0-alpha-27 ÁâàÊú¨
",15412,142,4715,"scwang","scwang90@hotmail.com","scwang","scwang90@hotmail.com"
"6784","scwang90/SmartRefreshLayout","71631fe56376651507a954a77f4ea803f1de254c",4,"2019-07-23 18:22:38+08:00","1.È™åËØÅ VIewPager ÈóÆÈ¢ò
",15574,142,4806,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6785","scwang90/SmartRefreshLayout","3a0c0cbf92a2f801b7919c5e1bcb6c21100d2c29",5,"2019-07-24 18:20:50+08:00","1.‰øÆÂ§çHeader Êãâ‰º∏ÊïàÁéáÈóÆÈ¢ò
",15687,142,4623,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6786","scwang90/SmartRefreshLayout","329da945dd5b1eba866555e1791af1b596c20fa2",4,"2019-08-13 14:08:27+08:00","1.‰ºòÂåñÂåÖÂêçÊ†ºÂºè
",15690,142,4372,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6787","scwang90/SmartRefreshLayout","d5414da1ebcf6973a29cdf4669effaddd3e2a88e",1,"2019-12-24 14:28:06+08:00","1.Ê∑ªÂä†ÂõΩÈôÖÂåñdemo
",15775,143,4270,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6788","scwang90/SmartRefreshLayout","fef8523351641cc9a02fa09cfb928c92874f2fed",2,"2020-05-27 13:56:22+08:00","1.Ê∑ªÂä† DisallowInterceptExampleFragment
",15939,144,4428,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6789","scwang90/SmartRefreshLayout","fbdcf42a4beac463854dd66e1bd5145f7674441f",2,"2020-05-31 23:54:35+08:00","2020-5-26 ‰øÆÂ§ç finishLoadMore ‰∏≠ÈÄî ÊãñÊãΩÂØºËá¥ Áä∂ÊÄÅÈáçÁΩÆ ÊúÄÁªàÂØºËá¥ ÊòæÁ§∫
NoMoreData Footer ËèäËä±Âç¥‰ªªÁÑ∂Âú®ËΩ¨ÁöÑÊÉÖÂÜµ overSpinner Êó∂
LoadFinish Áä∂ÊÄÅÊó†‰ªª‰ΩïÊìç‰ΩúÂç≥ÂèØ
",15990,145,4432,"scwang90","scwang90@hotmail.com","scwang90","scwang90@hotmail.com"
"6790","wix/react-native-navigation","0268c95fab39f62b92c4cc514aeff7f566788bca",1,"2016-07-24 09:39:07+03:00","refactored
",1217,48,144,"Daniel Zlotin","danielzl@wix.com","Daniel Zlotin","danielzl@wix.com"
"6791","wix/react-native-navigation","490e66e4587fd3708430f94d4a7f8e523eaf29e4",1,"2016-12-03 01:22:51+05:18","NavigationActivity implements
PermissionAwareActivity (#470)  *
NavigationActivity implements
PermissionAwareActivity    * NavigationActivity
implements PermissionAwareActivity    * Fixed code
styling    * Removed Hungarian notation.    *
Removed empty line
",5456,132,63,"Chaitanya Bhagvan","chaitanya.bhagavan@gmail.com","Guy Carmeli","guyca@users.noreply.github.com"
"6792","wix/react-native-navigation","262f7f92ba74fb607d3d24bf26ddda78eb401c71",1,"2017-03-26 12:37:56+03:00","app lifecycle
",6992,175,79,"Daniel Zlotin","danielzl@wix.com","Daniel Zlotin","danielzl@wix.com"
"6793","wix/react-native-navigation","21ed2b740db7087c449be3d05bc801fd6cade89b",1,"2017-04-04 17:29:34+03:00","composition of layouts (view controllers)
",1011,34,8,"Daniel Zlotin","danielzl@wix.com","Daniel Zlotin","danielzl@wix.com"
"6794","wix/react-native-navigation","a43680ca27756f329d731de46086c276655d517c",2,"2017-04-26 17:21:17+03:00","Implement switchToTopTab method (#1145)  Usage is
identical to switchToTab, closes #842
",8197,179,182,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6795","wix/react-native-navigation","5cc5067c74f854f91e80e0c52747766b95c16c92",1,"2017-05-09 14:46:25+03:00","pop and popTo
",1849,50,131,"Daniel Zlotin","danielzl@wix.com","Daniel Zlotin","danielzl@wix.com"
"6796","wix/react-native-navigation","80e52bec5da02ee4760e2d4c32a03ad0f21daf55",1,"2017-05-09 15:55:02+03:00","sideMenu
",1969,50,40,"Daniel Zlotin","danielzl@wix.com","Daniel Zlotin","danielzl@wix.com"
"6797","wix/react-native-navigation","969811ad6fbb6ff84d8d3f553e6fb706d45cb091",1,"2017-07-13 16:31:35+03:00","#1071 Add Android tests (#1489)  * #1071 Test that
Navigator forwards NavigationOptions to
ViewController    * Add an argument allowing to
run a single Android e2e test    * Fix style issue
* #1071 Allow changing navigation title in iOS
* Update readme to document an option for running
a single test    * Update
ScreenStyleDynamic.test.js
",2634,63,18,"Juozas Kontvainis","juozask@wix.com","Daniel Zlotin","zlotindaniel@gmail.com"
"6798","wix/react-native-navigation","6cf4fe9bd8ae4f778a3b31450fd04559141f59cd",1,"2017-11-28 13:18:52+02:00","V2 current tab (#2205)  * readme    * WIP    *
ios, tests    * refactoring    * current tab    *
android tests    * readme    * current tab index
ios    * fix tests    * readme    * test fix    *
probabl test fix
",3764,91,24,"Roman Kozlov","romanko@wix.com","Daniel Zlotin","zlotindaniel@gmail.com"
"6799","wix/react-native-navigation","138391502fdfee10368e6f4a0346357fd0434c56",2,"2017-12-18 12:32:10+02:00","Further work on TopTabs and some refactoring
(#2362)  * Further work on TopTabs and some
refactoring    * OptionsPresenter receives views
as params  * Remove TopBar and style logic from
ViewControllers, these are the OptionsPresenters
concern  * StackAnimator isn't coupled to
LinearLayout  * Convert Runnable to lambda  *
ContainerLayout now implements ReactContainer
interface  * Enable desugaring in playground app
* TopTabs unit tests
",4483,109,21,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6800","wix/react-native-navigation","29b34c774e2873736b121d0b67860049f6354795",3,"2017-12-26 11:43:12+02:00","Top tab font family (#2410)  * Implement
titleFontFamily in topTab option    * docs    *
Pass TypefaceLoader instead of context
",4930,118,28,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6801","wix/react-native-navigation","13e2e903e13ca09934864567b6be92f0d1c735ff",1,"2017-12-27 09:49:31+02:00","Load typface when parsing options (#2416)  * Load
typface when parsing options    * fix test
",4941,119,28,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6802","wix/react-native-navigation","9f1337c2a18ef5a0cded8715d5215fc7750e94dc",1,"2017-12-31 11:35:46+02:00","Support changing TopTabs font size (#2449)  *
Currently doesn't work - need to implement custom
TopTab view
",5047,127,28,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6803","wix/react-native-navigation","6cead57c5f6acc4b761332e4249f28c1cef581b7",3,"2018-01-10 15:41:55+02:00","fix e2e, fixed indentation
",5212,130,43,"Daniel Zlotin","danielzl@wix.com","Daniel Zlotin","danielzl@wix.com"
"6804","wix/react-native-navigation","3150c39335fe97d2c9da97608b6e9151b706b651",1,"2018-01-18 15:12:53+02:00","Android overlay (#2557)  * Initial overlay
implementation on Android    * Move logic to touch
delegate    * Implement dismiss Overlay    *
Overlay e2e    * fix iOS e2e
",5169,132,31,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6805","wix/react-native-navigation","16da8968cf22ca420ffde4074134f1d0cd9723bf",5,"2018-01-23 15:37:17+02:00","Android fixes (#2583)  Continued work on Android
* Rename TopTabsLayout to TopTabsViewPager  * Pass
ScrollEventListener from component  * Change
ViewController.view to protected  * Don't keep ref
to view in ComponentController  * Pull IReactView
and ReactViewCreator to separate classes  * Ensure
ToolBar.menu is created before clearing menu items
* Unmount react view before destroy  * Let
TopTabsController set mediator in view visibility
handling
",5190,133,37,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6806","wix/react-native-navigation","990e0594d12ac442bf5a1fd227d3f2323b8c7f59",1,"2018-02-06 14:01:27+02:00","Bottom tabs android (#2649)  * Use
AHBottomNavigation for BottomTabs    * Process
passed options for all layout types    Static
options are still processed only for components
* ios e2e fix    * Update
RNNNavigationController.m
",5362,137,37,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6807","wix/react-native-navigation","6471fdae301507db784cfda3e3a0a879afae0817",1,"2018-02-07 13:55:04+02:00","detach tab after attaching new tab (#2658)  *
detach tab after attaching new tab    * Fix tests
",5420,138,37,"yogevbd","yogevbd@wix.com","Guy Carmeli","guyca@users.noreply.github.com"
"6808","wix/react-native-navigation","eb3340ce5144a85595f575cbf1b2d0e1c4c56e0d",2,"2018-02-11 17:31:54+02:00","Options.mergeWith does not mutate
",5572,143,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyca@users.noreply.github.com"
"6809","wix/react-native-navigation","11c1dec05bf5fbc47db77dff1fc09fd1f00de50d",1,"2018-02-15 08:02:05+02:00","Rename topBar.hidden to topBar.visible
",5676,146,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyca@users.noreply.github.com"
"6810","wix/react-native-navigation","bdca58996c90eb130af0f0ac9e4997ce19a51442",1,"2018-02-18 16:25:07+02:00","Initial implementation of willAppear and
willDisappear (#2748)  * Initial implementation of
willAppear and willDisappear    Currently only
implemented on pop in StackController    * call
clearOptions on super  * TopTabs visible    * fix
unit
",5869,147,37,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6811","wix/react-native-navigation","a84b879cdeb0c663613faaef8bdef2f222e06efd",7,"2018-02-19 15:46:42+02:00","V2 fab (#2680)  * basic fab    * fab menu    * fab
menu clicks    * pop lifecycle    * options
lifecycle    * refactoring    * refactor    *
parse unit tests    * refacotr    * fix test    *
align    * fab unit tests    * more tests    *
size    * hide on scroll in progress    * options
* menu collapse    * parser test    * merge v2
* refactor    * refactor    * more refactor    *
more refactor    * fix    * more refactoring    *
refactor    * refactor    * fix    * fix    *
fixed undefined key    * refactor    * refactor
* refactort
",6414,154,39,"Roman Kozlov","romanko@wix.com","Guy Carmeli","guyca@users.noreply.github.com"
"6812","wix/react-native-navigation","e4ed6ca32ff9617db9a69443c0ca6484bdfdf545",1,"2018-02-22 17:17:39+02:00","Top bar options changes (#2771)  * Rename
TopBar.animateHide to animate    also fix some
options in playground app    * Consolidate topBar
visibility in childWillDisappear    * Rename
BottomTabs.animateHide to animate
",6570,155,39,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6813","wix/react-native-navigation","3268f256c51da515b2bcb460b8a94e63237846fa",1,"2018-02-26 15:22:10+02:00","SideMenu visible android (#2782)
",6957,169,39,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6814","wix/react-native-navigation","08f30c57b3d4e69c8a96ba7bbb8c3f5c94f0ce60",1,"2018-03-01 12:53:36+02:00","Orientation android (#2797)  * Initial orientation
implementation on Android    * Disable custom
animations for now    * FIx OverlayManager    Keep
view references instead of View id as id's can
change by react    * Work on ModalStack    *
resolve dismissModal promise after dismiss ends  *
Send didDisappear when Modal is displayed  * Send
didAppear to root when Modal is dismissed  *
Introduce new API:    * onViewLostFocus    *
onViewRegainedFocus  * Fix MockPromise - it can be
used only once  *
",7221,174,39,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6815","wix/react-native-navigation","4c8742f7bd41b0396123c81eed73321cafb9d37d",4,"2018-03-12 15:24:48+02:00","External component (#2846)  * External Component
implementation    * Limit External component e2e
to Android for now
",6982,171,37,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6816","wix/react-native-navigation","21d2103475c4e0d6ea3aa05b5fe6a8c1a085c84d",1,"2018-03-18 11:55:14+02:00","Top bar buttons android (#2876)  * TopBar custom
buttons initial commit    * f    * Consolidate
TopBarButtonController and TopBarButton    * Move
Toolbar related stuff to TitleBar    *
TitleBarTest    * More tests
",7249,178,37,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6817","wix/react-native-navigation","2c53b286602fa0aef6c5583fd859688d3967655e",1,"2018-03-21 09:12:15+02:00","[Breaking] Top bar API changes (#2895)  * Refactor
TopBar options, introduce title options    *
Update background to new api    * Refactored
topBar options on iOS    * Initial react component
in TitleBar android    * set height to react view
in TitleBar    * fix tests and lint    * ios unit
tests fix
",7423,184,37,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6818","wix/react-native-navigation","9679c442034610de48fca7377d894dc30dc286af",1,"2018-03-28 17:23:01+03:00","initial android subtitle impl
",8442,199,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6819","wix/react-native-navigation","b4527273c918ed642ee94f6c6ae52e57e8314f3e",1,"2018-04-03 11:26:58+03:00","Rename getTitleView to findTitleView
",8469,198,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6820","wix/react-native-navigation","f4912d1758bdb5f667f0c81e2ea7f5cbdcbab76f",1,"2018-04-03 11:57:27+03:00","Set subtitle fontSize and fontFamily
",8486,198,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6821","wix/react-native-navigation","bcf21c79e170e46aea6083f3229baa8e404d82a9",1,"2018-04-03 19:03:37+03:00","Subtitle and Title alignment
",8528,198,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6822","wix/react-native-navigation","3bf5563fbacfb0b2e9f46bd68dfdf9118066540f",1,"2018-04-09 14:05:11+03:00","popTo animates top screen
",8653,199,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6823","wix/react-native-navigation","5e1d315b61f9f3be81685fa83bd8e215582a6daa",2,"2018-04-12 15:47:58+03:00","Remove animated option  Each animation (push, pop
etc) can be enabled or disabled separately
",8755,198,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6824","wix/react-native-navigation","9d8f9934a622992bd91c144f73c4a03397980b55",2,"2018-04-25 11:56:05+03:00","Rename Modal classes  Remove temporary suffixes
",9206,199,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6825","wix/react-native-navigation","e85bc9949f80ea0bb845f13eb005a1fbbb1f2911",1,"2018-04-25 22:42:10+03:00","Initial ModalOptions implementation
",9268,201,37,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6826","wix/react-native-navigation","07050db9f92a1de502e5cf209841b1d7a1203f95",1,"2018-05-08 17:26:47+03:00","Command (#3175)  * Assign commandId to async
commands    * CommandListener refactor    Pull
listener out of Navigator and implement
NativeCommandListener for native commands    *
Emit onNavigationEvent when commands complete    *
Rename timestamp to completionTime    * Rename
NavigationEvent to EventEmitter    * Rename
sendOnNavigationButtonPressed to
emitOnNavigationButtonPressed    * Emit
navigationEvent on bottom tab select    * rebase
fix    * Emit commandCompleted event instead of
nativeEvent    * fix native ios commands    * wait
show and dismiss Overlay
",9472,208,43,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6827","wix/react-native-navigation","955693d6d69a9dcda27c7f8bc7806f0ab933133a",1,"2018-05-13 17:39:48+03:00","StatusBar options
",9558,209,41,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6828","wix/react-native-navigation","3e04b8455b5a635e3db598233ffc03ead6617c35",1,"2018-05-15 18:31:00+03:00","Implement statusBarStyle on Android
",9807,213,41,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6829","wix/react-native-navigation","031015c806be41cd932c0ea820f27dd6769ac5d9",1,"2018-05-17 09:15:10+03:00","BottomTabs refactor  Pass child ViewControllers in
constructor and create tabs in constructor as well
",9826,213,41,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6830","wix/react-native-navigation","e171d7abc48833e89f96927ee7a03414ed9f5bc2",1,"2018-05-29 14:43:18+03:00","[Breaking] Consolidate screenBackgroundColor and
orientation to layout node  screenBackgroundColor
was also renamed to backgroundColor  ```js layout:
{   orientation: 'landscape',   backgroundColor:
'red' } ```
",10200,219,48,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6831","wix/react-native-navigation","b2a8ac41e5c2940b9f20748b65e0f1cfcfbb9bea",3,"2018-06-04 17:32:14+03:00","Support topTabs.height style option  This commit
also changes the way TopTabs options are handled.
As the TabLayout is part of the TopBar, it's the
StackControllers responsibility to set TopTabs
options.
",10283,219,48,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6832","wix/react-native-navigation","aca8b49df4576e76d40791203f48b8187ab01148",3,"2018-06-05 11:27:18+03:00","Implement BottomTabs.titleDisplayMode styling
option  This option allows to control when tab
titles are displayed  * showWhenActive: when a tab
is focused * alwaysShow: show regardless of which
tab is in * alwaysHide: never show tab titles
",10305,220,47,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6833","wix/react-native-navigation","4c8d48b1b596c314ff3242a2b619c3f893d4b5e1",5,"2018-06-05 15:22:15+03:00","Implement a synchronous UiImplementation  Related
to #2892  To use it, Override
`createReactNativeHost` in MainApplication as
follows:  ```java     @Override     protected
ReactNativeHost createReactNativeHost() {
return new NavigationReactNativeHost(this) {
@Override             protected
UIImplementationProvider
getUIImplementationProvider() {
return new SyncUiImplementation.Provider();
}         };     } ```
",10392,221,47,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6834","wix/react-native-navigation","fdeb4d2c0d37daddc27b3245e18b8dd0649da31f",2,"2018-06-19 15:56:10+02:00","v2 proper permission handling (closes #3376)
(#3385)
",10717,229,49,"serjek","sbalitskiy@gmail.com","Guy Carmeli","guyca@users.noreply.github.com"
"6835","wix/react-native-navigation","2c33830f3e0ac4f610fd25505034fa950b5c6fc3",1,"2018-07-02 12:04:41+03:00","[BREAKING] BottomTabs refactor (#3469)  *
Refactored bottomTab and bottomTabs    * Initial
commit before switching to our fork of
AHBottomNavigation    * Bump AHBottomNavigation
version    * More work on BottomTab options
Need to merge some child options when a child is
attached to parent    * Fix tests    *
DefaultOptions refactor    * defaultOptions are
now merged before applying options  * Handle
BottomTab options in dedicated presenter  * Create
BottomTabs in BottomTabsController.createView()
instead of constructor    * Set bottomTab TypeFace
* Update Android installation guide    * fixed
unit tests    * Fix unit tests    Kind of a
workaround    * Handle NPE in getPreferredHeight
If a view hasn't been attached yet, return 0
height    * Apply BottomTab text and icon color
individually    wix-playground/AHBottomNavigation
does not support setting color for the entire tab
(icon and text),  instead it supports setting
color individually to text and icon. Another
change is that it no longer supports  default
color for icons. If icon color is undefined - it
won't tint the icon.    * Add getCurrentChild to
ParentController contract    * Clear backButton
when setting stack root    * Add
ViewController.resolveCurrentOptions
resolveCurrentOptions merges the controllers
options with all of its current children    *
StackController refactor    * Create pushed child
view only in StackController.createView  * When
initialising a stack with multiple children, only
create the top child's view  * StackController
constructor now accepts children  * When pushing
child to stack, apply options that change
LayoutParams    * Apply BottomTabs layout options
when tab views are created    * bototmTab changes
in iOS    * options fix    * Fixes options
propagating
",11192,231,46,"Guy Carmeli","guyca@users.noreply.github.com","Yogev B","yogevbd@wix.com"
"6836","wix/react-native-navigation","821f760df1b4d7291552f69e68231bdb4c01173b",1,"2018-07-02 17:30:11+03:00","Annotate ReactContext with NonNull annotation  We
need handle situation where currently
emitAppLaunched is being called with null context.
Related to #3392
",11193,231,46,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6837","wix/react-native-navigation","50fd77ec82a0d287799f15193d81fb9544f0bb96",4,"2018-07-04 11:45:45+03:00","Unmount react views when bundle load completes
(#3487)  Unmount react views when bundle load
completes    Users providing their own
ReactNativeHost implementations should implement
BundleDownloadListenerProvider  and make sure they
set DevBundleDownloadListener when
ReactInstanceManager.
",11300,235,58,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6838","wix/react-native-navigation","390c83ae6a4c7382a4b0913e96cbeb090b80713d",10,"2018-07-18 12:09:23+03:00","Support RN 0.56  This commit also upgrades
TypeScript to version 2.9.x
",11690,245,45,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6839","wix/react-native-navigation","0852ea880c7f76c3efc40f523ac4a6dbed4de522",1,"2018-08-02 11:25:40-04:00","Implement BottomTabs mergeChildOptions  Instead of
merging child options, the presenter applied all
options :(
",11813,244,45,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6840","wix/react-native-navigation","5eee64a0ea606c6036a7ab9aad8630d8bbd19c2a",1,"2018-08-22 09:42:49+03:00","Hide YellowBox in TopBar components
",13137,274,50,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6841","wix/react-native-navigation","a322875c987f7ea4c51513852a07e1c3338632ab",2,"2018-08-22 15:15:08+03:00","Rename Color to Colour  As RNN's Color is used
frequently with Android's Color class, we had to
use fully qualified names, the rename avoids this.
",13167,274,50,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6842","wix/react-native-navigation","2002020aae80b379a2c6166127e191762d71e407",3,"2018-08-23 12:39:54+03:00","Emit modalDismissed event when dismissingAllModals
as well
",13187,274,50,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6843","wix/react-native-navigation","68373759c011520fdb3185e0c846b3a7d0d98568",6,"2018-08-26 18:49:50+03:00","Button unmount (#3856)  Unmount buttons when
corresponding screen is unmounted    Currently
buttons were unmounted each time a screen was
pushed to the stack.  As we're clearing props when
screens are unmounted from the prop store - when a
screen  was popped to - its buttons's props were
undefined.    This commit changes things so that
buttons are unmounted when buttons are set  using
mergeOptions and when the corresponding screen is
unmounted.
",13302,274,51,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6844","wix/react-native-navigation","f2f5eaf2d48e93c3aab06219f39700d0a0c16b38",1,"2018-08-30 17:31:52+03:00","Address possible NPE in detachView and attachView
",13456,278,51,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6845","wix/react-native-navigation","7254a667831ac5c6bfcdd1efa3fead307fa6f95d",5,"2018-09-03 18:11:41+03:00","Support showing Overlays and Modals before root is
set (#3910)  Support displaying modals and
overlays before root is set
",13580,278,51,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6846","wix/react-native-navigation","2c7dccc67729fb69a9eddd969f1d9aa8f9c0f900",7,"2018-09-06 15:10:37+03:00","Merge options (#3930)  mergeOptions support for
commands
",13635,278,51,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6847","wix/react-native-navigation","01b378df14d96d4d2888053c03f1359668dc3db7",2,"2018-10-18 12:06:36+03:00","Unify enable/enabled options  In some places
‚Äúenable‚Äù was used to control certain options. This
commit adds backwards compatible support for
‚Äúenabled‚Äù property which should be used from now
on.
",14439,293,64,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6848","wix/react-native-navigation","aa26286ae29837fb52d051bc8a85924f876358d4",3,"2018-10-19 12:03:36+03:00","Rename findControllerById to findController
",14491,293,64,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6849","wix/react-native-navigation","34a4675edceed99b7595b1914012d661fc0d04b6",1,"2018-10-23 04:50:20-07:00","Auto blur on unmount option (#4191)  This adds an
Android-only flag blurOnUnmount, that if true when
calling push, pop, showModal, dismisModal, as well
as when true on the component's static
options(passProps) { ... } return value, will
cause RNN to check for any focused views when the
component the flag was passed for is being
unmounted, and blur said view if it exists,
causing not just the view to lose focus, but also
the soft keyboard to be dismissed.    We added
this to our fork of RNN to tackle issues stemming
from an inability to dismiss the soft keyboard on
unmounting components, due to the
disappear/unmount lifecycle events of the
component coming too late for our keyboard
dismissal calls to make it across the native<->js
bridge before the component was unmounted.    As
this functionality is hidden behind a flag and
does not alter base functionality, and the issue
it seeks to solve might have been encountered by
other users of RNN, I figured I might as well
submit a PR to see if there is interest in merging
this back into the base.
",14557,293,71,"Evan Ricketts","35305520+ericketts@users.noreply.github.com","Guy Carmeli","guyca@users.noreply.github.com"
"6850","wix/react-native-navigation","b944f65c2f0d7ae657213d874fada666f5f6832b",1,"2018-11-04 09:38:24+02:00","Attach root to rootLayout after modal dismiss
When dismissing a modal the root layout was added
to modalsLayout instead of rootLayout.
",14613,294,71,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6851","wix/react-native-navigation","2365e0211b51a2353949c22a836340eb32cd8cc0",2,"2018-12-17 09:08:05+02:00","Set stack root refactor (#4460)  This PR adds
support for setting stack root with multiple
children, which is to be expected as stack can be
initialised with multiple children.  Closes #4441
",14838,299,75,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6852","wix/react-native-navigation","b84a3e5fadcbef93a8ef683550743dc84ac8a2fa",1,"2018-12-19 18:02:16+02:00","Create bottom tabs once (#4478)  Create BottomTabs
once when options are applied    The BottomTabs
library we use recreates its children each time a
style property changes.  This can hinder
performance quite a bit as the view creation logic
is quite costly.  This commit introduces a simple
fix to this issue - we delay view creation until
all options are applied.    BottomTabs refactor  *
Prevent view recreation in `onSizeChanged`  *
Cleanup `createTabs` method
",14936,300,75,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6853","wix/react-native-navigation","c746621c404c659d5db23417b327f621d0c0dee3",7,"2019-01-06 17:31:32+02:00","Add waitForRender options for setRoot animation
and TopBar components  When set, the ui will
become visible only after the root screen and
TopBar components have been rendered.  Usage Add
the following to the root layout‚Äôs options, or to
its child ``` animations: {   setRoot: {
waitForRender: true   } } ```  TopBar components
(Title, background, buttons) can be synced as well
by adding `waitForRender: true`, for example: ```
component: {   name:
'navigation.playground.CustomTopBar',   alignment:
'center',   waitForRender: true, } ```
",15124,302,68,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6854","wix/react-native-navigation","daa51396826c70d2f7701664f259d1b9d7811268",3,"2019-01-07 16:47:20+02:00","Dispatch visibility events for SideMenu screens
Visibility events for both left and right SideMenu
screens were not dispatched due to how the native
DrawerLayout is implemented. Fixes #4303
",15183,301,68,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6855","wix/react-native-navigation","740ad3c326f29f51205b8f0fb046ff0658076925",3,"2019-01-24 13:36:50+02:00","Bottom tabs attach mode (#4633)  This pr adds
support for changing tab initialisation mode.
Currently bottom tabs are attached together and
consequently, their corresponding react root views
are created and rendered. This adds lots of stress
on the js thread and hiders app start time.    To
mitigate this issue, this pr adds support for
three modes  * `together` (default, current
behaviour) - all tabs are loaded together, adding
unnecessary load on the js thread as we're loading
invisible views, which leads to increased app
start time.  * `afterInitialTab` - Initial tab is
loaded first. After it is rendered, other tabs are
loaded as well. This should shave a few hunderdish
ms from app start time. Since other tabs are
loaded after the initial tab is visible, the ui
might be unresponsive for a few hunderdish ms as
multiple root views (which are typically complex)
are being created and attached to hierarchy at
once.  * `onSwitchToTab` - initial tab is loaded.
Other tabs are loaded when switching to them (tab
click or programmatically). While this won't
stress js thread after initial tab is rendered,
there will be a flicker when entering a tab for
the first time as it's ui isn't ready.
",15532,312,68,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6856","wix/react-native-navigation","eda4b9ce0a6a9b732241f662012a1e7e5750e193",1,"2019-02-06 18:32:20+02:00","Null check when parsing strings  Mostly relevant
to malformed icons where for some reason,
requiring an image results in null.
",15561,312,69,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6857","wix/react-native-navigation","bfdd41fcb4a3f9cd95fa29828d8dc0b7d2450404",1,"2019-02-24 15:12:04+02:00","Cleanup and reorganise playground app (#4767)  *
Cleanup and reorganise playground app    *
Separated tests into three categories    1.
Layouts - layout specific tests and feature
showcase    2. Options - options related tests;
interactions between static and dynamic options,
merge options etc    3. Navigation - general
navigation features; Orientation handling, events,
Overlay etc    * Fixed a few Android bugs    1.
testID wasn‚Äôt applied on TopBar react buttons
2. static options were disregarded when creating
initial BottomTab options    3. Trying to open a
none existent SideMenu would result in a crash
* Fix e2e tests    * Fix lint    * Few fixes +
split push from SideMenu test into two tests    *
Fixes e2e
",15627,312,72,"Guy Carmeli","guyca@users.noreply.github.com","Yogev Ben David","yogevbd@wix.com"
"6858","wix/react-native-navigation","602c669b02b31c45b040965e27c327c2bd0fde61",2,"2019-03-17 14:14:05+02:00","External component lifecycle events (#4872)  * Add
external component e2e  * Emit appear and
disappear events for external components
",15716,312,72,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6859","wix/react-native-navigation","99032e060d2e0a429d3da2775884f624e8cd5fd5",3,"2019-05-21 07:50:17+02:00","Fix Topbar custom component flicker across screens
#3864 (#5110)  When a topBar.backgroundComponent
is defined, check if a corresponding ReactView has
already been created with matching componentName
and componentId. If such view is found, reuse it
instead of creating another view.    This change
will fix a flickering in the TopBar background
component when a screen was pushed into a stack
with a background component.
",15664,310,72,"Fabrizio Rizzonelli","fabrizio.rizzonelli@gmail.com","Guy Carmeli","guyca@users.noreply.github.com"
"6860","wix/react-native-navigation","9a2a921ab29a9e2fa381b4c570ffa71bce24d42a",3,"2019-05-21 13:10:17+03:00","Align title after left button is set (#5129)  When
setting left button and the title was centred, it
got an undesired offset.  Now whenever left button
is set we make sure to realign the title.
",15695,310,72,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6861","wix/react-native-navigation","f42515524d88a5f4f12a35684ab288dad6af1b1d",1,"2019-07-18 19:31:17+03:00","BottomTab dot indicator (#5283)  Add support for
dot indicator to BottomTabs.
",15831,311,72,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6862","wix/react-native-navigation","21584fd4a525d7a8085caf18d624668cc5865d93",3,"2019-07-22 17:49:17+03:00","Ensure appLaunched event is emitted only when app
is resumed   Under certain conditions, app
launched event was emitted when the Android
Activity isn't in resumed state. In this case,
setting root isn't possible since ReactContext
doesn't have an instance of the Activity (it can
even be destroyed).    This PR ensures the event
is emitted only when the Activity is resumed and
root can be set.
",15930,313,72,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6863","wix/react-native-navigation","f15e9b3a2a8c661d10c93d9c2f9a7155de979240",6,"2019-07-24 17:03:41+03:00","Apply TopBar buttons only if they are different
than current buttons (#5314)  Like all other
options, buttons are applied when a screen becomes
visible. This means that in a BottomTabs layout,
options are applied when a tab is selected. Since
tab change happens involves only changing view
visibility, and button creation take a bit long,
the buttons appear to flicker some times.
",15990,313,72,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6864","wix/react-native-navigation","fcdacbc8fc11c1befff16bbe0f37143260efdace",4,"2019-07-25 14:48:12+03:00","Fix NPE when there are no default options
",16032,315,73,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6865","wix/react-native-navigation","ef43070c263af63070aea37bb4a0dd1d6bb173a2",11,"2019-08-14 13:35:55+03:00","V3 (#5372)  # Changes  * Support RN 0.60  *
Migrate to AndroidX  * Improve draw behind
StatusBar (Preparation for #4258)  * Don't push
BottomTabs when keyboard is displayed (Fixes
#4005, #3424)      - It won't be needed to toggle
the BottomTabs when Keyboard is visible  *
BottomTab badge and dot indicator are not animated
by default on Android (parity with iOS)    #
Updating from v2  v3 is currently in alpha. To
update simply npm install `3.0.0-alpha.11` - `npm
install --save react-native-
navigation@3.0.0-alpha.11`.  Breaking changes are
outlined below.    ## Layout system changes on
**Android**  * Parent layouts (BottomsTabs, Stack,
SideMenu) are always laid out behind the
StatusBar.  * Components (`component` and
`externalComponent`) are measured and offset
according to the StatusBar.    In this release,
We're changing the layout system in order to
provide better support for immersive and full
screen apps. In this release we've improved
support for drawing behind the StatusBar,  next
we'll address drawing behind the NavigationBar.
Use the `drawBehind` and `translucent` options to
control the StatusBar  ```js  statusBar: {
drawBehind: true,  // will draw a screen behind
the StatusBar    translucent: true // Usually
you'll want to have drawBehind: true when this is
true  }  ```    While this isn't a breaking API
change - there are a few breaking side effects.
### How will my app be effected  1. When the
keyboard is opened, BottomTabs will now be drawn
behind the keyboard and won't shift upwards. This
is in parity with the current behaviour in iOS.
For the most part, this isn't a breaking change.
Toggling BottomTabs when TextInput's focus changes
won't be needed anymore.    2. While parent
controllers are drawn behind the StatusBar, their
background isn't.  This means that when
transitioning from a destinations drawn under the
StatusBar to a destination drawn behind it, the
application's default background color will be
visible behind the StatusBar.  If you
application's theme is dark, you might want to
change the `windowBackground` property to mitigate
this:    Add the following to your application's
`style.xml`  ```xml  <?xml version=""1.0""
encoding=""utf-8""?>  <resources>      <style
name=""AppTheme""
parent=""Theme.AppCompat.Light.NoActionBar"">
<item name=""android:windowBackground"">@color/backg
roundColor</item>      </style>        <!--This is
your application's default background color.
It will be visible when the app is first opened
(while the splash layout is visible)      and when
transitioning between a destination a screen drawn
under the StatusBar to      a destination drawn
behind it-->      <item name=""backgroundColor""
type=""color"">#f00</item>  </resources>  ```    ##
AndroidX migration  We've migrated RNN to
AndroidX, please follow migration instructions in
the react-native repo.    ## Removed
SyncUiImplementation  [SyncUiImplementation](https
://github.com/wix/react-native-navigation/blob/mas
ter/lib/android/app/src/reactNative57WixFork/java/
com/reactnativenavigation/react/SyncUiImplementati
on.java) was used to overcome a bug in RN's
UiImplementation. This workaround was added to
RN's `UiImplementation` in RN 0.60 (thanks
@SudoPlz) and can be removed from RNN.    If
you're using `SyncUiImplementation` your app will
fail to compile after upgrading to v3. Simply
remove the following code from your
`MainApplication.java`  ```diff  - import com.face
book.react.uimanager.UIImplementationProvider;  -
import com.reactnativenavigation.react.SyncUiImple
mentation;      - @Override  - protected
UIImplementationProvider
getUIImplementationProvider() {  -     return new
SyncUiImplementation.Provider();  - }  ```    ##
BottomTab badge and dot indicator are not animated
by default on Android (parity with iOS)  Showing
and hiding badge and dot indicator are now not
animated by default. Badge animation is now
controlled with the `bottomTab.animateBadge`
property and dot indicator with
`bottomTab.dotIndicator.animate` property.    ####
The following option will show a badge with
animation  ```js  bottomTab: {    badge: 'new,
animateBadge: true  }  ```    #### The following
option will show a dot indicator with animation
```js  bottomTab: {    dotIndicator: {
visible: true,      animate: true    }  }  ```
closes #5228
",16643,335,82,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6866","wix/react-native-navigation","3519837cc2a82cb14ec1849bfc358865e407f556",1,"2019-08-20 13:55:57+03:00","Initial support for null as color  (#5393)  This
commit adds initial support for passing null as a
valid value for color properties.  When a color
property is applied, if it wasn't specified then
the default color is applied. Now, when null is
passed, no color will be applied  leaving the last
color applied as is.    This is useful when
showing an Overlay and you'd like to keep the
current StatusBar color unaffected. Another
usecase would be when you'd like to avoid coloring
an icon in BottomTabs.
",16678,337,82,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6867","wix/react-native-navigation","8af95da24a0622829d514c8ed61507438491bc27",1,"2019-10-31 10:04:38+01:00","[V3] Android: re-add support for
navigationBarColor (#5547)  Add support for
NavigationBar color on Android
",16802,340,87,"Maurus Cuelenaere","mcuelenaere@gmail.com","Guy Carmeli","guyca@users.noreply.github.com"
"6868","wix/react-native-navigation","b9046081ace89a2d3d0795c15920b6b2692c7702",1,"2019-11-13 06:26:12-03:00","Add missing commandName field (#5643)
",16823,340,87,"Juan Pablo Garcia Dalolla","juanpablogarcia@gmail.com","Guy Carmeli","guyca@users.noreply.github.com"
"6869","wix/react-native-navigation","afbaa9a4f53e05e6b00e1b8044a4a8a484ac3ea0",11,"2019-12-10 18:26:26+02:00","Merge SideMenuController options with parent
(#5754)
",16910,340,87,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6870","wix/react-native-navigation","47149835dcf707806bb211230e63a61d8cf9a1d5",4,"2019-12-12 09:49:36+02:00","Temporary fix to fab position on screen (#5758)
Fab has been broken since v3. This is a very
temporary fix until we refactor it and upgrade to
fab from AndroidX
",16854,341,87,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6871","wix/react-native-navigation","aa1870a743ff9e1611c643a5462ca84f81710fcd",1,"2019-12-15 14:56:10+02:00","Fix native image resource for bottom tab icon
(#5775)  bottomTab.icon accepts a string as well
as required asset - this was not reflected
properly in TypeScript and implementation was
missing from Android.  closes #5759
",16869,342,87,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6872","wix/react-native-navigation","3878b683ccc045f6c732850833be0633a8ac1b0e",2,"2020-01-02 14:03:37+02:00","Component type (#5820)  Send componentType field
in componentDidAppear and componentDidDisappear
events.    The new field is either:  -
TopBarButton  - TopBarTitle  - TopBarBackground  -
Component
",16913,343,87,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6873","wix/react-native-navigation","3f17dc4a82657c6cfdbdd82c95cbba6f2bf63f55",2,"2020-01-05 18:12:16+02:00","Hide back button in mergeOptions (#5826)  This
commit fixes hiding the back button with
`backButton.visible: false` in mergeOptions. It
didn't work on Android.
",16951,344,87,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6874","wix/react-native-navigation","f635b5e8be81ee99aaf2726c989624b1dafcbf41",3,"2020-01-14 10:09:32+02:00","Add accessibilityLabel option to button (#5847)  *
Add accessibilityLabel to tight and left buttons
* Set default accessibility label to back button
Co-authored-by: Yogev Ben David <yogevbd@wix.com>
",17004,344,87,"Guy Carmeli","guyca@users.noreply.github.com","Yogev Ben David","yogev132@gmail.com"
"6875","wix/react-native-navigation","373f20b5800b354a774a0acb47f595ad0aa4f01e",5,"2020-02-18 11:47:37+02:00","v5 (#5931)  Merge v5 into master    Highlights of
this release  * Easier installation  * autolink
and reac-native link support  * Shared Element
Transition - reimplemented from scratch and new
API  * [iOS] showModal animation api parity  *
[Android] Animation values are now declared in dp
* [iOS] deprecate topBar.drawBehind  * [Android]
RNN is migrating to Kotlin    closes #5904
",15854,317,71,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6876","wix/react-native-navigation","1c2558d77e489e2a35adc3a60eebed97ebf52add",1,"2020-02-24 22:22:46+10:00","Add componentName in modalDismissed event. (#5846)
* [iOS] Added componentName to be passed to
modalDismissedEvent    * Added componentName to
the ModalDismissedEvent type.    * Updated the JS
test.    * Updated the Playground Podfile.lock.
* Updated the doc.    * Fixed
dismissedMultipleModals not having a name.    *
Made componentName optional for
ModalDismissedEvent.    * Initial Android
implementation    * Revert Android e2e emulator
name    * Revert iOS Podfile    * Podfile    *
Setting OCMock to 3.4.3    * Fixed the
documentation.    * Fixed requested changes    *
Updated the doc.    * Now emitting componentName
for dismissAllModals event.    * Retriggering
build    * Revert    * Move all topBar.title
options to topBarTitlePresenter (#5883)    Fix
TopBar title animation. This commit changes how
RNN handles title and subtitle.  Until now, RNN
created a custom view for title and subtitle which
interfered with the way the system animated the
TopBar title.  With this commit the custom view is
created only when both subtitle and title are
declared, otherwise RNN uses the system behavior.
* make dotIndicator to respect visible value
(#5884)    In Android dotIndicator with initial
value of visible: false is not respected and the
dot appears in any case.    Co-authored-by: Guy
Carmeli <guyca@users.noreply.github.com>    *
Update default value for fontsize in navigation
title and subtitle (#5868)    Co-authored-by:
Yogev Ben David <yogevbd@wix.com>    * v0.62
Support (#5795)    react native 0.62 Support    *
Fix bottomTab merging options with default (#5885)
When updating bottomTab options with mergeOptions
- default options were not taken into account and
therefore were not applied to the newly created
tabBarItem    * Update package.json version to
4.6.1 [ci skip]    * Update package.json version
to 4.7.0 [ci skip]    * Fix external components
layout    * Move selectTabOnPress prop to correct
interface (#5894)    * Update changelog    *
External components fixes (#5896)    * Fix
external components layout    * Fix external
component navigationItem options resolving    * f
* Update package.json version to 4.7.1 [ci skip]
* Official Gradle Wrapper Validation Action
(#5901)    See: https://github.com/gradle/wrapper-
validation-action    * temporarily disable
workflows    * Support react-native-youtube
(#5903)    react-native-youtubte is a popular
library which wraps the native youtube library.
The native lib attempts to detect if the player is
hidden behind other views in order to prevent
developers from playing videos in the background.
Since the overlay container was always attached to
hierarchy, the library stopped playback as it
mistakingly detected the player was used in the
background.    This commit simply attaches the
overlay container only when needed so as long as
no overlays are displayed, the lib can be used.
* apply extendedLayoutIncludesOpaqueBars true on
all viewControllers (#5906)    * Update
package.json version to 4.8.0 [ci skip]    * Fix
overlays touch interception on new iPads (#5908)
* Fix NPE when showing Overlay (#5909)    Co-
authored-by: Yogev Ben David <yogevbd@wix.com>
* Update package.json version to 4.8.1 [ci skip]
* Update changelog    * Allow reset
topBar.title.color when color isn't provided
(#5910)    * Allow topBar.title.color reset when
color isn't provided    * Reset to nil color    *
Merge topBar options with default    * Fix topBar
options merging    Co-authored-by: Guy Carmeli
<guyca@users.noreply.github.com>    * Update
package.json version to 4.8.2 [ci skip]    *
Update package.json version to 4.8.3 [ci skip]
* Fix wallaby (#5917)    * Fix wallaby    * Add
coverage on tsx files    * Update
lib/src/commands/OptionsProcessor.test.ts    Co-
authored-by: Guy Carmeli
<guyca@users.noreply.github.com>    * Fix topBar
options merging with default (#5918)    * Add
missing function    * Update package.json version
to 4.8.4 [ci skip]    * Update changelog    * v5
(#5931)    Merge v5 into master    Highlights of
this release  * Easier installation  * autolink
and reac-native link support  * Shared Element
Transition - reimplemented from scratch and new
API  * [iOS] showModal animation api parity  *
[Android] Animation values are now declared in dp
* [iOS] deprecate topBar.drawBehind  * [Android]
RNN is migrating to Kotlin    closes #5904    *
Update package.json version to 5.0.0 [ci skip]
* Adapt installation guide to v5    * Update
installation guide    Forgot to add Kotlin plugin
* Fix compilation issue when using react native
0.62    Fixes #5933    * Update package.json
version to 5.0.1 [ci skip]    * Add
deprecateDrawBehind option (#5934)    * Add
deprecateDrawBehind option    * Apply draw behind
options when deprecateDrawBehind equals false
Co-authored-by: Guy Carmeli
<guyca@users.noreply.github.com>    *
[v5][docs][showcases] starter kit (#5936)    Hey!
I have updated RNN version to the latest one
(5.0.1 by the time)  Hope someone will find it
useful ü§©    * Add window.backgroundColor option
(#5942)    * Update package.json version to 5.1.0
[ci skip]    * Fix crash when mergeOptions were
called before stack view was created (#5945)
Co-authored-by: Yogev Ben David <yogevbd@wix.com>
* Apply extendedLayoutIncludesOpaqueBars true on
all viewControllers    * Update package.json
version to 5.1.1 [ci skip]    * Update Android
alert    * Fix custom push animations (#5947)
Custom push animations broke after refactoring
Shared Element Transition.  Fixes #5943    *
Layout background color (#5946)    * Apply
layout.backgroundColor on parent view controllers
* Add layout.componentBackgroundColor    * Remove
drawBehind deprecation    * Update package.json
version to 6.0.0 [ci skip]    * Update changelog
* Fix applying drawBehind through mergeOptions
(#5951)    mergeOptions did not handle
bottomTabs.drawBehind options properly - the
ReactRootView wasn't remeasured.    * Update
package.json version to 6.0.1 [ci skip]    * Add
slide animation to playground app    * [iOS] Added
componentName to be passed to modalDismissedEvent
* Added componentName to the ModalDismissedEvent
type.    * Updated the JS test.    * Updated the
Playground Podfile.lock.    * Updated the doc.
* Fixed dismissedMultipleModals not having a name.
* Made componentName optional for
ModalDismissedEvent.    * Initial Android
implementation    * Revert Android e2e emulator
name    * Revert iOS Podfile    * Podfile    *
Setting OCMock to 3.4.3    * Fixed the
documentation.    * Fixed requested changes    *
Updated the doc.    * Now emitting componentName
for dismissAllModals event.    * Retriggering
build    * Revert    * Fix dismissedMultipleModals
componentName    * Undo OCMock hard version    *
Updated Podfile    Co-authored-by: Guy Carmeli
<guyca@users.noreply.github.com>  Co-authored-by:
Yogev Ben David <yogevbd@wix.com>  Co-authored-by:
Ioannis Tsampoulatidis <tsampoulatidis@gmail.com>
Co-authored-by: Mary Jenel <myersjenel@gmail.com>
Co-authored-by: Jason Safaiyeh
<safaiyeh@protonmail.com>  Co-authored-by:
wixmobile
<41264282+wixmobile@users.noreply.github.com>  Co-
authored-by: Roberto Tatasciore
<tatasciorecont@gmail.com>  Co-authored-by:
Jonathan Leitschuh <jonathan.leitschuh@gmail.com>
Co-authored-by:  ô ·¥Ä ·¥õ  Ä <kanzitdinov@gmail.com>
",15902,317,71,"Jin Shin","jinshin1013@gmail.com","GitHub","noreply@github.com"
"6877","wix/react-native-navigation","ef58a6cdeb1c4ea90ff528af50d6d2dc572f9f28",1,"2020-03-03 14:11:54+02:00","Support tabs without icons on Android (#5978)
This commit introduces parity with iOS which
allows the user to show tabs without icons. While
there's no real production use case for this
feature, it's helpful when getting started with a
new project.
",15923,317,71,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6878","wix/react-native-navigation","52bcd5ba5090622db37055d0a18cb673673affa0",1,"2020-03-26 15:37:09+02:00","Fix crash when dismissAllModals is called before
root is set
",16032,317,71,"Guy Carmeli","guyc@wix.com","Guy Carmeli","guyc@wix.com"
"6879","wix/react-native-navigation","42a6917eeee149f7348a4eaf524ba76bac1240cf",11,"2020-04-01 16:53:37+03:00","Refactor right buttons (#6090)  Refactor right
buttons    This pr started with an attempt to
eliminate button flickering entirely when updating
buttons which contain react components via
mergeOptions. While the attempt wasn't 100%
successful, I dit get some insights in the
process.    * It's not possible to add buttons at
specific indices. Buttons contain an order
property which determines the order of the button
in the TopBar. To somewhat overcome this
limitation, we can let users control button order
via options.    * When a right most component
button is replaced with another component button,
the rest of the buttons shift to the right since
the newly added component isn't measured when it's
added to the menu and its width is zero.   We
usually handle this situation with the
`waitForRender` option but since buttons are
measured with `MeasureSpec.UNSPECIFIED`, their
dimensions are zero. Because of this, I've added
options to set button dimensions.    * When
updating buttons via mergeOptions, if a component
button is already added to the menu with the same
order we will not remove and added it again. This
mitigates flickering in some situations.    *
Textual button style properties were applied by
traversing the view hierarchy and searching for
the TextView corresponding to the button and
updating its styles directly.  There was an
inherent bug in this logic where if two buttons
contained the same text, styles could have been
applied to the wrong TextView. We now apply styles
directly on the button using spans.
",16168,319,74,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6880","wix/react-native-navigation","b9310bf7545d1c15b2f716a98aaab3eb34b4b504",3,"2020-07-01 10:18:47+03:00","Emit componentDidAppear after appear animation
completes (#6331)  This PR addresses a long
lasting tech debt on Android where
`componentDidAppear` event was emitted
prematurely.    RNN's visibility events are
modeled after iOS's visibility events:
`viewWillAppear`, `viewDidAppear`,
`viewWillDisappear` and `viewDidDisappear`.
Initially all four visibility events were
implemented in RNN.  `willAppear` and
`willDisappear` events were removed in v2 since we
realised that the async nature of RN and RNN
rendered these two events unreliable as we
couldn't guarantee they will be handled in JS in
the appropriate time.    V2 included another
change, only on Android, where
`componentDidAppear` was emitted  when screens
were attached to the hierarchy instead of when
their appear animation (push, showModal) ended.
This completely defeats the purpose of the event
which is to let the user delay work until the
screen has settled, thus reducing load on the
js/main thread during the critical period of
screen creation and display.    * Reintroduce
parity between iOS and Android -
`componentDidAppear` is emitted after the appear
animation ends.  * `componentDidAppear` for TopBar
components (buttons, title, background component)
is still emitted when they are attached to the
screen.    closes #6261
",16341,316,73,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6881","wix/react-native-navigation","088a9ed802cdf067843e3675ab11bd94ac144f82",23,"2020-07-07 09:02:38+03:00","Android code restructure (#6370)  This PR updates
the internal file and package structure of the
Android project to better reflect the features
available in the library and the responsibilities
of each class.
",16240,312,71,"Guy Carmeli","guyca@users.noreply.github.com","GitHub","noreply@github.com"
"6882","bumptech/glide","86a3afa40b56bad2f0d1d51a2a148d897a912b89",39,"2015-06-03 18:23:00-07:00","Glide nullable annotations. Part 1; the major bits
and pieces.  I may have misinterpreted some of
these. Particularly unsure about
ModelLoader#buildLoadData(). Is the model allowed
to be null? I've noticed many implementations
dereference it without checking but I've also
noticed one instance of null (possibly) being
passed in (StringLoader.java). I've left it
without the nullable annotation as StringLoader
seems to be the outlier here. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95163378
",28979,411,6640,"nickcaston","nickcaston@google.com","Sam Judd","judds@google.com"
"6883","bumptech/glide","dffd0145eeda92f418c6f8252ed7d8f1e97195b0",5,"2015-06-10 01:46:39-07:00","Glide nullable annotations. Add annotations to
more RequestBuilder#load methods. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95616390
",29202,419,6718,"nickcaston","nickcaston@google.com","Sam Judd","judds@google.com"
"6884","bumptech/glide","e5f2fc25807dfcd41e1d65403820384e037b2d04",3,"2015-06-12 19:26:05-07:00","Don't use FixedSizeDrawable by default.  Fixes
#475.
",29231,422,6747,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6885","bumptech/glide","c660ff430f3018c9090e68f54328034e07a760db",9,"2015-06-12 19:49:39-07:00","Glide nullable annotations. Add annotations to
bitmap recycling package. ------------- Created by
MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95896422
",29223,421,6745,"nickcaston","nickcaston@google.com","Sam Judd","judds@google.com"
"6886","bumptech/glide","49eb4c524b83d5e4220e548aeaa7109bc65508fe",14,"2015-06-15 21:54:38-07:00","Glide nullable annotations. Final pass through.
All mentions of ""null"" in javadoc should now be
annotated as such. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96076050
",29285,421,6769,"nickcaston","nickcaston@google.com","Sam Judd","judds@google.com"
"6887","bumptech/glide","30c92551ee75c2109955ee653e8795c7c1d60bf8",1,"2015-06-16 18:37:46-07:00","Glide nullable annotations. Add annotation to
HttpException. ------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96166611
",29286,421,6769,"nickcaston","nickcaston@google.com","Sam Judd","judds@google.com"
"6888","bumptech/glide","df70f3d622758e4d82ef73bdd677346aed490c42",11,"2015-06-16 20:25:58-07:00","Document and annotate RequestOptions.
",29289,421,6860,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6889","bumptech/glide","57cdba301532357d55668871321b47d23197349a",8,"2015-06-12 09:17:34-07:00","Make BitmapPool allocate if attributes not in pool
",29315,421,6859,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6890","bumptech/glide","82faceaef3503171a198017e77fe727661534d98",10,"2015-06-12 11:48:00-07:00","Add @NonNull and consistent ordering to
transformations.
",29310,421,6851,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6891","bumptech/glide","65d6ee6b63b5625425e3843f30c858cc3f5fe6e2",1,"2015-06-23 15:46:34-07:00","Allow requests to be cleared on background threads
",29396,421,6902,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6892","bumptech/glide","15df1f6c7eaf6c356955eb594bb5c543c0066b9e",2,"2015-06-24 06:39:08-07:00","Add helper methods for override and starting loads
",29506,421,6981,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6893","bumptech/glide","daa7e67ea0e2aab02d40b75905c13262c46ec051",1,"2015-07-30 15:06:22-07:00","Added use of byte arrays and int arrays to glide
gif decoding to improve performance on <L devices.
Created general ArrayPool that allows pooling of
any array type with a corresponding adapter
interface. Follow up CL will replace ByteArrayPool
with ArrayPool<byte[]> in Glide. -------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=99517599
",29988,428,7148,"niloc","niloc@google.com","Sam Judd","judds@google.com"
"6894","bumptech/glide","a64d5d0af38facfe9cf5b8ff0efb7ac6b4aebb4b",4,"2015-08-24 16:50:52-07:00","Avoid NPE if Exception message is null.
------------- Created by MOE:
http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=101417464
",30036,428,7156,"judds","judds@google.com","Sam Judd","judds@google.com"
"6895","bumptech/glide","85506abeaa9b10ba4c81848772785b60242ba5d7",1,"2015-09-04 08:55:39-07:00","Fix a variety of style pmd/findbugs issues.
",30140,428,7177,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6896","bumptech/glide","cd5b86f6a6bffa5ab249ad70f19cddc7b4274b53",10,"2015-09-04 14:31:40-07:00","Make CircleCrop handle Bitmaps that don't support
transparency. ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=102375353
",30181,428,7185,"judds","judds@google.com","Sam Judd","judds@google.com"
"6897","bumptech/glide","b334f4f145a899d3e2c013d222d4ebcf6eb94f0d",6,"2015-10-30 12:35:49-07:00","introduced ConnectivityMonitorFactory interface
connectivity monitor factory is now injectable
------------- improved encapsulation and using
more specific name  ------------- Created by MOE:
https://github.com/google/moe -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106714967
",30353,430,7227,"judds","judds@google.com","Sam Judd","judds@google.com"
"6898","bumptech/glide","8a291a8782f2694d9db9766680af62e6eab085bb",1,"2015-11-02 11:45:04-08:00","Fix findbugs errors in GlideExecutor.
",30383,430,7247,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6899","bumptech/glide","3534357829f1611b5625133317975cf7444ae69f",3,"2015-06-30 17:01:23-07:00","Fix documentation in RequestBuilder.
",30381,430,7263,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6900","bumptech/glide","66d4caa4d373f6aa842983b6265a4018dfcc12d5",1,"2015-11-05 10:44:13-08:00","Allow lazy header factories to return null values.
After this change, we can try to lazily retrieve
values for headers even when retrieving those
values may fail (due to network operations or
I/O). Previously the factories would have had to
return some value. ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=107154151
",30437,430,7271,"judds","judds@google.com","Sam Judd","judds@google.com"
"6901","bumptech/glide","7286c3fa474069ac02dc2bad5ade5ba7c0a1cc89",4,"2015-11-04 19:56:26-04:18","Implemented CENTER_INSIDE support  Implemented
CENTER_INSIDE support  Implemented CENTER_INSIDE
support  CENTER_INSIDE implemented  CENTER_INSIDE
implemented: DownscaleOnly Downsample strategy
CENTER_INSIDE: Formatting fixed
",30527,432,7294,"Jose","engtoolsdev@gmail.com","Jose","engtoolsdev@gmail.com"
"6902","bumptech/glide","59f3d9cbbd73675f155e5cf9e7ccf99a3dce450f",4,"2015-11-20 15:29:46-08:00","fixes #738: Add optional threading lock for bitmap
manipulation (affects only Moto X 2nd gen on api
22)  this addresses a threading bug on this
specific device, the bug manifests itself by
displaying black images instead of resized images.
",30436,430,7272,"Matthijs Mullender","mmullender@groupon.com","Matthijs Mullender","mmullender@groupon.com"
"6903","bumptech/glide","07a1bca44065c20a7821fc63c1e1283761b7bff9",1,"2015-11-19 14:11:30-08:00","Adding a ModelLoader for Data URI scheme.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=108283996
",30668,433,7316,"jasonch","jasonch@google.com","Sam Judd","judds@google.com"
"6904","bumptech/glide","36262bcb1ca6a3b932e7ba472470a78222e43833",1,"2016-03-09 16:03:22-08:00","Factor Glide.get() calls out of GifFrameLoader.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=116813747
",31113,432,7400,"nnaze","nnaze@google.com","Sam Judd","judds@google.com"
"6905","bumptech/glide","bf70b83039349e29059c537e742548ce6c1510ad",2,"2016-06-08 10:37:54-07:00","Always update animatable when updating resource in
ImageViewTarget.  Previously we might set the
resource to null without setting the animatable to
null which could cause us to interact with a
recycled resource. ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=124367409
",31229,433,7527,"judds","judds@google.com","Sam Judd","judds@google.com"
"6906","bumptech/glide","ab0f762050acea6e9ab4650a0bb25776bcbf2121",3,"2016-07-10 18:23:06+02:00","Forward port PR #1096 that introduced
.asBitmap().crossFade() to
.asBitmap().transition(withCrossFade()) Fixes #840
Also introduce some missing convenience methods
and fix some JavaDoc typos.
",31321,436,7645,"Robert Papp","papp.robert.s@gmail.com","Robert Papp","papp.robert.s@gmail.com"
"6907","bumptech/glide","aab4fa3b0c3d9cc7677619dc504ef58bb4ea25fd",2,"2016-07-13 20:21:42+02:00","Spring Cleaning Mostly javac/LINT/gradle/IDEA
warnings, typos, and consistency fixes.  Detailed
Global changes:  * Fix some JavaDoc formatting
issues (e.g. broken links)  * Fix some JavaDoc
build issues (inner class ctor links were broken)
* Fix mis-typed words that caused grammatical
issues  * Fix Gradle deprecation warning during
build  * Make samples' build.gradle files more
similar  * Remove redundant <uses-sdk> from
manifest  Mostly test related classes:  * Add some
generic arguments where missing  * Add @TargetApi
annotations to test code to suppress LINTs  *
Reduce the scope of suppressions or remove them
completely  * Use some specialized
mocking/matching methods to reduce uncheckedness
GIF related classes:  * Reduce number of magic
constants, name them  * Add some documentation
from the standard for the constants  * Remove some
meaningless comments  * Convert most inline
comments to JavaDocs  * Add annotations for ints
designating color/status/etc (int is too
overloaded)
",31554,437,7796,"Robert Papp","papp.robert.s@gmail.com","Robert Papp","papp.robert.s@gmail.com"
"6908","bumptech/glide","4ab4b39c7d13ab6b71f738f630b8061f7ed90a48",6,"2017-03-18 15:07:10-07:00","Add support for generated RequestOptions.
",33000,464,8281,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6909","bumptech/glide","d54bc81a40769b7c3f2af3671ceb63e2c5a569a6",2,"2017-03-19 15:52:34-07:00","Move RequestManagerRetriever into the Glide
singleton.  This removes the independent singleton
that RequestManagerRetriever used prior to this
change. Removing the singleton will allow us to
more easily configure RequestManagerRetriever in
the future.
",33028,464,8283,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6910","bumptech/glide","99d98780069e1ec7950ca9170390d489b6492cad",4,"2017-03-19 13:45:16-07:00","Add @ExtendsRequestOptions to add new types to
RequestManager API.  @ExtendsRequestOptions will
allow us to add dependencies on new types and
maintain the same fluent API. For example, if we
split out GIFs into a separate library, our
generated API can still retain the asGif() method,
albeit with a slightly different entry point.
Glide.with(fragment).asGif() in the current world
becomes GlideApp.with(fragment).asGif().
",33440,468,8457,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6911","bumptech/glide","91a8a8b8ff324e711b6a8a6c38e16d33ee697d24",2,"2017-03-20 12:37:47-07:00","Add a generated RequestBuilder subclass.  The
generated class contains all RequestOptions as
well as all options in the standard RequestBuilder
class. The methods include those added from
GlideExtensions.
",33803,469,8572,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6912","bumptech/glide","0188104a7d8a094da5c8b8c00290106e34ac1bb6",1,"2017-03-22 08:03:40-07:00","Set min sdk version for Glide to 14.  Practically
speaking this is already required by interfaces
implemented in several classes. Given that ~1% of
devices are still using Gingerbread, less than 1%
are using honeycomb and it‚Äôs hard for us to avoid
using newer APIs even in our sample apps, it‚Äôs
probably time to move the sdk version forward.
",33740,469,8574,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6913","bumptech/glide","8761aa5adbcc68768d91600a6987b7eee6b71811",1,"2017-03-23 07:37:52-07:00","Add Context as a parameter to Transformations.
Doing so allows us to remove the Context parameter
from all of the various transformation methods in
BaseRequestOptions/RequestOptions. In turn the
lack of a Context should make it easier to memoize
or retain static copies of options.
",34034,469,8790,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6914","bumptech/glide","72da5b035d1979215c46384bca99cf2032dea341",3,"2017-03-27 21:34:41-07:00","Generate API code in package containing RootModule
This fixes class path collisions in projects
containing multiple applications with
RootGlideModules.
",34034,469,8796,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6915","bumptech/glide","b949d0011eba88fdb31cf6028306cf48d70ded69",5,"2017-04-17 11:19:29-07:00","Carry through @Nullable annotations from Target
interface.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=153365074
",34060,469,8784,"paulsowden","paulsowden@google.com","Sam Judd","judds@google.com"
"6916","bumptech/glide","e766c9d2a5c12bdc7ac4beb25dcfb5dd6c19027e",2,"2017-04-18 15:40:54-07:00","Rename RootGlideModule -> AppGlideModule.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=153521192
",34089,469,8781,"judds","judds@google.com","Sam Judd","judds@google.com"
"6917","bumptech/glide","7004e5959741ff1194ce9465670850e948016d57",31,"2017-08-04 18:01:54+02:00","Annotate getDataClass and getDataSource from
DataFetcher as NonNull (#2203)  Returning null
from those will trigger obscure crash in
MultiClassKey, annotation helps preventing that.
",34358,470,8744,"Tolriq","Tolriq@users.noreply.github.com","Sam","sam.a.judd@gmail.com"
"6918","bumptech/glide","23dd41ad9de8726d54feb98585bbba74cc84429f",8,"2017-08-07 10:45:24-07:00","Fix warnings in RequestOptions and add annotations
",34668,470,8755,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6919","bumptech/glide","0b99260f2f99b4b3c0ea5f4d7b309bc5a36d8d1c",4,"2017-08-10 09:38:50-07:00","Allow users to specify default transition options
in GlideBuilder.  Fixes #2182.
",34712,471,8800,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6920","bumptech/glide","3650c4ef8bffb8c36d4eab4e3021ab170ef33f0f",2,"2017-09-11 07:26:14-07:00","Add runtime permission support to gallery sample.
",35204,473,9126,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6921","bumptech/glide","c3479c43461404de36c0fd07a5f324573443e193",7,"2017-09-14 14:55:46-07:00","Make ListPreloader more tolerant of null values
from its interfaces.  Progress towards #2379.
",35144,472,9168,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6922","bumptech/glide","7a8ac09c670096ff27f0c866757f8131b0d4fa5f",1,"2017-04-06 19:23:38-07:00","Add an Imgur card sample app.
",35548,484,9300,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6923","bumptech/glide","2d5bf5304b81562ce012267c3c7ee573e286f305",1,"2017-09-22 16:42:10-07:00","Largely revert back to v3 ViewTarget size
handling.  See #2431 for details on what this does
and why. This will introduce some behavior
changes, especially if you‚Äôre not using fixed
dimensions in your layout parameters.
",35507,483,9337,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6924","bumptech/glide","b06b0cc2bd79e10a77155466da8a83459edf371b",2,"2017-10-06 17:35:54-07:00","Add API to start a new Request when a load fails.
We‚Äôre going with .error() to match the behavior of
the .error Drawable and resource id methods.
fallback() is a somewhat better name, but we
unfortunately already use it to handle cases where
models are null and expected to be null.  Fixes
#451.
",35753,485,9401,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6925","bumptech/glide","7614e100c001222075a864275d1cbc28a9589023",1,"2017-10-06 22:22:39-07:00","Add support for decoding non-Bitmap drawables
using Resources.  As a fallback for drawables that
we either can‚Äôt obtain an InputStream for or can‚Äôt
decode as Bitmaps, Glide will now also call
Resources#getDrawable with the given resource id.
Fixes #350.
",35822,487,9417,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6926","bumptech/glide","bc1b25ef058c03e70f9749e56a62d0371c9accb6",1,"2017-10-10 10:04:07-07:00","Support multiple, ordered, nullable thumbnail
requests.  I've basically just added a helper
method that calls thumbnail() recursively for you.
It seems like it eliminates some of the especially
confusing nested thumbnail logic.  Unfortunately
it requires @SuppressWarnings(""unchecked"") whever
it's used because it uses varags with a
parameterized type (RequestBuilder). I can't
currently use @SafeVarargs because that requires a
final method. I can't make the method final
without preventing mocking in tests (minor) and
breaking the generated API (major). By splitting
out a separate base class for RequestBuilder I
actually probably can fix this in the future, but
that's a pretty substantial change that I don't
want to make right now.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=171694145
",35923,487,9474,"judds","judds@google.com","Sam Judd","judds@google.com"
"6927","bumptech/glide","cd8e49c155f9ca4699ba8df66daff29067233ee3",1,"2017-10-10 21:52:50-07:00","Add @RawRes to load(Integer) in RequestBuilder.
It‚Äôs perfectly possible to load a valid image or
video frame from raw resources as well as
drawables resources.
",35923,487,9472,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6928","bumptech/glide","0b5d1bc127d5188fa2744848c4c4815166501dcc",2,"2017-10-12 16:55:00-07:00","Obtain the correct size Bitmap in
TransformationUtils.roundedCorners.  Previously we
were obtaining the requested image size. The
requested image size is ignored in roundedCorners
because the transformation  doesn‚Äôt scale. As a
result we were weirdly stretching the image with
some combinations of image and requested
dimensions.  Fixes #2472.
",36164,487,9513,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6929","bumptech/glide","6f91031a7e7b3852a58f3271091913655aa0f7ea",1,"2017-10-13 09:04:39-07:00","Default GIF frames to ARGB_8888 and configure them
via DecodeFormat.  Fixes #2396.
",36178,488,9547,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6930","bumptech/glide","65048a4a241b2acc03d2e3586d6e1eec37cb9f5a",2,"2017-10-22 00:39:36-07:00","Pass through exception messages to
RequestFutureTarget.  We may want to more
generically handle multiple RequestListeners in
the future, but for now we can at least avoid
swallowing exceptions in  RequestFutureTarget
without allocating new Lists every time a
RequestListener is added.
",37221,492,9624,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6931","bumptech/glide","7663c214e44964529173ca48e0faf3e588f5a386",2,"2017-10-22 18:51:33-07:00","Add support for passing through Bitmaps and
Drawables.
",37792,498,9717,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6932","bumptech/glide","b41308ed4145e334d4752174bf8cc6b256a416d6",1,"2017-10-23 18:02:04-07:00","Handle non-recyclable Bitmaps in Drawable
converter.  Avoids errors where we forget to check
if the Bitmap is recyclable  in callers.
",37774,498,9715,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6933","bumptech/glide","d447e582397cc7cf3f95a9871eb18d81a917544f",1,"2017-10-25 15:21:59-07:00","MOE automated commit.
",37913,499,9722,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6934","bumptech/glide","74fcad1340da13ac302994873e076731ab96b8e6",1,"2017-10-26 08:26:51-07:00","Avoid blocking Futures forever on unexpected load
failures.
",37914,499,9728,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6935","bumptech/glide","d57b90b77e7528e72f2ebae173fe8d98562a5fe6",4,"2017-10-22 17:47:41-07:00","Add a system for emulator based regression
testing.  The tests can both generate canonical
output specific to one or more Android SDKs and
compare the current output to previously generated
images to detect regressions.  Ideally we can add
top level tests for most Glide functionality using
these tests to detect regression across the
library without a ton of overhead either when new
tests are added or when functionality is
intentionally.
",38271,508,9758,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6936","bumptech/glide","aa2711b56b2e4962630ed540576b062b0a22357d",2,"2017-11-02 10:08:43-07:00","Start animatable resources after setting the
resource in ImageViewTarget  After
90b3b9f054072a7c3625926caa150277352b92dd we have a
case where a GifDrawable may load a frame
synchronously when it‚Äôs started. If the
GifDrawable was started before it was attached to
a View (and gets a  non-null Callback) and the
GifDrawable had a frame pending, then the
GifDrawable would stop itself in the start() call,
causing the  drawable not to animate. We can avoid
this scenario by changing the  order in which we
start animated drawables and set them on views so
that we only start the drawable after its set on
the View.  Fixes #2541
",38950,513,9786,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6937","bumptech/glide","f75087f8678402f595c5082cd83776b6bba5b6d2",1,"2017-11-04 14:32:11-07:00","Add tests for Glide‚Äôs annotation processor.  Fixes
GlideOptions.OVERRIDE_REPLACE and
GlideOptions.OVERRIDE_NONE options (previously
they would cause complication errors if used).
Fixes an NPE caused by skipStaticMethod.
",45408,561,11560,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6938","bumptech/glide","9c82c42e6314311efb3bea12ee8984b3bc5caa48",2,"2017-11-16 22:07:31-08:00","Allow Requests to notify Targets when cleared
after loads complete.  Fixes #2555.
",52923,598,13427,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6939","bumptech/glide","54801bd931cc99ee7ed738bd179cfa2a805a415b",45,"2017-11-18 00:10:34-08:00","Cleanup a bunch of errors and warnings.
",53218,598,13536,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6940","bumptech/glide","d0fd96780dccf00b5cffa43befa2d5566cacd1db",2,"2017-11-14 22:55:32-08:00","Add a clearOnDetach method to ViewTarget.  Also
returns appropriate ViewTarget implementations
from into(ImageView)  so that the method can
easily be chained.  Related to #2520.
",53424,598,13556,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6941","bumptech/glide","2bdeec9a41158f68e3eebd85fbc28b92383f357b",3,"2017-11-19 12:45:25-08:00","Add KeyTester and Key regression tests for better
coverage of Key implies.  In addition to being
easier to use than KeyAssertions, the regression
tests should help us catch any unintentional
changes that result in  disk cache keys being
modified.
",53725,598,13572,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6942","bumptech/glide","6cee6d2c155f9dda7857df6d9c060713f4e5b2ca",11,"2017-11-17 16:38:59-08:00","Clean up GlideExecutor and provide a method for
using instrumented executors in tests.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=176178140
",53815,599,13595,"azlatin","azlatin@google.com","Sam Judd","judds@google.com"
"6943","bumptech/glide","f202e4c412bd259a81873c23705dc9d4f7c3d4d5",2,"2017-11-20 18:33:36-08:00","MOE automated commit.
",53820,599,13596,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6944","bumptech/glide","f18005eb0818f8a817138271fdfdd3c5bf29f69b",6,"2017-11-20 23:10:13-08:00","Clean up warnings in GlideExecutor.
",53830,599,13603,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6945","bumptech/glide","e51a013d754c2658e7329beb97308f3e2686c924",8,"2017-11-20 23:16:21-08:00","Clean up warnings in and around
MockGlideExecutors.
",53835,599,13604,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6946","bumptech/glide","7c0cd6379c23d5a9cdf8893ad993edce3feda064",2,"2017-11-20 22:14:19-08:00","Optimize loops in StandardGifDecoder.  These small
additive changes might save ~5-10% decoding some
GIFs, depending on the vagaries of the particular
file.  Progress towards #2471.
",53915,599,13652,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6947","bumptech/glide","b4d778bc66ec9683157e5c5e46f9a999362d4564",1,"2017-11-18 23:10:35-08:00","Reduce a variety of object allocations across
Glide.
",54081,599,13662,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6948","bumptech/glide","68965f07d1178f05f2b1360361a71b87e254283f",1,"2017-11-23 00:18:46-08:00","Enable warnings as errors for Java compilation in
Glide.
",54233,600,13708,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6949","bumptech/glide","108a0621d1fa970aa83e28c8700c04c2dbc1a8cf",8,"2017-11-23 13:09:49-08:00","Keep onlyRetrieveFromCache and normal requests
running independently.  This prevents cases where
using onlyRetrieveFromCache might block a request
on an RPC if a request was already pending without
onlyRetrieveFromCache being set.  However, this
change does now mean that it's possible a resource
will be loaded from the disk cache twice
simultaneously because onlyRetrieveFromCache
requests are no longer deduped with normal
requests. We expect this case to be rare, and the
consequences are an efficiency issue rather than a
correctness problem, so we're still probably
better off with this change.  Future work might
include attempting to cancel and notify any normal
requests if an onlyRetrieveFromCache requests
completes with the same key will the normal
request is running.  Fixes #2428.
",54568,601,13715,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6950","bumptech/glide","861329226e3dffa0e096c3200fb6b96a1613ba83",16,"2017-11-25 13:18:23-08:00","Improve byte[] loading and consistency.  Two
significant issues are resolved here: 1. Using
Glide.with().load(byte[]) and
Glide.with().asDrawable().load(byte[]) used
different sets of default options. 2. All byte[]
loads default to using the same disk cache key
unless override with a signature (which happens
inconsistently depending on which variation of
load() is called in #1).
",55167,604,13777,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6951","bumptech/glide","cff4f2cc3398daa21e00f76e2c51e4b2bd3952c4",8,"2017-11-25 15:04:42-08:00","Avoid recycling Bitmaps/Drawables passed to
load().  This is still best effort in that anyone
can register a component that doesn‚Äôt follow our
conventions and break things, but it should be
safer by default at least.
",55521,607,13798,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6952","bumptech/glide","243c1cf5bc7d552743257cec7a66f80af0058fc3",1,"2017-11-27 19:57:35-08:00","Avoid releasing resources to memory cache after
they‚Äôre removed.  Previously when the Target was
dereferenced, even if it was cleared  first, the
resource would be put into the memory cache. That
could end up affecting eviction order and prevent
Glide from re-using resources it would have
otherwise been able to.
",56215,609,13817,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6953","bumptech/glide","f372e632e4013f43e10eb1d1f2542f56de2ee7c6",3,"2017-11-29 22:26:16-08:00","Add an API to avoid active resource retention.
",56284,609,13853,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6954","bumptech/glide","2c7aa8536d1e9b74c8e11af3182f7f896dfab255",1,"2017-11-29 21:56:27-08:00","Poll ActiveResources‚Äô ReferenceQueue using a
separate Thread.  Avoids an issue where prolonged
idle states on the main thread could  lead to an
unexpectedly large accumulation of cleared weak
references and a corresponding increase in memory
usage.
",56327,609,13853,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6955","bumptech/glide","dc12b60c8f0a21eb9b3ab2164471c93d2e20ae25",36,"2017-12-05 09:30:25-08:00","Improve Kotlin support for RecyclerView module
(#2670)  * Improve Kotlin support for RecyclerView
module with nullability annotations    Signed-off-
by: Alex Saveau <saveau.alexandre@gmail.com>
",56674,618,13895,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6956","bumptech/glide","c3dafde00a061bafcd43a739336ca3503af13a7d",93,"2017-12-05 19:23:56-08:00","Add nullability annotations to okhttp3 module and
its dependencies (#2685)  * Add nullability
annotations to okhttp3 module and its dependencies
Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",56717,618,13895,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6957","bumptech/glide","d427cbd33206cbcc88ac4a0f0c29ef831d4bb5b5",2,"2017-12-11 12:00:05-08:00","Fix a race causing an NPE when obtaining load
paths for resources.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178651500
",56859,618,13937,"judds","judds@google.com","Sam Judd","judds@google.com"
"6958","bumptech/glide","0cffd1da977e9ca334032ebc1d798213a177aab7",217,"2017-12-11 17:57:05-08:00","Add nullability annotations to library module
(1/n) (#2681)  * Add nullability annotations
Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",57255,618,13929,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6959","bumptech/glide","f541b65e596a49d252ba6b80d3b05a111ce93461",135,"2017-12-14 11:59:41-08:00","Add nullability annotations to gif modules (#2712)
Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",57324,618,13929,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6960","bumptech/glide","cfae30aa55ad38d69fa3997662e2d791de2c110e",48,"2017-12-14 17:34:47-08:00","Add nullability annotations to gif encoder module
(#2713)  Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",57354,618,13929,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6961","bumptech/glide","36e0b802c3a1e564caf230b351a6438fa32100ac",4,"2017-12-17 22:04:05-08:00","Cleanup (#2722)  Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",57351,618,13941,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6962","bumptech/glide","650bb7770d08b279c2a7f00e25337618da54f7f3",135,"2017-12-16 14:23:20-08:00","Start adding nullability annotations to Registry
class and its dependencies  Signed-off-by: Alex
Saveau <saveau.alexandre@gmail.com>
",57414,618,13941,"Alex Saveau","saveau.alexandre@gmail.com","Sam Judd","judds@google.com"
"6963","bumptech/glide","bd2f21595d3404e6aadf1f4333bef369509c4a56",141,"2017-12-21 15:00:12-08:00","Util nullability (#2729)  * Add nullability
annotations to the util package and its
dependencies    Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",57537,618,13956,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6964","bumptech/glide","6c7cf3f8cae998469a7e7df8c70c459311479a38",5,"2017-12-20 11:37:10-08:00","Fix using a recycled DecodeJob object when
ResourceEncoders throw.  It‚Äôs possible that a
ResourceEncoder will throw unexpectedly. If they
do so, the exception is caught by the DecodeJob‚Äôs
top level try/catch block. Unfortunately, in a
finally block lower down the stack, we were
calling onEncodeComplete and returning the
DecodeJob to the pool. As a result, the logic in
the catch block higher up was running after the
DecodeJob was already in the pool, causing an
exception. Now we avoid calling onEncodeComplete
and returning the DecodeJob to the pool if an
exception is thrown, which allows the logic in the
top level catch block to function as we expect.
",57642,619,13962,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6965","bumptech/glide","e35a73b4e78f2f05dc5c1163b8083ac1b662b02f",143,"2017-12-22 16:58:59-08:00","Finish adding nullability annotations to Registry
class and its dependencies (#2746)  Signed-off-by:
Alex Saveau <saveau.alexandre@gmail.com>
",57705,619,13962,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6966","bumptech/glide","f37ced1512f7eabf37f6c93b1b7ffb32c3629b72",25,"2017-12-22 16:59:43-08:00","Add nullability annotations to pool package and
its dependencies (#2747)  Signed-off-by: Alex
Saveau <saveau.alexandre@gmail.com>
",57725,619,13962,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6967","bumptech/glide","bb96b633174184965cd1bdf9027ef3843f59c54f",41,"2017-12-22 17:03:30-08:00","Add nullability annotations to RequestOptions
(#2750)  Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",59071,619,13962,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6968","bumptech/glide","c3107801dab8ccbe121157bee7dba29b7d9723e6",30,"2017-12-22 20:34:31-08:00","Add nullability annotations to signature package
and its dependencies (#2748)  Signed-off-by: Alex
Saveau <saveau.alexandre@gmail.com>
",59087,619,13963,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6969","bumptech/glide","a084ae4eb067c6759b813c27fe6316453a849b18",3,"2017-12-22 17:13:34-08:00","Mark a couple of non-null methods in Registry as
NonNull instead of Nullable.  I missed these the
first time around, but they throw exceptions if
the result is null, so they either return a non-
null value or throw, which qualifies as NonNull.
",59087,619,13963,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6970","bumptech/glide","6e9866b5a19d06625006a9a8c605db21047df74b",1,"2017-12-18 22:19:01-08:00","Add support for decoding AssetFileDescriptors as
videos.  AssetFileDescriptors require an offset
and a length, simply unwrapping them as
FileDescriptors or ParcelFileDescriptors won‚Äôt
work. Most of the time videos are loaded through
providers that don‚Äôt store multiple  videos in a
single file or from individual files so this is
relatively rare. However, prior to this change
Glide would fail to load any video placed in
resources like raw resources. Glide might also
fail to load videos provided via ContentProviders
as AssetFileDescriptors prior to this change.
",59789,624,14019,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6971","bumptech/glide","ded8f77c9f2471e3c3413aa234656df8cf72dd2f",4,"2017-12-24 17:08:36-08:00","Support getScaledFrameAtTime.
",59826,624,14020,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6972","bumptech/glide","d522ac7249ca1bf71f6de30e62d71a1faa8d4c4c",3,"2017-12-24 17:32:14-08:00","Fix an NPE in ResourceDrawableDecoder.  The NPE
would only occur if the load was going to fail for
the decoder anyway, but at least this way we don‚Äôt
show a scary looking NPE for an expected case.
",59825,624,14021,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6973","bumptech/glide","e02969417a75048af0fcb61c5fbf6ea94bd2c4aa",1,"2017-12-30 06:23:28+00:00","Clean up synthetic accessor method rot (#2762)  *
Clean up accessor method rotting.    * Make tests
pass on Windows (10, JDK 8x64) (with less ignores
than before)    * Fix error prone version
",59940,625,14039,"Róbert Papp (TWiStErRob)","papp.robert.s@gmail.com","Sam","sam.a.judd@gmail.com"
"6974","bumptech/glide","f16aef4c6ad583bafe796c7a952a0d10920c4dcd",18,"2017-12-31 08:03:49+00:00","PMD 6.0.0 (#2771)  * Update to PMD 6.0.0    *
Revert: Fix deprecation warnings in PMD 6.0.0.
Move @SuppressWarnings closer to the problem to
avoid suppressing future similar issues.  Reduce
amount of C-style (declare first and then use)
variable definitions  Make some variables final in
tricky methods (enabled by above).  Remove some
unnecessary PMD suppressions  Move
PMD.OneDeclarationPerLine suppression for for
loops into pmd config  Small method extractions
towards Clean Code  Minor formatting/interface-
impl enhancements in touched classes    * Fix
classpath of PMD so UnnecessaryModifierRule
doesn't crash
(https://github.com/pmd/pmd/issues/817)  Fix
hidden PMD violations    * Fix false positives by
providing the correct classpath to PMD    *
Simplify ThumbnailStreamOpener.open    * Add TODO
to make PMD build faster
",60220,629,14129,"Róbert Papp (TWiStErRob)","papp.robert.s@gmail.com","Sam","sam.a.judd@gmail.com"
"6975","bumptech/glide","62d7464fb4f874897121591815ecb7503f7bc01b",6,"2017-12-31 11:22:13-08:00","Add @NonNull to generated options and warn if
@NonNull is missing.  Progress towards #2774.
",60295,629,14128,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6976","bumptech/glide","9fde00628f223e96372aeceadcb3e35a0635cb6d",2,"2017-12-31 11:54:03-08:00","Add @NonNull and warning to extension type
methods.  Progress towards #2774.
",60320,629,14128,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6977","bumptech/glide","d7bb6f956b34dd00ad0dbcb64f15f4b9c2fb0538",4,"2018-01-02 15:20:32+00:00","Add missing annotations on APT overriding methods
(#2779)  * Run tests for annotation compiler    *
@NonNull GeneratedAppGlideModuleImpl.getExcludedMo
duleClasses    * @NonNull
RequestBuilder.getDownloadOnlyRequest    *
@NonNull RequestManager.as    * Fix Gradle
deprecation warning (file(File) -> files(Object))
",60358,629,14129,"Róbert Papp (TWiStErRob)","papp.robert.s@gmail.com","Sam","sam.a.judd@gmail.com"
"6978","bumptech/glide","0996f124c222142415c22a3607117067c5a3f3b3",2,"2018-01-02 22:47:16-08:00","Don‚Äôt require GifDrawables in Gallery sample.
This is more leftover debugging code :/.
",60358,629,14129,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6979","bumptech/glide","0deee306477ca1987ee4a9eeb04b7299aa3f54c5",9,"2018-01-02 21:10:04-08:00","Handle null outConfigs from BitmapFactory on API
26.  We may be able to be smarter about how we
perform this fallback. Not all images are affected
and those that are may be limited to some subtypes
of images. This fix may have negative side affects
if it causes us to use the wrong config for the
inBitmap. Although the image should still decode
if we use the wrong config because we retry on
failures with a null inBitmap, it can prevent us
from re-using Bitmaps and waste memory and CPU
cycles.
",60620,630,14146,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6980","bumptech/glide","c1036c1cdc3c85827bf566e104a12ca880e26411",4,"2018-01-02 21:51:08-08:00","Avoid passing null configs to Bitmap.createBitmap
in LruBitmapPool.  We already handle null configs
for our various strategies because some  types of
Bitmaps (GIFs mostly) on some API levels will have
special  native configs that have a null Java
equivalent. As a result,  LruBitmapPool does not
throw as long as there is a matching Bitmap in
the pool even if the config we‚Äôre asked for is
null.   This change fixes the inconsistent
behavior where we would throw if the pool happened
to not have a matching Bitmap when the given
config is null. Now we universally handle null
configs in get() and getDirty().
",60632,630,14146,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6981","bumptech/glide","a0f3d300d556cf83cf6a2a5dee737b89c862770d",6,"2018-01-04 15:13:07-08:00","Add a BufferedOutputStream that works with
ArrayPool to reuse byte[]s.
",61472,633,14157,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6982","bumptech/glide","860f7d041dd00e6032d71ff8483ac2a9d30441ec",2,"2018-01-04 15:18:43-08:00","Use the new BufferedOutputStream when encoding
Bitmaps.  Deprecates the BitmapEncoder constructor
that does not take an ArrayPool.
",61487,633,14160,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6983","bumptech/glide","35f6a0a43bf8ac645c8c5d0cb82f2936f172f7f9",42,"2018-01-09 15:35:13-08:00","Ensure all generated classes are fully
nullabilitily annotated (#2789)  * Ensure all
generated classes are fully nullability annotated
Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",61976,633,14160,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6984","bumptech/glide","bfa237c19a7d742a4911e2744d174ae82f420ac0",32,"2018-01-10 18:33:05-08:00","Add nullability annotations to manager package
(#2790)  Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",62015,633,14158,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6985","bumptech/glide","73277df1debcf894aece03f0d1b2852281c266a5",4,"2018-01-16 21:13:46-08:00","Avoid converting RGBA_F16 to ARGB_8888 in
TransformationUtils.
",62162,633,14160,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6986","bumptech/glide","e9f682f9586a68f9322d978dda4856957167ff0b",128,"2018-01-23 07:37:53-08:00","Start adding nullability annotations to load
package (#2797)  Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",62263,633,14159,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6987","bumptech/glide","0917ef365ea35ca3e0f1eb12a2b7c843c84042f3",7,"2018-01-30 07:54:14-08:00","Avoid throwing when decoding Files with
DiskCacheStrategy.AUTOMATIC.  AUTOMATIC allows
decoding items from the resource cache in case the
item being loaded is local. If the item is remote
and the user is requesting a File however, the
resource cache generator will throw an exception
because it‚Äôs unable to find any path that will
obtain a File from any Model. I‚Äôve fixed this here
by special casing Files and ignoring missing paths
for them in ResourceCacheGenerator so that loads
for File types won‚Äôt fail with automatic if they
would have otherwise succeed with
DiskCacheStrategy.DATA. I‚Äôve also updated a few of
the error messages to try to make it clearer why a
load has failed if it fails for a  similar reason.
Fixes #2824.
",62432,635,14165,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6988","bumptech/glide","17c1c3d5781e953379904a60bae08524632e5053",5,"2018-02-05 07:02:01-08:00","Add support for Uri data uris.  Previously we only
supported data uris if they were provided as
Strings.  Fixes #556.
",62519,636,14189,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6989","bumptech/glide","914060e00a9a766017560276a2dd9a42dc9b2874",2,"2018-02-08 07:02:09-08:00","Make GlideBuilder.build package private.  It
shouldn‚Äôt have been made visible and can‚Äôt  safely
be used directly outside of the library.  Fixes
#2885
",62531,636,14201,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6990","bumptech/glide","29d481ccdc8a0f0d7135359d970de071f73b6922",3,"2018-02-08 09:44:26-08:00","deprecate fragments
",62556,636,14201,"Jared Burrows","jaredsburrows@gmail.com","Sam Judd","judds@google.com"
"6991","bumptech/glide","97d130d338349220cc8158141bbae1dfda496efe",1,"2018-02-20 13:45:12-08:00","Support DownsampleStrategy in VideoBitmapDecoder
",62856,638,14231,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6992","bumptech/glide","7d1898e92600a6a2698d72e12ec26c6715fb8fc5",9,"2018-02-13 14:42:37-08:00","Set RequestManagers to started if their parent
Fragments/Activitys are started.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=185590877
",62886,638,14233,"judds","judds@google.com","Sam Judd","judds@google.com"
"6993","bumptech/glide","5212e953ff8fb0db390214eafb5a89b826884142",1,"2018-03-30 17:42:25+02:00","Respect theme when loading Drawables while
AppCompat is present (#2999)
",63032,643,14219,"Julian Ostarek","julianostarek@gmail.com","Sam","sam.a.judd@gmail.com"
"6994","bumptech/glide","58bcf53681e8944add93c8680578fa7fdd617785",135,"2018-03-30 08:46:24-07:00","Give generated code meaningful parameter names
(#2970)  * Give generated code meaningful
parameter names    Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",63123,643,14221,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"6995","bumptech/glide","f508d7cce947a8075806e088e798cfb6593647b0",2,"2018-03-28 13:38:58-07:00","Fall back to decoding resources from other
packages directly.  AppCompat tries to use
internal resources to determine whether or not
it's capable of decoding vector graphics. The ids
of those resources will change across different
versions of the support library. If the versions
of the support library in the two apps don't
match, there might be an id mismatch, which leads
to an error. In some cases we can decode the
resource anyway by bypassing the support library
entirely.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=190825442
",63133,643,14221,"judds","judds@google.com","Sam Judd","judds@google.com"
"6996","bumptech/glide","93289994a4ba59c6251aad0ccdf332c0d758d9c7",3,"2018-04-02 18:07:55-07:00","Support multiple listeners in a Glide request.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=191378721
",63218,643,14231,"adrianv","adrianv@google.com","Sam Judd","judds@google.com"
"6997","bumptech/glide","a3f8114d015be983d365410fa0655de95fb80fef",8,"2018-04-12 16:32:06-07:00","Use ExifInterface to parse orientation data on
OMR1+ in Glide.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=192690571
",63250,644,14243,"judds","judds@google.com","Sam Judd","judds@google.com"
"6998","bumptech/glide","11a83f854ccce157f3e7c8700bc2a369239945aa",2,"2018-04-25 10:27:31-07:00","Update annotation tests to support addListener
method.
",63326,644,14243,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"6999","bumptech/glide","ff463d779ef8bccffc224e3647dbaf6dbc27fd57",3,"2018-04-25 10:17:37-07:00","Avoid calling UriLoader with unsupported schemes
from StringLoader.  Related to #2894.
",63331,644,14245,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7000","bumptech/glide","3a7060777d17fa4d9ca2b68b019fd2d448f54ea6",19,"2018-06-22 13:08:24-07:00","Create a CustomViewTarget to replace ViewTarget.
The two main differences are: - It forces you to
override the method where resources must be
cleared. Not doing so results in recycled bitmaps
being used and crashing apps. Not doing so was a
common pattern among developers optimizing for
lines of code instead of correctness. - No more
setTag(object) use. Glide now targets 14+ which
can safely use the id tag variant and avoid
another class of runtime bugs caused by developers
optimizing for lines of code instead of
correctness by calling setTag() and overwriting
Glide's data.  Finally, we deprecate ViewTarget,
SimpleTarget and BaseTarget. Apps should primarily
be using Target, CustomViewTarget, ImageViewTarget
and FutureTarget which either force the developer
to implement all necessary methods, properly
implement them themselves, or will not attempt to
reclaim bitmaps. The deprecated classes continue
to be used internally by some of the ""correct""
classes but can be merged down once the deprecated
APIs are able to be removed.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=201729878
",64350,647,14440,"azlatin","azlatin@google.com","Sam Judd","judds@google.com"
"7001","bumptech/glide","62e6c11e6e4e4d0cf5f4c380219fe10129bb2694",4,"2018-07-24 13:01:33-07:00","A couple tweaks to ModelLoaderRegistry to improve
potential contention.  1) Synchronize only the
inner method that accesses the cache, as the outer
call that loops and filters the loaders appears to
not have threading issues. 2) Probably less of an
impact since I imagine the loops are generally
small, but only allocate an ArrayList once you
find a matching loader, and allocate it with size
- i which is the max possible remaining in the
loop, rather than always allocating it to size.
------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=205877123
",64352,647,14440,"jneufeld","jneufeld@google.com","Sam Judd","judds@google.com"
"7002","bumptech/glide","37127f0f817d4a11dfdcc447946397b5288de593",4,"2018-08-23 09:22:17-07:00","Add global/activity/fragment scoped
RequestListener API to Glide.  After this change,
callers will be able to add one or more
RequestListeners either to all requests started
with Glide, or to all requests started within a
particular Activity or Fragment.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=209947609
",64438,648,14501,"judds","judds@google.com","Sam Judd","judds@google.com"
"7003","bumptech/glide","cad83d2988c569ef5c22811c59886588814b4c6c",8,"2018-08-24 11:41:59-07:00","Include Transcode class in cache key for cached
resource classes.  We've avoided returning
resource classes that can't possible be transcoded
to our expected transcode class to avoid uselessly
decoding and then throwing out an unusable
resource. Unfortunately when that optimization was
implemented we didn't change the cache key used to
keep track of the set of available resource
classes, so the set of resources for two different
transcode class requests could have the same cache
key but different contents. As a result we
introduced a race where a smaller than accurate
(or even empty) set of resource classes could be
returned if the first call to
getRegisteredResourceClasses used the same Model
and Resource class, but a different and less
available trascode class.  This change includes
the transcode class in the cache key so that we
stop incorrectly sharing cache keys across
different resource class sets.  -------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=210131660
",64532,649,14517,"judds","judds@google.com","Sam Judd","judds@google.com"
"7004","bumptech/glide","092e0624054db5cf00b32dea2da459df90f13b11",1,"2018-08-30 09:12:30-07:00","Fix build inconsistencies from MOE import.  Java
7/8 compilation error in GlideContextTest.
Annotation test updates for default
RequestListeners. PMD error about overridable
method in RequestBuilder constructor.
",64552,649,14512,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7005","bumptech/glide","ed20643fb94d4e17f4cdb3699a6d83621408dd34",111,"2018-09-05 08:53:33-07:00","Directly include RequestOptions in ReqestBuilder
using CRGP  https://www.artima.com/weblogs/viewpos
t.jsp?thread=133275  This means that you can
write:  Glide.with(context)   .load(url)
.placeholder(R.drawable.placeholder)
.into(imageView);  Instead of:  Glide.with(contex)
.apply(placeholderOf(R.drawable.placeholder)
.into(imageView);  Without using the generated
API.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=211640993
",62802,653,12775,"judds","judds@google.com","Sam Judd","judds@google.com"
"7006","bumptech/glide","87881988c19cac066599cff5ee2ec6d2645093d6",76,"2018-09-06 14:50:52-07:00","Fix annotation processor overrides/tests and
remove legacy support.
",57251,628,13068,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7007","bumptech/glide","b3b2d7aa84a5beb8eddea39f2ec0e8ba35ceaa20",7,"2018-09-12 19:08:02-07:00","Add a CustomTarget class  Extending Target
directly requires implementing some not totally
trivial boilerplate logic in set/getRequest and
getSize. This class does not implement
onLoadCleared, and should provide an
implementation safer than BaseTarget and
SimpleTarget, but more convenient than just the
Target interface. See #3304 for an example request
for this class.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=212743879
",57181,629,13120,"judds","judds@google.com","Sam Judd","judds@google.com"
"7008","bumptech/glide","b57ef348d1b18621d7a2e6026f1adf5afa072561",1,"2018-10-05 13:41:15-07:00","Support loading resources from dynamic modules
(#3308)  * Support loading resources from dynamic
modules    * Try creating child context first
before defaulting to parent    * Fix small nit
Signed-off-by: Alex Saveau
<saveau.alexandre@gmail.com>
",57335,629,13123,"Alex Saveau","saveau.alexandre@gmail.com","Sam","sam.a.judd@gmail.com"
"7009","bumptech/glide","8a26a6b8d93cc629d423a316b1838b841e672099",6,"2018-10-26 17:11:03+03:00","Updated BaseRequestOptions.transform api (update
for issue #2875) (#3365)
",57476,629,13164,"aleien","aleien@yandex-team.ru","Sam","sam.a.judd@gmail.com"
"7010","bumptech/glide","d6345fbbf19f9eb8434587f76a5c38e2232149cf",10,"2018-12-15 03:46:00+09:00","Add nullability annotations to LazyHeaders.Builder
functions (#3446)
",57478,629,13164,"Ralph","git@ralph.ms","Sam","sam.a.judd@gmail.com"
"7011","bumptech/glide","1878585429e0579bfd1c2ca8af12a831fb23903d",3,"2018-12-14 20:01:29+01:00","Add BitmapTransformation to rotate the image
(#3444)  * Added BitmapTransformation for rotation
* Improved override methods
",57510,630,13171,"Gonzalo Toledano","Gnzlt@users.noreply.github.com","Sam","sam.a.judd@gmail.com"
"7012","bumptech/glide","114b885f1deed1cd4da493e50c15235da59b5fce",4,"2018-11-01 14:30:39-07:00","Add API to Glide to include request origins when
Glide requests fail.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=219699654
",57547,630,13203,"judds","judds@google.com","Sam Judd","judds@google.com"
"7013","bumptech/glide","8f1ea5c07dff7ade8c49c324bcb5a7f40d0b4891",22,"2018-11-16 09:17:06-08:00","Allow starting requests on background threads
without posting to the main thread.  -------------
Avoid posting to the main thread when clearing in
RequestFutureTarget.  ------------- Created by
MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=221803963
",57819,632,13233,"judds","judds@google.com","Sam Judd","judds@google.com"
"7014","bumptech/glide","eaf720e934d8d71ed34c5bffb32cd4e72ff90495",2,"2018-12-18 20:00:27-08:00","Fix locks and add lock annotations in
RequestManager.  ------------- Created by MOE:
https://github.com/google/moe
MOE_MIGRATED_REVID=226105246
",57825,632,13274,"judds","judds@google.com","Sam Judd","judds@google.com"
"7015","bumptech/glide","c162dba708c010a651c4e7ad13190ba048bd3dcd",3,"2018-12-21 10:44:54-08:00","Handle preloading with empty data in Gallery
sample app.  Fixes #3457
",57834,632,13278,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7016","bumptech/glide","a150301a7f5b157821b7ec5273f86c6d54e2b75d",2,"2019-01-10 12:06:29-05:00","Added listener to notify loop completion of a gif
(#3438)
",57855,632,13291,"Md. Shahriar Anwar","anwarshahriar@gmail.com","Sam","sam.a.judd@gmail.com"
"7017","bumptech/glide","c6ffb0460de4a5b51db5b2f9fd5c0b697cb51486",4,"2019-03-05 08:52:51-08:00","Remove IntRange in RequestOptions.overrideOf.
It‚Äôs not possible to whitelist
Target.SIZE_ORIGINAL, so the range doesn‚Äôt make
sense. A long term answer might be to use
SIZE_ORIGINAL to be Int.MAX_VALUE instead, but in
the short term the annotation is incorrect and not
present in the non-static versions of the method.
Fixes #3443.
",57876,632,13303,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7018","bumptech/glide","fa7cb2f52d388497411204419bdb88006f1b0e17",17,"2019-05-17 11:18:36-07:00","MOE automated commit.
",57959,632,13324,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7019","bumptech/glide","342b5faae9451f7c609cf83269cddc3a5d170e83",5,"2019-05-01 17:44:14-07:00","Avoid using deprecated SimpleTarget.
",57992,632,13326,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7020","bumptech/glide","312c993b3e81735e543d3961d12a12cefa8c304a",11,"2019-05-04 22:48:22-07:00","Remove some usages of deprecated ViewTarget.
",58013,632,13334,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7021","bumptech/glide","ac2598897ee222be192c54b00bc6b805d3ffa0ef",1,"2019-05-22 11:47:08-07:00","Use hasSourceEquivalentTo for compiler tests.
This should be resistant to whitespace
differences, which will help us handle version
differences of javapoet in the Google build vs the
GitHub build.  I also had to update the regenerate
resources rule since the new method throws a very
generic AssertionError that doesn‚Äôt provide a
simple way to extract the expected source easily.
",58001,633,13337,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7022","bumptech/glide","d8278f43a94484f20822170b71ac7b66269a2aa6",1,"2019-05-30 15:13:59-07:00","Migrate Glide to androidx  PiperOrigin-RevId:
250772542
",59752,637,12829,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7023","bumptech/glide","41877c651042f35ce8bf1d3679cb21c86121261e",1,"2019-05-31 16:09:38-07:00","Add orientations to DownsamplerEmulatorTest.
Android‚Äôs ExifInterface only supports writing
orientations to JPEGs, so for now that‚Äôs all I‚Äôm
starting with. We should investigate other open
source image writers and considering using one
that supports other  formats.  Related to #3673,
but not sufficient because there‚Äôs clearly a bug
but  all tests here still pass.
",60031,638,12837,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7024","bumptech/glide","01e8543d6c7115a911a89f091196247e140f7c89",15,"2019-06-12 13:04:16-07:00","Add ImageDecoder based ResourceDecoders to Glide
for Bitmaps.  It's simplest to swap out the
decoder for Bitmaps because we can obey most of
the parameters in Downsampler and there aren't
many API changes.  Swapping out decoders for GIFs
is more complicated becuase we'll have to change
APIs.  PiperOrigin-RevId: 252883331
",60286,642,12905,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7025","bumptech/glide","7f43b32aee65cb3c524f5633c85facf12f8ca37d",9,"2019-06-13 15:14:15-07:00","Create annotation glide module classes lazily but
outside a lock.  This means we might instantiate
GlideModule classes multiple times if multiple
threads race and call Glide.with(). Only one
instance will actually be used even if this
happens.  Instantiating modules outside of a lock
allows to both: 1. Provide an opportunity for
dependency injection into GlideModule constructors
without introducing deadlock. 2. Lazily create
modules.  We could instantiate the modules exactly
once if we initialize them eagerly, but that would
slow down application startup. We can instantiate
modules exactly once, but can introduce deadlock
if dependency injection is used (Glide.get()
acquires the Glide lock, then the DI lock.
DI.get() acquires the DI lock, then the Glide
lock).  The primary cost of instantiating (and
injecting) glide modules is probably in the
reflection and class loading. Most of that is
already memoized, so it's not super expensive to
do it more than once. Most applications won't race
anyway, so most of the time the cost is
effectively non-existent (we hope).  A future
change will allow passing in a Context to the
constructor of modules to allow injection in the
constructors only.  PiperOrigin-RevId: 253114941
",60282,642,12903,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7026","bumptech/glide","568441b1ced721721ea647cfbb8096ececb71dec",1,"2019-06-14 15:00:26-07:00","Allow AppGlideModules to optionally accept a
Context in their constructor.  The Context can
then be used to safely inject parameters and/or
classes outside of Glide's initialization lock.
The initialization will happen exactly once per
AppGlideModule instance, but the lack of a lock
means that more than one AppGlideModule instance
may be created.  We can't both not use a lock and
guarantee that initialization will occur exactly
once. Rare race conditions causing double
initialization are probably worth the cost,
especially because most DI frameworks will memoize
and minimize the cost of the second injection if
it does occur.  PiperOrigin-RevId: 253302453
",60322,642,12903,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7027","bumptech/glide","b96b00096607cee23763e4dd049a297d85b89911",2,"2019-06-26 13:17:03-07:00","Avoid holding the Engine lock while calling
callbacks for in memory resources.  Doing so can
make it easy for callers to deadlock.
PiperOrigin-RevId: 255250190
",60371,642,12909,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7028","bumptech/glide","71359c7e385dc7d287f0da5d9e6d533ca41c76e4",7,"2019-07-19 16:23:12-07:00","Support Fragments which are not hosted by
Activities.  A Fragment host can be of any type;
if it is not an Activity, then calling
#getActivity will always return null. Use
#getContext instead, which works similarly but is
non-null while the Fragment is attached.
PiperOrigin-RevId: 259059132
",60460,642,12927,"Daniel Tomasiewicz","tomasiewicz@google.com","Glide","glide-copybara-robot@google.com"
"7029","bumptech/glide","b2a46ef7a385abd5df38ee11b8be85868768739e",6,"2019-08-05 10:28:57-07:00","Use single lock for all error/thumbnail requests
in a single request chain.  The single lock avoids
deadlock that could previously have been caused by
acquiring the lock for one individual request and
then the lock for another individual request and
vice versa.  I've also cleaned up some unecessary
methods in Request and decreased the reliance on
Request states in the various coordinators.
PiperOrigin-RevId: 261714443
",60725,643,12982,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7030","bumptech/glide","bee634818cff229570d0fd392130cd76ea2c3639",11,"2019-08-13 15:34:59-07:00","Avoid pooling/reusing SingleRequest objects.  ~90%
of devices are now running on Art and won't get
any benefit from this object pooling. It's very
difficult to definitively determine when it's safe
to recycle an object when it's used by multiple
threads. The code simplification is worth the
minor performance regression on dalvik devices.
PiperOrigin-RevId: 263229952
",60706,643,12999,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7031","bumptech/glide","1b391c42f22e967c070a6a105b1e37730ab6ea6e",3,"2019-08-14 15:21:24-07:00","Include day/night mode in resource id cache keys.
",60810,645,12999,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7032","bumptech/glide","01addba115f745cfac3cde7ef8356ebe9c8a7372",1,"2019-08-16 10:05:38-07:00","Remove Request#recycle()  It's now unused.
PiperOrigin-RevId: 263792894
",60749,645,12997,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7033","bumptech/glide","f36a9fa9182227d7cebb3b5eaa6cc26e7d26aea5",9,"2019-08-20 16:39:57-07:00","Add granular rounding for corners.  PiperOrigin-
RevId: 264495417
",60839,646,13016,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7034","bumptech/glide","9fb1036645ec4e7cb159e7ca215f85375d8e4f67",1,"2019-08-30 16:47:20-07:00","Add integration library for use with Guava's
ListenableFuture class.  PiperOrigin-RevId:
266481039
",60886,647,13031,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7035","bumptech/glide","cdf436ee63ccf6e0a3cb6681c7b1f78485adda84",1,"2019-09-19 13:15:15-07:00","Use an internal Builder to construct most
GlideExecutors.  A builder better supports
additional options. Future cls will expose the
builder and deprecate the existing factory
methods.  PiperOrigin-RevId: 270109328
",60915,647,13031,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7036","bumptech/glide","e8720ff7fae73941d8ce04fa710d39f4cf92c1e5",1,"2019-09-19 14:59:52-07:00","Expose GlideBuilder as a public API and deprecate
various factory methods.  PiperOrigin-RevId:
270132488
",60919,647,12999,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7037","bumptech/glide","83ba102882f897c1c01239b7fa87805f8b6feabf",2,"2019-10-01 09:32:15-07:00","Distinguish between missing and non-handling
ModelLoaders in exceptions.  Fixes b/141615023.
",61025,648,13013,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7038","bumptech/glide","1c51b24b5af61a73267e36e486abe7e5157002e7",13,"2019-10-23 10:28:38-07:00","Add Q ModelLoader to load unredacted data when
possible to avoid HEIC failures.  EXIF redaction
in MediaStore on Q breaks HEIC/HEIF decoding. This
class does it's best to obtain unredacted file
data on Q depending on the state the hosting
application is in with regards to storage.  It's
not a complete fix. In particular applications
that target Q, do not opt in to legacy storage and
do not have the ACCESS_MEDIA_LOCATION permission
will still be unable to decode HEIC/HEIF after
this change.  PiperOrigin-RevId: 276302007
",61246,649,13053,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7039","bumptech/glide","95fe2eee96bce0432d7c0991fdda9601d2505c61",12,"2019-10-24 15:46:48-07:00","Try using ParcelFileDescriptor for local files.
This helps with handling of large files, and also
needs less RAM than mark()ing InputStreams.
PiperOrigin-RevId: 276582585
",61426,652,13072,"Timur Iskhodzhanov","timurrrr@google.com","Glide","glide-copybara-robot@google.com"
"7040","bumptech/glide","7e750caec1d64ccd408a4423f97b4be09d0b39e0",1,"2019-10-31 11:31:29-07:00","Ignore callbacks from cancelled or otherwise
invalid requests in SourceGenerator.  PiperOrigin-
RevId: 277765705
",61266,649,13056,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7041","bumptech/glide","1ed76ee49eae26999e808ce6fc18b2c43a192751",16,"2019-11-07 10:36:12-08:00","Roll forward ""Try using ParcelFileDescriptor for
local files"" with fixes  PiperOrigin-RevId:
279117663
",61574,652,13148,"Timur Iskhodzhanov","timurrrr@google.com","Glide","glide-copybara-robot@google.com"
"7042","bumptech/glide","ba995829f495379df82653bc07542006c15f4cb9",12,"2020-01-10 14:19:33-08:00","Internal change  PiperOrigin-RevId: 289164359
",62354,661,13265,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7043","bumptech/glide","114251e6ce43fb67ca1528a0f24dc3c7e73eb0bf",4,"2020-01-13 10:17:08-08:00","Open source a Cronet integration for Glide.
PiperOrigin-RevId: 289467603
",62461,664,13287,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7044","bumptech/glide","5090b6d004fabbc0ae50e0295fd50e2f13cb6357",1,"2020-03-25 17:47:01-07:00","Use a fixed size for items in LruCache.
PiperOrigin-RevId: 303010044
",62631,664,13303,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7045","bumptech/glide","8f354dc527b46a69a47713e6e625cee2750eb6a0",1,"2020-05-12 12:06:27-07:00","Check if Activitys are FragmentActivities in
RequestManagerRetriever  This fixes an issue where
we can end up adding both a support and a non-
support Fragment to a FragmentActivity if the
FragmentActivity is passed to Glide as an Activity
or Context instead of a FragmentContext at some
point.
",62786,668,13333,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7046","bumptech/glide","a77ed9003d578bf2520b188cff2f701097813f31",3,"2020-05-26 17:42:57-07:00","Add an experimental option to Glide to avoid
hardware Bitmaps until after the first frame.
This option is not fully implemented in the
external version because it's not intended to be
long lived.  PiperOrigin-RevId: 313301014
",62824,669,13337,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7047","bumptech/glide","1d6781f7675c088ef9cb105f9f1acacc739cd871",1,"2020-05-12 13:37:47-07:00","Add test for Glide.with before Activity's
super.onCreate call
",62890,670,13343,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7048","bumptech/glide","14a0e1acd07d76bc161de6d211f9cd7484918f61",7,"2020-06-01 15:35:44-07:00","Only start RequestManagers, not lifecycles when
creating with visible parents
",62829,669,13344,"Sam Judd","judds@google.com","Sam Judd","judds@google.com"
"7049","bumptech/glide","67b01f62c0e98bb4f517708128be3107b22367cb",4,"2020-07-07 14:19:13-07:00","Add thumbnail method that takes in a list
PiperOrigin-RevId: 320059478
",63032,671,13397,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7050","bumptech/glide","eb30d52215582c58a6ee1cf076587e8ec9621598",10,"2020-07-21 14:29:50-07:00","Internal change  PiperOrigin-RevId: 322443056
",63035,671,13397,"Sam Judd","judds@google.com","Glide","glide-copybara-robot@google.com"
"7051","ReactiveX/RxJava","7ff1eef516e9316167db6e0af5e3e9fe036d1611",2,"2017-01-28 01:21:02+08:00","Annotate function interfaces. (#5023)
",185445,1418,59809,"Tony Cosentini","tony@endlesswhileloop.com","David Karnok","akarnokd@gmail.com"
"7052","ReactiveX/RxJava","87208280d40ee23ab5499b08c5664dc1826d5c3a",175,"2017-02-03 11:29:34+01:00","Feature/#4876 nonnull annotations (#5051)  * add
@Nullable annotations to RxJavaPlugins    * add
@NonNull annotations to schedulers    * javadoc
for NonNull/Nullable annotations
",185888,1421,59952,"Johannes Schneider","js@cedarsoft.com","David Karnok","akarnokd@gmail.com"
"7053","ReactiveX/RxJava","e5d3b0e1de992719c88766558c4b5ad21a8725ba",58,"2017-02-03 12:18:17+01:00","add nullable annotation to simple queue (fixes
#5053) (#5054)
",186014,1421,59955,"Johannes Schneider","js@cedarsoft.com","David Karnok","akarnokd@gmail.com"
"7054","ReactiveX/RxJava","71cda3ebd1dcaf8301c267c9be73ca835aa3f8d5",3,"2017-02-03 17:39:42+01:00","2.x: document (internal) SimpleQueue (#5056)
",186014,1421,59988,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7055","ReactiveX/RxJava","b5c0fb8ad821f7faaeb9d3b140b03eddf0cf9a6c",20,"2017-02-03 17:41:33+01:00","2.x: Feature/#4876 more null checks (#5055)  * add
NotNull annotations  add assertion to help static
code analysis    * avoid false positive    * add
annotations and assert statement to help static
code analysis    * remove redundant check    *
mark parameter as nullable    * add test to
reproduce npe    * add null check for avoid npe
* parameter time unit marked as @NonNull    * add
annotations and assert to help static code
analysis    * remove assert statements    * add
missing annotation    * add comment for test case
",186038,1421,59992,"Johannes Schneider","js@cedarsoft.com","David Karnok","akarnokd@gmail.com"
"7056","ReactiveX/RxJava","471d590882d4477a0066866bbea6103d4db0e2b8",3,"2017-02-03 17:42:21+01:00","use bounded wildcards for errorHandler (fixes
#5045) (#5049)  * use bounded wildcards for
errorHandler (fixes #5045)    * add test to ensure
signature
",186050,1421,59995,"Johannes Schneider","js@cedarsoft.com","David Karnok","akarnokd@gmail.com"
"7057","ReactiveX/RxJava","217c8c2f9d41c7711b4b8d8174abf8a816b503fa",53,"2017-02-06 20:26:51+01:00","Feature/#5045 more generics in RxJavaPlugins
(#5058)  * widen bounds    * widen bounds    * add
test to ensure generics    * use wildcard import
for io.reactivex
",186185,1421,59994,"Johannes Schneider","js@cedarsoft.com","David Karnok","akarnokd@gmail.com"
"7058","ReactiveX/RxJava","a00ea07a4d2ce409e8dbea66ddbca9c0a77ddab6",5,"2017-02-18 10:02:47+01:00","2.x: Flowable as a Publisher to be fully RS
compliant (#5112)
",187728,1430,60235,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7059","ReactiveX/RxJava","b41ac3b61c6fa5191f8ad19e03f6e5457dbcc28f",2,"2017-03-06 01:59:20+09:00","Add @NonNull to the methods of Emitter (#5156)
",188522,1439,60419,"Hiroshi Kurokawa","hirosh.kurokawa@gmail.com","David Karnok","akarnokd@gmail.com"
"7060","ReactiveX/RxJava","b5501c5630c05b9add97b7b3b0f352adfd8d28fa",4,"2017-03-09 19:48:37+11:00","add Observable.switchMapSingle (#5161)
",189009,1441,60575,"Dave Moten","davidmoten@gmail.com","David Karnok","akarnokd@gmail.com"
"7061","ReactiveX/RxJava","57b82767d5e71e7fb09d1e8871bfe067e2d0e906",5,"2017-03-12 11:32:28+00:00","removes all anonymous inner classes (#5177)
",189544,1441,60575,"Sleiman Jneidi","jneidi.sleiman@gmail.com","David Karnok","akarnokd@gmail.com"
"7062","ReactiveX/RxJava","7df3e3ccc4ca6b2378f6e19039ed887034dc9496",44,"2017-03-19 16:17:51+01:00","2.x: Add a few more @Nullable & @NonNull
annotations to public interfaces. (#5196)
",191191,1450,60818,"Niklas Baudy","niklas.baudy@vanniktech.de","David Karnok","akarnokd@gmail.com"
"7063","ReactiveX/RxJava","354a16d08bd55049c37f5928cb846a8127239738",19,"2017-03-20 09:56:03+01:00","2.x: add ParallelTransformer interface, params-
validation (#5197)  * 2.x: add ParallelTransformer
interface, params-validation    * Add explicit
requireNonNull calls.
",191207,1451,60844,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7064","ReactiveX/RxJava","1b60b12439840e6d0a4d464379dd3a48881f58b4",12,"2017-03-23 18:27:58+01:00","2.x: add resilient versions of parallel map(),
filter() & doOnNext() (#5202)
",193348,1464,61689,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7065","ReactiveX/RxJava","fa58d36375ecc084b21bca299ca4780946b15dc5",93,"2017-04-01 21:11:23+02:00","More nullability annotations (#5251)  * More
nullability annotations    * Refactored imports
* Changes based on akarnokd's review    * A few
more annotations    * Changes based on akarnokd's
2nd review
",193611,1464,61897,"Michael","mibac138@users.noreply.github.com","David Karnok","akarnokd@gmail.com"
"7066","ReactiveX/RxJava","8bf04e968584ed49139af9f81854ae28b225e0b0",5,"2017-05-16 19:24:18+01:00","2.x: add tryOnError to create/XEmitter API (#5344)
* 2.x: add tryOnError to create/XEmitter API    *
Fix indentation.
",194478,1469,62127,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7067","ReactiveX/RxJava","8a62afb5a78b8faa381cd18a3e707d39b7c55419",2,"2017-06-04 15:36:56+02:00","2.x: add subscribeOn overload to avoid same-pool
deadlock with create (#5386)
",194847,1471,62189,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7068","ReactiveX/RxJava","6a44e5d0543a48f1c378dc833a155f3f71333bc2",8,"2017-11-19 02:39:00-08:00","2.x: Implement as() (#5729)  * Implement
Observable.as()    * Implement Single.as()    *
Implement Maybe.as()    * Implement Flowable.as()
* Implement Completable.as()    * Add Experimental
annotations    * Add throws doc    * Fix docs and
validation errors    * Add @since 2.1.7 -
experimental    * ParallelFlowable.as()    * Start
ConverterTest    * Fix tests and update validator
* Remove exceptions from signatures    * Remove
exception signature from implementations    *
Assert the full execution of extend() tests    *
Use test() helpers
",198016,1495,62862,"Zac Sweers","pandanomic@gmail.com","David Karnok","akarnokd@gmail.com"
"7069","ReactiveX/RxJava","d2fe631f3f05dd12eac2b8e53d6525e9acb474a3",2,"2017-11-27 23:12:43+01:00","2.x: API to get distinct Workers from some
Schedulers (#5741)
",198360,1497,62934,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7070","ReactiveX/RxJava","4d2e8212ac97f0c6c380802cec92764e8d8bbde1",1,"2017-12-04 13:12:12+01:00","2.x: RxJavaPlugins unwrapRunnable (#5734)  * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable-javadoc    * 2.x:
RxJavaPlugins unwrapRunnable-Enhancement and test
coverage    * 2.x: RxJavaPlugins unwrapRunnable-
Enhancement and test coverage    * 2.x:
RxJavaPlugins unwrapRunnable-Enhancement and test
coverage    * 2.x: RxJavaPlugins unwrapRunnable-
Enhancement and test coverage    * 2.x:
RxJavaPlugins unwrapRunnable-Enhancement and test
coverage    * 2.x: RxJavaPlugins unwrapRunnable
* 2.x: RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable    * 2.x:
RxJavaPlugins unwrapRunnable
",198507,1498,62976,"lukaszguz","lukasz.guz2@gmail.com","David Karnok","akarnokd@gmail.com"
"7071","ReactiveX/RxJava","7ba9a3e04aeee3ab691002997e82e55fec40e495",1,"2017-12-15 11:13:49+01:00","2.x: Subject NPE fixes, add UnicastProcessor TCK
(#5760)  * 2.x: add Subject/Processor refCount(),
Subject NPE fixes    * Fix wording    * Move
RefCountProcessor into tests    * Improve style
",198811,1503,63167,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7072","ReactiveX/RxJava","30960243f4bb8572cbfa1eeadfbd3f0ea063f1c2",5,"2017-12-19 09:36:31-08:00","Rename interface parameters (#5766)  Signed-off-
by: shaishavgandhi05 <shaishgandhi@gmail.com>
",198811,1503,63167,"Shaishav Gandhi","shaishgandhi@gmail.com","David Karnok","akarnokd@gmail.com"
"7073","ReactiveX/RxJava","68f94f09a5f5aa14e4371b0525cdb5ebced9a6ee",1,"2018-02-03 17:17:31+03:00","Added nullability annotation for completable
assembly (#5838)
",199770,1504,64803,"Ilnar Karimov","afeozzz@gmail.com","David Karnok","akarnokd@gmail.com"
"7074","ReactiveX/RxJava","12c0e3011726b15fc34ebc4dd1a4c67589210898",6,"2018-02-16 12:37:37+01:00","2.x: Add efficient
concatWith(Single|Maybe|Completable) overloads
(#5845)  * 2.x: Add efficient
concatWith(Single|Maybe|Completable) overloads
* Correct the concatWith(Completable) TCK file
name    * Increase coverage    * Change local
variable names.
",200657,1520,65604,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7075","ReactiveX/RxJava","7ede8ee2a26f4d842b90e1e331c5812d64911eaa",6,"2018-02-19 21:18:41+01:00","2.x: Add efficient
mergeWith(Single|Maybe|Completable) overloads.
(#5847)  * 2.x: Add efficient
mergeWith(Single|Maybe|Completable) overloads.
* Compact tests, use named constants
",202590,1536,65953,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7076","ReactiveX/RxJava","137dfe1404bfbad98bb024b52f69546a0eb59567",2,"2018-03-01 17:46:05+01:00","2.x: Add Flowable.switchMapCompletable{DelayError}
operator (#5870)
",203658,1540,67016,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7077","ReactiveX/RxJava","d3ed2690d5d7840b2ed190032f9324aec9a7d8a9",4,"2018-03-02 09:56:40+01:00","2.x: Add
Flowable.switchMap{Maybe,Single}{DelayError}
operators (#5873)
",205744,1548,67529,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7078","ReactiveX/RxJava","f6f6d82782b145ac4155707400db1b2f38cc221f",4,"2018-03-03 14:36:04+01:00","2.x: Add Observable switchMapX and concatMapX
operators (#5875)  * 2.x: Add Observable
switchMapX and concatMapX operators    * Rename
local variables to match their datatype better.
",208346,1561,68157,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7079","ReactiveX/RxJava","51dd03b470d52509eb1835a55801c34e6efbb1d7",15,"2018-03-05 15:18:50+05:18","Added nullable annotations to subjects (#5890)
",211180,1564,68088,"Harshit Bangar","harshit.bangar@gmail.com","David Karnok","akarnokd@gmail.com"
"7080","ReactiveX/RxJava","f363ef0e0e39720672f2b9ca129aa26eea8d5e70",8,"2018-03-22 01:32:32-07:00","Add @Nullable annotations to Processors (#5925)
",216119,1603,68810,"Aaron He","hwaaron@live.com","David Karnok","akarnokd@gmail.com"
"7081","ReactiveX/RxJava","5c58f826364ded0895d96413273d5456bc04f3c6",21,"2018-03-23 21:55:58+01:00","Add @NonNull annotations to create methods of
Subjects and Processors (#5930)
",216218,1603,68810,"Vedran Prišćan","vedran.priscan.hr@gmail.com","David Karnok","akarnokd@gmail.com"
"7082","ReactiveX/RxJava","59cf89c2e4d101765d7abf69d3b3d9a7bf7e6ce4",6,"2018-04-30 12:28:40+02:00","2.x: Cleanup in the Scheduler class (#5985)
",216865,1603,68916,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7083","ReactiveX/RxJava","f87879d6da0bca65e2b58e4a9696586362a2b100",4,"2018-05-17 23:17:54+02:00","2.x: Add MulticastProcessor (#6002)  * 2.x: Add
MulticastProcessor    * Improve coverage, fix NPE
before upstream arrives    * Address review
feedback.
",218580,1609,69626,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7084","ReactiveX/RxJava","45cc53db6d9211a8fc2f62b8167ed54d4f7fda83",5,"2018-08-01 10:23:11+02:00","2.x: Test cleanup (#6119)  * 2.x: Test error
printout, local naming, mocking cleanup    * Fix
additional local variable names    * Fix Observers
with wrong variable names    * Fix nit    * More
time to MulticastProcessorRefCountedTckTest
",221525,1633,70928,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7085","ReactiveX/RxJava","579e90dc21937b900877a8baf3918cdca22d3a91",15,"2018-08-05 21:14:21+02:00","2.x: Cleaunp - rename fields to upstream and
downstream (#6129)  * 2.x: Cleaunp - rename fields
to upstream and downstream    * Make links in
MaybeEmitter.setDisposable
",221656,1634,70963,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7086","ReactiveX/RxJava","3481ed1eee9bbdda77435d2c5f698c714ea2fea3",25,"2018-12-19 15:41:43+05:18","Adding NonNull annotation (#6313)
",224279,1647,71812,"Abhimithra Karthikeya","karthikeya.surabhi@gmail.com","David Karnok","akarnokd@gmail.com"
"7087","ReactiveX/RxJava","a85ddd154087f634c2834851acff87a02d39a061",2,"2019-01-17 14:41:02+01:00","2.x: Add interruptible mode to Schedulers.from
(#6370)
",225120,1650,71983,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7088","ReactiveX/RxJava","b95e3dc2629d9eb1cda099d2fd061f9202f8fb5f",6,"2019-06-13 13:50:30+02:00","3.x: Merge in changes from 2.x since the initial
branching (#6498)
",225974,1654,72145,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7089","ReactiveX/RxJava","cb037246324b4795b68c6398893d1db2d1e7f511",30,"2019-06-19 09:19:33+02:00","3.x: Widen functional interface throws, replace
Callable with Supplier (#6511)  * 3.x: Widen
functional interface throws, replace Callable with
Supplier    * Fix typo and wrong link in Supplier,
some style cleanup    * Some cleanup
",225961,1655,72267,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7090","ReactiveX/RxJava","a672013edd5cc4600ee1bd44511a371e7537544a",7,"2019-06-19 10:50:04+02:00","3.x: Merge as() into to() (#6514)  * 3.x: Merge
as() into to()    * Fix as() mentioned in the
javadocs
",225872,1655,72192,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7091","ReactiveX/RxJava","b71a1d9fed6c9899acd35136c9b8f2362189e68d",5,"2019-06-24 09:30:32+02:00","3.x: Add eager truncation to bounded replay() to
avoid item retention (#6532)  * 3.x: Add eager
truncation to bounded replay() to avoid item
retention    * Those eager tests are in their
separate files already
",231441,1671,72585,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7092","ReactiveX/RxJava","292dc62c97bd0a0569cd6d2278adaad134e72d12",3,"2019-12-03 17:48:14+01:00","3.x: Add fair mode overload to
Schedulers.from(Executor) (#6744)
",230169,1667,70376,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7093","ReactiveX/RxJava","735add2c25cb08f175ab3fc5af0270587fada083",13,"2019-12-17 17:28:01+01:00","3.x: [Java 8] Upgrade to Java 8, add
Flowable.fromX operators (#6765)  * 3.x: [Java 8]
Upgrade to Java 8, add Flowable.fromX operators
* Add NonNull annotation to the new fromX methods
* Annotate return type argument to
Flowable<@NonNull T>
",231629,1678,70858,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7094","ReactiveX/RxJava","8d41cc5801eecac4acc38eee7adcee642de24385",20,"2019-12-19 09:58:58+01:00","3.x: [Java 8] Implement mapOptional, collector,
first/last/single stage (#6775)  * 3.x: [Java 8]
Implement mapOptional, collector,
first/last/single stage    * Upgrade the
Checkstyle plugin
",233351,1691,71262,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7095","ReactiveX/RxJava","3d25617651a764b2df7d3817932153fd651bcad3",1,"2019-12-19 18:18:05+01:00","3.x: [Java 8] Add AutoCloseable <-> Disposable
conversions, nicen docs (#6780)
",233424,1692,71295,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7096","ReactiveX/RxJava","a249f4f1241f1c0ebe8e03dc80bdd16e29962c53",3,"2019-12-19 18:37:58+01:00","3.x: [Java 8] Add blockingStream & flatMapStream
to Flowable (#6779)
",234151,1701,71670,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7097","ReactiveX/RxJava","166c529eb165b473c9bff11e8fedbde6c471b005",14,"2019-12-19 13:39:40-05:00","Migrate Disposables static factories to Disposable
interface (#6781)
",234144,1700,71659,"Jake Wharton","jakew@google.com","David Karnok","akarnokd@gmail.com"
"7098","ReactiveX/RxJava","747f59eaaa66af6ce8eb06d779cd72909ec9ed05",20,"2019-12-21 11:08:18+01:00","3.x: [Java 8] Add fromOpt/Stage, mapOptional,
toCompletionStage to M/S/C (#6783)
",234986,1715,72113,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7099","ReactiveX/RxJava","dba670554c69d6c09d28643505880c1a468af3db",74,"2019-12-21 11:08:34+01:00","3.x: Cleanup and prettify Javadocs, widen
XOperator throws (#6785)  * 3.x: Cleanup and
prettify Javadocs, widen XOperator throws    * Fix
encoding of ¬ß in javadoc    * Fix a wrong tag name
",235024,1715,72134,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7100","ReactiveX/RxJava","b57169babb184d0adc2fa28cf0425c4f0c1f8555",1249,"2019-12-24 10:18:06+01:00","3.x: Add NonNull & SafeVarargs annotations +
validator (#6791)
",235068,1716,72155,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7101","ReactiveX/RxJava","480889c58d3b762b073ef80229bf27f9d9429dd7",1058,"2019-12-25 23:52:13+01:00","3.x: Add missing annotations, fix many diamonds
(#6795)  * 3.x: Add missing annotations, fix many
diamonds    * Fix accidental JDK 9 API usage    *
Fix NPE in unicast due to null-cleanup
",236022,1717,72538,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7102","ReactiveX/RxJava","af17c6e268d0e2fe4675feb46c19a29227cb135b",34,"2019-12-26 13:33:30+01:00","3.x: [Java 8] Add Observable operators + cleanup
(#6797)
",238655,1736,73227,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7103","ReactiveX/RxJava","3d00eb188bad1d49aa058e896ad9d1b5026eba7d",2,"2019-12-26 22:37:39+01:00","3.x: [Java 8] Add ParallelFlowable operators +
cleanup (#6798)
",240048,1746,73631,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7104","ReactiveX/RxJava","38bcd5e292c9e44c542ff4bbcf8e23736b4a7748",12,"2019-12-26 23:43:56+01:00","3.x: XProcessor.offer to throw NPE immediately
(#6799)
",240050,1746,73638,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7105","ReactiveX/RxJava","d1cbf57c4357569094e3b2727f9c57a9d56f2e22",3,"2019-12-27 00:33:42+01:00","3.x: Add blockingForEach(Consumer, int) overload
(#6800)
",240058,1746,73708,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7106","ReactiveX/RxJava","79f8e6dde6446b1aa33c146eaedbb958086daf56",10,"2019-12-27 20:01:34+01:00","3.x: Fix diamonds, spelling, unnecessary code
(#6804)
",240054,1747,73727,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7107","ReactiveX/RxJava","34f381ceec3fa0b5fc0a03c76161dc1cde2f09bc",8,"2019-12-28 18:05:30+01:00","3.x: [Java 8] Add flattenStreamAsX to Maybe/Single
(#6805)  * 3.x: [Java 8] Add flattenStreamAsX to
Maybe/Single    * Add RS TCK tests for
flattenStreamAsFlowable
",241605,1757,74011,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7108","ReactiveX/RxJava","ecfb6b741d411de9d060b1c4b1fcd90ff7530854",2,"2020-01-01 14:33:28+01:00","3.x: Improve Javadocs of Completable and some
others (#6809)
",241898,1758,74088,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7109","ReactiveX/RxJava","4c8d49bba90faa83bb799319c785446aa75a8705",9,"2020-01-06 22:38:06+01:00","3.x: Improve Javadocs of Single (#6812)
",241921,1758,74192,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7110","ReactiveX/RxJava","84677c56097c5cc3d1880165e092925d794e3e42",4,"2020-01-08 09:02:36+01:00","3.x: Improve JavaDocs of Maybe (#6815)  * 3.x:
Improve JavaDocs of Maybe    * Fix a mistake in
Single
",241807,1758,74101,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7111","ReactiveX/RxJava","1e4dbcf78a814993e80fa489a50d3369d7c4ecbd",58,"2020-01-10 08:36:29+01:00","3.x: Improve JavaDocs of Observable and fix
similar issues elsewhere (#6831)  * 3.x: Javadoc
cleanup of Observable    * Another set of cleanups
(too many things to fix at once)    * 3.x: Improve
JavaDocs of Observable and fix similar issues
elsewhere
",241923,1758,74617,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7112","ReactiveX/RxJava","c67263fffe26a0c4970fd34789766fb18a7411a8",21,"2020-01-11 12:24:55+01:00","3.x: Cleanup javadoc for parameter validation all
around (#6835)  * 3.x: Cleanup javadoc for
parameter validation all around    * More cleanup
* Last set of intended changes
",242095,1758,75351,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7113","ReactiveX/RxJava","4dd4a65fa0144c148f19f5632ae6915b3c7be315",6,"2020-01-13 13:17:35+01:00","3.x: Rename to combineLatestArrayDelayError
(#6838)
",242087,1758,75327,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7114","ReactiveX/RxJava","fb6dab6847d858b22fe6a36558cf3b62dc10627d",665,"2020-01-14 08:49:53+01:00","3.x: Add nullability annotations to type arguments
(#6840)
",242130,1759,75340,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7115","ReactiveX/RxJava","0c84f4017f576bd250e4408d8410f6647507027c",237,"2020-01-21 14:26:15+01:00","3.x: Fix method argument naming across types
(#6853)  * 3.x: Fix method argument naming across
types    * Remove outdated null-test of
blockingMostRecent
",239865,1761,74767,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7116","ReactiveX/RxJava","13ffa189bb16149eec7a2fe23c03c5b35037f737",3,"2020-01-21 13:21:08-08:00","Rename Single.equals to Single.sequenceEqual
(#6856)  * Rename Single.equals to
Single.sequenceEqual    * Rename
Single.sequenceEqual arguments    * Update
mentions of renamed parameters
",239865,1761,74767,"slisaasquatch","slisaasquatch@users.noreply.github.com","David Karnok","akarnokd@gmail.com"
"7117","ReactiveX/RxJava","b6aceec436ee1dcc9ff904bb14be6698f65130e7",7,"2020-01-22 14:03:30+01:00","3.x: Verify the use of base interfaces in operator
inputs & lambdas (#6858)  * 3.x: Verify the use of
base interfaces in operator inputs & lambdas    *
Add @NonNull annotations too.
",239973,1762,74789,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7118","ReactiveX/RxJava","5dbc2a84f970bf0bb8670bec13ab2aa836ebad66",2,"2020-01-22 17:37:14+01:00","3.x: Add last missing throws tag to JavaDocs
(#6860)
",240064,1763,74809,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7119","ReactiveX/RxJava","bb3260ec3729d9d9c0934a958f3added8ca65408",5,"2020-01-24 01:41:40-06:00","add delayError to Maybe.delay (#6864)
",240100,1763,74848,"Paul Estrada","2215585+pestrada@users.noreply.github.com","David Karnok","akarnokd@gmail.com"
"7120","ReactiveX/RxJava","33a1dcfab98463d41d5b1502e66fa82b6d9ae3c6",18,"2020-01-24 17:35:55+01:00","3.x: Add Maybe/Single/Completable
blockingSubscribe (#6862)  * 3.x: Add
Maybe/Single/Completable blockingSubscribe    *
Update marble dimensions
",241029,1767,75148,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7121","ReactiveX/RxJava","ad1840b1b591206e5eeb10c07b1b126fbbac3560",9,"2020-01-24 22:44:22+01:00","3.x: Add onErrorComplete to Flowable, Observable
and Single (#6867)  * 3.x: Add onErrorComplete to
F/O/S    * Add version tags.
",241420,1773,75358,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7122","ReactiveX/RxJava","b157b8684d812fa58e14250f1570925539df096c",2,"2020-01-25 00:06:05+01:00","3.x: Add Completable.onErrorResumeWith (#6868)
",241443,1773,75378,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7123","ReactiveX/RxJava","0ed3572c8961dfdfa7dc73dd0419b5f789d1d1ad",4,"2020-01-25 10:56:11+01:00","3.x: Add S/C retryUntil + marbles (#6869)
",241567,1773,75405,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7124","ReactiveX/RxJava","2fafcb03dd3e420b184608b13a40a5a3482f3cd7",12,"2020-01-25 13:36:49+01:00","3.x: Add Maybe/Single/Completable switchOnNext &
switchOnNextDelayError (#6870)  * 3.x: Add M/S/C
switchOnNext[DelayError]    * Fix wording of the
Completable variant
",241859,1779,75650,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7125","ReactiveX/RxJava","ea8ab3bbd5617af2e0f5342c72a42a0eeae941ee",2,"2020-01-25 16:58:59+01:00","3.x: Add Maybe.dematerialize (#6871)
",241997,1781,75715,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7126","ReactiveX/RxJava","26dacd72f1929c78d84da41ec80dc1ae3996c9f9",35,"2020-01-25 22:07:48+01:00","3.x: Add many fromX operators + marbles (#6873)
",243407,1803,76327,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7127","ReactiveX/RxJava","d5449b2fd63c73dea06fbbd5d584bab7b9cfde5d",40,"2020-01-26 10:25:53+01:00","3.x: Add timeInterval & timestamp to M/S (#6874)
* 3.x: Add timeInterval & timestamp to M/S    *
Fix null not allowed in Timed    * Fix Timed
coverage
",243862,1809,76743,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7128","ReactiveX/RxJava","8c85f5a52115b419beeb84b0e2dc9bb4aa6bcd0f",3,"2020-01-26 12:36:52+01:00","3.x: Add Maybe/Completable toFuture (#6875)  *
3.x: Add Maybe/Completable toFuture    * Fix copy-
paste mistakes
",243963,1811,76801,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7129","ReactiveX/RxJava","db0bd715bb512976fb0cac20a89af8176b1e1b22",2,"2020-01-26 15:44:47+01:00","3.x: Add Single.ofType (#6876)
",244033,1812,76840,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7130","ReactiveX/RxJava","4257ef563a3bf017e0703c00057daf12b54738ba",15,"2020-01-26 17:50:26+01:00","3.x: Add doOnLifecycle to M/S/C (#6877)
",244480,1817,76974,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7131","ReactiveX/RxJava","57bd1a9272464a1b4b201faa2bab7a929a0ae7f3",10,"2020-01-26 20:13:17+01:00","3.x: Add concatMapX operators (aliases) (#6879)
",244899,1823,77147,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7132","ReactiveX/RxJava","9283700d3a04d495b0845f947ed119c1ed10ee94",22,"2020-01-27 11:09:30+01:00","3.x: Add various concatXDelayError operators
(#6881)
",245107,1829,77421,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7133","ReactiveX/RxJava","78c70d6a5365cb8db532d23397d5a0b4c114b72a",3,"2020-01-27 12:42:57+01:00","3.x: Add Single.mergeArray & mergeArrayDelayError
(#6882)  * 3.x: Add Single.mergeArray &
mergeArrayDelayError    * Remove unnecessary
shortcut
",245146,1830,77490,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7134","ReactiveX/RxJava","c4d995d57dce44c52f2e687689752cacaae8ec8f",3,"2020-01-27 15:30:22+01:00","3.x: Add Completable.sequenceEqual (#6884)
",245173,1831,77516,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7135","ReactiveX/RxJava","f86753aa4c15717740556ec34418e86edea1b146",32,"2020-01-27 15:48:37+01:00","3.x: Add missing startWith overloads (#6885)  *
3.x: Add missing startWith overloads    * Fix
Javadocs copy-paste mistakes
",245723,1836,77858,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7136","ReactiveX/RxJava","e077ed832678f5efeb15748d2a4aa4aafd29ef5a",4,"2020-01-28 10:51:11+01:00","3.x: Add Completable.onErrorReturn[Item] (#6886)
",245824,1837,77917,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7137","ReactiveX/RxJava","2d8660e070fe65b8089855ba1a58ef49d7c1b70a",11,"2020-01-28 12:06:37+01:00","3.x: Add safeSubscribe to Maybe, Single &
Completable (#6887)
",246268,1843,78083,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7138","ReactiveX/RxJava","f1a795da0d4cdfb3133206ad8e3887bdb8ba948b",2,"2020-01-28 12:32:19-08:00","3.x: Swap Maybe.flatMapSingle and
Maybe.flatMapSingleElement (#6891)  * Deleted
Maybe.flatMapSingle    And replaced tests with
flatMapSingle().toSingle()    * Renamed
Maybe.flatMapSingleElement to flatMapSingle    *
Deleted unused MaybeFlatMapSingle operator    *
Renamed operator MaybeFlatMapSingleElement to
MaybeFlatMapSingle    * Add Ignore to
XFlatMapTest.maybeSingle
",246267,1845,78117,"slisaasquatch","slisaasquatch@users.noreply.github.com","David Karnok","akarnokd@gmail.com"
"7139","ReactiveX/RxJava","c181169bf238a841c54e8957055ca31c02fd495d",6,"2020-01-29 12:52:12+01:00","3.x: Reenable XFlatMapTest.maybeSingle, add
missing Single operators (#6893)
",246972,1849,78226,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7140","ReactiveX/RxJava","81f0569a8b9b7d27059f127b90fd7335118b2ee4",40,"2020-01-30 16:14:12+01:00","3.x: Add concatEagerDelayError across (#6899)  *
3.x: Add concatEagerDelayError across    * Add
more since 3.0.0 tags
",247374,1851,78777,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7141","ReactiveX/RxJava","b3ad0752de398f4536bb88a7b1c77b0b9fbecb87",10,"2020-02-12 16:26:52+01:00","3.x: Add missing coverage, fix unused/inconsistent
ops (#6901)  * 3.x: Add missing coverage, fix
unused/inconsistent ops    * More coverage
improvements and cleanup    * Some more coverage
* Observable coverage and cleanup    * Improve
Flowable internals and coverage    * More Flowable
operator coverage and fixes    * Last set of
coverage & cleanup for Flowable operators    * Fix
wrong use of j.u.Observable
",251408,1855,78877,"David Karnok","akarnokd@gmail.com","GitHub","noreply@github.com"
"7142","jenkinsci/jenkins","0d5a13255db5ed2134359f7b0bbb8e36525ad03e",1,"2012-07-05 19:00:11-04:00","[FIXED JENKINS-14330] NPE.
",77107,1159,62276,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7143","jenkinsci/jenkins","931fa176e811878e0bd06e6007036f5e8651c917",1,"2012-07-19 14:09:29-04:00","[FIXED JENKINS-14507] NPE from JUnitParser.parse.
",77204,1160,62324,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7144","jenkinsci/jenkins","fe6febb090f54ef1dd609c278ade6c1e13ab0f1c",3,"2012-08-06 21:03:33-04:00","Properly documenting null behavior of User-related
methods.
",77519,1164,62466,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7145","jenkinsci/jenkins","e46e1673f103d8fb5ae5cce250063cba8f984b4b",1,"2012-08-10 13:44:49-04:00","[FIXED JENKINS-14769] NPE from
UpdateSite$Plugin.getNeededDependencies.
",77545,1165,62477,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7146","jenkinsci/jenkins","7f8fe215d43b285ac5b722b44e6e2c069dd9beeb",1,"2012-08-20 16:57:21+02:00","Fix typo : cannon != canon
",77714,1168,62608,"Nicolas De Loof","nicolas.deloof@gmail.com","Nicolas De Loof","nicolas.deloof@gmail.com"
"7147","jenkinsci/jenkins","95d061a6bb88d444cf7172f464f31abb90676033",1,"2012-08-23 16:24:05+02:00","[JENKINS-14902] move javadoc from Jenkins to new
interface check itemgroup to exist and be instance
of ModifiableTopLevelItemGroup fix name .substring
",77776,1169,62651,"Nicolas De Loof","nicolas.deloof@gmail.com","Nicolas De Loof","nicolas.deloof@gmail.com"
"7148","jenkinsci/jenkins","80caf2535fec2f71667109aa156c722fc52cf053",1,"2012-09-06 20:51:05-04:00","First draft: stores 'plugin' attribute, though
redundantly marks it nested elements from the same
owner.
",78270,1172,62840,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7149","jenkinsci/jenkins","c32f006fe40d424309c09f6d4291b210ec5fc1c1",2,"2012-09-21 12:28:26-07:00","Allow AbstractBuilds to be garbage collected (and
reloaded lazy later)
",79796,1185,63624,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7150","jenkinsci/jenkins","300bfc463bc4377d6124fa538f64ff6e2b8d7813",4,"2012-10-01 12:51:06-04:00","[FIXED JENKINS-15369] NPE deleting a slave.
",80058,1187,63791,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7151","jenkinsci/jenkins","554d9d55a4aac0c456209e6160cf67dabeb7d8bb",8,"2012-12-05 13:12:56-05:00","Diagnosis of an NPE probably caused by a transient
slave connection error.
java.lang.NullPointerException         at hudson.t
asks.CommandInterpreter.createScriptFile(CommandIn
terpreter.java:104)         at hudson.tasks.Comman
dInterpreter.perform(CommandInterpreter.java:66)
at hudson.tasks.CommandInterpreter.perform(Command
Interpreter.java:58)         at com.cloudbees.huds
on.plugins.modeling.impl.builder.BuilderImpl.perfo
rm(BuilderImpl.java:58)         at hudson.plugins.
m2extrasteps.M2ExtraStepsWrapper.executeBuildSteps
(M2ExtraStepsWrapper.java:166)         at hudson.p
lugins.m2extrasteps.M2ExtraStepsWrapper.access$200
(M2ExtraStepsWrapper.java:43)         at hudson.pl
ugins.m2extrasteps.M2ExtraStepsWrapper$1.tearDown(
M2ExtraStepsWrapper.java:137)         at hudson.ma
ven.MavenModuleSetBuild$RunnerImpl.doRun(MavenModu
leSetBuild.java:817)         at hudson.model.Abstr
actBuild$AbstractRunner.run(AbstractBuild.java:490
)         at hudson.model.Run.run(Run.java:1442)
at hudson.maven.MavenModuleSetBuild.run(MavenModul
eSetBuild.java:477)         at hudson.model.Resour
ceController.execute(ResourceController.java:88)
at hudson.model.Executor.run(Executor.java:239)
",81189,1210,64396,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7152","jenkinsci/jenkins","3f9c3e3d770087f0b6e3b157a5d000981dce818f",1,"2013-01-03 13:21:59-05:00","Stack trace printed while running
UseRecipesWithJenkinsRuleTest. Default constructor
of RobustReflectionConverter ought to use
PluginManager. java.lang.AssertionError         at
hudson.util.RobustReflectionConverter.<init>(Robus
tReflectionConverter.java:82)         at hudson.ut
il.RobustReflectionConverter.<init>(RobustReflecti
onConverter.java:77)         at hudson.security.Pr
ojectMatrixAuthorizationStrategy$ConverterImpl.<in
it>(ProjectMatrixAuthorizationStrategy.java:103)
",81087,1211,64267,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7153","jenkinsci/jenkins","a9aff088f327278a8873aef47fa8f80d3c5932fd",2,"2013-01-02 19:02:11-08:00","[SECURITY-49] Deprecating Jenkins.getSecretKey()
We are replacing it by the ConfidentialStore class
and the ConfidentialKey class, which provides
purpose-specific confidential information that are
separated from each other.  In this way, not all
eggs are in one basket, and in case of a
compromise, the impact will contained.  Also
replaced several insecure use of
digest(secret|messsage) or digest(message|secret)
by HMAC.
",81317,1218,64474,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7154","jenkinsci/jenkins","0bdde83cbb18300d555dda4e7f0ee663f4ad267f",1,"2013-01-22 11:43:48-05:00","[FIXED JENKINS-16444] NPE showEvenIfUnstableOption
when first adding trigger section. At this time
the target project is unset so it has no known
type and we just have to assume the threshold is
valid.
",82436,1228,64728,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7155","jenkinsci/jenkins","de9002b3985cfa11971bf51137179464d6b0fa20",1,"2013-01-23 20:04:35-05:00","[FIXED JENKINS-16462] Run parameters do not
support folders.
",82479,1229,64750,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7156","jenkinsci/jenkins","1f29f0d0e39c81863aa008581c72f01d5b7b012b",1,"2013-02-01 18:16:38-05:00","Observed an NPE printed during shutdown.
",82604,1231,64805,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7157","jenkinsci/jenkins","c0d987ef20d67167410a4efac7a375d4a6873849",1,"2013-01-23 13:44:52+01:00","Extension point to provide access to workspace
even when node is offline used to browse workspace
and run scm polling
",82725,1232,64872,"Nicolas De Loof","nicolas.deloof@gmail.com","Nicolas De Loof","nicolas.deloof@gmail.com"
"7158","jenkinsci/jenkins","36342d71e29e0620f803a7470ce96c61761648d8",1,"2013-02-11 16:47:10-05:00","[SECURITY-55]  This patch makes standard post-
build action refuse to let you configure a
downstream project you cannot currently build. The
one from parameterized-trigger will show an error
in the configure screen but still lets you save
the configuration; needs an analogous patch to
that plugin. Does not yet protect against POSTing
config.xml with the trigger. (cherry picked from
commit 757bc8a53956e6fbab267214e6e0896f03c3c262)
Conflicts:
core/src/main/java/hudson/model/Descriptor.java
",82866,1233,64895,"Jesse Glick","jglick@cloudbees.com","Kohsuke Kawaguchi","kk@kohsuke.org"
"7159","jenkinsci/jenkins","c41aafabc36cfbba5a10c1102cc1800dcbfd4ffb",1,"2013-03-03 14:40:17+01:00","@since and clean up for
52ae5fe35a2e56a75fce10d57e2a01c3cb89f482
",83303,1238,65131,"Christoph Kutzinski","kutzi@gmx.de","Christoph Kutzinski","kutzi@gmx.de"
"7160","jenkinsci/jenkins","a941338b8aba5a788979cb3e3d01608e9a547a66",2,"2013-03-22 18:23:54-04:00","Promote use of crontab hashes in documentation and
form validation.
",83865,1244,65362,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7161","jenkinsci/jenkins","7fa8fe4096d0134f598a9d475df1c6199b9b05e7",1,"2013-04-25 11:20:07-04:00","[FIXED JENKINS-17402] getItem may return null but
may not throw IAE.
",84571,1250,65675,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7162","jenkinsci/jenkins","8549e7b32debae32827cca4cd6e7aa69858140b0",1,"2013-05-28 12:23:55-04:00","[FIXED JENKINS-18118] Introduced
UserAvatarResolver.resolveOrNull to properly
produce fallback icon URL.
",85744,1262,66034,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7163","jenkinsci/jenkins","26b1362d641c19a0503eb14944ac4bcff80ca62e",2,"2013-06-14 13:25:51-04:00","Improved documentation.
",86684,1270,66380,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7164","jenkinsci/jenkins","fa47981c071bf8c11041d4f11b2be0c73ab0b270",1,"2013-06-14 13:30:06-04:00","[FIXED JENKINS-18356] Restored deprecated
AbstractProject.doBuild{,WithParameters}
overloads.
",86693,1270,66384,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7165","jenkinsci/jenkins","27c3bd0e22e135f0d0ce84c5d3518865b3a13ebd",1,"2013-06-17 12:14:52-04:00","NPE when NodeMonitor.columnCaption is null.
",86940,1272,66395,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7166","jenkinsci/jenkins","735713801b130fe247cf17bbca7b4561e41b1d13",1,"2013-06-26 16:29:43-07:00","[FIXED JENKINS-18438]  Node monitoring should run
in parallel to reduce the total round-trip time in
large instances.
",87389,1280,66732,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7167","jenkinsci/jenkins","06c211c6b425e313f808f9cbdd49d32f9c922a84",2,"2013-07-10 09:54:35-04:00","[JENKINS-17728] Fixing another possible cause of
an NPE. Unlike the bug I originally reproduced, in
which the parent had some builds but the context
in which the new build was scheduled omits a
parent, this seems to be due to a case in which
there is no build record at all for the parent. No
idea how that could happen (getLastBuild should
return even a running, failed, or aborted build),
but @treydock reports a stack trace in 1.509.2
which implies this. So fixing null safety; will
not prevent an exception but will report it more
gracefully.
",87663,1281,66894,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7168","jenkinsci/jenkins","be158b4b2ae269de4a55d04f293c1ec34765e056",1,"2013-07-23 19:48:43-04:00","[FIXED JENKINS-18898] ToolInstallation.getHome may
be null, and buildEnvVars must take that into
account.
",88760,1293,67214,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7169","jenkinsci/jenkins","a3d099b6528234e630a4c9225e96c2333e5de13a",2,"2013-08-20 17:46:55-04:00","ArtifactManagerFactory/ArtifactManagerConfiguratio
n to let the administrator select what to use.
",90825,1307,67837,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7170","jenkinsci/jenkins","36e775876b1658a72cf08757899626f6ef74b2f9",1,"2013-09-09 17:19:25-04:00","Run.getResult may be null, so check for that.
Observed in 1.509.2: Parsing POMs Failed to
transfer Could not find artifact ‚Ä¶ in central
(http://repo.maven.apache.org/maven2) Archiving
artifacts ERROR: Processing failed due to a bug in
the code. Please report this to jenkinsci-
users@googlegroups.com
java.lang.NullPointerException         at hudson.t
asks.ArtifactArchiver.perform(ArtifactArchiver.jav
a:138)         at org.zeroturnaround.jenkins.LiveR
ebelDeployBuilder.getArtificatOrMetadata(LiveRebel
DeployBuilder.java:194)         at org.zeroturnaro
und.jenkins.LiveRebelDeployBuilder.uploadConfigura
tion(LiveRebelDeployBuilder.java:171)         at o
rg.zeroturnaround.jenkins.LiveRebelDeployBuilder.p
erform(LiveRebelDeployBuilder.java:108)         at
hudson.tasks.BuildStepMonitor$1.perform(BuildStepM
onitor.java:19)         at hudson.model.AbstractBu
ild$AbstractBuildExecution.perform(AbstractBuild.j
ava:812)         at hudson.maven.MavenModuleSetBui
ld$MavenModuleSetBuildExecution.build(MavenModuleS
etBuild.java:828)         at hudson.maven.MavenMod
uleSetBuild$MavenModuleSetBuildExecution.doRun(Mav
enModuleSetBuild.java:779)         at hudson.model
.AbstractBuild$AbstractBuildExecution.run(Abstract
Build.java:594)         at
hudson.model.Run.execute(Run.java:1575)         at
hudson.maven.MavenModuleSetBuild.run(MavenModuleSe
tBuild.java:485)
",91042,1312,67686,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7171","jenkinsci/jenkins","bdaea02d88631282389a528eb9a049e6481a4660",1,"2013-10-22 18:45:52-04:00","Fail with a clear message when a mode parameter is
given but no such descriptor exists. Otherwise get
e.g.: java.lang.IllegalArgumentException:
java.lang.NullPointerException         at hudson.m
odel.ItemGroupMixIn.createProject(ItemGroupMixIn.j
ava:253)         at hudson.model.ItemGroupMixIn.cr
eateTopLevelItem(ItemGroupMixIn.java:175)
at jenkins.model.Jenkins.doCreateItem(Jenkins.java
:2827)         at jenkins.model.Jenkins.doCreateIt
em(Jenkins.java:308)         at ‚Ä¶ Caused by:
java.lang.NullPointerException         at hudson.m
odel.ItemGroupMixIn.createProject(ItemGroupMixIn.j
ava:251)         ... 65 more
",81254,1207,62730,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7172","jenkinsci/jenkins","d0c45040d6aafa22842e4c3ba7dac908f251522c",1,"2013-10-24 14:55:08-04:00","Get/UpdateJobCommand should work with the most
generic possible type‚ÄîAbstractItem.
",81371,1211,62858,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7173","jenkinsci/jenkins","565ced0dba75c3f198c5cf9b9df247941df6ad46",1,"2013-10-26 15:19:49-05:00","[FIXES JENKINS-19622] Replace
hudson.model.Trigger#timer with
jenkins.util.Timer, which exposes a
ScheduledExecutorService. Up to 10 additional
threads will be created to run pending tasks even
if running tasks are blocked.  Also, move static
initialization of timers to the classes which
require them.
",82317,1228,63362,"Ryan Campbell","ryan.campbell@gmail.com","Ryan Campbell","ryan.campbell@gmail.com"
"7174","jenkinsci/jenkins","0c5338dff2a673ca629554f15593e4796e672377",1,"2013-11-16 11:09:07-08:00","expose additional variables
",82702,1234,63480,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7175","jenkinsci/jenkins","82d1440745edff9b9961d21e8751c563ffe0c97d",1,"2013-11-19 10:38:07-05:00","Trying to avoid an NPE reported by a 1.537 user
with the Multijob plugin (patched 1.10).
java.lang.NullPointerException         at hudson.m
odel.queue.FutureImpl.cancel(FutureImpl.java:78)
at com.tikal.jenkins.plugins.multijob.MultiJobBuil
der.perform(MultiJobBuilder.java:156)         at h
udson.tasks.BuildStepMonitor$1.perform(BuildStepMo
nitor.java:20)         at hudson.model.AbstractBui
ld$AbstractBuildExecution.perform(AbstractBuild.ja
va:781)         at hudson.model.Build$BuildExecuti
on.build(Build.java:199)         at hudson.model.B
uild$BuildExecution.doRun(Build.java:160)
at hudson.model.AbstractBuild$AbstractBuildExecuti
on.run(AbstractBuild.java:562)         at com.tika
l.jenkins.plugins.multijob.MultiJobBuild$MultiJobR
unnerImpl.run(MultiJobBuild.java:70)         at
hudson.model.Run.execute(Run.java:1665)         at
hudson.model.Run.run(Run.java:1612)         at com
.tikal.jenkins.plugins.multijob.MultiJobBuild.run(
MultiJobBuild.java:63)         at hudson.model.Res
ourceController.execute(ResourceController.java:88
)         at
hudson.model.Executor.run(Executor.java:230)
",82742,1234,63480,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7176","jenkinsci/jenkins","6586d779b1652ac91c20e2bb11f8915d1e36beea",2,"2013-11-20 09:51:19-05:00","Better null safety. Defense against an exception
consistently thrown when running functional tests
against 1.532.1 (but not 1.540, for whatever
reason): ‚Ä¶ hudson.PluginWrapper stop WARNING:
Failed to shut down ‚Ä¶
java.lang.NullPointerException         at
jenkins.model.Jenkins.lookup(Jenkins.java:3898)
at hudson.PluginWrapper.getPlugin(PluginWrapper.ja
va:287)         at
hudson.PluginWrapper.stop(PluginWrapper.java:377)
at
hudson.PluginManager.stop(PluginManager.java:650)
at org.jvnet.hudson.test.TestPluginManager.reallyS
top(TestPluginManager.java:129)         at org.jvn
et.hudson.test.TestPluginManager.access$000(TestPl
uginManager.java:55)         at org.jvnet.hudson.t
est.TestPluginManager$1.run(TestPluginManager.java
:140)
",82749,1234,63480,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7177","jenkinsci/jenkins","89d7570ddd143c197d394bf2b4f5b34e15cbecdc",2,"2013-12-10 14:33:54-05:00","[FIXED JENKINS-19400] Configurable retention
system for lazy-loaded build references.
",83098,1241,63692,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7178","jenkinsci/jenkins","da389263d2a1ff383cbf1acb3f1a1e294b27f5c0",1,"2014-01-27 07:16:53-08:00","Noting that markup might be null.
",83387,1248,64082,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7179","jenkinsci/jenkins","e31f8dc2d361990194cb559395c55866092b35cb",1,"2014-01-31 23:59:20+01:00","[JENKINS-21474] Fix NPE in View.getComputers()
",83492,1249,64112,"Oliver Gondža","ogondza@redhat.com","Oliver Gondža","ogondza@redhat.com"
"7180","jenkinsci/jenkins","84a01cd2270c742dee85720e7e2e3b77fd6f1b72",3,"2014-02-04 10:00:39-05:00","@CheckForNull
",83510,1249,64134,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7181","jenkinsci/jenkins","a22d914a0e73dd2627385fe32bddfc3727116bb3",1,"2014-02-17 14:33:42-05:00","Javadoc improvements.
",83521,1248,64180,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7182","jenkinsci/jenkins","f360ce3ee04a967ec1413612d3cb381f4a6950ed",3,"2014-02-20 11:05:32-05:00","Javadoc for Queue.Task claimed they were compared
using .equals(), but in critical cases this was
not actually true. Does not matter for the common
case of Job, but when implementing custom tasks
this could cause duplicate queue items (and
executables).
",83604,1249,64207,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7183","jenkinsci/jenkins","898f1f76a37e1c69cf38df718a5d3899544ebb44",2,"2014-02-21 14:55:18-05:00","[FIXED JENKINS-12124] Occasionally errors loading
plugin classes since it is expected that findClass
(and findLoadedClass) are called under
synchronization. The problem was masked by a blind
assumption that an InvocationTargetException was
in fact wrapping a ClassNotFoundException. Many
thanks to @gotwarlost for demonstrating how to
reproduce the problem and diagnosing the cause.
",83743,1249,64360,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7184","jenkinsci/jenkins","1ac77750e93f9a1970fecbecdf7f84279d0a62b9",1,"2014-02-27 16:31:07-05:00","[FIXED JENKINS-19081] Offer the option of
downloading metadata directly from the server.
",83923,1250,64435,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7185","jenkinsci/jenkins","9f19ae91f7611344268390470f22515fdadc5c71",2,"2014-03-07 11:44:28-08:00","Introduced ParameterizedJobMixIn so that non-
AbstractProject‚Äôs can use
ParametersDefinitionProperty.
",83999,1251,64569,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7186","jenkinsci/jenkins","8f23ee87a34b756b240b904691bd7f5826ae50b5",1,"2014-03-11 10:14:46-04:00","Renamed type variables for consistency with the
names used in Job/Run.
",84103,1253,64636,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7187","jenkinsci/jenkins","681a8ff3070736610f338972ba433379723346fb",1,"2014-03-21 18:58:03-04:00","[FIXED JENKINS-19544] When OldDataMonitor is
reported a Run, just remember the ID rather than
holding a strong reference.
",84684,1260,64889,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7188","jenkinsci/jenkins","f97b5b33b0754532b945340cdee4b6ea1d2f6ba4",2,"2014-03-28 11:36:19-04:00","Show the user examples of when a cron tab list
should actually run.
",85405,1262,65714,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7189","jenkinsci/jenkins","ef382f90a5f80dc60e24eeabd30293c48740f8d2",4,"2014-04-03 17:09:41-04:00","Introduced a QueueItemAuthenticator overload
taking Task. And moving the permissions checks in
BuildTrigger from being hardcoded in execute to
being overridable in Dependency. This has two
benefits: ¬∑ We can restore the previous form
validation logic predicting whether Item.BUILD
will be available. ¬∑ A (true) Trigger could check
Item.READ on the upstream project   under the
authentication that the downstream project would
have if it were to be built.   (This part is not
yet implemented; probably will want to make this
replace the current pseudotriggers.)
",85791,1271,65844,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7190","jenkinsci/jenkins","d8b72b092172a7915ca420a23e748e115b9b54fa",1,"2014-04-19 12:25:26-07:00","Documenting why this can be null
",83105,1243,63722,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7191","jenkinsci/jenkins","48cc7e03d4b88c9cd74990ef703f48b5eb6dbc36",19,"2014-05-04 12:39:02+04:00","Annotate hudson.Util methods.  The change adds
annotations for all methods inside the class. The
initial idea - enforce checks of symlink methods
to prevent NPEs on Windows platforms.  Signed-off-
by: Oleg Nenashev <o.v.nenashev@gmail.com>
",84616,1250,64778,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7192","jenkinsci/jenkins","6c2fffb24843324fc3f01da692bff6f4d8b6cd71",2,"2014-05-05 22:26:12+04:00","Fixed annotations in hudson/Util.java according to
the discussion with @jglick and @kutzi  Signed-
off-by: Oleg Nenashev <o.v.nenashev@gmail.com>
",84617,1250,64779,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7193","jenkinsci/jenkins","98ee11a28903e3d3003d912f143150bcf1b37c55",1,"2014-05-29 16:01:19-04:00","Trying to make it possible for a non-
AbstractProject to use SCMTrigger.
",85259,1256,65156,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7194","jenkinsci/jenkins","5a25214ceff813a169033634f852199a45b92d37",3,"2014-05-29 17:17:39-04:00","Expanded SCMTriggerItem signature; trying to fix
multiple-scms integration.
",85294,1256,65167,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7195","jenkinsci/jenkins","7a2e32603ba6c6f21c85f96f1380ca498592b3d1",2,"2014-05-30 15:22:20-04:00","Added SCMListener.onCheckout. Also fixed
compilation error from previous change.
",85358,1256,65165,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7196","jenkinsci/jenkins","7b894f57b78be0e4d847fe1c971955d2cbb08e58",5,"2014-05-29 21:40:10+04:00","[FIXED JENKINS-15094] - Handle null parameter
values in BuildCommand (CLI) and Parameter classes
(CLI).  The change adds missing checks for null
ParameterValue, which may be passed from the CLI.
It prevents the death of Jenkins executors during
the canTake() check of node labels.  Signed-off-
by: Oleg Nenashev <o.v.nenashev@gmail.com>
",84618,1250,64789,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7197","jenkinsci/jenkins","abbde7745873cb34cee56d0fcafdd11d45acc6b8",4,"2014-04-26 17:23:26+04:00","Added missing null checks for Computer::getNode(),
SlaveComputer::getNode() and
AbstractBuild::getCurrentNode()  Signed-off-by:
Oleg Nenashev <o.v.nenashev@gmail.com>  Conflicts:
core/src/main/java/hudson/model/AbstractBuild.java
",85361,1256,65177,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7198","jenkinsci/jenkins","125e49d45e40ff80d75138e03d4dc6a2d99a8812",15,"2014-06-03 15:02:56+04:00","Annotated hudson.model.Build and hudson.model.Run,
minor fixes in Javadoc  Signed-off-by: Oleg
Nenashev <o.v.nenashev@gmail.com>
",85319,1256,65185,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7199","jenkinsci/jenkins","870ef367b77dd4f2822f6a143f3fe09d1a24fae5",2,"2014-06-04 18:31:39+04:00","Added annotations to kernel security classes.
Most of methods define @Nonnull inputs and outputs
(the legacy behavior is mostly non-documented),
but there're several exceptions  Signed-off-by:
Oleg Nenashev <o.v.nenashev@gmail.com>
",85418,1257,65239,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7200","jenkinsci/jenkins","65e87211219da726ef6b1920d43d41a712294440",1,"2014-06-05 23:12:53-04:00","Added SCM.guessBrowser.
",85802,1258,65290,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7201","jenkinsci/jenkins","82d2eb5ff0f2601bd078e0ee0034a1b7091b267a",2,"2014-06-06 16:05:37-04:00","@CheckForNull
",85813,1258,65290,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7202","jenkinsci/jenkins","cffe9df0176b0ff895554ce7f2ea4d2f20062351",1,"2014-06-03 12:55:25-04:00","[FIXED JENKINS-23294] Deal with X-Forwarded-Port.
If this is set, use it instead of
ServletRequest.getServerPort() for purposes of
getRootUrlFromRequest(). Also treat the default
port as scheme-specific in that method (which
presumes that we in fact got the reported port
right). And enhance the reverse proxy setup
monitor to validate that the Referer header
(/manage) actually matches what we have computed
from getRootUrlFromRequest; if it does not,
something is messed up, though it may require some
digging to find what. (Would be better to let the
monitor specify the exact problem it determined,
though this is not always actually possible; for
example if you are missing AllowEncodedSlashes
NoDecode in Apache, you just get a 404 from Apache
without even getting to Jenkins.)
",86213,1264,65502,"Jesse Glick","jglick@cloudbees.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7203","jenkinsci/jenkins","65bc0fb146bfcdfe9af441bde27d8571fc7f563e",1,"2014-06-28 05:21:24-07:00","Added a convenience method.  Reference:
https://trello.com/c/doFFMdUm/46-filepath-
getcomputer
",86260,1265,65538,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7204","jenkinsci/jenkins","5e39f687fba0f47fa17a4ba15ae20f364868acae",1,"2014-07-07 10:27:09-04:00","Suppressing NPE from SaveableListener.all during
shutdown. https://gist.githubusercontent.com/vivek
/0d4d153cd9faad6e5743/raw/78a1d1b317894360c2ca06c7
f4469f694ca7d573/gistfile1.java
",86365,1265,65560,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7205","jenkinsci/jenkins","c64e4d977b77d123a9710d7d63103a6c2bc6898c",1,"2014-07-21 12:09:22-04:00","Permit RunnerStack.peek to return null in case it
is not in use (for example, from a workflow), so
that we do not get an NPE when trying to run a
task that asks for checkpoints.
https://trello.com/c/DoCMV6gB/31-runnerstack
",86549,1266,65589,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7206","jenkinsci/jenkins","7076f0de7e003e95d3a95df0052eca27d0dbe75a",2,"2014-07-21 13:08:22-04:00","@CheckForNull
",86545,1266,65583,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7207","jenkinsci/jenkins","128344dda3a3396e252e9e00272093f233c0b9c9",6,"2014-08-18 19:25:35+04:00","[FIXED JENKINS-24110] - Explicitly handle null
Executables in hudson.model.Executor  This change
improves the handling of errors in
hudson.model.Executor, which cause issues like
JENKINS-18164. The change also introduces several
annotations in order to prevent further issues.
Signed-off-by: Oleg Nenashev
<o.v.nenashev@gmail.com>
",87631,1278,66077,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7208","jenkinsci/jenkins","6d2e3ae5cbc57133ba2b46f19031957872ea74b0",1,"2014-08-21 18:18:25-04:00","Initial sketch of replacement of Run.id by number.
Does not yet deal with migrating historical
records.
",82772,1222,63269,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7209","jenkinsci/jenkins","e4a1ac2ba18993c10b6b6a858f07327e93a55355",1,"2014-09-18 18:40:56-07:00","Added a hook to intercept remote file access and
reject them if necessary
",92044,1328,68240,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7210","jenkinsci/jenkins","c3a2069603bad6ba4f3c89c22e4c15242195b023",1,"2014-09-24 13:53:22-07:00","Added a 'ChannelConfigurator' extension point  ...
to intercept new Channel creation, which provides
the opportunity to set up the new channel.
",83905,1250,63735,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7211","jenkinsci/jenkins","04b8ef8a05c18f67d093bfefb3a0cb9fb0c1900d",1,"2014-10-16 02:00:47+04:00","Annotated hudson.model.User methods.  The fix also
includes comments in #1424 regarding Nonnull usage
Signed-off-by: Oleg Nenashev
<o.v.nenashev@gmail.com>
",83793,1235,63610,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7212","jenkinsci/jenkins","c20308c3faccdb7d65270dd3f6871c592d68abde",3,"2014-10-16 10:15:27-07:00","Making FilePathFilter itself more composable
",82585,1234,63315,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7213","jenkinsci/jenkins","cb65dd65f316b6675950080dac3e5ef37ff9468b",1,"2014-10-16 10:56:19-07:00","Moving related code into a separate package and
adding a scaffolding to do FilePathFilter
",82666,1237,63356,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7214","jenkinsci/jenkins","356764dced7c84a9ba51379cc41c3d8dc7fa2bae",1,"2014-10-16 11:06:24-07:00","Moved the rules into a separate class
",82688,1241,63373,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7215","jenkinsci/jenkins","19f9b63d74693d4de6f6906e9896399d18b4107f",1,"2014-10-16 18:18:25-07:00","[FIXED JENKINS-24046]  Warn users if the pinning
is preventing Jenkins from overwriting older
versions with bundled versions.
",82906,1247,63446,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7216","jenkinsci/jenkins","4cb7414e90e414dd032ef0d1fe7487845d423a6f",1,"2014-10-28 11:23:03-07:00","fromExternalizableId should just return null, not
throw IAE, if the job has since been
renamed/move/deleted. (It could already return
null if the run has since been deleted; #1264
failed to mark this properly.) Reserving IAE for
inputs that getExternalizableId could not actually
have produced, and making sure to also throw this
in case of non-numeric text after the hash. Adding
Javadoc for both methods.
",84383,1237,63912,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7217","jenkinsci/jenkins","8878c7fa5b2bc129b6185ed44d8c160a4c4bd651",1,"2014-10-28 16:18:20-04:00","Prevent duplicate Permission or PermissionGroup
objects from being created.
",84397,1237,63895,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7218","jenkinsci/jenkins","0b0b868805e43d5b7bcafbdf22a59960a3baeeb0",1,"2014-11-05 17:19:45-05:00","[JENKINS-2786] Makes no sense for
Computer.currentComputer to return MasterComputer
when not on an executor thread.
",85662,1269,64488,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7219","jenkinsci/jenkins","e985ee69ff2cb278f137df5fa4bdc380b1caff88",1,"2014-11-06 13:04:24+01:00","Expose AbstractProject.AbstractProjectDescriptor#v
alidateLabelExpression for plugins
",85664,1269,64494,"Oliver Gondža","ogondza@gmail.com","Oliver Gondža","ogondza@gmail.com"
"7220","jenkinsci/jenkins","e6c2e16f7a1e2487a1d201aa11ae0c44e75a6ad7",2,"2014-11-07 20:07:52+03:00","[FIXED JENKINS-23339] - Introduce the validated
Jenkins::getActiveInstance() method
jenkins.model.Jenkins::getInstance() method is
marked as @CheckForNull, but the most of Jenkins
code does not actually check the return value. It
leads to tons of static analysis errors, hence it
is hard to analyze the code.  The change also adds
annotations to old methods like
Hudson::getInstance()  Signed-off-by: Oleg
Nenashev <o.v.nenashev@gmail.com>
",85543,1257,65257,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7221","jenkinsci/jenkins","65b71c20b126f8ac66bfa2de037a550af9fe90af",2,"2014-11-17 11:44:56+00:00","Allow programmatic QueueItemAuthenticators that
are not user configurable
",85861,1270,64597,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7222","jenkinsci/jenkins","2d89b832eee360103e8f2fad76dd9bd991156dee",2,"2014-11-19 01:00:36+03:00","Null annotations for PollingResult.class
",85755,1269,64532,"Kanstantsin Shautsou","Kanstantsin_Shautsou@epam.com","Kanstantsin Shautsou","Kanstantsin_Shautsou@epam.com"
"7223","jenkinsci/jenkins","f16b74be48a2fb3a12fe3e61b3ba5e8c275eaeed",1,"2014-11-19 01:27:31+03:00","Null annotations for Resource.class
",85758,1269,64533,"Kanstantsin Shautsou","Kanstantsin_Shautsou@epam.com","Kanstantsin Shautsou","Kanstantsin_Shautsou@epam.com"
"7224","jenkinsci/jenkins","4add7c3a5a830cfa6f828c345bd322b9cfb6f55e",3,"2014-11-19 02:17:37+03:00","Null annotations for QueueTaskDispatcher.class
",85759,1269,64533,"Kanstantsin Shautsou","Kanstantsin_Shautsou@epam.com","Kanstantsin Shautsou","Kanstantsin_Shautsou@epam.com"
"7225","jenkinsci/jenkins","0a9b63828062782643728b0a0f4f86dc20a8e7f9",1,"2014-12-15 14:26:36-05:00","Added a tool to reverse the build directory
migration if required.
",85848,1272,64601,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7226","jenkinsci/jenkins","3e344a94a9eed316d0c351becb08287b473b6521",1,"2015-01-05 17:02:52-05:00","[FIXED JENKINS-10944] [FIXED JENKINS-24519] If
makeBuildable fails on a FlyweightTask, keep it in
queue.
",86077,1273,64643,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7227","jenkinsci/jenkins","3c8e1b516a1cf0164d19a9afa488cff1ffc19b32",1,"2015-01-16 17:34:03-05:00","API refinements and documentation.
",86874,1276,64797,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7228","jenkinsci/jenkins","93fc66f1abd629f8366a13c8dac47f30890b1e64",1,"2015-01-21 17:43:35-05:00","SCM._for is actually @CheckForNull.
",86823,1275,64705,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7229","jenkinsci/jenkins","40382c5fc443f1cf1510103d80ec8358bb2f19d1",1,"2014-10-13 21:37:38-04:00","[JENKINS-5253] Allow case insensitive patterns in
Artifacts Archiving
",87124,1278,64887,"Dominique","dominiquebrice@users.noreply.github.com","Dominique","dominiquebrice@users.noreply.github.com"
"7230","jenkinsci/jenkins","6a8ce6ca099cc9b51db6e1417e507973978a9271",2,"2015-02-05 17:00:49+01:00","deprecated find(string) and introduce explicit
methods to lookup descriptor by id or by
Describable class name
",87178,1278,64880,"Nicolas De Loof","nicolas.deloof@gmail.com","Nicolas De Loof","nicolas.deloof@gmail.com"
"7231","jenkinsci/jenkins","901194ae77358b49016a32e6c97e74a70cbbb261",1,"2015-02-06 17:09:12+01:00","make $class and kind mutually exclusive Use kind
when descriptor.id != descriptor.clazz.name and
$clazz otherwise.
",87184,1278,64883,"Nicolas De Loof","nicolas.deloof@gmail.com","Nicolas De Loof","nicolas.deloof@gmail.com"
"7232","jenkinsci/jenkins","e6fdc19cf9174390386a98935ff1d7cf81dbe82f",2,"2015-03-16 12:36:04+00:00","[JENKINS-27058] Clarify that remoteFS can be
relative if you know what you are doing  - Get the
absolute path on connect and use that while the
connection is on-line (which is ok as when the
connection is not online a null was returned from
getRootPath() anyway)
",87924,1289,65241,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7233","jenkinsci/jenkins","46a900f4cb468853c5dca844d258b5b862c3a8bf",2,"2015-03-20 16:00:42-04:00","[JENKINS-25938] Introduced AsynchronousExecutable.
",87953,1290,65308,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7234","jenkinsci/jenkins","8589b211f9a99fa47d022a77bd7936636175898a",1,"2015-03-24 08:10:08-04:00","[FIXED JENKINS-22941]
AsynchronousExecution.blocksRestart
",88146,1291,65345,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7235","jenkinsci/jenkins","92147c3597308bc05e6448ccc41409fcc7c05fd7",3,"2015-03-23 21:00:19+00:00","[FIXED JENKINS-27565] Refactor the Queue and Nodes
to use a consistent locking strategy  The test
system I set up to verify resolution of
customer(s)' issues driving this change, required
additional changes in order to fully resolve the
issues at hand. As a result I am bundling these
changes:  - Moves nodes to being store in separate
config files outside of the main config file
(improves performance) [FIXED JENKINS-27562] -
Makes the Jenkins is loading screen not block on
the extensions loading lock [FIXED JENKINS-27563]
- Removes race condition rendering the list of
executors [FIXED JENKINS-27564] [FIXED
JENKINS-15355] - Tidy up the locks that were
causing deadlocks with the once retention strategy
in durable tasks [FIXED JENKINS-27476] - Remove
any requirement from Jenkins Core to lock on the
Queue when rendering the Jenkins UI [FIXED-
JENKINS-27566]
",88455,1290,65321,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7236","jenkinsci/jenkins","63d3b2641c451dc228b75a8bcf1e5d54453e7bad",1,"2015-03-25 13:23:14-07:00","Fixed a race condition.  IIUC, the expectation
here is that Queue.Executable will instantiate
AsynchronousException as a handle, start something
asynchronously (say send a JMS message) with a
callback, and the callback will tickle
AsynchronousException.  So AsynchronousException
might complete before it gets its executor set.
This code change ensures that that case gets
handled correctly.
",88235,1292,65410,"Kohsuke Kawaguchi","kk@kohsuke.org","Kohsuke Kawaguchi","kk@kohsuke.org"
"7237","jenkinsci/jenkins","0e3b6a9bf8dd66037f352f665fa5a49ded4e8581",1,"2015-03-25 17:31:56-04:00","@GuardedBy as suggested by @stephenc, and some
internal Javadoc.
",88238,1292,65415,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7238","jenkinsci/jenkins","5f264940306dd5ed0696056a6f11bcc1b78f4fc8",1,"2015-03-25 17:32:59-04:00","@CheckForNull as suggested by @stephenc.
",88238,1292,65415,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7239","jenkinsci/jenkins","3964189c5d0d4b958585c9f3665aadb67219d1d9",1,"2015-03-26 10:51:49+01:00","JUnit4
",88253,1292,65415,"Oliver Gondža","ogondza@gmail.com","Oliver Gondža","ogondza@gmail.com"
"7240","jenkinsci/jenkins","696a7f96202d591a4dccf0cb8f62a291c61bdab7",2,"2015-04-07 09:30:50+01:00","Add API to allow complete roundtrip from
Authentication to User  Without this change you
need to do:  ``` User user; final SecurityContext
oldContext = ACL.impersonate(a); try {     user =
User.current(); } finally {
SecurityContextHolder.setContext(oldContext); }
```  Which seems incredibly wasteful.  Or else you
need to replicate the logic in User.current()
which makes that code hard to change.
",89518,1292,65885,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7241","jenkinsci/jenkins","8dd079a8f04d3b9897b4e037378fc539ee5a6093",1,"2015-04-11 13:50:19-04:00","findByClassName should not be advertised to
outside code.
",89694,1292,65906,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7242","jenkinsci/jenkins","cfc7f2ddc48c68949b5a19b8d2d24b48a4510bfc",9,"2015-05-13 19:19:22+03:00","Refactor fingerprint classes: Javadoc and
annotations
",90645,1300,66138,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7243","jenkinsci/jenkins","86bac90fcbc6f3720242fa0db8836e562d4113d7",2,"2015-05-13 14:19:45-04:00","[FIXED JENKINS-28384] NPE when Node.toComputer ‚Üí
null.
",90750,1302,66167,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7244","jenkinsci/jenkins","1cd30ac665013418fb580652e773ff1dd2ddb745",2,"2015-05-15 11:31:26+03:00","Annotate JenkinsLocationConfiguration according to
the current behavior
",90708,1301,66143,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7245","jenkinsci/jenkins","17116a2129b808d64d76b5dcba9d3037003aed30",1,"2015-05-16 14:31:35+03:00","[FIXED JENKINS-28419] - Support the reset of
JenkinsLocationConfiguration::adminAddress
",90749,1302,66179,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7246","jenkinsci/jenkins","298e371321b3fa3744d923554624fb94135d32ee",1,"2015-05-18 10:49:02+03:00","Code documentation/annotation around
JENKINS-28446.  Just to prevent similar misuses in
the future.
",90641,1300,66114,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7247","jenkinsci/jenkins","7697bdb4f57d974546ec4c7e95e87fc8f2ad7f1a",1,"2015-05-18 13:59:31+03:00","[JENKINS-28446] - Introduce new API method in
Queue to optimize the performance of
UnlabeledLoadStatistics
",90707,1301,66158,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7248","jenkinsci/jenkins","6b4d044ae065c5abf515c48b37a990015ee1be24",2,"2015-05-19 07:53:08+03:00","JENKINS-9283 - Allow timezone definition in
scheduler
",90246,1292,65961,"Boris","dev@borispenck.de","Boris","dev@borispenck.de"
"7249","jenkinsci/jenkins","9d284a5e5f225d3465bfefd9c5946e4c48f7fa38",1,"2015-05-18 16:29:37+02:00","[JENKINS-28041] Incorporated changes from feedback
by Oleg
",88625,1297,65565,"Ing. Pavel Janousek","pjanouse@redhat.com","Ing. Pavel Janousek","pjanouse@redhat.com"
"7250","jenkinsci/jenkins","17f5227b1af6c3f94f0c0f5ee3217ab6cdfe6d1a",1,"2015-05-21 08:56:51+03:00","Noting #1672
",91074,1308,66387,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7251","jenkinsci/jenkins","bf7f14b165f235fed69ebabec0a852bff1874965",2,"2015-06-07 16:05:35+03:00","[JENKINS-25734] - Prevent NPE in
Executor/causeOfDeath page if the field is null
The change does not fix the issue, but it
suppresses NPE at least.
",85729,1269,64529,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7252","jenkinsci/jenkins","a220431770cfe716e4f69fd76a4a59bbb27aa045",1,"2015-06-14 14:53:27+02:00","[JENKINS-9104] Add ProcessKillingVeto extension
point  This allows extensions to veto killing of
certain processes.  Issue 9104 is not yet solved
by this, it is only part of the solution. The rest
should be taken care of in plugins.
",91559,1314,66633,"Daniel Weber","daniel.weber.dev@gmail.com","Daniel Weber","daniel.weber.dev@gmail.com"
"7253","jenkinsci/jenkins","79f99e1e8dec7c27a56267ba480936e5b485e3c2",1,"2015-06-17 11:53:37+02:00","JENKINS-28553 added more feedback from #1716 pull
request   * documented getInstance   * used
@CheckForNull
",90965,1307,66324,"Manuel Blechschmidt","manuel.blechschmidt@gmx.de","Manuel Blechschmidt","manuel.blechschmidt@gmx.de"
"7254","jenkinsci/jenkins","c9a6c3f8de327f089820dbbcc7e0207a3b734918",2,"2015-04-26 09:39:14+01:00","Build History pagination/search tweaks based on
feedback from @oleg-nenashev
",92505,1327,67282,"tfennelly","tom.fennelly@gmail.com","tfennelly","tom.fennelly@gmail.com"
"7255","jenkinsci/jenkins","76841f9d7e81bc4aa43caeca6916f52778bbd878",1,"2015-07-08 14:03:28+01:00","Javadoc etc for @jtnord
",91728,1315,66740,"tfennelly","tom.fennelly@gmail.com","tfennelly","tom.fennelly@gmail.com"
"7256","jenkinsci/jenkins","44d1d2b75fd4df1ab93ee33648ba645a0d4a3680",3,"2015-07-22 09:39:10-04:00","Offering new convenience methods in
ParameterizedJobMixIn.
",91790,1315,66763,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7257","jenkinsci/jenkins","d331c12bbc2cf863efd39e0b135c584da364937a",1,"2015-08-04 16:26:23+02:00","prefer Computer#isUnix to be abstract few chances
there‚Äôs another implementation but if one exists
Function.isWindows would probably be wrong
implementation
",91857,1316,66763,"Nicolas De Loof","nicolas.deloof@gmail.com","Nicolas De Loof","nicolas.deloof@gmail.com"
"7258","jenkinsci/jenkins","79c0bbf76680c8491e601be76d062299b7170971",1,"2015-08-05 02:37:33+03:00","Protect from race condition in Triggers  [FIXED
JENKINS-29790] [FIXED JENKINS-29945]
",92193,1320,66949,"Kanstantsin Shautsou","kanstantsin.sha@gmail.com","Kanstantsin Shautsou","kanstantsin.sha@gmail.com"
"7259","jenkinsci/jenkins","65d1fe5b1d17650f9f5cad97e28b5528d616a468",1,"2015-09-14 15:19:58+02:00","[JENKINS-30084] some more polish
",92623,1328,67259,"Valentina Armenise","valentina.armenise@gmail.com","Valentina Armenise","valentina.armenise@gmail.com"
"7260","jenkinsci/jenkins","0594c4cbccd24d4883fc0150e8fc511c9da63eb4",1,"2015-10-06 14:13:24+03:00","[SECURITY-153] Hide references to inaccessible
jobs in fingerprints.
",86352,1283,64764,"Oleg Nenashev","o.v.nenashev@gmail.com","Jesse Glick","jglick@cloudbees.com"
"7261","jenkinsci/jenkins","67e2637a57be9b6817621dbfcdec2b2dc27afdb9",1,"2015-10-15 18:24:23+02:00","[JENKINS-30456]Executable can be null in
getEstimatedDurationFor
",93661,1337,67733,"Valentina Armenise","valentina.armenise@gmail.com","Valentina Armenise","valentina.armenise@gmail.com"
"7262","jenkinsci/jenkins","c68c19aa9317f7ad52bea250d65f050a3d055779",1,"2015-10-17 22:06:42+03:00","[PR-1769] - Add background color options to plot
URLs.  This pull request integrates
https://github.com/jenkinsci/jenkins/pull/1769
",93789,1338,67758,"Mads Rolsdorph","m.rolsdorph@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7263","jenkinsci/jenkins","036a8e94ed37cf851f0cafb9cb12c21e3496ed7c",5,"2016-01-19 15:13:33+00:00","[FIX JENKINS-9598] Add plugin selection wizard on
first launch  Also ... unbundling of plugins from
Jenkins core.
",91563,1299,66051,"tfennelly","tom.fennelly@gmail.com","tfennelly","tom.fennelly@gmail.com"
"7264","jenkinsci/jenkins","bdb3c0c6d5e368d3751b3c6dcac8863df217604a",2,"2016-02-04 15:35:41+00:00","[JENKINS-32765] As I am not *adding* a new import,
I will annotate with `@CheckForNull`  Of course
the import being used is in a package name that is
reserved for artifacts produced by a JSR... and
the JSR that the dependency is claiming to come
from has not actually published anything... thus
whoever produced the artifact has broken the JSR
policy... and it is also not safe for us to
actually use these annotations as we do not know
what a JSR may change on the road to actually
providing this... but that is a war for a
different PR
",90854,1288,65402,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7265","jenkinsci/jenkins","bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb",1,"2016-03-07 22:08:36+00:00","Jenkins.getInstance() should be non-null  - It is
never too late to do the right thing. - The vast
majority of usages of `Jenkins.getInstance()` in
core currently assume that its return value is
non-null - This commit changes those that are
written to correctly check for non-null values
will call `Jenkins.getInstanceOrNull()` - We
deprecate the `Jenkins.getActiveInstance()`
madness - I checked with @kohsuke who said not to
bother with a PR and just commit this strongly
opinionated change direct to master as a PR will
just degrade into a bikeshedding.
",91525,1289,65561,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7266","jenkinsci/jenkins","96150d3a465f428b5fbc5d03c8cd00115f4749c9",1,"2016-03-08 21:14:36+00:00","Jenkins.getInstance() will be @Nonnull in Jenkins
2.0+  - Code that is running from a plugin and on
the master's JVM is guaranteed to never get null
from this method (any cases where you do get null
are bugs in core) - Code that is running from a
plugin and on a remote JVM should never be allowed
to load the Jenkins class in their classloader, so
should never use Jenkins.getInstance()... we are
annotating the method with @Nullable so that such
code can have some evolution time - Code that is
running in core and on one of two special paths
should use the Jenkins.getInstanceOrNull() method
so that the UI can be presented to users before
the singleton has been instantiated / after the
singleton has been destroyed - The remaining 95%
of uses in core (and 100% of uses in plugins) can
safely assume that the instance is never null
",91547,1289,65578,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7267","jenkinsci/jenkins","f68f5fb24f0fe69b45bf7286b222f448d26b2fac",2,"2016-03-08 23:05:00+00:00","[FIXED JENKINS-33414] Added an API to allow
identification of the Jenkins JVM  - Fix the
ProxyConfiguration code to not require Jenkins
class to be loaded in remote JVMs
",91603,1291,65601,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7268","jenkinsci/jenkins","a552cdb78ba247fabfbdb3c4c34901574e3bd991",2,"2016-03-18 20:56:30+01:00","[JENKINS-31162] Big review of the current approach
",92948,1306,66498,"recena","mrecena@cloudbees.com","recena","mrecena@cloudbees.com"
"7269","jenkinsci/jenkins","eefafb2b38a5ee5cf51c72a1e9c902ec6f38dc8e",5,"2016-03-21 10:33:58+01:00","[FIXED JENKINS-33683] Clarify Action methods can
return null
",92468,1296,65806,"Oliver Gondža","ogondza@gmail.com","Oliver Gondža","ogondza@gmail.com"
"7270","jenkinsci/jenkins","8fdca297132b953b5572c97480b8017695f92d6d",1,"2016-03-22 11:07:31+01:00","[JENKINS-33683] Annotate Function#getActionUrl()
as well
",92468,1296,65808,"Oliver Gondža","ogondza@gmail.com","Oliver Gondža","ogondza@gmail.com"
"7271","jenkinsci/jenkins","57e73a3575d4e1fb332e6e41afd282bdecf3d473",1,"2016-04-01 09:27:08+02:00","[JENKINS-21486] Verify core version
",92554,1297,65842,"Vincent Latombe","vincent@latombe.net","Vincent Latombe","vincent@latombe.net"
"7272","jenkinsci/jenkins","49d10a9034b280b5e59535519c3f0d12d96c9f2d",1,"2016-04-21 13:42:49+01:00","[SECURITY-243] introduce a new API to get a user
by their id.  Introduce a new API User.getById
that will only ever get a user by their ID as
suggested by @jglick (adapted from the original
suggestion).
",92513,1326,67024,"James Nord","jnord+github@cloudbees.com","James Nord","jnord+github@cloudbees.com"
"7273","jenkinsci/jenkins","5d1f81c56c9635ec53dce2b60563047837361251",3,"2016-05-08 14:50:11+02:00","[FIXED JENKINS-34675] - Prevent hanging of the
WebUI if the default Update Site ID cannot be
resolved.  Also hardens the Java code a bit.
",95824,1315,67339,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7274","jenkinsci/jenkins","61a9ea606e67f4b17bcbca20dd7b27ce51a835d9",3,"2016-05-12 12:19:43+02:00","[JENKINS-34755] - Polish the code a bit
",97050,1324,67778,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7275","jenkinsci/jenkins","930f6308a5e0b29a45b88b626f51b246107e2830",1,"2016-05-12 15:11:45+02:00","[JENKINS-34705] - Prevent hanging of
InstallationWizard if internet check is skipped
(#2328)
",97165,1324,67668,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7276","jenkinsci/jenkins","768da3e241417da47f306ac2e32fbc14c31be8c8",2,"2016-05-14 15:37:04+02:00","[JENKINS-34733] - Allow overriding Jenkins
UpdateCenter by a custom implementation (#2332)  *
[JENKINS-34733] - Allow overriding Jenkins
UpdateCenter by a custom implementation    *
[JENKINS-34733] - Reduce the logging level for the
custom update center selection    * [JENKINS-34733
and JENKINS-34674] - Use SystemProperties in the
UpdateCenter
",97520,1328,67936,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7277","jenkinsci/jenkins","454642dafee66d557f48dec9ae2708f2f220f535",15,"2016-05-14 21:32:55+02:00","[JENKINS-34681] Allow custom plugin managers when
using war (#2323)  * [JENKINS-34681] Allow custom
default plugin managers    * [JENKINS-34681]
Convert remaining properties to SystemProperties.
",97638,1329,68006,"Andres Rodriguez","andresrc@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7278","jenkinsci/jenkins","bb1f620d0abfee671f65abbeffef5e3d2fd8cfed",1,"2016-05-15 17:05:12+02:00","[JENKINS-34833] - Installation Wizard: Allow
altering the list of suggested plugins from update
sites (#2348)  * [JENKINS-34833] - Installation
Wizard: Allow altering the list of succested
plugins from update sites    In our company we
provide a custom package of Jenkins, which
provides a customized set of plugins (open-source
and closed-source ones). These plugins come from
the custom update site.    We would like to
provide custom suggestions to users of our Jenkins
packages when they install Jenkins. For such
purpose we would like to make the plugin
suggestions list overridable by UpdateSite
extensions in Jenkins.    * [JENKINS-34833] - Fix
the JS Unit test (code from @kzantow)    *
[JENKINS-34833] - Unit tests for SetupWizard    *
[JENKINS-34833] - Address comment regarding the
error propagation for the unknown version    *
[JENKINS-34833] -
SetupWizard::getPlatformPluginList() is not a part
of the public API    * [JENKINS-34833] - Address
comments from @orrc
",97861,1330,68072,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7279","jenkinsci/jenkins","89a24abcb0eabc36c7281979d1620c92b6a128a9",2,"2016-05-20 09:35:16-04:00","[FIX JENKINS-33663] - Upgrade wizard  Add Upgrade
Wizard Add 'replace' handlebars method in
jenkins.js Fix state transitions to follow a
single basic pattern Suggested plugins selected by
default Add an install state for
INITIAL_SECURITY_SETUP Removed duplicate
setupWizard.js on page [FIX JENKINS-34676] Exclude
plugins which are already installed when
determining platform Change 'snooze' to not look
like a 'close' button Make sure unlock screen
doesn't show up after new install Add
compatibility check when offering suggested
plugins More appropriate handling of security
token filter
",98168,1331,68145,"kzantow","kzantow@gmail.com","kzantow","kzantow@gmail.com"
"7280","jenkinsci/jenkins","1d2b15173c48c3a78d6b96d99f6e045f43ff07bc",1,"2016-05-21 09:36:18+04:00","[JENKINS-34854] - Migrate missing settings to
SystemProperties (#2362)  * [JENKINS-34854] -
Migrate missing Integer and Boolean properties to
SystemProperties    * [JENKINS-34854] - API
methods for Long variables    * [JENKINS-34854] -
Migrate Long settings to SystemProperties    *
[JENKINS-34854] - Leftover change (I should use
Save All)    * [JENKINS-34854] - Some fixes in
Long methods Javadoc and log messages
",98192,1331,68172,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7281","jenkinsci/jenkins","200a0beb74298444149b459de970b82043ec4998",1,"2016-06-16 13:21:04+02:00","[JENKINS-33600] - User#isIdOrFullnameAllowed()
should be tolerant against null parameters (#2406)
* [JENKINS-33600] - User#isIdOrFullnameAllowed()
should be tolerant against null parameters    *
[JENKINS-33600] - Add the follow-up TODO
",98794,1338,68397,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7282","jenkinsci/jenkins","b9e616ffe22af5e17202039f6a77c08d05ffd99c",3,"2016-06-29 11:08:51+01:00","[JENKINS-36280] Address review comments
",98988,1339,68520,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7283","jenkinsci/jenkins","0203504a2cc39b5c1b92495c5f7aefe6ad403c22",1,"2016-07-07 11:46:45+01:00","[FIXED JENKINS-36494] Switch to a try with
resources form of impersonation
",99206,1342,68598,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7284","jenkinsci/jenkins","d00d5b1e342661a423c821311549e29cf7469a00",4,"2016-07-08 08:12:59+02:00","Annotate DescriptorList methods and add Javadocs
(#2434)
",99204,1341,68536,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7285","jenkinsci/jenkins","fefd61c87d9d19ba786178410473a60315707923",1,"2016-07-11 15:08:17+02:00","[JENKINS-35493] Introduce a UserDetails cache  to
fix performance regression after SECURITY-243
",99326,1343,68591,"Robert Sandell","rsandell@cloudbees.com","Robert Sandell","rsandell@cloudbees.com"
"7286","jenkinsci/jenkins","994fd9ffdd29261ac83c7f6d8b4f682da636e07c",1,"2016-07-15 17:32:47+04:00","Annotate and document the
AsynchronousExecution#getExecutor() method (#2447)
",99762,1347,68818,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7287","jenkinsci/jenkins","5a3823e85cf2275f8b790288307016a8d8ff935e",4,"2016-07-25 13:12:52-04:00","Adding a few nullability annotations.
",100768,1357,69140,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7288","jenkinsci/jenkins","16b0aede6ae4b68f223bf3dd972ddef3b982429c",1,"2016-07-26 15:24:15+01:00","[JENKINS-36871] Advertise the instance identity
for the TCP Agent details page
",100843,1359,69232,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7289","jenkinsci/jenkins","9743db3cff37490a89fc5b54cadde550dd34a18b",4,"2016-07-26 20:55:53+01:00","[ENKINS-36923] This seems like a better way to
access the keys
",100989,1361,69296,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7290","jenkinsci/jenkins","b9110629239ba74fac43f0e7816a57ceb2b63c1a",4,"2016-07-26 21:11:15+01:00","[JENKINS-36871] Make the provider methods
protected now that we go through the KeyTypes
singletons
",100989,1361,69296,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7291","jenkinsci/jenkins","cd2416745847c87ef630ad89367c1b63450dbe18",2,"2016-07-27 10:29:25-04:00","[JENKINS-29922] Correct the default value handling
of ArtifactArchiver.excludes.
",101066,1361,69298,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7292","jenkinsci/jenkins","eb0f66554a680bc631b334be0e05a6b0bdee6504",3,"2016-07-29 10:17:47+01:00","[JENKINS-37032] Switch to element per protocol XML
format  - Also switch the A/B testing of
JNLP3-connect to via opt-in - Also mark that
JNLP3-connect will be deprecated by JENKINS-36871
- Also start A/B testing the disabling of JNLP-
connect and CLI-connect (should be well safe by
now)
",101173,1361,69415,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7293","jenkinsci/jenkins","50ecfb420f03b63de9f57689685eb691a10aa680",2,"2016-08-19 23:36:17+02:00","FindBugs: Fix NPE in XStream2#findConverter() when
class parameter is null
",101648,1364,69579,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7294","jenkinsci/jenkins","96c97860b0f018094c20283b15f3ddb3bdd9effe",1,"2016-08-21 00:00:41+02:00","[FIXED JENKINS-37332] - Prevent File descriptor
leaks when reading manifests from JARs (#2516)  *
[JENKINS-37332] - Improve diagnostics of non-
closed streams during reading of the manifests in
PluginManager    * [JENKINS-37332] - Leakless
processing of JarUrlConnection during Manifest
parsing    * [JENKINS-37332] - Also implement
leak-safe method for retrieving file modification
date    * [JENKINS-37332] - Add spotcheck methods
for manifest file access + Javadoc    *
[JENKINS-37332] - Also test multi-line and empty
attributes in the test
",101740,1364,69626,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7295","jenkinsci/jenkins","8acc12ff7933774dd92c37d3ca5ac1c77f217b39",2,"2016-08-23 12:55:38+02:00","[FIXED JENKINS-36537] Allow the use of custom json
signature validator for metadata signature check
(#2442)
",101805,1365,69669,"valentina","varmenise@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7296","jenkinsci/jenkins","5d3b23daf7e52c511fd594665ef8d648bb7bb121",1,"2016-09-09 16:33:23+03:00","[FIXED JENKINS-37997] FIX NPE when descriptor is
not in DescriptorList (#2536)  For example when
Descriptor was defined as field and without
@Extension .    Signed-off-by: Kanstantsin
Shautsou <kanstantsin.sha@gmail.com>
",101938,1368,69753,"Kanstantsin Shautsou","kanstantsin.sha@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7297","jenkinsci/jenkins","cbfd63d375fa034c4d2caadd4aa6357e0e002e2b",1,"2016-09-21 08:43:28+02:00","Use CheckForNull
",101981,1368,69784,"Oliver Gondža","ogondza@gmail.com","Oliver Gondža","ogondza@gmail.com"
"7298","jenkinsci/jenkins","359548efa074f9ed3537552f5f9f2b51faf33e25",2,"2016-09-22 16:44:57+02:00","Fix for 23786 Permit 'Execute shell' jobs to
return 2 for 'unstable'  refactor and fix  remove
duplication and fix FB errors  fix integration
tests  consistency fixes  consistency fixes
changed error message to warning  fix comment and
warning message  fix comment  fix junit tests  fix
junit tests  fix junit tests  fix junit tests
clean import  a commit to trigger jenkins checks
",102266,1369,69832,"stochmim","mateusz.stochmial@tomtom.com","stochmim","mateusz.stochmial@tomtom.com"
"7299","jenkinsci/jenkins","71cbe0cc7c601c04509faa618b23194335288fee",6,"2016-10-20 12:01:30+01:00","[JENKINS-36871, JENKINS-37565] JNLP4-connect
implementation and Remoting 3 (#2492)  *
[JENKINS-36871] Switch to the new
JnlpProtocolHandler based implementation    Todo
- [ ] Restore the cookie behaviour (but done right
this time)  - [ ] Perhaps investigate issuing
clients with TLS certificates (but would require a
UI for managing them)    * [JENKINS-36871] License
headers and javadocs    * [JENKINS-36871] Restore
cookie handling    * [JENKINS-36871] Integrating
Agent discovery components    * [JENKINS-36871]
Pick up remoting 3.0-SNAPSHOT    * [JENKINS-36871]
Pick up newer snapshot    * [JENKINS-36871] Oleg
wants to log an exception that cannot happen
",102201,1371,69987,"Stephen Connolly","stephen.alan.connolly@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7300","jenkinsci/jenkins","1990e3d09af760ee0cf8d73ce5a018407e310224",1,"2016-11-01 13:17:25+00:00","[FIXED JENKINS-39404] Restore symmetry by adding
removeAction and removeActions methods to
Actionable
",102450,1371,70079,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7301","jenkinsci/jenkins","91ad59214234e7724d586f64f8fb6db35104857b",1,"2016-11-13 22:39:04+01:00","[FIXED JENKINS-38721, JENKINS-37282] - NPE in
""CauseOfInterruption.UserInterruption"" when user
is missing (#2630)  * [FIXED JENKINS-38721] -
Prevent NPE during rendering of
""CauseOfInterruption.UserInterruption"" when user
is missing    It is a regression introduced in
JENKINS-36594    * [JENKINS-38721] - Fix typo
",102781,1371,70160,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7302","jenkinsci/jenkins","20d3f114539c590330e2f1eaddb41f9fcb76b958",1,"2016-11-25 09:45:28+01:00","Be able to specify the log Level when system
property is not found or invalid  Some properties
are more important than others. One may for
example  want to log a WARNING instead of the
current default CONFIG when some property can not
be found, or has an invalid format (like a string,
when asking for an Integer).
",104573,1408,71278,"Baptiste Mathus","batmat@batmat.net","Baptiste Mathus","batmat@batmat.net"
"7303","jenkinsci/jenkins","8d23041d4b785947dee1bc02f54a41d86b59bdda",2,"2016-12-09 05:04:22-05:00","[JENKINS-38514] Retain CauseOfBlockage from
JobOffer (#2651)  * Converted to JenkinsRule.    *
Improved messages from Node.canTake.    * [FIXED
JENKINS-38514] BuildableItem needs to retain
information from JobOffer about why it is neither
blocked nor building.    * Converted to
JenkinsRule.    * Found an existing usage of
BecauseNodeIsNotAcceptingTasks.    * Original
JENKINS-6598 test was checking behavior we want
amended by JENKINS-38514.    * Ensure that a
BuildableItem which is simply waiting for a free
executor reports that as its CauseOfBlockage.    *
Review comments from @oleg-nenashev.
",104974,1409,71356,"Jesse Glick","jglick@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7304","jenkinsci/jenkins","a1258c0009bbdbe1a7de19ce383b5eac8bf4296f",2,"2016-12-16 22:52:09+01:00","[JENKINS-40365] add Node#getNodeProperty methods
(#2663)  * [JENKINS-40365] add getNodeProperty
methods    * implement getNodeProperty in
DummySlave    * implement getNodeProperty in Node
avoid binary imcompatible change  dded javadoc
* revert Slave.jar to original    * fix formatting
* more formatting
",105460,1410,71519,"Markus Winter","m_winter@gmx.de","Oleg Nenashev","o.v.nenashev@gmail.com"
"7305","jenkinsci/jenkins","c252a764024a94f018fe34dc58702885a48fff8f",4,"2017-01-08 22:27:08+01:00","[JENKINS-40494] Process warnings from update sites
(#2680)  * [FIX JENKINS-40494] Process warnings
from update sites    * [JENKINS-40494] Address
review comments    * [JENKINS-40494] Add warnings
to available/update plugin manager tabs    *
[JENKINS-40494] Add tests    * [JENKINS-40494]
Address review feedback
",105899,1412,71834,"Daniel Beck","daniel-beck@users.noreply.github.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7306","jenkinsci/jenkins","5b370be0871d81b7b7d774ff9f0ee3f8478ea2c9",4,"2017-01-16 12:55:05+01:00","Clarify PluginManager#getPlugin() and
Jenkins#getPlugin() methods
",105949,1412,71844,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7307","jenkinsci/jenkins","3cd946cbef82c6da5ccccf3890d0ae4e091c4265",3,"2017-01-12 16:34:49-05:00","Merge pull request #80 from jenkinsci-
cert/SECURITY-362  [SECURITY-362] Do not persist
User in OfflineCause.UserCause
",97831,1390,69460,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7308","jenkinsci/jenkins","61acefc1dd0166403881487bc953e893b0a1dc19",1,"2017-01-31 09:51:12-08:00","Switch to a mixin approach  Also bumping to a
distinct SNAPSHOT version for dependency builds.
",106294,1414,71909,"Andrew Bayer","andrew.bayer@gmail.com","Andrew Bayer","andrew.bayer@gmail.com"
"7309","jenkinsci/jenkins","4343c8697155559d07a86b3d7367d96e01836597",4,"2017-02-09 21:57:08+03:00","Annotations for FederatedLoginService.  Signed-
off-by: Kanstantsin Shautsou
<kanstantsin.sha@gmail.com>
",107600,1420,72220,"Kanstantsin Shautsou","kanstantsin.sha@gmail.com","Kanstantsin Shautsou","kanstantsin.sha@gmail.com"
"7310","jenkinsci/jenkins","ba37bf51cb960efc93ebd53f87cfe9b9679a5107",1,"2017-03-01 16:44:04-05:00","Noting that ParameterValue.getValue can on
occasion return null.
",107911,1423,72323,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7311","jenkinsci/jenkins","8302b8502416d2278f58a61e41c18036c08241d7",1,"2017-03-11 13:10:02-05:00","Draft of a new CLI transport that can operate over
CLIAction with the regular HTTP(S) port.
",108793,1430,72560,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7312","jenkinsci/jenkins","43d612f984572bfd764009b0a46184cb535f97ce",1,"2017-03-30 15:26:08+02:00","[FIX JENKINS-43228] Consider time zone for cron
validation
",108359,1428,72545,"Daniel Beck","daniel-beck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7313","jenkinsci/jenkins","52a1a1035fa71a2e023e93c083a626898bcb0d47",1,"2017-04-14 08:33:54+01:00","[FIXED JENKINS-35160] - Job deletion: Wait up to
15 seconds for interrupted builds to complete
(#2789)  * [FIXED JENKINS-35160] Wait up to 15
seconds for interrupted builds to complete    -
Also now aware of concurrent builds    *
[JENKINS-35160] Tests are good, they catch bugs
* [JENKINS-35160] We should do the interrupt for
any Item not just Jobs    * [JENKINS-35160]
s/DeleteBlocker/ItemDeletion/g    Left over
references before I settled on a better name    *
[JENKINS-35160] Switch to Failure for better HTML
rendering    * [JENKINS-35160] Align the i18n key
with owning class
",109722,1438,72964,"Stephen Connolly","stephen.alan.connolly@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7314","jenkinsci/jenkins","4074818b97d50b98b754f723842f03306a1ddaea",4,"2017-04-22 15:08:04+02:00","[JENKINS-42717] - Prevent NPE when a non-existent
Default View is specified in the global config
(#2815)  * [JENKINS-42717] - Document view
management methods in Jenkins and ViewGroupMixIn
* [KENKINS-42717] - GlobalDefauldViewConfiguration
should not fail with NPE when the view is missing
* [JENKINS-42717] - Draft the direct unit test
* [JENKINS-42717] - Fix the tes implementation
* [JENKINS-42717] - Make FormException localizable
* [JENKINS-42717] - Fix te build glitch
",109926,1440,73032,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7315","jenkinsci/jenkins","132ca7cffe9162b4b04bf52d2cf13a44c0f902e0",2,"2017-04-23 18:22:22+02:00","[JENKINS-43653] - Ensure AbstractItem#delete() NPE
safety when checking executors (#2854)  *
[JENKINS-43653] - Ensure AbstractItem#delete() NPE
and RTE safety when checking executors.    This
change adds missing NPE checks and also improves
handling of Executables#getParentOf(), which may
throw undocumented Runtime exceptions if
Executable uses core API below 1.377 and does not
implement getParent(). Executor#stop() has been
also modified to explicitly handle the issue
though there is still the same issue with
estimated execution times.    * [JENKINS-43653] -
Address comments from @jglick, restrict newly
introduced API    * [JENKINS-43653] - Address
comments from @stephenc    * [JENKINS-43653] -
Cleanup ""unrelevant"" changes to make @stephenc and
@jglick happy    * [JENKINS-43653] - Cleanup the
leftover    * [JENKINS-43653] - Drop the changes
in Executables
",109934,1440,73035,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7316","jenkinsci/jenkins","39136804e53bf9f34cc91fdf3c64ab57d976eac3",1,"2017-05-02 10:28:10-04:00","Rework to solo RunWithSCM interface
",110366,1443,73103,"Andrew Bayer","andrew.bayer@gmail.com","Andrew Bayer","andrew.bayer@gmail.com"
"7317","jenkinsci/jenkins","ae1fdc95a1d50df65a97447ff536d21cb2c5dba2",1,"2017-05-03 10:36:51-04:00","[FIXED JENKINS-44010] It is possible for
Jenkins.crumbIssuer to be unset while the setup
wizard is running.
",110301,1442,73074,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7318","jenkinsci/jenkins","37dfa992eb1a6aba5e25b791703001f7516d5b63",1,"2017-05-13 06:21:05-04:00","Offering default methods on ParameterizedJob
(#2864)  * Offering default methods on
ParameterizedJob.    * Javadoc typo.    * Cleaner
use of default methods in ParameterizedJob.    *
Need to pick up
https://github.com/infradna/bridge-method-
injector/pull/15 to be able to build.    * Using
new type bounds.    * bridge-method-injector 1.17
",110439,1443,73155,"Jesse Glick","jglick@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7319","jenkinsci/jenkins","d13b1361e1650494528a7b46f82fe25d7fb5e3c3",1,"2017-05-20 06:32:52-04:00","Adding some interface default method
implementations (#2879)  * Adding some interface
default method implementations rather than
catching AbstractMethodError or providing partial
implementation classes.    * Show Javadoc warnings
and errors, but not ‚ÄòGenerating ‚Ä¶/core/target/site
/apidocs/jenkins/model/lazy/class-
use/AbstractLazyLoadRunMap.html...‚Äô and the like.
* Javadoc fixes.    * Review comments from @oleg-
nenashev.    * Test fixes.    * Remove the unused
import
",110549,1446,73173,"Jesse Glick","jglick@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7320","jenkinsci/jenkins","095310afdd78f4c922a4d085d38e1e5e21c9ba82",30,"2017-06-24 19:17:11+02:00","Annotate and document methods of hudson.Launcher
(#2920)  * Annotate and document methods of
hudson.Launcher    * Fix newly introduced FindBugs
issues in hudson.Launcher    * Remove brackets
from FilePath#createLauncher() to avoid the merge
conflict
",110773,1448,73256,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7321","jenkinsci/jenkins","bcf55ecd7f8a22046c5cb3c4c50016d936e5460c",1,"2017-07-01 08:11:16+02:00","[JENKINS-43496] - Add handling of the null
Node#createComputer() result. (#2922)  *
[JENKINS-43496] - Add handling of the null
Node#createComputer() result.    it is a follow-up
to https://github.com/jenkinsci/jenkins/pull/2836#
discussion_r110604865    De-facto many Cloud
plugins return `null` in `Node#createLauncher()`,
but it has never been documented.  In order to
prevent possible API misusages in the future, I
have added annotations and fixed handling of the
extension point in
`AbstractCIBase#updateComputer()` which may fail
in the case of `null` or `RuntimeException` in the
Node implementation.    * [JENKINS-43496] - Use
ProtectedExternally to protect
Node#createComputer()    * [JENKINS-43496] -
Remove the erroneous Nonnull annotation after the
feedback from @jglick    * [JENKINS-43496] - Fix
typos noticed by @daniel-beck
",110969,1448,73290,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7322","jenkinsci/jenkins","9dc2cdbb4892ddfb1579658fc88b4018a1ad7d8a",6,"2017-07-29 21:32:16+03:00","[JENKINS-44112] - Enable WorkDir in JNLPLauncher
(#2945)  * [JENKINS-44112] - Enable Work
Directories by defaul in new agents with JNLP
launcher    * [JENKINS-44112] - Add test for the
legacy data migration    * [JENKINS-44112] - Add
test for API calls    * [JENKINS-44112] - Apply
new APIs within core and tests    *
[JENKINS-44112] - Cleanup tests    *
[JENKINS-44112] - Cleanup API of JNLPLauncher    *
[JENKINS-44112] - Address the leftover code review
comments
",111158,1450,73499,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7323","jenkinsci/jenkins","efdd52e9e78cc057ea49a7d338ee575d131c1959",3,"2017-08-19 18:23:31+02:00","[JENKINS-45841] - Disable JNLP/JNLP2/CLI protocols
on new installations (#2950)  * [JENKINS-45841] -
Disable JNLP/JNLP2/CLI protocols in the Setup
Wizard    * [JENKINS-45841] - Implement
deprecation data model for Agent protocols.    WiP
* [JENKINS-45841] - DeprecationCause is YAGNI,
extend UI and document deprecated protocols    *
[JENKINS-45841] - Fix the layouts    *
[JENKINS-45841] - Add administrative monitor for
deprecated protocols    * [JENKINS-45841] - Added
Initializer check, polished the warning message
* [JENKINS-45841] - Add tests    * [JENKINS-45841]
- Replace JNLP protocol links by jenkins.io
redirects    * [JENKINS-45841] - Address comments
from @jglick    * [JENKINS-45841] - Initializer
checks status when Jenkins instance is not ready
",111081,1454,73501,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7324","jenkinsci/jenkins","bde6413f5db8f1b37731316d7e84856e277f43f0",1,"2017-09-05 20:29:49+08:00","[Fix JENKINS-46161] Add javadoc and annotation
CheckForNull
",111203,1455,73516,"liketic","ke.like@outlook.com","liketic","ke.like@outlook.com"
"7325","jenkinsci/jenkins","dbb5e443b96ddc7472207862e9e60d807666f72c",1,"2017-09-15 18:44:50+02:00","[JENKINS-46680] Disconnect computer on ping
timeout (#3005)  * [JENKINS-46680] Reproduce in
unittest    * [FIX JENKINS-46680] Reset
SlaveComputer channel before closing it on ping
timeout    * [JENKINS-46680] Attach channel
termination offline cause on ping timeouts
",111315,1457,73573,"Oliver Gondža","ogondza@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7326","jenkinsci/jenkins","fddffb4fbceb50e0c8801044319e84dc6f9b7e90",1,"2017-09-22 17:05:36+08:00","[Fix JENKINS-23411] Throws Failure if the item
does not exist (#3007)  * [Fix JENKINS-23411]
Throws Failure if the item does not exist    *
[Fix JENKINS-23411] Adress wording in error
message
",111383,1458,73611,"kel","like_0903@163.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7327","jenkinsci/jenkins","be0238644911948da4123b5338f0299198dcc048",2,"2017-10-15 09:20:52+02:00","[JENKINS-20046] - Do not query queue dispatchers
from UI (#3038)  * Do not query queue dispatchers
from UI    * Address comments from review    *
Restore old constructors and mark them as
@deprecated  * Optimise query from UI even more
* Check non-concurrent builds in
getCauseOfBlockageForItem
",112155,1462,73813,"Akbashev Alexander","mr.akbashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7328","jenkinsci/jenkins","50eb7f1c5662d2554239660713203a38664d9b65",1,"2017-10-20 03:03:42-04:00","Slave.JnlpJar.getURL did not work in some modes
when core had a snapshot dependency on Remoting.
(#3069)
",111917,1457,73663,"Jesse Glick","jglick@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7329","jenkinsci/jenkins","903b4461d37170ccda49ce6637adf7cf4a261b93",2,"2017-10-30 14:20:57-04:00","[JENKINS-47736] Switch Remoting/XStream blacklist
to a whitelist.
",112402,1463,73862,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7330","jenkinsci/jenkins","27f0abd4145a6db5ecf3e2b771aa19c0ee4925e8",2,"2017-10-30 20:53:42+01:00","[FIXED JENKINS-47181] - Recover the agent protocol
handling tests. (#3118)  * [FIXED JENKINS-47181] -
Recover the agent protocol handling tests.    The
protocol handling logic does not longer use bogus
assumptions anymore.  Instead of that, there are
extra `MockAgentProtocol` instances (to be moved
to JTH?)    * Extremely important fix to retrigger
the PR builder
",112027,1459,73702,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7331","jenkinsci/jenkins","8cb3351319358c056556bd568f0e883d982f6d22",1,"2017-11-19 13:25:15+01:00","[JENKINS-47718] - Deprecate User#getUser(String)
(#3114)  * [JENKINS-47718] - Deprecate
User#getUser(String)    `User#getUser(String)`
method causes lots of confusion for plugin
developers. It implicitly creates a user if it
cannot be found, and in many cases this is
actually a not-expected behavior. This change
deprecates the method and to creates a new
`User#getOrCreate()` which is more explicit    *
[JENKINS-47718] - Address comments from @jglick
",112696,1464,73816,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7332","jenkinsci/jenkins","b2c40cb9e0db72c978b3a50be0d4c467cb33eb20",1,"2017-11-21 14:18:01+01:00","Cache permission id to avoid allocating of new
strings  Every request that comes from Jelly is
checked against Permissions. As result it leads to
a call of `getId` method that produces the new
string. Usually it's not a problem, but in case of
stop-the-world pause user requests are
accumulated. So, once pause is finished, we
forcibly allocated tons of strings for every
request. That leads to new stop-the-world pause.
(And this cycle can repeat multiple times)
",111976,1459,73681,"Alexander Akbashev","mr.akbashev@gmail.com","Alexander Akbashev","mr.akbashev@gmail.com"
"7333","jenkinsci/jenkins","00ccd23f6441a55bfd625660911d4bc79c7578ba",1,"2017-11-22 09:34:57+01:00","If task can be run only on master, use shortcut
Currently Jenkins to fire WorkflowJob re-
calculates the ConstistentHash for entire cluster
even if there is no nodes were updated. If cluster
is big enough (>100 nodes), it becomes a problem,
because MD5 is quite expensive itself plus all
this logic comes with high memory footprint.
Using the knowledge that WorkflowJob can be
executed only on Jenkins master, we can create a
shortcut that does not do expensive calculation
and just returns Runnable or `null`.
",111982,1459,73680,"Alexander Akbashev","mr.akbashev@gmail.com","Alexander Akbashev","mr.akbashev@gmail.com"
"7334","jenkinsci/jenkins","211b57e8b002b4da92743dfac3a1b902835e7652",5,"2017-11-26 15:51:46+03:00","[JENKINS-48157] - Risk of NPE when migrating
MyViewProperty without PrimaryView (#3156)  *
[JENKINS-48157] - Reproduce the issue in test    *
[JENKINS-48157] - Annotate and document nullness
conditions in MyViewsProperty and ViewGroupMixIn
* [FIXED JENKINS-48157] - Prevent NPEs when using
public API and when using null primaryViewName
* [JENKINS-48157] - Fix typo in Javadoc
",112704,1464,73849,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7335","jenkinsci/jenkins","8824857752f89ebaddf7a814c65b31b9c155ab2f",11,"2017-12-01 10:00:49+03:00","Add default implementations of deprecated methods
of BuilableItem and Item. (#3142)  * Add default
implementations to deprecated methods of
BuilableItem and Item.    Currently the interface
requires the API user to implement already
deprecated methods.  It does not make much sense,
and the API could be simplified.    * Address
comments from @jglick
",112816,1466,73915,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7336","jenkinsci/jenkins","51b0f2f5d31cd8cbec5a11fb070b02cb3a077fe3",1,"2017-12-13 17:17:16-05:00","Redesigned fix to run from XStream2.unmarshal.
",114845,1489,74281,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7337","jenkinsci/jenkins","14605fea838947546da600faff9483cf2ba3f4eb",3,"2017-12-14 20:45:24+01:00","Introduce the new UserIdCause constructor, which
accepts userId as an argument. (#3162)  *
Introduce UserIdCause constructor, which accepts
userId as an argument.    * [JENKINS-48467] -
UserIdCuase: Add issue link in the TODO comment
",114824,1490,74362,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7338","jenkinsci/jenkins","001a33c747feb437a1bf5f0349b6988f517ec9a8",1,"2017-12-22 11:29:49-05:00","[JENKINS-48638] Deprecate Jenkins.getInstance in
favor of (usually) get (#3195)  * Deprecate
Jenkins.getInstance in favor of (usually)
getActiveInstance.    * Introduced get() as a
concise non-null accessor.    * May as well
suggest rewrites of getActiveInstance too.
",115127,1493,74448,"Jesse Glick","jglick@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7339","jenkinsci/jenkins","193855d1fb82e980e93f0c9ce3c15c459d448fab",1,"2018-01-25 17:05:37-05:00","[JENKINS-47142] Simplifying the logic of
ArtifactArchiver.perform, making it friendlier to
Pipeline.
",116185,1504,74854,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7340","jenkinsci/jenkins","ef52f07eeac7153856d540cb244a34f96cf28bcb",1,"2018-01-26 14:56:24+01:00","[JENKINS-32776] API Tokens not more stored in a
recoverable format - rewrite the groovy view into
jelly one - remove old config_xx.properties - add
capabilities on token: list/generate/revoke -
stored using BCrypt hashes - migration from Legacy
API Token
",116617,1507,75004,"Wadeck Follonier","wadeck.follonier@gmail.com","Wadeck Follonier","wadeck.follonier@gmail.com"
"7341","jenkinsci/jenkins","671772bf1c545c1853bf7bf73cc9189a5bc89eab",1,"2018-01-29 09:45:07+01:00","Improvement to keep pure compatibility with legacy
system
",116677,1508,75050,"Wadeck Follonier","wadeck.follonier@gmail.com","Wadeck Follonier","wadeck.follonier@gmail.com"
"7342","jenkinsci/jenkins","6cefcf17a8d92b43b738ec6cd5a2cf298cc1156e",1,"2018-02-02 16:17:55+01:00","[JENKINS-48407] Re-enable AtomicFileWriterTest#che
ckPermissionsRespectUmask() (#3275)  *
[JENKINS-48407] Re-enable test    The previous
test assumed permissions would always be the same,
when they actually depend on umask settings.
This change creates a file *not* using the
temporary API, gets its  permissions then compares
it to the ones obtained using  AtomicFileWriter.
Note: we now only check the given permissions, not
the ""non-given"".    * Use assertThat(...,
equalTo()) instead of a manual loop    * Remove
unused imports    * Use TemporaryFolder instead of
manual temporary dir creation
",116300,1505,74941,"Baptiste Mathus","bmathus@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7343","jenkinsci/jenkins","7f839d8277ce1ea43b43a762540a2b81cc4eb665",2,"2018-02-05 23:43:54+01:00","Fixing nullability annotations on Util.escape.
",116436,1508,74968,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7344","jenkinsci/jenkins","3f01a774662d0e6e3d4f644e6a3197009f0c7b14",1,"2018-02-19 18:01:52-05:00","[JENKINS-49635] Defining new VirtualFile methods
to better support external artifact storage.
",116892,1509,75077,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7345","jenkinsci/jenkins","e3e6d570f7065fb2d55287a98ef3b24b6a0b2e6a",1,"2018-02-21 15:55:38-05:00","VirtualFile.readLink
",117061,1509,75098,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7346","jenkinsci/jenkins","145c606e83498ca39430d7d3969c50418b26b925",1,"2018-03-07 15:02:52-08:00","Refactor TextFile.lines() (#3211)  * Refactor
TextFile.lines()    Introduces a LinesStream
utility class that is responsible for closing  the
underlying file handle.    Switches to calling
Files.newBufferedReader() instead of wrapping the
InputStream returned by Files.newInputStream() in
a BufferedReader of  an InputStreamReader.
Creates the file reader at the time that lines()
is invoked, instead of  at the time that
iterator() of the returned Iterable is invoked.
This  can help prevent confusion as to the cause
of an exception, whether it's  because of a
problem opening the file or reading from it.    *
Delete a duplicate import and a now-unused import
* Introduce load2()    * Add a @Deprecated
annotation
",117143,1512,75250,"Daniel Trebbien","dtrebbien@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7347","jenkinsci/jenkins","07d18cfd6d336a2b7cc0a78e120d9739a5d4e1d1",7,"2018-03-28 22:56:07+02:00","[SECURITY-759]
",110642,1441,72913,"Wadeck Follonier","wadeck.follonier@gmail.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7348","jenkinsci/jenkins","6eea1e97840b5623829b2c1fd2e363c045bdc230",2,"2018-04-25 23:37:50+02:00","[SECURITY-794]
",112259,1459,73624,"Wadeck Follonier","wadeck.follonier@gmail.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7349","jenkinsci/jenkins","6dc32977fc6772a2e18452672d69b8b93ea3e832",3,"2018-03-17 13:50:58+01:00","Add support for SHA-256/512 in update site
metadata
",118165,1517,75439,"Daniel Beck","daniel-beck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7350","jenkinsci/jenkins","17b94a044a03e49ca7f4a87af69a993354ec0df1",2,"2018-04-26 16:58:29+02:00","[JENKINS-31661] Check the root url (Admin monitor
+ Wizard) (#3082)  * [JENKINS-31661] Add an
administrative monitor to check the root url
configuration  - add the monitor + test    * -
corrections requested by Oleg in code review    *
- add a field to fill during SetupWizard for the
rootUrl (default value using javascript but
editable)  - WIP : missing the translation    * -
revert whitespace change    * - little refactoring
of js methods    * - translation added    * -
modification requested during PR by Jesse    * -
renaming proposed by Keith    * - rework to have a
new page in the SetupWizard for the root URL    *
Correct relevant non-conflicting merge changes
* - in case of skip => also skip the instance
configuration  - terminate => finish (+ uppercase)
- replace double single quotes  - add help message
in the wizard to inform admins  - correct the
installState serialization problem  - update
working (admin monitor + wizard)    * address
Daniel's comment  - skip all steps will show two
messages instead of one (like before when clicking
on skip twice)  - skip => not now  - remove margin
and adjust padding for the wizard forms  - add the
""if possible""    * address Arnaud's comment on the
sauter vs passer    * address Liam's comment    *
correct previous commit typo    * correct previous
commit typo (2)    * add blank end line    *
address James' comment    * address Daniel's
comment    * address Devin's comment  - implement
error management in the wizard  - provide
different message in the monitor in case of null /
invalid url  - add an helper to validate URL (even
with _ in domain)  - add @Restricted    * - also
update the monitor test to be consistent with its
new behavior    * address Devin's comments    *
correct header files    * include relevant classes
for the url validation from commons-validator:1.6
* Move Apache classes in a more standard package
",118616,1525,76187,"Wadeck Follonier","Wadeck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7351","jenkinsci/jenkins","38313e4fc287c9731a5c5fba77a60d9344ad75f2",1,"2018-04-27 19:01:35+02:00","Separate the statistics from the token store -
different file for better versioning /
synchronization - ability using a configuration to
avoid completely the statistics - add unit /
integration tests - adjust the configuration page
",118260,1520,75542,"Wadeck Follonier","wadeck.follonier@gmail.com","Wadeck Follonier","wadeck.follonier@gmail.com"
"7352","jenkinsci/jenkins","79ec930a8ef4f12d2f2574c50c2f42272e5c75fb",1,"2018-04-29 00:58:35+02:00","[JENKINS-49839] correct annotation check (#3321)
- also correct a bad annotation in Run
",118628,1525,76183,"Wadeck Follonier","Wadeck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7353","jenkinsci/jenkins","9680086f6885b0e390367e9f98f405d8f16e3b81",1,"2018-05-26 19:44:06+08:00","export slave remote fs for json api (#3206)  *
export slave remove fs for json api    * Check
permission for getAbsoluteRemotePath api    * Add
@Restricted annotation    * Modify slaveComputer
permission check    * Add javadoc    * Revert for
squashed imports    * Add unit test for method
'getAbsoluteRemotePath'    * Change assert to
Junit.Assert    * Add webClient test case    * Fix
code style    * Fix javadoc    * Use more
canonical way to test    * Remove super interface
Serializable    * Change to way to determine
whether ths json value is null
",119428,1530,76404,"suren","zxjlwt@126.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7354","jenkinsci/jenkins","d79c6afd2163a30b549314c7c1185bf8bd1fd149",3,"2018-06-01 19:42:14+02:00","[JENKINS-51603] - Use CheckForNull instead of
Nullable
",119698,1530,76446,"Oleg Nenashev","o.v.nenashev@gmail.com","Nicolas De loof","nicolas.deloof@gmail.com"
"7355","jenkinsci/jenkins","320fc6e2b2894b531953f4ee3694c4a89ad5d5f8",2,"2018-06-02 09:28:36+02:00","[JENKINS-51355] - Print stacktraces to logs at
FINE+ level when rejecting classes in
ClassFilterImpl (#3447)  * [JENKINS-51355] - Print
stacktraces to logs when rejecting classes in
ClassFilterImpl    * [JENKINS-51355] - Address
leftover message noticed by @dwnusbaum    *
[JENKINS-51355] - Switch the logging level to FINE
",119719,1530,76446,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7356","jenkinsci/jenkins","98b37699152595f35fce7387be0ee1717596650d",2,"2018-06-04 16:07:12-04:00","[JENKINS-51603] The proper way to make a parameter
optional is to use @DataBoundSetter.
",119726,1530,76443,"Jesse Glick","jglick@cloudbees.com","Nicolas De loof","nicolas.deloof@gmail.com"
"7357","jenkinsci/jenkins","e6403b980a078570d97a90374198675f6fb6fdfb",1,"2018-06-15 00:41:37+02:00","Annotate the StreamTaskListener implementation
",119874,1530,76514,"Oleg Nenashev","o.v.nenashev@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7358","jenkinsci/jenkins","6e9babd41e37381b8b2d7f24df01cd10f918c09f",1,"2018-07-03 13:28:33+01:00","Method just called and cast another method that
was CheckForNull  toComputer() was annotated with
CHeckForNull yet getComputer which just calls that
and casts it was not.  This causes code using
getComputer() to not have a findbugs check and
this has been observed in a NullPOinterException
happening at runtime.
",121799,1545,77218,"James Nord","jnord+github@cloudbees.com","James Nord","jnord+github@cloudbees.com"
"7359","jenkinsci/jenkins","832144e32297fea7734a44bd2064f6ddd4562874",1,"2018-08-01 00:58:46+02:00","[SECURITY-896]
",112948,1468,73832,"Wadeck Follonier","wadeck.follonier@gmail.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7360","jenkinsci/jenkins","ebd71116c15b97fd3e855a738fbfdef387cd6e3c",2,"2018-08-02 13:52:12-04:00","[JENKINS-52729]
Launcher.ProcStarter.stdout(TaskListener) discards
remotability (#3563)  * [JENKINS-52729]
Demonstrating issue with
Launcher.ProcStarter.stdout(TaskListener).    *
[JENKINS-52729] Properly remote the TaskListener.
* Defend test against a possible problem on
Windows.    * FindBugs    * Fix a Windows test
failure. There is no C:\Windows\System32\echo.exe;
it is a cmd.exe built-in.    * Clarify in Javadoc
that TaskListener is remotable.    * A call to
stdout(TaskListener) should be countermanded by a
call to stdout(OutputStream), which was true for
local but not remote launchers.
",122185,1549,77285,"Jesse Glick","jglick@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7361","jenkinsci/jenkins","722ff407c4083d47e97f43a86b00a7dff0930c04",3,"2018-09-22 13:41:57-07:00","[JEP-214] Telemetry with initial escape hatch
implementation (#3604)
",123207,1562,77667,"Daniel Beck","daniel-beck@users.noreply.github.com","GitHub","noreply@github.com"
"7362","jenkinsci/jenkins","fd5f5be0304c6bf1918892b81e2efb6b6d09c521",6,"2018-09-27 11:32:50+02:00","[SECURITY-867]
",113534,1474,74057,"Wadeck Follonier","wadeck.follonier@gmail.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7363","jenkinsci/jenkins","ba33bd67cdaef87aba8a4e95dca8dcf108a7d73f",3,"2018-09-27 11:38:33+02:00","[SECURITY-1114]
",113984,1479,74183,"Daniel Beck","daniel-beck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7364","jenkinsci/jenkins","45c837daa920e85f84f288a7337016a853054add",1,"2018-09-27 09:47:40-07:00","[JENKINS-53721] - Add getter/setter to EnvVars so
the envinject plugin can set Platform safely
(#3639)  [JENKINS-53721] - Add getter/setter to
EnvVars so the envinject plugin can set Platform
safely
",123242,1562,77677,"Jeff Pearce","jxpearce@godaddy.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7365","jenkinsci/jenkins","65faa1e6d82580c66cfba8672bfd115936c3750d",3,"2018-10-17 18:31:45+02:00","[JENKINS-27177] Minor fixes.  Change the way of an
array copy and ensure non null args
",123256,1559,77783,"M Ramon Leon","manuelramonleonjimenez@gmail.com","Ramon Leon","manuelramonleonjimenez@gmail.com"
"7366","jenkinsci/jenkins","21db4a1671dfa6de9c9bf0fa86e51b51318134ee",1,"2018-10-25 03:59:54+02:00","CheckForNull
",124614,1576,78148,"Daniel Beck","daniel-beck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7367","jenkinsci/jenkins","ec7d802ba1eb86cef72ff4cf979954bf7213df98",2,"2018-11-16 21:25:19+00:00","[JENKINS-45235] There go those pesky tests
catching bugs again
",125169,1578,78409,"Stephen Connolly","stephen.alan.connolly@gmail.com","Stephen Connolly","stephen.alan.connolly@gmail.com"
"7368","jenkinsci/jenkins","7aef24d4542738ce309122ea05a3d194e842c8d8",2,"2018-11-17 11:56:21+01:00","[JENKINS-54459] Avoid Angry Jenkins when check now
on Plugin Manager (#3718)  * [JENKINS-54459] Avoid
angry Jenkins in Plugin Manager. Check Now    *
[JENKINS-54459] Avoid angry Jenkins in Plugin
Manager. Check Now    * [JENKINS-54459] Fix
updateSiteRightJsonTest in Windows    *
[JENKINS-54459] Minor fixes    * Avoid deprecated
getInstance    Co-Authored-By: MRamonLeon
<manuelramonleonjimenez@gmail.com>    *
[JENKINS-54459] Some fixes    - Better system
properties initialization  - Rename properties  -
Localized messages  - Add test for change log
level message  - Restore signatureCheck field
after test  - Other minor improvements    *
[JENKINS-54459] Add Retrier generic class and use
it in the checking    * [JENKINS-54459] Improving
Spanish messages    * [JENKINS-54459] Fix two
javadoc errors    * [JENKINS-54459] Rename
constants and its visibility    Rename the
constants to do the retries and change their
visibilities.    Change the package of the test to
be able to access the constants in  order to
redefine their values in the tests.    *
[JENKINS-54459] Avoid external use of Retrier and
test the delay time
",125540,1581,78595,"Ramon Leon","manuelramonleonjimenez@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7369","jenkinsci/jenkins","c19cc705688cfffa4fe735e0edbe84862b6c135f",1,"2018-11-21 13:41:15+01:00","[SECURITY-904]
",119827,1537,76064,"Wadeck Follonier","wadeck.follonier@gmail.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7370","jenkinsci/jenkins","47f38d714c99e1841fb737ad1005618eb26ed852",13,"2018-11-21 15:09:49+01:00","[SECURITY-595]  Co-Authored-By: Wadeck Follonier
<wadeck.follonier@gmail.com>
",122911,1564,76714,"Daniel Beck","daniel-beck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7371","jenkinsci/jenkins","7bae6dd6ef23af988801d38dc0f8f693bc6283f8",5,"2018-11-22 11:57:29+01:00","[SECURITY-1072] Make ApiTokenStats work
",128207,1604,79028,"Wadeck Follonier","wadeck.follonier@gmail.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7372","jenkinsci/jenkins","8c490d14c4ffe6162f6e97d25a66612330fe2ace",2,"2019-01-03 09:03:00-07:00","[SECURITY-901]
",123984,1574,77084,"Wadeck Follonier","wadeck.follonier@gmail.com","Jeff Thompson","jeffret.g@gmail.com"
"7373","jenkinsci/jenkins","29de9aaef6d99f4da6aefec243aaa2fc0ea8ecb3",2,"2019-01-07 11:58:42+01:00","Rename to minimumJavaVersion to keep the name
across tooling  Given this field is present in
maven-hpi-plugin, update-center, etc. I think it
does not hurt to keep the 'Minimum-Java-Version'
name across various usages to help make it clear.
",130071,1621,79873,"Baptiste Mathus","batmat@batmat.net","Baptiste Mathus","batmat@batmat.net"
"7374","jenkinsci/jenkins","d8c82d99fc5d3594867fe42b23899c8d37ac4c53",1,"2019-01-29 09:50:37+01:00","[JENKINS-48985] - Better diagnostics for Old Data
Monitor null safety (#3240)  * [JENKINS-48985] -
Old Data Monitor Data Safety    * [JENKINS-48985]
- Address comments from @jglick
",131623,1634,80408,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7375","jenkinsci/jenkins","264980c707c6cafc01369378b1e90d247561df78",1,"2019-02-20 21:51:03-05:00","Java 7: omit explit type in favor of <>
",127457,1563,78320,"Josh Soref","jsoref@users.noreply.github.com","Josh Soref","jsoref@users.noreply.github.com"
"7376","jenkinsci/jenkins","0525f984f0a7aa42469960ed5a83e229857b9868",1,"2019-04-02 14:23:05-04:00","Made SystemProperties usable from agent code.
",127381,1563,78315,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7377","jenkinsci/jenkins","83a465e8b24feca904d75d7c235bfe492dafe2d8",1,"2019-04-12 22:33:39-04:00","Rewriting cache system in PeepholePermalink to use
plain text files rather than symlinks.
",127245,1554,78196,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7378","jenkinsci/jenkins","e1f7c6f34557fb54ede53b9be9c9f965396a3348",1,"2019-05-14 21:47:37-04:00","IntelliJ/Java: Duplicate code  Refactored as
PluginManager.logPluginWarnings
",129817,1578,79050,"Josh Soref","jsoref@users.noreply.github.com","Josh Soref","jsoref@users.noreply.github.com"
"7379","jenkinsci/jenkins","279d8109eddb7a494428baf25af9756c2e33576b",3,"2019-07-02 12:20:41-06:00","[SECURITY-534]
",129671,1617,79501,"Matt Sicker","boards@gmail.com","Jeff Thompson","jeffret.g@gmail.com"
"7380","jenkinsci/jenkins","740f9eb3ede9b76f0b4126e581870c6659822386",1,"2019-07-05 15:27:55+02:00","[JENKINS-57223] - Java11 ClassNotFoundExceptions
Telemetry (#4003)  * Proof of concept catching
exceptions for java 11 removed classes    * Add
ClassLoader to a lot of places. Backup    *
Commenting out wip stuff, change packages, count
hits findClass    * Improvements, sending and
tests    * Removing the catcher from chain to make
funcional tests work    * Removing ignored places
and a bit of cleaning    * Cleaning unused code
after removing the catcher from the chain    *
Remove imports cleaning to avoid extra changes
* Cleaning and explaining comments    * Explaining
comments    * fix javadoc    * [JENKINS-57223]
Address feedback from Matt Sicker. Improve in
concurrency    * [JENKINS-57223] Search on cause
and suppressed exceptions and fix on name reported
* [JENKINS-57223] Add cycles control on exceptions
and refactor reporting method    * [JENKINS-57223]
Add trim to class name comparison    *
[JENKINS-57223] Address Oleg's feedback and some
improvements    * Avoid sending CNFE when ignored
later in code  * Disable when running on Java 8
and a test  * Avoid sending empty events    *
[JENKINS-57223] Polish assertion after printing
all missing classes in logs    * [JENKINS-57223]
Avoid extra if and add curly braces    *
[JENKINS-57223] Better comment about time window
check
",128620,1564,78813,"Ramon Leon","manuelramonleonjimenez@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7381","jenkinsci/jenkins","5169f14019be77d6b205b7c2d5fe608b92ed3446",5,"2019-08-01 13:55:44-04:00","Batch up dynamic plugin installations from setup
wizard (#4124)  * Batch up dynamic plugin
installations from setup wizard.    * Reworked to
thread the list of batched-up plugins properly and
introduced CompleteBatchJob to force the setup
wizard to wait.    * UpdateCenterPluginInstallTest
.test_installKnownPlugins failure.    * @amuniz
notes that an existing message could now be
considered misleading.    * Introduced
UpdateCenter.DownloadJob.getDisplayName for better
consistency in logging, as suggested by @Vlatombe.
* Reducing log levels of messages from dynamicLoad
which are not of great interest, as suggested by
@Vlatombe.    * Reducing log level of another
message of little interest.    * Adding classic UI
for CompleteBatchJob.    * CompleteBatchJob should
be used only when dynamicLoad.    * Null defense
on UpdateCenterJob.site.  Otherwise can get:
java.lang.NullPointerException          at hudson.
model.UpdateCenter.getConnectionCheckJob(UpdateCen
ter.java:850)          at hudson.model.UpdateCente
r.addConnectionCheckJob(UpdateCenter.java:817)
at hudson.model.UpdateCenter.addJob(UpdateCenter.j
ava:804)          at hudson.model.UpdateSite$Plugi
n.deploy(UpdateSite.java:1367)          at hudson.
PluginManager.install(PluginManager.java:1537)
at hudson.PluginManager.install(PluginManager.java
:1496)          at hudson.PluginManager.doInstall(
PluginManager.java:1445)          at ‚Ä¶
",129225,1568,78878,"Jesse Glick","jglick@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7382","jenkinsci/jenkins","e2c596c049e5e09e7254ff000802709c2e01af2a",1,"2019-09-10 21:29:08+02:00","[SECURITY-1471]
",130236,1624,79575,"Wadeck Follonier","wadeck.follonier@gmail.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7383","jenkinsci/jenkins","476bde37b86a2b9567ab6ec33f50d7894b3bdfaa",11,"2019-09-23 13:10:44+03:00","Annotate ProcessTree with @CheckForNull/@Nonnull
",129780,1578,79021,"Marat Radchenko","marat@slonopotamus.org","Marat Radchenko","marat@slonopotamus.org"
"7384","jenkinsci/jenkins","24d0cf90ab82f89aadd2b54c84c7fcab093b0d37",3,"2019-10-11 09:41:32+02:00","[JENKINS-41891] Resource domain support (#4239)  *
[JENKINS-41891] Resorce domain support    * Rename
a few things    * Encapsulate token    * Update
documentation based on review feedback    * Rename
field and change symbol for friendlier JCasC
format    * Be more explicit about expiration and
URL sharing    * Allow favicon.ico, robots.txt;
better logging    * Remove TODO from comment    *
Consider resource root URL only set if the Jenkins
root URL is set    * Improve form validation    *
Clean up form validation warnings a bit    * Fix
null handling (even though it'll never be called
that way)    * Simpler logging statement after
code review    * It's nicer to read this way    *
Use the proper API for this with less string magic
* Update TODO comments    * Simplify log statement
* Use base64 instead of hexadecimal for shorter
URLs    * Open link to Wikipedia in new tab/window
* Serve directory indexes    * Fix target of
redirect in admin monitor    * Update TODO
comments in test to current implementation    *
Include link to parent directory unless in top
level directory    * Update validation message
when we cannot determine instance identity    *
Improve tests    * Fix permission exception,
further improve tests    * Annotation was
redundant    * Add test for resource domain
monitor activation    * Do not go through hex
encoding/decoding    * Address review comments
Co-Authored-By: Jesse Glick <jglick@cloudbees.com>
* Address further review feedback    * Better
logging, handle exception when the user is gone
* Only get the bytes once    * Inline help
improvements    Co-Authored-By: Jeff Thompson
<jeffret.g@gmail.com>
",130269,1584,79251,"Daniel Beck","1831569+daniel-beck@users.noreply.github.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7385","jenkinsci/jenkins","89ee2e822a5d356e1106d6819e0a3c285fac15be",2,"2019-10-18 00:30:31+02:00","[JENKINS-36720] - Fix SpotBugs warnings for ""Non-
null field is not initialized"" values (#4249)  *
add one Spotbugs exclude and replaced Nonnull with
CheckForNull because assigned variables have
CheckForNull annotations    * Update core/src/main
/java/jenkins/security/NonSerializableSecurityCont
ext.java    Co-Authored-By: Evaristo Guti√©rrez
<egutierrez@cloudbees.com>
",130227,1584,79256,"StefanSpieker","S.Spieker@gmx.net","Oleg Nenashev","o.v.nenashev@gmail.com"
"7386","jenkinsci/jenkins","9df94bdf16e4dd46018111c2f5b685a67dfda914",1,"2019-10-25 18:15:26+02:00","added CheckForNull
",130311,1585,79295,"Stefan Spieker","S.Spieker@gmx.net","Stefan Spieker","S.Spieker@gmx.net"
"7387","jenkinsci/jenkins","ca2d63fe2bad3652454630e72797ea29ce976c36",2,"2019-10-31 13:17:51-04:00","Exposing basics of ResourceDomainConfiguration via
Java API.
",130315,1585,79295,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7388","jenkinsci/jenkins","02522d257cd88f0074b74d13164a7c33cbc38370",5,"2019-11-01 05:28:28+07:00","[JENKINS-19887] - Allow time zone to be set on a
per user basis (#4113)  * Implement user setting
for timezone    * Apply timezone everywhere    *
Revert to medium dateStyle    * Simplify and
cleanup    * Add javadocs and fix file headers
* Revert auto-changes by IntelliJ    * Add
nullable annotation    * Use better display names
* Add tests    * Log a warning when the user's
time zone is not valid    * Add username to log
statement    * Make suggested change    * Cleaner
way of dealing with invalid timezone    * Update c
ore/src/main/resources/hudson/model/TimeZoneProper
ty/config.jelly    Co-Authored-By: Matt Sicker
<boards@gmail.com>    * Update tests    * Update
config.properties    * Update config.jelly    *
Update Functions.java    * Update layout.jelly
* Update Functions.java    * Update
TimeZoneProperty.java    * Update
TimeZoneProperty.java    * Update config.jelly
* Update config.properties    * Update
TimeZonePropertyTest.java    * Update
TimeZoneProperty.java    * Update Functions.java
",130471,1587,79316,"silent-snowman","mrnathangrubb@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7389","jenkinsci/jenkins","40b68eaadbfe452fee3a65eddb41df43851cf993",3,"2019-11-10 11:24:28+01:00","[JENKINS-59679] Use plugin URL from the update
site rather than the manifest (#4273)  * Use
plugin URL from the update site rather than the
manifest    * Avoid Mockito when not needed    *
Resolve plugin URL from multiple update sites
",130660,1588,79125,"Zbynek Konecny","zbynek@geogebra.org","Oleg Nenashev","o.v.nenashev@gmail.com"
"7390","jenkinsci/jenkins","4956998996fe65c7447313103762941ca316f47b",1,"2019-11-07 15:23:49+01:00","getPrimaryView: return null if no view is defined
This exception occurs while defining a view using
job DSL:      SEVERE
jenkins.InitReactorRunner$1#onTaskFailed: Failed
ConfigurationAsCode.init
java.lang.ArrayIndexOutOfBoundsException: 0
at java.util.concurrent.CopyOnWriteArrayList.get(C
opyOnWriteArrayList.java:388)         at java.util
.concurrent.CopyOnWriteArrayList.get(CopyOnWriteAr
rayList.java:397)         at hudson.model.ViewGrou
pMixIn.getPrimaryView(ViewGroupMixIn.java:172)
at hudson.model.ViewGroupMixIn.getView(ViewGroupMi
xIn.java:134)         at
jenkins.model.Jenkins.getView(Jenkins.java:1834)
at javaposse.jobdsl.plugin.JenkinsJobManagement.cr
eateOrUpdateView(JenkinsJobManagement.java:175)
at javaposse.jobdsl.dsl.JobManagement$createOrUpda
teView$2.call(Unknown Source)         at org.codeh
aus.groovy.runtime.callsite.CallSiteArray.defaultC
all(CallSiteArray.java:48)         at org.codehaus
.groovy.runtime.callsite.AbstractCallSite.call(Abs
tractCallSite.java:113)         at org.codehaus.gr
oovy.runtime.callsite.AbstractCallSite.call(Abstra
ctCallSite.java:141)         at javaposse.jobdsl.d
sl.AbstractDslScriptLoader$_extractGeneratedViews_
closure5.doCall(AbstractDslScriptLoader.groovy:216
)
",130544,1587,79109,"Pierre-Louis Bonicoli","pierre-louis.bonicoli@libregerbil.fr","Pierre-Louis Bonicoli","pierre-louis.bonicoli@libregerbil.fr"
"7391","jenkinsci/jenkins","f103b7819d45d1f06c8b2a8ba0bf1c8a1913014d",2,"2019-11-14 12:40:53+00:00","JENKINS-56553 Make proxy config compatible with
JCasC without workarounds on the plugin side
(#3935)  * JENKINS-56553 Make proxy config
compatible with JCASC    * Use DataBoundSetters as
other fields are optional    * Fix Jelly for
ProxyConfiguration    * Use default field name now
that field matches    * Fix validate proxy    *
Change field type    * After review    * Update
core/src/main/java/jenkins/model/Jenkins.java
Co-Authored-By: timja <t.jacomb@kainos.com>    *
Update
core/src/main/java/jenkins/model/Jenkins.java
Co-Authored-By: timja <t.jacomb@kainos.com>    *
Update
core/src/main/java/hudson/ProxyConfiguration.java
Co-Authored-By: timja <t.jacomb@kainos.com>    *
Update
core/src/main/java/jenkins/model/Jenkins.java
Co-Authored-By: timja <t.jacomb@kainos.com>    *
Update
core/src/main/java/jenkins/model/Jenkins.java
Co-Authored-By: timja <t.jacomb@kainos.com>    *
Update
core/src/main/java/hudson/ProxyConfiguration.java
Co-Authored-By: Oleg Nenashev
<o.v.nenashev@gmail.com>    * Tweak javadoc    *
Align fields    * Update
core/src/main/java/hudson/ProxyConfiguration.java
Co-Authored-By: Adrien Lecharpentier
<adrien.lecharpentier@gmail.com>
",130839,1590,79149,"Tim Jacomb","timjacomb1+github@gmail.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7392","jenkinsci/jenkins","77f1242ddd2dd4307b788e86422ace8acd1c8445",2,"2019-11-16 10:37:27+01:00","Move cloud configuration out of Configure System
(#4339)  * Move cloud configuration out of
Configure System    * Update display name    * Add
section header back
",130862,1590,79146,"Daniel Beck","1831569+daniel-beck@users.noreply.github.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7393","jenkinsci/jenkins","1125b1b4d7a5280ce0bd0d4c3eb464e172bf94ec",5,"2019-12-06 10:33:26-05:00","Adding some nullability annotations related to
Label.
",130842,1590,79152,"Jesse Glick","jglick@cloudbees.com","Jesse Glick","jglick@cloudbees.com"
"7394","jenkinsci/jenkins","d36acc1c81694fd204d1f3c0efcde278883e9b79",1,"2019-12-10 22:44:51+01:00","[JENKINS-59656] check build id before interrupting
from the executors widget (#4264)  *
[JENKINS-59656] when stopping a Run via the
executors widget, make sure it's the intended one
* [JENKINS-59656] added Executor.stopBuild(String)
instead of .stop(String)    * revert change to
deprecated doStop(StaplerRequest,StaplerResponse),
useless now that it's doStopBuild(String) which
takes a runExtId parameter    * javadoc: ""@since
TODO"" rather than ""@since 2.???""    *
[JENKINS-59656] added test case    * jelly cleanup
with h.urlEncode(String)    * make
Functions.urlEncode(null) return empty String    *
Executor.doStopBuild(runExtId): ignore runExtId if
executable is not a Run    *
Executor.doStopBuild(runExtId) doesn't have to be
a public API
",130892,1590,79186,"Thomas de Grenier de Latour","thomas.degrenierdelatour@orange.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7395","jenkinsci/jenkins","7897ee0fe271aebd4b948db5b60488a038ff3725",1,"2019-12-27 13:06:07-05:00","Add @CheckForNull annotation  Co-Authored-By: Oleg
Nenashev <o.v.nenashev@gmail.com>
",128025,1557,78391,"Josh Soref","jsoref@users.noreply.github.com","GitHub","noreply@github.com"
"7396","jenkinsci/jenkins","9b8047acd1639611ff1effdddc520c27d2a6e6c9",1,"2020-01-03 17:35:38-05:00","IntelliJ/Java: Duplicate declaration ->
AntClassLoader.getUrl (#4254)  * IntelliJ/Java:
Duplicate declaration    AntClassLoader.getUrl
* Add missing import for annotation    * Switch
from Vector to ArrayList<File>    * Drop inferable
File    * Use for (File pathComponent :
pathComponents) sugar    * Accept generic
container type for getUrl    Co-Authored-By: Oleg
Nenashev <o.v.nenashev@gmail.com>    Co-authored-
by: Oleg Nenashev <o.v.nenashev@gmail.com>
",130992,1592,79247,"Josh Soref","jsoref@users.noreply.github.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7397","jenkinsci/jenkins","639ade55caa05324c60d15b2fa8df27ee0111b76",3,"2020-01-14 12:08:10+01:00","[SECURITY-1704]
",133120,1650,80720,"Wadeck Follonier","wadeck.follonier@gmail.com","Wadeck Follonier","wadeck.follonier@gmail.com"
"7398","jenkinsci/jenkins","d02c7563588aa534629e05b873946680953dbfdc",1,"2020-01-17 00:46:58-05:00","[JENKINS-60750] Skip CONFIGURE_INSTANCE panel when
root URL is set during skipFirstUser (#4430)  *
[JENKINS-60750] Skip the CONFIGURE_INSTANCE panel
when JenkinsLocationConfiguration.url is set, even
when skipFirstUser is called.    * Add nullability
annotation    Co-Authored-By: Oleg Nenashev
<o.v.nenashev@gmail.com>    Co-authored-by: Oleg
Nenashev <o.v.nenashev@gmail.com>
",131104,1593,79317,"Jesse Glick","jglick@cloudbees.com","Oleg Nenashev","o.v.nenashev@gmail.com"
"7399","jenkinsci/jenkins","92c24c62f153a5223084948b1f1d155614bd7e91",1,"2020-01-29 15:30:30-07:00","Adjust naming.
",130965,1591,79194,"Jeff Thompson","jeffret.g@gmail.com","Jeff Thompson","jeffret.g@gmail.com"
"7400","jenkinsci/jenkins","75e356501813f878487c5aab392b545ccd1ddaf9",4,"2020-02-06 20:38:53+08:00","[JENKINS-60721] Annotate parameter classes (#4439)
* Annotate and fix Parameter functions    Signed-
off-by: Raihaan Shouhell
<raihaan.shouhell@autodesk.com>    * Add
checkfornull annotation    * Add test for issue
Signed-off-by: Raihaan Shouhell
<raihaan.shouhell@autodesk.com>    * Fix test    *
Previous ctor was private d'oh    * Fix annotation
* Prevent parameter names from being null    * Add
comment about check
",132244,1602,79630,"Raihaan Shouhell","raihaan.shouhell@autodesk.com","GitHub","noreply@github.com"
"7401","jenkinsci/jenkins","b39ff9938a29b34bd6fb881722c978e0f886854d",1,"2020-02-18 10:36:38+00:00","[JENKINS-61046] - Allow plugins to force an update
of the UpdateCenter (#4488)  * Allow plugins to
force an update of the UpdateCenter    * Add
javadoc to updateDirectlyNow    * [JENKINS-61046]
introduce updateDirectlyNow() and updateDirectly()
@oleg-nenashev notes that the public API should
not expose the security  option that is for
testing.  Introduced updateDirectlyNow() as the
new  API and updateDirectly() to have a mirror and
deprecated  updateDirectly(boolean) as a
consequence.    * fix javadoc grammar    fixes the
grammar of the UpdateSite#updateDirectlyNow
javadoc    Co-Authored-By: Raihaan Shouhell
<raihaanhimself@gmail.com>    Co-authored-by:
Raihaan Shouhell <raihaanhimself@gmail.com>
",132394,1608,79850,"James Nord","jtnord@users.noreply.github.com","GitHub","noreply@github.com"
"7402","jenkinsci/jenkins","06712954c2950c64063be536cd5fa92493002935",3,"2020-02-29 07:31:23-05:00","[JENKINS-61197] Skip $WORKSPACE_TMP for root
directories (#4527)  * [JENKINS-61197] Skip
$WORKSPACE_TMP for root directories    *
Documenting amended behavior    * Javadoc
",132761,1608,79887,"Jesse Glick","jglick@cloudbees.com","GitHub","noreply@github.com"
"7403","jenkinsci/jenkins","e4843aef44587051310ce19d33b08f28e2e93004",3,"2020-03-01 07:23:51+01:00","[JENKINS-61004, JENKINS-60299] - Reintroduce Build
History description truncation by default, allow
managing/disabling the limit via a system property
(#4529)  * [JENKINS-61004] - Reintroduce Build
History description truncation by default, allow
managing/disabling the limit via a system property
* Apply suggestions from code review by @daniel-
beck    Co-Authored-By: Daniel Beck
<1831569+daniel-beck@users.noreply.github.com>
Co-authored-by: Daniel Beck <1831569+daniel-
beck@users.noreply.github.com>
",132769,1608,79899,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7404","jenkinsci/jenkins","631f8ba571dd2096d044910954e885f53fee451b",1,"2020-03-01 11:44:13+05:18","[JENKINS-28379] Allow FingerprintFacet to block
the deletion of Fingerprint (#4478)  *
[JENKINS-28379] Allow FingerprintFacet to block
the deletion of Fingerprint    * Syntax
improvements + CheckForNull annotation    *
Changed method name 'facetBlockingDeletion' ->
'getFacetBlockingDeletion'
",132785,1608,79910,"Sumit Sarin","sumitsarinofficial@gmail.com","GitHub","noreply@github.com"
"7405","jenkinsci/jenkins","f479652171f4ab854747de64b22bf59adb35fb8f",3,"2020-03-11 08:12:56+01:00","[SECURITY-1774]
",133436,1654,80889,"Daniel Beck","daniel-beck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7406","jenkinsci/jenkins","f7cf28355973df1ca6eb19066370bf70b10742f7",3,"2020-03-11 09:29:41+01:00","[SECURITY-1774]
",133550,1656,80890,"Matt Sicker","boards@gmail.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7407","jenkinsci/jenkins","7259d8698cf207cfdf6756de57006a93bfbaa5d0",3,"2020-03-13 12:31:45+01:00","[JENKINS-61465] Make checkAnyPermission work on
non-AccessControlled
",133018,1609,79978,"Daniel Beck","daniel-beck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7408","jenkinsci/jenkins","51c895074d4d20ca11f3043aaaf7dbe2bba7e10a",1,"2020-03-13 12:01:09+00:00","JENKINS-54662 JCasC support for usage statistics
(#4549)  Co-authored-by: Oleg Nenashev
<o.v.nenashev@gmail.com>
",132974,1609,79990,"Tim Jacomb","timjacomb1+github@gmail.com","GitHub","noreply@github.com"
"7409","jenkinsci/jenkins","1763fee28eea120a3dd6a561b0654472585e30c5",3,"2020-03-14 10:27:08+01:00","Document nullability of newInstanceFromRadioList()
methods and‚Ä¶ (#4543)
",133034,1610,80013,"Oleg Nenashev","o.v.nenashev@gmail.com","GitHub","noreply@github.com"
"7410","jenkinsci/jenkins","819f80b12fb52d300fcbf05f64a8dab121901400",1631,"2020-03-26 11:14:41+00:00","s/javax.annotation.Nonnull/edu.umd.cs.findbugs.ann
otations.NonNull/g
",133576,1615,80142,"James Nord","jnord+github@cloudbees.com","James Nord","jnord+github@cloudbees.com"
"7411","jenkinsci/jenkins","5674de12353df95d1c5f0baaa699636ed47b7284",2,"2020-03-26 16:31:26+00:00","remove Nonnegative annotation from JSR-305
",133572,1615,80142,"James Nord","jnord+github@cloudbees.com","James Nord","jnord+github@cloudbees.com"
"7412","jenkinsci/jenkins","538b9cc785c510d6c85fbf30424e34c38a7377f5",1,"2020-04-02 20:31:53+01:00","Another JSR-305 annotation crept into master
",133763,1614,80160,"James Nord","jtnord@users.noreply.github.com","James Nord","jtnord@users.noreply.github.com"
"7413","jenkinsci/jenkins","f0e3a7df1da4280fb9a1e25d9fc8c8f3658b4783",1,"2020-04-05 15:13:37+01:00","Fix compilation error after merge
",133892,1614,80168,"Tim Jacomb","timjacomb1+github@gmail.com","Tim Jacomb","timjacomb1+github@gmail.com"
"7414","jenkinsci/jenkins","9b4a62c7160092231589be04b466c24a9f89ce56",1,"2020-04-09 22:36:46+01:00","JENKINS-61203 System read - Plugin Manager (#4518)
Co-authored-by: Daniel Beck <1831569+daniel-
beck@users.noreply.github.com>
",133893,1614,80164,"Tim Jacomb","timjacomb1+github@gmail.com","GitHub","noreply@github.com"
"7415","jenkinsci/jenkins","34202aaf7f011aefae5acdf1ad3d8f79fa9a2a8e",5,"2020-04-18 15:52:53+02:00","minor test refactoring
",133965,1616,80193,"Stefan Spieker","S.Spieker@gmx.net","Stefan Spieker","S.Spieker@gmx.net"
"7416","jenkinsci/jenkins","25c8cb6be5f2c14082c0b5619c4136b3d0023816",1,"2020-04-22 13:51:20+02:00","Fix reviews
",134012,1617,80283,"Vincent Latombe","vincent@latombe.net","Vincent Latombe","vincent@latombe.net"
"7417","jenkinsci/jenkins","072b36de7d10ebff43f3eddb60920394ce7508ff",1,"2020-04-25 14:24:57+01:00","JENKINS-61207 System read - logs (#4530)  Co-
Authored-By: Daniel Beck <1831569+daniel-
beck@users.noreply.github.com>
",134014,1615,80204,"Tim Jacomb","timjacomb1+github@gmail.com","GitHub","noreply@github.com"
"7418","jenkinsci/jenkins","8569ad06b3d74878881bf0c8f544d53e2bb0b21b",1,"2020-05-03 15:12:16+02:00","Add proper title for setup wizard
",134261,1615,80242,"Daniel Beck","daniel-beck@users.noreply.github.com","Daniel Beck","daniel-beck@users.noreply.github.com"
"7419","jenkinsci/jenkins","a4d59f03b5cbd073041099c05c83b5a61ecfc27a",2,"2020-05-05 18:09:13+02:00","[JENKINS-61920] Avoid MissingClassTelemetry
populates the log
",134383,1616,80302,"Ramon Leon","manuelramonleonjimenez@gmail.com","Ramon Leon","manuelramonleonjimenez@gmail.com"
"7420","jenkinsci/jenkins","8a9a1b2f7bf72c305597ed5e7121b80f58528c5c",13,"2020-05-10 11:17:51+02:00","[JENKINS-61808] Always transmit f:password values
as Secret (#4630)  Co-authored-by: Daniel Beck
<daniel-beck@users.noreply.github.com>
",134668,1616,80332,"Daniel Beck","1831569+daniel-beck@users.noreply.github.com","GitHub","noreply@github.com"
"7421","jenkinsci/jenkins","9f48a332e5ff542a32d95caeb02b583e5f043829",1,"2020-05-22 08:57:23+02:00","[JENKINS-61458] Allow Jenkins.MANAGE user to
access ""Reload Configuration From Disk"" (#4728)  *
[JENKINS-61458] Jenkins.MANAGE requires for
configuration reload    * [JENKINS-61458] Test
fixed
",135165,1616,80371,"Emilio Escobar","escoem@users.noreply.github.com","GitHub","noreply@github.com"
"7422","jenkinsci/jenkins","3fd66ff22051a3309b8dc5130d8da0759ee27f48",1,"2020-05-29 22:38:38+08:00","[JENKINS-20052] Refactor ListView getItems (#4466)
* Refactor ListView getItems    Signed-off-by:
Raihaan Shouhell <raihaan.shouhell@autodesk.com>
* Minor Refactor    * Optimization for specific
case    * Migrate statusfilter to viewjobfilter
* Use unboxed boolean so we don't have to deal
with null    * UI Changes    * Add tests and use
pre-auth filters    * Add test with a simple
filter    * Remove old tests as the new tests
should cover this    * Change annotation    * Only
iterate if there are names or a regex pattern
",135360,1618,80449,"Raihaan Shouhell","raihaanhimself@gmail.com","GitHub","noreply@github.com"
"7423","jenkinsci/jenkins","a53ef93cca3a11dcd9be3a876905ac79735b4c21",7,"2020-06-09 18:00:37+02:00","Use the 'agent' term more often (#4777)  * Use the
'agent' term more often    * More cleanup    *
Another occurrence    Co-authored-by: Daniel Beck
<daniel-beck@users.noreply.github.com>
",135392,1618,80454,"Daniel Beck","1831569+daniel-beck@users.noreply.github.com","GitHub","noreply@github.com"
"7424","jenkinsci/jenkins","302159c0e89524259de6ab1c5e7f795f6a8c66cf",14,"2020-06-13 14:00:37+02:00","JENKINS-29144: Enable proper environment access
for build steps (#4766)  Co-authored-by: Jesse
Glick <jglick@cloudbees.com>
",135453,1619,80472,"Tim Van Holder","tim.vanholder@gmail.com","GitHub","noreply@github.com"
"7425","jenkinsci/jenkins","a5310b10d6f4489eab4316cda8ab5a5d7ce14771",14,"2020-06-22 13:00:08+05:18","[JENKINS-62345] Introduce FingerprintStorage API
in core (#4731)  * [JENKINS-62345] Introduce
FingerprintStorage API    * Fix FingerprintTest by
adding JenkinsRule    * Add licenses    * Undo
Adding JTH to core    * Move roundTrip test to JTH
* Move toByteArray method to Fingerprint class
* Decrease extension ordinal value for
FileFingerprintStorage    * abstract logging and
bulkchange into fingerprint class    * Move
loading logs into Fingerprint    * Expose
setPersistedFacets in Fingerprint class    *
Annotate FingerprintStorage as Beta    * Add
docstring for FingerprintStorage and
FileFingerprintStorage    * Remove nonnull
annotation from getPersistedFacets    * Add System
property to choose FingerprintStorage engine    *
Introduce initFacets method for abstraction    *
Remove setPersistedFacets method    * Change scope
of getPersistedFacets to default    * Single line
return statement    * Add check for null    *
Remove checkForNull annotation from initFacets
* change access scope from package to public for
load    * Remove No external use from
FingerprintStorageEngine    *
fingerprintStorageEngine moved inside constructor
* Make get function static    * Remove ordinal
value    * Make get method public    * make
getPersistedFacets public    * Remove brackets
from Extension    * Mark FileFingerprintStorage
Beta    * Add fingerprint's hash to logging    *
Spelling fix    * Remove toByteArray method    *
Move getConfigFile and getFingerprintFile to
FileFingerprintStorage    * Annotate and make
final: getPersistedFacets    * getBytes -> fromHex
* Deprecate Fingerprint.save(File file)    * add
version since deprecated    * Deprecate
Fingerprint.load(file) method    * Move
FingerprintStorage,FileFingerprintStorage ->
jenkins.fingerprints package    * Deprecate
Fingerprint load(@NonNull byte[] md5sum) and move
to String id    * Delete private deprecated method
* CheckForNull added    * Add comments about
implementing Saveable Listener    * Add TODO for
Saveable Listener    * Add TODO for renaming md5
in xml    * Move serialize to
FileFingerprintStorage    * Make serialize method
private    * Add docstrings    * Revert serialize
to static    * Introduce deletion in the API    *
Make messageOfParseException private    * Remove
Redundant imports    * Add test for fingerprint
deletion    * Make methods private    * Move
deletion test to FingerprintTest    * Improve code
style    * Improve code style    * Add deletion
errors in FileFingerprintStorage#delete    * Add
spaces    * Remove extra empty line    * Variable
renaming    * Add documentation    * Add spacing
* Remove spacing    * Beta -> NoExternalUse    *
Refactoring    * Add CheckForNull annotation in
save method    * Add documentation    * Refactor
FingerprintMap#isReady to FingerprintStorage    *
Suppress fingerprint cleanup thread when external
storage is configured    * Add TODO    * Fix
negation bug    * Move
FingerprintCleanupThreadTest from core to test
(needs JTH)    * Revert to using ordinal for
extension    * Remove redundant import    * Add
note on ID    * spacing changes    * Add spacing
* Add ordinal to extension    * Add curlies    *
remove curlies    * j -> jenkinsRule    * Remove
note on | delimeter    * Improve docstring    *
null -> {@code null}    * Improve docstring    *
Improve documentation    * Fix typos    * Minor
changes to variable names and docstrings    *
Update docstring
",135583,1621,80613,"Sumit Sarin","sumitsarinofficial@gmail.com","GitHub","noreply@github.com"
"7426","jenkinsci/jenkins","a49f58057c145d4602d8762a2c5d5967f7a09358",15,"2020-06-29 08:40:51+02:00","[JENKINS-26097] Adjust label expression auto-
completion and validation (#4774)
",135647,1623,80690,"Tim Van Holder","tim.vanholder@gmail.com","GitHub","noreply@github.com"
"7427","jenkinsci/jenkins","a1b5ec15326bc7ff72f080d8c4b962bad7ca5dfe",13,"2020-07-06 08:52:53+02:00","JENKINS-62572: Extend Downloadable API slightly
(#4773)
",135658,1623,80735,"Tim Van Holder","tim.vanholder@gmail.com","GitHub","noreply@github.com"
"7428","jenkinsci/jenkins","ccc0e347240d2f10da77ac8a311be9a30d5434ed",8,"2020-07-07 22:03:31+02:00","[JENKINS-62723] Improve Util.isOverridden  It will
now deal with final/abstract methods
appropriately. It will also clearly report bad
arguments (base not base of derived, or base does
not declare the method). Added a unit test for
interface cases.  Small gap to be looked into:
overrides provided via default implementation of a
(derived) interface.
",135802,1621,80720,"Tim Van Holder","tim.vanholder@gmail.com","Tim Van Holder","tim.vanholder@gmail.com"
"7429","jenkinsci/jenkins","463cd113ba7bfe7b79af42f457dfaacab8b2412d",2,"2020-07-17 16:14:46+02:00","Minor refactorings either for performance or
readability (#4845)  Co-authored-by: Oleg Nenashev
<o.v.nenashev@gmail.com>
",136165,1626,80893,"StefanSpieker","S.Spieker@gmx.net","GitHub","noreply@github.com"
"7430","jenkinsci/jenkins","0134fb11a82e0b3a0c52a6df0aff294cfaf16c44",35,"2020-07-19 10:24:00+02:00","[JENKINS-62014] Add build step environment filters
(#4683)  Co-authored-by: Wadeck Follonier
<wadeck.follonier@gmail.com>  Co-authored-by:
Daniel Beck <daniel-beck@users.noreply.github.com>
",136813,1637,81307,"Daniel Beck","1831569+daniel-beck@users.noreply.github.com","GitHub","noreply@github.com"
"7431","jenkinsci/jenkins","fd402294e54763db975f93b2beb3be5793569507",4,"2020-07-19 10:33:22+02:00","fixed deprecation warnings, simplified JUnit
assertions and removed obsolete throws Exception
statements
",136177,1626,80893,"Stefan Spieker","S.Spieker@gmx.net","Stefan Spieker","S.Spieker@gmx.net"
"7432","jenkinsci/jenkins","be28d586b5db3cd3a5b7bbbfa265e73e86b6446b",1,"2020-07-21 09:38:47+05:18","[JENKINS-62755] Introduce Fingerprint Cleanup in
External Storage API (#4817)  * Create new
FingerprintCleanupThread    * Moved test to
jenkins    * Add license    * Fix license    * Fix
some tests    * Fix all tests    * Remove
redundant imports    * Add documentation; add test
* Fix errors in fingerprintertest    * Remove
default fingerprint cleanup implementation    *
Remove override from execute    * Undo author
deletion    * Remove redundant import    * Move
fingerprint cleanup to storage    * Fix spacing
* Add new line    * Minor fixes    * Fix tests
* Add documentation    * Introduce fingerprint
cleanup toggle    * Link cleanup config to thread
* Add file system cleanup    * Add test    *
Introduce external fingerprint storage cleanup
tests    * Remove redundant statements    * Fix
test    * Improve docstring    * Introduce
shouldNotCleanFingerprintsWhenDisabled test    *
Fix default cleanup value    * Minor fixes    *
Enabled->Disabled    * Fix tests    * get -> is
",136939,1637,81335,"stellargo","sumitsarinofficial@gmail.com","GitHub","noreply@github.com"
"7433","apache/flink","626d6b785db649e06951e2f336f5ca411b30dce5",3,"2014-09-30 14:15:22+02:00","[FLINK-1117] Clean up flink-avro project: remove
deprecated AvroRecord format, migrate tests to new
java api.
",151299,1984,84397,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7434","apache/flink","885d543be8a8c0d1acdffa0003e394347d5376ef",8,"2016-04-05 13:23:14+02:00","[FLINK-3700] [core] Add 'Preconditions' utility
class.
",276837,3265,133322,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7435","apache/flink","3c93103d1476cb05ec0c018bfa6876e4ecad38e8",3,"2016-04-06 23:21:17+02:00","[FLINK-3375] [kafka connector] Rework/simplify
Kafka Connector and have a WatermarkExtractor
object per partition
",277342,3273,133805,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7436","apache/flink","760a0d9e7fd9fa88e9f7408b137d78df384d764f",3,"2016-04-05 15:18:32+02:00","[FLINK-3700] [core] Remove Guava dependency from
flink-core  Almost all Guava functionality used
within flink-core has corresponding utils in
Flink's codebase, or the JDK library.  This
replaces the Guava code as follows   -
Preconditions calls by Flink's Preconditions class
- Collection utils by simple Java Collection calls
- Iterator's by Flink's Union Iterator   - Files
by simple util methods arount java.nio.Files   -
InetAddresses IPv6 encoding code has been adapted
into Flink's NetUtils (with attribution comments)
Some util classes where moved from flink-runtime
to flink-core.  This closes #1854
",279296,3310,135030,"Stephan Ewen","sewen@apache.org","Fabian Hueske","fhueske@apache.org"
"7437","apache/flink","7ad8375a89374bec80571029e9166f1336bdea8e",4,"2016-05-25 20:34:44+02:00","[FLINK-1502] [core] Cleanups, robustness, and
performance improvements in the metrics system
",290984,3492,141642,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7438","apache/flink","c4bbed9e4d43950244150c5ffcfd4a47f6f1c64e",1,"2016-06-08 16:01:19+02:00","[FLINK-4032] Replace all usage of Guava
Preconditions  This closes #2084
",293783,3522,143093,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7439","apache/flink","a3a9fd1147aa926987420057f8305ab498519a45",3,"2016-07-01 14:12:44+02:00","[FLINK-456] Basic JM Metric Infrastructure  This
closes #2146
",303047,3625,146908,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7440","apache/flink","cbbd80033204a922ccf148c5ac3f1be6de0d810d",1,"2016-07-27 11:25:27+02:00","[FLINK-4245] Expose all defined variables  This
closes #2300.
",317070,3772,154149,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7441","apache/flink","34cda87a6e831c6ea62f1a79df08d1efac718d03",1,"2016-08-29 16:58:31+02:00","[FLINK-4490] [distributed coordination] (part 1)
Change InstanceConnectionInfo to
TaskManagerLocation  This adds the ResourceId to
the TaskManagerLocation
",324475,3853,158409,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7442","apache/flink","25a622fd9c9255bd1a5b4b6ff7891730dce34ac1",1,"2016-07-20 17:08:33-07:00","[FLINK-3929] Added Keytab based Kerberos support
to enable secure Flink cluster
deployment(addresses HDHS, Kafka and ZK services)
FLINK-3929 Added MiniKDC support for Kafka,
Zookeeper, RollingFS and Yarn integration test
modules
",327760,3901,159714,"Vijay Srinivasaraghavan","vijayaraghavan.srinivasaraghavan@emc.com","Maximilian Michels","mxm@apache.org"
"7443","apache/flink","c62776f0f7ac97f6fd484e2a9e0283074d26a444",2,"2016-10-04 13:29:46+02:00","[hotfix] [core] Minor code cleanup and correction
of javadocs for filesystem input stream classes.
",330753,3939,161033,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7444","apache/flink","a66e7ad14e41fa07737f447d68920ad5cc4ed6d3",1,"2016-11-10 11:13:43+01:00","[FLINK-5048] [kafka consumer] Change thread model
of FlinkKafkaConsumer to better handel
shutdown/interrupt situations  Prior to this
commit, the FlinkKafkaConsumer (0.9 / 0.10) spawns
a separate thread that operates Kafka's consumer.
That thread ws shielded from interrupts, because
the Kafka Consumer has not been handling thread
interrupts well. Since that thread was also the
thread that emitted records, it would block in the
network stack (backpressure) or in chained
operators. The later case lead to situations where
cancellations got very slow unless that thread
would be interrupted (which it could not be).
This commit changes the thread model:   - A
spawned consumer thread polls a batch or records
from the KafkaConsumer and pushes the     batch of
records into a blocking queue (size one)   - The
main thread of the task will pull the record
batches from the blocking queue and     emit the
records.
",344234,4077,167918,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7445","apache/flink","230bf17bac3d76959a5cb6aa73ac685757c51cab",8,"2016-12-01 00:21:28-08:00","[FLINK-5091] Formalize the Mesos AppMaster
environment for docker compatibility  - introduced
ContainerSpecification. - reworked how the TM
container environment is constructed; eliminated -
special-case environment variables, file layout. -
added dynamic configuration support to
GlobalConfiguration. - integrated the
SecurityContext into AM/TM runners. - added config
setting for Mesos framework user. - support DCOS
side-channel authentication. - set the FS default
scheme. - made the artifact server more generic
(no assumption about existence - of dispatcher,
Path-based). - moved some test code related to
overriding the JVM‚Äôs env. - moved the Mesos
containerizer config code to the
MesosTaskManagerParameters.  This closes #2915.
",348014,4120,169517,"wrighe3","eron.wright@emc.com","Maximilian Michels","mxm@apache.org"
"7446","apache/flink","7ecf6c86de2a782ba0aa34439c3387da82f42808",2,"2016-12-13 16:54:39+01:00","[hotfix] Clean up structure and comments in
'FileSystem'  This commit aims to improve the
readability of the FileSystem class. The commit
does not introduce new/different code, but
introduces sections in the class, moves nested
classes and methods between these sections. The
commit also improves comments for the class and
nested classes.
",351828,4178,171323,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7447","apache/flink","ad603d59ec17a07adef995c2f1fd58fb8571a3d8",1,"2016-12-14 17:37:39+01:00","[FLINK-4391] Polish asynchronous I/O operations
Polish AsyncFunction  Move AsyncCollectorBuffer to
operators package  Rework AsyncWaitOperator and
AsyncStreamElementQueue implementation  Rename
AsyncCollectorQueue into StreamElementQueue
Reworked StreamingOperatorsITCase and
RichAsyncFunctionTest  Refactor
AsyncWaitOperatorTest  Add StreamElementQueueTests
Add EmitterTest case  Add comments
",355673,4202,171970,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7448","apache/flink","9615f15beca37d6393f6ea78ec35f712536c8f64",4,"2016-10-14 23:57:11+02:00","[FLINK-4835] [cluster management] Add embedded
version of the high-availability services  This
includes the addition of the EmbeddedLeaderService
and a clean shutdown hook for all high
availability services.
",368260,4355,179042,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7449","apache/flink","579bc96446d598a2cfe8237b4ebd62d8c9df3483",25,"2016-12-23 20:37:08+01:00","[FLINK-4410] [runtime] Rework checkpoint stats
tracking
",373441,4415,182563,"Ufuk Celebi","uce@apache.org","Ufuk Celebi","uce@apache.org"
"7450","apache/flink","dec0d6bb702cfcbf30e60f6011565fd9455bb121",1,"2016-12-23 20:44:12+01:00","[FLINK-4410] [runtime-web] Add detailed checkpoint
stats handlers
",374649,4425,182856,"Ufuk Celebi","uce@apache.org","Ufuk Celebi","uce@apache.org"
"7451","apache/flink","fc3a778c0cafe1adc9efbd8796a8bd64122e4ad2",1,"2016-12-20 01:07:38-08:00","[FLINK-5364] [security] Rework JAAS configuration
to support user-supplied entries  Fixes
FLINK-5364, FLINK-5361, FLINK-5350, FLINK-5055
This closes #3057
",374786,4426,182959,"wrighe3","eron.wright@emc.com","Stephan Ewen","sewen@apache.org"
"7452","apache/flink","dcfa3fbb0f17400ebf823e10f803cde8563fff4a",2,"2017-01-25 15:42:24+01:00","[FLINK-5628] [webfrontend] Fix serializability of
checkpoint stats tracker  This closes #3215.
",384490,4495,186971,"Ufuk Celebi","uce@apache.org","Ufuk Celebi","uce@apache.org"
"7453","apache/flink","b5caaef82add4a6f424094d526700c77b011724e",1,"2017-01-12 15:21:56+02:00","[FLINK-4988] [elasticsearch] Restructure
Elasticsearch connectors  This closes #3112.
",385398,4519,187832,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7454","apache/flink","df16e50bbf01d26f75b7745dacd5779ad47dcce5",3,"2017-02-22 14:11:49+01:00","[FLINK-5763] [checkpoints] Followup on adding
CheckpointOptions    - Add a test that validates
the checkpoint type ordinals are not changed   -
Change target location writing from 'writeUtf' to
'StringUtils.write'.   - Pull out the coding
charset as a constant in 'EventSerializer'   -
Simplify the directory creation in
'SavepointStore'
",392433,4581,191603,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7455","apache/flink","ccf458dd4d173b3370257177c2bbd9680baa6511",2,"2017-02-14 16:50:43+01:00","[FLINK-5798] [rpc] Let the RpcService provide a
ScheduledExecutorService  This PR adds the
getScheduledExecutorService method to the
RpcService interface. So henceforth all RpcService
implementations have to provide a
ScheduledExecutorService implementation.
Currently, we only support the AkkaRpcService. The
AkkaRpcService returns a ScheduledExecutorService
proxy which forwards the schedule calls to the
ActorSystem's internal scheduler.  Introduce
ScheduledExecutor interface to hide service
methods from the ScheduledExecutorService  This
closes #3310.
",392417,4583,191772,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7456","apache/flink","3743e898104d79a9813d444d38fa9f86617bb5ef",2,"2017-01-30 13:55:26+08:00","[FLINK-5353] [elasticsearch] User-provided failure
handler for ElasticsearchSink  This commit fixes
both FLINK-5353 and FLINK-5122. It allows users to
implement a failure handler to control how failed
action requests are dealt with.  The commit also
includes general improvements to FLINK-5122: 1.
Use the built-in backoff functionality in the
Elasticsearch BulkProcessor (not available for
Elasticsearch 1.x) 2. Migrate the
`checkErrorAndRetryBulk` functionality to the new
failure handler
",392612,4585,191900,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7457","apache/flink","2437da6e54cb48c4e29116b8789fbe4782b17ea7",2,"2017-02-20 16:50:19+08:00","[FLINK-5487] [elasticsearch] At-least-once
Elasticsearch Sink  This closes #3358.
",392973,4587,192074,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7458","apache/flink","a552d6746636e26c634c86d6a11732ea9d2f239e",1,"2017-02-28 18:01:14+01:00","[FLINK-5852] Move handler JSON generation code
into static methods  This closes #3365.
",397253,4640,194601,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7459","apache/flink","c39ad31f3c321a1803abc97b2ba3074561d9af6e",2,"2017-03-09 01:28:08+08:00","[FLINK-3679] [kafka] Improve null record handling
for FlinkKafkaConsumer  This commit generally
improves null record handling by:  - also update
the offset in state holders if record is null  -
move null record related tests to
AbstractFetcherTest, so that    behaviour is
tested for all fetcher implementations  - let the
docs be more informative of the behaviour of the
consumer    when corrupted messages are
encountered.  This closes #3314.
",399052,4647,194979,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7460","apache/flink","fcd264a707d3dd8ef4247825752c8639732c943c",3,"2017-03-06 16:57:43+01:00","[FLINK-5971] [flip-6] Add timeout for registered
jobs on the ResourceManager  This PR introduces a
timeout for inactive jobs on the ResourceManager.
A job is inactive if there is no active leader
known for this job. In case that a job times out,
it will be removed from the ResourceManager.
Additionally, this PR removes the dependency of
the JobLeaderIdService on the RunningJobsRegistry.
Fix YarnFlinkApplicationMasterRunner to use
correct arguments for JobLeaderIdService  Fix race
condition in JobLeaderIdListener#cancelTimeout
This closes #3488.
",400273,4664,195744,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7461","apache/flink","07a15d0e1647c79ae010ca6df5b1830a4087dd56",1,"2017-03-01 15:36:17+01:00","[FLINK-4460] Provide late-data output for window
operations  We use side outputs to emit dropped
late data.
",404777,4703,197832,"Chen Qin","qinnchen@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7462","apache/flink","f2a8bc92df583c0a6beb519fd8a84cb40edbd060",1,"2017-02-28 12:35:07-05:00","[FLINK-5911] [gelly] Command-line parameters
Create interface for parsing command-line
parameters using ParameterTool and generic
implementations for boolean, long, double, string,
choice.  This closes #3433
",410223,4743,199671,"Greg Hogan","code@greghogan.com","Greg Hogan","code@greghogan.com"
"7463","apache/flink","aa21f853ab0380ec1f68ae1d0b7c8d9268da4533",1,"2017-04-22 01:23:09+02:00","[FLINK-6014] [checkpoint] Additional review
changes
",413279,4823,201683,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7464","apache/flink","90ca438106e63c5032ee2ad27e54e9f573eac386",4,"2017-03-27 17:20:47+02:00","[FLINK-6390] [checkpoints] Add API for checkpoints
that are triggered via external systems  This
includes   - A interface for hooks that are called
by the checkpoint coordinator to trigger/restore a
checkpoint   - A source extension that triggers
the operator checkpoints and barrier injection on
certain events  Because this changes the
checkpoint metadata format, the commit introduces
a new metadata format version.  This closes #3782
",415617,4846,202809,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7465","apache/flink","759f46ea6716e2f9da98002ed881be2fe6d7ab39",3,"2017-03-16 18:53:21+01:00","[FLINK-5810] [flip-6] Multiple small cleanups
across Resource Manager related code
",417147,4847,203112,"Stephan Ewen","sewen@apache.org","Till Rohrmann","trohrmann@apache.org"
"7466","apache/flink","6181302f1ab741b86af357e4513f5952a5fc1531",2,"2017-05-02 22:48:08+02:00","[FLINK-2067] [runtime] Unwrap the
ExceptionInChainedOperatorException exceptions to
clean up stack traces
",424066,4871,205930,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7467","apache/flink","8ed85fe49b7595546a8f968e0faa1fa7d4da47ec",4,"2017-03-21 19:13:34+01:00","[FLINK-5869] [flip-1] Add basic abstraction for
Failover Strategies to ExecutionGraph    - Rename
'ExecutionGraph.fail()' to
'ExecutionGraph.failGlobally()' to differentiate
from fine grained failures/recovery   - Add base
class for FailoverStrategy   - Add default
implementation (restart all tasks)   - Add logic
to load the failover strategy from the
configuration
",426097,4886,206680,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7468","apache/flink","ddd6a99a95b56c52ea5b5153b7270b578f5479bc",1,"2017-03-16 17:03:03+01:00","[FLINK-6078] Remove CuratorFramework#close calls
from ZooKeeper based HA services  Remove client
less factory methods from ZooKeeperUtils
Introduce default job id  This closes #3781.
",427358,4891,206876,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7469","apache/flink","aa8a90a588b4d72fc585731bea233495f0690364",2,"2017-05-10 22:03:49+02:00","[FLINK-6531] [checkpoints] Ensure proper
classloading for user-defined checkpoint hooks
This closes #3868
",435006,4949,210129,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7470","apache/flink","e8c909503591179c3f912b50f48c0aabc127b383",4,"2017-05-18 19:16:06+02:00","[hotfix] Correct equals & hashCode implementation
of KryoSerializer
",437845,4964,210803,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7471","apache/flink","2ad081636e54a2b8fd98a935a95c0949818843ad",2,"2017-05-17 09:46:13-07:00","[FLINK-6606] Set UserCodeClassLoader as TCCL for
MasterTriggerRestoreHook  - wrap calls to
MasterTriggerRestoreHook (and its factory) such
that the user classloader is applied  This closes
#3933.
",438394,4968,211121,"Wright, Eron","Eron.Wright@emc.com","Till Rohrmann","trohrmann@apache.org"
"7472","apache/flink","913be2f5ca3e1f87104273f25c7f4e722b23e562",2,"2017-05-25 10:39:22+08:00","[FLINK-6653] Avoid directly serializing AWS's
Shard class in Kinesis consumer's checkpoints
",439236,4971,212164,"Tony Wei","tony19920430@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7473","apache/flink","085d4db849b9c659ba6bb2c7d66a04debeb048c4",2,"2017-04-20 17:17:43+08:00","[FLINK-4022] [kafka] Partition / topic discovery
for FlinkKafkaConsumer  This closes #3746.
",441583,4975,214018,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7474","apache/flink","78303d4e26d1fb3dffaa44b49ad5b22bc24db875",2,"2017-06-30 11:19:30+02:00","[FLINK-7041] Deserialize StateBackend from
JobCheckpointingSettings with user classloader
This closes #4232.
",445965,5022,215895,"Aljoscha Krettek","aljoscha.krettek@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7475","apache/flink","1ded2d867d9c30f01395494adec3cbaa629bbb5a",1,"2017-07-28 18:59:11+08:00","[FLINK-6998] [kafka] Remove unfruitful null checks
on provided KafkaCommitCallbacks  This closes
#4187.
",448333,5049,217602,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7476","apache/flink","9de270cb4dc89ddea3dde11e3215b0f68f47b420",2,"2017-07-31 19:11:31+02:00","[FLINK-7323] [futures] Replace Flink's futures
with Java 8's CompletableFuture in MasterHooks
This closes #4437.
",448508,5052,218200,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7477","apache/flink","0a19c456ac7781d94eb0aaaf8f2ac73d0157bacb",2,"2017-06-21 18:04:43+02:00","[FLINK-7056][blob] add API to allow job-related
BLOBs to be stored  [FLINK-7056][blob] refactor
the new API for job-related BLOBs  For a cleaner
API, instead of having a nullable jobId parameter,
use two methods: one for job-related BLOBs,
another for job-unrelated ones.  This closes
#4237.
",446136,5064,217541,"Nico Kruber","nico@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7478","apache/flink","7b23624066c46d58c7b7181e5576a9834af9ac7a",3,"2017-06-27 18:29:44+02:00","[FLINK-7057][blob] move ref-counting from the
LibraryCacheManager to the BlobCache  Also change
from BlobKey-based ref-counting to job-based ref-
counting which is simpler and the mode we want to
use from now on. Deferred cleanup (as before) is
currently not implemented yet (TODO). At the
BlobServer, no ref-counting will be used but the
cleanup will happen when the job enters a final
state (TODO).  [FLINK-7057][blob] change to a
cleaner API for BlobService#registerJob()
[FLINK-7057][blob] implement deferred cleanup at
the BlobCache  Whenever a job is not referenced at
the BlobCache anymore, we set a TTL and let the
cleanup task remove it when this is hit and the
task is run. For now, this means that a BLOB will
be retained at most (2 * ConfigConstants.LIBRARY_C
ACHE_MANAGER_CLEANUP_INTERVAL) seconds after not
being referenced anymore. We do this so that a
recovery still has the chance to use existing
files rather than to download them again.
[FLINK-7057][blob] integrate cleanup of job-
related JARs from the BlobServer  TODO: an
integration test that verifies that this is
actually done when desired and not performed when
not, e.g. if the job did not reach a final
execution state  [FLINK-7057][tests] extract
FailingBlockingInvokable from
CoordinatorShutdownTest  [FLINK-7057][blob] add an
integration test for the BlobServer cleanup  This
ensures that BLOB files are actually deleted when
a job enters a final state.  [FLINK-7057][tests]
refrain from catching an exception just to fail
the test  removes code like this in the BLOB store
unit tests:  catch (Exception e) {
e.printStackTrace();     fail(e.getMessage()); }
[FLINK-7057][blob] fix BlobServer#cleanupJob()
being too eager  Instead of deleting the job's
directory, it was deleting the parent storage
directory.  [FLINK-7057][blob] fix BlobServer
cleanup integration  * the test did not check the
correct directories for cleanup * the test did not
honour the test timeout  [FLINK-7057][blob] test
and fix BlobServer cleanup for a failed job
submission  [FLINK-7057][blob] rework the
LibraryCacheManager API  Since ref-counting has
moved to the BlobCache, the
BlobLibraryCacheManager is just a thin wrapper to
get a user class loader by retrieving BLOBs from
the BlobCache/BlobServer. Therefore, move the job-
registration/-release out of it, too, and restrict
its use to the task manager where the BlobCache is
used (on the BlobServer, jobs do not need
registration since they are only used once and
will be deleted when they enter a final state).
This makes the BlobServer and BlobCache instances
available at the JobManager and TaskManager
instances, respectively, also enabling future use
cases outside of the LibraryCacheManager.
[FLINK-7057][blob] address PR comments
[FLINK-7057][blob] fix
JobManagerLeaderElectionTest  [FLINK-7057][blob]
re-introduce some ref-counting for
BlobLibraryCacheManager  Apparently, we do need to
return the same ClassLoader for different
(parallel) tasks of a job running on the same task
manager. Therefore, keep the initial task
registration implementation that was removed with
8331fbb208d975e0c1ec990344c14315ea08dd4a and only
adapt it here. This also restores some tests and
adds new combinations not tested before.
[FLINK-7057][blob] address PR comments
[FLINK-7057][tests] fix (manual/ignored)
BlobCacheCleanupTest#testJobDeferredCleanup()
[FLINK-7057][hotfix] fix a checkstyle error
[FLINK-7057][blob] remove the extra lock object
from BlobCache  We can lock on jobRefCounters
instead, which is what we are guarding anyway.
[FLINK-7057][blob] minor improvements to the TTL
in BlobCache  Do not use Long.MAX_VALUE as a code
for ""keep forever"". Also add more comments.
[FLINK-7057][blob] replace ""library-cache-
manager.cleanup.interval"" with
""blob.service.cleanup.interval""  Since we moved
the cleanup to the BLOB service classes, this only
makes sense.  [FLINK-7057][hotfix] remove an
unused import  [FLINK-7057][docs] adapt javadocs
of JobManager descendents  [FLINK-7057][blob]
increase JobManagerCleanupITCase timeout  The
previous value of 15s seems to be too low for some
runs on Travis.  [FLINK-7057][blob] providing more
debug output in JobManagerCleanupITCase  In case
the BlobServer's directory is not cleaned within
the remaining time, also print which files remain.
This may help debugging the situation.  This
closes #4238.
",447048,5068,217878,"Nico Kruber","nico@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7479","apache/flink","bd70a00019f2c9fc01653d0229308635529aad73",1,"2017-07-28 14:53:39+08:00","[FLINK-7269] Refactor passing of dynamic
properties  This closes #4415.
",447567,5074,218081,"zjureel","zjureel@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7480","apache/flink","c019787e5f6873b44607f55ba7a5bd876cb41421",1,"2017-08-16 15:17:45+02:00","[FLINK-7040] [rest] Add basics for REST
communication  Add better error message for get
requests with a body  Consistent error message for
404  Rework resolve URL generation  Rework handler
registration  Support concurrent requests  Rework
client response receival  Rework handler response
(remove HandlerResponse class)  tests: move
client/server shutdown into finally block  Close
connection in ClientHandler  Proper shutdown of
netty stack  simplify RestClientEndpoint lambda
chain  Provide handlers with access to
MessageParameters  This closes #4569.
",443574,5043,216769,"zentol","chesnay@apache.org","Till Rohrmann","trohrmann@apache.org"
"7481","apache/flink","41dba8bb71fd615bcab219a48708fb2b9c4762be",1,"2017-08-15 13:55:47+02:00","[FLINK-7459] Generalize Flink's redirection logic
Introduce RedirectHandler which can be extended to
add redirection functionality to all
SimpleInboundChannelHandlers. This allows to share
the same functionality across the
StaticFileServerHandler and the
RuntimeMonitorHandlerBase which could now be
removed. In the future, the AbstractRestHandler
will also extend the RedirectHandler.  This closes
#4551.
",446481,5071,218016,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7482","apache/flink","51d9a748d40f29b197b2d77fe8aa1b2439737da3",13,"2017-09-04 17:57:08+02:00","[FLINK-7580] Automatically retry failed gateway
retrievals  The LeaderGatewayRetriever
implementations, AkkaJobManagerRetriever and the
RpcGatewayRetriever, now automatically retry the
gateway retrieval operation for a fixed number of
times with a retry delay before completing the
gateway future with an exception.  Retry
AkkaJobManagerRetriever  Retry RpcGatewayRetriever
Add support for fenced components  This closes
#4643.
",446622,5073,218068,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7483","apache/flink","75e84e04f5a3e2766e331fd05ddb725fe9b00d99",2,"2017-08-17 15:04:19+02:00","[FLINK-7527] [rest] Let AbstractRestHandler extend
RedirectHandler  By letting the
AbstractRestHandler extend the RedirectHandler, we
add redirection capabilities to the
AbstractRestHandler.  This closes #4597.
",446751,5075,218152,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7484","apache/flink","42cc3a2a9c41dda7cf338db36b45131db9150674",3,"2017-09-20 17:39:35+02:00","[FLINK-7655] [flip6] Set fencing token to null if
not leader  This commit changes the fencing
behaviour such that a component which is not the
leader will set its fencing token to null. This
distinction allows to throw different exceptions
depending on whether it is a token mismatch or
whether the receiver has no fencing token set (==
not being the leader).  This closes #4689.
",447570,5092,218378,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7485","apache/flink","0073204b257860ad104cde29d3795b3c633f4759",7,"2017-09-04 12:30:41+02:00","[FLINK-7524] Remove potentially blocking behaviour
from AbstractCloseableRegistry.
",447717,5091,218368,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7486","apache/flink","5af463a9c0ff62603bc342a78dfd5483d834e8a7",6,"2017-09-07 11:24:12+02:00","[FLINK-7619] Improved abstraction of
AbstractAsyncIOCallable to better fit the current
usage pattern.
",447715,5090,218359,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7487","apache/flink","278989c7f3ebaa095838a32b031b5fb8335ee228",1,"2017-08-07 17:38:36+02:00","[FLINK-7411][network] minor (performance)
improvements in NettyMessage  * use a switch
rather than multiple if conditions * use static
`readFrom` methods to create instances of the
message sub types  This closes #4517.
",448476,5109,218771,"Nico Kruber","nico@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7488","apache/flink","2dd557fad4a0a205a3e163fa918507d34c933c6a",6,"2017-09-22 13:31:12+02:00","[FLINK-7667] [flip6] Use ArchivedExecutionGraph as
serializable AccessExecutionGraph  This commit
removes
AccessExecutionGraph#getCheckpointCoordinator and
changes the
AccessExecutionGraph#getJobCheckpointSettings into
#getJobCheckpointConfiguration. The
JobCheckpointConfiguration only contains the
CheckpointCoordinator relevant configuration
settings and excludes the serialized state backend
and the serialized master hooks. That way we don't
send unnecessary information when the
ArchivedExecutionGraph is requested.  This closes
#4727.
",448324,5106,218691,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7489","apache/flink","172a64c1488bd6edda97473562c6871ae7f3364d",5,"2017-09-26 18:39:15+02:00","[FLINK-7695] [flip6] Add JobConfigHandler for new
RestServerEndpoint  This closes #4737.
",448941,5113,218922,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7490","apache/flink","ac82becd21b7766c18d16abfc7e08334c644507e",10,"2017-09-29 15:09:06+02:00","[FLINK-7710] [flip6] Add
CheckpointStatisticsHandler for the new REST
endpoint  This commit also makes the
CheckpointStatsHistory object serializable by
removing the CheckpointStatsHistoryIterable and
replacing it with a static ArrayList.  This closes
#4750.
",449807,5121,219091,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7491","apache/flink","071e27f7d7459394e369aca788186f51bfb2e551",14,"2017-07-11 11:19:20+02:00","[FLINK-7068][blob] change BlobService sub-classes
for permanent and transient BLOBs
[FLINK-7068][blob] start introducing a new BLOB
storage abstraction  This is incomplete and may
not compile and/or run tests successfully yet.
[FLINK-7068][blob] remove BlobView from
TransientBlobCache  The transient BLOB cache is
not supposed to work with the HA store since it
only serves non-HA files.  [FLINK-7068][blob]
remove unnecessary use of BlobClient
[FLINK-7068][blob] implement
TransientBlobCache#put methods  [FLINK-7068][blob]
remove further unnecessary use of BlobClient and
adapt to HA get/put methods  [FLINK-7068][blob]
fix BlobServer#getFileInternal not being guarded
by locks  [FLINK-7068][blob] add incoming file
cleanup at BlobServer in cases of errors
[FLINK-7068] fix missing BlobServer#putHA() jobId
propagation  [FLINK-7068][blob] remove BlobClient
use from BlobServer{Get|Put}Test
[FLINK-7068][blob] make helper methods work with
any BlobService  [FLINK-7068][blob] start adding a
BlobCacheGetTest  [FLINK-7068][blob] verify get
contents in separate threads  This allows (at a
slight chance) that we may see an intermediate
file.  [FLINK-7068][blob] better locking
granularity during file retrieval  This allows
multiple parallel downloads from the HA store to
the BlobServer's local store although only one of
these downloaded staging files will actually be
used. In practice, this happens only during
recovery and not in parallel anyways.
[FLINK-7068][blob] share more code among
BlobServer and BlobServerConnection  This also
applies the better locking granularity of the
previous commit to BlobServerConnection.
[FLINK-7068][blob] properly cleanup temporary
staging files in all cases  [FLINK-7068][blob]
make PermanentBlobCache and TransientBlobCache
thread-safe  [FLINK-7068][tests] improve various
tests  [FLINK-7068][blob] change the signature of
the delete calls to return success  We will not
throw exceptions in case of failures anymore and
return whether the operation was successful
instead. Failure details will still be accessible
in the written logs.  [FLINK-7068][tests] extend
and adapt BlobServerDeleteTest
[FLINK-7068][tests] adapt further BlobCache tests
[FLINK-7068][tests] adapt BlobClientTest
[FLINK-7068][blob] cleanup BlobClient methods
BlobClient is not supposed to be used by anyone
else than the BlobServer/BlobCache classes. Most
accessors were already package-private, now remove
the ones that just blow up the code.  [FLINK-7068]
add a TODO to fix the currently failing tests
[FLINK-7068][tests] add a BlobCacheRecoveryTest
This currently fails due to TransientBlobCache#put
also storing files in HA store which it should
not!  [FLINK-7068][tests] improve failure message
[FLINK-7068][blob] add permanent/transient BLOB
modes to BlobClient  This allows a better control
of which should end up in HA store and which
should not. Also, during GET methods, we do not
check the HA store unnecessarily.
[FLINK-7068][tests] extend the
Blob{Server|Cache}GetTest  This adds some failing
GET operations and verifies that the files are
cleaned up accordingly.  [FLINK-7068][blob] remove
""final"" flag from BlobCache class  This re-enables
mocking in various unit tests.
[FLINK-7068][tests] fix test relying on order of
folder contents  [FLINK-7068][blob] some
BlobServer cleanup  [FLINK-7068][hotfix] fix
checkstyle errors  [FLINK-7068][tests] fix tests
now requiring a more complete BlobCache mock  A
suitable BlobCache mock should at least return a
mock for a permanent and a transient BLOB store,
so mock(BlobCache.class) is not sufficient
anymore.  [FLINK-7068] final wrap up  * remove a
left-over TODO * remove useless tests for the
concurrency of the GET operations (we cannot test
that the file write is guarded by a lock directly
- rely on the concurrent checks in the individual
threads instead) * fix some log messages
[FLINK-7068][blob] remove Thread#start() call from
BlobServer constructor  This is bad design and
limits extensibility, e.g. in tests like the
BlobCacheRetriesTest where this caused a race
condition with the sub-class. Instead, the user
must now call BlobServer#start() explicitely.
[FLINK-7068][tests] remove unused imports
[FLINK-7068][tests] fix a typo
[FLINK-7068][tests] add some tests that verify
behaviour with corrupted files  Also add
corruption checks for HA-store downloads which was
not implemented yet.  [FLINK-7068][blob] ensure
consistency in PermanentBlobCache even in cases of
invalid use  During cleanup, no write lock was
taken but the storage directory of an (unused!)
job was deleted. Normally, there should be no
process left accessing its data and no new process
can jump in since the registration is locked. In
case of invalid use cases, i.e. using a job's data
outside a register() and release() block, this
could lead to strange effects. By guarding the
cleanup with the write lock as well, we circumvent
that.  [FLINK-7068][hotfix] remove an unused
import
",451573,5131,220203,"Nico Kruber","nico@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7492","apache/flink","84a07a34ac22af14f2dd0319447ca5f45de6d0bb",50,"2017-09-20 12:05:25+02:00","[FLINK-7068][blob] Introduce permanent and
transient BLOB keys  [FLINK-7068][blob] address PR
review comments, part 1  [FLINK-7068][blob] create
a common base class for the BLOB caches
[FLINK-7068][blob] update some comments
[FLINK-7068][blob] integrate the BLOB type into
the BlobKey  [FLINK-7068][blob] rename a few
methods for better consistency  [FLINK-7068][blob]
fix Blob*DeleteTest not working as documented in
one test  [FLINK-7068][blob] add checks for jobId
being null in PermanentBlobCache
[FLINK-7068][blob] implement get-and-delete logic
for transient BLOBs  Transient BLOB files are
deleted on the BlobServer upon first access from a
cache. Therefore, we do not need the DELETE
operations anymore, aside from deleting the file
from the local cache (for now).
[FLINK-7068][blob] address PR comments, part 2
[FLINK-7068][blob] separate permanent and
transient BLOB keys  * create PermanentBlobKey and
TransientBlobKey (inheriting from BlobKey) and
forbid using transient BLOBs with permanent caches
and vice versa * make BlobKey package-private,
similarly for the BlobType which is now
reflected by the two BlobKey sub-classes -> this
gives a cleaner interface for the user  This
closes #4358.
",451697,5134,220388,"Nico Kruber","nico@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7493","apache/flink","536675b03a5050fda9c3e1fd403818cb50dcc6ff",2,"2017-10-02 16:25:18+02:00","[FLINK-7643] [core] Rework FileSystem loading to
use factories  This makes sure that configurations
are loaded once and file system instances are
properly reused by scheme and authority.  This
also factors out a lot of the special treatment of
Hadoop file systems and simply makes the Hadoop
File System factory the default fallback factory.
",451654,5140,220534,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7494","apache/flink","bad3df54d20677157f48c3ee1f3251d2c4bce8ba",2,"2017-10-05 11:26:13+02:00","[FLINK-7767] [file system sinks] Avoid loading
Hadoop conf dynamically at runtime
",451643,5140,220520,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7495","apache/flink","d20728ba46977704827252ee5029bef9f949d5ab",1,"2017-07-12 15:14:13+02:00","[FLINK-6988][kafka] Implement our own
KafkaProducer class with transactions recovery
",452050,5147,220797,"Piotr Nowojski","piotr.nowojski@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7496","apache/flink","2f651e9a69a9929ef154e7bf6fcba624b0e8b9a1",2,"2017-06-23 09:14:28+02:00","[FLINK-6988][kafka] Add flink-connector-kafka-0.11
with exactly-once semantic
",453588,5161,221528,"Piotr Nowojski","piotr.nowojski@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7497","apache/flink","ad380463d3d44cdd98302bf072bc5deba8696b5b",4,"2017-09-20 14:55:46+02:00","[FLINK-7072] [REST] Define protocol for job
submit/cancel/stop  [FLINK-7072] [REST] Extend
Dispatcher  [FLINK-7072] [REST] Add handlers for
job submit/cancel/stop  [FLINK-7072] [REST] CLI
integration  use ExecutorThradFactory +
rebase(blobKey fix)  add ""Flink"" prefix to RestCC
threads  shutdown client for cancel/shutdown
Rework CliFrontEnd Stop/Cancel tests  These tests
verified that the CLI was sending the correct
messages and parameters to the JM actor. This is
now handled by the ClusterClient, so the tests
were adjusted to verify that the correct methods
on the ClusterClient are being called.  Additional
tests were added to the ClusterClientTest class to
verify that the correct messages and parameters
are being sent.  This closes #4742.
",454522,5178,221942,"zentol","chesnay@apache.org","Till Rohrmann","trohrmann@apache.org"
"7498","apache/flink","0a286d0ff98afa68034daff4634f526eaaf97897",13,"2017-10-02 19:39:38+02:00","[FLINK-7709] Add CheckpointStatisticDetailsHandler
for new REST endpoint  Disable failing when not
all creator properties are known  Move
CheckpointStatsCache out of legacy package; Remove
unused CheckpointingStatistics#generateCheckpointS
tatistics method  Remove
JsonInclude.Include.NON_NULL from
CheckpointStatistics; Pull null check out of
CheckpointStatistics#generateCheckpointStatistics;
Make
CheckpointStatistics#checkpointStatisticcsPerTask
non nullable; Add fail on missing creator property
This closes #4763.
",455286,5187,222263,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7499","apache/flink","a76de2860d2ee78e673c97fba3394f099389ad75",2,"2017-10-11 13:58:59+02:00","[FLINK-7791] [REST][client] Integrate LIST command
into RestClusterClient  This closes #4802.
",456578,5226,222986,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7500","apache/flink","f853f33593373f75a72351f5256564533bc063f9",3,"2017-10-05 09:33:27+02:00","[FLINK-7140][blob] add an additional random
component into the BlobKey  This should guard us
from uploading (and deleting) the same file more
than once and also from hash collisions.  This
closes #4359.
",456700,5226,223064,"Nico Kruber","nico@data-artisans.com","Till","till.rohrmann@gmail.com"
"7501","apache/flink","eaa5a4668d0b64bf67111e50765cc4dbf739f0e9",1,"2017-04-12 11:25:41+02:00","[FLINK-6314] [cassandra] Support user-defined
Mapper options  This closes #4831.
",458065,5249,223785,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7502","apache/flink","a1d48317964df584c66d2cc9d7f539d31fa3d713",4,"2017-10-05 15:18:58+02:00","[FLINK-7196][blob] add a TTL to all transient
BLOBs  Transient BLOB files should not exist for
long and are only deleted manually from the caches
and after access on the server. This uses the BLOB
storage's cleanup interval to set a TTL on all
transient BLOB files as a backup cleanup path. The
cleanup task itself runs every cleanupInterval
seconds and removes all transient BLOBs for which
the TTL is older than the current time. This way,
a transient BLOB stays at most 2*cleanupInterval
seconds before getting deleted automatically.
This closes #4381.
",458834,5257,224091,"Nico Kruber","nico@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7503","apache/flink","bee8c995404cffc53e95800b77a3eb55355d08a5",1,"2017-10-11 00:16:31+02:00","[hotfix] Remove redundant job status logging
",458864,5256,224113,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7504","apache/flink","a292b218237431e50d89c67aed97c5b4c5e1a1a8",3,"2017-10-18 10:55:29+02:00","[FLINK-6861][metrics] Use OperatorID in metric
system  This closes #4849.
",459012,5256,224136,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7505","apache/flink","7a9df74eaff94601abf1caf974eb88d347d34cfe",1,"2017-10-06 12:02:54+02:00","[FLINK-6046] offload large data from the
TaskDeploymentDescriptor to the BlobServer  This
only includes potentially big parts, i.e.
serializedJobInformation and
serializedTaskInformation, which are both
offloaded only once for all parallel instances.  -
adds a configurable akka.rpc.offload.minsize
threshold for large data - serialized task
information is uploaded only once per task,
irrespective of   the parallelism
[FLINK-6046][tests] added an integration test with
a job with big payload  This verifies that
uploading a job with a payload of 100MB is
successful.  NOTE: This only works after also
implementing JobGraph offloading during submission
or akka.framesize will already limit it when
sending it form the client to the jobmanager.
This closes #4412.  Set min offloading size to 1
MiB
",459956,5265,224547,"Nico Kruber","nico@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7506","apache/flink","a9743eb6850809784930c1199741aa83ae54e99a",2,"2017-10-25 17:31:45+02:00","[FLINK-7920] Make MiniClusterConfiguration
immutable  This closes #4905.
",460715,5273,224796,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7507","apache/flink","0e97220420c2d7641e28f0b702a736c62c05bd41",1,"2017-10-26 14:24:34+02:00","[hotfix] Make internal KafkaProducer11 details
package private
",462927,5293,225985,"Aljoscha Krettek","aljoscha.krettek@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7508","apache/flink","8cdf2ff7e5817acc0c239ce31c098daf33d326b7",1,"2017-10-26 19:17:55+02:00","[FLINK-7784] [kafka011-producer] Make
TwoPhaseCommitSinkFunction aware of transaction
timeouts.  TwoPhaseCommitSinkFunction allows to
configure a transaction timeout. The timeout can
be used to log warnings if the transaction's age
is appraoching the timeout, and it can be used to
swallow exceptions that are likely irrecoverable.
This commit also integrates these changes to the
FlinkKafkaProducer011.  This closes #4910.
",463916,5299,226254,"gyao","gary@data-artisans.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7509","apache/flink","c61d18605ace57adbe84a2b05a50308043452398",3,"2017-10-31 15:38:32+01:00","[FLINK-7732][kafka-consumer] Do not commit to
kafka Flink's sentinel offsets  This closes #4928.
",463928,5299,226254,"Piotr Nowojski","piotr.nowojski@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7510","apache/flink","fdf684427165e8068d4229a340b8e03548e022ef",4,"2017-10-17 17:02:30+02:00","[FLINK-7862] [flip6] Add TaskManagerDetailsHandler
Pass MetricQueryServiceRetriever to
DispatcherRestEndpoint  This closes #4862.
",465471,5323,227169,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7511","apache/flink","de201a6c0f8739c12918817d2ef571abb2898f37",2,"2017-11-03 09:59:17+01:00","[FLINK-7705] Add JobDetailsHandler  Add
JobID(De)Serializer and JobVertexID(De)Serializer
for jackson  This closes #4884.
",466042,5331,227340,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7512","apache/flink","d7c2c417213502130b1aeab1868313df178555cc",1,"2017-11-08 23:57:04+01:00","[FLINK-8125] [core] Introduce limiting of outgoing
file system connections
",474886,5382,231652,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7513","apache/flink","1119c48c2470e280aaf3441ce170245070dd0986",3,"2017-11-22 18:58:03+01:00","[FLINK-7718] [flip6] Add JobVertexMetricsHandler
to DispatcherRestEndpoint  Migrate logic in org.ap
ache.flink.runtime.rest.handler.legacy.metrics.Job
VertexMetricsHandler to new handler and add new
handler to DispatcherRestEndpoint. Add common
classes for remaining implementations of org.apach
e.flink.runtime.rest.handler.legacy.metrics.Abstra
ctMetricsHandler, which require migration as well.
[FLINK-7718] [flip6] Clean up
JobVertexMetricsHandlerHeaders  [FLINK-7718]
[flip6] Assert that HTTP code is 404 if metric is
unknown  [FLINK-7718] [flip6] Minor fixes in
Javadocs  [FLINK-7718] [flip6] Add unit test for
AbstractMetricsHandlerHeaders  [FLINK-7718]
[flip6] Let unit tests inherit from TestLogger
[FLINK-7718] [flip6] Re-format Metric constructor
[FLINK-7718] [flip6] Fix mistake in Javadoc of
AbstractMetricsHandlerHeaders  [FLINK-7718]
[flip6] Rename AbstractMetricsHandlerHeaders to
AbstractMetricsHeaders  Strip the term Handler
from the Header class. Also rename its subclasses.
[FLINK-7718] [flip6] No longer return HTTP 404 if
metric is unknown  [FLINK-7718] [flip6] Make
JobVertexMetricsHeaders class final  [FLINK-7718]
[flip6] Introduce MetricsHandlerTestBase for
future MetricHandlers  [FLINK-7718] [flip6] Always
return same MessageParameter objects in
JobVertexMetricsMessageParameters  This closes
#5055.
",475496,5396,232009,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7514","apache/flink","cb85640bb3da2e64eafbfc5c749aab7463702ebd",1,"2017-11-27 13:57:48+01:00","[FLINK-7717][flip6] Migrate
TaskManagerMetricsHandler to new
RestServerEndpoint  Migrate logic in org.apache.fl
ink.runtime.rest.handler.legacy.metrics.TaskManage
rMetricsHandler to new handler, and add new
handler to DispatcherRestEndpoint.
[FLINK-7717][flip6] Use taskmanagerid constant in
TaskManagerMetricsHandlerTest  This closes #5081.
",475839,5405,232208,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7515","apache/flink","49a89960bc7010c6f5f9d28e7d7f26c94d517f16",1,"2017-11-28 16:07:48+01:00","[FLIP-7716][flip6] Migrate
JobManagerMetricsHandler to new RestServerEndpoint
Migrate logic in org.apache.flink.runtime.rest.han
dler.legacy.metrics.JobManagerMetricsHandler to
new handler and add new handler to
DispatcherRestEndpoint.  [FLINK-7716][Javadoc]
Deprecate method MetricStore#getJobManager().
There is a semantically equivalent method in
MetricStore.  This closes #5083.
",475939,5410,232313,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7516","apache/flink","97f6b63b12ba9f3fab119e997c738b38d3adbef9",1,"2017-11-28 16:30:27+01:00","[FLINK-8143][flip6] Migrate SubtaskMetricsHandler
to new RestServerEndpoint  Migrate logic from org.
apache.flink.runtime.rest.handler.legacy.metrics.S
ubtaskMetricsHandler to new handler. Add new
handler to DispatcherRestEndpoint.
[FLINK-8143][flip6] Assert that
SubtaskIndexPathParameter is mandatory
[FLINK-8143][flip6] Use path parameter constants
in SubtaskMetricsHandlerTest  This closes #5082.
",476124,5417,232457,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7517","apache/flink","4daf9223a7b2ca8aec62fefd06b0152cbc2aa668",1,"2017-11-28 16:42:13+01:00","[FLINK-7694][flip6] Migrate JobMetricsHandler to
new RestServerEndpoint  Migrate logic in org.apach
e.flink.runtime.rest.handler.legacy.metrics.JobMet
risHandler to new handler, and add new handler to
DispatcherRestEndpoint.  [FLINK-7694][flip6] Use
jobid path parameter constant in
JobMetricsHandlerTest  This closes #5084.
",476248,5423,232575,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7518","apache/flink","b0bd65db9bb9d41ad85634d08dc8b9dae2cfa8dd",12,"2017-11-29 18:09:56+01:00","[FLINK-8027] Generalize existing rest handlers to
work with an arbitrary RestfulGateway  By letting
the existing REST handlers work with an arbitrary
RestfulGateway, they can be used by the Dispatcher
as well as the JobMaster, once it implements the
RestfulGateway.  This closes #4985.
",476293,5426,232655,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7519","apache/flink","7bca9e4613ff30ab6a9c11e673a785f3f5c86e69",2,"2017-11-15 14:20:27+01:00","[FLINK-8085] Thin out LogicalSlot interface
Remove isCanceled, isReleased method and decouple
logical slot from Execution by introducing a
Payload interface which is set for a LogicalSlot.
The Payload interface is implemented by the
Execution and allows to fail an implementation and
obtaining a termination future.  Introduce proper
Execution#releaseFuture which is completed once
the Execution's assigned resource has been
released.  This closes #5087.
",478181,5447,233674,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7520","apache/flink","627bcda6957b2ad61b67b98a7d0a1de2c1f3eb29",2,"2017-12-06 18:01:58+01:00","[FLINK-8120] [flip6] Register Yarn application
with correct tracking URL  The cluster entrypoints
start the ResourceManager with the web interface
URL. This URL is used to set the correct tracking
URL in Yarn when registering the Yarn application.
This closes #5128.
",478228,5447,233673,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7521","apache/flink","bc1c375aa061f27a2fbc5a7688b06da70fed5d20",1,"2017-11-24 18:06:10+01:00","[FLINK-8088] Associate logical slots with the slot
request id  Before logical slots like the
SimpleSlot and SharedSlot where associated to the
actually allocated slot via the AllocationID.
This, however, was sub-optimal because allocated
slots can be re-used to fulfill also other slot
requests (logical slots). Therefore, we should
bind the logical slots to the right id with the
right lifecycle which is the slot request id.
This closes #5089.
",478462,5452,233797,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7522","apache/flink","0ef7fddeff8430fd40d2d7a1b8a6454fd9416ced",29,"2017-12-14 15:24:35+01:00","[FLINK-7956] [flip6] Add support for queued
scheduling with slot sharing to SlotPool  This
commit adds support for queued scheduling with
slot sharing to the SlotPool. The idea of slot
sharing is that multiple tasks can run in the same
slot. Moreover, queued scheduling means that a
slot request must not be completed right away but
at a later point in time. This allows to start new
TaskExecutors in case that there are no more slots
left.  The main component responsible for the
management of shared slots is the
SlotSharingManager. The SlotSharingManager
maintains internally a tree-like structure which
stores the SlotContext future of the underlying
AllocatedSlot. Whenever this future is completed
potentially pending LogicalSlot instantiations are
executed and sent to the slot requester.  A shared
slot is represented by a MultiTaskSlot which can
harbour multiple TaskSlots. A TaskSlot can either
be a MultiTaskSlot or a SingleTaskSlot.  In order
to represent co-location constraints, we first
obtain a root MultiTaskSlot and then allocate a
nested MultiTaskSlot in which the co-located tasks
are allocated. The corresponding SlotRequestID is
assigned to the CoLocationConstraint in order to
make the TaskSlot retrievable for other tasks
assigned to the same CoLocationConstraint.  Port
SchedulerSlotSharingTest,
SchedulerIsolatedTasksTest and
ScheduleWithCoLocationHintTest to run with
SlotPool.  Restructure SlotPool components.  Add
SlotSharingManagerTest, SlotPoolSlotSharingTest
and SlotPoolCoLocationTest.  This closes #5091.
",480147,5463,234441,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7523","apache/flink","9f68e790fc28197f89638cc83d1612f8f7a796a8",2,"2017-12-18 20:21:20-08:00","[FLINK-8287] [kafka] Improve Kafka producer
Javadocs / doc to clarify partitioning behaviour
",481233,5473,235436,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7524","apache/flink","268867ce620a2c12879749db2ecb68bbe129cad5",2,"2017-08-10 13:29:13+08:00","[FLINK-7406][network] Implement Netty receiver
incoming pipeline for credit-based
",481843,5475,235658,"Zhijiang","wangzhijiang999@aliyun.com","Stefan Richter","s.richter@data-artisans.com"
"7525","apache/flink","718a2ba0bb1867d7053d813eb76cf6796b35d86f",4,"2017-08-17 19:38:45+08:00","[FLINK-7468][network] Implement sender backlog
logic for credit-based  THis closes #4559.
",482757,5489,236123,"Zhijiang","wangzhijiang999@aliyun.com","Stefan Richter","s.richter@data-artisans.com"
"7526","apache/flink","08e550c98674738ab883ea84c0350093c9765ab6",1,"2017-12-19 18:58:53+01:00","[FLINK-8234][flip6] Cache JobExecutionResult in
Dispatcher  - Introduce new JobExecutionResult
used by JobMaster to forward the information in
the already existing JobExecutionResult. - Always
cache a JobExecutionResult. Even in case of job
failures. In case of   job failures, the
serialized exception is stored additionally. -
Introduce new methods to RestfulGateway to allow
retrieval of cached   JobExecutionResults
[FLINK-8234][flip6] Rename JobExecutionResult ->
JobResult  [FLINK-8234][flip6] Update
MiniClusterJobDispatcher  Do not store job failure
exception in a separate field because the
JobResult already contains the exception.
[FLINK-8234][flip6] Make JobResult Serializable
[FLINK-8234][flip6] Add Javadoc to JobResult
builder  [FLINK-8234][flip6] Add Javadoc to
JobResult#serializedThrowable  [FLINK-8234][flip6]
Wrap JobResults in SoftReferences  Wrap instances
of JobResult stored in JobExecutionResultCache in
SoftReferences so that the GC can free them
according to memory demand.  [FLINK-8234][flip6]
Fix checkstyle violations  [FLINK-8234][flip6] Add
Javadoc to JobResult  This closes #5184.
",483892,5501,236733,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7527","apache/flink","86892b8e76a4e4b26cedf38c0695c53814a7f04f",6,"2017-12-20 14:44:03+01:00","[FLINK-8233][flip6] Add JobExecutionResultHandler
- Allow retrieval of the JobResult cached in
Dispatcher.     - Implement serializer and
deserializer for JobResult.  [FLINK-8233][flip6]
Improve JobResultDeserializer and add tests
[FLINK-8233][flip6] Exclude null
jobExecutionResult from serialization
[FLINK-8233][flip6] Add TestLogger to
JobResultDeserializerTest  This closes #5194.
",484656,5516,237065,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7528","apache/flink","06922753a55dc322b96919ebb407d531e2b79d3e",2,"2017-12-23 00:02:10+01:00","[FLINK-8299][flip6] Retrieve JobExecutionResult
after job submission  [FLINK-8299][flip6] Improve
ExponentialWaitStrategy  Add additional argument
validation. Add more unit tests.  This closes
#5207.
",484784,5522,237187,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7529","apache/flink","69fff746ac99ec3ad428edf4500e38de17f2b797",1,"2018-01-12 08:45:32+08:00","[FLINK-8306] [kafka, tests] Fix mock verifications
on final method  Previously, offset commit
behavioural tests relied on verifying on
AbstractFetcher::commitInternalOffsetsToKafka().
That method is actually final, and could not be
mocked.  This commit fixes that by implementing a
proper mock AbstractFetcher, which keeps track of
the offset commits that go through.  This closes
#5284.
",485022,5526,237296,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7530","apache/flink","30011b9b110aad0e1c28e7e0a025b73986781a72",1,"2018-01-03 13:25:09+01:00","[FLINK-8340] [flip6] Remove passing of
Configuration to CustomCommandLine  Since the
Configuration does not change over the lifetime of
a CustomCommandLine, we can safely pass it as a
constructor argument instead of method argument.
This closes #5226.
",485216,5526,237283,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7531","apache/flink","782ec6dc4c3a4d4825c8f99af0b596be766c1312",10,"2018-01-01 18:59:42+01:00","[FLINK-8317][flip6] Implement savepoints in
RestClusterClient  Allow triggering of savepoints
through RestfulGateway. Implement REST handlers to
trigger and query the status of savepoints.
Implement savepoint command in RestClusterClient.
[FLINK-8317][flip6] Rename field
QueueStatus#statusId to id  [FLINK-8317][flip6]
Simplify initialization of RpcUtils#INF_TIMEOUT
[FLINK-8317][flip6] Add missing fail() to test in
SavepointHandlersTest  [FLINK-8317][flip6] Add
TestLogger to unit tests  [FLINK-8317][flip6]
Replace anonymous with lambda  [FLINK-8317][flip6]
Extract string constants to variables in
RestClusterClientTest  [FLINK-8317][flip6] Move
method RestClusterClient#waitForResource
[FLINK-8317][flip6] Do not wait if resource is
already completed  [FLINK-8317][flip6] Only return
savepoint location from triggerSavepoint  Only
return the savepoint's location from
RestfulGateway#triggerSavepoint. Fix mistakes in
Javadoc. Rename occurrences of checkpoint to
savepoint in SavepointHandlers class.
[FLINK-8317][flip6] Declare
SavepointHandlers#defaultSavepointDir final  This
closes #5223.
",486064,5540,237680,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7532","apache/flink","03c797a1d279a6c09c988755f94566a3d46cbb17",1,"2017-08-25 12:13:54+02:00","[FLINK-7518][network] pass our own NetworkBuffer
to netty  This is using a composite buffer to
assemble header+content and avoids an unnecessary
buffer copy from our (Network)Buffer class backed
by a MemorySegment to Netty's ByteBuf class.  This
closes #4615.
",490189,5568,238887,"Nico Kruber","nico@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7533","apache/flink","fa03e78d3a245b40ceb3efffeb3020853e74e48b",18,"2017-10-25 19:04:10+02:00","[FLINK-5823] [checkpoints] State backends define
checkpoint and savepoint directories, improved
configuration
",490672,5575,239460,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7534","apache/flink","edc6f1000704a492629d7bdf8cbfa5ba5c45bb1f",6,"2017-10-26 21:26:00+02:00","[FLINK-5823] [checkpoints] State backends now also
handle the checkpoint metadata
",491181,5586,239917,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7535","apache/flink","402a2e30c750e1bcb753643ed66c6df0dd861112",2,"2017-08-21 14:31:38+02:00","[FLINK-7719] [checkpoints] Send checkpoint id to
task as part of deployment descriptor when
resuming
",491451,5590,240121,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7536","apache/flink","517b3f87214168a445b5751cda210ecf3a292fd6",10,"2017-09-27 15:10:52+02:00","[FLINK-7720] [checkpoints] Centralize creation of
backends and state related resources  This closes
#4745.
",492658,5602,240451,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7537","apache/flink","524c5013a1e877cdaf2f4269863a49851eabda85",1,"2018-01-23 22:00:06+01:00","[FLINK-8466] [runtime] Make sure ErrorInfo
references no user-defined classes.  That way,
holding on to the ErrorInfo does not prevent class
unloading.  However, this implies that the
ErrorInfo must not hold strong references to any
Exception classes. For that reason, the commit
pull the ""ground truth"" exception into a separate
fields, so that the ExecutionGraph logic itself
can always assume to have the proper ground-truth
exception.  This closes #5348
",492735,5599,240365,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7538","apache/flink","37b4e2cef687160f2bc7cedb7d2360825089569e",1,"2018-01-24 12:24:35+01:00","[FLINK-7858][flip6] Return with HTTP 404 if job or
jobvertex are unknown  Annotate
AccessExecutionGraph#getJobVertex(JobVertexID)
with @Nullable. Throw NotFoundException in
JobVertexTaskManagersHandler if jobvertexId is
unknown. Throw NotFoundException in
AbstractExecutionGraphHandler if jobId is unknown.
Copy Javadoc from legacy
JobVertexTaskManagersHandler.
",493119,5604,240487,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7539","apache/flink","8f9dbeca8bbb8f74bc17410b2f39903ea1f95af1",1,"2018-01-25 17:03:39+01:00","[FLINK-8449] [flip6] Extend OnCompletionActions to
accept an SerializableExecutionGraph  This commit
changes the OnCompletionActions interface such
that it accepts an ArchivedExecutionGraph instead
of a plain JobResult. This allows to archive the
completed ExecutionGraph for further usage in the
container component of the JobMasterRunner.  This
closes #5308.
",493943,5607,240775,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7540","apache/flink","8b817f0f9f0ec55f040b56f2d65c62761eac1ac1",3,"2018-01-19 14:20:03+01:00","[FLINK-8453] [flip6] Add
ArchivedExecutionGraphStore to Dispatcher  The
ArchivedExecutionGraphStore is responsible for
storing completed jobs for historic job requests
(e.g. from the web ui or from the client). The
store is populated by the Dispatcher once a job
has terminated.  The
FileArchivedExecutionGraphStore implementation
persists all ArchivedExecutionGraphs on disk in
order to avoid OOM problems. It only keeps some of
the stored graphs in memory until it reaches a
configurable size. Once coming close to this size,
it will evict the elements and only reload them if
requested again. Additionally, the
FileArchivedExecutionGraphStore defines an
expiration time after which the execution graphs
will be removed from disk. This prevents excessive
use of disk resources.  This closes #5310.
",494663,5613,241001,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7541","apache/flink","a6d7f2d72d47b268c0d6ffa402a59a6349c91d95",3,"2018-01-19 14:33:08+01:00","[FLINK-8454] [flip6] Remove
JobExecutionResultCache from Dispatcher  With the
introduction of the ArchivedExecutionGraphStore to
the Dispatcher, it is no longer necessary to store
the JobResult separately. In order to decrease
complexity and state duplication, this commit
removes the JobExecutionResultCache and instead
uses the ArchivedExecutionGraphStore to serve
completed job information. A side effect of this
change is that the JobExecutionResult is now
available as long as the completed Flink job is
stored in the ArchivedExecutionGraphStore.  This
closes #5311.
",494567,5610,240897,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7542","apache/flink","ac8225fd56f16b1766724aefbd44babbe322d2ac",3,"2018-01-18 18:17:40+01:00","[FLINK-8344][flip6] Retrieve leading WebMonitor in
RestClusterClient  Make WebMonitorEndpoint
instances participate in leader election. Use
leading instance's base url to issue HTTP request
from RestClusterClient. Make polling of
JobExecutionResults and savepoints fault tolerant.
[FLINK-8344][flip6] Add TestLogger to unit tests
[FLINK-8344][flip6] Update RestOptions  Declare
timeouts and delays as long datatype. Add
descriptions to ConfigOptions.
[FLINK-8344][flip6] Rename methods in
RestClusterClient  Rename
waitForSavepointCompletion to pollSavepointAsync.
Rename waitForResource to pollResourceAsync.  This
closes #5312.
",495123,5613,241019,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7543","apache/flink","7d4bd4b6d6710a7e81a7883aee1947a76d564b9a",2,"2018-01-22 14:46:02+01:00","[FLINK-6464][streaming] Stabilize default window
operator names  This closes #5332.
",496794,5617,242236,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7544","apache/flink","1887187f6b5c210d2091c69ef14fa8b8a5cae82c",4,"2018-01-10 17:14:06+01:00","[FLINK-8531] [checkpoints] (part 6) Tasks resolve
CheckpointStreamFactory from CheckpointStorage and
Checkpoint Location Reference to persist
checkpoint data.
",497909,5620,242886,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7545","apache/flink","e0b0f45bd9c8b06bd2cda56f6859d0d3944aa00e",2,"2018-01-26 12:06:44+01:00","[FLINK-8531] [checkpoints] (part 8) Add tests for
the FsCheckpointStorage and
MemoryBackendCheckpointStorage.
",497862,5621,242935,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7546","apache/flink","f9dd19b584fca5932594392b0afc9f1d0eec7f1a",1,"2018-01-31 16:54:58+01:00","[FLINK-8539] [checkpointing] (part 1) Introduce
CompletedCheckpointStorageLocation to properly
handle disposal of checkpoints.  That concept
allows us to properly handle deletion of a
checkpoint storage, for example deleting
checkpoint directories, or the dropping of a
checkpoint specific table.  This replaces the
current workaround for file systems, where every
file disposal checks if the parent directory is
now empty, and deletes it if that is the case.
That is not only inefficient, but prohibitively
expensive on some systems, like Amazon S3.
",498018,5625,243090,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7547","apache/flink","d85a62db13a1d90159e7e8f924c8006febad552b",1,"2018-01-31 17:01:33+01:00","[FLINK-8539] [checkpointing] (part 3) Rename
FixFileFsStateOutputStream to
FsCheckpointMetadataOutputStream  The new name
captures the proper use and meaning of the class
in a better way.
",498094,5627,243141,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7548","apache/flink","cef6741a91fcb83757a82a39b04d074b1a1311cf",4,"2018-01-22 18:11:04+01:00","[FLINK-8493] [flip6] Integrate queryable state
with Flip-6  Adapt KvStateRegistry to accept
multiple KvStateRegistryListeners. Introduce the
KvStateLocationOracle to retrieve the
KvStateLocation. Adapt the KvStateClientProxy to
accept multiple KvStateLocationOracles to retrieve
the KvStateLocations for different jobs.
Registered the KvStateRegistryListener and
KvStateLocationOracle in TaskExecutor upon
establishing a connection to the JobMaster.  This
closes #5339.
",499194,5641,243573,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7549","apache/flink","22bf3861c95ed93b2eb5f8d0661d282ef6cdbbc8",5,"2018-02-06 11:01:36+01:00","[FLINK-8501] [flip6] Use single BlobCacheService
per TaskExecutor  Instead of creating for each new
JobManagerConnection a dedicated BlobCacheService
the TaskExecutor uses a single BlobCacheService
which it shares between the different
JobManagerConnections. The initial BlobServer
address is passed by the ResourceManager when the
TaskExecutor registers at it. In order to avoid
the re- creation of BlobCacheServices, this commit
changes the behaviour such that one can update the
BlobServer address.  This closes #5350.
",499392,5644,243641,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7550","apache/flink","5f573804f0f486db7cc594ae678adff5ae7f217c",4,"2018-02-06 11:05:40+01:00","[FLINK-8503] [flip6] Display TaskExecutor logs and
stdout files in web ui  Introduce the
AbstractHandler which takes a typed request and
returns an untyped response. The
AbstractRestHandler extends the AbstractHandler to
add typed reponses.  Introduce
AbstractTaskManagerFileHandler which encapsulates
the file loading logic. Upon request of a
TaskManager file, the handler will trigger the
file upload via the ResourceManager. The returned
TransientBlobKey is then downloaded via the
TransientBlobService. Once downloaded, the file is
served to the client. Each transient blob key is
cached for maximum duration after which it is
purged and has to be reuploaded by the
TaskExecutor.  This closes #5353.
",500088,5654,243903,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7551","apache/flink","c1280a5056196e2c20e50dc6c3631ca93c877e58",8,"2018-02-06 13:31:02+01:00","[FLINK-7856][flip6] Port
JobVertexBackPressureHandler to REST endpoint
This closes #5397.
",500672,5662,244116,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7552","apache/flink","c6c17befe54d55755ebaf160ff20a11aa32bbbca",1,"2017-12-21 14:38:54+01:00","[FLINK-3659] Expose broadcast state on DataStream
API.
",503734,5687,245255,"kkloudas","kkloudas@gmail.com","kkloudas","kkloudas@gmail.com"
"7553","apache/flink","5fe31cbf26f35ae6921d543d362d2d9f006f45db",2,"2017-08-10 13:41:40+08:00","[FLINK-7124] [flip6] Add test to verify rescaling
JobGraphs works correctly  This commit adds two
tests to verify behaviours of rescaling JobGraphs:
1. JobGraphs can be consecutively rescaled to
arbitrary valid DOPs 2. Rescaling beyond max
parallelism would fail  The second test, however,
is temporarily disabled for now since it doesn't
properly fail.  This closes #4510.
",504397,5692,245508,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Till Rohrmann","trohrmann@apache.org"
"7554","apache/flink","39df56d6aebb3911f19593dbf120d42789e8db5a",1,"2018-02-14 16:48:47+01:00","[FLINK-7713][flip6] Implement JarUploadHandler
This closes #5442.
",505681,5715,246174,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7555","apache/flink","a9fdbc4be2a7b2c10d524f92927534a15edf9b3e",2,"2017-09-30 14:36:19+08:00","[FLINK-7456][network] Implement Netty sender
incoming pipeline for credit-based  This closes
#4552.
",506956,5725,246676,"Zhijiang","wangzhijiang999@aliyun.com","Stefan Richter","s.richter@data-artisans.com"
"7556","apache/flink","4e6d22b2135216d1fab97477a6058faf1f84b789",5,"2018-02-14 20:47:11+01:00","[FLINK-7711][flip6] Implement JarListHandler  This
closes #5209. This closes #5455.
",510889,5769,248150,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7557","apache/flink","0e87e485ba14fc0c8a5f5aa96c79b45ef7fc45d1",1,"2018-02-15 11:16:12+01:00","[FLINK-8612] [flip6] Enable non-detached job mode
The non-detached job mode waits until has served
the JobResult of a completed job at least once
before it terminates.  This closes #5435.
",510958,5769,248167,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7558","apache/flink","3a4e89643d7d7642dde9b5644491f261d4d545bd",1,"2018-02-13 15:19:18+01:00","[FLINK-8546] [flip6] Respect savepoints and
restore from latest checkpoints  Let the JobMaster
respect checkpoints and savepoints. The JobMaster
will always try to restore the latest checkpoint
if there is one available. Next it will check
whether savepoint restore settings have been set.
If so, then it will try to restore the savepoint.
Only if these settings are not set, the job will
be started from scratch.  This closes #5444.
",512535,5810,249515,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7559","apache/flink","80883feeeba5232ecd41fe6759c69bf2ff1a6483",1,"2018-02-01 19:51:59+01:00","[FLINK-8548] [examples] Add state machine example
This adds an example of using a state machine for
pattern validation. The example illustrates the
use of state and the kafka connector.  This closes
#5401
",513037,5821,249954,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7560","apache/flink","fac5aff979976b19b49a65243cfcc788dece8bcf",1,"2018-02-16 18:01:58+01:00","[FLINK-8675] Add non-blocking shut down method to
RestServerEndpoint  Make shut down method of
RestServerEndpoint non blocking.  This closes
#5511.
",512990,5821,249961,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7561","apache/flink","2a18f0532b22edf8b821ef883598f4ee52367711",1,"2018-02-20 17:48:27+01:00","[FLINK-8705] [flip6] Add DispatcherRestEndpoint to
MiniCluster  In order to properly support the
RemoteEnvironment, the Flip-6 MiniCluster needs a
REST endpoint to receive requests from the
RestClusterClient.  This closes #5527.
",513252,5838,250281,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7562","apache/flink","0db9c5bc3d3f61a3af3a94281ed2bf580007b873",2,"2018-02-19 18:35:09+01:00","[FLINK-7712][flip6] Implement JarDeleteHandler
This closes #5529.
",513495,5844,250400,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7563","apache/flink","831349a617d2bd3b9be6d3c1ca777baa25276c88",18,"2018-02-02 11:23:00+01:00","[FLINK-8632] [flip6] Introduce generalized
asynchronous operation handlers  The asynchronous
operation handlers are the generalization of the
SavepointHandlers. They consist of a Trigger- and
a StatusHandler. The TriggerHandler is used to
trigger an asynchronous operation. The handler
stores the operation future and returns a trigger
id. The trigger id can be used to query the status
of the operation via the StatusHandler. Once the
operation has completed, the StatusHandler will
return the result.  This closes #5451.
",513922,5856,250769,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7564","apache/flink","06acdc1907300862d5faddc4e882f5f6dd670edb",3,"2018-02-02 11:06:35+01:00","[FLINK-8634] [rest] Introduce job rescaling REST
handler  Add rescaling REST handler as a sub class
of the AbstractAsynchronousOperationHandlers.
This closes #5451.
",514845,5876,251346,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7565","apache/flink","c131546eaadd07baf950bd6a44d07ee42d109e4c",1,"2018-02-15 18:43:39+01:00","[FLINK-8664] [rest] Change
RpcEndpoint#TerminationFuture value type to Void
This closes #5496.
",515423,5881,251478,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7566","apache/flink","107c8e04be86e9fd893a5c9e0f9c528d1453c3de",3,"2018-02-22 14:10:29+01:00","[FLINK-8748] [flip6] Cancel slot allocations for
alternatively completed slot requests  If a slot
request is fulfilled with a different
AllocatedSlot in the SlotPool, then we cancel the
slot request sent to the ResourceManager.  This
closes #5561.
",515587,5883,251559,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7567","apache/flink","df3e6bb7627db03635febd48eff4c10032b668ef",180,"2018-02-06 14:44:01+01:00","[FLINK-8360][checkpointing] Implement state
storage for local recovery and integrate with task
lifecycle
",519398,5922,253047,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7568","apache/flink","1619fa8abe8d605b14ee0ddabcdc86196c50e24a",1,"2018-02-21 11:27:17+01:00","[FLINK-8360][checkpointing] Implement file-based
local recovery for RocksDBStateBackend
",519751,5924,253166,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7569","apache/flink","bbb63531b2118dfde1584a7f61ee908d1188698d",4,"2018-02-25 12:53:53+01:00","[FLINK-8776][flip6] Use correct port for job
submission from Web UI.  Use address of local
WebMonitorEndpoint for the job submission from the
Web UI. Rename TestingLeaderRetrievalService to
SettableLeaderRetrievalService and move class out
of test directory.  This closes #5577.
",519814,5925,253161,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7570","apache/flink","d63bc75ffa3ad1b0d4de82cd218b9c4d268b41ab",3,"2018-02-01 16:02:28+01:00","[FLINK-8781][scheduler] Try to reschedule failed
tasks to previous allocation  This closes #5403.
",519946,5923,253077,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7571","apache/flink","56c756040fc4b3f224c4e7c12d208a3ccf5a7c5e",6,"2018-02-26 18:03:14+01:00","[hotfix] Improved logging for task local recovery
",520149,5927,253155,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7572","apache/flink","296f9ff742425d348d72ff598da31022aea70778",8,"2018-02-26 10:54:53+08:00","[FLINK-8777][checkpointing] Cleanup local state
more eagerly in recovery  This closes #5578.
",521023,5944,253634,"sihuazhou","summerleafs@163.com","Stefan Richter","s.richter@data-artisans.com"
"7573","apache/flink","19a8d2ff361be8797d79074b39afb09d51cca671",3,"2018-02-28 17:36:39+01:00","[FLINK-8811] [flip6] Add initial implementation of
the MiniClusterClient  The MiniClusterClient
directly talks to the MiniCluster avoiding polling
latencies of th RestClusterClient.  This closes
#5600.
",521517,5949,253849,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7574","apache/flink","0424cbfcdd8005d18eeaf225001d5a5e7be25b67",1,"2018-03-01 23:35:25+01:00","[FLINK-8826] [flip6] Start Yarn TaskExecutor with
proper slots and memory  Read the default
TaskManager memory and number of slots from the
configuration when the YarnResourceManager is
started.  This closes #5625.
",521885,5950,253893,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7575","apache/flink","25ac971d39e0ed58965334a6735396d5d10e7278",5,"2018-03-02 15:11:36+01:00","[FLINK-8459][flip6] Implement
RestClusterClient.cancelWithSavepoint  Introduce
cancelJob flag to existing triggerSavepoint
methods in Dispatcher and JobMaster. Stop
checkpoint scheduler before taking savepoint to
make sure that the savepoint created by this
command is the last one.  This closes #5622.
",522089,5951,253929,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7576","apache/flink","30eb8cd026a2e00397cea645814b384f5774366d",1,"2018-02-22 14:17:06+01:00","[hotfix] [network] Various minor improvements
",523315,5967,254594,"Nico Kruber","nico@data-artisans.com","Stephan Ewen","sewen@apache.org"
"7577","apache/flink","da3fc4fde2796af262dd275f3ea87a5b7bc69c5a",1,"2018-03-12 23:16:25+01:00","[FLINK-7521][flip6] Return HTTP 413 if request
limit is exceeded.  Remove unnecessary
PipelineErrorHandler from RestClient. Rename
config keys for configuring request and response
limits. Set response headers for all error
responses.  This closes #5685.
",523784,5968,254731,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7578","apache/flink","e0bc37bef69f5376d03214578e9b95816add661b",2,"2018-02-24 14:50:55+08:00","[FLINK-8756][Client] Support
ClusterClient.getAccumulators() in
RestClusterClient  This closes #5573.
",524398,5971,254873,"vinoyang","vinoyang@tencent.com","Till Rohrmann","trohrmann@apache.org"
"7579","apache/flink","87d31f5cf76fa796b89201ed8c55890e7d36fc81",7,"2018-03-20 16:22:12+01:00","[FLINK-9034] [core] StateDescriptor does not throw
away TypeInformation upon serialization.  Throwing
away TypeInformation upon serialization was
previously done because the type information was
not serializable. Now that it is serializable, we
can (and should) keep it to provide consistent
user experience, where all serializers respect the
ExecutionConfig.
",524698,5973,255036,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7580","apache/flink","93d99fdb39d6c2bd7715d7b6d4352ce3d895d9f8",1,"2018-03-22 17:15:36+01:00","[hotfix] Remove unnecessary transient modifiers in
CheckpointStatsTracker
",524717,5972,255020,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7581","apache/flink","9ee02f6a3463c531400404dee791033e120f5bfc",7,"2018-03-21 22:19:28+01:00","[FLINK-8900] [yarn] Properly unregister
application from Yarn RM  This closes #5741.
",524914,5972,255062,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7582","apache/flink","a6a7623dd8a549f4a31bbc361b891c65b5feef07",5,"2018-03-21 13:08:36+01:00","[FLINK-8721][flip6] Handle archiving failures for
accumulators  During archivization, wrap errors
thrown by users' Accumulators into a
OptionalFailure and do not fail the job because of
that.  This closes #5737.
",525317,5974,255150,"Piotr Nowojski","piotr.nowojski@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7583","apache/flink","d8a376a85e0fd54c725e9117396fc5819ce17dfa",2,"2018-03-14 15:38:48+01:00","[FLINK-8852] [sql-client] Add support for FLIP-6
in SQL Client  This closes #5704.
",525467,5974,255196,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7584","apache/flink","bd715c663c226b6f0042a20d768e57433aa97623",7,"2018-03-25 19:12:51+02:00","[FLINK-8940] [flip6] Add support for dispose
savepoint  Adds an AsynchronousOperationHandler
for disposing savepoints. The handler is
registered under '/savepoint-disposal' and
requires a SavepointDisposalRequest JSON object
containing the path to the savepoint to be
disposed. The RestClusterClient polls the status
registered under '/savepoint-disposal/:triggerId'
until the operation has been completed.  This
closes #5764.
",525958,5981,255402,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7585","apache/flink","9a31deae7ebdbda5a78f19ae8967e6b9d35834a4",3,"2018-03-23 14:08:49+01:00","[FLINK-8740] [metrics] Create new
JobManagerJobMetricGroup when creating a new
ExecutionGraph  This closes #5755.
",526181,5985,255524,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7586","apache/flink","8d1545febfb7e1c02a9f5a948efc8b8eb4247742",2,"2018-03-23 15:43:20+01:00","[hotfix] Create ExecutionGraph when JobMaster is
started  The ExecutionGraph is not a final
resource in the JobMaster. For example, it is
necessary to create a new ExecutionGraph when
rescaling the job or when the JobMaster loses and
regains its leadership.
",526217,5985,255517,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7587","apache/flink","5c67d36a3a1a2520536737bae1a4a2ff87b0eef2",1,"2018-03-28 11:53:56+02:00","[hotfix] Remove cluttering comments from JobMaster
",526187,5985,255507,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7588","apache/flink","c0dddc1a6e3eef8ded1963e61ee4a8f8ecf66475",1,"2018-03-26 17:55:10+02:00","[FLINK-8887] Wait for JobMaster leader election in
Dispatcher  Before sending requests from the
Dispatcher to the JobMasters, the Dispatcher must
wait until the respective JobMaster has gained
leadership. Otherwise we might risk that the
messages are ignored because no fencing token was
set.  This is solved by letting the
JobManagerRunner expose a
CompletableFuture<JobMasterGateway> which is only
completed after the JobMaster has gained
leadership. The future is cleared once the
leadership is revoked.  This closes #5767.
",526252,5985,255510,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7589","apache/flink","2a50c7ec8f494ab095fbbca45e618475d43c3295",2,"2018-03-22 10:46:04+01:00","[hotfix] Extend TestingFatalErrorHandler to return
an error future
",526275,5985,255510,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7590","apache/flink","d5fb7b3a9da3685a4ee5854c392ee42cc50f01ca",1,"2018-03-29 11:43:03+02:00","[FLINK-9106] [rpc] Add UnfencedMainThreadExecutor
to FencedRpcEndpoint  The
UnfencedMainThreadExecutor executed Runnables in
the main thread context without checking the
fencing token. This is important to set a new
fencing token, for example.  This closes #5784.
",527097,5989,255763,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7591","apache/flink","af5279e9bd3dec18512a54c59982e3dc1f253cd2",1,"2018-04-02 11:13:57+02:00","[FLINK-9121] [flip6] Remove Flip6 prefixes and
other references  Remove Flip6 prefixes and
references to make Flip-6 the proper default:
Rename categories Flip6 -> New and OldAndFlip6 ->
LegacyAndNew  Remove Flip-6 from documentation
Remove Flip-6 from start up scripts  This closes
#5801.
",527146,5989,255754,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7592","apache/flink","722274519fbf258531707ef85df4e1846f2fa4d4",2,"2018-03-27 09:20:33+02:00","[hotfix] Introduce NewClusterClient interface  The
NewClusterClient interface contains asynchronous
submitJob and requestJobResult methods which will
replace the ClusterClient#submitJob method.
",527268,5992,255832,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7593","apache/flink","7c553ba45b44145ea09e4d9ccb0bdf64df7ee076",2,"2018-03-21 13:31:56+01:00","[FLINK-9042][tests] Port
ResumeCheckpointManuallyITCase to flip6  This
closes #5736.
",527318,5992,255835,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7594","apache/flink","c0410d801e406e77b1e6e7134224f7946906a49f",26,"2018-03-28 12:52:07+02:00","[FLINK-8370][REST] Port AggregatingMetricsHandler
to flip6  This closes #5805.
",528379,6023,256383,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7595","apache/flink","37df3c8720385da6393a7157654a963c03e9ebb3",2,"2018-04-19 12:07:54+02:00","[FLINK-9196] [flip6, yarn] Cleanup application
files when deregistering YARN AM  Enable graceful
cluster shut down via HTTP. Remove Flink
application files from remote file system when the
YarnResourceManager deregisters the YARN
ApplicationMaster.  This closes #5938
",530849,6059,257670,"gyao","gary@data-artisans.com","Stephan Ewen","sewen@apache.org"
"7596","apache/flink","390d36132927fe5a1bac1a53664c6c67ebe3e657",1,"2018-04-30 22:50:24+02:00","[FLINK-6557] [rocksdb] Use File instead of Path
for RocksDB local temp directories.
",531067,6059,257712,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7597","apache/flink","e0146f8ac525e5e3e9e49fb590d5c149773efc9f",1,"2018-02-07 16:21:42+01:00","[FLINK-8620] Enable shipping custom files to
BlobStore and accessing them through
DistributedCache  This closes #5580
",531692,6064,257882,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"7598","apache/flink","ae8dc5f893eab2a6b4441a7f32ec1e9c7ff2b8ee",2,"2018-05-03 21:13:36+02:00","[hotfix] [runtime] Minor cleanups around
JobMasterId, ResourceManagerId, DispatcherId.
",531811,6067,258002,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7599","apache/flink","7f4225987a690e85284bb356dd5e63a996f136d0",3,"2018-05-14 11:14:47+02:00","[FLINK-9355][checkpointing] Simplify configuration
of local recovery to a simple on/off switch  This
closes #6006.
",532362,6074,258156,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7600","apache/flink","a95ec5acf259884347ae539913bcffcad5bfc340",1,"2018-05-14 14:14:45+02:00","[FLINK-9358] Avoid NPE when closing an
unestablished ResourceManager connection  A NPE
occurred when trying to disconnect an
unestablished ResourceManager connection. In order
to fix this problem, we now check whether the
connection has been established or not.  This
closes #6011.
",533049,6078,258277,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7601","apache/flink","89ac3dbe4a66c94ae5af5f06dc92ea2dcd13da57",6,"2018-05-15 10:55:04+02:00","[FLINK-9365] [rpc] Add handshake procedure to
AkkaRpcService when connecting  The handshake
procedure sends the source version and the target
rpc gateway type to the rpc endpoint. This
information is used to validate whether the
version is compatible and whether the rpc endpoint
supports the target gateway type.  This closes
#6017.
",533348,6084,258405,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7602","apache/flink","2bc1eaa4118d81bc00d7ebde1a435507d2cffb2a",5,"2018-03-13 10:49:33+01:00","[hotfix] Introduce NoOpTaskLocalStateStoreImpl
that is used as store if local recovery is
disabled  This implementation will no go through
all the registration/lookup steps or a normal
state store, beause they are not required if local
recovery is disabled.
",533290,6085,258437,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7603","apache/flink","2735c852b4648ae6f3e8f1e6169ef9ed6ec481d2",8,"2018-05-17 08:58:07+02:00","[FLINK-9381] Release blobs after job termination
Properly remove job blobs from BlobServer after
the job terminates. If the job reaches a globally
terminal state, then the HA blob store files will
also be cleared. In case of a suspension or that
the job is not finished (e.g. another process
finsihes the job concurrently), we only remove the
local blob server files.  Additionally, we
properly release the user code class loader
registered in the JobManagerRunner when it closes.
This closes #6030.
",533844,6089,258647,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7604","apache/flink","105b30686f76dc2d6affcf6cdf3eb41f322df53a",1,"2018-05-16 15:47:05+08:00","[FLINK-9373][statebackend] Introduce
RocksIteratorWrapper to wrap `Seek(), Next(),
SeekToFirst(), SeekToLast(), SeekForPrev(), and
Prev()` to check the iterator status.  This closes
#6020.
",533736,6089,258596,"sihuazhou","summerleafs@163.com","Stefan Richter","s.richter@data-artisans.com"
"7605","apache/flink","c832f52a9ca489b72e3eddcb51c288d23d66b571",4,"2018-05-17 14:44:14+02:00","[FLINK-6160] Add reconnection attempts in case of
heartbeat timeouts to JobMaster and TaskExecutor
If a timeout with the RM occurs on on the
JobMaster and TaskExecutor, then they will both
try to reconnect to the last known RM address.
Additionally, we now respect the
TaskManagerOption#REGISTRATION_TIMEOUT on the
TaskExecutor. This means that if the TaskExecutor
could not register at a RM within the given
registration timeout, it will fail with a fatal
exception. This allows to fail the TaskExecutor
process in case that it cannot establish a
connection and ultimately frees the occupied
resources.  The commit also changes the default
value for TaskManagerOption#REGISTRATION_TIMEOUT
from ""Inf"" to ""5 min"".  This closes #6035.
",533864,6090,258620,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7606","apache/flink","064379705f36aaea927c44bb303a867c0c66265d",16,"2018-05-22 15:53:38+02:00","[FLINK-9408] Let JM try to reconnect to RM  This
commit changes the behaviour of the JM to always
try to reconnect to the latest known RM address.
This closes #6056.
",534629,6099,258931,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7607","apache/flink","1c7341ad1ad323746b88a4a2975dc91a7d9c5c0d",5,"2018-03-07 13:58:45+08:00","[FLINK-8845][state] Introduce
RocksDBWriteBatchWrapper to improve batched write
performance in RocksDB backend.  This closes
#5650.
",534895,6102,259040,"sihuazhou","summerleafs@163.com","Stefan Richter","s.richter@data-artisans.com"
"7608","apache/flink","fd101be18cb6f386196e19178ba4da7f1f473fc5",1,"2018-05-11 18:55:10+02:00","[FLINK-9337] Implemented AvroDeserializationSchema
",535098,6106,259164,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"7609","apache/flink","fed284b140459b27e25e651650448eae1d110f0f",2,"2018-05-11 18:57:26+02:00","[FLINK-9338] Implemented
RegistryAvroDeserializationSchema & provided
implementation for Confluent Schema Registry  This
closes #5995
",535309,6112,259362,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"7610","apache/flink","e1d1234477c731fe3f398c7f3f12123f73764242",2,"2018-05-23 17:24:40+02:00","[FLINK-9428] [runtime] Add a 'pre-barrier-emit'
checkpoint notification to stream operators.  This
allows operators with small transient unmanaged
state (for example pre-aggregates) to flush the
state prior to the checkpoint barrier.
",535366,6113,259421,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7611","apache/flink","47dc69970996aa2a57c0dbfde866d3dac6d53001",14,"2018-05-23 18:50:27+02:00","[FLINK-9427] Fix registration and request slot
race condition in TaskExecutor  This commit fixes
a race condition between the TaskExecutor and the
ResourceManager. Before, it could happen that the
ResourceManager sends requestSlots message before
the TaskExecutor registration was completed. Due
to this, the TaskExecutor did not have all
information it needed to accept task submissions.
The problem was that the TaskExecutor sent the
SlotReport at registration time. Due to this, t he
SlotManager could already assign these slots to
pending slot requests. With this commit, the
registration protocol changes such that the
TaskExecutor first registers at the
ResourceManager and only after completing this
step, it will announce the available slots to the
SlotManager.  This closes #6067.
",535612,6114,259463,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7612","apache/flink","5ad0ca2392a9672a92756337243834d1b466a24d",4,"2018-05-23 23:48:38+02:00","[FLINK-9421] Remove job from RunningJobsRegistry
when it reaches a terminal state  This commit lets
the Dispatcher remove the RunningJobsRegistry
entry for a completed job when it is removed from
the Dispatcher.  This closes #6068.
",535670,6114,259468,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7613","apache/flink","88987ebb93b4d56cc5a2efd7ef47dedab9b9d3d9",2,"2018-05-24 10:01:23+02:00","[FLINK-9416] Make all RestClusterClient calls
retriable  This commit changes the
RestClusterClient calls such that they are all
retriable wrt to connection errors and if the
service is currently unavailable (return code
503).  Moreover, it changes the retry behaviour
for polling the JobResult such that it fails now
if the cluster returns a NOT_FOUND code.  This
closes #6069.
",535717,6114,259474,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7614","apache/flink","0861a784469662840fc599361b6e3910bb30de38",1,"2018-05-06 17:04:18+02:00","[FLINK-8655][cassandra] Support default keyspace
for POJOs  This closes #5538. This closes #5964.
",536414,6123,259912,"Clément Tamisier","clement.tamisier@gmail.com","zentol","chesnay@apache.org"
"7615","apache/flink","ff0b9c1eed75e64793ec8c31f217ee4300a24a0d",6,"2018-05-08 16:00:55+02:00","[FLINK-9423][state] Implement efficient deletes
for heap-based timer service.  This closes #6062.
",536842,6126,260039,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7616","apache/flink","bbf7ff2273d3e7724abdd6eb6414961a26e53159",6,"2018-02-26 13:00:06+08:00","[FLINK-8790][State] Improve performance of
rescaling an incremental checkpoint  This closes
#5582.
",537455,6128,260162,"sihuazhou","summerleafs@163.com","Stefan Richter","s.richter@data-artisans.com"
"7617","apache/flink","9218df82bc5748cf7fd4717b5b5e2f7dba0e01be",1,"2018-06-01 16:26:10+02:00","[FLINK-9418] Migrate SharedBuffer to use MapState
",539796,6147,260649,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"7618","apache/flink","363de6b643689f64564270857f1daf7f6c59257f",6,"2018-06-12 14:24:59+02:00","[FLINK-9573] Extend
LeaderElectionService#hasLeadership to take leader
session id  The new
LeaderElectionService#hasLeadership also takes the
leader session id and verifies whether this is the
correct leader session id associated with the
leadership.  This closes #6154.
",540048,6150,260754,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7619","apache/flink","7e0eafa74d81a805d1445fb74e967acaf455e967",26,"2018-06-11 14:48:06+02:00","[FLINK-9487][state] Prepare InternalTimerHeap for
asynchronous snapshots  This closes #6159.
",541006,6160,261120,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7620","apache/flink","ae8cef3de2f790c4de834982751f4fc49359ee05",7,"2018-06-18 10:54:42+02:00","[FLINK-9599][rest] Implement generic mechanism to
access uploaded files  This closes #6178.
",541987,6168,261209,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7621","apache/flink","ef9e8378929b2f068c71262ed93702da0b023b04",2,"2018-03-26 09:42:25-07:00","[FLINK-8944] [Kinesis Connector] Use listShards
instead of DescribeStream for shard discovery as
it offer higher rate limits  This closes #5992
",542145,6168,261236,"Kailash HD","kdayanand@lyft.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7622","apache/flink","181559d5bcad50f919e95c7602057b929553f76b",6,"2018-06-19 09:45:09+02:00","[FLINK-9599][rest] RestClient supports FileUploads
This closes #6189.
",542460,6172,261370,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7623","apache/flink","748610b036a11d36dbed7a319dc190e72409a9b1",9,"2018-06-25 10:34:30+02:00","[hotfix] Introduce SlotPoolFactory to make
SlotPool instantiation configurable
",542653,6178,261503,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7624","apache/flink","d5919d9c1d4054dbfa182e482e082940b4e2f24d",1,"2018-06-22 16:34:10+02:00","[FLINK-9634] Disable local recovery scheduling if
local recovery is disabled  Introduce a
SchedulingStrategy which is used by the SlotPool
to schedule tasks. The default implementation is
LocationPreferenceSchedulingStrategy which tries
to schedule tasks to their preferred locations. In
order to support local recovery the
PreviousAllocationSchedulingStrategy schedules
tasks to their previous allocation.  The
scheduling strategy is selected based on the
configuration option state.backend.local-recovery.
If set to true, then
PreviousAllocationSchedulingStrategy is selected.
Otherwise LocationPreferenceSchedulingStrategy is
selected.  This closes #6208.
",542812,6182,261598,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7625","apache/flink","a161606a6e9c7191a8afd8a003c8a46be2350f76",6,"2018-06-21 19:24:13+02:00","[FLINK-8468][RabbitMQ] Improve RabbitMQ connector
Remove text from README.md because it is covered
by Javadocs.  [FLINK-8468][RabbitMQ] Introduce
SerializableReturnListener interface.
[FLINK-8468][RabbitMQ] Update
RMQSinkPublishOptions.  Improve Javadocs. Add
default implementation for methods
computeMandatory and computeImmediate.
[FLINK-8468][RabbitMQ] Replace statements with
Preconditions.checkState  This closes #5410.
",543032,6185,261708,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7626","apache/flink","50c0ea8c9fe17278d45aba476a95791152a1420b",1,"2018-05-10 14:36:27+08:00","[FLINK-9456] Let ResourceManager notify JobManager
about failed/killed TaskManagers.  This closes
#6132.
",544483,6215,262397,"sihuazhou","summerleafs@163.com","Till Rohrmann","trohrmann@apache.org"
"7627","apache/flink","89cfeaa882f9e68df2bd215563622b48c29a9ec9",3,"2018-07-01 21:08:41+02:00","[FLINK-9456] Reuse TestingResourceActions in SlotM
anagerTest#testNotifyFailedAllocationWhenTaskManag
erTerminated
",544534,6216,262419,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7628","apache/flink","c6ad421e2b83fe8dc6031ce9716285fdf941d5e0",35,"2018-06-18 14:38:01+02:00","[FLINK-9491][state] Generalization of timer queue
(decoupled from timers) and second implementation
based on RocksDB  This closes #6228.
",546512,6239,263316,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7629","apache/flink","a25cd3feddd19e75456db32a704ee5509e85dd47",2,"2018-06-11 11:45:12+02:00","[FLINK-9280][rest] Rework JobSubmitHandler to
accept jar/artifact files  This closes #6203.
",546764,6235,263249,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7630","apache/flink","64bc4b348ddd1f0c63e806442ffd3aad5c367a28",2,"2018-06-21 17:42:54+08:00","[FLINK-9633] Use Savepoint path's file system to
create checkpoint output stream  This commit
changes Flink such that it uses the savepoint
path's file system to generate the output stream
instead of the checkpoint path's file system.
This closes #6194.
",546856,6235,263271,"sihuazhou","summerleafs@163.com","Till Rohrmann","trohrmann@apache.org"
"7631","apache/flink","b3c47961adaa809b0b60a308f1621c60299b2590",1,"2018-07-02 12:42:40+02:00","[hotfix][network] add a few more checks and tags
",546859,6235,263274,"Nico Kruber","nico@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7632","apache/flink","afdbf5471307ccc3d93bd41841ebebfcf34b8039",9,"2018-06-11 19:34:47+02:00","[FLINK-9513][state] Implement TTL state wrappers
factory and serializer for value with TTL  This
closes #6196. This closes #5799. (forgotten)
",547576,6246,263520,"Andrey Zagrebin","azagrebin@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7633","apache/flink","fb37d51f309fc891d10c20ff25736d957f80367a",2,"2018-07-04 11:05:25+02:00","[FLINK-9693] Set Execution#taskRestore to null
after deployment  Setting the assigned
Execution#taskRestore to null after the deployment
allows the JobManagerTaskRestore instance to be
garbage collected. Furthermore, it won't be
archived along with the Execution in the
ExecutionVertex in case of a restart. This is
especially important when setting
state.backend.fs.memory-threshold to larger values
because every state below this threshold will be
stored in the meta state files and, thus, also the
JobManagerTaskRestore instances.  This closes
#6251.
",547678,6246,263528,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7634","apache/flink","d934cb8fba22855894e260e3e68533b599ac8e43",3,"2018-06-14 17:10:05+02:00","[FLINK-9593][cep] Unified After Match semantics
with SQL MATCH_RECOGNIZE  This closes #6171
",549138,6254,263885,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"7635","apache/flink","79b38f8f9a79b917d525842cf46087c5b8c40f3d",21,"2018-07-04 13:43:49+02:00","[FLINK-9486][state] Introduce
InternalPriorityQueue as state in keyed state
backends  This commit does not include the
integration with checkpointing.  This closes
#6276.
",549736,6261,264099,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7636","apache/flink","3f0b9fee5185fcc7200179459bed31fb4bd08bbf",3,"2018-07-11 17:48:10+02:00","[FLINK-9809] [DataSteam API] Allow setting co-
location constraints on StreamTransformations.
This feature is currently only exposed on
StreamTransformations (internal API) rather than
in the public API, because it is a hidden expert
feature.  This closes #6309
",550352,6269,264390,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7637","apache/flink","f1ac0f2797419d5d72659622234f32159cf74dc7",45,"2018-07-11 11:11:11+02:00","[FLINK-9799][state] Generalize and unify state
meta infos  This closes #6308.
",550390,6274,264514,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7638","apache/flink","f45b7f7ff27df019e9045895e718fa112d12139c",3,"2018-07-03 19:23:41+02:00","[FLINK-9701] Introduce TTL configuration in state
descriptors  This closes #6313.
",551049,6280,264657,"Andrey Zagrebin","azagrebin@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7639","apache/flink","ab9bd87e521d19db7c7d783268a3532d2e876a5d",15,"2018-07-11 17:41:27+02:00","[FLINK-9818] Add cluster component command line
parser  The cluster component command line parser
is responsible for parsing the common command line
arguments with which the cluster components are
started. These include the configDir, webui-port
and dynamic properties.  This closes #6314.
",551626,6282,264773,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7640","apache/flink","2fbbf8ee662647c71581f5cd989226be820fed0f",1,"2018-07-10 23:23:59+02:00","[FLINK-9820] Forward dynamic properties to Flink
configuration in ClusterEntrypoint  With this
commit we can use dynamic properties to overwrite
configuration values in the ClusterEntrypoint.
This closes #6317.
",551886,6289,264922,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7641","apache/flink","dbddf00b75032c20df6e7aef26814da392347194",108,"2018-06-13 11:56:16+02:00","[FLINK-9489] Checkpoint timers as part of managed
keyed state instead of raw keyed state
Optimization for relaxed bulk polls  Deactivate
optimization for now because it still contains a
bug  This closes #6333.
",556210,6334,267067,"Stefan Richter","s.richter@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7642","apache/flink","fefe866bad47b1c4a2f92eded19bc7a5059f1277",7,"2018-07-13 14:00:10+02:00","[FLINK-9499][rest] Support JSON request in
JarHandlers  This closes #6330.
",557250,6353,267618,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7643","apache/flink","01cf808ee863f4b0f429f20ba05fd2e322842e48",73,"2018-07-13 19:27:35+02:00","[FLINK-9858][tests] State TTL End-to-End Test
This closes #6361.
",557543,6353,267641,"Andrey Zagrebin","azagrebin@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7644","apache/flink","d309e61e2bae170872b43cf60bd2fd9fef77814c",12,"2018-07-18 23:29:56+02:00","[FLINK-9902][tests] Improve and refactor window
checkpointing IT cases  This closes #6376.
",557412,6356,267666,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7645","apache/flink","b56c75ca375049b1d2c80d2d0945ae1ae04eb39e",2,"2018-07-17 11:52:02+02:00","[FLINK-9903] [DataStream API] Refactor
StreamingFileSink / add bulk encoders  * Add
supports for bulk encoders. * Expose more options
in the rolling policy and * Allows to return any
object as bucket id from the bucketer.
",558038,6366,268073,"kkloudas","kkloudas@gmail.com","Stephan Ewen","sewen@apache.org"
"7646","apache/flink","0180d068565d99db1db998944686064ceddf398f",1,"2018-07-22 21:38:42+02:00","[FLINK-9910][scheduling]
Execution#scheduleForeExecution does not cancel
slot future  In order to properly give back an
allocated slot to the SlotPool, one must not
complete the result future of
Execution#allocateAndAssignSlotForExecution. This
commit changes the behaviour in
Execution#scheduleForExecution accordingly.  This
closes #6385.
",558846,6379,268455,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7647","apache/flink","ef0768b69ca178bc27a460f2958126896574e429",1,"2018-07-25 13:57:34+02:00","[FLINK-9939][runtime] Add null check before
setting tmp dirs in config.  This closes #6418.
",558916,6379,268476,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7648","apache/flink","22b9a8d785b753fd6ae7ee705ed7f5ac25f57a24",8,"2018-07-25 08:39:29+02:00","[FLINK-9942][rest] Guard handlers against null
fields
",558874,6379,268469,"zentol","chesnay@apache.org","zentol","chesnay@apache.org"
"7649","apache/flink","7be07871c23b56547add4cd85e15b95c757f882b",5,"2018-07-23 18:10:55+02:00","[FLINK-8439] Add Flink shading to AWS credential
provider s3 hadoop config
",558955,6382,268516,"Andrey Zagrebin","azagrebin@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7650","apache/flink","235dad10f23306879fad0cb1577809c767a26f5e",1,"2018-01-25 22:31:57+01:00","[FLINK-8101] [elasticsearch] Elasticsearch 6.X
REST support
",559460,6390,268817,"Christophe Jolif","cjolif@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7651","apache/flink","a20fd1d51ba9449f05b96b00e0580f937329bd47",60,"2018-07-18 12:54:49+02:00","[FLINK-9981][state] Testing and performance tuning
for RocksDB-based priority queue  This closes
#6438.
",559484,6383,268712,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7652","apache/flink","9d273a3fcda4033e1a385c0ff0c4a2b7ad640721",15,"2018-07-27 14:49:27+02:00","[FLINK-9887][state] Integrate priority queue state
with existing serializer upgrade mechanism  This
closes #6467.
",559947,6388,268831,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7653","apache/flink","1b0baa162bd87efd69040eb787de8d6624f14c85",2,"2018-07-30 11:37:41+02:00","[FLINK-10029][DataStream API] Refactoring the
StreamingFileSink code.
",560014,6388,268822,"kkloudas","kkloudas@gmail.com","kkloudas","kkloudas@gmail.com"
"7654","apache/flink","df22e91b52ca112090d652b7b36f2c647362009b",2,"2018-08-02 20:57:50+02:00","[FLINK-10033] [runtime] Task releases reference to
AbstractInvokable  To guard against memory leaks,
the Task releases the reference to its
AbstractInvokable when it shuts down or cancels.
This closes #6480.
",560147,6389,268861,"Stephan Ewen","sewen@apache.org","Till Rohrmann","trohrmann@apache.org"
"7655","apache/flink","bf94d287d71454d9de7e52c22c1ae17c3062aa9f",4,"2018-08-03 09:19:42+02:00","[FLINK-9969][batch] Dispose InMemorySorters
created by the UnilateralSortMerger  This commit
changes the behaviour of the UnilateralSortMerger
to keep references of the created InMemorySorters
in order to explicitly dispse them when the sort
merger is closed. This prevents that
InMemorySorters leak and block the garbage
collection of MemorySegments to which they keep
references.  This closes #6479.
",560336,6392,268927,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7656","apache/flink","5b1500d4fe39a44bfaa03b27216627e3caf55240",1,"2018-07-30 10:57:40+08:00","[FLINK-9936][mesos] Wait for leadership before
creating MesosResourceManager components  This
closes #6464.
",560386,6392,268949,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7657","apache/flink","ce96c409148d1a9bc40f581e13900818b5f11f6a",62,"2018-08-03 18:18:07+02:00","[FLINK-9938][state] Clean up full snapshot from
expired state with TTL  This closes #6460.
",560879,6395,269079,"Andrey Zagrebin","azagrebin@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7658","apache/flink","3f40783f48a6ccef9c609ac8204437e00033b76c",1,"2018-08-06 16:09:43+08:00","[FLINK-10099][test] Improve
YarnResourceManagerTest  Introduce methods to mock
a Yarn Container and ContainerStatus.  Properly
shutdown a started ResourceManager.  This closes
#6499.
",564340,6399,270155,"陈梓立","wander4096@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7659","apache/flink","9d67afbb84736ee8c28ec1bd69eef8ddff4754f0",16,"2018-08-06 11:21:58+02:00","[FLINK-10041][state] Extract iterators from
RocksDBKeyedStateBackend (inner or static inner
classes) into full classes  This closes #6501.
",564460,6403,270227,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7660","apache/flink","160dc56fdf061a208e7b7be54d836c0b580e044f",1,"2018-08-06 10:12:51+02:00","[FLINK-10066] Keep only archived version of
previous executions  This closes #6500.
",564396,6403,270199,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7661","apache/flink","8ba26261158e690e2476d71e8b99ee0a0a5faafa",1,"2018-08-08 07:24:36+08:00","[FLINK-10101][mesos] Announce web UI url at Mesos
master  This commit announces the cluster's web UI
url at the Mesos master so that it is visible in
the Mesos UI.  This closes #6522.
",564864,6405,270310,"liurenjie1024","liurenjie2008@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7662","apache/flink","aba02eb3fcc4472c3d5f5a0f527960d79c659c31",8,"2018-08-07 15:57:27+02:00","[FLINK-10042][state] (part 1) Extract snapshot
algorithms from inner classes of
RocksDBKeyedStateBackend into full classes
",565428,6413,270508,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7663","apache/flink","f803280bb933d968976e79b9efb5953bed308d96",75,"2018-08-09 22:23:42+02:00","[FLINK-10042][state] (part 2) Refactoring of
snapshot algorithms for better abstraction and
cleaner resource management  This closes #6556.
",565658,6411,270418,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7664","apache/flink","3fd6587208a16940eab327ed37fa4e23d0b7eb62",17,"2018-08-22 13:31:49+02:00","[FLINK-10176][state] Replace
ByteArrayData[Input|Output]View with (enhanced)
Data[Output|InputDe]Serializer  This closes #6583.
",562399,6412,269359,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7665","apache/flink","fa3fba5cd3ab0acaed2537090e549e7ab70d8613",1,"2018-08-16 19:33:21+02:00","[hotfix] Improve StandaloneJobClusterEntrypoint
command line help  Properly print the CLI help if
the command line options could not be parsed.
",562451,6412,269359,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7666","apache/flink","7eb41f33fbce8da52cbba160f0ecff6fe96f124b",1,"2018-08-05 01:50:03+02:00","[FLINK-9962] allow users to specify TimeZone in
DateTimeBucketer  This closes #6492.
",562976,6416,269516,"Bowen Li","bowenli86@gmail.com","kkloudas","kkloudas@gmail.com"
"7667","apache/flink","260f7895e0c88180e7c411388dd4f90c36ae4022",1,"2018-08-29 23:08:55+08:00","[FLINK-9642][cep] Added caching layer to
SharedBuffer(#6205)
",563084,6417,269605,"Aitozi","1059789585@qq.com","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"7668","apache/flink","14ae6e5df54d0855e414270c5c107839d0ee1c76",6,"2018-08-22 12:04:29+02:00","[FLINK-7551][rest] Add versioning
",563413,6417,269642,"zentol","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7669","apache/flink","bfbcd908bf9b59f64ddf8c783293addc098ee516",1,"2018-08-22 13:29:14+02:00","[FLINK-10193][runtime] Add @RpcTimeout to
JobMasterGateway.triggerSavepoint.  This closes
#6601.
",563738,6420,269753,"gyao","gary@data-artisans.com","Till Rohrmann","trohrmann@apache.org"
"7670","apache/flink","16dc5978c7a845a598b672dacca565e870f1a5c7",1,"2018-08-31 01:30:56+08:00","[FLINK-10267][state] Fix arbitrary iterator access
on RocksDBMapIterator  This closes #6638.
",563984,6421,269786,"Yun Tang","myasuka@live.com","Stefan Richter","s.richter@data-artisans.com"
"7671","apache/flink","a0b668555f5ee407d3cdbc42113cc28f019fc318",2,"2018-08-20 11:19:18+02:00","[FLINK-10185] Make
ZooKeeperStateHandleStore#releaseAndTryRemove
synchronous  Remove the asynchronous callback from
ZooKeeperStateHandleStore#releaseAndTryRemove.
Instead we can execute the callback after having
executed the releaseAndTryRemove method
successfully. This separates concerns better
because we don't mix storage with business logic.
Furthermore, we can still avoid blocking
operations if we use a separate thread to call
into
ZooKeeperStateHandleStore#releaseAndTryRemove.
This closes #6586.
",563998,6423,269792,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7672","apache/flink","3e5d07ca349a7b010bc47d1cce9b9ad3208f55a6",2,"2018-09-08 15:19:37+02:00","[FLINK-10255] Only react to onAddedJobGraph signal
when being leader  The Dispatcher should only
react to the onAddedJobGraph signal if it is the
leader. In all other cases the signal should be
ignored since the jobs will be recovered once the
Dispatcher becomes the leader.  In order to still
support non-blocking job recoveries, this commit
serializes all recovery operations by introducing
a recoveryOperation future which first needs to
complete before a subsequent operation is started.
That way we can avoid race conditions between
granting and revoking leadership as well as the
onAddedJobGraph signals. This is important since
we can only lock each JobGraph once and, thus,
need to make sure that we don't release a lock of
a properly recovered job in a concurrent
operation.  This closes #6678.
",564674,6429,270008,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7673","apache/flink","9c4c138a2db7ab84733482d9ba9508b30056843d",6,"2018-09-13 20:41:32+02:00","[hotfix] Add --host and --executionMode config
option to ClusterEntrypoint  This is necessary to
support the command line syntax used by the multi
master standalone start-up scripts.
",564715,6428,270019,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7674","apache/flink","2e21582224ca32f51272abadc901db753b89d199",2,"2018-09-12 14:29:26+02:00","[FLINK-10325] [State TTL] Refactor TtlListState to
use only loops, no java stream API for performance
This closes #6683.
",564793,6430,270069,"Andrey Zagrebin","azagrebin@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7675","apache/flink","199f1758e9bdbdc316ec7168791a8e95373159a6",2,"2018-09-14 12:07:12+02:00","[FLINK-10314] Making JobManagerRunner creation
non-blocking in Dispatcher  The JobManagerRunner
creation can be a blocking operation, e.g. if the
CheckpointCoordinator needs to access a
FileSystem. Therefore, this operation should not
be executed in the main thread of the Dispatcher
in order to not block this component.  This closes
#6699.
",564867,6430,270084,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7676","apache/flink","e3c98f05d3544d0165c2d97d2d00fcd295cef8c8",3,"2018-07-22 22:58:18+02:00","[FLINK-9912][JM] Release TaskExecutors if they
have no slots registered at SlotPool  This commit
extends the SlotPools behaviour when failing an
allocation by sending a notification message to
the TaskExecutor about the freed slot. Moreover,
it checks whether the affected TaskExecutor has
more slots registered or not. In the latter case,
the TaskExecutor's connection will be eagerly
closed.  This closes #6394.
",565065,6433,270164,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7677","apache/flink","f3432042fef908829dbdc1dcdc2b869fa6fc4005",6,"2018-09-12 18:12:14+02:00","[FLINK-10157][State TTL] Allow `null` user values
in map state with TTL  This closes #6707.
",564609,6442,269627,"Andrey Zagrebin","azagrebin@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7678","apache/flink","d8a9c72ed675669363e6c7d7499abee30fc19b88",2,"2018-09-24 20:46:37+02:00","[FLINK-9061] [s3] Make base S3 file system entropy
injecting
",564955,6448,269836,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7679","apache/flink","cc9b3769084634dc660f7a90aed0090cb46b3342",1,"2018-09-26 18:26:18+02:00","[FLINK-10444] [core] Make entropy injection work
across FileSystem SafetyNet.
",565013,6447,269794,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7680","apache/flink","2f88d428e43bdea5240aced63fb130fce6aa80c4",1,"2018-09-23 21:09:19+02:00","[FLINK-10400] Fail JobResult if application
finished in CANCELED or FAILED state  In case of
the CANCELED state, the client will throw an
JobCancellationException. In case of the FAILED
state, the client will throw an
JobExecutionException.  This closes #6742.
",565106,6447,269792,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7681","apache/flink","771277b42427d55b52a28d5893c71c3b8de97807",6,"2018-08-22 13:51:38+02:00","[FLINK-9455][RM] Add support for multi task slot
TaskExecutors  Extend ResourceActions interface to
return a set of ResourceProfiles describing the
set of slots with which the new resource will be
started. The SlotManager stores them as
PendingTaskManagerSlots which can be assigned to
PendingSlotRequests. Only if there are no more
TaskManagerSlots and PendingTaskManagerSlots, the
SlotManager will request new resources from the
ResourceManager.  This closes #6734.
",565495,6452,269938,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7682","apache/flink","1fcbc9f816460b1a159fd79b4c9bcf83327d79c3",4,"2018-09-23 13:39:34+02:00","[FLINK-10411] Make ClusterEntrypoint more
compositional  Introduce a ClusterComponent which
encapsulates the logic for starting the cluster
components, Dispatcher, RestServerEndpoint and the
ResourceManager. The individual components are
created by using a factory instance. The
ClusterEntrypoint is now only responsible for
managing the required services needed by the
ClusterComponent. This design should make the
testing of these components easier, improve
reusability and reduce code duplication.
",565582,6468,270286,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7683","apache/flink","b9ebf421c8979d99f2ae960075b76796ba0b6ac4",1,"2018-09-24 09:27:34+02:00","[FLINK-10411] Move System.exit out of
ClusterEntrypoint  Move the logic of when to exit
the JVM process out of the ClusterEntrypoint so
that the caller is now responsible to make this
call. This improves the usage of the
ClusterEntrypoint for testing purposes.
",565596,6469,270310,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7684","apache/flink","9f5fd073bd128006571c9e788c87938125fef52d",4,"2018-09-27 14:17:21+02:00","[FLINK-10411] Introduce
DispatcherResourceManagerComponentFactory  This
commit introduces the
DispatcherResourceManagerComponentFactory which is
used to create a
DispatcherResourceManagerComponent. That way, it
is possible to eagerly initialize all fields of
the DispatcherResourceManagerComponent making it
possible to make all fields final and remove the
lock.  This closes #6743.
",565742,6473,270394,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7685","apache/flink","10f9f1d431dbf047ea14130d9fb7fdd4f78178fc",2,"2018-08-15 13:51:23+02:00","[FLINK-3875] [connectors] Add an upsert table sink
factory for Elasticsearch  This commit adds full
support for Elasticsearch to be used with Table &
SQL API as well as SQL Client.  It includes: -
Elasticsearch 6 upsert table sink (for append-only
and updating queries) - Elasticsearch 6 table
factory - Elasticsearch table descriptors &
validators - Unit tests, SQL Client end-to-end
test - Website documentation  This closes #6611.
",566903,6483,270780,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7686","apache/flink","c839b1a04c389db816fad0194eb63a5220ee5351",3,"2018-09-22 19:09:34+08:00","[FLINK-10291] Generate JobGraph with
fixed/configurable JobID in
StandaloneJobClusterEntrypoint  This closes #6733.
",567038,6485,270840,"yanghua","yanghua1127@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7687","apache/flink","f90f5e5832425f999c5ce564c25284b912ebab18",1,"2018-10-05 11:08:45+02:00","[FLINK-10427] [tests] Port
JobSubmitTest#testFailureWhenJarBlobsMissing to
new code base  Port
JobSubmitTest#testFailureWhenJarBlobsMissing to
JobSubmissionFailureITCase#testMissingJarBlob.
This closes #6768.
",566989,6485,270841,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7688","apache/flink","d188db6c98e67026b79543d6369f792d376c56b4",1,"2018-09-26 20:51:50+08:00","[FLINK-10406] (Part 8) testKvStateMessages
testKvStateMessages is ported to 4 tests in
JobMasterTest  1. JobMasterTest#testRequestKvState
WithoutRegistration 2. JobMasterTesttestRequestKvS
tateWithIrrelevantRegistration 3.
JobMasterTest#testRegisterAndUnregisterKvState 4. 
JobMasterTest#testDuplicatedKvStateRegistrationsFa
ilTask
",566141,6484,270725,"tison","wander4096@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7689","apache/flink","05909351d2841ea98ec85c9eb3b9643bf45fac1a",1,"2018-10-06 21:27:15+02:00","[FLINK-10406][tests] Port
JobManagerTest#testSavepointRestoreSettings  Port
JobManagerTest#testSavepointRestoreSettings to Job
MasterTest#testRestoringModifiedJobFromSavepoint.
",566205,6484,270735,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7690","apache/flink","a887b7f33b029005c46c9e8d13669d7b61eadb78",14,"2018-10-09 16:40:23+02:00","[FLINK-10295] Add support of passing jar arguments
as list of separate strings in REST API
",566727,6501,271154,"azagrebin","azagrebin@users.noreply.github.com","Chesnay Schepler","chesnay@apache.org"
"7691","apache/flink","7ec9b98c6fa570966d119e2822e1df9f4e1528c7",1,"2018-09-07 14:47:57+02:00","[FLINK-9377] [core] (part 2) Move responsibility
of serializer compatibility resolution to
TypeSerializerConfigSnapshot  This work towards
letting TypeSerializers be immutable, moving away
from the previous design where serializers had to
reconfigure themselves.  The
TypeSerializerConfigSnapshot interface now has a
new resolveSchemaCompatibility method, via which
it gets the new serializer to check against.
Currently, to allow for incremetal changes in
Flink-shipped config snapshots, we have a dummy
implementation which forwards the call to the to-
be-deprecated
TypeSerializer#ensureCompatibility(...) method
",566876,6506,271402,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7692","apache/flink","2dd8116c0527d58396521da7cc5388079b5f7f81",4,"2018-09-11 17:22:21+08:00","[FLINK-9377] [core] (part 5) Remove serializers
from serialization proxies  This commit officially
uses the new
TypeSerializerConfigSnapshot#restoreSerializer()
factory method to remove serialization of state
serializers into checkpoints.
",567003,6508,271498,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7693","apache/flink","ac74a0ce6297ce3754744ceb07107f6024c1a163",3,"2018-10-05 14:30:28+08:00","[FLINK-9377] [core] (part 6) Introduce
TypeSerializerSnapshot for a smoother upgrade path
This commit deprecates
TypeSerializerConfigSnapshot, and introduces a
TypeSerializerSnapshot interface which will
eventually be the new replacement.  The now-
deprecated TypeSerializerConfigSnapshot
differentiates in that when being written, it wil
still write along with it the prior serializer and
return that when attempting to restore the prior
serializer. Implementations which are upgraded to
directly implement the new TypeSerializerSnapshot
interface are strictly required to implement the
restoreSerializer() method. Therefore, once
upgraded, the prior serializer is no longer
written.
",567200,6510,271647,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7694","apache/flink","773e47398e6e2073333036bdc4b7d1b3475c5799",2,"2018-10-08 14:42:54+02:00","[FLINK-10282][runtime] Add builder for
ExecutorThreadFactory
",567258,6511,271667,"zentol","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7695","apache/flink","b46e1956e32cc08592941d5ec0174f23c43dc8ef",2,"2018-10-10 13:18:08+02:00","[FLINK-10075][rest] Redirect non-ssl requests to
https url if ssl is enabled
",567353,6512,271686,"azagrebin","azagrebin@users.noreply.github.com","Chesnay Schepler","chesnay@apache.org"
"7696","apache/flink","d7550d6a6e384546b25ca1e4d76dd26ca539973a",1,"2018-10-10 10:17:59+02:00","[FLINK-10247] Return TaskManager metricy query
paths in non-blocking fashion
",567471,6512,271732,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7697","apache/flink","24374e19ef4cb0f3578360c7f1386bee5c655890",1,"2018-09-27 02:06:41+08:00","[FLINK-10426] Port TaskTest to new code base
[FLINK-10426] (Part 1) testRegularExecution
[FLINK-10426] (Part 2) porting fails  1.
testCancelRightAway 2. testFailExternallyRightAway
3. testLibraryCacheRegistrationFailed 4.
testExecutionFailsInNetworkRegistration 5.
testInvokableInstantiationFailed 6.
testExecutionFailsInInvoke 7.
testFailWithWrappedException 8.
testCancelDuringInvoke 9.
testFailExternallyDuringInvoke 10.
testCanceledAfterExecutionFailedInInvoke 11.
testExecutionFailsAfterCanceling 12.
testExecutionFailsAfterTaskMarkedFailed 13.
testCancelTaskException 14.
testCancelTaskExceptionAfterTaskMarkedFailed
[FLINK-10426] (Part 3) partition state update
tests  See also FLINK-10319, some of these tests
would be removed based on that.  [FLINK-10426]
(Part 4) watch dog  [FLINK-10426] (Part 4) config
",567514,6512,271728,"tison","wander4096@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7698","apache/flink","88ea996dda16e340488a2d9f7516bf8337edefdd",7,"2018-07-09 11:20:01+02:00","[FLINK-9752][s3-fs-connector] Add s3 recoverable
writer.  Adds a recoverable writer for S3.  The
new recoverable writer is only available for
Hadoop S3 (not Presto) and uses the MultiPart
feature to upload part files.
",570045,6540,272640,"kkloudas","kkloudas@gmail.com","kkloudas","kkloudas@gmail.com"
"7699","apache/flink","1d2aa70437b344e4262d36a3996deb5023511fa4",22,"2018-10-15 13:20:43+02:00","[hotfix] Introduce TestingJobMasterGatewayBuilder
",569352,6535,272400,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7700","apache/flink","d7740bd00c8752303beef120ab55652cc7ed7ab5",4,"2018-10-12 16:53:59+02:00","[FLINK-9932] Harden slot allocation protocol
Harden slot allocation protocol by accepting task
submissions for slots which are only allocated.
Before, it was necessary that the slot was marked
as active. This, however, required that task
submissions come strictly after completing the
slot offering which is not the case. With this
change, we mark all allocated and active slots as
active if the TaskExecutor receives a task
submission.
",569412,6538,272463,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7701","apache/flink","2e3e820571145463ad01a86cd68b0ce844dcd3a2",2,"2018-10-13 14:43:28+08:00","[FLINK-9697] Add new kafka connector module
",564992,6459,271097,"yanghua","yanghua1127@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7702","apache/flink","d850e79cb68cd4dba5a531d01f8a20b1fba05278",13,"2018-09-20 17:59:54+02:00","[FLINK-10309][rest] Before shutting down cluster,
wait for asynchronous operations.  Wait for the
result of asynchronous operations to be served
before shutting down the cluster.  This is
necessary for the ""cancel with savepoint""
operation. If we do not wait for the result to be
accessed by the client, we may shutdown the
cluster, and the client gets a
ConnectionException.  Extract
CompletedOperationCache from
AbstractAsynchronousOperationHandlers to ease unit
testing.  This closes #6785.
",565863,6470,271408,"gyao","gary@data-artisans.com","gyao","gary@data-artisans.com"
"7703","apache/flink","a59ce1ec895765ef56a1c55e0d21ab7beadaaad6",15,"2018-10-13 12:54:55+02:00","[FLINK-9878][network][ssl] add more low-level ssl
options  This is mostly to tackle bugs like
https://github.com/netty/netty/issues/832 (JDK
issue during garbage collection when the SSL
session cache is not limited). We add the
following low-level configuration options for the
user to fine-tune their system:  - SSL session
cache size via 'security.ssl.internal.session-
cache-size' - SSL session timeout via
'security.ssl.internal.session-timeout' - SSL
handshake timeout via
'security.ssl.internal.handshake-timeout' - SSL
close notify flush timeout via
'security.ssl.internal.close-notify-flush-timeout'
This closes #6895.
",566563,6478,271769,"Nico Kruber","nico@data-artisans.com","Nico Kruber","nico@data-artisans.com"
"7704","apache/flink","e57a46f9ea3fd2a63514a4b667a3ce494d79b6e3",5,"2018-10-24 19:34:20+02:00","[FLINK-10679] [core] Let
TypeSerializerSnapshot.resolveSchemaCompatibility
be the entry point for all compatibility checks
",568502,6508,273149,"Stephan Ewen","sewen@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7705","apache/flink","b0b10edca7cf776defb83a739c9db2b8b55e5f70",5,"2018-10-18 16:24:23+02:00","[FLINK-10605] [avro] Upgrade AvroSerializer and
snapshot for Avro schema evolution  This closes
#6881.
",569603,6518,273514,"Igal Shilman","igal.shilman@data-artisans.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7706","apache/flink","f86f72da6826f61d2c7e197c889ac4b85918efbf",1,"2018-10-25 19:42:21+02:00","[FLINK-10710] [core] CompositeSerializerSnapshot
should be used composition
",569617,6518,273521,"Stephan Ewen","sewen@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7707","apache/flink","9ad932c52056d0ed7e96e1c385403a529e6a8edb",3,"2018-08-04 22:24:58+02:00","[FLINK-10097][DataStream API] Additional tests for
StreamingFileSink.
",570917,6532,274174,"kkloudas","kkloudas@gmail.com","kkloudas","kkloudas@gmail.com"
"7708","apache/flink","e1d975d27422e2e1b09dea782194ddff468612b3",2,"2018-11-05 11:39:51+01:00","[FLINK-10793][ttl] Change visibility of TtlValue
and TtlSerializer to public for external tools
This closes #7021.
",571122,6534,274239,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7709","apache/flink","c1683fbd0aaeb9848b03efaa4c17cc4cc159711c",1,"2018-10-25 19:00:34+08:00","[FLINK-10600] Provide End-to-end test cases for
modern Kafka connectors
",571235,6539,274346,"yanghua","yanghua1127@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7710","apache/flink","85f895b0836c19e4c0e56246aa9af10df8dee09b",1,"2018-11-02 11:48:46+01:00","[FLINK-10353][kafka] Support change of
transactional semantics in Kafka Producer with
existing state  This closes #7010.
",571780,6547,274552,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7711","apache/flink","8ba4a36ed0c0febf2e9a8e8bc4b176188632e50d",1,"2018-11-12 18:21:40+01:00","[FLINK-10419] Using DeclineCheckpoint message
class when invoking RPC declineCheckpoint
",572155,6554,274721,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"7712","apache/flink","9f1f25d8b57fb833e2d981ea9d84153eed46efc0",1,"2018-11-14 10:08:39+01:00","[FLINK-10455][Kafka Tx] Close transactional
producers in case of failure and termination
(#6989)  This commit addresses the problem of
potential leak of resources associated with
unclosed Kafka transactional producers in case of
commitment failure or task shutdown.    1. always
close producer even if commit fails in TwoPhaseCom
mitSinkFunction#notifyCheckpointComplete  2. close
pending transactions in close method of Kafka
Flink function in case of task shutdown  3.
continue trying to commit other transactions in Tw
oPhaseCommitSinkFunction#notifyCheckpointComplete
if any of them failed
",572253,6554,274730,"azagrebin","azagrebin@users.noreply.github.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7713","apache/flink","b38463015787c5b38ad03d6daef8c3d3fe9aaacf",1,"2018-11-07 15:47:48+01:00","[FLINK-10634][metrics][rest] Add metrics
availability e2e test
",572435,6556,274768,"zentol","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7714","apache/flink","5e6502d6878fd81ce257e2e038f31ad39c5d146c",3,"2018-11-15 13:34:13+01:00","[FLINK-10869] [tests] Add S3Credentials to get
access to S3 test credentials
",572557,6558,274892,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7715","apache/flink","0c791cff57aa6ca0167c4967d2e69fdfca988fd4",6,"2018-11-21 11:11:10+01:00","[hotfix][s3-connector] Renamed S3MultiPartUploader
to S3AccessHelper.
",572096,6536,273832,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7716","apache/flink","7fe1743c6ce60b2587db2d7992c75738070f8dfd",1,"2018-12-08 18:28:13+08:00","[hotfix] [state backends, tests] Make
StateBackendMigrationTestBase more understandable
The StateBackendMigrationTestBase previously
mocked user behaviour of upgrading serializers by
using a single serializer class, that can be
configured with different target compatibility
results when they are checked for compatibility.
This is a bit hard to understand, also doesn't
really reflect how a user would actually approach
the feature. Instead, instead of configuring a
single serializer class with different
compatibility ""personalities"", this commit uses
actual different classes, V1TestTypeSerializer,
V2TestTypeSerializer, and
IncompatibleTestTypeSerializer, to simulate the
compatibility cases in tests.  This commit also
refactors the serializer migration related test
serializers / types / snapshots to the testutil
package, so that it can be shared by other state
migration related tests in the future.
",572744,6547,274148,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7717","apache/flink","ebc46c5ec1977ecf70628505eab23c942862857b",29,"2018-12-09 15:15:04+08:00","[FLINK-11094] [state backends] Let meta infos
always lazily access restore serializer  This
commit introduces StateSerializerProvider that
wraps logic on how to obtain serializers for
registered state, either with the previous schema
of state in checkpoints or the current schema of
state.  All state meta info subclasses use
StateSerializerProviders to replace direct
serializer instances. This allows meta infos that
were instantiated with restored serializer
snapshots to not eagerly access the restore
serializer when restoring state. This needs to be
avoided since when restoring from 1.6, the restore
serializer might not be available; for RocksDB,
this should be tolerable.
",573032,6549,274321,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7718","apache/flink","34ca8b772f9ebb152210692d12295db78c534e17",15,"2018-12-09 16:10:31+08:00","[hotfix] Cleanup unused methods / appropriate
method renames in StateMetaInfoSnapshot  This
commit removes the `restoreTypeSerializer(...)`
method. That method is no longer used after the
series of changes in FLINK-11094. This also
corresponds to the new principle that the restore
serializer is only accessed, when the state
backends attempt request it from their state meta
infos. We do not create restore serializers
eagerly when creating meta infos from a
StateMetaInfoSnapshot.  It also removes ""config""
from names of methods and fields related to
serializer snapshotting. This corresponds to the
abstraction rework of retiring
TypeSerializerConfigSnapshot to be replaced by
TypeSerializerSnapshot. The related fields /
methods should not mention ""config"" anymore.
",572966,6549,274296,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7719","apache/flink","e546069c300a51de47e6f752ff1b7491683b2356",1,"2018-12-10 16:58:21+01:00","[FLINK-11122][core] Change signature of
WrappingProxyUtil#stripProxy(T)  Changed signature
so that the method expects a WrappingProxy<T>.
This fixes a type inference ambiguity by the
compiler.  Make the method throw a runtime
exception of it needs to strip more than 128
proxies.  Change AbstractCloseableRegistryTest so
that no mocks are used.  This closes #7273.
",573181,6550,274341,"Gary Yao","gary@data-artisans.com","Gary Yao","gary@data-artisans.com"
"7720","apache/flink","42f5f778468097151e1e7bf75854b3f592b84357",2,"2018-12-19 14:42:28+01:00","[FLINK-9083][cassandra] Add async backpressure
support
",577729,6558,275461,"jparkie","park.jacob.96@gmail.com","Chesnay Schepler","chesnay@apache.org"
"7721","apache/flink","17082604cac8ad596ce42d21ef748eea6e5ae2e2",19,"2018-12-15 10:50:44+01:00","[FLINK-10461][runtime] Refactor direct executor
service  Co-authored-by: Andrey Zagrebin
<azagrebin@gmail.com> Co-authored-by: klion26
<qcx978132955@gmail.com>
",577734,6558,275467,"Andrey Zagrebin","azagrebin@gmail.com","Chesnay Schepler","chesnay@apache.org"
"7722","apache/flink","bab9699e20794262f4f296471e691cdb1f24c75a",38,"2018-12-20 18:21:09+01:00","[FLINK-10748] Decouple RestServerEndpoint from
Dispatcher (#7295)  This commits decouples the
RestServerEndpoint from the Dispatcher by
converting the  RedirectHandler into
LeaderRetrievalHandler which only retrieves the
gateway of the  current leader instead of
redirecting the client. This is possible since the
serving  RestServerEndpoint no longer needs to be
colocated with the Dispatcher and JobMaster  after
all RPC requests are serializable (e.g. no direct
access on the ExecutionGraph  is needed).    With
this change every RestServerEndpoint will
automatically proxy to the current leader  without
needing to redirect the requesting client.
",577458,6559,275481,"Till Rohrmann","trohrmann@apache.org","GitHub","noreply@github.com"
"7723","apache/flink","bc3eb8248fd0bff9459db8897e52152ad6538fd6",2,"2018-12-22 08:19:57-08:00","[FLINK-4582] [kinesis] Consumer for DynamoDB
streams via Kinesis API (#6968)  Introduces a new
Flink source to consume from DynamoDB streams.
This new source is built on top of the existing
Kinesis connector. It interacts with the DynamoDB
streams via a dynamodb-streams-kinesis-adapter
client.
",577836,6566,275751,"Ying Xu","yxu@lyft.com","Thomas Weise","tweise@users.noreply.github.com"
"7724","apache/flink","44968096046a316c6682ef84d12b9c60d7725df7",3,"2018-12-18 09:29:02+01:00","[FLINK-10596][cep] Introduced
PatternProcessFunction
",578304,6575,276065,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"7725","apache/flink","54fea6072daf2f9868d34994c77ae16930e48f16",2,"2018-12-19 10:10:39+01:00","[hotfix][cep] Made PatternStream immutable &
changed PatternStreamBuilder to a proper builder
",578286,6573,276018,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"7726","apache/flink","903a9090324f8d14af15621b7ec026f4a8485050",1,"2018-12-20 12:59:09+01:00","[FLINK-11163][tests] Use random port in
RestClusterClientTest
",578344,6573,276020,"zentol","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7727","apache/flink","54ef382439b1687a645a377a5f6a095746423109",17,"2018-11-27 13:51:29+08:00","[FLINK-9702] Improvement in (de)serialization of
keys and values for RocksDB state  This closes
#7288.  Co-authored-by: Stefan Richter
<s.richter@data-artisans.com> Co-authored-by:
klion26 <qcx978132955@gmail.com>
",578677,6575,276102,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7728","apache/flink","e03cea5431dc63f603469bdbe8c499f8819e3cbd",11,"2018-12-13 19:22:46+08:00","[FLINK-11073] [state backends] Respect serializer
reconfiguration in state backends  This commit
adapts the StateSerializerProvider to respect the
COMPATIBLE_WITH_RECONFIGURED_SERIALIZER case,
which effectively lets all state backends respect
serializer reconfiguration because state
serializers are always obtained via
StateSerializerProviders.  It also makes
StateSerializerProvider work for both eagerly /
lazily registered serializers. This is required so
that the StateSerializerProvider can be used for
the key serializer in AbstractKeyedStateBackend.
For the key serializer, regardless of whether or
not we're restoring old state, we always first get
the new key serializer, and then maybe get the
previous key serializer's snapshot in the restore
phase.  Therefore, after this commit, access the
key serializer in AbstractKeyedStateBackend is
also governed by a StateSerializerProvider.  For a
more fine-grained explaination of all the changes
that build up to this, please refer to #7329.
This closes #7329.
",578850,6575,276231,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7729","apache/flink","0b28bfd0d9f368154bfcd1564388935eff05b055",6,"2019-01-07 17:27:27+01:00","[FLINK-11273][state] Fix shared InputView object
between event processing and queryable state
thread  This was introduced with FLINK-9702.
",578846,6575,276231,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7730","apache/flink","5bcaf2e0fdf9c05f257eeb67d67bf1320faeea8f",2,"2019-01-07 13:28:19+01:00","[FLINK-11073] [core] Rename
CompositeSerializerSnapshot to
NestedSerializersSnapshotDelegate  After
introducing CompositeTypeSerializerSnapshot, the
CompositeSerializerSnapshot has been reworked to
only deal with concerns of delegating reading and
writing of the nested serializers' snapshots. It
no longer deals with resolving the final
compatibility result for the outer composite
serializer.  Therefore, it is renamed properly as
NestedSerializersSnapshotDelegate, and also
annotated as an internal class, since we want
users to use the more powerful
CompositeTypeSerializerSnapshot instead.  This
closes #7422.
",579160,6579,276545,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7731","apache/flink","e8182dcd0987a7326a8c73df902c156e44a7cebf",1,"2019-01-04 16:35:41+08:00","[FLINK-10866] Only load queryable state when
explicitly configured  Change-Id:
Id79c8bf97002a387a80be563a43dce3210143dc2
",577319,6546,275380,"eaglewatcherwb","wbeaglewatcher@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7732","apache/flink","c08db3fda3335402df8f1f770b73007832227aa1",4,"2018-12-30 02:23:43+08:00","[FLINK-11012][tests] Introduce abstract superclass
for filesystem IT cases.  This closes #7384.
",573872,6477,273217,"jinhu.wjh","wujinhu920@126.com","Stefan Richter","s.richter@data-artisans.com"
"7733","apache/flink","992b65af7420ebacf8aa02b26269190919ce3ccd",3,"2019-01-11 15:30:01+01:00","[hotfix] Introduce MetricFetcher interface  Rename
MetricFetcher into MetricFetcherImpl and introduce
MetricFetcher interface. This allows for better
testing and hides the type parameter of
MetricFetcherImpl.
",574187,6482,273402,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7734","apache/flink","474fe8e8ae063e250f7f8f4eddcd799b15f8b69b",1,"2019-01-10 11:17:54+01:00","[FLINK-10822] Make MetricFetcher update interval
configurable  Introduce
WebOptions.METRIC_FETCHER_UPDATE_INTERVAL
configuration option to configure the update
interval of the MetricFetcher.  This closes #7459.
",574247,6482,273405,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7735","apache/flink","7d98940408d4d55cc40ef3622386036cf76d78e7",4,"2019-01-10 18:09:19+01:00","[hotfix] Remove Mockito from MetricFetcherTest
",574264,6483,273428,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7736","apache/flink","8f5cd0db28ade5a285211bc6949541d1cf4cfa70",2,"2018-10-28 03:16:15+08:00","[FLINK-10558][Yarn tests] Port
YARNHighAvailabilityITCase to new code base  This
commit ports the YARNHighAvailabilityITCase to the
new code base. It now uses the
YarnClusterDescriptor and the RestClusterClient to
directly interact with the deployed Flink cluster.
Since the test uses the pkill command to kill the
application master, the test only runs on Linux,
MacOS, FreeBSD and Solaris. On Windows this test
won't be executed.  This closes #7509.
",574158,6481,273399,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7737","apache/flink","edf6d59d315fc0f88d35d6686b39891864537620",2,"2019-01-14 16:46:48+01:00","[FLINK-11328] [core] Upgrade parameterless /
singleton serializers to use new serialization
compatibility APIs
",574145,6481,273515,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7738","apache/flink","960feb4437c439084cfb317dd127645cfd176578",1,"2019-01-17 16:45:06+01:00","[FLINK-11351][tests] Port JobManagerCleanupITCase
to new code base  This commit renames
JobManagerCleanupITCase into BlobsCleanupITCase
and uses the MiniCluster instead of the
TestingCluster to execute the tests.  This closes
#7524.
",573989,6489,273643,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7739","apache/flink","bb64862b8b7e3ee35625bfe8cb003e8eada8e949",1,"2019-01-18 15:48:56+01:00","[FLINK-11356][tests] Port JobManagerStartupTest to
new code base  - Moved
JobManagerStartupTest#testStartupWithPortInUse to 
BootstrapToolsTest#testActorSystemInstantiationFai
lureWhenPortOccupied  - Moved
JobManagerStartupTest#testJobManagerStartupFails
to BlobServerTest#testFailureIfStorageDirectoryCan
notBeCreated  This closes #7541.
",573787,6487,273581,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7740","apache/flink","3667ea605ec9002df225493f0a0b5a6840b6f28d",6,"2019-01-24 08:48:50+01:00","[FLINK-10251][rpc] Refactor handling of over sized
messages  This commit slightly refactors and
cleans up the handling of over sized messages.
This closes #6876.
",573822,6489,273564,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7741","apache/flink","35a3d7918d9d19ca9f718137179e6391854dc84a",2,"2019-01-18 12:03:05+01:00","[hotfix] Move BlobWriter into
JobMangerSharedServices
",573804,6489,273564,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7742","apache/flink","4c4ce451fcaa6055c97dd4fdd55ae1c0239ce5cf",2,"2018-12-23 15:31:24+08:00","[FLINK-11008][state] Parallelize file upload for
RocksDB incremental snapshots.  Summary: This
patch add the ability about uploading state files
using multithread when snapshoting.  Differential
Revision: https://aone.alibaba-
inc.com/code/D818724  This closes #7351.
",573778,6494,273668,"klion26","qcx978132955@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7743","apache/flink","bced96a5a0b8f7b7848add316c12071e0398404a",15,"2018-12-17 17:09:47+01:00","[FLINK-11171] Avoid concurrent usage of
StateSnapshotTransformer  Test non concurrent
access of StateSnapshotTransformer  Refactor out
testNonConcurrentSnapshotTransformerAccess to
separte StateSnapshotTransformerTest  use element
serializer from new meta info, duplicate it in
rocksdb transformer factory, test concurrent
access for element serializer  This closes #7320.
",574210,6497,273760,"Andrey Zagrebin","azagrebin@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7744","apache/flink","479ebd59872160cb2060605b08dcd0d86c3cb78e",7,"2019-01-27 08:35:52+01:00","[FLINK-11436] [avro] Manually Java-deserialize
AvroSerializer for backwards compatibility  During
the release of Flink 1.7, the value of
serialVersionUID was uptick to 2L (was 1L before)
And although the AvroSerializer (along with it's
snapshot class) were migrated to the new
serialization abstraction (hence free from Java
serialization), there were composite serializers
that were not migrated and were serialized with
Java serialization. This commit manually Java-
Deserializes the AvroSerializer to support
backwards compatability.  This closes #7580.
",574053,6496,273738,"Igal Shilman","igal.shilman@data-artisans.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7745","apache/flink","592f3a9a299826efcf9ffa17c56221ac3904f021",28,"2018-09-27 17:44:52+02:00","[FLINK-10473][State TTL] TTL state incremental
cleanup for heap backend  This closes #7188.
",574546,6499,273934,"Andrey Zagrebin","azagrebin@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7746","apache/flink","cae914f82e6b115be5c362a874160ebb7cea8eec",2,"2019-01-22 16:36:23+01:00","[FLINK-11415] Introduce JobMasterServiceFactory
The JobMasterServiceFactory controls how the
JobMasterService is constructed by the
JobManagerRunner. This allows for an easier
testing of this component.  This closes #7564.
",574858,6506,274068,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7747","apache/flink","d4ba83e3baf31e041514e7340d4564ca0bee882a",7,"2019-01-21 16:54:54+01:00","[FLINK-11400] Linearize leadership operations in
JobManagerRunner  Introduce a leadershipOperation
future in the JobManagerRunner. This future is
completed whenever a leadership operation
(granting or revoking leadership) has been fully
completed. All subsequent leadership operations
wait for their predecessors to complete before
they are processed. This guarantees that the
JobMaster is properly shut down and there cannot
be a race condition between revoking and granting
leadership.  This closes #7565.
",574969,6506,274080,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7748","apache/flink","b22e91358fd2e58fc064968953a73218e87cfc88",1,"2019-01-27 15:27:50+01:00","[FLINK-11329] [core] Migrating the
NullableSerializer to use new compatibility API
",575213,6510,274234,"Igal Shilman","igal.shilman@data-artisans.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7749","apache/flink","f441e8b60114f24bee79e01b54059514ca25cfaf",3,"2019-01-18 19:11:49+01:00","[FLINK-11358][tests] Port
LeaderChangeStateCleanupTest to new code base
This commit pots the LeaderChangeStateCleanupTest
to the new code base. The new tests test that
revoking and granting of the leadership to the
Dispatcher and the JobMaster will leave the system
in a clean state.  Moreover, this commit adds Task
ExecutorTest#testDisconnectFromJobMasterWhenNewLea
der which ensures that the TaskExecutor sends a
disconnect message to the JobMaster if it is
notified about a leader change.  Additionally, we
test via DispatcherTest#testJobSuspensionWhenDispa
tcherLosesLeadership that a job is failed if the
Dispatcher loses leadership.  This closes #7567.
",575554,6521,274462,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7750","apache/flink","85c3e7e2c2b46b3a2a7efeee77317dd8aabe3479",1,"2019-01-28 12:13:53+01:00","[FLINK-11363][tests] Shutdown RpcServices created
in TaskManagerRunnerConfigurationTest  Shutdown
RpcServices to avoid resource leak. Split
testUsePreconfiguredRpcService into separate
tests. Rename tests cases.
",575463,6520,274427,"Gary Yao","gary@data-artisans.com","Gary Yao","gary@data-artisans.com"
"7751","apache/flink","a9e18fa921859319642085171289ea515008d572",1,"2018-11-04 18:04:32-08:00","[FLINK-10774] Rework lifecycle management of
partitionDiscoverer in FlinkKafkaConsumerBase
",575583,6518,274388,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7752","apache/flink","3cbaabc527dee12a1a28ba5542cea60a939baf75",1,"2019-01-30 17:43:20+01:00","[FLINK-10774][tests] Refactor
FlinkKafkaConsumerBaseTest#testConsumerLifeCycle
Split #testConsumerLifeCycle into two methods
which represent the two if-else branches.  This
closes #7606.
",575582,6518,274391,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7753","apache/flink","acf228cc5c88872428ccb10296aa1646837c16c2",1,"2019-01-31 11:39:55+01:00","[FLINK-11389][tests] Refactor
TaskDeploymentDescriptorTest  This closes #7532.
",573610,6511,273866,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7754","apache/flink","83159624effc4a17daf9efbf549b58ec5df7b9a8",1,"2019-02-01 20:26:27+08:00","[FLINK-11450][table] Port and move TableSource and
TableSink related classes to flink-table-common
This closes #7626.
",572285,6508,273740,"Dian Fu","fudian.fd@alibaba-inc.com","Timo Walther","twalthr@apache.org"
"7755","apache/flink","22962998a7b0e0095af1f0585a5401e5bd91b247",2,"2019-01-31 17:43:11+01:00","[FLINK-11370] Port ZooKeeperLeaderElectionITCase#t
estJobExecutionOnClusterWithLeaderReelection to
new code base
",572220,6516,273862,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7756","apache/flink","85bae442e62d55a66e3943ea6615cda2a51a7b5f",19,"2018-11-26 11:47:43+01:00","[FLINK-11417] Make access to ExecutionGraph single
threaded from JobMaster main thread  This closes
#7568.
",572454,6521,273971,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7757","apache/flink","0baad99de3387fd01ca16a43857b5f0b4ae52101",1,"2019-02-05 16:48:49+01:00","[FLINK-11524] Solve race condition in
EmbeddedLeaderService  Using the
EmbeddedHaServices it could happen that the
EmbeddedLeaderService goes into an invalid state
if two grant leadership operations are executed
concurrently.  The problem was that the first
operation when confirming the now outdated leader
session id would set the
EmbeddedLeaderElectionService#isLeader field to
false as part of the stale confirmation message
handling. Consequently, all subsequent calls to Le
aderElectionService#hasLeadership(newLeaderSession
Id) would return false even though the contender
would still have the leadership.  The solution is
to not set the
EmbeddedLeaderElectionService#isLeader to false if
the EmbeddedLeaderService encounters a stale
confirmation message.  This closes #7654.
",571703,6515,273715,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7758","apache/flink","2de2a299056d4ce0d296cd2909b636db532034f8",2,"2019-02-06 15:44:02+01:00","[FLINK-11515][client] Port ClientTest
",571648,6513,273673,"zentol","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7759","apache/flink","3d200070c4404dbce61d80fcdda4509ece383937",3,"2019-02-07 11:01:42+01:00","[FLINK-11551][rpc] Allow RpcEndpoint to execute
asynchronous stop operations  Replace
RpcEndpoin#postStop with RpcEndpoint#onStop method
which can execute asynchronous operations in the
main thread executor. onStop returns a future
which will terminate the RpcEndpoint once it is
completed.  The new stop semantics allow to
execute complex shut down logic which requires
asynchronous operations.  This closes #7665.
",570939,6510,273465,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7760","apache/flink","3d39cb0db939805ed7b86ed8ceabef98a160a97a",1,"2019-02-13 13:30:58+01:00","[FLINK-7155][metrics] Add InfluxDB reporter
",571376,6520,273673,"ap","488251+1u0@users.noreply.github.com","Chesnay Schepler","chesnay@apache.org"
"7761","apache/flink","2004286d29b7971376e778ec763d9c688b41dc10",4,"2019-02-11 10:09:59+01:00","[FLINK-11364][tests] Port TaskManagerFailsITCase
to new code base  - ""detect a failing task
manager"" -->
JobMaster#testHeartbeatTimeoutWithTaskManager  -
""handle gracefully failing task manager"" --> JobMa
sterTest#testJobFailureWhenGracefulTaskExecutorTer
mination  - ""handle hard failing task manager"" -->
JobMasterTest#testJobFailureWhenTaskExecutorHeartb
eatTimeout  - ""go into a clean state in case of a
TaskManager failure"" -->
TaskExecutorITCase#testNewTaskExecutorJoinsCluster
This closes #7676.
",571426,6521,273708,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7762","apache/flink","de353210677b2cbcec30662dc3e9ac623c061687",19,"2019-02-08 12:45:36+01:00","[FLINK-11544] [rest] Extend JarRequestBody with
job ID
",571652,6527,273882,"Ufuk Celebi","uce@apache.org","Robert Metzger","metzgerr@web.de"
"7763","apache/flink","3ff8d9c698f3ef80525b80c304372db81f293ed2",1,"2019-02-12 23:27:05+01:00","[FLINK-11587][tests] Port
CoLocationConstraintITCase to new code base  -
""support colocation constraints and slot sharing""
--> JobExecutionITCase#testCoLocationConstraintJob
Execution  This closes #7690.
",571875,6529,273947,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7764","apache/flink","c60995d60a3beabdbb624b8382fff63a8a371dea",71,"2018-10-05 20:27:36+02:00","[FLINK-10431] Extract scheduling-related code from
SlotPool  This closes #7662.
",571886,6538,274062,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7765","apache/flink","730eed71ef3f718d61f85d5e94b1060844ca56db",2,"2019-02-15 17:26:57+08:00","[FLINK-11081][rest] Support server port range
",571861,6537,274009,"vinoyang","yanghua1127@gmail.com","Chesnay Schepler","chesnay@apache.org"
"7766","apache/flink","32c822af7d8f600b24acafea78b2a3a9d19391b3",1,"2019-02-16 17:28:53-08:00","[FLINK-10887] [jobmaster] Add global aggregate
tracking to the JobMaster (#7099)  This adds a
JobMaster RPC endpoint that is used to share
information across source subtasks.    This will
be used implement things like event time source
synchronization across sources.  This
functionality can be accessed from user code via
the StreamingRuntimeEnvironment.
",571960,6544,274131,"Jamie Grier","jgrier@lyft.com","Thomas Weise","tweise@users.noreply.github.com"
"7767","apache/flink","735b5141f14bc56a0c88d792b8413bcad42f0ce3",37,"2019-02-19 14:05:11+01:00","[FLINK-10471][State TTL] State TTL cleanup using
RocksDb compaction filter  This closes #7163.
",572001,6552,273986,"azagrebin","azagrebin@users.noreply.github.com","Stefan Richter","s.richter@data-artisans.com"
"7768","apache/flink","c9e392b53b48c8ae0b189905a9b4cf878bf741e4",1,"2019-02-19 14:51:06+01:00","[FLINK-11537] Make ExecutionGraph#suspend
terminate ExecutionGraph atomically  This commit
makes the suspend call transition the
ExecutionGraph atomically into the SUSPENDED state
without requiring a round-trip to cancel all task
properly. Instead it simply notifies the
TaskExecutors about the suspension and then
transitions the Executions into a terminal state.
Moreover, this commit removes
JobStatus#SUSPENDING.  This closes #7756.
",570576,6542,273464,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7769","apache/flink","cf7b86de436c8714414f563e8637ceb36ea7aabe",2,"2019-01-31 17:31:58+08:00","[FLINK-11485] [core] Rename OptionalMap to
LinkedOptionalMap  Having ""Linked"" in the name
better reflects the fact that the map preserves
entry ordering.
",571550,6555,273801,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7770","apache/flink","7621c57eb199f7225f5d9a06aee52914f6896780",4,"2019-02-19 14:33:36+08:00","[FLINK-11485] [core] Implement new
PojoSerializerSnapshot class
",572553,6561,274161,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7771","apache/flink","971c5633b63724c6627c3d2b344172889a72aa75",1,"2019-02-22 18:38:45+08:00","[hotfix][runtime] Consistent enum implementation
",572415,6562,274161,"ZiLi Chen","wander4096@gmail.com","Chesnay Schepler","chesnay@apache.org"
"7772","apache/flink","3bf06b9dd3dc66dcfdeccaaa591ace41ea51e343",15,"2019-02-23 03:16:41+08:00","[FLINK-10043] [State Backends] Refactor
RocksDBKeyedStateBackend object
construction/initialization/restore code  This
closes #7674.
",574352,6584,274826,"Yu Li","liyu@apache.org","Stefan Richter","s.richter@data-artisans.com"
"7773","apache/flink","7a078a632cbbba5f0885e5eed87376849a161050",1,"2019-02-26 15:45:08+01:00","[FLINK-11743] Fix problem with restoring
incremental checkpoints from local state  This
corrects a problem that was introduced with the
refactorings in FLINK-10043.  This closes #7841.
",576617,6602,275408,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7774","apache/flink","5bc04d255bdf850de73c0ff67e79fbb73fb299ce",4,"2019-02-26 16:08:48+01:00","[hotfix] Introduce common interface to all
IncrementalKeyedStateHandles
",576630,6603,275431,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7775","apache/flink","a8580ca08dab19f83ee87ea83e0801c516687e62",1,"2019-01-28 17:28:31+08:00","[FLINK-10912][rocksdb] Configurable
RocksDBStateBackend options  This closes #7586.
",577073,6606,275604,"Yun Tang","myasuka@live.com","Stefan Richter","s.richter@data-artisans.com"
"7776","apache/flink","ba089aa59330644d4f4a00227cd2bb58e404894c",5,"2019-02-22 12:20:50+01:00","[FLINK-11718][rpc] Add onStart method to
RpcEndpoint  Add a dedicated onStart method to the
RpcEndpoint which is called when the RpcEndpoint
is started via the start() method. Due to this
change it is no longer necessary for the user to
override the start() method which is error prone
because it always requires to call super.start().
Now this contract is explicitly enforced.
Moreover, it allows to execute the setup logic in
the RpcEndpoint's main thread.
",577155,6606,275624,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7777","apache/flink","8b8dd8031819336200005e690ca66deaed5b1268",2,"2019-02-27 19:56:19+08:00","[FLINK-11772] [DataStream]
InternalTimerServiceSerializationProxy should not
be serializing timers' key / namespace serializers
anymore  All of the changes done to managed state
surrounding how we no longer Java-serialize
serializers anymore, and only write the serializer
snapshot, was not reflected to how we snapshot
timers. This was mainly due to the fact that
timers were not handled by state backends (and
were therefore not managed state) in the past, and
were handled in an isolated manner by the
InternalTimerServiceSerializationProxy.  This
closes #7849.
",578616,6650,276565,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7778","apache/flink","1c36d22a7c51e080dcf6766c71677741a1c68194",4,"2019-02-26 20:59:36+01:00","[FLINK-11753] [tests] Refactor
SchemaCompatibilityTestingSerializer  This closes
#7845.
",578453,6647,276399,"Igal Shilman","igal.shilman@data-artisans.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7779","apache/flink","7c95643f6c7570b700b00eea982581d3d57ab935",1,"2019-02-27 21:08:50+01:00","[FLINK-11773] [core] Add
LinkedOptionalMapSerializer  This adds a
simplified serializer for LinkedOptionalMaps that
resiliently stores the keys and the values of the
map.
",578522,6648,276422,"Igal Shilman","igal.shilman@data-artisans.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7780","apache/flink","eada52be5194a018a41e7ea51ea86e0273df2073",12,"2019-03-01 11:52:14+08:00","[FLINK-11804] [State Backends] Make sure the
CloseableRegistry used in backend builder is
registered with task  We need to make sure each
stream constructed in restore could also be closed
in case of task cancel, for example the data input
stream opened for serDe during restore.  Also
removed close of CloseableRegistry in
RocksDBKeyedStateBackendBuilder.
",583256,6705,278504,"Yu Li","liyu@apache.org","Stefan Richter","s.richter@data-artisans.com"
"7781","apache/flink","237d07c76b51c171f0f41f9f82d777df26da1dd4",3,"2019-03-01 03:02:35+08:00","[FLINK-11730] [State Backends] Make
HeapKeyedStateBackend follow the builder pattern
This closes #7866.
",583547,6715,278729,"Yu Li","liyu@apache.org","Stefan Richter","s.richter@data-artisans.com"
"7782","apache/flink","94f84a5c7b4876dee5b34e6a3725da7ee06a607f",14,"2019-03-02 18:19:21+08:00","[FLINK-11731] [State Backends] Make
DefaultOperatorStateBackend follow the builder
pattern  This closes #7899.
",583839,6719,278807,"Yu Li","liyu@apache.org","Stefan Richter","s.richter@data-artisans.com"
"7783","apache/flink","11a8234b50586d476371c64f9d751e8e65fdad0a",3,"2019-03-01 16:26:48+01:00","[FLINK-11336][zk] Delete ZNodes when
ZooKeeperHaServices#closeAndCleanupAllData  When
calling ZooKeeperHaServices#closeAndCleanupAllData
we should delete the HA_CLUSTER_ID znode which is
owned by the respective ZooKeeperHaServices.
Moreover, the method tries to go up the chain of
parent znodes and tries to delete all empty parent
nodes. This should clean up otherwisely orphaned
parent znodes.  This closes #7880.
",583985,6719,278818,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7784","apache/flink","953a5ffcbdae4115f7d525f310723cf8770779df",9,"2019-03-06 16:45:33+01:00","[hotfix][statebackend] Reduce and simplify code
for column creation in RocksDB backend  This
closes #7830.
",584824,6728,279214,"azagrebin","azagrebin@users.noreply.github.com","Stefan Richter","s.richter@data-artisans.com"
"7785","apache/flink","a5cc7561d840a88b959944931583ecd7521a5445",1,"2019-03-07 10:00:13+01:00","[FLINK-10756][runtime][tests] Wait for TM
processes to shutdown
",593281,6810,282465,"zentol","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7786","apache/flink","b6b4baf588fae0494e32492ac16df8977d8cfc1b",1,"2019-03-14 18:48:39+08:00","[FLINK-11874][checkpoint] Split CheckpointStorage
interface to distinguish JM and TM side  This
closes #7970.
",593236,6808,282384,"Yun Tang","myasuka@live.com","Stefan Richter","s.richter@data-artisans.com"
"7787","apache/flink","6a66f7acf370e12ad65ee24293ed47d2c5db225c",3,"2019-03-07 15:07:19+08:00","[FLINK-11825][StateBackends] Resolve name class of
StateTTL TimeCharacteristic class.  We can not
remove the class StateTtlConfig#TimeCharacteristic
and use
org.apache.flink.streaming.api.TimeCharacteristic
directly, because StateTtlConfig locates in module
flink-core and
org.apache.flink.streaming.api.TimeCharacteristic
locates in flink-streaming-java, so we choice to
rename StateTtlConfig#TimeCharacteristic.  changes
include: - Deprecated the
StateTtlConfig#TimeCharacteristic class (for
backward-compatibility). - Introduce a new class
named StateTtlConfig#TtlTimeCharacteristic.
",599026,6886,286406,"klion26","qcx978132955@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7788","apache/flink","ccf27ff845836d74bcb94a9b5baf4bc171ea2ff3",2,"2019-03-07 17:28:33+01:00","[FLINK-11855] Fix race condition in
EmbeddedLeaderService#GrantLeadershipCall  Fix the
race condition between executing
EmbeddedLeaderService#GrantLeadershipCall and a
concurrent shutdown of the leader service by
making GrantLeadershipCall not accessing mutable
state outside of a lock.  This closes #7935.
",596602,6896,286319,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7789","apache/flink","5210948a2666084e0834cd47c695e696722f426f",1,"2019-04-01 13:02:57-07:00","[FLINK-12075][yarn] Set RestOptions.BIND_PORT only
to 0 if not specified  This commit changes the
YarnEntrypointUtils#loadConfiguration so that it
only sets RestOptions.BIND_PORT to 0 if it has not
been specified. This allows to explicitly set a
port range for Yarn applications which are running
behind a firewall, for example.  This closes
#8096.
",606651,6961,289885,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7790","apache/flink","1d5dda330ff61e66723ba3d98d38ba4642b8cd0d",2,"2019-03-31 17:11:16+08:00","[FLINK-12062][table-runtime-blink] Introduce
bundle operator to streaming table runtime.  This
closes #8086
",608115,6981,290511,"Kurt Young","ykt836@gmail.com","Kurt Young","ykt836@gmail.com"
"7791","apache/flink","6e8a3f312919f8f088c132b13b727cb2188eacb5",10,"2019-04-04 20:16:55+08:00","[FLINK-11603][metrics] Port MetricQueryService to
RpcEndpoint
",607930,6981,290506,"Zili Chen","wander4096@gmail.com","Chesnay Schepler","chesnay@apache.org"
"7792","apache/flink","5dc8afd4c8bfea1b2aea0eb6f83ffce38bad3955",5,"2019-04-08 17:32:48+08:00","[FLINK-12121] [State Backends] Use composition
instead of inheritance for InternalKeyContext in
backends  This closes #8122.
",610424,7010,291316,"Yu Li","liyu@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7793","apache/flink","352a995e2aca8651046afb0767cb0d361f2571ca",1,"2019-04-12 16:30:51+08:00","[FLINK-12067][network] Refactor the constructor of
NetworkEnvironment (#8090)  [FLINK-12067][network]
Refactor the constructor of NetworkEnvironment
The constructor of NetworkEnvironment was
refactored to only contain
NetworkEnvironmentConfiguration. The other related
components such as TaskEventDispatcher,
ResultPartitionManager, NetworkBufferPool are
created internally.    We also refactor the
process of generating
NetworkEnvironmentConfiguration in
TaskManagerServiceConfiguration to add
numNetworkBuffers instead of previous
networkBufFraction, networkBufMin, networkBufMax.
This way seems more easy and direct to construct
NetworkBufferPool later. isCreditBased field is
also maintained in this component for considering
the setting usage in tests.    Further we
introduce the
NetworkEnvironmentConfigurationBuilder for
creating NetworkEnvironmentConfiguration easily
especially for tests.
",612283,7035,292160,"zhijiang","wangzhijiang999@aliyun.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7794","apache/flink","0c4953c4c5ff583d88f1686cd96fd7e7be9d8f11",2,"2019-04-09 10:37:03+02:00","[FLINK-11952][2/4] Introduce basic plugin
mechanism for Flink  The mechanism uses child-
first classloading and creates classloaders from
jars that are discovered from a directory
hierarchy.
",616368,7083,293731,"Stefan Richter","s.richter@data-artisans.com","Stefan Richter","s.richter@data-artisans.com"
"7795","apache/flink","1b5a25178789945d63356bd6f923051e8c7fec4d",4,"2019-02-22 12:30:28+01:00","[FLINK-11669][checkpointing] Wire the
Suspend/Terminate to the JM/TM.  Wires the
functionality introduced in FLINK-11667 and
FLINK-11668 with Flink's distributed RPC
mechanism. This is a pre-requisite in order to
expose the ""suspend"" and ""terminate""/""drain""
functionality to the user.
",621042,7135,295343,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7796","apache/flink","c28c6e818c9447b689bb89fe65180bbd0b4c0c8f",2,"2019-03-13 15:49:01+01:00","[FLINK-11670][FLINK-11671][rest][cli] Expose
Suspend/Drain via REST and CLI.
",621389,7138,295414,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7797","apache/flink","e95b347dda5233f22fb03e408f2aa521ff924996",2,"2019-03-26 11:10:38+01:00","[FLINK-11889] Remove ""stop"" signal and related
interfaces.
",621785,7149,295786,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7798","apache/flink","c9f11ccb819cb3572adb7f7301640df5cec9e5a7",1,"2019-04-15 22:51:03+08:00","[FLINK-12146][network] Remove unregisterTask from
NetworkEnvironment to simplify the interface of
ShuffleService   NetworkEnvironment#unregisterTask
is used for closing partition/gate and releasing
partition from ResultPartitionManager.
partition/gate close could be done in task which
already maintains the arrays of them.  Further we
could release partition from
ResultPartitionManager inside ResultPartition via
introducing ResultPartition#fail(Throwable).  To
do so, the NetworkEnvironment#unregisterTask could
be totally replaced to remove. The benefit is
simplifying the method of NetworkEnvironment which
would be regarded as default ShuffleService
implementation.
",621764,7149,295793,"Zhijiang","wangzhijiang999@aliyun.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7799","apache/flink","9d51ad4e0fa8a89d8707ecd4f8b9ce20f8212783",3,"2019-04-24 14:10:30+02:00","[FLINK-12247] Add @Nullable annotation to
AccessExecutionVertex#getPriorExecutionAttempt()
This commit updates the
AccessExecutionVertex#getPriorExecutionAttempt()
interface to correctly denote that it can return a
null value.
",627309,7229,298773,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7800","apache/flink","fa3f761af050791158e175f034575d7d16398d78",2,"2019-03-28 15:37:45+08:00","[FLINK-12042] Fix RocksDBStateBackend mistaken
usage of the default filesystem  [FLINK-12042]
Restrict only temporary snapshot directories to
the local file system by changing the signature to
accept files as parameter  This closes #8068.
",628207,7255,300624,"林小铂","linxiaobo@corp.netease.com","Till Rohrmann","trohrmann@apache.org"
"7801","apache/flink","8a8d72297109532c104956dc93158a69ee2c9048",1,"2019-04-18 15:50:02+02:00","[FLINK-12230][runtime] Remove method
JobMaster#getExecutionGraph()  This closes #8211.
",628117,7237,300307,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"7802","apache/flink","566d10d958d71fd113f8f7ecc08fa9b63a072919",4,"2019-04-24 21:50:22+02:00","[FLINK-12312][runtime] Remove CLI command for
rescaling  This closes #8260.
",628570,7244,300547,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"7803","apache/flink","1d22018dc4886a2842fffd9fac1224f862085239",2,"2019-05-02 12:07:44+02:00","[FLINK-12253][table-common] Add a ROW type
",631255,7283,301871,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7804","apache/flink","fe6b46053fac9c534adee72482112f583925b5fe",5,"2019-05-02 13:30:59+02:00","[FLINK-12253][table-common] Add user-defined types
",631677,7286,301989,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7805","apache/flink","b9704be0512337b3c74a26f3fb36035e6480d522",1,"2019-04-23 11:37:28+02:00","[FLINK-12231][runtime] Introduce SchedulerNG
interface  Introduce SchedulerNG interface with a
LegacyScheduler implementation, which hides direct
calls to the ExecutionGraph from the JobMaster.
The LegacyScheduler is only needed so that the
existing scheduling code paths keep functioning
while work on the new scheduling abstractions is
in progress.  Remove JobMasterTest#testAutomaticRe
startingWhenCheckpointing() because it requires
the JobMaster to expose internal state
(RestartStrategy) - add unit tests for
JobGraph#isCheckpointingEnabled() to make up for
the removed test.
",633978,7329,303466,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"7806","apache/flink","abd8af873a63869385e587b647ded3af7eb8a09a",1,"2019-04-23 17:20:33+08:00","[FLINK-11974][runtime] Introduce
StreamOperatorFactory and replace
StreamOperator.setup with
StreamOperatorFactory.create
",634469,7342,304027,"JingsongLi","lzljs3620320@aliyun.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7807","apache/flink","1cb9d680cbbc46e67de10acc99c5fb510b9382e5",5,"2019-05-03 13:52:23+02:00","[FLINK-12393][table-common] Add the user-facing
classes of the new type system  Introduces the
DataType class and subclasses. Users are able to
do a star import of DataTypes and declare types
like: `MULTISET(MULTISET(INT())`. Close to SQL. As
mentioned in FLIP-37, data types allow to specify
format hints to the planner using
`TIMESTAMP(9).bridgedTo(java.sql.Timestamp)`.
This closes #8360.
",635063,7350,304612,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7808","apache/flink","12f34808fd87816726a5a8ce74146bd07265c1c3",2,"2019-05-07 14:55:25+02:00","[hotfix][table-common] Add description to user-
defined type attributes
",635071,7350,304612,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7809","apache/flink","a7cf24383be9f310fb5ccc5a032721421fa45791",4,"2019-04-25 13:09:40+02:00","[FLINK-12070] [network] Change Bounded Blocking
Subpartition Implementation to Memory Mapped Files
This commit consists of multiple steps (originally
individual commits) that are squashed into one
commit after review, to form a self-contained
(compiling / test passing) commit.  Part 1: Make
tests that were specific to pipelined (and buffer
storing) implementations into the     specific
test classes.      Several assumptions are tied to
specific implementations of the partitions, rather
than testing     required behavior:        - The
availability of statistics after disposing
partitions is not necessary and requires extra
effort to guarantee in certain implementations
- The fact that the number of bytes in a partition
only update on consumption seems wrong and
can only apply on ""consume once"" implementations.
This should not be assumed in a test base.  Part
2: Make ""release parent releases readers"" test
specific to pipelined partitions.      For
pipelined partitions, the release call on the
SubPartition causes immedately releasing the
reader (view).     For bounded partitions, this is
not required or even desirable, because too eager
release can segfault in case     of direct byte
buffers and memory mapped files.  Part 3: Remove
old SpillableSubpartition and
SpillableSubpartitionView  Part 4: Move code
specific to pipelined subpartitions into
PipelinedSubpartition class.  Part 5: Implement
new BoundedBlockingSubpartition  Part 6: Remove no
longer applicable memory release test for blocking
partitions  Part 7: Add tests for
BoundedBlockingSubpartition
",635680,7366,304980,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7810","apache/flink","76ae39a18ecb29c49a0ce9a205517b2104daa616",1,"2019-05-11 20:32:33+08:00","[FLINK-12371][table-planner-blink] Add support for
converting (NOT) IN / (NOT) EXISTS to semi / anti
join (#8317)  This closes #8317
",638494,7373,306339,"godfrey he","godfreyhe@163.com","Kurt Young","ykt836@gmail.com"
"7811","apache/flink","792f2a2d9c0b5c8bba881455dedbed09b02d363c",2,"2019-05-13 14:52:19+02:00","[FLINK-12468][yarn] Derive HistoryServer's URL
from HistoryServerOptions  This commit derives the
HistoryServer's URL from the availabe
HistoryServerOptions.  This closes #8396.
",639536,7394,307088,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7812","apache/flink","c3c74e005ff3a6e10216742bd58a5145c867f665",2,"2019-05-03 13:14:39+02:00","[FLINK-11922][metrics] Add JMXReporterFactory
",639936,7398,307255,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7813","apache/flink","37edea4df230268447d5960a3cdf99e77dc9629f",1,"2019-05-15 11:25:33+02:00","[FLINK-12254][table-common] Add a class to data
type converter
",641513,7411,307801,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7814","apache/flink","a71c200b470ffe7ae614870d5855d1e24673c08b",2,"2019-05-21 13:35:46+02:00","[hotfix][table-common] Fix equality of data types
with same conversion class
",643335,7451,309061,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7815","apache/flink","f4f451037c9bab96e241a2a4e13119b1c3bbf21c",1,"2019-05-24 09:38:51+02:00","[FLINK-12570][network] Work against
ResultPartitionWriter interface  This part of
Shuffle API refactoring: make task not depend on
the  concrete implementation of
ResultPartitionWriter (ResultPartition).
",644468,7472,309679,"azagrebin","azagrebin@users.noreply.github.com","Chesnay Schepler","chesnay@apache.org"
"7816","apache/flink","d3e5bf69c3d3f105c1ebe7c46bd4a74e5407137f",1,"2019-05-24 12:04:13-07:00","[FLINK-9172][sql-client][tabe] Support catalogs in
SQL-Client yaml config file  This PR adds support
for basic catalog entries in SQL-Client yaml
config file, adds CatalogFactory and
CatalogDescriptor, and hooks them up with SQL
Client thru table factory discovery service.  This
closes #8541.
",648391,7523,311856,"bowen.li","bowenli86@gmail.com","bowen.li","bowenli86@gmail.com"
"7817","apache/flink","551b8ef507109218a428baac2d5682fec2381a4f",1,"2019-05-27 12:45:13+02:00","[hotfix][table-common] Add a value to data type
converter
",648673,7525,311949,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7818","apache/flink","809e40dadad68232c68ac34a3d56bfb69a9396d3",2,"2019-05-15 13:12:26+02:00","[FLINK-12530][network] Move Task.inputGatesById to
NetworkEnvironment  Task.inputGatesById indexes
SingleInputGates by id. The end user of this
indexing is NetworkEnvironment for two cases:  -
SingleInputGate triggers producer partition
readiness check and   then the successful result
of check is dispatched back to this
SingleInputGate by id.   We can just return a
future from
TaskActions.triggerPartitionProducerStateCheck.
SingleInputGate could use the future to react with
re-triggering of the   partition request if the
producer is ready. Then inputGatesById is not
needed for dispatching.  -
TaskExecutor.updatePartitions uses inputGatesById
to dispatch PartitionInfo update to the right
SingleInputGate.   If inputGatesById is moved to
NetworkEnvironment, which should be a better place
for gate management,   and
NetworkEnvironment.updatePartitionInfo is added
then   TaskExecutor.updatePartitions could
directly call
NetworkEnvironment.updatePartitionInfo.
Additional refactoring:  -
TaskActions.triggerPartitionProducerStateCheck is
separated into another interface
PartitionProducerStateProvider.   TaskActions is
too broad interface used also for other purposes.
Shuffle API needs only
PartitionProducerStateProvider.  -
PartitionProducerStateProvider returns future with
the ResponseHandle   which contains the producer
state and accepts callbacks to cancel or fail
consumption as a result of state check.  -
Task.triggerPartitionProducerStateCheck is also
refactored into a RemoteChannelStateChecker
which becomes internal detail of
NetworkEnvironment. RemoteChannelStateChecker
accepts ResponseHandle,   checks whether producer
is ready for consumption or aborts consumption
using ResponseHandle.cancelConsumption or
ResponseHandle.failConsumption.
",650449,7542,312804,"Andrey Zagrebin","azagrebin@gmail.com","Chesnay Schepler","chesnay@apache.org"
"7819","apache/flink","de31f49b4b835b71cdf99f93c89e33a84113b272",1,"2019-05-21 11:26:20+08:00","[FLINK-12547][blob] Add connection and socket
timeouts for the blob client  This closes #8484.
",652975,7579,313824,"sunhaibotb","sunhaibotb@163.com","Till Rohrmann","trohrmann@apache.org"
"7820","apache/flink","99d4fd39f2b44630130d47b16ebcd69923f09e9a",1,"2019-05-24 12:55:48+02:00","[hotfix][table-api] Port TableSource specific
descriptors
",653834,7592,314195,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"7821","apache/flink","1c916a47322e04b42f8521cbdb833f8cc2147ee2",1,"2019-05-20 11:32:42+02:00","[FLINK-12556][e2e] Add read-only test FileSystem
for end-to-end tests
",654858,7608,314617,"Aleksey Pak","aleksey@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7822","apache/flink","758780f39685010d1255e4b44ed4f03aacf2fa92",1,"2019-05-27 12:46:12+02:00","[FLINK-12254][table] Update value literals to new
type system
",655063,7613,314801,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7823","apache/flink","de67f2ed042301bdd6b452aa37cd097e645041ca",3,"2019-04-19 15:45:38+02:00","[FLINK-11391] Introduce shuffle master interface
Introduce PartitionLocation in
NettyShuffleDescriptor and
NettyShuffleDescriptorBuilder for tests  Add
ShuffleDescriptor.getResultPartitionID and
isUnknown  Use NettyShuffleDescriptorBuilder in
StreamNetworkBenchmarkEnvironment  Introduce
ShuffleUtils.applyWithShuffleTypeCheck to isolate
inout channel shuffle descriptor 'known' check and
cast  This closes #8362.
",655668,7623,315181,"Andrey Zagrebin","azagrebin@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7824","apache/flink","ac84e0c84dee39da7339722aad5ed2dcf26e2d27",1,"2019-06-05 15:03:01+02:00","[FLINK-12101] Deduplicate code by introducing
ExecutionEnvironment#resolveFactory
ExecutionEnvironment#resolveFactory selects
between the thread local and the global factory.
This method is used by the ExecutionEnvironment as
well as the StreamExecutionEnvironment.  This
closes #8543.
",655699,7623,315195,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7825","apache/flink","3e8b083c7d2587b7acd1792ad0eee2357e8ccc63",3,"2019-05-31 10:56:13+02:00","[hotfix][table-api] Rename TableOperation to
QueryTableOperation
",656237,7629,315407,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"7826","apache/flink","ef150eeb654bcb6df27f44402b9c9c8a24471217",4,"2019-06-05 12:08:22+02:00","[hotfix][table-common] Introduce an across-catalog
object identifier
",656420,7636,315642,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7827","apache/flink","74ef63672629e0498fb65c5ca91e378f36eb1847",3,"2019-05-29 09:39:29+08:00","[FLINK-12787][python] Allow to specify directory
in option -pyfs  This closes #8671
",656389,7623,315366,"Dian Fu","fudian.fd@alibaba-inc.com","sunjincheng121","sunjincheng121@gmail.com"
"7828","apache/flink","c104dafd26f32d939461cb880ddfc881a8d14d5f",1,"2019-05-30 15:16:16+02:00","[FLINK-11392][network] Rename NetworkEnviroment to
NettyShuffleEnviroment  This closes #8608.
",656716,7625,315545,"Andrey Zagrebin","azagrebin@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7829","apache/flink","8be60e6f2a06d3783c744749bb76aac14496e3aa",2,"2019-06-12 12:14:42+02:00","[FLINK-12502] Refactor
JobMasterTest#testRequestNextInputSplits tests  *
Rename JobMasterTest#testRequestNextInputSplitsWit
hTaskFailover into
#testRequestNextInputSplitsWithLocalFailover *
Rename JobMasterTest#testRequestNextInputSplits
into #testRequestNextInputSplitsWithGlobalFailover
* Reduce code duplication between tests by running
the same test code with different configurations *
Properly check that only the failed Execution's
input splits are being reset in case of local task
failover  This closes #8667.
",657874,7648,316121,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7830","apache/flink","d894d3517258191703a0a6dd6b42947c8a0d8d95",5,"2019-06-13 13:32:31+02:00","[FLINK-12799][table] Improve expression based
TableSchema extraction from DataStream/DataSet
",658090,7651,316182,"Dawid Wysakowicz","dwysakowicz@apache.org","GitHub","noreply@github.com"
"7831","apache/flink","8a39c84e29c9ad64febbd850c99b40d28b5359d1",7,"2019-05-20 17:15:41+08:00","[FLINK-12372] [runtime] implement
ExecutionSlotAllocator  This closes #8486.
",659425,7665,316787,"shuai-xu","shuaixu@foxmail.com","Gary Yao","gary@apache.org"
"7832","apache/flink","65e822b67ec93e5cf50e6303c838c3b30935834a",6,"2019-02-11 15:23:59+01:00","[FLINK-12838][network] netty-fy SSL configuration
Refactor the SSL configuration done for Netty to
have it more like the way Netty intends it to be:
using its SslContextBuilder. This will make it
much easier to set a different Netty SSL engine
provider.  [hotfix][network] extract key and trust
manager factory creation
",660776,7680,317317,"Nico Kruber","nico@ververica.com","Nico Kruber","nico.kruber@gmail.com"
"7833","apache/flink","fec2ccfdd259bfe4e7e1cda578daeec0e7b8a38c",13,"2019-06-14 21:59:25+08:00","[FLINK-12832][datastream] Make slot sharing
configurable in StreamGraphGenerator
",662626,7700,317988,"ifndef-SleePy","mmyy1110@gmail.com","Aljoscha Krettek","aljoscha.krettek@gmail.com"
"7834","apache/flink","8c57e5aed871b42d51e6218620ce7bd7991338c0",1,"2019-06-19 17:00:59+08:00","[FLINK-12364] Introduce CheckpointFailureManager
for centralized checkpoint failure handling
",663919,7700,318135,"vinoyang","yanghua1127@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7835","apache/flink","3cf65b11237a2928273ce5675faf6b2900b0b76a",1,"2019-06-18 15:47:22-07:00","[FLINK-12877][table][hive] Unify catalog database
implementations  This PR unifies catalog database
implementations, and remove is_generic flag.  This
closes #8786.
",663622,7697,318058,"bowen.li","bowenli86@gmail.com","bowen.li","bowenli86@gmail.com"
"7836","apache/flink","cad29cc33a7c456beb35d56d2c84dc7cb7c72fa1",3,"2019-06-11 15:53:49+08:00","[FLINK-11869] Make buffer size in checkpoint
stream factory configurable  This closes #8686.
",663981,7700,318156,"Yun Tang","myasuka@live.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7837","apache/flink","b0ce36e8d71308c61c2d4e7cf23b4402793fcc92",1,"2019-05-29 20:42:07+08:00","[FLINK-11947] Support MapState value schema
evolution for RocksDB  Currently, we do not
attempt to perform state schema evolution if the
key or value's schema of a user MapState has
changed when using RocksDB, with this commit we
support value's schema evolution for
RocksDBMapState.  This closes #8565.
",664144,7700,318169,"klion26","qcx978132955@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7838","apache/flink","829146d516751a592c3ab15908baebfd13429e8e",1,"2019-06-19 17:38:16+08:00","[FLINK-11947] Improve readability and fix raw type
usage for
RocksDBKeyedStateBackend#migrateStateValues  This
closes #8565.
",664156,7700,318169,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7839","apache/flink","687cc91975464734ac43f4c2eb062f1f312b589e",6,"2019-06-17 10:48:55+02:00","[hotfix][network] Rename taskExecutorLocation to
taskExecutorResourceId and small fixes
",664678,7710,318420,"Andrey Zagrebin","azagrebin@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7840","apache/flink","a95dac57ef0e1949fd4751ca19350da96c3bf52f",4,"2019-06-17 18:54:29+02:00","[FLINK-12863][FLINK-12865] Remove concurrency from
HeartbeatManager(Sender)Impl  This commit makes
the HeartbeatManager implementations to use the
RpcEndpoint's main thread executor. Furthermore,
this commit changes the HeartbeatListener
interface to directly return a payload instead of
returning a future when
HeartbeatListener#retrievePayload is called.
Since the HeartbeatManager implementations now use
the RpcEndpoint's main thread, we remove the
splicing into the RpcEndpoint's main thread in the
implementations of the HeartbeatListeners in the
TaskExecutor, JobMaster and ResourceManager
components.  * Add test case for FLINK-12863  The
test case JobMasterTest#testAllocatedSlotReportDoe
sNotContainStaleInformation verifies that the
AllocatedSlotReport does not contain stale
information. The test case itself is probabilistic
and needs to be executed several times to produce
a failure.  * Add test case for FLINK-12865  The
test case TaskExecutorTest#testSlotReportDoesNotCo
ntainStaleInformation verifies that the SlotReport
does not contain stale information. The test case
itself is probabilistic and needs to be executed
several times to produce a failure.  This closes
#8783.
",665589,7724,318757,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7841","apache/flink","6b8212ca4b883529fec38607cf0abb18f0cb72cf",1,"2019-06-20 14:04:36+02:00","[hotfix] Harden TaskExecutorTest#testSyncSlotsWith
JobMasterByHeartbeat  The problem was that we
don't wait until the JobMaster has sent its
response back to the TaskExecutor when it receives
the offered slots and before we send the heartbeat
response with the AllocatedSlotReport. This commit
fixes the problem by instrumenting the
TaskSlotTable to notify the test when all slots
are marked as active.
",665585,7724,318755,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7842","apache/flink","449cc454d163f82cf07c433c89aa6aa37fa75fbe",1,"2019-06-05 11:58:00+02:00","[hotfix][runtime] Add @Nullable to
JobVertex#getSlotSharingGroup()
",665643,7688,317711,"Gary Yao","gary@apache.org","Chesnay Schepler","chesnay@apache.org"
"7843","apache/flink","5992662e6ed5f1c32015652e9bbad06d27bf4712",1,"2019-06-05 11:59:30+02:00","[hotfix][runtime] Add @Nullable to
ExecutionJobVertex#getSlotSharingGroup()
",665645,7688,317711,"Gary Yao","gary@apache.org","Chesnay Schepler","chesnay@apache.org"
"7844","apache/flink","f63f7e6be29709b5871abd055ef1b12476952e75",1,"2019-06-04 07:19:10-05:00","[FLINK-12729] [state-processing-api] Add state
reader for consuming non-partitioned operator
state
",667241,7713,318425,"Seth Wiesman","sjwiesman@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7845","apache/flink","f53ea87a1fa9a195645fd407a31f5cfef32cc306",3,"2019-06-04 11:44:08-05:00","[hotfix] Refactor NeverCompleteFuture into a
reusable utility
",667254,7714,318439,"Seth Wiesman","sjwiesman@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7846","apache/flink","fce903ef20df988b785125d331b031e6d113cd38",7,"2019-06-04 11:48:03-05:00","[FLINK-12732] [state-processing-api] Implement
shim SavepointEnvironment on top of user
RuntimeContext
",667699,7720,318569,"Seth Wiesman","sjwiesman@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7847","apache/flink","edb9f939a8c0f60d7c03adb86ec99a6685056205",2,"2019-06-04 11:49:14-05:00","[FLINK-12732] [state-processing-api] Add savepoint
reader for consuming partitioned operator state
",668390,7730,318855,"Seth Wiesman","sjwiesman@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7848","apache/flink","c7f7fae59c9e0a10e595b1036d4329522d704938",5,"2019-06-24 10:42:21+02:00","[FLINK-12924][table] Introduce basic type
inference interfaces
",668583,7742,319231,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7849","apache/flink","d43e6b82ea16f49aee5006de8d63212af7fea8fc",4,"2019-02-22 15:57:07+01:00","[FLINK-11693] Add KafkaSerializationSchema that
uses ProducerRecord
",669241,7744,319426,"Aljoscha Krettek","aljoscha@apache.org","Aljoscha Krettek","aljoscha@apache.org"
"7850","apache/flink","37331a01b257693f0b2c746219b9277535044ef4",2,"2019-06-27 09:57:00+02:00","[hotfix][table-common] Enrich the output type of
InputTypeValidators#getExpectedSignature.
",669680,7749,319638,"Dawid Wysakowicz","dwysakowicz@apache.org","Timo Walther","twalthr@apache.org"
"7851","apache/flink","fd511c345eac31f03b801ff19dbf1f8c86aae760",3,"2019-06-25 15:24:40+02:00","[FLINK-12985][core][streaming] Rename
StreamTransformation to
org.apache.flink.api.dag.Transformation  This name
better represent the fact that Transformation also
supports batch cases. Moreover it makes the
structure of the flink-core cleaner.
",669671,7750,319666,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"7852","apache/flink","d88882cc6db523a4fe2d70adad99bb66dc5d48c1",8,"2019-06-08 16:05:24+02:00","[FLINK-12986] [network] Add different
implementations to store/serve the data from the
BoundedBlockingSubpartition  This PR encapsulates
the following steps:   - introduce the BoundedData
interface to abstract the way that buffers are
stored / read as part of a bounded stream
subpartition   - Change BufferToByteBuffer from
reader/writer to encoder util that works across
byte buffers and byte channels     so we can use
it for both file-based implementations and memory-
buffer based implementations   - Add
FileChannelBoundedData which writes the buffers to
a file and reads them back from the file   - Add
FileChannelMemoryMappedBoundedData which writes
the buffer to a file and maps that file into
memory for reading   - Add common tests for all
implementations of BoundedData   - Rename
MemoryMappedBuffers to MemoryMappedBoundedData to
be consistent with other names.   - Instantiate
new bounded data store implementations from
ResultPartition   - Use FILE_MMAP implementation
on 64bit systems and FILE implementation on other
systems
",671991,7784,320659,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7853","apache/flink","0d502b6addffdc23a4826796c630bf7f9dbae718",1,"2019-06-18 10:41:11+02:00","[FLINK-12777][network] Rename existing classes to
make them in sync with the refactor  1. Rename
BarrierBuffer to CheckpointedInputGate
CheckpointedInputGate was an interface, while
BarrierBuffer was it's implementation. This rename
means that we are dropping the interface and
keeping only the concrete class.  2. Rename
BarrierBuffer and BarrierTracker tests to match
this rename and previous refactorings.
",672243,7787,320738,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7854","apache/flink","8c1968ac2880c3784c6c35ffb819932483208807",2,"2019-07-01 09:12:41+02:00","[FLINK-13028][table-api-java] Refactor local over
windows
",672534,7794,321002,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7855","apache/flink","b05d389f063b67edd253836fb71bb50f9f4ade06",3,"2019-06-24 10:47:34-05:00","[FLINK-12963] [state-processor] Add savepoint
writer for bootstrapping new savepoints
",676965,7857,323068,"Seth Wiesman","sjwiesman@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7856","apache/flink","9f4e69fe25c9563a4e429e3aabc077c6a0962872",2,"2019-07-03 16:26:33+08:00","[FLINK-12963] [state-processor] Introduce
OperatorStateSpec wrapper class  This class is a
simple container class to represent an operator
state that is either still defined by a
BootstrapTransformation, i.e. new state that has
not been written out yet, or an existing
OperatorState.  Introducing this class improves
readability of the code, instead of using Eithers
and Tuples that would not have clear semantics for
the user.
",677027,7859,323118,"Tzu-Li (Gordon) Tai","tzulitai@apache.org","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7857","apache/flink","83a204e6823a88ce8bb8d59217c7b24d01603862",1,"2019-06-21 13:24:55+02:00","[hotfix][operator] Deduplicate code by introducing
StreamInputProcessor interface
",676805,7859,323193,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7858","apache/flink","761ed7728fca566ba29e59aa9313a8d5553cfdb3",3,"2019-07-02 16:42:17-07:00","[FLINK-13066][hive] append hive-site.xml to path
of Hive conf dir  This PR fixes a bug that we
previously only pass Hive conf dir to HiveConf but
we really should pass path of hive-site.xml. Thus,
the change is to append hive-site.xml to the Hive
conf dir and pass into HiveConf if Hive conf dir
is not null.  This closes #8955.
",678615,7870,323617,"bowen.li","bowenli86@gmail.com","bowen.li","bowenli86@gmail.com"
"7859","apache/flink","0607fa50de42e38ec631e67ba3bbc9985b403aac",3,"2019-07-04 17:14:09+02:00","[hotfix][runtime] Make
TestingComponentMainThreadExecutor accept
ComponentMainThreadExecutor
",682708,7931,325604,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"7860","apache/flink","21468e0050dc5f97de5cfe39885e0d3fd648e399",1,"2019-07-04 18:07:22+02:00","[hotfix][runtime] Merge
TestingComponentMainThreadExecutorServiceAdapter
and ComponentMainThreadExecutorServiceAdapter
Merge
TestingComponentMainThreadExecutorServiceAdapter
with ComponentMainThreadExecutorServiceAdapter
because it only adds static methods. Move
ComponentMainThreadExecutorServiceAdapter to test
sources  This closes #8989.
",682715,7930,325584,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"7861","apache/flink","8f47b38b5273c09603b53af1c6579c42172fe634",36,"2019-07-09 15:21:19+08:00","[FLINK-12693][state] Store state per key-group in
CopyOnWriteStateTable  This closes #8611.
",684144,7944,326272,"PengFei Li","lpengfei2016@gmail.com","Stefan Richter","s.richter@data-artisans.com"
"7862","apache/flink","38e5e8161a9c763cf7df3b642830b5a97371bb00",10,"2019-03-24 23:19:18-07:00","[FLINK-7244][parquet] Add ParquetTableSource.
This closes #8064.
",686458,7969,327250,"Peter Huang","huangzhenqiu0825@gmail.com","Fabian Hueske","fhueske@apache.org"
"7863","apache/flink","8b9ff4f45ea12e0f4e258ce1e152dc2a7a2187cc",1,"2019-07-10 11:07:30+02:00","[FLINK-13123] [rest] align terminology of ""stop""
endpoint with cli
",686519,7969,327127,"Konstantin Knauf","knauf.konstantin@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7864","apache/flink","01031ad2daad4d02006c527b122856118dd21434",2,"2018-08-28 18:25:33+08:00","[FLINK-10245][hbase] Add an upsert table sink
factory for HBase  This commit adds full support
for HBase to be used with Table & SQL API.  It
includes: - HBase upsert table sink (for append-
only and updating queries) - HBase table factory -
HBase table descriptors & validators - Unit tests
This closes #9075
",687286,7976,327380,"Shimin Yang","yangshimin@youzan.com","Jark Wu","imjark@gmail.com"
"7865","apache/flink","d30854be2f8b6389c2c6deb66240ba63bd5ecf0e",16,"2019-07-09 22:25:02+02:00","[FLINK-13166] Add support for batch slot requests
to SlotPoolImpl  This commit adds a new type of
slot request which can be issued to the
SlotPoolImpl. The batch slot request is intended
for batch jobs which can be executed with a single
slot (having at least one slot for every requested
resource profile equivalence class). Usually, a
job which fulfills this criterion must not contain
a pipelined shuffle.  The new batch slot request
behaves in the following aspects differently than
the normal slot request:  * Batch slot request
don't time out if the SlotPool contains at least
one allocated slot which can fulfill the pending
slot request * Batch slot request don't react to
the failAllocation signal from the ResourceManager
* Batch slot request don't fail if the slot
request to the resource manager fails  In order to
time out batch slot request which cannot be
fulfilled with an allocated slot, the SlotPoolImpl
schedules a periodic task which checks for this
condition. If a slot cannot be fulfilled, it is
marked as unfulfillable and the current timestamp
is recorded. If the slot cannot be marked as
fulfillable until the batch slot timeout has been
exceeded, the slot request will be timed out.  The
batch slot request will be requested by calling
SlotPool#requestNewAllocatedBatchSlot.  Add
SlotPool#requestNewAllocatedBatchSlot  This closes
#9058.
",688394,7984,327621,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7866","apache/flink","6860518c23fd382a650a4a18787edaf578fa7380",3,"2019-07-10 08:36:47+02:00","[hotfix] Introduce TestingSlotPoolImpl to expose
trigger timeout methods  In order to not clutter
the production implementation with testing
methods, this commit introduces the
TestingSlotPoolImpl and moves the trigger timeout
methods and the convenience constructor to this
class.
",688410,7985,327645,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7867","apache/flink","6a72a6ad8f4f582dcea8305ee9d8715aa7a66286",2,"2019-07-10 15:23:55+02:00","[FLINK-13187] Introduce ScheduleMode#LAZY_FROM_SOU
RCES_WITH_BATCH_SLOT_REQUEST  The new ScheduleMode
#LAZY_FROM_SOURCES_WITH_BATCH_SLOT_REQUEST works
similar to the old ScheduleMode#LAZY_FROM_SOURCES
just with the difference that the slot requests
call the SlotPool#requestNewAllocatedBatchSlot
which requests batch slots. The idea of batch
slots is that the requests won't time out as long
as there is an allocated slot registered at the
SlotPool which can fulfill the slot request (being
equal or larger than the requested
ResourceProfile).  Hence, this ScheduleMode allows
for batch job execution with fewer slots than
requested. The user, however, has to make sure
that every pipelined region of the submitted job
requires only one slot to be executed!  The
different types of slot requests are encapsulated
in the newly introduced SlotProviderStrategy.
Depending on the ScheduleMode, the strategy will
either call SlotProvider#allocateSlot or
SlotProvider#allocateBatchSlot.  This closes
#9073.
",688675,7990,327749,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7868","apache/flink","7bec861bc0959e09b85e576769c86dedeeefd317",4,"2019-07-10 15:40:49+02:00","[hotfix] Remove unused parameters from
Execution#allocateAndAssignSlotForExecution  Due
to the introduction of the SlotProviderStrategy
which encapsulats the SlotProvider, the
allowQueuedScheduling property and potentially the
allocation timeout, some of the parameters of the
allocateAndAssignSlotForExecution were no longer
needed. This commit removes these parameters.
",688641,7990,327742,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7869","apache/flink","a587576ef513f1df5a3c19b0e01a9eb43ec6f80e",3,"2019-06-22 00:13:56+08:00","[FLINK-12765][jobmanager] Let some slot reqests
fail if the sharing slot is oversubscribed
",690580,8010,328515,"Gao Yun","yungao.gy@alibaba-inc.com","Stephan Ewen","sewen@apache.org"
"7870","apache/flink","2efb89a4640fb24716099a1042203ff61665b0d9",1,"2019-07-17 13:47:07+02:00","[FLINK-13307][tests] Fix SourceStreamTaskTest test
instability.
",690763,8010,328525,"Kostas Kloudas","kkloudas@gmail.com","GitHub","noreply@github.com"
"7871","apache/flink","a1b1758a7beada90e408aa953a76637caef63a14",2,"2019-07-17 19:49:35+08:00","[FLINK-13168][table] Clarify
isBatch/isStreaming/isBounded flag in flink
planner and blink planner
",690780,8010,328541,"godfrey he","godfreyhe@163.com","Dawid Wysakowicz","dwysakowicz@apache.org"
"7872","apache/flink","479fb070edc4a681d85e4c20a964083751aa3720",4,"2019-07-10 08:52:30+02:00","[FLINK-13078][table-common] Add a logical type
parser  This adds a parser for all logical types
defined in FLIP-37.  This closes #9061.
",692266,8021,328888,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7873","apache/flink","f2300e0042e96e5164339155235d8db0fbb0d0c9",2,"2019-07-10 19:38:16-04:00","[FLINK-13094][state-processor-api] Add
registered*TimeTimers methods to
KeyedStateReaderFunction#Context for querying the
registered timers for a given key  This closes
#9094.
",694531,8028,329887,"Seth Wiesman","sjwiesman@gmail.com","Tzu-Li (Gordon) Tai","tzulitai@apache.org"
"7874","apache/flink","c75af84d44dfb9b883115bf4fd65b6a5989464e4",2,"2019-07-17 15:23:21+02:00","[FLINK-13326] Support async rawState checkpointing
This commit adds the ability for users to obtain a
lease for the rawOperator/rawKeyed output streams,
during the synchronous part of a snapshot, thus
preventing these streaming to close.
",695471,8031,330031,"Igal Shilman","igal.shilman@data-artisans.com","Stefan Richter","stefanrichter83@gmail.com"
"7875","apache/flink","dac02696a9bdb3ecdfd084b784a43e74ca3d9098",19,"2019-07-13 09:02:48+08:00","[FLINK-12765][coordinator] Add the remaining
resources to the slot selection strategy
",695545,8045,330267,"Gao Yun","yungao.gy@alibaba-inc.com","Stephan Ewen","sewen@apache.org"
"7876","apache/flink","052599d9a5f6c96eb2ba546d5b66453c8d09ed2f",4,"2019-07-30 11:25:16+02:00","[hotfix][runtime] Extract SlotManager interface
Rename SlotManager -> SlotManagerImpl and let it
implement the SlotManager interface
",696163,8057,330492,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7877","apache/flink","09f96b339f4890d7a44ae92c915ea8c0f6f244cb",1,"2019-07-25 12:05:44+08:00","[hotfix] Fix static inner class name collision in
KafkaConsumerTestBase.
",696644,8058,330557,"Jiangjie (Becket) Qin","jiangjie.qj@alibaba-inc.com","Jiangjie (Becket) Qin","jiangjie.qj@alibaba-inc.com"
"7878","apache/flink","7b95f32d01730bcc75ded42e41d3668a1802a69b",1,"2019-08-01 14:27:28+02:00","[FLINK-13371][coordination] Prevent leaks of
blocking partitions
",697141,8064,330672,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7879","apache/flink","38411298a2fa71194cd7d81405ee8f6b069f377f",1,"2019-07-31 15:01:33+08:00","[FLINK-13421] Exclude releasing root slots from
slot allocation  Make MultiTaskSlot not available
for allocation when it‚Äôs releasing children to
avoid ConcurrentModificationException.  This
closes #9288.
",696452,8054,330345,"zhuzhu.zz","zhuzhu.zz@alibaba-inc.com","Till Rohrmann","trohrmann@apache.org"
"7880","apache/flink","a3fd687a515af66df30ce4ee265e0af3c5663820",3,"2019-07-26 22:37:53+08:00","[FLINK-13335][sql-parser] Bring the SQL CREATE
TABLE DDL closer to FLIP-37  This brings the SQL
DDL closer to FLIP-37. However, there are a couple
of known limitations.  Currently unsupported
features: - INTERVAL - ROW with comments - ANY -
NULL - NOT NULL/NULL for top-level types -
ignoring collation/charset - VARCHAR without
length (=VARCHAR(1)) - TIMESTAMP WITH TIME ZONE -
user-defined types - data types in non-DDL parts
(e.g. CAST(f AS STRING))  This closes #9243.
",697388,8064,330618,"yuzhao.cyz","yuzhao.cyz@alibaba-inc.com","Timo Walther","twalthr@apache.org"
"7881","apache/flink","61352fb69b24ea8c2de5e2c8840cabb3acc2202e",2,"2019-08-01 15:22:23-05:00","[FLINK-13541][state-processor-api] State Processor
Api sets the wrong key selector when writing
savepoints  This closes #9324
",697429,8064,330631,"Seth Wiesman","sjwiesman@gmail.com","Stephan Ewen","sewen@apache.org"
"7882","apache/flink","c1ffb7204a60a9b2aad9b73881a0c4d82e5f9324",1,"2019-08-02 19:01:18+02:00","[hotfix] Introduce TestingLogicalSlotBuilder
",697450,8065,330653,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7883","apache/flink","d544d302bdd640edb5432c2df9c424057a5548e9",3,"2019-08-06 15:04:51+02:00","[FLINK-13600][table] Rework
TableEnvironment.connect() class hierarchy  This
closes #9382.
",699438,8105,331216,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7884","apache/flink","21e2e6515e0c93d7cdbee80e00f39178eb2bcb71",2,"2019-08-16 10:07:41+02:00","[hotfix] Introduce TaskDeploymentDescriptorBuilder
in tests
",700312,8115,331570,"Andrey Zagrebin","azagrebin@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7885","apache/flink","9dfd51a76cf77a6aa188680740236d55b7f61990",1,"2019-08-08 11:17:29+02:00","[FLINK-13650][tests] Consolidate CommonTestUtils
and ClassLoaderUtils
",702151,8130,332509,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7886","apache/flink","2b9410ee1bd493cca86c479ec0f0a34ccbc842d4",4,"2019-08-23 01:03:12+08:00","[FLINK-13573][coordination] Merge
SubmittedJobGraph into JobGraph  This closes
#9514.
",701428,8116,331914,"tison","wander4096@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7887","apache/flink","aa8b6c827f5860ec3bd89198f00ce35aab0bb7ee",3,"2019-08-27 16:12:27+02:00","[hotfix] Rename SlotManagerTest into
SlotManagerImplTest
",701402,8125,332158,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7888","apache/flink","19d40ff6e2b3b4bd9f6595f80d74085177d72285",1,"2019-08-28 13:54:44+02:00","[FLINK-13805] Properly forward cause for slot
removal in SlotManager  Forwarding the slot
removal cause to the ResourceActions allows to
notify the JobMaster about the allocation failure
cause. This improves debuggability and
understanding of the system.  This closes #9550.
",701443,8127,332196,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7889","apache/flink","8805406a0ba6de6d5b190aefc7c7707a51a660da",2,"2019-08-28 10:12:47+02:00","[FLINK-13248][runtime] Implement per operator
priorities for mailbox actions and
yieldToDownstream concept  This commit introduces
separate mailboxes per operator each handling
enqueuing actions/letters and yielding with
different priorities. Yielding execution, yields
only for down stream actions, which in principle
allows for having yielding operators in the middle
of an operator chain (and not only as a head).
",701482,8130,332334,"Arvid Heise","arvid@data-artisans.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7890","apache/flink","dc742486083f1c30213098ac946e85a99b78fb4d",1,"2019-07-25 14:25:37+08:00","[FLINK-13051][runtime] Replace the non-selectable
stream task with the input-selectable one
",701632,8135,332477,"sunhaibotb","sunhaibotb@163.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7891","apache/flink","6094a52abea4caa3914c807dee40cf9eadbe63a0",1,"2019-08-06 20:35:15+08:00","[FLINK-13568][sql-parser] Fix DDL CREATE TABLE
statement doesn't allow STRING data type  This
closes #9354
",701651,8134,332445,"yuzhao.cyz","yuzhao.cyz@alibaba-inc.com","Jark Wu","imjark@gmail.com"
"7892","apache/flink","e0759c3776e7292e4a4937c6fb76d31ce7bf702d",2,"2019-09-04 16:01:26+08:00","[FLINK-13750][client][coordination] Separate HA
services between client-side and server-side  This
closes #9609.
",702001,8146,332763,"tison","wander4096@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7893","apache/flink","e6db3ebd24a9a6cf9b5cec66d11d78a9ca030966",1,"2019-09-11 13:38:40+02:00","[FLINK-14047] Add
ConfigurationUtils.hideSensitiveValues to filter
out sensitive values
",701625,8135,332463,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7894","apache/flink","ea3576e26a67b16617b79d9fd6748e6ab67f0d3c",1,"2019-09-04 10:25:43+02:00","[hotfix][tests] Add thread invariants test for
StreamTask  Tests that some StreamTask methods are
called only in the main task's thread. Currently,
the main task's thread is the thread that creates
the task.
",701641,8136,332485,"Aleksey Pak","aleksey@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7895","apache/flink","0d1cb1f52c75e511d6ca0d846b70b06786dbc2cd",1,"2019-09-02 19:36:42+02:00","[hotfix][tests] StreamTaskTimerTest refactoring
",701637,8136,332483,"Aleksey Pak","aleksey@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7896","apache/flink","3b1fafa133f92c06fff5b826fda68200bbd491aa",1,"2019-05-21 15:15:26+02:00","[FLINK-12481][runtime] Move checkpoint lock
outside of SystemProcessingTimeService
",701563,8136,332466,"Aleksey Pak","aleksey@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7897","apache/flink","88a918bcb22808947537b34cb6d9dd396f08b51d",1,"2019-09-17 18:00:55+08:00","[FLINK-13949][rest] Replace duplicated
JobVertexDetailsInfo.VertexTaskDetail with
SubtaskExecutionAttemptDetailsInfo  This closes
#9699.
",701537,8137,332449,"砚田","lining.jln@alibaba-inc.com","Till Rohrmann","trohrmann@apache.org"
"7898","apache/flink","8b85715cfb9d9927c7d2fb82593be0bcaf084502",1,"2019-09-23 14:26:21+08:00","[hotfix][coordination] Fix MiniCluster#closeAsync
to correctly close all components and services
",704275,8178,333659,"tison","wander4096@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7899","apache/flink","96047a25d29c53106170e2be376be198c5a6b5c2",2,"2019-09-09 14:29:01+02:00","[hotfix][runtime] Make slotSharingGroupId nullable
in TestingLogicalSlot
",704507,8178,333657,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"7900","apache/flink","a6188ff593d43c1e9684c1b06be4e655590819c6",1,"2019-09-17 19:27:35+08:00","[FLINK-14050][yarn] Refactor YarnClusterDescriptor
inheritance
",703707,8185,333147,"tison","wander4096@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7901","apache/flink","470558aeb0b30587ac308f2e93bbe42131e03e42",20,"2019-04-29 12:06:17+02:00","[FLINK-14252] Encapsulate Dispatcher services in
DispatcherServices  The DispatcherServices
container contains all required Dispatcher
services except for the JobGraphStore which needs
to passed in separately to make it work with the
MiniDispatcher.  This closes #9787.
",703714,8188,333215,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7902","apache/flink","1df5a0f4c63f321821c680dbab5b60c08ce37510",3,"2019-05-07 11:01:22+02:00","[FLINK-14259] Introduce JobManagerRunner interface
This commit extracts the JobManagerRunner
interface and renames the implementation class
into JobManagerRunnerImpl.  This closes #9788.
",703764,8190,333277,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7903","apache/flink","d4f80bf2f64937b7f233412c62fda6fd264fa239",1,"2019-05-07 16:30:20+02:00","[FLINK-14260] Replace
TestingJobManagerRunnerFactory with
TestingJobManagerRunnerFactoryNG  This commit
removes the old TestingJobManagerRunnerFactory and
renames the TestingJobManagerRunnerFactoryNG into
TestingJobManagerRunnerFactory.  This closes
#9789.
",703765,8190,333277,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7904","apache/flink","7628d16aff75fd9ddc325e23f5f43c824258c1e5",3,"2019-02-17 18:57:34+01:00","[FLINK-14261] Add PermanentlyFencedRpcEndpoint
This closes #9790.
",703767,8191,333298,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7905","apache/flink","fda7ca929bb11fa598240468e51698b102ca3af2",1,"2019-09-14 15:57:32+02:00","[FLINK-14277][tests] Upgrade InMemoryJobGraphStore
to TestingJobGraphStore  Renames
InMemoryJobGraphStore into TestingJobGraphStore
and adds settable testing functions for all
JobGraphStore methods.  This changes makes the
FaultyJobGraphStore obsolete and, hence, removes
it.  This closes #9806.
",703816,8190,333277,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7906","apache/flink","a7bf1ab1d5d47cb4dd69ac6a14d766b3857711eb",20,"2019-10-01 14:54:36+02:00","[hotfix] Remove inheritance relationship between
PartialDispatcherServices and DispatcherServices
",703865,8190,333277,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7907","apache/flink","148ca3b61726748d0698f3ed526e87e619899179",5,"2019-10-01 10:27:41+02:00","[FLINK-14044] [runtime] Removing EmitterThread and
reducing synchronization in AsyncWaitOperator
",703353,8188,333206,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7908","apache/flink","936a317e7e51b0a03f5f12e3d4c21fedaa6d328e",6,"2019-04-18 15:01:58+02:00","[FLINK-14280] Introduce DispatcherRunner  In order
to better separate concerns which are currently
contained in the Dispatcher, this commit
introduces the DispatcherRunner abstraction. The
DispatcherRunner is used by the
DispatcherResourceManagerComponent and
encapsulates how the Dispatcher is executed.  This
closes #9807.
",703438,8195,333364,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7909","apache/flink","870b56418cb795edba9d4e8e282fa91d675efd7a",2,"2019-09-29 18:06:00+02:00","[FLINK-14282] Simplify
DispatcherResourceManagerComponent hierarchy
Remove unnecessary subclasses of
AbstractDispatcherResourceManagerComponent and
rename this class into
DefaultDispatcherResourceManagerComponent.
Moreover, this commit removes the unnecessary
generics from the DispatcherRunnerFactory to
further simplify the code base.  This closes
#9809.
",703354,8191,333274,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7910","apache/flink","282dd840fe80bd71830d1c493cdb7e1d0ad5cc6e",1,"2019-09-29 18:41:34+02:00","[FLINK-14285] Remove generics from Dispatcher
factories  Simplify Dispatcher factories by
removing generics from them.  This closes #9811.
",703315,8189,333235,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7911","apache/flink","71e440d5f62fbd43df18f999b7818de48a279eb0",2,"2019-09-30 11:15:53+08:00","[FLINK-14289][runtime] Remove Optional fields from
RecordWriter relevant classes  Based on the code
style guides for Jave Optional, it should not be
used for class fields. So we remove the optional
usages from RecordWriter, BroadcastRecordWriter
and ChannelSelectorRecordWriter.
",701694,8186,332787,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"7912","apache/flink","4813a2396cc7a1a054b2c46c673ea96ced982523",1,"2019-06-07 21:05:44+02:00","[FLINK-14298] Replace LeaderContender#getAddress
with #getDescription  This commit changes the
LeaderContender to only require implementations to
report a description of the contender used for
logging purposes instead of the actual leader
address.  This closes #9821.
",701689,8186,332786,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7913","apache/flink","e2c4213a8f0664285658f25f2169487eb952909e",2,"2019-09-18 20:05:05+08:00","[FLINK-13025] Elasticsearch 7.x support
",702352,8211,333439,"yanghua","yanghua1127@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"7914","apache/flink","2c50380d43e1bd0ea9989851c9a5e2ccd8e48604",1,"2019-09-25 16:36:10+02:00","[FLINK-14045][runtime] Make SlotProviderStrategy
class public
",703613,8216,333743,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"7915","apache/flink","456a17685374aaa2f17479c013fde56fc528e7fb",1,"2019-10-06 14:30:57+08:00","[FLINK-14296][sql-parser] Improve handling of
parameters nullabillity in parser module  1. Add
@Nullable annotation to nullable fields 2. Use
Optional instead of nullable as return value 3.
Add requrieNonNull check in constructor for non-
null fields 4. List fields do not need to check
against null  This closes #9843
",703736,8219,333822,"Jiayi Liao","bupt_ljy@163.com","Jark Wu","imjark@gmail.com"
"7916","apache/flink","34e53d1c5da87a0ec99583eaf5f914372ee77e89",1,"2019-10-12 17:01:54+08:00","[hotfix][network] Remove optional class field from
LocalBufferPool
",704184,8227,334022,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"7917","apache/flink","3e455e5d9ac904943e11aa6695cb340a9c5cb850",2,"2019-09-26 17:36:27+02:00","[FLINK-14199] [runtime] Mailbox explicitly
requires a description to ease debugging
",704782,8232,334204,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7918","apache/flink","529e1ccc68f38cb627c2b0baabcd26c2f218a15e",2,"2019-10-15 20:11:35+02:00","[FLINK-14199] [runtime] Improving error-reporting
when a Mailbox mail failed to execute  Promoting
Mail to internal class and using it primarily in
Mailbox API. Moving priority association entirely
to MailboxExecutor. Removing priority views on
TaskMailbox - the MailboxExecutor will now put and
pull mails with its priority. Consolidating
Mailbox hierarchy: Only the Mailbox interface for
MailboxExecutor and the TaskMailbox interface for
MailProcessor remain.
",704759,8231,334108,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7919","apache/flink","070fae5453b37a0d1eddbc80f357a49a03791e73",2,"2019-10-22 16:13:39+02:00","[FLINK-14199] [runtime] Improving the performance
of named mails by adding overloaded submission
methods to MailboxExecutor.java that do not create
a new array for empty arguments.
",704772,8231,334151,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7920","apache/flink","8665c389ea2214aebdc5f9a8e9f7df1b34b53e1b",3,"2019-09-05 12:12:38+02:00","[hotfix][runtime] Refactoring: move timer service
lifecycle methods into a separate interface
",705001,8236,334343,"Aleksey Pak","aleksey@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7921","apache/flink","92eb7b15eaaf3d14ca6155c3cf438417cbe5aa95",14,"2019-09-05 15:53:57+02:00","[FLINK-14156][runtime] Refactoring: move
ProcessingTimeService access request at operator
level
",705010,8236,334343,"Aleksey Pak","aleksey@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7922","apache/flink","b0e5464beb604f5a6ed3fb9653b32e5c10de7704",1,"2019-10-15 16:50:40+08:00","[FLINK-14232][runtime] Support global failure
handling in DefaultScheduler  - Enable
ExecutionFailureHandler for global failure
handling - Introduce handleGlobalFailure interface
to SchedulerNG - Refactor
InternalTaskFailuresListener to also support
global failure listening - Notify the
InternalFailuresListener about global failure for
NG scheduler in ExecutionGraph#failGlobal  This
closes #9904.
",705157,8238,334377,"Zhu Zhu","reedpor@gmail.com","Gary Yao","gary@apache.org"
"7923","apache/flink","bccc4404ec9e73cc03e36631e6b3cf38a8c0e571",1,"2019-10-21 17:34:56+08:00","[FLINK-14321][sql-parser] Support to parse
watermark statement in SQL DDL  This closes #9952
",705187,8240,334430,"Jark Wu","imjark@gmail.com","Jark Wu","imjark@gmail.com"
"7924","apache/flink","5201a057d31cd7673626abc28adcdf3757e77663",12,"2019-10-01 15:02:24+02:00","[hotfix] Introduce JobManagerMetricGroupFactory
and use for DispatcherServices creation  The
JobManagerMetricGroupFactory allows to create a
fresh JobManagerMetricGroup whenever we create a
new Dispatcher instance.
",705206,8240,334440,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7925","apache/flink","7035fbdeb0fb112f51e88f9ac6d0c9d426cb36a9",1,"2019-10-21 18:43:14+02:00","[hotfix] Rework ZooKeeperLeaderElectionITCase to
not rely on DispatcherResourceManagerComponent
internals
",705150,8240,334440,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7926","apache/flink","9d447ada31c85ab899d01c05ca60f4887f0f1218",2,"2019-09-14 19:01:12+02:00","[FLINK-11843] Allow to pass JobGraphStore into
Dispatcher via DispatcherServices  This commit
introduces DispatcherFactoryServices which is an
extension of PartialDispatcherFactoryServices. The
extension allows to set a specific JobGraphStore
which is being forwarded via the
DispatcherServices to the Dispatcher.
",706487,8258,334827,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7927","apache/flink","358d46c78447f37758a665cde25a05d6c0db5648",27,"2019-09-14 22:43:54+02:00","[FLINK-11843] Restrict Dispatcher to only use
JobGraphWriter instead of JobGraphStore
",706481,8258,334810,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7928","apache/flink","1c2097e716b50f8f306648761ebccea79e0794f3",1,"2019-10-23 19:26:34+02:00","[FLINK-11843] Rename DispatcherService into
DispatcherGatewayService  This closes #9832.
",706251,8263,334812,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7929","apache/flink","ad70e062c1d4a867b7eec7a03239c5a6ce52c23e",1,"2019-10-22 12:07:20+08:00","[FLINK-14396][network] Implement rudimentary non-
blocking network output  Considering the mailbox
model and unaligned checkpoints requirements in
future, task network output should be non-
blocking. In other words, as long as output is
available, it should never block for a
subsequent/future single record write.  In the
first version, we only implement the non-blocking
output for the most regular case, and do not solve
the following cases which still keep the previous
behavior.  1. Big record which might span multiple
buffers 2. Flatmap-like operators which might emit
multiple records in every process 3. Broadcast
watermark which might request multiple buffers at
a time  The solution is to provide the
RecordWriter#isAvailable method and respective
LocalBufferPool#isAvailable for judging the output
beforehand. As long as there is at-least one
available buffer in LocalBufferPool, the
RecordWriter is available for network output in
most cases. This PR doesn‚Äôt include runtime
handling of this non-blocking and availability
behavior in StreamInputProcessor.  Note: It
requires the minimum number of buffers in output
LocalBufferPool adjusting to
(numberOfSubpartitions + 1) and also adjusting the
monitor of backpressure future.
",706378,8266,334840,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"7930","apache/flink","5ab6261df2efb3cb34403cd76e77ca3672c57066",2,"2019-09-18 21:04:09+08:00","[FLINK-13904][checkpointing] Make trigger thread
of CheckpointCoordinator single-threaded
",706593,8269,334896,"ifndef-SleePy","mmyy1110@gmail.com","Piotr Nowojski","piotr.nowojski@gmail.com"
"7931","apache/flink","41cda38e17c1884c72b9bb092e6447ff40f2b5bd",3,"2019-09-25 21:00:52+08:00","[FLINK-13904][checkpointing] Avoid competition
between savepoint and periodic checkpoint
triggering
",706724,8269,334894,"ifndef-SleePy","mmyy1110@gmail.com","Piotr Nowojski","piotr.nowojski@gmail.com"
"7932","apache/flink","b7cd6a984750d7dd98e6408f3703b1978b14355a",3,"2019-10-29 09:03:44+01:00","[FLINK-14493][core] Introduce data types to
ConfigOptions.  NOTE: Starting from this commit
getters in Configuration throw an exception when
parsing of a value failed, instead of returning
the default value.
",707708,8284,335454,"Dawid Wysakowicz","dwysakowicz@apache.org","GitHub","noreply@github.com"
"7933","apache/flink","0fe3fe1fdcc0de2c6f57fb22e906d0d14d9b7823",2,"2019-10-16 17:54:00+02:00","[FLINK-14490][table-api] Introduce
UnresolvedIdentifier
",707870,8287,335563,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"7934","apache/flink","6cc09ac6ed822e2b3d753b27c621f5122d353673",1,"2019-10-25 19:13:55+08:00","[FLINK-14526][hive] Support Hive version 1.1.0 and
1.1.1  To support Hive 1.1.0 and 1.1.1.  This
closes #9995.
",708793,8295,336157,"Rui Li","lirui@apache.org","bowen.li","bowenli86@gmail.com"
"7935","apache/flink","31e89c7e12b6ba3cae2daa09627b1abb083fc470",2,"2019-10-25 14:36:49-07:00","[FLINK-14218][table] support precise function
reference in FunctionCatalog  Enable referencing
functions with fully qualified name in
FunctionCatalog.  This closes #9962.
",708924,8295,336184,"bowen.li","bowenli86@gmail.com","bowen.li","bowenli86@gmail.com"
"7936","apache/flink","2352586a4786d9f67b48f068088abb7749a18a5f",1,"2019-10-25 14:07:07+02:00","[FLINK-14532][coordination] Rename
PartitionTracker
",709019,8296,336194,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"7937","apache/flink","5faa81a7fd427fa8c049177b65c4b43153da96e7",1,"2019-10-17 10:56:28+08:00","[hotfix][tests] Introduce TestMasterHook
",709135,8301,336328,"Zhu Zhu","reedpor@gmail.com","Gary Yao","gary@apache.org"
"7938","apache/flink","f533694eca8d648885ab72d1143bb992f8d0cf37",2,"2019-10-29 16:23:45+01:00","[FLINK-14561] Don't write FLINK_PLUGINS_DIR env
variable to Configuration  This commit reads the
FLINK_PLUGINS_DIR env variable directly instead of
first writing it first to the Flink Configuration
and then reading it from there. This has the
advantage that the plugins env variable which is
intended for the local process only is not being
leaked to other processes. The latter can happen
if we start a new Flink process based on the read
Flink Configuration (e.g. Yarn, Mesos
TaskExecutor).  This closes #10037.
",709691,8305,336455,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7939","apache/flink","7422dd0f9f22db24e1a3fc8abc02eca09a354213",1,"2019-10-31 11:06:15+01:00","[hotfix] Fix checkstyle violations in
FlinkDistributionOverlay
",709688,8305,336455,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7940","apache/flink","c0f3c8044a319c3630c390f8b1603a7edf076181",2,"2019-10-26 14:08:08+02:00","[FLINK-14074][mesos] Forward configuration to
Mesos TaskExecutor  This commit forwards the Flink
configuration to a Mesos TaskExecutor by creating
the ContainerSpecification with it. This will
forward all options which are dynamically
configured until the ResourceManager has been
started to the Mesos TaskExecutor.  This closes
#10002.
",709699,8305,336459,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7941","apache/flink","16d67e835d634e5cbbf9f37e76e4ab3985ba4b8f",1,"2019-10-22 20:22:36+02:00","[FLINK-14501] Add the ClusterClientFactory and
make it discoverable
",709917,8310,336602,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7942","apache/flink","d1aa63fe520d3608757f098ef65f73e939029de3",3,"2019-10-22 20:38:28+02:00","[FLINK-14501] Add Standalone and Yarn
ClusterClientFactories
",710145,8314,336697,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7943","apache/flink","e4448748f33474d153da7579f249b9ed452bfae2",2,"2019-10-22 22:37:11+02:00","[FLINK-14501] Wired ClusterClientFactories to
production code
",710180,8316,336713,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7944","apache/flink","9e13af6b4acb1e3a5505bed75053a2be05299a88",1,"2019-10-31 16:52:41+01:00","[FLINK-14464] Simplify file listing implementation
This closes #9950.
",711255,8335,337257,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7945","apache/flink","7ffe265f65becbca94cc0bb585297ee000ba735c",2,"2019-11-04 15:31:02+08:00","[FLINK-14498][runtime]Introduce
NetworkBufferPool#isAvailable() for interacting
with LocalBufferPool. (#9993)  *
[FLINK-14498][network] Introduce
NetworkBufferPool#isAvailable() for non-blocking
output    In order to best-effort implement non-
blocking output, we need to further improve the
interaction between LocalBufferPool and
NetworkBufferPool in non-blocking way as a
supplementation of FLINK-14396.    In detail, we
provide the NetworkBufferPool#isAvailable to
indicate the global pool state, then we could
combine its state via LocalBufferPool#isAvailable
method to avoid blocking in global request while
task processing.    Meanwhile we would refactor
the process when LocalBufferPool requests global
buffer. If there are no available buffers in
NetworkBufferPool, the LocalBufferPool should
monitor the global's available future instead of
waiting 2 seconds currently in every loop retry.
So we can solve the wait delay and cleanup the
codes in a unified way.
",711539,8337,337366,"caoyingjie","kevin.cyj@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"7946","apache/flink","76225edc3667f69cc4d9c63505ce227d0755449d",6,"2019-11-04 11:08:05+01:00","[FLINK-14462][coordination] Remove
JobGraph#allowQueuedScheduling flag because it is
always true  Rewrite
testRestartWithSlotSharingAndNotEnoughResources
",711736,8343,337534,"tison","wander4096@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7947","apache/flink","9b43f13a50848382fbd634081b82509f464e62ca",1,"2019-11-06 12:54:30+08:00","[FLINK-14603][runtime] Notify the potential buffer
consumer if the size of LocalBufferPool has been
expanded.  Currently, when the size of
LocalBufferPool is expanded by
LocalBufferPool#setNumBuffers and there are
segments available in the global
NetworkBufferPool, we may fail to notify the
potential buffer consumer which is waiting for the
LocalBufferPool to be available. This commit fixes
the problem by completing the previous uncompleted
available future when the size of LocalBufferPool
is expanded.
",711998,8351,337733,"kevin.cyj","kevin.cyj@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"7948","apache/flink","14fde468f9e8ce709b6e6c05c7d0f7910e515b01",2,"2019-10-27 20:12:43+01:00","[hotfix][runtime] Added TaskMailbox#drain and
using it to implement MailboxProcessor. Also
changed return types of TaskMailbox#close to Mail
for unification.
",712628,8361,337998,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7949","apache/flink","05c691543aaa12b1b034ee637ff384b606b98d32",5,"2019-10-27 21:04:46+01:00","[FLINK-14304][runtime] Adding batch capabilities
to TaskMailbox, moved mailbox thread ownership
into mailbox to sharpen the threading model, and
simplified hierarchy.  A batch is a local copy of
mails that avoid task starvation and also reduces
the amount of synchronization (as batch is thread-
local). While the performance improvement is
modest (5-10%), it allows a more predictable
interleaving of mails and input.  Also clarified
threading model in javadoc.
",712784,8361,338080,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7950","apache/flink","525f3c9c45f8534f1782986781140473909116a8",40,"2019-08-20 16:12:01+02:00","[FLINK-12697][state backends] Support on-disk
state storage for spill-able heap backend
",715888,8381,339757,"Yu Li","liyu@apache.org","Stephan Ewen","sewen@apache.org"
"7951","apache/flink","362d7670593adc2e4b20650c8854398727d8102b",7,"2019-10-16 15:37:53+02:00","[FLINK-12122] Calculate TaskExecutorUtilization
when listing available slots  When listing
available slots stored in the SlotPool and the
SlotSharingManager, the system will now also
calculate the utilization of the owning
TaskExecutor wrt the job.
",716321,8389,339958,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7952","apache/flink","2ab8b61f2f22f1a1ce7f92cd6b8dd32d2c0c227d",9,"2019-10-16 15:39:22+02:00","[FLINK-12122] Add EvenlySpreadOutLocationPreferenc
eSlotSelectionStrategy  The EvenlySpreadOutLocatio
nPreferenceSlotSelectionStrategy is a special
implementation of the
LocationPreferenceSlotSelectionStrategy which
tries to evenly spread out the workload across all
TaskExecutors by choosing the slot with the least
utilization if there is a tie wrt the locality.
",716464,8392,340017,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"7953","apache/flink","96df4fae121fbf75d90a884afa2c3541d774ec97",2,"2019-11-06 13:29:12+08:00","[FLINK-14623][table-api] Add computed column
information into TableSchema  This closes #10096
",716646,8393,340138,"yuzhao.cyz","yuzhao.cyz@gmail.com","Jark Wu","jark@apache.org"
"7954","apache/flink","d938c19480c220344827271ff8da729cd91735b3",11,"2019-11-08 10:23:59+08:00","[FLINK-14593][client] Port ClusterClient to
asynchronous interface version  This closes #10069
.
",716689,8393,340136,"tison","wander4096@gmail.com","GitHub","noreply@github.com"
"7955","apache/flink","8bd4b5cda4c4f9e1b00f9ff5fea4ae319d120ff4",2,"2019-11-06 20:42:05+08:00","[FLINK-14262][table] FunctionIdentifier shouldn't
normalize function name and use un-escaped
identifier as toString  The display name of
functions shouldn't be normalized and escaped,
otherwise, a lot of planner tests will fail.
However, FunctionIdentifier enforce to normalize
names when construction. This makes it impossible
to get the original name. The normalization can
happen out of FunctionIdentifier.
",716734,8394,340158,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"7956","apache/flink","c1e9aefc2449a4ea0ff3fa590cf1eb6c1cb484a2",5,"2019-09-09 19:02:28+08:00","[FLINK-14465] Let StandaloneJobClusterEntryPoint
use the user code class loader  [FLINK-14465] The
PackageProgram's constructor does not throw
excpetion any more when jarFile is null.
Introducing this change is because there may be no
jarFile in perjob mode. All jars the user code
depends on are in the classpaths.  [FLINK-14465]
ClassPathJobGraphRetriever creates PackagesProgram
with user class paths.  [FLINK-14465]
StandaloneJobClusterEntryPoint uses
""FLINK_HOME/usrlib"" as the job's class path. The
environment variable FLINK_HOME is set at
Dockerfile. Link the FLINK_JOB_ARTIFACTS_DIR to
the FLINK_HOME/job, which makes the
FlinkUserClassloader load the user class in the
standalone perjob mode.  This closes #10076.
",717499,8408,340553,"GuoWei Ma","guowei.mgw@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7957","apache/flink","2c81c3f58cb27b4a4358a57b8a3c15329bd34008",2,"2019-11-11 15:29:00+01:00","[FLINK-14405][runtime] Update ResourceSpec to
align with FLIP-49 resource types
",717676,8408,340607,"Xintong Song","tonysong820@gmail.com","Andrey Zagrebin","azagrebin@apache.org"
"7958","apache/flink","b6c2943d39d3a5101f02de128b0328d5a3b97b31",2,"2019-11-11 15:29:55+01:00","[FLINK-14405][runtime] Update ResourceProfile to
align with FLIP-49 resource types
",717728,8408,340627,"Xintong Song","tonysong820@gmail.com","Andrey Zagrebin","azagrebin@apache.org"
"7959","apache/flink","e2b654893d63d1fd55e6a4475a45b984e01b4165",3,"2019-10-08 20:57:34+08:00","[FLINK-14344][checkpointing] PendingCheckpoint
supports acknowledging master state  MasterState
acknowledgements are now independent of task
states acknowledgments. This is done as a
preparation for asynchronous MasterHooks firing,
where we will first asynchronously fire
MasterHooks, wait for their acknowledgements and
only then start the checkpoint.
",717786,8408,340579,"ifndef-SleePy","mmyy1110@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7960","apache/flink","8466134f6c730aa1c0743aadb70fb4f541ea239f",2,"2019-11-13 10:24:53+08:00","[FLINK-14723][table-planner-blink] Use
ObjectIdentifier in DataStreamQueryOperations
This closes #10160
",717451,8409,340489,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"7961","apache/flink","f6ac09fb42a1d8cda99500b23f7247f19a272516",2,"2019-11-13 14:33:54+01:00","[hotfix] Change the signature of the
ConfigUtils.encodeCollectionToConfig()
",717737,8410,340513,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7962","apache/flink","a9b126640c41b767c26b5a1537a45c3102574a3c",1,"2019-11-15 00:11:50+08:00","[FLINK-14472][runtime] Implement back-pressure
monitor with non-blocking outputs  The previous
back pressure monitor relies on detecting task
threads that are stuck in
LocalBufferPool#requestBufferBuilderBlocking.
After the implementation of non-blocking network
output in FLINK-14396, the back pressure monitor
should be adjusted accordingly.    In detail, we
reimplement the back pressure monitor based on the
availability of output buffers. If there is at-
least one available buffer in output's
LocalBufferPool, then the task is not back
pressured and vice versa. Furthermore this way can
also solve the previous invalid monitor case if
the buffer is not requested by task thread.
This closes #10083
",717876,8416,340569,"caoyingjie","kevin.cyj@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"7963","apache/flink","10d372e1293d3c8bcd109e5fc570bfb368959f2c",1,"2019-11-14 17:08:13+08:00","[FLINK-14687][sql] Add database related ddl
support to SQL Parser  this closes #10201.
",718299,8426,340791,"zjuwangg","zjuwangg@foxmail.com","bowen.li","bowenli86@gmail.com"
"7964","apache/flink","8c217d729f70b89eb7487d5735cc2590e28e0412",1,"2019-11-11 22:42:51+08:00","[FLINK-14382][e2e] Add another dummy fs for e2e
test. It is same as dummy fs with different
schema.
",718714,8432,341001,"danrtsey.wy","danrtsey.wy@alibaba-inc.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7965","apache/flink","0a9db1e805339b60c28c0c570893835dea32c44a",4,"2019-09-13 17:42:37+08:00","[FLINK-14466][runtime] Let
YarnJobClusterEntrypoint use user code class
loader  FileJobGraphRetriever adds the user class
path to JobGraph if the user classpath is not
empty.  The system class path does not include the
user jars in yarn perjob mode when user set the
yarn.per-job-cluster.include-user-jar to
""DISABLED"". The user jars are loaded by
FlinkUserCodeClassLoaders.  Check if there is a
ship directory, whose name is the same as
DEFAULT_FLINK_USR_LIB_DIR. Throw a
IllegalArgumentException if there is one when
userJarInclusion == DISABLED.  This closes #10152.
",721208,8483,342441,"GuoWei Ma","guowei.mgw@gmail.com","Gary Yao","gary@apache.org"
"7966","apache/flink","2f0177ead494b2343e239458bac557f859a91278",2,"2019-11-16 22:52:08-08:00","[FLINK-14711][table] add alter and show function
ddl  this closes #10231.
",721329,8486,342499,"hpeter","hpeter@uber.com","bowen.li","bowenli86@gmail.com"
"7967","apache/flink","f806ac74013e0b8689ec96b97b42367873ebae0d",2,"2019-11-15 21:11:20+08:00","[FLINK-14716][table-planner-blink] Refactor
FlinkRelOptTable and FlinkTable and cooperate
computed column with push down rules  * Remove
FlinkTable, add a new RelOptTable abstract
implementation named FlinkPreparingTableBase and
make all the Flink specific tables extend it. *
Remove FlinkRelOptTable and use the sub-class of
FlinkPreparingTableBase * Remove TableSinkTable
and TableSourceSinkTable because they are all
useless * Merge InlineTable into DataStreamTable
because which is the only implementation *
Postpone the Flink tables translation from
DatabaseCalciteSchema to FlinkCalciteCatalogReader
which happens during sql-to-rel conversion * In
DatabaseCalciteSchema, introduce a new class named
CatalogSchemaTable to bridge the schema table and
catalog table * Add a new table named
CatalogSourceTable used to translate
CatalogSchemaTable to TableSourceTable during last
phrase of sql-to-rel conversion * Refactor
MetadataTestUtil to use mock
FlinkPreparingBaseTable * Add test case for
computed column with push down rules.  This closes
#10224
",720273,8486,342332,"yuzhao.cyz","yuzhao.cyz@gmail.com","Jark Wu","jark@apache.org"
"7968","apache/flink","37be8e814d3b8b0b8ef0d98cb5f12425612ace00",1,"2019-11-16 01:28:13+08:00","[FLINK-14594][core] Change ResourceSpec to use
CPUResource for cpu cores
",720281,8489,342377,"Zhu Zhu","reedpor@gmail.com","Chesnay Schepler","chesnay@apache.org"
"7969","apache/flink","828ba0f02ebca9f9d4a13ef148de355eb65a2473",2,"2019-11-16 01:30:29+08:00","[FLINK-14594][runtime] Change ResourceProfile to
use CPUResource for cpu cores
",720285,8489,342380,"Zhu Zhu","reedpor@gmail.com","Chesnay Schepler","chesnay@apache.org"
"7970","apache/flink","53060f8ad908c0ba5c4693254365b9d8ccd97223",2,"2019-11-14 00:41:13+08:00","[FLINK-14433][DataStream] Move generated Jaas conf
file from /tmp directory to Job specific directory
",720368,8490,342414,"klion26","qcx978132955@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"7971","apache/flink","beba9dc0a48ca2256d5b871ef96885811273bf0e",1,"2019-11-19 16:30:25+01:00","[FLINK-14859][runtime] Avoid leaking unassigned
slots when deployment is outdated  This closes
#10255.
",720509,8492,342459,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"7972","apache/flink","679398c60370a91e07e3eeed340102fa28962acf",2,"2019-11-18 01:28:54-08:00","[FLINK-14841][table] add create and drop function
ddl in SQL parser  this closes #10240.
",720647,8494,342501,"hpeter","hpeter@uber.com","bowen.li","bowenli86@gmail.com"
"7973","apache/flink","740de1892beb2f597a2f21f85bcd281359a740b9",8,"2019-11-18 17:10:15+01:00","[FLINK-14851] Add the Yarn/Standalone Executors
and make ContextEnvironments use them
",721212,8507,342812,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"7974","apache/flink","9686c0b6995a9ee96fc04f3fc319c6e087e44106",1,"2019-11-19 13:59:52+01:00","[hotfix][runtime] Smaller cleanup of Mailbox and
ensuring state changing operation may only occur
through the mailbox thread, such that state checks
do not any kind of synchronizations.
",721146,8507,342805,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7975","apache/flink","c7ae2b8559c0fe4cf17613249db0c2857bb91d94",2,"2019-11-22 21:39:16+08:00","[FLINK-14722][hadoop] Optimize
mapred.HadoopInputSplit to serialize conf only
when necessary  This closes #10170
",722329,8519,343129,"Jingsong Lee","lzljs3620320@aliyun.com","Kurt Young","kurt@apache.org"
"7976","apache/flink","a6d6778b11c0ad12a427344c140360b5472ef661",2,"2019-11-21 10:00:30+08:00","[FLINK-14873][client] Make
PackagedProgram#savepointSettings final
",722244,8520,343171,"tison","wander4096@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"7977","apache/flink","38750f0d1acb129a6b2a83b596494aa99de9e9d3",1,"2019-11-21 10:11:27+08:00","[hotfix] Extract loadJarFile from
PackageProgram#<init>
",722250,8520,343172,"tison","wander4096@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"7978","apache/flink","ffde75083c74613fa338561fd9c9209f0e4d6d23",2,"2019-11-14 15:12:56+01:00","[hotfix][table] Move UnresolvedIdentifier to
table-common and update UDT
",722225,8520,343178,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7979","apache/flink","81b5d17d2a8f3d33bbef4149a57c12bc78859f1f",5,"2019-11-25 09:18:43+01:00","[FLINK-14903][table] Relax structured types
constraints  In order to allow type extraction of
structured types that are not registered in a
catalog, we need to relax the structured type
concept to ""inline or anonymous structured types""
that are not identified by an object identifier in
a catalog but the fully qualified implementation
class.  This closes #10307.
",722280,8520,343203,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7980","apache/flink","86038cd7b38c7c40fcd480af20c57a1281e2aa30",1,"2019-11-25 12:00:58+01:00","[FLINK-12996][table-common] Add required type
strategies for FLIP-65
",723264,8533,343624,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7981","apache/flink","1266c88dc28393d1497c1ba37def8c3acdd6ddba",3,"2019-11-29 09:45:16+08:00","[FLINK-14762][client] ClusterClient#submitJob
returns CompletableFuture of JobID
",725216,8554,344124,"tison","wander4096@gmail.com","tison","wander4096@gmail.com"
"7982","apache/flink","0328fb62c05396dba51e44a8e0bcf5641f13e8f8",3,"2019-11-29 09:52:39+08:00","[FLINK-14762][client] Implement
JobClient#stopWithSavepoint
",725253,8556,344178,"tison","wander4096@gmail.com","tison","wander4096@gmail.com"
"7983","apache/flink","cf4de13474804e84535cba2dd93b1fa980d71652",3,"2019-11-29 09:55:23+08:00","[FLINK-14762][client] Implement
JobClient#triggerSavepoint
",725258,8556,344184,"tison","wander4096@gmail.com","tison","wander4096@gmail.com"
"7984","apache/flink","8c6cc4505a4c27daadb00cd94df8a7e955eb8d52",2,"2019-11-20 16:47:53+01:00","[FLINK-12905][table-planner-blink] Support
CatalogView in blink planner  This closes #8859
",725542,8559,344298,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"7985","apache/flink","d1926e889b153c66715515020745e1570c5ae1f0",4,"2019-11-18 18:57:10+08:00","[FLINK-14467][mesos] Implement user code
classloading in per-job cluster  The
MesosJobClusterEntrypoint adds 'usrlib' directory
to the container specification if the directory
exists. Then jars under the directory are loaded
by the FlinkUserCodeClassloader.  This closes
#10256.
",726909,8581,344864,"GuoWei Ma","guowei.mgw@gmail.com","Gary Yao","gary@apache.org"
"7986","apache/flink","a43ae47a0c2998d35ec1f9970cd091bd90952e04",17,"2019-11-27 18:44:21+01:00","[FLINK-14967][table] Add a utility for creating
data types via reflection  This implements the
data type extractor mentioned in FLIP-65. It is
similar to Flink's core type information extractor
but also adds a lot of SQL specific features and
improves the overall user experience. In
particular, it allows to annotate types, fields,
and classes for parameterizing the extraction
process. It is unified across Java and Scala.
This closes #10342.
",728382,8593,345675,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7987","apache/flink","c41e0879160e4e3088abe6496d3827d479d802df",4,"2019-11-27 13:39:15+01:00","[FLINK-14935][task,runtime] Use
RunnableWithException in the Mailbox  This allows
mailbox action to throw an exception.
",728871,8620,346268,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7988","apache/flink","de44e09e39352ce7e0d773049a65c8acfad544b6",2,"2019-11-22 15:32:03-08:00","[FLINK-14943][Connector/Kafka] Expose callback and
related fields to subclasses for override
",728871,8620,346273,"Steven Wu","stevenwu@netflix.com","Kostas Kloudas","kkloudas@gmail.com"
"7989","apache/flink","773b680950bc3ff744d453c7ff5de01a4115c2b4",2,"2019-11-27 15:14:57+01:00","[FLINK-14978][table-api] Introduce constraint
class hierarchy required for primary keys  This
closes #10340
",729128,8624,346415,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"7990","apache/flink","2142dc777119eac821f3de86e8bc577ae797c017",2,"2019-12-03 12:05:57+08:00","[FLINK-15023][runtime] Remove on-heap managed
memory  Remove on-heap managed memory from
configuration and internal resource describing
data structures.
",728843,8629,346119,"Xintong Song","tonysong820@gmail.com","Andrey Zagrebin","azagrebin@apache.org"
"7991","apache/flink","24b32d1dab888f30453f4593be03b5aaee9b1f7e",4,"2019-12-04 18:10:35+08:00","[FLINK-14019][python] Add PythonDependencyInfo for
Python environment and dependency management.
",729089,8631,346194,"Wei Zhong","weizhong0618@gmail.com","hequn8128","chenghequn@gmail.com"
"7992","apache/flink","76c63fdc728ba86278f5d5b868f2d6c8643333fa",3,"2019-12-04 18:10:36+08:00","[FLINK-14019][python] Refactor python runners and
operators to add PythonEnvironmentManager and
ProcessEnvironmentManager for Python environment
and dependency management.
",729629,8635,346328,"Wei Zhong","weizhong0618@gmail.com","hequn8128","chenghequn@gmail.com"
"7993","apache/flink","b4aa6e53f1ad456b2f10b7948a558d1b555e282f",1,"2019-12-04 20:08:24+01:00","[FLINK-12484][runtime/task] synchronize all
mailbox actions
",732045,8677,347420,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"7994","apache/flink","28ad8519771479371f6ea24fc6d7daae8c4347df",1,"2019-12-04 20:24:37+08:00","[FLINK-14566][runtime] Adjust managed memory
fraction calculation regarding managed memory
weights  This only applies to vertices with
UNKNOWN resources.  This closes #10427.
",732159,8678,347470,"Zhu Zhu","reedpor@gmail.com","Till Rohrmann","trohrmann@apache.org"
"7995","apache/flink","0d6b43959bb6a576c95549e845f7db5e51229740",1,"2019-12-06 14:57:56+08:00","[FLINK-14552][table-planner-blink] Enable
partition level statistics in blink planner  This
closes #10315
",732755,8684,347637,"Jingsong Lee","lzljs3620320@aliyun.com","Kurt Young","kurt@apache.org"
"7996","apache/flink","06bfd9b2e37a3cb58573f485968217f6802869ff",6,"2019-11-29 17:00:15+01:00","[FLINK-14983][table-common] Add interfaces for
input type inference  This adds a similar class as
Calcite's SqlOperandTypeInference to Flink's type
inference. For FLIP-65, we will need to implement
those interfaces as the planner needs to infer the
DataTypes out of logical types that come from the
logical query. This is also beneficial to support
the NULL literal in the future.  This closes
#10368.
",733914,8702,348278,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"7997","apache/flink","06fb0ec1f65056fd0ef5b67013ca9ae288486961",6,"2019-12-05 19:44:22+01:00","[FLINK-14484][state-backend] Some refactorings for
the RocksDB memory controlling code  This closes
#10449
",734389,8707,348709,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"7998","apache/flink","caff2ed21d548996c89843a23ee216689616c961",4,"2019-12-06 12:20:11+08:00","[FLINK-13195][sql client] Add create/drop table
support in sql client  * Keep state of catalogs
when setting/resetting properties in SQL-CLI * In
TableEnvironment implementation class, add method
to get the CatalogManager; * Reuse the
CatalogManager instance of previous table env when
setting or resetting properties in SQL-CLI.  This
closes #10454
",736528,8726,349227,"yuzhao.cyz","yuzhao.cyz@gmail.com","Kurt Young","kurt@apache.org"
"7999","apache/flink","66d4d7da2d8b717f420509d9785fad0880562f10",2,"2019-11-20 11:22:00+08:00","[FLINK-14845][runtime] Introduce data compression
to reduce disk and network IO of shuffle.
",737238,8730,349426,"kevin.cyj","kevin.cyj@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"8000","apache/flink","c1d0e99c9ad3c68875b108c5c63da16f10b156bb",2,"2019-12-07 22:35:35+01:00","[FLINK-8949] Add dedicated watermarks metric
retrieval endpoint (#10238)  Without this,
watermarks for jobs with a parallelism of >= 160
cannot be  displayed correctly and will result in
a ""/bad-request"" error message. The  reason is
that the watermark for each subtask will be
retrieved in a giant  metrics request like the
following (abbreviated):    ```  http://localhost:
8081/jobs/32f2205231d280ad105b011198dd9e5f/vertice
s/8b69eb2c39b9caf941896fdafa7ca05f/metrics?get=0.c
urrentInputWatermark,1.currentInputWatermark,2.cur
rentInputWatermark,3.currentInputWatermark,...,160
.currentInputWatermark  ```    We debated raising
the maximum header length or lifting the header
length  restriction. Instead, we opted for a
separate metrics endpoint which returns the
watermarks for the entire job vertex:    ```
/jobs/:jobid/vertices/:vertexid/watermarks  ```
",738119,8729,349398,"Maximilian Michels","mxm@apache.org","GitHub","noreply@github.com"
"8001","apache/flink","3aa143f38127eaf5a6baea19aad2961016631ea2",1,"2019-12-05 19:45:53+08:00","[hotfix][yarn] Add ActiveResourceManager
containing some common codes  The common codes in
ActiveResourceManager could be reused by other
ResourceManager implementation, such as
KubernetesResourceManager.
",738266,8730,349414,"wangyang0918","danrtsey.wy@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"8002","apache/flink","fc37b6d9f2fab859bc59a3c7649a31e924a90cc7",1,"2019-10-29 20:18:02+08:00","[FLINK-9495][kubernetes] Implement ResourceManager
for Kubernetes  The KubernetesResourceManager will
dynamically allocate TaskManager Pods from
Kubernetes on demand.
",738773,8734,349522,"danrtsey.wy","danrtsey.wy@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"8003","apache/flink","0d7c15703d0dd304d49203c163e9a1397e4e0d9e",2,"2019-12-07 12:14:54+08:00","[FLINK-15096][python] Pass python configuration to
the python operators instead of global job
parameters.  Previously, configurations are passed
to python operators through GlobalJobParameters.
However, GlobalJobParameters is a user only
configuration that should not be used to ship
system specific settings. In this commit, passes
python configurations to the python operators
directly when construct python operators.  This
closes #10477.
",738928,8737,349622,"Wei Zhong","weizhong0618@gmail.com","hequn8128","chenghequn@gmail.com"
"8004","apache/flink","912d25689bfebb16db4bfff9516de6e7fa7f54a4",2,"2019-11-18 20:04:02+08:00","[FLINK-10936][kubernetes] Implement Kubernetes
command line tools to support session cluster  The
FlinkKubernetesCustomCli will be added to
customCommandLines of CliFrotend.  This closes
#10245 .
",739914,8750,349932,"danrtsey.wy","danrtsey.wy@alibaba-inc.com","tison","wander4096@gmail.com"
"8005","apache/flink","6825f803de17f87007e0531d82baf14bdbab2fd4",1,"2019-12-06 19:30:41+01:00","[FLINK-15116] Return a ClusterClientProvider from
ClusterDescriptor methods  This allows the
consumer of the methods to create a new
ClusterClient with a separate lifecycle whenever
necessary.
",739957,8751,349953,"Aljoscha Krettek","aljoscha@apache.org","Aljoscha Krettek","aljoscha@apache.org"
"8006","apache/flink","3005f0466cc44df4d5d080e314745f9b5d96f44e",5,"2019-12-06 14:36:19+01:00","[FLINK-14264][rest] Expose state backend name
",740015,8751,349929,"klion26","qcx978132955@gmail.com","Chesnay Schepler","chesnay@apache.org"
"8007","apache/flink","533b08e127dfdc1c528362b7c4853f5a94ac3db0",1,"2019-12-08 17:19:13+01:00","[FLINK-14264][runtime] Reduce surface area to EG
The stateBackendName is only relevant for the REST
API, yet is spread out over multiple runtime
classes. Until a better place for job meta data
has been introduced we should restrain such
necessary evils to the ExecutionGraph.
",740012,8751,349929,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"8008","apache/flink","20e945db8b252edc6cd6b20d56ea92bcfc4a6e32",1,"2019-11-21 16:51:07+03:00","[FLINK-14898] Enable background cleanup of state
with TTL by default
",740170,8752,349937,"Andrey Zagrebin","azagrebin@apache.org","Andrey Zagrebin","azagrebin@apache.org"
"8009","apache/flink","47f29391cf4c0c856e2401289c06658471508654",1,"2019-12-02 19:31:14+08:00","[FLINK-14513][hive] Implement
listPartitionsByFilter to HiveCatalog  This closes
#10381
",740961,8757,350125,"Rui Li","lirui@apache.org","Kurt Young","kurt@apache.org"
"8010","apache/flink","06a78c63a42a56420e6525893077493c54099b20",4,"2019-12-04 09:28:43+08:00","[FLINK-14992][client] Add job listener to
execution environments
",741492,8761,350329,"tison","wander4096@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"8011","apache/flink","e05618b427f22cb73694658f5a21fb1767709efa",3,"2019-11-24 16:20:09+08:00","[FLINK-14926][state-backend-rocksdb] Ensure that
RocksObjects are always closed on backend disposal
This also ensures that the newly introduces shared
resources (shared cache and write buffers) are
properly closed when the RocksDB state backend is
disposed.  This closes #10300
",741860,8763,350430,"Yu Li","liyu@apache.org","Stephan Ewen","sewen@apache.org"
"8012","apache/flink","0602ccf1d23c41bdbf335f6fb3e4cc39d7d5d7d1",1,"2019-12-09 19:42:00+01:00","[FLINK-14926][state-backend-rocksdb] (follow-up)
Make RocksDBResourceContainer immutable
",741857,8763,350428,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8013","apache/flink","31dd8c36246c86db3fb07790158a8c9fe373b726",1,"2019-12-10 11:17:47+01:00","[FLINK-14926][state-backend-rocksdb] (follow-up)
Avoid exposing handles that will not be closed
from RocksDBStateBackend  That means that
RocksDBStateBackend should not have accessors to
gather created native handles. The native handles
should only be created once the Resource Container
is created. This implies removing tome test
methods from RocksDBStateBackend and changing the
tests to test against the RocksDBResourceContainer
instead.
",741841,8763,350422,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8014","apache/flink","07f08fb19a814cbac03b92e675fe567e7a62e510",8,"2019-12-10 13:29:05+01:00","[FLINK-14926][state-backend-rocksdb] (follow-up)
Replace OptionsFactory for RocksDBOptionsFactory
OptionsFactory was breaking existing
implementations by adding a method to the
interface without default method. To solve this,
we keep OptionsFactory but replace it in the
RocksDB State Backend with the
RocksDBOptionsFactory which has the evolved
signature. The OptionsFactory is still accepted
and wrapped into a RocksDBOptionsFactory, for
compatibility.
",741912,8767,350562,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8015","apache/flink","781a7c85e7b476762aa2b921276ab36f11c85312",3,"2019-12-18 15:46:39+08:00","[FLINK-15232][table] Improve message of
NoMatchingTableFactoryException to tell users
which part is not matched (#10563)
",743837,8791,351295,"Jingsong Lee","lzljs3620320@aliyun.com","Jark Wu","jark@apache.org"
"8016","apache/flink","e72a5a7ea41b307a0b6393d1988a5ebf90720e23",12,"2019-12-09 13:11:11+01:00","[FLINK-15149][table-common] Merge
InputTypeStrategy and InputTypeValidator  This
merges the concepts of InputTypeStrategy for
inferring input data types and enriching data
types with conversion classes and
InputTypeValidator for validating arguments. It
enables implicit casting and simplifies the
overall design.  This closes #10546.
",743997,8781,351107,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8017","apache/flink","cbc10053ab7465e11a44b6dc7976dad6f64c6778",1,"2019-12-13 09:43:03+01:00","[hotfix][table-common] Add utility for mapping
logical fields to physical indices.
",744708,8786,351268,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8018","apache/flink","6f3a0778ba352e76c96160c3125e4e0ee88addba",3,"2019-12-19 14:30:42+08:00","[FLINK-15259][hive] HiveInspector.toInspectors()
should convert Flink constant to Hive constant
Convert constant Flink object to Hive object
before creating Hive's constant object inspectors.
this closes #10625.
",746294,8796,351730,"Rui Li","lirui@apache.org","bowen.li","bowenli86@gmail.com"
"8019","apache/flink","671f18ba165e60a0f1da0639c51446ef838f18cf",1,"2019-12-31 11:09:12+08:00","[hotfix][yarn] Write yarn properties file without
YarnClusterDescriptor.
",746695,8797,351882,"Xintong Song","tonysong820@gmail.com","tison","wander4096@gmail.com"
"8020","apache/flink","1c5806ae443626ce80f2de3bb85100abe9ba8e0c",6,"2019-12-30 16:41:07+08:00","[FLINK-15429][hive] HiveObjectConversion
implementations need to handle null values  this
closes #10721.
",746699,8797,351885,"Rui Li","lirui@apache.org","bowen.li","bowenli86@gmail.com"
"8021","apache/flink","37a818ce8714adf14153587bf99c0900e5af42b7",1,"2019-08-02 00:29:02+02:00","[FLINK-9679] Add
(Confluent)(Registry)AvroSerializationSchema
",746988,8801,352065,"Dominik Wosiński","dominik.wosinski@asseco.pl","Aljoscha Krettek","aljoscha@apache.org"
"8022","apache/flink","6e0088a0048af6671dc187c4ffe011548e275868",3,"2019-11-15 13:15:01+08:00","[FLINK-14766][coordination] Remove volatile
keyword in executiongraph package  This closes
#10207 .
",747336,8806,352317,"Jiayi","bupt_ljy@163.com","tison","wander4096@gmail.com"
"8023","apache/flink","29a38a4b70a4aa6a3ba8e53105b033b50e031ef0",1,"2020-01-03 13:22:28+08:00","[FLINK-15453][hive] Remove unneeded HiveShim
methods  closes #10755
",747274,8806,352277,"Rui Li","lirui@apache.org","bowen.li","bowenli86@gmail.com"
"8024","apache/flink","6df2e0e6db6d58819fcec9a9dd1e9cf1c632af0a",13,"2020-01-10 15:40:54+08:00","[FLINK-12785][StateBackend] RocksDB savepoint
recovery can use a lot of unmanaged memory  Add
size based flush policy for
RocksDBWriteBatchWrapper, to prevent too much
memory consumption during savepoint recovery.
This closes #10329.
",749219,8812,352701,"Congxian Qiu","qcx978132955@gmail.com","Yu Li","liyu@apache.org"
"8025","apache/flink","f65c5f2f69295ec4e8c1bf0fd2a4eea855542b70",21,"2019-12-17 13:52:53+01:00","[FLINK-15009][table-common] Add a utility for
creating type inference logic via reflection  This
implements the full annotation and extraction
logic mentioned in FLIP-65. The utility takes any
of the currently supported functions and returns a
TypeInference instance. See the documentation of
the FunctionHint annotation for more information
about the semantics.  This closes #10606.
",750613,8822,353287,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8026","apache/flink","21d1c659ca3627259d2b274dce9f5c949285d6c0",7,"2020-01-06 15:46:59+01:00","[FLINK-15281][table-planner-blink] Map Flink's
TypeInference to Calcite's interfaces  This
connects Flink's new type inference to Calcite's
type inference. It ensures that both Table API and
SQL have exactly the same behavior and similar
exception messages.  This closes #10781.
",751233,8832,353555,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8027","apache/flink","4bb4a50c4ed6c909dc98788bc239ba77340d6fb7",1,"2020-01-09 12:23:03+01:00","[FLINK-15504] Allow output to stdout/stderr during
execution of PackagedProgram  We suppress the
output to stdout/stderr during plan extraction via
PackagedProgram. This has unintended consequences
for users who are looking into debugging their
Flink programs during JobGraph creation.  This
change removes the suppression of output when we
run the JARs. The plan preview still suppresses
the output to avoid spaming the logs during plan
preview.
",751389,8833,353607,"Maximilian Michels","mxm@apache.org","Maximilian Michels","mxm@apache.org"
"8028","apache/flink","ff097e03730a693e935cd175dfb08d626f8c6d50",3,"2019-12-17 09:21:13+01:00","[FLINK-15292] Rename Executor to PipelineExecutor
",751653,8835,353725,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8029","apache/flink","d82b6042626a6d5119861438e498292541faa20d",1,"2019-12-17 09:34:26+01:00","[FLINK-15292] Rename ExecutorFactory to
PipelineExecutorFactory
",751653,8835,353725,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8030","apache/flink","0cf5a8d0488945cd528ce1bed41d559b2be7e62f",3,"2020-01-02 16:16:57+01:00","[FLINK-15115][kafka] Drop Kafka 0.9
",748564,8796,351891,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"8031","apache/flink","25b169744d348afa9d7deac98fa7ab3592343b32",1,"2020-01-14 17:05:08+08:00","[FLINK-14091][tests] Tests
ZooKeeperCheckpointIDCounter can be recoverd from
connection loss
",748705,8798,351974,"tison","wander4096@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8032","apache/flink","7455a0946ef80ea45f0e79116f99c2812cb6aa5f",1,"2020-01-14 18:12:14+01:00","[FLINK-14091] Harden
ZKCheckpointIDCounterMultiServersTest  In order to
avoid race conditions between notifying different
listeners, this commit introduces the
LastStateConnectionStateListener which is passed
into the ZooKeeperCheckpointIDCounter. This
listener can be modified to fulfill the required
testing purposes in ZKCheckpointIDCounterMultiServ
ersTest#testRecoveredAfterConnectionLoss.  This
closes #10754.
",748731,8800,352008,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8033","apache/flink","7513d9b184feffdcb6e0c09d1b74f8de21a98e81",1,"2020-01-13 17:58:56+01:00","[FLINK-15517][Runtime][Configuration][Network] Use
back 'network' in 'shuffle' memory config option
names
",748734,8800,352008,"Andrey Zagrebin","azagrebin@apache.org","Andrey Zagrebin","azagrebin@apache.org"
"8034","apache/flink","1db3b553b9ebd00c2d7c3dfe8c31254a787386c6",1,"2020-01-16 14:55:17+01:00","[FLINK-15564][yarn] Factor max vcores retrieval
out of YarnClusterDescriptor  For better
testability this commit introduces the
YarnClusterInformationRetriever which is
responsible for retrieving the maximum number of
vcores.  This closes #10852.
",749224,8807,352203,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8035","apache/flink","6d6053a99a6fe17587e1b7eeebc9222be3ffd6c9",1,"2020-01-10 13:33:38+08:00","[hotfix][yarn][client] Remove invalid
numberTaskManagers from ClusterSpecification.
After FLIP-6, we can no longer specifiy number of
task managers from client side on active
deployment. Thus numberTaskManagers in
ClusterSpecification is invalid.  This also
includes the following changes: -
YarnClusterDescriptor#validateClusterResources no
longer validate whether yarn have enough resource
for the flink cluster, because the total resource
requirements of the flink cluster is not known. -
Remove parallelism from yarn properties file,
because we can no longer infer the parallelism
from numberTaskManagers * slotsPerTaskManager.
",749162,8807,352199,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8036","apache/flink","4c63ec4dd3d078c2af2077c3187de9b63784f1b7",3,"2020-01-16 20:32:27+08:00","[FLINK-15616][python] Move boot error messages
from python-udf-boot.log to taskmanager's log file
Previously, the boot error messages are printed in
the log file(python-udf-boot.log) which is very
hard to locate. This commit prints the error
messages into the taskmanager log file to make it
more user-friendly.  This closes #10870.
",749408,8809,352287,"hequn8128","chenghequn@gmail.com","hequn8128","chenghequn@gmail.com"
"8037","apache/flink","7d4b19fa110fd2b849eeb98bba1a67de436b54ce",1,"2019-11-18 20:02:31+08:00","[FLINK-13905][checkpointing] Unify all error
handlings of checkpoint failure  There are so many
similar entrances for error handling of checkpoint
failure. So here unified these methods into
abortPendingCheckpoint(s).
",749571,8813,352412,"ifndef-SleePy","mmyy1110@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8038","apache/flink","0352fa595c57c3ccfaf31bc8f44be8107c4485bf",5,"2019-11-22 20:59:20+08:00","[FLINK-13905][checkpointing] Separate checkpoint
triggering into several asynchronous stages.
",750107,8813,352511,"ifndef-SleePy","mmyy1110@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8039","apache/flink","003ceb9a78f90803b2a765e007e4487eead00e06",1,"2020-01-20 11:13:04+08:00","[FLINK-15632][kubernetes] Make Flink client always
uses Kubernetes service to contact with jobmanager
via rest client  The K8s service is designed for
accessing the jobmanager out of K8s cluster. So
Flink client will not use HA service to retrieve
address of jobmanager. Instead, it always uses
Kubernetes service to contact with jobmanager via
rest client. So firstly, we will get the
RestOptions#ADDRESS and RestOptions#PORT from the
Kubernetes service and set the values to
configuration. Then we will use the updated
configuration to construct a
StandaloneClientHAServices for RestClusterClient.
",750196,8814,352541,"wangyang0918","danrtsey.wy@alibaba-inc.com","Zhu Zhu","reedpor@gmail.com"
"8040","apache/flink","4df4840427744e85c78e818108e65b8ca3b0d491",9,"2020-01-20 17:55:10+01:00","[FLINK-15612][table] Refactor DataTypeLookup to
DataTypeFactory
",750403,8816,352661,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8041","apache/flink","c16121f9b29126849f32d9bd930b309d8d0b120f",5,"2020-01-20 18:39:34+01:00","[FLINK-15612][table] Integrate data type factory
into catalog manager
",750501,8817,352691,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8042","apache/flink","11007c0d50d006630daa84a603e0051dfe88769c",1,"2020-01-21 17:48:58+01:00","[FLINK-15612][table-planner-blink] Propagate the
data type factory in the planner  This closes
#10917.
",750577,8818,352715,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8043","apache/flink","e68c6c5992d0f59c7f796a6afa58fecbee854445",5,"2019-12-18 18:32:07+01:00","[FLINK-15247][Runtime] Wait for all slots to be
free before task executor services shutdown upon
stopping  [FLINK-15247][Runtime] Improve test
coverage for slot allocation and task submission
in TaskSlotTable  [hotfix][Runtime] Introduce
TaskSlotTable interface  [hotfix][Runtime][Tests]
Introduce StubTaskSlotTable for tests to replace
mockito mocks  [hotfix][Runtime][Tests] Rework Tas
kExecutorTest#testTaskInterruptionAndTerminationOn
Shutdown to testTaskSlotTableTerminationOnShutdown
This closes #10682.
",751496,8825,353034,"Andrey Zagrebin","azagrebin@apache.org","Till Rohrmann","trohrmann@apache.org"
"8044","apache/flink","6dcaae0e403a8d7322d5c63e82b01ed24340d984",2,"2020-01-24 15:52:25+01:00","[FLINK-14894][core][mem] Do not explicitly release
unsafe memory when managed segment is freed  The
conclusion at the moment is that releasing unsafe
memory, while potentially having a link to it in
Java code, is dangerous. We revert this to rely
only on GC when there are no links in Java code.
The problem can happen e.g. if task thread exits
w/o joining with IO threads (e.g. spilling in
batch job) then the unsafe memory is released but
it can be written w/o segfault by IO thread. At
the same time, other task can allocate
interleaving memory which can be spoiled by that
IO thread. We still keep it unsafe to allocate it
outside of JVM direct memory limit to not
interfere with direct allocations, also it does
not make sense for RocksDB native memory (also
accounted in MemoryManager) to be part of direct
memory limit.  The potential downside can be that
over-allocating of unsafe memory will not hit the
direct limit and will not cause GC immediately
which will be the only way to release it. In this
case, it can cause out-of-memory failures w/o
triggering GC to release a lot of potentially
already unused memory.  If we see the delayed
release as a problem then we can investigate
further optimisations, like: - directly monitoring
phantom reference queue of the cleaner (if JVM
detects quickly that there are no more reference
to the memory) and explicitly release memory ready
for GC asap, e.g. after Task exit - monitor
allocated memory amount and block allocation until
GC releases occupied memory instead of failing
with out-of-memory immediately  This closes
#10940.
",751488,8825,353032,"Andrey Zagrebin","azagrebin@apache.org","Till Rohrmann","trohrmann@apache.org"
"8045","apache/flink","fe284c8d95e0b0cd50789cfb1ee7529b4605a5f9",3,"2020-01-10 16:30:55+01:00","[FLINK-15487][table] Allow registering FLIP-65
functions in TableEnvironment  Updates all catalog
related interfaces to FLIP-65. It also continues
FLIP-64 by exposing new interfaces in table
environment for registering functions of
temporary/system/catalog kind. Furthermore, it
adds early class validation to the function
catalog.  The first functions will be fully
functional once the code generator has been
updated.  This closes #10942.
",752362,8829,353265,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8046","apache/flink","035092b688ef44f8af029316e86c676e8f6eda77",1,"2020-01-29 13:03:21+01:00","[hotfix][table] Fix various type inference issues
",753336,8830,353498,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8047","apache/flink","3f5a8c758ebbb0a87a70a78673474de9376f1ea9",1,"2019-12-05 08:13:01+01:00","[hotfix][runtime,test] refactor
ContinuousFileProcessingRescalingTest to prepare
for ContinuousFileReaderOperator migration to
Mailbox Execution model
",756947,8845,354138,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8048","apache/flink","ba0e2e0b367a7b81f0c3a018a73fd8cc97592c06",2,"2020-02-07 16:32:42+01:00","[FLINK-15917][runtime] Fix that the root exception
is not shown in Web UI
",757147,8847,354188,"Gary Yao","gary@apache.org","Gary Yao","gary@apache.org"
"8049","apache/flink","6a160d7ab69a212783b93771531fdb6ba10c4bce",2,"2019-12-10 11:25:11+01:00","[FLINK-12484][runtime] push checkpoint lock from
StreamTask to SourceStream  Intermediate tasks
(not source/sink) don't acquire lock anymore (as
they use single-threaded model). SourceStreamTask
still has to have the lock to conform to the
public API. MockStreamTask has the lock for
compatibility with the existing tests.
",757080,8846,354133,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8050","apache/flink","7a490d85ab4113f859e5ca8e2cd163439452c221",1,"2020-02-06 15:32:02+01:00","[FLINK-15802][table] Support new type inference
for table functions  Further develops the stack
based on BridgingSqlFunction and the new type
inference. Similar to FLINK-15487, we don't test
every data type combination yet.  This closes
#11034.
",757551,8848,354188,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8051","apache/flink","41b6bfa62c61bfe758ce67b06cbf32b3cc937691",1,"2019-11-15 13:12:14+01:00","[FLINK-15099][runtime] Add Operator Coordinators
and Events  Operator Coordinators are instances
that exist once per operator. While the operators
run on the TaskManagers, the coordinator runs on
the JobManager. The coordinator communicates via
events with the operators, typicalls to assign
work.  The first user for those coordinators would
be the new source interface. Further users we
envision are sinks (for coordinated commits of
metadata), or iterations (gather progress and
steer supersteps) as well as simple approximate
alignments between streams (event time alignment).
",759081,8876,355026,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8052","apache/flink","2746e6a4f3f84e05425484ad63ea096c5536c77f",5,"2020-02-05 20:09:12+01:00","[FLINK-15966][runtime] Capture callstacks for RPC
ask() calls to improve exceptions.
",759483,8883,355152,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8053","apache/flink","90dd45bfb04324ce559e58d9362ea561698b5ff3",3,"2019-12-08 15:17:23+01:00","[hotfix][runtime] Fix checkstyle in
org.apache.flink.runtime.checkpoint (main scope)
Test scope is not included in this fix.
",760061,8887,355330,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8054","apache/flink","ab642cb616fb909893e2c650b0b4c2aa10407e6d",4,"2020-02-11 15:49:00+08:00","[FLINK-14231][runtime] Introduce and use
ProcessingTimeServiceAware to pass
ProcessingTimeService to operator
",760612,8903,355745,"sunhaibotb","sunhaibotb@163.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8055","apache/flink","56ce696009f19098ce9db17a3f8c5aae816a2f86",4,"2020-02-12 10:36:47+08:00","[FLINK-14231][task] Add StreamOperatorWrapper that
handles the close, endInput and other related
logic of an operator  For each operator in the
operator chain, its inputs must end completely
before executing the ""endInput()"" method. For the
operator chain in a task, such as ""OP1 - > OP2 - >
..."", after the (source/network) input of OP1 are
finished, the operators on the chain are closed in
the following order:  1. quiesce
ProcessingTimeService of OP1 to prevent the
pending timers from firing, but wait the timers in
running    to finish. 2. call OP1#close() 3. call
OP2#endInput() 4. quiesce ProcessingTimeService of
OP2 to prevent the pending timers from firing, but
wait the timers in running    to finish. 5. call
OP2#close() ...
",760943,8905,355835,"sunhaibotb","sunhaibotb@163.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8056","apache/flink","92253f2e15090f5dac8cfc68c49727b62da23b8c",5,"2019-11-19 11:56:16+08:00","[FLINK-14818][benchmark] Fix InputGate setup logic
of StreamNetworkBenchmarkEnvironment  Before this
change, in network benchmark (for example 1000
channels benchmark with 4 record writers)
StreamNetworkBenchmarkEnvironment#createInputGate
was creating 1000 input gates with 4 input
channels each, which doesn't make much sense. This
commit is changing that to a single receiver with
4 input gates and each with 1000 channels.  It is
achieved by providing testing implementations of
InputChannels, which are using channel index for
requesting subpartitions from ResultPartition,
instead of subpartition index. Thanks to that, we
can map a single ResultPartition with N
subpartitions, to a single instance of InputGate
with N channels.  The change also influences the
benchmark results, overall, the performance goes
down a bit because of the decrease of floating
buffers and the followings are benchmark results
before and after this change:  -------------------
-----------------------------------------------Bef
ore-----------------------------------------------
----------------------- Benchmark
(channelsFlushTimeout)   Mode  Cnt      Score
Error   Units DataSkewStreamNetworkThroughputBench
markExecutor.networkSkewedThroughput
N/A  thrpt   30  17079.534 ¬±  830.532  ops/ms Stre
amNetworkBroadcastThroughputBenchmarkExecutor.netw
orkBroadcastThroughput                     N/A
thrpt   30    599.664 ¬±   13.325  ops/ms StreamNet
workThroughputBenchmarkExecutor.networkThroughput
100,100ms  thrpt   30  45629.898 ¬± 1623.455
ops/ms StreamNetworkThroughputBenchmarkExecutor.ne
tworkThroughput
100,100ms,SSL  thrpt   30   9817.421 ¬±  216.075
ops/ms StreamNetworkThroughputBenchmarkExecutor.ne
tworkThroughput
1000,1ms  thrpt   30  25442.152 ¬±  968.340  ops/ms
StreamNetworkThroughputBenchmarkExecutor.networkTh
roughput                                1000,100ms
thrpt   30  27944.285 ¬±  518.106  ops/ms StreamNet
workThroughputBenchmarkExecutor.networkThroughput
1000,100ms,SSL  thrpt   30   7820.549 ¬±  895.862
ops/ms StreamNetworkLatencyBenchmarkExecutor.netwo
rkLatency1to1
N/A   avgt   30     13.184 ¬±    0.093   ms/op  ---
--------------------------------------------------
-------------After--------------------------------
--------------------------------------- Benchmark
(channelsFlushTimeout)   Mode  Cnt      Score
Error   Units DataSkewStreamNetworkThroughputBench
markExecutor.networkSkewedThroughput
N/A  thrpt   30  17345.574 ¬±  370.647  ops/ms Stre
amNetworkBroadcastThroughputBenchmarkExecutor.netw
orkBroadcastThroughput                     N/A
thrpt   30    608.881 ¬±   12.054  ops/ms StreamNet
workThroughputBenchmarkExecutor.networkThroughput
100,100ms  thrpt   30  41732.518 ¬± 1109.436
ops/ms StreamNetworkThroughputBenchmarkExecutor.ne
tworkThroughput
100,100ms,SSL  thrpt   30   9689.525 ¬±  202.895
ops/ms StreamNetworkThroughputBenchmarkExecutor.ne
tworkThroughput
1000,1ms  thrpt   30  24106.705 ¬± 2952.364  ops/ms
StreamNetworkThroughputBenchmarkExecutor.networkTh
roughput                                1000,100ms
thrpt   30  27509.665 ¬± 3246.965  ops/ms StreamNet
workThroughputBenchmarkExecutor.networkThroughput
1000,100ms,SSL  thrpt   30   7691.287 ¬±  927.775
ops/ms StreamNetworkLatencyBenchmarkExecutor.netwo
rkLatency1to1
N/A   avgt   30     12.758 ¬±    0.147   ms/op
",762131,8939,356512,"kevin.cyj","kevin.cyj@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"8057","apache/flink","261dd71cd65342c99ac85dddf8f77158a8d9b9e6",1,"2020-01-31 09:54:54+01:00","[FLINK-15688][streaming] Add support for
MultipleInputStreamOperator in the
StreamGraphGenerator
",762274,8944,356609,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8058","apache/flink","143888286e4b8631800cd8398031fe60be8c65b1",1,"2020-02-11 16:47:04+01:00","[FLINK-16060][test] Provide a test harness for
MultipleInputStreamTask  This creates new
hierarchy of task harnesses that could be used for
other tasks as well.
",762627,8947,356702,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8059","apache/flink","8becccb8dc4d00eb2c5f2e13827ad02c93331343",1,"2020-02-04 10:19:39+01:00","[FLINK-16060][task] Implemente working
StreamMultipleInputProcessor  This doesn't fully
support input selection, watermarks, latency
markers and keyed contextes yet
",763337,8952,356876,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8060","apache/flink","9a3eb5b03b84f14c004a41681a26ed513d00ed00",2,"2020-02-28 20:23:38+08:00","[FLINK-16180][runtime] Replace the nullable
vertexExecution in ScheduledUnit with a non-null
executionVertexId
",763974,8962,357136,"Zhu Zhu","reedpor@gmail.com","Zhu Zhu","reedpor@gmail.com"
"8061","apache/flink","f40658d6422fd184695198aa847f48160d97da7a",1,"2020-02-27 14:29:16+08:00","[hotfix][runtime] Remove slotProvider and
slotRequestTimeout param from DefaultScheduler
constructor  This makes it easier to understand
that the slot allocation is conducted via
ExecutionSlotAllocatorFactory but not those two
legacy params.
",763957,8963,357160,"Zhu Zhu","reedpor@gmail.com","Zhu Zhu","reedpor@gmail.com"
"8062","apache/flink","eb814e861c89488b63572350cc1db880ab40213a",1,"2020-02-20 15:41:24+01:00","[FLINK-16190][e2e] Migrate tests to FlinkResource
",766533,8989,358753,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"8063","apache/flink","3cf8fe5177e21443f15ad030bd66e71d74496452",1,"2019-09-04 22:59:09+08:00","[FLINK-11193][State] Fix Rockdb timer service
factory configuration option to be settable per
job  This closes #8479.
",766545,8991,358796,"Aitozi","1059789585@qq.com","Andrey Zagrebin","azagrebin@apache.org"
"8064","apache/flink","007b8755462e2237ac39a3218ccb9d1377b76180",2,"2020-03-04 22:03:39+08:00","[FLINK-16300][tests] Introduce
ExecutionGraphTestUtils#getExecutions(‚Ä¶) to
replace SchedulerTestUtils#getTestVertex(‚Ä¶)
",766533,8991,358798,"Zhu Zhu","reedpor@gmail.com","Zhu Zhu","reedpor@gmail.com"
"8065","apache/flink","7f19c9cf14162c0f1b49e0b7a9bd7a0134cc7e3e",1,"2020-02-23 15:19:52+08:00","[FLINK-16194][k8s] Introduce Java command
decorator for the main Container of the JobManager
and the TaskManger Pod
",766749,9001,359051,"felixzheng","felixzheng@tencent.com","tison","wander4096@gmail.com"
"8066","apache/flink","b4730308a75f5a99f930622ccdd5289380c5d73c",2,"2020-03-05 17:01:00+08:00","[FLINK-16418][hive] Hide hive version to avoid
user confuse (#11304)
",767636,9011,359248,"Jingsong Lee","jingsonglee0@gmail.com","GitHub","noreply@github.com"
"8067","apache/flink","196196620915397d7d45bbb43a31d5db2627f109",1,"2020-02-24 20:25:57+01:00","[FLINK-16177][refactor][checkpointing] Introduce a
new MetadataV3Serializer for the latest version
",767712,9014,359348,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8068","apache/flink","1924f82512e17a43f874b8c86492d9ce6c8d7dd1",2,"2020-03-05 16:12:37+01:00","[FLINK-16189][e2e] Remove test logic from
FlinkDistribution  The FlinkDistribution is now a
simple wrapper, which makes it easier to use in
ways that do not match the jUnit resource life-
cycle.
",768032,9018,359465,"Chesnay Schepler","chesnay@apache.org","GitHub","noreply@github.com"
"8069","apache/flink","b41e0d1a69bec95c6645f1a4825764e2548e8462",2,"2020-01-14 00:43:27+01:00","[FLINK-15782][connectors/jdbc] introduce parameter
objects Motivated partially by future use in
public API
",770602,9059,360797,"Roman Khachatryan","khachatryan.roman@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8070","apache/flink","5afe1b5b3d49b3142fb07246b15991511c1ddc77",10,"2020-02-27 14:33:25+01:00","[FLINK-15782][connectors/jdbc][pr-review] use
SimpleBatchStatementExecutor for Upsert [pr-
review] enforce use of Builder and Optional in
JdbcOptions [pr-review] don't expose Row in
DataStream API [pr-review] fix typo and remove
redirects in docs; add some javadoc [pr-review]
rename ExecutorCreator to StatementExecutorCreator
and some vars/methods [pr-review] address
formatting and some other minor issues  This
closes #11061.
",770887,9070,361024,"Roman Khachatryan","khachatryan.roman@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8071","apache/flink","87ebe5533d3cd675b416146189abb0f6de61559d",3,"2020-02-18 16:32:28+08:00","[FLINK-15396][json] Support to ignore parse errors
for JSON format  This closes #11119
",771100,9070,361048,"zoudan","zoudan@bytedance.com","Jark Wu","jark@apache.org"
"8072","apache/flink","de4c116451d8faafcb43f2463c163bbcb7e7085c",5,"2020-03-07 03:27:29+08:00","[FLINK-15090][tests] Move streaming env tests to
flink-tests  + GetOperatorUniqueIDTest +
RemoteStreamEnvironmentTest +
ReinterpretDataStreamAsKeyedStreamITCase +
LocalStreamEnvironmentITCase
",773377,9077,361908,"tison","wander4096@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"8073","apache/flink","0523ef6451a93da450c6bdf5dd4757c3702f3962",3,"2020-03-06 16:56:22+08:00","[FLINK-15090][api] Reverse the dependency from
flink-streaming-java to flink-clients  This closes
#10526 .
",773362,9078,361902,"tison","wander4096@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"8074","apache/flink","db5d753da7dbac3cc274bba683081503be94c99d",9,"2019-06-24 00:51:41+08:00","[FLINK-10742][network] Let Netty use Flink's
buffers directly on receiver side  For credit-
based flow control, we always have buffers
available for data that is sent to use. We could
thus use them directly and not copy the network
stream into Netty buffers first and then into our
buffers. This improvement can reduce the total
Netty memory overhead to aovid potential direct
OutOfMemoryError in large scale jobs.
",774134,9089,362267,"Gao Yun","yungao.gy@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"8075","apache/flink","6126600b3717368e7428a4543b524b413c58501e",2,"2020-02-26 10:10:24+01:00","[FLINK-16261][table] Use type compatibility
consistently to avoid casting  In many cases, full
type equality is not necessary. Especially when
leaving the table ecosystem to sinks or UDFs a
clear definition of ""type compatibility"" is
important. This commit defines the type
compatibility for all logical types to avoid
unnecessary casting and less type inequality
exceptions.  This closes #11225.
",774429,9091,362343,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8076","apache/flink","c83bc655fc28cd10c77d0b6991ef916e80429d18",1,"2020-03-13 14:36:32+01:00","[FLINK-11088] Add unit test for Kerberos parsing
in YarnEntrypointUtilsTest
",774566,9093,362392,"Aljoscha Krettek","aljoscha@apache.org","Aljoscha Krettek","aljoscha@apache.org"
"8077","apache/flink","0a8eb8d86c5f2563e5dc8d0a533ff0cd24343869",7,"2020-03-13 16:15:22+08:00","[FLINK-16586][network] Build
ResultSubpartitionInfo and InputChannelInfo in
respective constructors  In the constructors of
ResultSubpartition and InputChannel, the
respective ResultSubpartitionInfo and
InputChannelInfo should be created as well. These
infos would be used for interacting with
ChannelStateReader and ChannelStateWriter future.
This cloese #11400.
",774748,9093,362405,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"8078","apache/flink","e8d98f45e2874b7252d757f43ca3b91325cb2c5c",10,"2020-02-17 09:51:01+01:00","[FLINK-15958][table-common] Introduce unresolved
data types in API  Introduces unresolved data
types for class-based extraction, name-based
resolution, and configuration-based RAW types.
Unresolved types behave like regular data types
but only after they have been resolved. Using
unresolved data types in nested structures leads
to further unresolved types. Thus, the usage of
unresolved types is type-safe in API.  This closes
#11153.
",775148,9096,362655,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8079","apache/flink","c60d11d40dc288bc467e7414be5fe7bb2f583f17",1,"2020-03-18 20:10:17+08:00","[FLINK-16653][network][tests] Implement
MockResultPartitionWriter base for simplifying
tests  At the moment there are at-least four
implementations of `ResultPartitionWriter`
interface used in unit tests. And there are about
ten methods to be implemented for
`ResultPartitionWriter` and most of them are dummy
in tests.  When we want to extend the methods for
`ResultPartitionWriter`, the above four dummy
implementations in tests have to be adjusted as
well, to waste a bit efforts.  Therefore the
MockResultPartitionWriter is proposed to implement
the basic dummy methods for
`ResultPartitionWriter`, and the previous four
instances can all extend it to only implement one
or two methods based on specific requirements in
tests. It will probably only need to adjust the
MockResultPartitionWriter when extending the
`ResultPartitionWriter` interface.  This closes
#11441.
",775258,9099,362735,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"8080","apache/flink","b226cbd1f595b405f5da376fa3d22e1850fbf4e1",1,"2020-03-17 10:24:39+01:00","[FLINK-16633][AZP] Fix builds without s3
credentials  Problem: Builds on Azure where
failing if S3 credentails were not provided,
because the syntax in the pipeline definition was
incorrect.  Solution: Use a way to access secret
variables that leads to an empty value (instead of
the variable name). Also, extend the check in the
unit tests to ""variable empty"" instead of just
""variable not set"".
",775260,9099,362740,"Robert Metzger","rmetzger@apache.org","Robert Metzger","89049+rmetzger@users.noreply.github.com"
"8081","apache/flink","7dafd1cd65ba8977d923482a810c907ed7d37b59",1,"2020-03-20 13:14:35+08:00","[FLINK-16690][tests] Refactor StreamTaskTest to
reuse TestTaskBuilder and MockStreamTaskBuilder
This closes #11459
",775878,9107,362934,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"8082","apache/flink","c125c04185febca0a2bbf4fa04dee207208f1a5b",11,"2020-02-27 17:27:08+08:00","[FLINK-16302][rest] Enable retrieval of custom
TaskManager log files  Add log list handler which
lists all files in TaskManager log directory.
Enable retrieval of custom TaskManager log files
by name.  This closes #11250.
",776646,9118,363190,"Lining Jing","lining.jln@alibaba-inc.com","Gary Yao","gary@apache.org"
"8083","apache/flink","03b6e763d5578c3b503246a2a40e5fd1fb990570",8,"2020-03-02 17:17:13+08:00","[FLINK-15911][runtime] Refactor to create
AkkaRpsService with builder class, in order to
reduce the number of nested creating methods.
",777950,9152,363984,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8084","apache/flink","8a1dbcc07d6b4ed7702741cd8b1c73d95f0d2583",2,"2020-03-02 17:49:09+08:00","[FLINK-15911][runtime] Support configure
address/port and bind-address/bind-port separately
for JM/TM RPC services.
",778021,9152,364005,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8085","apache/flink","9dc7a4a47f85153b98e1f50eb8917dd6c8e15c85",1,"2020-03-20 19:27:43+08:00","[FLINK-15911][runtime] Support unresolveable
external hostname.
",778097,9154,364052,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8086","apache/flink","5aedb83db5dda09471cb36bb87e1933042c9385b",8,"2020-03-21 15:41:27+08:00","[FLINK-16692] Register custom JobListeners throug
config.  This closes #11471.
",778337,9154,364057,"liuyongvs","liuyongvs@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8087","apache/flink","7e7bcc49717822991f9f3f3c40902305667366e9",2,"2020-03-06 17:32:21+01:00","[FLINK-16316][operators] Extract state handling
code from AbstractStreamOperator  Introduce
StreamOperatorStateHandler class for that purpose
and move more logic into
IntrenalTimeServiceManager.  This makes
AbstractStreamOperator a simpler class and will
allow to deduplicate code with new replacement of
AbstractStreamOperator that will come soon.
",778455,9156,364094,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8088","apache/flink","239088e603baede4fbbd05f75655c54bb3750fcb",2,"2020-03-11 17:53:38+01:00","[FLINK-16316][operators] Cut dependency between
StreamingRuntimeContext and AbstractStreamOperator
This simplifies dependencies between those two
classes and will allow for StreamingRuntimeContext
to be re-used in new replacement for
AbstractStreamOperator.
",778509,9156,364093,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8089","apache/flink","90a9b3edf299f1f259aa3416893ba0328c8dd9a1",11,"2020-02-11 08:25:12+01:00","[FLINK-16377][table] Support calls to inline
functions in the expressions DSL.
",779190,9162,364363,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"8090","apache/flink","158e4478cb00f3a7dde32b41f366de87554d9743",1,"2020-03-20 14:59:01+01:00","[FLINK-16317][operators] Provide support for
watermarks in  MultipleInputStreamOperator
",779410,9163,364410,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8091","apache/flink","05883b7fc38786e735e6476ae8e78e2f1dc022b7",1,"2020-03-20 14:18:40+01:00","[FLINK-16317][operators] Provide support for key
selector and latency marker in
MultipleInputStreamOperator
",779642,9166,364487,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8092","apache/flink","200d3466bdb937eecf7038c22558e535d6e22aa3",1,"2020-03-26 13:34:18+01:00","[FLINK-16826][e2e] Support copying of jars  JARs
copying into multiple locations is required for
testing plugins-loading mechanism. Currently only
""move"" operations is supported, this commit
extends it to also support ""copy"" operations.
",780774,9194,365249,"Alexander Fedulov","1492164+afedulov@users.noreply.github.com","Chesnay Schepler","chesnay@apache.org"
"8093","apache/flink","850c7098fd4021d50146ecd40c26816bfab66906",1,"2019-06-15 16:00:56+02:00","[FLINK-16222][runtime] Introduce PluginManager to
ReporterSetup
",780888,9196,365298,"Alexander Fedulov","1492164+afedulov@users.noreply.github.com","Chesnay Schepler","chesnay@apache.org"
"8094","apache/flink","1a7acefdfac5169e173e2b221fec7458049c3021",2,"2020-03-17 17:56:48+01:00","[FLINK-16222][metrics] Support loading reporters
as plugins
",780903,9196,365298,"Alexander Fedulov","1492164+afedulov@users.noreply.github.com","Chesnay Schepler","chesnay@apache.org"
"8095","apache/flink","750ef6837aaec571814eab7ce5fc5555e1a99b2c",2,"2020-03-27 16:18:16+01:00","[hotfix][operators] Rename InputSelectable
inputSelector field to inputSelectable
",782650,9228,366373,"Piotr Nowojski","piotr.nowojski@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8096","apache/flink","db81417b8616850aa36b34fecafcc275db2cb10a",2,"2020-03-21 14:17:34+01:00","[FLINK-16705] Ensure MiniCluster shutdown does not
interfere with JobResult retrieval  There is a
race condition in `LocalExecutor` between (a)
shutting down the cluster when the job has
finished and (b) the client which retrieves the
result of the job execution.  This was observed in
Beam, running a large test suite with the Flink
Runner.  We should make sure the job result
retrieval and the cluster shutdown do not
interfere. This adds a PerJobMiniClusterClient
which guarantees that.  Improve message for
running flag state checks in MiniCluster
Additionally check for the JobID in
PerJobMiniClusterClient  Introduce
PerJobMiniCluster and a corresponding JobClient
Add TestLogger to test  Convert shutdown methods
to be async  This closes #11473.
",775165,9232,364849,"Maximilian Michels","mxm@apache.org","Till Rohrmann","trohrmann@apache.org"
"8097","apache/flink","7ea3f6f9022d6da40ebfb5b33b605dbd43d65739",1,"2020-04-02 18:27:00+02:00","[hotfix] Add resourceManagerGateway null check to
SlotPoolImpl  SlotPoolImpl's
resourceManagerGateway field can be null if JM has
not connected to the ResourceManager yet.
SlotPoolImpl's methods should respect this
contract.
",775167,9232,364848,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8098","apache/flink","bb46756b84940a6134910e74406bfaff4f2f37e9",6,"2020-04-02 17:01:19+02:00","[FLINK-16913] Migrate StateBackends to use
ReadableConfig instead of Configuration
StateBackendFactories do not need a full read and
write access to the Configuration object. It's
sufficient to have read only access. Moreover the
ReadableConfig is a lightweight interface that can
be implemented in other ways, not just through the
Configuration. Lastly we exposed this lightweight
interface as a configuration entry point for
ExecutionEnvironments. This change will make it
possible to pass the ReadableConfig directly to
the StateBackendFactories without fragile
adapters.
",775058,9231,364825,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"8099","apache/flink","7381304930a964098df52d9fa79a55241538b301",2,"2020-03-16 10:19:18+01:00","[FLINK-16655][FLINK-16657] Introduce embedded
executor and use it in Web Submission  This closes
#11460.
",775335,9238,365011,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8100","apache/flink","482bff989069c14f10091ded34015fdf8f4aa7fd",2,"2020-04-03 21:24:28+02:00","[minor] Rename ExecutorUtils to
PipelineExecutorUtils
",775470,9239,365038,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8101","apache/flink","ed992fba3a065001f26b896aa40b661433e1872f",4,"2020-04-06 11:13:25+02:00","[FLINK-16988][table] Add core table source/sink
interfaces  Adds the core set of interfaces
described in FLIP-95.  This closes #11646.
",778847,9277,366546,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8102","apache/flink","d6982e6a61b586314a19c1551b4dc84f93d518b3",36,"2020-03-19 17:35:24+01:00","[FLINK-16513][checkpointing] add task channel
state for unaligned checkpoints  Changes: 1. add
channel state metadata to OperatorSubtaskState 2.
adjust StateAssignmentOperation 3. adjust metadata
serialization 4. adjust related classes  This
closes #11491.
",779543,9280,366613,"Roman Khachatryan","khachatryan.roman@gmail.com","Yu Li","liyu@apache.org"
"8103","apache/flink","2795af3e8ebf3c085b901feacc58417ac7a197bd",1,"2020-04-07 15:18:23+02:00","[FLINK-16696][rest] Properly document async
responses
",779435,9281,366625,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"8104","apache/flink","6f235b0d961c1e08f778f25522bb7f605744a1d6",8,"2020-03-19 14:18:05+08:00","[FLINK-16666][table][python] Introduce Python
dependency config options  This closes #11448.
",779778,9284,366726,"Wei Zhong","weizhong0618@gmail.com","Dian Fu","dianfu@apache.org"
"8105","apache/flink","53d9f36ac1ae5a55f0fad9132117d1468e6eaeb1",2,"2020-03-29 22:58:36+02:00","[FLINK-16744][task] Implement channel state
reading and writing for unaligned checkpoints
",781661,9304,367199,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8106","apache/flink","83c8d9361b18005e83fa1a6b0d9b3de347a06d3f",1,"2020-03-29 22:58:44+02:00","[FLINK-16744][task] Send channel state handles to
JM  1. add channel state writer to
SubtaskCheckpointCoordinator 2. add handles to the
reported snapshot 3. cache checkpoint locations to
prevent multiple streams per checkpoint. With
unaligned checkpoints, checkpoint can be initiated
from several places which can result (without
cache) in multiple streams/files for a single
checkpoint
",781786,9304,367203,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8107","apache/flink","c401da36dfb5ff05527ed769babe16cbfdfc80be",1,"2020-04-09 11:42:47+08:00","[FLINK-16668][python] Improve PythonDriver to
parse python dependency info from configuration
This closes #11682.
",781634,9304,367204,"Wei Zhong","weizhong0618@gmail.com","Dian Fu","dianfu@apache.org"
"8108","apache/flink","53755ec0bf0ffd24b28d8d0931628ee16e0c1389",10,"2020-03-26 19:38:25+08:00","[FLINK-16303][rest] Enable retrieval of custom
JobManager log files  This closes #11542.
",782158,9312,367362,"Lining Jing","lining.jln@alibaba-inc.com","Gary Yao","gary@apache.org"
"8109","apache/flink","2eec0436bf1c0887de95bcc9c3cb84da8104587a",4,"2020-04-02 12:51:23+02:00","[FLINK-14504][rest] Rename
AbstractTaskManagerHandler  The name was
misleading since the handler only interacts with
the ResourceManager, and just happened to only be
used by TaskExecutor-related handlers.
",782383,9314,367428,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"8110","apache/flink","5da6ce8e59dd4e1de7a1820095c3ae814372f647",2,"2020-04-03 12:27:32+02:00","[FLINK-14504][rest] Add Cluster DataSet REST API
",782743,9326,367675,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"8111","apache/flink","3933b0466d7258fb69b3f2c8eac9d8a1fcecbe8e",3,"2020-04-14 22:10:49+08:00","[FLINK-16995][table-common] Add new data structure
interfaces in table-common  This closes #11651
",783072,9332,368051,"Jark Wu","jark@apache.org","GitHub","noreply@github.com"
"8112","apache/flink","792dbf0b72ca8a7ac2cb00d4da3f84c7bfe1b59d",1,"2020-04-14 12:06:43+08:00","[FLINK-16576][state backends] Do not distribute
KeyGroupsStateHandle which contains empty
KeyGroupRange  This closes #11555.
",783293,9340,368312,"klion26","qcx978132955@gmail.com","Yu Li","liyu@apache.org"
"8113","apache/flink","96d4dfe6bd28c08c635ddd8e9718da7ad71b1e15",8,"2020-04-09 18:03:25+02:00","[FLINK-17064][table-planner] Improve literals
conversion in ExpressionConverter  It simplifies
conversion of literals in ExpressionConverter. It
also fixes certain mappings from Flink's type
system to Calcite's which were losing precision.
",783537,9343,368443,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8114","apache/flink","6acd6461bd0c796708313804d076b881f2687046",2,"2020-04-15 18:59:13+02:00","[FLINK-17084][table] Implement input type
inference and output type strategy for
ARRAY/ROW/MAP built-in functions (#11701)  The
type strategies are implemented using the new type
stack. It also  removes those three planner
expressions from the Blink planner as they  are no
longer needed. Equivalent expressions in flink
planner are not  yet removed as they are needed
for converting to RexNodes.    It disables the
FunctionDefinitionConvertRule for built-in
functions as  the BridgingSqlFunction call
generator supports only user defined functions so
far.
",783804,9346,368589,"Dawid Wysakowicz","dwysakowicz@apache.org","GitHub","noreply@github.com"
"8115","apache/flink","135d2e2c8c493d023395c0146989c759ccb1a8d5",3,"2020-04-12 21:36:10+08:00","[FLINK-16598][k8s] Respect the rest port exposed
by Service in
Fabric8FlinkKubeClient#getRestEndpoint  This
closes #11715 .
",783850,9347,368622,"felixzheng","felixzhengcb@gmail.com","tison","wander4096@gmail.com"
"8116","apache/flink","6b99a571e009f30876b15ec8b91cf86e15d3f573",4,"2020-03-04 18:06:03+08:00","[FLINK-16437][runtime] SlotManager allocate
resource from ResourceManager with WorkerRequest
instead of ResourceProfile.  This marks
ResourceManager is no longer aware of slot
ResourceProfiles.  This closes #11320.
",784754,9363,368970,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8117","apache/flink","dbdaa51a8408635ba7b88cb969afd9d1dae72f73",3,"2020-01-07 04:47:31+01:00","[FLINK-16587][checkpointing] Introduce
BufferReceivedListener for notifying of received
buffers and barriers from network channel.
",785130,9366,369101,"Zhijiang","wangzhijiang999@aliyun.com","Piotr Nowojski","piotr.nowojski@gmail.com"
"8118","apache/flink","957c49d56c80416ae712ae79cdd2784bb2387c80",2,"2020-04-11 15:22:20+02:00","[hotfix] Force not null types for literals with
non null value
",786812,9381,369624,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8119","apache/flink","6b3e037b7073c06412210cc82843924e8a3c9eee",5,"2020-04-14 09:18:18+02:00","[FLINK-16379][table] Introduce fromValues in
TableEnvironment.  The clause works briefly as
follows:  1. Convert the input to expressions
(objects and expressions) 2. Resolve the types of
the expressions 3. Either use a user provided type
for the resulting table or run a type
generalization over all rows 4. Adapt the input
rows to the type of the resulting table. It
includes:      4a. checking if a literal class is
a supported conversion class of the requested type
4b. applying a cast to the expected type    This
is done recursively for ROW/MAP/ARRAY types. 5.
All rows that are constructed purely of literals
are used in a values logical node, any calls are
applied in a projection over a single row dummy
values node. All those rows are unioned in the
end.  This closes #11290
",788153,9387,369997,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8120","apache/flink","f0529de9a35009c190863060c8bda1328b3bfd83",8,"2020-04-09 10:26:27+02:00","[FLINK-15347] Add SupervisorActor which monitors
the proper termination of AkkaRpcActors  In order
to properly complete the termination future of an
RpcEndpoint, we need to monitor when the
underlying AkkaRpcActor has been removed from the
ActorSystem. If this is not done, then it can
happen that another RpcEndpoint using the same
name cannot be started because the old RpcEndpoint
is still registered.  The way we achieve this
monitoring is to introduce a helper actor which is
responsible for starting the AkkaRpcActors for all
RpcEndpoints. Since the SupervisorActor is the
parent of all RpcEndpoints, it can tell when they
are being removed from the ActorSystem through the
SupervisorStrategy.  A consequence of the new
actor is that the akka urls change from
akka://flink@actorsystem:port/user/xyz to
akka://flink@actorsystem:port/user/rpc/xyz. The
respective method AkkaRpcServiceUtils.getRpcUrl
has been updated to reflect this change. This
hierarchy change also warrants the bump of the
AkkaRpcService.VERSION.  The failure behaviour of
the underlying ActorSystem has been changed so
that it terminates all running actors if an
exception is thrown from the SupervisorActor. The
assumption is that such an exception always
indicates a programming error and is
unrecoverable.  The same applies to failure
originating from an AkkaRpcActor (children of the
SupervisorActor). If such an exception is thrown,
then we assume that the system is in an illegal
state and shut it down. The way it works is by
recording the failure cause for the respective
AkkaRpcActor and then terminating the ActorSystem.
",789181,9412,370851,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8121","apache/flink","e600dc420920e9bd010a50f676c08d371bbbc584",2,"2020-04-06 22:44:07+02:00","[FLINK-16660] Separate the code-paths of web
submission and application mode  Although in both
cases, the main() method is executed on the
cluster, in the case of Web submission, the
cluster is shared across different jobs that
compete for the same resources on the dispatcher.
This leads to some restrictions when it comes to
job execution, for example, in the case of web
submission, a job submission cannot be blocking
(i.e. wait for the job's completion). This means
that a separate JobClient has to be returned, that
limits the operations a user can make. To achieve
this in a clear way, this commit makes sure that
the codepaths of the two job execution modes are
distinct enough to be able to accommodate their
special needs.
",789804,9426,371222,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8122","apache/flink","52bcb212418adb0cf9f2dfe0feabeb2d52881508",8,"2020-04-01 16:19:17+02:00","[FLINK-16658] Add PackagedProgramRetriever  This
is the equivalent of the JobGraphRetriever but for
reconstructing a PackagedProgram on the cluster.
This is used for executing user code in
Application Mode, where the main() is executed on
the cluster.
",790723,9436,371469,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8123","apache/flink","74fc5a7cc8132eec2a247f6894a81a63a1e6128a",3,"2020-04-07 13:31:02+02:00","[FLINK-16658] Wire the
ApplicationDispatcherBootstrap to the
StandaloneJobClusterEntryPoint
",790766,9436,371461,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8124","apache/flink","a140670501010a903807157a5831a4cc07ab59d0",2,"2020-04-17 10:15:13+02:00","[FLINK-17003][table-sql-parser] Support parsing
LIKE clause in a CREATE TABLE statement.  This PR
implements parsing and validation of LIKE clause
in a CREATE TABLE statement. It verifies valid
combinations of merging strategies and table
descriptor features.  This closes #11833
",790941,9439,371702,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8125","apache/flink","838badc5668ad07a92be20082df28d0ab232229a",1,"2020-04-22 15:11:12+08:00","[FLINK-16412][hive] Disallow embedded metastore in
HiveCatalog    This closes #11823
",790956,9439,371700,"Rui Li","lirui@apache.org","GitHub","noreply@github.com"
"8126","apache/flink","889dabbf9db71ae38ad62c4288e4d5b0c42b2596",1,"2020-03-30 15:00:00+02:00","[FLINK-16779][table] Fix RAW type creation during
type inference
",791635,9446,371881,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8127","apache/flink","dcd81133fdd16804d6ff855d0ad74280d0396587",4,"2020-04-22 16:15:33+02:00","Revert ""[FLINK-14499][metric] MetricRegistry#getMe
tricQueryServiceGatewayRpcAddress is Nonnull""
This reverts commit
0cf9c2846ad1b293b91059d172dd68dd0ffbf803.
",791922,9451,372001,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8128","apache/flink","04d6bc6fe54297bcff93cc130e60ef9074f3ad54",2,"2020-04-09 15:45:50+02:00","[FLINK-17072] Let ResourceManager use random
endpoint id  This commit ensures that every
ResourceManager started by the same JVM process
will have a different endpoint id. This ensures
that no new RM will receive messages sent to an
old RM.
",792241,9454,372116,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8129","apache/flink","c7ecfbe8bd47292702e4e2b94d6d54f3989f4998",1,"2020-04-09 15:54:34+02:00","[FLINK-17072] Let Dispatcher use random endpoint
id  This commit ensures that every Dispatcher,
running in the same JVM, is started with a
different endpoint id. This ensures that no new
Dispatcher instance will receive messages sent to
an old instance.  This closes #11693.
",792179,9452,372074,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8130","apache/flink","851420014584fdfd91308937cd913917c11cf4bd",1,"2020-04-23 10:53:27+02:00","[FLINK-17308] Add regular cleanup task for
ExecutionGraphCache  The WebMonitorEndpoint now
schedules are regular cleanup task which runs
every 2 * WebOptions.REFRESH_INTERVAL and tries to
clean up expired ExecutionGraphCache entries. This
ensures that we will remove unused entries.  This
closes #11879.
",792782,9461,372392,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8131","apache/flink","a864a8e89eaeb2f5363f1991c7339f7ddae7426f",1,"2020-03-08 16:37:48+08:00","[hotfix][yarn][test] Avoid using Mockito for
NMClientAsync in YarnResourceManagerTest.
",793490,9467,372565,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8132","apache/flink","f0193565c33dea816be14f859ca8c02b034ec617",2,"2020-04-09 15:08:28+08:00","[FLINK-16438][yarn] YarnResourceManager starts
workers with resources requested by SlotManager.
This means YarnResourceManager no longer: - be
aware of the default task executor resources -
assumes all workers are identical
",793931,9469,372637,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8133","apache/flink","2e313f026cf3a9e8896cd2816ae5c847894c4fd7",3,"2020-03-19 02:41:11+08:00","[FLINK-16404][runtime] Avoid caching buffers for
blocked input channels before barrier alignment
This commit is the first part of implementation to
solve the dead lock problem when reducing the
exclusive buffer of receiver side to 0.  Reducing
the number of exclusive buffers of receiver side
to 0 can bring several advantages (may at the cost
of some performance regression). One is that
memory can be saved from the reduced network
buffer usage. Another important benefit is that
the in-flight data can be reduced so we can speed
up checkpoint in cases of back pressure. However,
for the current implementation, reducing the
exclusive buffer of receiver side can incur
deadlock problem because all the floating buffers
might be requested away by some blocked input
channels and never recycled until barrier
alignment.  To solve the problem, this commit
mainly makes the following changes: 1. At sender
side, after sending a checkpoint barrier when
aligned exactly-once checkpoint mode is used, the
outgoing channel will be blocked and no data will
be sent out until the channel is unblocked. 2. At
receiver side, no buffer will be stored in
BufferStorage any more and after a checkpoint is
completed or canceled, the receiver side will
resume data consumption and unblock the upstream
by sending a special event to the sender side.
Note that after this patch we still can't set the
exclusive buffer of receiver side to 0 because
there is still deadlock problem which will be
totally solved in the following up patches.
",793433,9466,372387,"kevin.cyj","kevin.cyj@alibaba-inc.com","zhijiang","wangzhijiang999@aliyun.com"
"8134","apache/flink","537a56441a49b67ed2d8f271e079ef6b5094f506",1,"2020-04-27 11:24:34+08:00","[FLINK-17390][yarn] Fix Hadoop 2.10+ compatibility
for WorkerSpecContainerResourceAdapter.  This
closes #11916.
",793778,9470,372473,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8135","apache/flink","63b13c5ffe89a2bb44b735a71615a2b07e3536ad",5,"2020-03-10 15:32:35+08:00","[hotfix][runtime] Code deduplication in
ResourceManagerFactory and its implementations.
",793805,9470,372473,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8136","apache/flink","c47ee2814aa0ef62237797626daaea95d6d52ca7",2,"2020-03-10 16:38:21+08:00","[FLINK-16440][runtime][metrics] Introduce
SlotManagerMetricGroup for registering related
metrics inside SlotManager.
",793844,9471,372496,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8137","apache/flink","e7e5e1dadad4b385b00d3e4d89eead03e77921a2",1,"2020-03-10 16:42:24+08:00","[FLINK-16440][runtime] Introduce multiplication
for ResourceProfile.
",793911,9471,372496,"Xintong Song","tonysong820@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8138","apache/flink","02978da7c49b33def54f8cb8cb4ceb57b022cfd5",8,"2020-03-30 20:55:30+08:00","[FLINK-16645][network] Limit the maximum backlogs
in subpartitions  In the case of data skew, most
of the buffers in #LocalBufferPool can be
requested away by one certain partition, which
increases the in-flight data and slow down the
buffer alignment.  To solve this problem, we add a
config to limit the maximum backlog per
subpartition. In this way, we can check
subpartition's backlog and make the stream task
unavailable if the limit is exceeded.
",795323,9495,373167,"Jiayi Liao","bupt_ljy@163.com","Piotr Nowojski","piotr.nowojski@gmail.com"
"8139","apache/flink","130967a4db392d5068f1fbab78d113e52f320353",1,"2020-04-29 11:19:29+08:00","[FLINK-16996][table-common] Add binary
implementations of internal data structures  This
closes #11925
",797969,9508,374154,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"8140","apache/flink","4ff59a72b4c8532510cca349840fcbe668de911e",12,"2020-04-29 11:26:28+08:00","[FLINK-16996][table] Refactor planner and runtime
to use new data structures  This closes #11925
",795923,9489,373230,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"8141","apache/flink","6d19a40e9954a0ceaca2965091080083016f7a66",29,"2020-04-30 13:48:18+02:00","[hotfix][table-common] Reduce number of public
extraction classes
",798375,9505,373872,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8142","apache/flink","1fe57abb6a07d0575f30576ed762e592cfc235a3",2,"2020-04-23 10:24:53+02:00","[FLINK-17373][table] Support the NULL type for
function calls  Enables support for untyped NULL
literals in function calls. The null type remains
a helper type. We don't expose this type through
the DDL or allow it as a function return type.
More cases of NULL can be supported once we enable
type coercion.  This closes #11904.
",798492,9506,373921,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8143","apache/flink","93d4c35cad0cd95160f8269b661f01e6d7fa0bb9",1,"2020-04-16 13:31:20+02:00","[FLINK-16661] Move the
ClassPathPackagedProgramRetriever to flink-clients
This is done because the
ClassPathPackagedProgramRetriever is going to be
also used by other ApplicationEntrypoints in the
future, including the
YarnApplicationClusterEntryPoint.
",798526,9507,373929,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8144","apache/flink","3c4cd5cc69fa784f233d9d0f869d288c7688a806",1,"2020-04-16 14:55:39+02:00","[FLINK-16661][yarn] Add the
YarnApplicationClusterEntryPoint  This is the
ClusterEntryPoint to be used when running an
application on Yarn, in ""Application Mode"" (see in
FLIP-85).
",798649,9508,373959,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8145","apache/flink","5e65d583b9f44b8f2fb929bd5c3fa9213c05e56b",3,"2020-04-16 14:07:42+02:00","[FLINK-16661] Add support for Application Mode to
Yarn  This commit adds Yarn support for
Application Mode (FLIP-85). Shipping of the user-
jar is done the same way the 'yarn.per-job-
cluster.include-user-jar' flag does it.
",798729,9510,374000,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8146","apache/flink","4dc1f7e8c22b970cd0656d40419d3745c3277c71",2,"2020-04-23 18:19:58+02:00","[FLINK-14816] Let TaskManagerThreadDumpHandler
return JSON response  Instead of serving plain
text, this commit changes the
TaskManagerThreadDumpHandler to return a JSON
response. This allows to further extend this
handler to not only generate a thread dump of all
threads but also for a sub set. Morever, it allows
to return a more structured return value in the
future.  This closes #11887.
",799176,9519,374223,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8147","apache/flink","fef974d7df1a9dabd62f3288c086185d69298bc1",3,"2020-04-30 11:03:47+02:00","[FLINK-16997][table-common] Add new factory
interfaces and discovery utilities  Implements the
new factory interfaces mentioned in FLIP-95. Adds
new factory utilities that can be used for
FLIP-122 and future factories.  It adds
TestDynamicTableFactory and TestFormatFactory for
reference implementations of new factories.  This
closes #11959.
",801201,9551,375410,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8148","apache/flink","fdd128af3be23ad5b21055f3fee69602bf7712b5",4,"2020-05-05 12:08:01+02:00","[FLINK-17514] Harden
ExceptionUtils.tryEnrichTaskManagerError,
.isMetaspaceOutOfMemoryError and
.isDirectOutOfMemoryError to handle null values
Error handling code should not fail. Hence, this
commit changes the methods
ExceptionUtils.tryEnrichTaskManagerError,
ExceptionUtils.isMetaspaceOutOfMemoryError and
ExceptionUtils.isDirectOutOfMemoryError to
properly handle a null argument.  This closes
#11994.
",802140,9555,375607,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8149","apache/flink","df9080b06be8e06ca5fe2383c8c2115f13f72690",4,"2020-04-21 14:48:36+02:00","[hotfix] Extract JobLeaderService interface +
rename impl into DefaultJobLeaderService  This
commit allows to provide different
JobLeaderService implementations to the
TaskExecutor.
",802655,9560,376288,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8150","apache/flink","fdaf5fd9fb2d2bdcc8c952b09baf0872c51d1869",1,"2020-05-05 18:25:43+02:00","[hotfix][tests] Add
TestingFatalErrorHandlerResource  The
TestingFatalErrorHandlerResource provides a
TestingFatalErrorHandler instance and checks when
the reource is being closed whether an exception
has been caught. If this is the case, then the
exception will be rethrown.
",803024,9567,376470,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8151","apache/flink","154a13bf9131268040f02402cd0d12c11565de58",1,"2020-04-28 19:24:54+02:00","[FLINK-16408] Introduce JobTable which manages the
lifecycle of job services on the TaskExecutor  The
JobTable is a TaskExecutor service and is
responsible for managing the lifecycle of
TaskExecutor services which are bound to a job.
One of these services is the LibraryCacheManager
which will created for every job only once.  Once
the first slot for a new job is requested from the
TaskExecutor it will create a new JobTable.Job
entry which is initialized with the job services.
As long as the TaskExecutor has slots allocated
for a job, it will keep the job services running.
When the last slot is freed, the TaskExecutor will
close the JobTable.Job and thereby also close all
associated services.  Once the TaskExecutor
establishes a connection to the leading JobManager
for a given job, it will start additional services
which are only valid as long as the connection to
the JobManager exists. In order to model this
behaviour, the JobTable.Job offers a
JobTable.Job#connect() method which transforms the
JobTable.Job into a JobTable.Connection. This
class can be used to retrieve the required
services to talk to the JobManager as well as to
execute tasks.  Once the TaskExecutor loses the
connection to the leading JobManager, the
JobTable.Connection can be disconnected via
JobTable.Connection#disconnect(). Calling this
method will transform the JobTable.Connection into
a JobTable.Job and closes all services which are
only valid as long as the connection to the
JobManager exists.  The JobTable replaces the
JobManagerTable service.
",803400,9570,376648,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8152","apache/flink","7f503f21d27a31a02c7577fa3d39d27dc4e181c6",3,"2020-04-30 18:00:50+02:00","[FLINK-16408] Bind user code class loader to
lifetime of Job on TaskExecutor  This commit binds
the user code class loader to the lifetime of a
JobTable.Job on the TaskExecutor. This means that
the TaskExecutor will not release the user code
class loader as long as it contains an allocated
slot for the respective job. This will ensure that
a TaskExecutor can reuse the user code class
loader across failovers (task and JM failovers).
By reusing user code class loaders Flink will
avoid to reload classes and, thus, decrease the
pressure it puts on the JVM's metaspace. This will
significantly improve situations where a class
leak exists because Flink won't deplete the JVM's
metaspace under recoveries.  In order to achieve
this, the LibraryCacheManager has been changed.
The LibraryCacheManager only supports to register
a LibraryCacheManager.ClassLoaderLease for a given
job. As long as there is a single valid
ClassLoaderLease, the LibraryCacheManager will not
release the associated user code class loader. A
LibraryCacheManger.ClassLoaderLease needs to be
resolved in order to create and then obtain the
user code class loader. This is done via LibraryCa
cheManager.ClassLoaderHandle#getOrResolveClassLoad
er. Upon calling this method the first time, one
specifies the set of jars and class paths the user
code class loader should be started with. Every
subsequent call to this method will ensure that
the underlying class loader contains the set of
specified jars and class paths. If this is not the
case, then this method will fail. Differently
said, the system only supports one user code class
loader per job at the moment.  Once the owner of
the LibraryCacheManager.ClassLoaderLease no longer
needs the user code class loader, it should call
LibraryCacheManager.ClassLoaderLease#close in
order to invalidate the lease. Once all leases for
a given job are invalidate, the
LibraryCacheManager will release the underlying
user code class loader.  At the moment, there is
only a single lease per job which is owned by the
JobTable.Job and will be created when the
JobTable.Job will be created. That way we ensure
that the user code class loader lives as long as
the JobTable.Job.  In order to ensure that we
reuse the user code class loader as long as the
TaskExecutor has allocated slots for a given job, 
TaskExecutorSlotLifetimeTest#testUserCodeClassLoad
erIsBoundToSlot has been added.
",803221,9568,376517,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8153","apache/flink","0114338da5ce52677d1dfa1ab4350b1567dc3522",2,"2020-04-29 19:36:08+02:00","[FLINK-16638][runtime][checkpointing] Flink
checkStateMappingCompleteness doesn't include
UserDefinedOperatorIDs
",803327,9569,376524,"edu05","eduardo.winpenny@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8154","apache/flink","49956b5c396e5979ef6874bc039c8d28105116fb",7,"2020-05-08 17:42:02+08:00","[FLINK-17030][sql-parser] Add primary key syntax
for CREATE TABLE  This closes #11950
",804062,9578,376960,"yuzhao.cyz","yuzhao.cyz@gmail.com","Jark Wu","jark@apache.org"
"8155","apache/flink","28ab4598b322bfeba12db14586cd510857519af4",1,"2020-05-08 17:49:22+08:00","[FLINK-17030][table-planner-blink] Add primary key
syntax for ALTER TABLE  This closes #11950
",804539,9583,377098,"yuzhao.cyz","yuzhao.cyz@gmail.com","Jark Wu","jark@apache.org"
"8156","apache/flink","39d70f053b4667e7e932ce3dea64695e30774da4",1,"2020-05-10 10:51:58+08:00","[FLINK-16990][table-planner-blink] Support
LookupTableSource in blink planner  This closes
#12047
",804741,9585,377159,"Jark Wu","jark@apache.org","GitHub","noreply@github.com"
"8157","apache/flink","90e6358f849a6ce4f5fb09954c8abe6431915457",1,"2020-05-08 07:38:57+02:00","[hotfix][network] Extract a general buffer manager
for future reuse by recovered input channel
",806442,9604,377844,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"8158","apache/flink","bcf7e287f52aa3d5eae9fc49938c85be676382b9",1,"2020-05-08 08:17:28+02:00","[hotfix][network] Maintain MemorySegmentProvider
from InputChannel to SingleInputGate
",806434,9604,377842,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"8159","apache/flink","d7525baf093035c9b0fe125602814833388d1973",5,"2020-04-30 12:19:27+02:00","[FLINK-16536][network][checkpointing] Implement
InputChannel state recovery for unaligned
checkpoint  During recovery process for unaligned
checkpoint, the input channel state should also be
recovered besides with existing operator states.
We considered three guarantees during the
implementation: 1. Make input recovery happen
after the output recovery for providing more
floating buffers on output side firstly. 2. Make
partition request happen after input recovery for
avoiding new data overtaking the previous state
data. 3. Introduce a dedicated single IO executor
for unspilling the channel state one by one, to
avoid potential random IO.  This closes #11687.
",807288,9610,378042,"Zhijiang","wangzhijiang999@aliyun.com","zhijiang","wangzhijiang999@aliyun.com"
"8160","apache/flink","89d46fac30cdf8b86ae9709bf86f4d9d42802014",4,"2020-05-12 16:28:36+08:00","[FLINK-17609][python] Execute the script directly
when user specified the entry script with ""-py""
(#12079)
",807300,9610,378041,"Shuiqiang Chen","acqua.csq@alibaba-inc.com","GitHub","noreply@github.com"
"8161","apache/flink","92f28c70da57e5593aeb9bbfb4ad66f16f261876",2,"2020-05-12 17:17:11+08:00","[FLINK-17434][hive] Hive partitioned source
support streaming read    This closes #12004
",808071,9617,378248,"Jingsong Lee","jingsonglee0@gmail.com","GitHub","noreply@github.com"
"8162","apache/flink","b83fa2e2c4b7bb24349181419783f316a449e0da",1,"2020-04-22 17:45:36+02:00","[FLINK-17002] Add util for merging ""tables"" for
CREATE TABLE LIKE  Co-authored-by: Dawid
Wysakowicz <dwysakowicz@apache.org>
",809076,9620,378339,"Aljoscha Krettek","aljoscha@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8163","apache/flink","355184d69a8519d29937725c8d85e8465d7e3a90",6,"2020-04-21 16:04:20+02:00","[FLINK-17342][checkpointing] Enqueue savepoint
requests in UC mode  Motivation: current behavior
of forcing savepoints causes excess of max-
concurrent-checkpoints limit. Which violates
current Unaligned Checkpoints (UC) assumption of a
single concurrent barrier.  Changes: 1. Remove
periodicTriggeringSuspended. Instead, if periodic
request can't be executed now is ignored. 2. Check
queue before executing a new request (not after).
3. Execute queued request when pending checkpoint
is completed (instead of resuming timer). 4. Don't
set CheckpointRequest.force in UC mode. 5. Change
requests queue to PriorityQueue to prioritize
savepoints. Limit its size. 6. For savepoints, if
running in UC mode and limit is reached then
enqueue request instead of forcing it 7. Don't
throw trigger exceptions. CheckpointFailureManager
ignores them
",809653,9625,378413,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","piotr.nowojski@gmail.com"
"8164","apache/flink","6f724019eb1b751934081572175c14f120510103",16,"2020-05-11 11:46:53+02:00","[FLINK-17620] Rename
StandaloneJobClusterEntryPoint to
StandaloneApplicationClusterEntryPoint  This PR
renames the entrypoint but DOES NOT change the
scripts as this would be a breaking change for
already existing deployments and such a change
would require a more thorough and more visible
discussion with the community.  This closes
#12087.
",809937,9628,378491,"Kostas Kloudas","kkloudas@gmail.com","Kostas Kloudas","kkloudas@gmail.com"
"8165","apache/flink","64c732f0e4457260fc084054cec3cfb2f9242167",1,"2020-05-09 14:59:51+08:00","[FLINK-16991][table-planner-blink] Support
DynamicTableSink in blink planner  This closes
#12086
",811613,9641,378943,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"8166","apache/flink","ac54454f789c5eae88ac59281ca422f34c149641",2,"2020-05-05 19:53:57+02:00","[FLINK-17476][tests] test recovery from snapshot
created in different UC mode
",811861,9644,379001,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","piotr.nowojski@gmail.com"
"8167","apache/flink","6a6a439517b99d939758ef9275d40f88f5700c4a",6,"2020-05-13 20:55:49+08:00","[FLINK-17537][jdbc] Refactor flink-jdbc connector
structure  (1) Use Jdbc instead of JDBC.  (2) Move
interfaces and classes to
org.apache.flink.connector.jdbc.  (3) Keep ancient
JDBCOutputFormat, JDBCInputFormat and
ParameterValuesProvider in old package.  (4) Add
tests/ITCase for ancient Classes and new classes.
(5) rename flink-jdbc module to flink-connector-
jdbc.  (6) update docs.    This closes #12036
",812489,9647,379119,"Leonard Xu","xbjtdcq@163.com","GitHub","noreply@github.com"
"8168","apache/flink","c84e48cfe6c27cf738850e5d802322c3ca30b48f",7,"2020-05-04 11:03:38+08:00","[FLINK-10934][k8s] Support application mode for
kubernetes  This closes #12003.
",812841,9649,379190,"wangyang0918","danrtsey.wy@alibaba-inc.com","Kostas Kloudas","kkloudas@gmail.com"
"8169","apache/flink","3bb18bb2122147162fbd05f3636255b6e5736906",1,"2020-05-14 18:44:26+08:00","[FLINK-17665][network] Replace isBuffer with
BufferType field in BufferResponse  The current
isBuffer field in BufferResponse can only
represent whether it is buffer or event, so it has
to deserialize the respective buffer to get the
specific event type for some requirements on
downstream side.    By introducing the BufferType
into the BufferResponse, we can get the required
event type directly to avoid performance concerns.
",813251,9651,379214,"caoyingjie","kevin.cyj@alibaba-inc.com","GitHub","noreply@github.com"
"8170","apache/flink","96b86fc296ae3cd61c585534682b1664d32f143c",1,"2020-05-13 12:06:03+02:00","[FLINK-17222][table-common] Ensure deterministic
field order in FieldsDataType  New method
DataType.getChildren() provides better guarantees.
This closes #12121.
",814061,9661,379412,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8171","apache/flink","96a633725f1b4616e40576b97473308b289a8028",2,"2020-05-13 15:25:36+02:00","[FLINK-17668][table] Fix shortcomings in new data
structures  This fixes the following shortcomings
in the new data structures:  - The some data
structures do not provide a hashCode/equals for
testing. - RawValueData cannot be created from
bytes. - Accessing elements requires dealing with
logical types during runtime. - Null checks are
performed multiple times during runtime even for
types that are declared as NOT NULL.  This closes
#12130.
",814487,9662,379511,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8172","apache/flink","9fe920fdc6f7eeaf2d99901099c842cfd0f1380a",5,"2020-05-15 07:46:31+08:00","[FLINK-14807][rest] Introduce REST API for
communication between clients and operator
coordinators  This closes #12037
",815031,9673,379800,"TsReaper","tsreaper96@gmail.com","GitHub","noreply@github.com"
"8173","apache/flink","282da0dd3e2def9e0ea6693f953d2733eb663e70",1,"2020-05-14 14:56:34+08:00","[FLINK-17596][python] Move the Python UDF runner
script out of the jar of flink-python  This closes
#12092.
",816284,9685,380123,"Wei Zhong","weizhong0618@gmail.com","Dian Fu","dianfu@apache.com"
"8174","apache/flink","cd1f858b5b69a6722dabd8491d1c327a086a719d",1,"2020-04-19 20:32:09+02:00","[FLINK-17218][tests] Adding recoverable failures
and correctness checks to
UnalignedCheckpointITCase.
",817709,9704,380752,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8175","apache/flink","25279ed0a3cf7c5fa8d1ad1b3b44990782924362",2,"2020-05-13 17:29:56+08:00","[FLINK-17587][runtime] Extract
StreamingFileSinkHelper from StreamingFileSink
",818359,9709,380868,"JingsongLi","lzljs3620320@aliyun.com","Jingsong Lee","jingsonglee0@gmail.com"
"8176","apache/flink","2b42209dd658b689bbc531e4cc833ba46b2f209e",6,"2020-05-15 09:34:04+02:00","[FLINK-17719][task][checkpointing] Provide
ChannelStateReader#hasStates for hints of reading
channel states  Currently we rely on whether
unaligned checkpoint is enabled to determine
whether to read recovered states during task
startup, then it will block the requirements of
recovery from previous unaligned states even
though the current mode is aligned. We can make
`ChannelStateReader` provide the hint whether
there are any channel states to be read during
startup, then we will never lose any chances to
recover from them.
",819025,9718,381151,"Zhijiang","wangzhijiang999@aliyun.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8177","apache/flink","7c6251ede2e164ce29749088a4cd0903f6a486aa",4,"2020-05-09 14:45:00+08:00","[FLINK-17734][streaming] Add an operator
coordinator and sink function to collect sink
data.  * The coordinator acts as a proxy between
the client and the sink function, because in some
environments clients can't directly talk to task
managers. * The sink function uses a simple to
handle failures in order to achieve exactly-once
semantics. See {{CollectSinkFunction}} for more
details.  This closes #12069
",820318,9733,381593,"TsReaper","tsreaper96@gmail.com","Kurt Young","kurt@apache.org"
"8178","apache/flink","b02e7c0937248a5b5348fe176b166a313313abcf",1,"2020-05-15 09:50:08+02:00","[hotfix][table-common] Fix conversion class of
element array data types
",821166,9739,381828,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8179","apache/flink","66c7e491d8c2f58887fd7c4cd4eca408a182140c",1,"2020-01-17 17:03:59+08:00","[FLINK-15629][runtime] Remove unused
JobManagerSharedServices#restartStrategyFactory
",822347,9769,382550,"Zhu Zhu","reedpor@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8180","apache/flink","6f64213dbdfd0b1e75f503007dd026162881c9c7",1,"2020-05-15 18:12:24+02:00","[FLINK-15629] Unify
DefaultSchedulerBatchSchedulingTest with
BatchSchedulingTestBase  This closes #10883.
",822337,9768,382530,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8181","apache/flink","c5583c75394972dd4564132e3a0896a7f4f85a19",2,"2020-04-25 20:35:38+08:00","[FLINK-5763][state backends] Make savepoint
selfcontain and relocatable
",822484,9769,382568,"klion26","qcx978132955@gmail.com","Stephan Ewen","sewen@apache.org"
"8182","apache/flink","d6bc0d5b845f7ade465e69c30e07be2947bb4b5e",14,"2020-05-16 01:16:50+02:00","[FLINK-5763][state backends] (follow-up) Rework
MetaData Serializers and externalPointer passing
This fix has several goals:  (1) Change the
pointer / path resolution parsing from a static
variable to a parameter that is passed. The
serializers are singleton instances and currently
assume to be usable in a multi-threaded manner.
The static variables prevent this, usng the
context object parameter restores this behavior.
(2) Lower level serialization methods should not
expose themselves directly to the tests. This
methods makes (almost) all lower level
serialization methods instance methods and
package-private. Static access methods are
gathered in one place, as a workaround for tests
that require accesd to those lower level methods
(even through they should not).  (3) With more
unified access to the methods from tests, we can
now make prevent that tests need to be aware of
the the context object or external pointer
parameter.  (4) Minor cosmetic cleanups around
method grouping.
",822603,9770,382633,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8183","apache/flink","1cceb3ee3f109aefaeec440a87651053d0f4c191",4,"2020-05-10 20:04:42+02:00","[FLINK-10740][DataStream API] Add a utility
SimpleVersionedListState
",822665,9771,382681,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8184","apache/flink","61d0344cb973fd42c210d9a97f3ea1c0697445ce",1,"2020-05-10 20:50:29+02:00","[FLINK-10740][DataStream API] Simplify
SourceOperator by using SimpleVersionedListState
",822634,9771,382679,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8185","apache/flink","1670f1605db0923bac233f60fc56d41a2da4da70",3,"2020-05-15 22:24:13+08:00","[FLINK-17028][hbase] Introduce a new HBase
connector with new property keys  This closes
#12178
",823609,9780,382948,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"8186","apache/flink","e3413106ccd030e44d5e4690430c841370a1f988",7,"2020-05-13 13:31:58+02:00","[FLINK-17674][state] Type OperatorCoordinator
state in checkpoints strictly to
ByteStreamStateHandle  State restore on the master
side happens in the JobManager's main thread and
must hence not do any potentially blocking I/O
operations. Typing the state to
ByteStreamStateHandle makes sure that we can
retrieve the data directly without I/O as a strict
contract.  If state restoring becomes an
asynchronous operation we can relax this
restriction.
",823606,9780,382946,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8187","apache/flink","9f30c7fc0b8dbbcbb9c9c8910fd8b48ad84bb9cd",4,"2020-05-11 22:15:50+02:00","[FLINK-16177][refactor] Make test setup logic for
OperatorCoordinatorSchedulerTest more flexible.
",823801,9781,382999,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8188","apache/flink","2430dd8b8e38c284a69c71e9be6098e7db2d8ca4",1,"2020-05-12 17:19:16+02:00","[FLINK-17672][scheduler] OperatorCoordinators
receive failure notifications on task failure
instead of restarts
",823822,9781,383005,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8189","apache/flink","b3da4e18873dd6e31404c24ce877ff79c19c9300",5,"2020-05-12 18:44:20+02:00","[FLINK-10740][scheduler] Add failure reason to
OperatorCoordinator.failTask(...)
",823827,9781,383005,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8190","apache/flink","52f7b9d070f73ee6acf2a87ba81d3d243d01f845",2,"2020-05-13 12:43:58+02:00","[FLINK-16177][checkpointing] Integrate
OperatorCoordinator fully with checkpointing.    -
This adds verious tests for OperatorCoordinator
checkpointing   - The checkpoint coordinator also
restores state to the OperatorCoordinator
",824019,9781,383030,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8191","apache/flink","bfef3db4bd95d03b4d551d99cd10aedde1c326fc",2,"2020-05-14 19:05:22+02:00","[FLINK-17702][tests][refactor] Refactor test utils
to support different failover strategies.
",824066,9781,383073,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8192","apache/flink","2bbf8ed32a7fc29dd5f0c941f451bd3a7a6d0d1b",7,"2020-05-17 10:10:27+08:00","[FLINK-17448][sql-parser-hive] Implement alter DDL
for Hive dialect    This closes #12108
",825057,9796,383462,"Rui Li","lirui@apache.org","GitHub","noreply@github.com"
"8193","apache/flink","81c37384e5c607cc8abd65b7db79fce78c925a62",3,"2020-05-08 14:46:18+08:00","[FLINK-17451][table][hive] Implement view DDLs for
Hive dialect  This closes #12029
",825422,9806,383679,"Rui Li","lirui@apache.org","Kurt Young","kurt@apache.org"
"8194","apache/flink","d3c39090a73aeb928c78ecd63e1fd6190c0df1f1",2,"2020-05-17 21:07:07+08:00","[FLINK-17449][sql-parser-hive] Implement ADD/DROP
partitions    This closes #12195
",826050,9815,383898,"Rui Li","lirui@apache.org","GitHub","noreply@github.com"
"8195","apache/flink","8650e409763a9b4eba92c77cc02ca22edc0230af",4,"2020-05-17 21:47:31+08:00","[FLINK-17735][streaming] Add an iterator to
collect sink results through coordination rest api
This closes #12073
",828097,9837,384575,"TsReaper","tsreaper96@gmail.com","GitHub","noreply@github.com"
"8196","apache/flink","0ce2af04963b51397d9b0e210475e69e36d60f36",2,"2020-05-15 20:06:40+02:00","[FLINK-17027] Introduce a new Elasticsearch 7
connector with new property keys
",829762,9858,385093,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8197","apache/flink","2cff3d217fac1fcf1db9e682996d38a61544ebc0",5,"2020-04-01 12:51:23+08:00","[FLINK-17407] Forward extended resource request to
YARN.
",830971,9873,385579,"Yangze Guo","karmagyz@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8198","apache/flink","22112f12b07d20aed43705776cf93fbdc115ed23",4,"2020-04-24 12:06:24+08:00","[FLINK-17407] Instatiate and pass
ExternalResourceInfoProvider to RuntimeContext
",831364,9879,385739,"Yangze Guo","karmagyz@gmail.com","Till Rohrmann","trohrmann@apache.org"
"8199","apache/flink","339f5d84d0b7e9fe64534ea4e2adf7e35dee8398",5,"2020-05-13 21:15:03+08:00","[FLINK-17593][fs-connector] Support arbitrary
recovery mechanism for PartFileWriter  This change
includes two things: 1. Make the PartFileWriter
generic and decouple the PartFileWriter and
RecoverableStream. According to different pre-
commit / commit methods, this change allows us to
extend different types of PartFileWriter. 2. Make
the Bucket/Buckets depends on the PartFileFactory
instead of RecoverableWriter.  This closes #12132
",831670,9883,385883,"GuoWei Ma","guowei.mgw@gmail.com","JingsongLi","lzljs3620320@aliyun.com"
"8200","apache/flink","10c29b73fdbc2bcfe7cb6f9394ad8db7836041c3",4,"2020-02-04 17:34:20+01:00","[FLINK-15758][MemManager] Release segment and its
unsafe memory in GC Cleaner  After #9747, managed
memory is allocated from UNSAFE, not as direct nio
buffers as before 1.10. The releasing of segments
released also underlying unsafe memory which is
dangerous in general as there can be still
references to java objects giving access to the
released memory. If this reference ever leaks, the
illegal memory access can result in memory
corruption of other code parts w/o even
segmentation fault.  The solution can be similar
to how Java handles direct memory limit: -
underlying byte buffers of segments are registered
to phantom reference queue with a Java GC cleaner
which releases the unsafe memory - all allocations
and reservations are managed by a memory limit and
an atomic available memory - if available memory
is not enough while reserving, the phantom
reference queue processing is triggered to run
hopefully discovered by GC cleaners - memory can
be released directly or in a GC cleaner  The GC is
also sped up by nulling out byte buffer reference
in `HybridMemorySegment#free` which is
inaccessible anyways after freeing. Otherwise also
a lot of tests, which hold accidental references
to memory segments, have to be fixed to not hold
them. The `MemoryManager#verifyEmpty` checks that
everything can be GC'ed at the end of the tests
and after slot closing in production to detect
memory leaks if any other references are held,
e.g. from `HybridMemorySegment#wrap`.  This closes
#11109.
",832176,9895,386151,"Andrey Zagrebin","azagrebin@apache.org","Andrey Zagrebin","azagrebin@apache.org"
"8201","apache/flink","7abced6d7253845270e555f044fd2db774a54e3d",6,"2020-04-14 08:55:32+08:00","[FLINK-15102][datastream/api] Add
continuousSource() methods to the
StreamExecutionEvironment.  The patch also adds a
new SourceEventType of NoMoreSplitsEvent to allow
the SourceReaderBase to exit after all the work is
done.
",831890,9888,385956,"Jiangjie (Becket) Qin","jiangjie.qj@alibaba-inc.com","Jiangjie (Becket) Qin","jiangjie.qj@alibaba-inc.com"
"8202","apache/flink","adfd45fbbd826488e6a00cc8d8f6436fa2179579",4,"2020-05-16 13:20:25+02:00","[FLINK-16999][table] Enable new data structure
converters for connectors
",832258,9892,386027,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8203","apache/flink","5be27b090c80e97c611db83e04b5d82a8abced9d",1,"2020-04-20 16:49:18+02:00","[FLINK-17669] Use new WatermarkGenerator for per-
partition watermarking in KafkaConsumer
",835283,9928,387212,"Aljoscha Krettek","aljoscha@apache.org","Aljoscha Krettek","aljoscha@apache.org"
"8204","apache/flink","def4cbb762f849ce5b5c9c6bd367fd62bc8f45de",1,"2020-05-18 01:32:49+02:00","[FLINK-17781][coordination] Use Scheduler and
MainThreadExecutor in OperatorCoordinator.Context.
This needs (unfortunately) a switch to lazy
initialization of the context:    - The Scheduler
needs to be created before the OperatorCoordinator
Context are created.     One could do that by
creating the Coordinators lazily after the
Scheduler.    - The Scheduler restores the
savepoints as part of the scheduler creation, when
the ExecutionGraph     and the
CheckpointCoordinator are created early in the
constructor.    - That means the
OperatorCoordinator needs to exist (or an in
placeholder component, here the
OperatorCoordinatorHolder) needs to exist to
accept the restored state.  That brings us to a
cyclic dependency:    - OperatorCoordinator
(context) needs Scheduler and MainThreadExecutor
- Scheduler and MainThreadExecutor need
constructed ExecutionGraph   - ExecutionGraph
needs CheckpointCoordinator   -
CheckpointCoordinator needs OperatorCoordinator
Breaking the Cycle  To break this cyclic
dependency, this change introduces a form of lazy
initialization:   - We eagerly create the
OperatorCoordinators so they exist for state
restore   - We provide an uninitialized context to
them   . When the Scheduler is started (after
leadership is granted) we initialize the
context with the (then readily constructed)
Scheduler and MainThreadExecutor  This closes
#12225
",836300,9941,387822,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8205","apache/flink","f35679966eac9e3bb53a02bcdbd36dbd1341d405",2,"2020-05-04 20:17:38+02:00","[FLINK-16998][core] Add a changeflag to Row
Partial commit for supporting a changeflag without
backwards compatibility.  This closes #12103.
",836522,9942,387948,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8206","apache/flink","1c810e412bda53958f57f9e13d85e5a149baacba",3,"2020-05-19 18:39:39+08:00","[FLINK-17728] [sql-client] sql client supports
parser statements via sql parser  This closes
#12188
",837493,9956,388296,"godfrey he","godfreyhe@163.com","GitHub","noreply@github.com"
"8207","apache/flink","37f441a2fc27bf659e734d867a1f25e0e7046f8c",2,"2020-05-18 20:29:05+02:00","[FLINK-17547][task] Use iterator for unconsumed
buffers. Motivation: support spilled records
Changes: 1. change SpillingAdaptiveSpanningRecordD
eserializer.getUnconsumedBuffer signature 2. adapt
channel state persistence to new types  No changes
in existing logic.
",837817,9958,388363,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8208","apache/flink","179de29f0966280f03e9d4ef631c6338125f5c82",1,"2020-05-07 15:30:56+02:00","[FLINK-17547][task][hotfix] Extract
RefCountedFileWithStream from RefCountedFile
Motivation: use RefCountedFile for reading as
well.
",837848,9960,388404,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8209","apache/flink","71e64989ee0b7109271ced5e1af03cc3694783e9",1,"2020-05-18 17:40:17+08:00","[hotfix][table] Improve testing implementation for
the new projection push down
",838012,9963,388446,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"8210","apache/flink","57e4748614bdbe06769b147bc264e4a400784379",2,"2020-05-18 17:48:08+08:00","[FLINK-17797][connector/hbase] Align the behavior
between the new and legacy HBase table source
This closes #12221
",838121,9964,388473,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"8211","apache/flink","1f6b1e6b8ffb38f196c2a1c6348cb96935e9a9cc",3,"2020-05-17 21:30:30+08:00","[FLINK-8871][checkpoint][tests] Add ITcase for
NotifiCheckpointAborted mechanism
",839173,9967,388692,"Yun Tang","myasuka@live.com","Piotr Nowojski","piotr.nowojski@gmail.com"
"8212","apache/flink","1cce2c5f7fe170ee7208c4d2d82cb9ad391d5d74",6,"2020-05-25 13:04:51+02:00","[hotfix][table-common] Add logical type
root/family argument strategies
",840123,9971,388873,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8213","apache/flink","5a9fe5d431cc7722a0af0ab2d6a95460e7e38e77",1,"2020-05-27 10:46:46+08:00","[FLINK-17934][fs-connector] Add listener to
Buckets and remove listener for BucketsBuilder
",840152,9970,388863,"Gao Yun","gaoyunhenhao@gmail.com","Jingsong Lee","jingsonglee0@gmail.com"
"8214","apache/flink","5070ee9075cda6cb4048636ee1a9f3b384166fc7",1,"2020-05-19 20:09:17+02:00","[FLINK-17899][runtime][refactor] Make
ProcessingTimeService always available to
operators.  Previously, it was not always supplied
to operators to not create it unless needed. This
change puts a lazy factory into the parameters
supplied to all operators.
",840484,9973,389018,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8215","apache/flink","54f1a4c8071a6d71111185449e795b2f00fa49e9",4,"2020-05-19 20:37:31+02:00","[FLINK-17899][runtime] Integrate FLIP-126
Watermarks with FLIP-27 Sources
",841236,9988,389499,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8216","apache/flink","44fba5fe8e4be383795211ab3d3f6259331e68f4",1,"2020-05-19 16:58:22+02:00","[FLINK-17558][netty] Release partitions
asynchronously
",841997,9991,389701,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"8217","apache/flink","cfda623240e50ca999d8ab054e4459c7ed25cd79",2,"2020-01-21 18:19:57+08:00","[FLINK-13632] Port TimerSerializer test to
TypeSerializerUpgradeTestBase
",842346,9993,389811,"klion26","qcx978132955@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"8218","apache/flink","dc84941330b50cc57bd1ac400f388be98825dd0b",1,"2020-02-15 14:05:55+08:00","[FLINK-13632] Port KafkaSerializer upgrade test to
TypeSerializerUpgradeTestBase
",843491,9994,390254,"klion26","qcx978132955@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"8219","apache/flink","c1ee4f8b45d45588ca5eea7069845cc6e0d83852",1,"2020-02-21 19:51:18+08:00","[FLINK-13632] Port Kafka011Serializer upgrade test
to TypeSerializerUpgradeTestBase
",844043,9994,390434,"klion26","qcx978132955@gmail.com","Aljoscha Krettek","aljoscha@apache.org"
"8220","apache/flink","6257c9e8c60d5221e8bc2cf1ba6a97ee49d30758",8,"2020-05-27 11:47:27+02:00","[FLINK-13782] Implement input type inference for
logical functions  This PR implements input type
strategy for functions: EQUALS/NOT
EQUALS/GREATER/GREATER EQUAL/LESS/LESS EQUAL
",844418,9997,390511,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8221","apache/flink","1a721d855998a7c91415312d4890d7d4f916e163",5,"2020-05-18 01:46:32+02:00","[FLINK-16986][coordination] (part 1) Provide
exactly-once guarantees around checkpoints and
operator event sending.  This closes #12234
",845183,10004,390763,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8222","apache/flink","b233aa84a1b0d8354211506219d0f785bccae870",1,"2020-05-28 18:18:41+02:00","[FLINK-16986][coordination][refactor] Reduce
dependencies of OperatorCoordinatorHolder and
OperatorCoordinatorCheckpointContext  This
simplifies both testing and future refactoring.
",845199,10005,390778,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8223","apache/flink","37f7db38290df065669178cc6407edd5055f1951",3,"2020-05-28 18:19:30+02:00","[FLINK-16986][coordination] (part 2) Make
OperatorCoordinatorHolder driven by main thread
executor
",845598,10006,390870,"Stephan Ewen","sewen@apache.org","Stephan Ewen","sewen@apache.org"
"8224","apache/flink","11d588c08ebac274a9e309c5d38f5ec1244f9012",2,"2020-05-28 10:36:13+02:00","[hotfix][table-common] Accept AbstractDataType for
fields
",845561,10005,390972,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8225","apache/flink","eab51684c24cac520958bd58876abe51865b2c16",1,"2020-05-28 12:52:52+02:00","[FLINK-18001][table-planner] Add a new test base
for evaluating expressions  Adds a new test base
that makes it possible to properly test built-in
functions of both SQL and Table API. Including
error messages, full input and output data type.
This closes #12379.
",845776,10006,391009,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8226","apache/flink","64de78e36500b5a8c8720639ded4d1c5f963ad41",4,"2020-06-01 10:32:40+08:00","[FLINK-17887][table][connector] Improve interface
of ScanFormatFactory and SinkFormatFactory    We
improved the interfaces with the following
changes:  1. Have a common interface
DynamicTableSource.Context, and make Context of
ScanTableSource and LookupTableSource extend it,
and rename them to LookupContext and ScanContext
2. Change parameter of ScanFormat.createScanFormat
from ScanTableSource.Context to
DynamicTableSource.Context  3. Rename
ScanFormat.createScanFormat to
DecodingFormat#createRuntimeDecoder()  4. Rename
SinkFormat.createSinkFormat to
EncodingFormat#createRuntimeEncoder()  5. Rename
ScanFormatFactory to DecodingFormatFactory  6.
Rename SinkFormatFactory to EncodingFormatFactory
This closes #12320
",845750,10005,390971,"Jark Wu","jark@apache.org","GitHub","noreply@github.com"
"8227","apache/flink","1a69cb9fce629b0c458f5ea514d9ac8de008687f",1,"2020-05-29 18:10:22+02:00","[FLINK-16057][task] Optimize
ContinuousFileReaderOperator  Current approach of
re-enqueuing mails creates an overhead visible in
benchmarks. This change eliminates unnecessary re-
enqueueing of mails by checking
mailboxExecutor.isIdle.
",845827,10006,390981,"Roman Khachatryan","khachatryan.roman@gmail.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8228","apache/flink","21cb58625b607cf227cfd298595fdda3ed7c579a",1,"2020-06-03 10:38:29+08:00","[FLINK-17937][hive] Change some hive connector
tests to IT cases    This closes #12333
",845900,10006,390996,"Rui Li","lirui@apache.org","GitHub","noreply@github.com"
"8229","apache/flink","1d4bd2b2d2c5ba392f1cc801036b63d2fd8c483e",1,"2020-05-29 09:05:01+02:00","[FLINK-18005][table] Implement type inference for
CAST  This closes #12411.
",846316,10012,391086,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8230","apache/flink","84c290581694f17e08f9ba91be6eac70264b9d70",1,"2020-05-28 16:11:31+08:00","[FLINK-15687][runtime][test] Fix accessing
TaskSlotTable via TaskSubmissionTestEnvironment
not in RPC main thread.
",846786,10016,391221,"Xintong Song","tonysong820@gmail.com","Xintong Song","tonysong820@gmail.com"
"8231","apache/flink","bebe50346d9485fa2d962c5ed1d00da2778c8feb",1,"2020-06-04 13:22:56+02:00","[FLINK-18075] Remove deprecation of Kafka producer
ctor that take SerializationSchema
SerializationSchema is an important interface that
is widely spread and used in other components such
as Table API. It is also the most common interface
for reusable interfaces. Therefore we should
support it long term in our connectors. This
commit removes the deprecation of ctors that take
this interface.  Moreover it adds the most general
ctor that takes all producer configuration options
along with SerializationSchema. This makes it
feature equivalent with KafkaSerializationSchema
in respect to configuration of the producer.
",847150,10017,391276,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"8232","apache/flink","74fd2912d146cc2db103825f0aee2282a99b5774",2,"2020-06-04 13:17:27+02:00","[FLINK-18075] Wrap the SerializationSchema in
KafkaSerializationSchema in Kafka connector
",847386,10021,391358,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","wysakowicz.dawid@gmail.com"
"8233","apache/flink","0e8a53b30b4a5106f65b1005ba1ce4ab0449dd88",1,"2020-05-28 21:09:25+02:00","[FLINK-13782][table-api] Implement type strategies
for IF ELSE expression  This closes #12410
",847662,10023,391431,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8234","apache/flink","d27c88820dd8ed66dcd39bc488a26c4ccff1a41e",1,"2020-06-03 11:33:02+08:00","[FLINK-18061] [table] TableResult#collect method
should return a closeable iterator to avoid
resource leak  This closes #12473
",848331,10029,391687,"godfreyhe","godfreyhe@163.com","Dawid Wysakowicz","dwysakowicz@apache.org"
"8235","apache/flink","bac55c175b0d3a76395880d7aa2e5ae6484364fa",2,"2020-03-11 19:55:47+01:00","[FLINK-16225] Implement user class loading
exception handler  This closes #12446.
",848722,10032,391791,"Andrey Zagrebin","azagrebin@apache.org","Andrey Zagrebin","azagrebin@apache.org"
"8236","apache/flink","fcab7b3b37e8ba7d366c9703639b87f7a4906fbe",9,"2020-06-03 14:10:46+02:00","[FLINK-13784][table] Implement type inference for
math functions  This closes #12464.
",849742,10040,392102,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8237","apache/flink","8ef1e7dbbe2d98b79edd590c1df199f11ccc5ed5",3,"2020-06-06 00:02:55+08:00","[FLINK-18034][runtime] Remove unused
preferredLocations from
ExecutionVertexSchedulingRequirements
",849856,10044,392183,"Zhu Zhu","reedpor@gmail.com","Zhu Zhu","reedpor@gmail.com"
"8238","apache/flink","7054f97350efec83e3bf8b10b9b2c44f1a149cf1",1,"2020-05-18 12:40:53+08:00","[FLINK-17017][runtime] Allow to set whether a
physical slot payload will occupy the slot
indefinitely
",850321,10048,392255,"Zhu Zhu","reedpor@gmail.com","Zhu Zhu","reedpor@gmail.com"
"8239","apache/flink","4c16a3468c65b876ac687a3805411aa3c7a9f295",13,"2020-06-04 15:46:45+08:00","[FLINK-17017][runtime] Allow nullable timeout for
streaming slot request in slot pool
",850408,10049,392290,"Zhu Zhu","reedpor@gmail.com","Zhu Zhu","reedpor@gmail.com"
"8240","apache/flink","0b071a9d8e6a49294eb2db659d677ae2006942f5",1,"2020-06-11 16:20:46+02:00","[hotfix] Add @Nullable annotation to
FutureUtils.getWithoutException
",851236,10060,392609,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8241","apache/flink","24201cc1b6c46c689abbff8635a01cec7b088983",1,"2020-06-07 08:19:41+08:00","[FLINK-18039][connector/common] Introduce a
RecreateOnResetOperatorCoordinator class to
recreate an OperatorCoordinator instance when
resetToCheckpoint() is invoked. Let
SourceCoordinator leverage
RecreateOnResetOperatorCoordinator to ensure a
clean checkpoint reset.
",852062,10067,392843,"Jiangjie (Becket) Qin","jiangjie.qj@alibaba-inc.com","Jiangjie (Becket) Qin","jiangjie.qj@alibaba-inc.com"
"8242","apache/flink","98434249e63220baa77d5a6b16e2fad6515e163c",2,"2020-06-11 11:06:32+03:00","[hotfix] Introduce TaskManagerExceptionUtils
",852158,10068,392910,"Andrey Zagrebin","azagrebin@apache.org","Andrey Zagrebin","azagrebin@apache.org"
"8243","apache/flink","276e8c66e877fcf891b3f665d68433552aa66de0",4,"2020-06-11 11:23:07+03:00","[FLINK-18250] Enrich OOM error messages with more
details in ClusterEntrypoint  This closes #.
",852183,10069,392940,"Andrey Zagrebin","azagrebin@apache.org","Andrey Zagrebin","azagrebin@apache.org"
"8244","apache/flink","8ca388ca0225ff22f532c8a65f97d8cfea027c22",9,"2020-06-05 01:16:27+08:00","[FLINK-17800][roksdb] Ensure total order seek to
avoid user misuse
",852332,10070,392985,"Yun Tang","myasuka@live.com","Yu Li","liyu@apache.org"
"8245","apache/flink","7ce45b5c846fa276c21e2c7aa4b9ff1c29ddb1f7",2,"2020-06-15 20:44:36+08:00","[FLINK-18086][tests] Support to set standard
inputs for AutoClosableProcess
",853016,10077,393179,"Jark Wu","jark@apache.org","Jark Wu","jark@apache.org"
"8246","apache/flink","acd0de80095c386caca7c0acca07ed438479cedc",2,"2020-06-15 13:05:03+02:00","[FLINK-18301][e2e] Backup kafka logs on failure
",853241,10079,393257,"Chesnay Schepler","chesnay@apache.org","Chesnay Schepler","chesnay@apache.org"
"8247","apache/flink","1bacaeeef1ac0ee74af9efc5ec3d812e958e49a0",2,"2020-06-15 21:43:32+02:00","[FLINK-18094][network] Buffers are only addressed
through InputChannelInfo.  This removes the need
to translate the InputChannelInfo back and forth
to flattened indexes across all InputGates. All
index-based data structures are replaced by maps
that associate a certain state to a given
InputChannelInfo. For performance reasons, these
maps are fully initialized upon construction, such
that no nodes need to be added/removed during
runtime and only values are updated. Additionally,
this commit unifies the creation of
BarrierHandlers (similar signature) and removes
the error-prone offset handling from
CheckpointedInputGate.
",853072,10078,393168,"Arvid Heise","arvid@ververica.com","Piotr Nowojski","pnowojski@users.noreply.github.com"
"8248","apache/flink","df9a88229b75d9e1adfa9dad6916cd65c3c7d409",1,"2020-06-17 17:57:57+08:00","[FLINK-17019][runtime] Remap orphaned slot
allocation to pending slot request which just lost
its allocation
",853279,10075,393065,"Zhu Zhu","reedpor@gmail.com","Zhu Zhu","reedpor@gmail.com"
"8249","apache/flink","dc102ecc4aef38fd7ddeaeeec86e16d10a609098",2,"2020-06-19 15:53:08+02:00","[FLINK-18378] Improve CatalogTable schema
resolution  This closes #12725
",853725,10077,393125,"Dawid Wysakowicz","dwysakowicz@apache.org","Dawid Wysakowicz","dwysakowicz@apache.org"
"8250","apache/flink","ec4d155101faa2c1979c4981457e63d657068169",1,"2020-06-17 13:04:56+08:00","[FLINK-17769] Wrong order of log events on a task
failure  When a task failure occurs, the error of
disposing of an operator is logged before the real
rootcasue is printed, which is confusing.  This
fix suppressed exception occurring in disposing of
an operator and attached the exception together
with the rootcause.
",853737,10077,393125,"Yuan Mei","yuanmei.work@gmail.com","Piotr Nowojski","piotr.nowojski@gmail.com"
"8251","apache/flink","05f7d3e6d5129eabc34c93523f63f1f436284469",8,"2020-06-22 11:32:33+02:00","[FLINK-18406] Add Nullable annotation to
DualKeyLinkedMap.getValueByKeyA  [FLINK-18406] Add
Nullable annotation to
DualKeyLinkedMap.getValueByKeyB  [FLINK-18406] Add
NullableAnnotation to
DualKeyLinkedMap.getKeyAByKeyB  [FLINK-18406] Add
Nullable annotation to
DualKeyLinkedMap.getKeyBByKeyA  [FLINK-18406] Add
Nullable annotation to DualKeyLinkeMap put,
removeKeyA and removeKeyB  This closes #12738.
",853788,10077,393121,"Till Rohrmann","trohrmann@apache.org","Till Rohrmann","trohrmann@apache.org"
"8252","apache/flink","1414bac01817fe522bbe254c1394a1e78e12062e",1,"2020-06-20 23:58:55+08:00","[FLINK-18399][table-api-java] Fix
TableResult#print can not print the result of
unbounded stream query  This closes #12728.
",854423,10089,393534,"godfreyhe","godfreyhe@163.com","Timo Walther","twalthr@apache.org"
"8253","apache/flink","2210aff098e486e44a1731d5306d56121a8a2246",31,"2020-07-08 10:00:29+02:00","[FLINK-17075][coordination] Reconcile deployed
Executions
",855479,10104,393980,"Chesnay Schepler","chesnay@apache.org","GitHub","noreply@github.com"
"8254","apache/flink","df4f9bc5b00b14fd1d01b45c20a754d07c1d2ea7",1,"2020-07-08 15:08:43+02:00","[FLINK-18520][table] Fix unresolvable catalog
table functions  This closes #12857.
",855586,10105,394007,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8255","apache/flink","03934b36102f4035e56fe446a1008604b8d7dd81",2,"2020-07-07 17:21:23+08:00","[FLINK-18490][python] Refactor
PythonFunctionRunner to make it more general  This
closes #12841.
",854780,10092,393691,"huangxingbo","hxbks2ks@gmail.com","Dian Fu","dianfu@apache.org"
"8256","apache/flink","ee653778689023ddfdf007d5bde1daad8fbbc081",1,"2020-07-10 16:41:08+08:00","[FLINK-18361][es][table] Support username and
password options for new Elasticsearch connector
Co-authored-by: zhisheng17
<zhisheng2018@gmail.com>    This closes #12715
",855242,10094,393759,"Yangze Guo","karmagyz@gmail.com","GitHub","noreply@github.com"
"8257","apache/flink","a028ba216a35a70c4f2d337bdede195bf7701192",2,"2020-07-08 13:48:35+02:00","[FLINK-18528][table] Update UNNEST to new type
system  This closes #12862.
",855405,10095,393800,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8258","apache/flink","9c4a984565f28996d19beb78f87871746e0d6906",4,"2020-07-17 18:43:40+08:00","[FLINK-18588][hive] hive ddl create table support
'if not exists'  This closes #12888
",856476,10107,394240,"wtog","39434237+wtog@users.noreply.github.com","JingsongLi","lzljs3620320@aliyun.com"
"8259","apache/flink","758b1bdd57c46f51db7a2bc2e7fd73f4932fe0cf",4,"2020-07-10 09:40:59+02:00","[FLINK-18537][table] Replace RowDataTypeInfo with
InternalTypeInfo  TypeInformation is a legacy
class for the sole purpose of creating a
TypeSerializer. Instances of TypeInformation are
not required in the table ecosystem but sometimes
enforced by interfaces of other modules (such as
org.apache.flink.api.dag.Transformation).
Therefore, we introduce InternalTypeInfo which
acts as an adapter whenever type information is
required. Instances of InternalTypeInfo should
only be created for passing it to interfaces that
require type information. The class should not be
used as a replacement for a LogicalType.
Information such as the arity of a row type, field
types, field names, etc. should be derived from
the LogicalType directly.  This closes #12900.
",856383,10108,394319,"Timo Walther","twalthr@apache.org","Timo Walther","twalthr@apache.org"
"8260","apache/flink","fe0d001896b4a59e0351348362850c7714b3628c",1,"2020-07-08 16:26:17+08:00","[FLINK-17425][table-planner-blink] Support
SupportsFilterPushDown on ScanTableSource in
planner  This closes #12866
",856633,10109,394356,"liuyongvs","liuyongvs@gmail.com","Jark Wu","jark@apache.org"
"8261","apache/flink","c895737c43814a501888e2e3929f0123edc2af70",1,"2020-07-23 13:51:49+08:00","[FLINK-18621][sql-client] Simplify the methods of
Executor interface in sql client  This closes
#12923
",857027,10118,394607,"godfrey he","godfreyhe@163.com","GitHub","noreply@github.com"
"8262","apache/flink","d0ba79e27f7e390d1530def3517c1b4e22a60c1c",3,"2020-07-24 16:15:25+08:00","[FLINK-18638][runtime] Add optional timeout
message to FutureUtils.orTimeout
",857665,10129,394958,"zhangmang","zhangmang1@163.com","GitHub","noreply@github.com"
"8263","realm/realm-java","4d301dfe6294884ab6d81ebf169df0fce358023b",1,"2015-12-16 09:54:42-05:00","Adding example that shows how to pass objects via
ids  Extract method and provide context in the
example.
",34123,296,11919,"Donn Felker","donn@donnfelker.com","Donn Felker","donn@donnfelker.com"
"8264","realm/realm-java","b9bcb6fd9907e6f19a9790fc3cc0716e6611dcd1",1,"2016-01-07 09:51:33+01:00","Add dropdown
",35037,313,12299,"Christian Melchior","christian@ilios.dk","Christian Melchior","christian@ilios.dk"
"8265","realm/realm-java","5a8826a67d2c25864c40ef67dc6d95f94252c6e1",6,"2016-01-07 18:34:51+01:00","Title spinner now working correctly.
",35049,313,12301,"Christian Melchior","christian@ilios.dk","Christian Melchior","christian@ilios.dk"
"8266","realm/realm-java","5e20952decab2a2f4dda826a06a21a3b93115665",18,"2017-07-24 10:29:59+09:00","add Nullable annotation to methods that can return
'null' (#4999)  * add Nullable annotation to
methods that can return 'null'    * add changelog
entry for introfucinf  annotation.    * fix Kotlin
example    * fix Kotlin test
",58900,523,21263,"Makoto Yamazaki","makoto1975@gmail.com","GitHub","noreply@github.com"
"8267","realm/realm-java","19e45278726ecb90f1d37b39146753b46537c4bb",149,"2017-08-10 17:23:10+09:00","Add @Nullable annotation to public APIs (#5044)  *
add @Nullable annotation to parameters and
suppress null related warnings    * add @Nullable
annotation to objectserver APIs    * fix compile
error in example    * remove @Nullable annotation
from equals(Object)    * remove @Nonnull
annotation from each overriding methods. Add more
package-infos instead.    * remove @Nonnull from
parameters    * remove @Nonnull from parameters
* remove @Nonnull from parameters    * remove
unused import    * remove unused import    * add
'Nullability by Annotataion' section to
CONTRIBUTING.md    * fix typo in CONTRIBUTING.md
* replace 'assert' with 'noinspection' comment
* add more @Nullable annotation to address
findbugs warnings
",60330,534,22031,"Makoto Yamazaki","makoto1975@gmail.com","GitHub","noreply@github.com"
"8268","realm/realm-java","e3b2ce24354763fdaf2385163ff132921edea5d1",5,"2017-08-23 16:21:11+08:00","Final step for OS schema integration (#5065)  -
Build the column indices cache from OsSchemaInfo.
Not like before, the column indices are not built
when the Realm    instance is created. Instead,
they will only be built when the relevant
RealmObject needs to be accessed.  - Column
indices cache system has been changed. Different
Realm instance    will not share the same cache.
Instead, every Realm instance will have    its own
cache. So we don't rely on the schema version any
more. The    cache can handle the situation when
the schema versions are the same but    schemas
are not.  - Refresh column indices cache when
schema changes. This is also    supported in
multi-processes environment.  - Almost all of the
Realm initialization work is handled by Object
Store. So we have the same routine for both
sync/non-sync Realm. Also    the initialization
routine has be simplified a lot in java side.  - A
new class OsRealmConfig is introduced to solve the
20+ arguments    need to be passed to JNI to
create Realm config.  - The transaction for schema
initialization should be cancelled if    exception
happens in Java migration/initialization
callbacks.
",60232,532,22026,"Chen Mulong","chenmulong@gmail.com","GitHub","noreply@github.com"
"8269","realm/realm-java","b49e7d96bcb878ac1a6af560f9345702ff6d6feb",1,"2017-09-01 21:01:15+02:00","Permission API's (#4558)  Add PermissionManager as
a convenience API on top of the __permission and
__management realms.    This PR adds support for
- Listing permissions  - Changing permissions  -
Creating offers  - Accepting offers  - Revoking
offers
",62375,545,22956,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8270","realm/realm-java","0e779b51694c6dfb755257933ddada013d894c42",4,"2017-09-11 10:42:27+02:00","RxJava2 Support (#4991)  * Moved all API's to
RxJava2  * Added support change changeset
observables
",63245,546,23246,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8271","realm/realm-java","9ac6893f1e955c994cd507df7d50a80f3cc176ee",2,"2017-09-12 21:55:38+09:00","Converting examples to RxJava2 (#5141)  * Add
changelog    * Move Pair into public API (#5081)
* Convert RxJava1 to RxJava2 (#4992)    * Apply
rxjava2 to unitTestExample    * Update Jenkinsfile
to store junit result of unitTestExample.    *
Convert newsreaderExample to RxJava2.    *
RxJava2: Add support for changeset observables
(#5089)    * Update rxJavaExample and improve some
formatting.    * Fix unit testing.    * Fix
build.gradle.    * Update build.gradle to fix lint
errors.    * Improve some formatting.    * Improve
formatting.    * Update style of RxJavaExample.
* Add missing colors.xml file.    * Update styles
and colors.    * Rename some disposables.    * PR
feedback.    * flatMap -> switchMap and improve
formatting.    * Improve formatting.    *
Converting newsreaserExample to lambda.    *
Improve formatting.    * Improve formatting.    *
Apply RxJava2 to unit testing.    * Improve
formatting.    * Apply Lambda to rxJavaExample.
* Improve formatting.    * PR feedback    * Re-
enable RxJava2 examples    *
CompositeDisposable.dispose() ->
CompositeDisposable.clear()    * PR feedback.
",63123,546,23245,"LYK","dalinaum@gmail.com","GitHub","noreply@github.com"
"8272","realm/realm-java","6536877ccfe167fb196ef3faed5105bc2ad57a2b",3,"2017-09-20 23:19:33+01:00","Client reset fixes #4759 (#5159)  * Exposing a
`SyncConfiguration` that allows a user to open the
backup Realm after the client reset (#4759).
",62979,546,23294,"Nabil Hachicha","nabil.hachicha@gmail.com","GitHub","noreply@github.com"
"8273","realm/realm-java","9dbf26fa6ca55a0b5f3ce957fe7157fd65ef869a",5,"2017-09-21 15:38:35+08:00","Always use object store to create PK table (#5284)
- Add OsObjectStore class to wrap methods in
ObjectStore.hpp.  - Use ObjectStore to create meta
tables.  - Use ObjectStore to get/set primary key.
- Always create meta tables when open a non-exist,
non-readonly Dynamic    Realm.  - Clean code.
",62862,545,23257,"Chen Mulong","chenmulong@gmail.com","GitHub","noreply@github.com"
"8274","realm/realm-java","3f6844a3cc82859d746437b4c4106c13601222f4",2,"2017-09-25 11:08:10+01:00","4.0 API breaking changes  (#5314)  * Refactored
deprecated `Callback`    * SyncUser: renamed
`getAccessToken` + method is no longer public
",62770,545,23193,"Nabil Hachicha","nabil.hachicha@gmail.com","GitHub","noreply@github.com"
"8275","realm/realm-java","d9e0ae4ac083286c5440cc4bdb0f18d9c70fdb45",67,"2017-10-01 19:14:49+09:00","Add Supports for Primitive Lists (#5031)  *
Extended Annotation Processor to support it in
model classes  * Relaxed Generic Constraints  *
Support in insert/insertOrUpdate  * Support in
copyToRealm/copyToRealmOrUpdate  * Support in
copyFromRealm
",68506,555,23852,"Makoto Yamazaki","makoto1975@gmail.com","Christian Melchior","christian@ilios.dk"
"8276","realm/realm-java","b922b099a8fc865e04d20d19261792abe55fcec8",3,"2017-10-03 12:43:20+02:00","RealmObjectSchema and DynamicRealm support for
Lists of Primitives (#5329)
",69224,559,24002,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8277","realm/realm-java","c30bc22134403d8a98ecb492d9a6deaf2db6e73f",7,"2017-10-23 16:25:14+08:00","Rename Collection to OsResults
",69324,559,24040,"Chen Mulong","chenmulong@gmail.com","Chen Mulong","chenmulong@gmail.com"
"8278","realm/realm-java","77d99b06408b2d3705f6404e0c6c484f9c404223",9,"2017-10-31 17:59:54+08:00","Rename SharedRealm to OsSharedRealm (#5482)
",69312,559,24043,"Chen Mulong","chenmulong@gmail.com","GitHub","noreply@github.com"
"8279","realm/realm-java","0bcb9559dddf071eeee0c9c3d3a2946f3a15eb51",2,"2017-11-16 11:10:02+08:00","Support importing primitive list from JSON (#5505)
Close #5362
",69884,565,24108,"Chen Mulong","chenmulong@gmail.com","GitHub","noreply@github.com"
"8280","realm/realm-java","dc6c9a77c4f67066011014e06702d3e3568865df",2,"2018-01-16 08:31:11+01:00","Add implicit support for Partial Sync and add
States to OrderedChangeSet (#5611)
",70778,569,24490,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8281","realm/realm-java","f089a8789312e0cacad5621a4de6677936635d57",1,"2018-01-29 08:47:01+01:00","Support for overriding internal names using
annotations (#5280)  * Add support for @RealmName
which makes it possible to override the name of
classes and fields.    * Remove RealmName
annotation. Add methods for specifying names to
RealmModule, RealmClass and a new RealmField
annotation.    * Fix compile issues    * Fix
Javadoc and most unit tests.    * Add test for
conflicting modules    * Begun work on checking
conflicting policies    * Fix merge    * Use
correct version of Object Store    * Better docs
* Backup    * Processor tests are green    *
Fleshing out unit tests for using name policies in
annotations    * Cleanup    * Fix required value
lists + cleanup    * Fix module defaults not being
correctly applied    * Add support and unit tests
for field name overrides    * Add changelog    *
Javadoc updates    * Use custom built parser for
converting variable names    * Better Javadoc    *
RealmField is now retained at Runtime    * Fix
unit tests    * Unify build tools    * Cleanup
* Remove FIXMEs    * Fix tests after merge from
master    * PR feedback    * More PR feedback    *
PR feedback    * More PR feedback    * Output
correctly internal name    * Fix library module
mediators not being correctly created    * Fix
missing spaces in error message    * Better
example    * Improve wording
",71999,594,25237,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8282","realm/realm-java","6171847cf149733e66ef93dad72b63613e756ce8",3,"2018-02-26 16:57:49+01:00","Refactor Partial Sync to use Object Store master
(#5759)
",72592,603,25404,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8283","realm/realm-java","7d08fa406d81f50d2ceb42cfbd0b47a7d3999743",2,"2018-03-01 22:31:31+01:00","Add support for Object Level Permissions (#5729)
",73786,618,26461,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8284","realm/realm-java","a83b980e30665ef2a4aa9078bd505e9b09425dc8",1,"2018-03-12 14:34:10+00:00","logout logging not resuming sync (#5820)  * Fixes
https://github.com/realm/my-first-realm-
app/issues/22 logout/login resume syncing
",70580,566,24390,"Nabil Hachicha","nabil.hachicha@gmail.com","GitHub","noreply@github.com"
"8285","realm/realm-java","be73c40212edf7627f1a3b99eb22551e91e385e0",19,"2018-03-16 21:00:05+11:00","Add architectureComponentsExample (#4685)
",74346,629,26745,"Makoto Yamazaki","makoto1975@gmail.com","Christian Melchior","christian@ilios.dk"
"8286","realm/realm-java","ad88afe897a9fe6ca6f00fb04586e78f06b1b539",10,"2018-04-17 11:43:56+02:00","Support empty input to in and alwaysTrue and
alwaysFalse (#5898)  * Support empty input to in
and two new predicates: alwaysTrue and alwaysFalse
* Fix spelling mistakes in docs    * Kotlin docs
should match java docs
",74492,629,26827,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8287","realm/realm-java","0e1464114782f88165309bd0d73d13a8fde72ab7",2,"2018-06-25 09:59:12+01:00","fixes #5855 (#6010)  * Fixes #5855
",75076,633,27206,"Nabil Hachicha","nabil.hachicha@gmail.com","GitHub","noreply@github.com"
"8288","realm/realm-java","047b2080b0288c16bf8bd5e681317d21ae8bada5",1,"2018-08-10 11:20:49+02:00","Add support for Connection State listeners (#6091)
",75334,635,27387,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8289","realm/realm-java","bf8776dd8bc978cfff499fc8eb4b0e80be78bbdc",5,"2018-08-31 07:37:20+02:00","Add support for custom headers for improved proxy
support. (#6131)
",75820,642,27634,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8290","realm/realm-java","e3cb81cf5707e5fc8ad1bd83729bc80f901ebde4",1,"2018-09-24 12:10:51+02:00","Support LIMIT (#6126)
",76106,646,27749,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8291","realm/realm-java","1c71cac78dfe029c6a8b3822fbf338c54693383e",1,"2018-10-26 19:14:49+02:00","Expose subscriptions more directly (#6231)
",76669,649,28071,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8292","realm/realm-java","9dfeb14ff6e0cea8f3f5a6418a778f22d1245be0",14,"2018-11-05 07:19:50-08:00","Add support for bulk updating fields in query
results (#5133)
",78820,655,28547,"G. Blake Meike","blake.meike@gmail.com","Christian Melchior","christian@ilios.dk"
"8293","realm/realm-java","22e9550594c0a2469d0bc62c5e85ac24f2fae130",5,"2019-01-15 09:35:15+01:00","Add support for native error category and code
(#6379)
",78921,655,28598,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8294","realm/realm-java","40bd57486076f2bba79f8ccc8891f07137c8dcba",5,"2019-03-21 20:55:29+01:00","Better Subscription lifecycle management (#6456)
",79066,651,28758,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8295","realm/realm-java","3e2f9d724eb599da3d6d9ba3c7952ad638dde663",1,"2019-05-01 10:25:35+02:00","Including LinkingObjects in subscriptions (#6489)
",79264,652,28810,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8296","realm/realm-java","e32b141b6a68236192f7c235d317f9a350c38a5e",1,"2019-08-29 10:18:08+02:00","Add support for Client Resync (#6596)
",75351,622,27628,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8297","realm/realm-java","4fbdcfcf845442150a7d688c50634dcaeb10d24a",19,"2019-09-30 12:37:17+02:00","Replace Permissions with REST API (#6615)
",74537,626,27520,"Christian Melchior","christian@ilios.dk","GitHub","noreply@github.com"
"8298","realm/realm-java","bc6e3a003b706be5b316ad8ae067f3d2b40c971c",31,"2019-12-12 12:41:48+00:00","Core 6 upgrade  (#6107)  * Add support for frozen
objects
",74781,628,27755,"Nabil Hachicha","nh@realm.io","GitHub","noreply@github.com"
